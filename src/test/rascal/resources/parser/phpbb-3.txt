 ["/**
* @package module_install
*/",
 "/**
* Set forum flags - only prune old polls by default
*/",
 "/**
* Insert/Convert forums
*/",
 "/**
* Function for recoding text with the default language
*
* @param string $text text to recode to utf8
* @param bool $grab_user_lang if set to true the function tries to use $convert_row[\'user_lang\'] (and falls back to $convert_row[\'poster_id\']) instead of the boards default language
*/",
 "/**
* Same as phpbb_set_encoding, but forcing boards default language
*/",
 "/**
* Convert Birthday from Birthday MOD to phpBB Format
*/",
 "/**
* Return correct user id value
* Everyone\'s id will be one higher to allow the guest/anonymous user to have a positive id as well
*/",
 "/**
* Convert authentication
* user, group and forum table has to be filled in order to work
*/",
 "/**
* Set primary group.
* Really simple and only based on user_level (remaining groups will be assigned later)
*/",
 "/**
* Convert the group name, making sure to avoid conflicts with 3.0 special groups
*/",
 "/**
* Convert the group type constants
*/",
 "/**
* Convert the topic type constants
*/",
 "/**
* Reparse the message stripping out the bbcode_uid values and adding new ones and setting the bitfield
* @todo What do we want to do about HTML in messages - currently it gets converted to the entities, but there may be some objections to this
*/",
 "/**
* Return the bitfield calculated by the previous function
*/",
 "/**
* Determine the last user to edit a post
* In practice we only tracked edits by the original poster in 2.0.x so this will only be set if they had edited their own post
*/",
 "/**
* Obtain the path to uploaded files on the 2.0.x forum
* This is only used if the Attachment MOD was installed
*/",
 "/**
* Copy thumbnails of uploaded images from the 2.0.x forum
* This is only used if the Attachment MOD was installed
*/",
 "/**
* Convert the attachment category constants
* This is only used if the Attachment MOD was installed
*/",
 "/**
* Obtain list of forums in which different attachment categories can be used
*/",
 "/**
* Convert the avatar type constants
*/",
 "/**
* Just undos the replacing of \'<\' and \'>\'
*/",
 "/**
* Transfer avatars, copying the image if it was uploaded
*/",
 "/**
* Find out about the avatar\'s dimensions
*/",
 "/**
* Find out about the avatar\'s dimensions
*/",
 "/**
* Calculate the correct to_address field for private messages
*/",
 "/**
* Calculate whether a private message was unread using the bitfield
*/",
 "/**
* Calculate whether a private message was new using the bitfield
*/",
 "/**
* Obtain the folder_id for the custom folder created to replace the savebox from 2.0.x (used to store saved private messages)
*/",
 "/**
* Transfer attachment specific configuration options
* These were not stored in the main config table on 2.0.x
* This is only used if the Attachment MOD was installed
*/",
 "/**
* Calculate the date a user became inactive
*/",
 "/**
* Calculate the reason a user became inactive
* We can\'t actually tell the difference between a manual deactivation and one for profile changes
* from the data available to assume the latter
*/",
 "/**
* Adjust 2.0.x disallowed names to 3.0.x format
*/",
 "/**
* Checks whether there are any usernames on the old board that would map to the same
* username_clean on phpBB3. Prints out a list if any exist and exits.
*/",
 "/**
* View topic in MCP
*/",
 "/**
* Split topic
*/",
 "/**
* Merge selected posts into selected topic
*/",
 "/**
* MCP Front Panel
*/",
 "/**


*/",
 "/**
* Wraps an url into a simple html page. Used to display attachments in IE.
* this is a workaround for now; might be moved to template system later
* direct any complaints to 1 Microsoft Way, Redmond
*/",
 "/**
* Send file to browser
*/",
 "/**
* Get a browser friendly UTF-8 encoded filename
*/",
 "/**
* Check if downloading item is allowed
*/",
 "/**
* Check if the browser has the file already and set the appropriate headers-
* @returns false if a resend is in order.
*/",
 "/**
* @package module_install
*/",
 "/**
* @package module_install
*/",
 "/**
* @package module_install
*/",
 "/**
* Checks whether the user is identified to apache
* Only allow changing authentication to apache if the user is identified
* Called in acp_board while setting authentication plugins
*
* @return boolean|string false if the user is identified and else an error message
*/",
 "/**
* Login function
*/",
 "/**
* Autologin function
*
* @return array containing the user row or empty if no auto login should take place
*/",
 "/**
* This function generates an array which can be passed to the user_add function in order to create a user
*/",
 "/**
* The session validation function checks whether the user is still logged in
*
* @return boolean true if the given user is authenticated or false if the session should be closed
*/",
 "/**
	* Entry point for delivering image CAPTCHAs in the ACP.
	*/",
 "/**
* @package acp
*/",
 "/**
	* Get config values
	*/",
 "/**
	* Obtain list of naughty words and build preg style replacement arrays for use by the
	* calling script
	*/",
 "/**
	* Obtain currently listed icons
	*/",
 "/**
	* Obtain ranks
	*/",
 "/**
	* Obtain allowed extensions
	*
	* @param mixed $forum_id If false then check for private messaging, if int then check for forum id. If true, then only return extension informations.
	*
	* @return array allowed extensions array.
	*/",
 "/**
	* Obtain active bots
	*/",
 "/**
	* Obtain cfg file data
	*/",
 "/**
	* Obtain disallowed usernames
	*/",
 "/**
	* Obtain hooks...
	*/",
 "/**
* Class for grabbing/handling cached entries, extends acm_file or acm_db depending on the setup
* @package acm
*/",
 "/**
	* Connect to server
	*/",
 "/**
	* Version information about used database
	* @param bool $raw if true, only return the fetched sql_server_version
	* @param bool $use_cache If true, it is safe to retrieve the value from the cache
	* @return string sql server version
	*/",
 "/**
	* SQL Transaction
	* @access private
	*/",
 "/**
	* Base query method
	*
	* @param	string	$query		Contains the SQL query which shall be executed
	* @param	int		$cache_ttl	Either 0 to avoid caching or the time in seconds which the result shall be kept in cache
	* @return	mixed				When casted to bool the returned value returns true on success and false on failure
	*
	* @access	public
	*/",
 "/**
	* Build LIMIT query
	*/",
 "/**
	* Return number of affected rows
	*/",
 "/**
	* Fetch current row
	* @note number of bytes returned depends on odbc.defaultlrl php.ini setting. If it is limited to 4K for example only 4K of data is returned max.
	*/",
 "/**
	* Seek to given row number
	* rownum is zero-based
	*/",
 "/**
	* Get last inserted id after insert statement
	*/",
 "/**
	* Free sql result
	*/",
 "/**
	* Escape string used in sql query
	*/",
 "/**
	* Build LIKE expression
	* @access private
	*/",
 "/**
	* Build db-specific query data
	* @access private
	*/",
 "/**
	* return sql error array
	* @access private
	*/",
 "/**
	* Close sql connection
	* @access private
	*/",
 "/**
	* Build db-specific report
	* @access private
	*/",
 "/**
* Unified ODBC functions
* Unified ODBC functions support any database having ODBC driver, for example Adabas D, IBM DB2, iODBC, Solid, Sybase SQL Anywhere...
* Here we only support MSSQL Server 2000+ because of the provided schema
*
* @note number of bytes returned for returning data depends on odbc.defaultlrl php.ini setting.
* If it is limited to 4K for example only 4K of data is returned max, resulting in incomplete theme data for example.
* @note odbc.defaultbinmode may affect UTF8 characters
*
* @package dbal
*/",
 "/**
	* Constructor - init some basic values
	*/",
 "/**
	* Write file to location
	*/",
 "/**
	* Moving file into location. If the destination file already exists it gets overwritten
	*/",
 "/**
	* Create directory structure
	*/",
 "/**
	* Copy file from source location to destination location
	*/",
 "/**
	* Remove file
	*/",
 "/**
	* Remove directory
	* @todo remove child directories?
	*/",
 "/**
	* Rename a file or folder
	*/",
 "/**
	* Check if a specified file exist...
	*/",
 "/**
	* Open session
	*/",
 "/**
	* Close current session
	*/",
 "/**
	* Determine methods able to be used
	*/",
 "/**
* Transfer class, wrapper for ftp/sftp/ssh
* @package phpBB3
*/",
 "/**

	*/",
 "/**

	*/",
 "/**


	*/",
 "/**


	*/",
 "/**


	*/",
 "/**


	*/",
 "/**


	*/",
 "/**


	*/",
 "/**


	*/",
 "/**


	*/",
 "/**


	*/",
 "/**



	*/",
 "/**


	*/",
 "/**


	*/",
 "/**


*/",
 "/**

	*/",
 "/**

	*/",
 "/**


	*/",
 "/**


	*/",
 "/**


	*/",
 "/**


	*/",
 "/**


	*/",
 "/**


	*/",
 "/**


	*/",
 "/**


	*/",
 "/**


	*/",
 "/**
	* Return current working directory (CWD)
	* At the moment not used by parent class
	* @access private
	*/",
 "/**


	*/",
 "/**


	*/",
 "/**


	*/",
 "/**


	*/",
 "/**


	*/",
 "/**

*


*/",
 "/**
	* Set default language variables/header
	*/",
 "/**
	* Get filename/location of language file
	*/",
 "/**
	* Add files to archive
	*/",
 "/**
	* Little helper to add some hardcoded template bits
	*/",
 "/**
	* Print language entries
	*/",
 "/**
	* Compare two language files
	*/",
 "/**

	*/",
 "/**

	*/",
 "/**

*/",
 "/**
	* Add file to archive
	*/",
 "/**
	* Add custom file (the filepath will not be adjusted)
	*/",
 "/**
	* Add file data
	*/",
 "/**
	* Return available methods
	*/",
 "/**
* Class for handling archives (compression/decompression)
* @package phpBB3
*/",
 "/**
	* Constructor
	*/",
 "/**
	* Convert unix to dos time
	*/",
 "/**
	* Extract archive
	*/",
 "/**
	* Close archive
	*/",
 "/**

	*/",
 "/**
	*file
	*/",
 "/**
	* Download archive
	*/",
 "/**
* Zip creation class from phpMyAdmin 2.3.0 (c) Tobias Ratschiller, Olivier M?ller, Lo?c Chapeaux,
* Marc Delisle, http://www.phpmyadmin.net/
*
* Zip extraction function by Alexandre Tedeschi, alexandrebr at gmail dot com
*
* Modified extensively by psoTFX and DavidMJ, (c) phpBB Group, 2003
*
* Based on work by Eric Mueller and Denis125
* Official ZIP file format: http://www.pkware.com/appnote.txt
*
* @package phpBB3
*/",
 "/**
	* Constructor
	*/",
 "/**
	* Extract archive
	*/",
 "/**
	* Close archive
	*/",
 "/**
	* Create the structures
	*/",
 "/**
	* Open archive
	*/",
 "/**
	* Download archive
	*/",
 "/**
* Tar/tar.gz compression routine
* Header/checksum creation derived from tarfile.pl, (c) Tom Horsley, 1994
*
* @package phpBB3
*/",
 "/**
* $convertor_data provides some basic information about this convertor which is
* used on the initial list of convertors and to populate the default settings
*/",
 "/**
* $tables is a list of the tables (minus prefix) which we expect to find in the
* source forum. It is used to guess the prefix if the specified prefix is incorrect
*/",
 "/**
* $config_schema details how the board configuration information is stored in the source forum.
*
* \'table_format\' can take the value \'file\' to indicate a config file. In this case array_name
* is set to indicate the name of the array the config values are stored in
* Example of using a file:
* $config_schema = array(
* 	\'table_format\'	=>	\'file\',
* 	\'filename\'	=>	\'NAME OF FILE\', // If the file is not in the root directory, the path needs to be added with no leading slash
* 	\'array_name\' => \'NAME OF ARRAY\', // Only used if the configuration file stores the setting in an array.
* 	\'settings\'		=>	array(
*        \'board_email\' => \'SUPPORT_EMAIL\', // target config name => source target name
* 	)
* );
* \'table_format\' can be an array if the values are stored in a table which is an assosciative array
* (as per phpBB 2.0.x)
* If left empty, values are assumed to be stored in a table where each config setting is
* a column (as per phpBB 1.x)
*
* In either of the latter cases \'table_name\' indicates the name of the table in the database
*
* \'settings\' is an array which maps the name of the config directive in the source forum
* to the config directive in phpBB3. It can either be a direct mapping or use a function.
* Please note that the contents of the old config value are passed to the function, therefore
* an in-built function requiring the variable passed by reference is not able to be used. Since
* empty() is such a function we created the function is_empty() to be used instead.
*/",
 "/**
* $test_file is the name of a file which is present on the source
* forum which can be used to check that the path specified by the
* user was correct
*/",
 "/**
*	Description on how to use the convertor framework.
*
*	\'schema\' Syntax Description
*		-> \'target\'			=> Target Table. If not specified the next table will be handled
*		-> \'primary\'		=> Primary Key. If this is specified then this table is processed in batches
*		-> \'query_first\'	=> array(\'target\' or \'src\', Query to execute before beginning the process
*								(if more than one then specified as array))
*		-> \'function_first\'	=> Function to execute before beginning the process (if more than one then specified as array)
*								(This is mostly useful if variables need to be given to the converting process)
*		-> \'test_file\'		=> This is not used at the moment but should be filled with a file from the old installation
*
*		// DB Functions
*		\'distinct\'	=> Add DISTINCT to the select query
*		\'where\'		=> Add WHERE to the select query
*		\'group_by\'	=> Add GROUP BY to the select query
*		\'left_join\'	=> Add LEFT JOIN to the select query (if more than one joins specified as array)
*		\'having\'	=> Add HAVING to the select query
*
*		// DB INSERT array
*		This one consist of three parameters
*		First Parameter:
*							The key need to be filled within the target table
*							If this is empty, the target table gets not assigned the source value
*		Second Parameter:
*							Source value. If the first parameter is specified, it will be assigned this value.
*							If the first parameter is empty, this only gets added to the select query
*		Third Parameter:
*							Custom Function. Function to execute while storing source value into target table.
*							The functions return value get stored.
*							The function parameter consist of the value of the second parameter.
*
*							types:
*								- empty string == execute nothing
*								- string == function to execute
*								- array == complex execution instructions
*
*		Complex execution instructions:
*		@todo test complex execution instructions - in theory they will work fine
*
*							By defining an array as the third parameter you are able to define some statements to be executed. The key
*							is defining what to execute, numbers can be appended...
*
*							\'function\' => execute function
*							\'execute\' => run code, whereby all occurrences of {VALUE} get replaced by the last returned value.
*										The result *must* be assigned/stored to {RESULT}.
*							\'typecast\'	=> typecast value
*
*							The returned variables will be made always available to the next function to continue to work with.
*
*							example (variable inputted is an integer of 1):
*
*							array(
*								\'function1\'		=> \'increment_by_one\',		// returned variable is 2
*								\'typecast\'		=> \'string\',				// typecast variable to be a string
*								\'execute\'		=> \'{RESULT} = {VALUE} . \' is good\';\', // returned variable is \'2 is good\'
*								\'function2\'		=> \'replace_good_with_bad\',				// returned variable is \'2 is bad\'
*							),
*
*/",
 "/**
	* return an instance of class $name in file $name_plugin.php
	*/",
 "/**
	* Call the garbage collector
	*/",
 "/**
	* return a list of all discovered CAPTCHA plugins
	*/",
 "/**
* A small class for 3.0.x (no autoloader in 3.0.x)
*
* @package VC
*/",
 "/**
* @package acp
*/",
 "/**
* @package module_install
*/",
 "/**
* @package VC
*/",
 "/**
* @package module_install
*/",
 "/**
	* Assign editable fields to template, mode can be profile (for profile change) or register (for registration)
	* Called by ucp_profile and ucp_register
	* @access public
	*/",
 "/**


	*/",
 "/**


	*/",
 "/**

	*/",
 "/**


	*/",
 "/**
	* Update profile field data directly
	*/",
 "/**
	* Assign fields to template, used for viewprofile, viewtopic and memberlist (if load setting is enabled)
	* This is directly connected to the user -> mode == grab is to grab the user specific fields, mode == show is for assigning the row to the template
	* @access public
	*/",
 "/**
	* Get Profile Value for display
	*/",
 "/**
	* Get field value for registration/profile
	* @access private
	*/",
 "/**
	* Process int-type
	* @access private
	*/",
 "/**
	* Process date-type
	* @access private
	*/",
 "/**
	* Process bool-type
	* @access private
	*/",
 "/**
	* Process string-type
	* @access private
	*/",
 "/**
	* Process text-type
	* @access private
	*/",
 "/**
	* Process dropdown-type
	* @access private
	*/",
 "/**
	* Return Templated value/field. Possible values for $mode are:
	* change == user is able to set/enter profile values; preview == just show the value
	* @access private
	*/",
 "/**
	* Build Array for user insertion into custom profile fields table
	*/",
 "/**
	* Get profile field value on submit
	* @access private
	*/",
 "/**
* Custom Profile Fields
* @package phpBB3
*/",
 "/**
	* Return possible validation options
	*/",
 "/**
	* Get string options for second step in ACP
	*/",
 "/**
	* Get text options for second step in ACP
	*/",
 "/**
	* Get int options for second step in ACP
	*/",
 "/**
	* Get bool options for second step in ACP
	*/",
 "/**
	* Get dropdown options for second step in ACP
	*/",
 "/**
	* Get date options for second step in ACP
	*/",
 "/**
* Custom Profile Fields ACP
* @package phpBB3
*/",
 "/**
* ucp_profile
* Changing profile settings
*
* @todo what about pertaining user_sig_options?
* @package ucp
*/",
 "/**
* @package module_install
*/",
 "/**
	* Implementation of PHP\'s native utf8_encode for people without XML support
	* This function exploits some nice things that ISO-8859-1 and UTF-8 have in common
	*
	* @param string $str ISO-8859-1 encoded data
	* @return string UTF-8 encoded data
	*/",
 "/**
	* Implementation of PHP\'s native utf8_decode for people without XML support
	*
	* @param string $str UTF-8 encoded data
	* @return string ISO-8859-1 encoded data
	*/",
 "/**
		* UTF-8 aware alternative to strrpos
		* @ignore
		*/",
 "/**
		* UTF-8 aware alternative to strrpos
		* @ignore
		*/",
 "/**
	* UTF-8 aware alternative to strpos
	* @ignore
	*/",
 "/**
	* UTF-8 aware alternative to strtolower
	* @ignore
	*/",
 "/**
	* UTF-8 aware alternative to strtoupper
	* @ignore
	*/",
 "/**
	* UTF-8 aware alternative to substr
	* @ignore
	*/",
 "/**
	* Return the length (in characters) of a UTF-8 string
	* @ignore
	*/",
 "/**
	* UTF-8 aware alternative to strrpos
	* Find position of last occurrence of a char in a string
	*
	* @author Harry Fuecks
	* @param string $str haystack
	* @param string $needle needle
	* @param integer $offset (optional) offset (from left)
	* @return mixed integer position or FALSE on failure
	*/",
 "/**
	* UTF-8 aware alternative to strpos
	* Find position of first occurrence of a string
	*
	* @author Harry Fuecks
	* @param string $str haystack
	* @param string $needle needle
	* @param integer $offset offset in characters (from left)
	* @return mixed integer position or FALSE on failure
	*/",
 "/**
	* UTF-8 aware alternative to strtolower
	* Make a string lowercase
	* Note: The concept of a characters \"case\" only exists is some alphabets
	* such as Latin, Greek, Cyrillic, Armenian and archaic Georgian - it does
	* not exist in the Chinese alphabet, for example. See Unicode Standard
	* Annex #21: Case Mappings
	*
	* @param string
	* @return string string in lowercase
	*/",
 "/**
	* UTF-8 aware alternative to strtoupper
	* Make a string uppercase
	* Note: The concept of a characters \"case\" only exists is some alphabets
	* such as Latin, Greek, Cyrillic, Armenian and archaic Georgian - it does
	* not exist in the Chinese alphabet, for example. See Unicode Standard
	* Annex #21: Case Mappings
	*
	* @param string
	* @return string string in uppercase
	*/",
 "/**
	* UTF-8 aware alternative to substr
	* Return part of a string given character offset (and optionally length)
	*
	* Note arguments: comparied to substr - if offset or length are
	* not integers, this version will not complain but rather massages them
	* into an integer.
	*
	* Note on returned values: substr documentation states false can be
	* returned in some cases (e.g. offset > string length)
	* mb_substr never returns false, it will return an empty string instead.
	* This adopts the mb_substr approach
	*
	* Note on implementation: PCRE only supports repetitions of less than
	* 65536, in order to accept up to MAXINT values for offset and length,
	* we\'ll repeat a group of 65535 characters when needed.
	*
	* Note on implementation: calculating the number of characters in the
	* string is a relatively expensive operation, so we only carry it out when
	* necessary. It isn\'t necessary for +ve offsets and no specified length
	*
	* @author Chris Smith<chris@jalakai.co.uk>
	* @param string $str
	* @param integer $offset number of UTF-8 characters offset (from left)
	* @param integer $length (optional) length in UTF-8 characters from offset
	* @return mixed string or FALSE if failure
	*/",
 "/**
	* Return the length (in characters) of a UTF-8 string
	*
	* @param	string	$text		UTF-8 string
	* @return	integer				Length (in chars) of given string
	*/",
 "/**
* UTF-8 aware alternative to str_split
* Convert a string to an array
*
* @author Harry Fuecks
* @param string $str UTF-8 encoded
* @param int $split_len number to characters to split string by
* @return array characters in string reverses
*/",
 "/**
* UTF-8 aware alternative to strspn
* Find length of initial segment matching the mask
*
* @author Harry Fuecks
*/",
 "/**
* UTF-8 aware alternative to ucfirst
* Make a string\'s first character uppercase
*
* @author Harry Fuecks
* @param string
* @return string with first character as upper case (if applicable)
*/",
 "/**
* Recode a string to UTF-8
*
* If the encoding is not supported, the string is returned as-is
*
* @param	string	$string		Original string
* @param	string	$encoding	Original encoding (lowered)
* @return	string				The string, encoded in UTF-8
*/",
 "/**
* Replace all UTF-8 chars that are not in ASCII with their NCR
*
* @param	string	$text		UTF-8 string in NFC
* @return	string				ASCII string using NCRs for non-ASCII chars
*/",
 "/**
* Callback used in encode_ncr()
*
* Takes a UTF-8 char and replaces it with its NCR. Attention, $m is an array
*
* @param	array	$m			0-based numerically indexed array passed by preg_replace_callback()
* @return	string				A HTML NCR if the character is valid, or the original string otherwise
*/",
 "/**
* Converts a UTF-8 char to an NCR
*
* @param string $chr UTF-8 char
* @return integer UNICODE code point
*/",
 "/**
* Converts an NCR to a UTF-8 char
*
* @param	int		$cp	UNICODE code point
* @return	string		UTF-8 char
*/",
 "/**
* Convert Numeric Character References to UTF-8 chars
*
* Notes:
*	- we do not convert NCRs recursively, if you pass &#38;#38; it will return &#38;
*	- we DO NOT check for the existence of the Unicode characters, therefore an entity may be converted to an inexistent codepoint
*
* @param	string	$text		String to convert, encoded in UTF-8 (no normal form required)
* @return	string				UTF-8 string where NCRs have been replaced with the actual chars
*/",
 "/**
* Callback used in decode_ncr()
*
* Takes a NCR (in decimal or hexadecimal) and returns a UTF-8 char. Attention, $m is an array.
* It will ignore most of invalid NCRs, but not all!
*
* @param	array	$m			0-based numerically indexed array passed by preg_replace_callback()
* @return	string				UTF-8 char
*/",
 "/**
* Case folds a unicode string as per Unicode 5.0, section 3.13
*
* @param	string	$text	text to be case folded
* @param	string	$option	determines how we will fold the cases
* @return	string			case folded text
*/",
 "/**
* Takes the input and does a \"special\" case fold. It does minor normalization
* and returns NFKC compatable text
*
* @param	string	$text	text to be case folded
* @param	string	$option	determines how we will fold the cases
* @return	string			case folded text
*/",
 "/**
* Assume the input is NFC:
* Takes the input and does a \"special\" case fold. It does minor normalization as well.
*
* @param	string	$text	text to be case folded
* @param	string	$option	determines how we will fold the cases
* @return	string			case folded text
*/",
 "/**
* A wrapper function for the normalizer which takes care of including the class if required and modifies the passed strings
* to be in NFC (Normalization Form Composition).
*
* @param	mixed	$strings	a string or an array of strings to normalize
* @return	mixed				the normalized content, preserving array keys if array given.
*/",
 "/**
* This function is used to generate a \"clean\" version of a string.
* Clean means that it is a case insensitive form (case folding) and that it is normalized (NFC).
* Additionally a homographs of one character are transformed into one specific character (preferably ASCII
* if it is an ASCII character).
*
* Please be aware that if you change something within this function or within
* functions used here you need to rebuild/update the username_clean column in the users table. And all other
* columns that store a clean string otherwise you will break this functionality.
*
* @param	string	$text	An unclean string, mabye user input (has to be valid UTF-8!)
* @return	string			Cleaned up version of the input string
*/",
 "/**
* A wrapper for htmlspecialchars($value, ENT_COMPAT, \'UTF-8\')
*/",
 "/**
* Trying to convert returned system message to utf8
*
* PHP assumes such messages are ISO-8859-1 so we\'ll do that too
* and if it breaks messages we\'ll blame it on them ;-)
*/",
 "/**
* UTF8-compatible wordwrap replacement
*
* @param	string	$string	The input string
* @param	int		$width	The column width. Defaults to 75.
* @param	string	$break	The line is broken using the optional break parameter. Defaults to \'\n\'.
* @param	bool	$cut	If the cut is set to TRUE, the string is always wrapped at the specified width. So if you have a word that is larger than the given width, it is broken apart.
*
* @return	string			the given string wrapped at the specified column.
*
*/",
 "/**

*



*


*/",
 "/**

*




*/",
 "/**
	* File Class
	* @access private
	*/",
 "/**
	* Cleans destination filename
	*
	* @param real|unique|unique_ext $mode real creates a realname, filtering some characters, lowering every character. Unique creates an unique filename
	* @param string $prefix Prefix applied to filename
	* @access public
	*/",
 "/**
	* Get property from file object
	*/",
 "/**
	* Check if file is an image (mimetype)
	*
	* @return true if it is an image, false if not
	*/",
 "/**
	* Check if the file got correctly uploaded
	*
	* @return true if it is a valid upload, false if not
	*/",
 "/**
	* Remove file
	*/",
 "/**
	* Get file extension
	*/",
 "/**
	* Get mimetype. Utilize mime_content_type if the function exist.
	* Not used at the moment...
	*/",
 "/**
	* Get filesize
	*/",
 "/**
	* Check the first 256 bytes for forbidden content
	*/",
 "/**
	* Move file to destination folder
	* The phpbb_root_path variable will be applied to the destination path
	*
	* @param string $destination_path Destination path, for example $config[\'avatar_path\']
	* @param bool $overwrite If set to true, an already existing file will be overwritten
	* @param string $chmod Permission mask for chmodding the file after a successful move. The mode entered here reflects the mode defined by {@link phpbb_chmod()}
	*
	* @access public
	*/",
 "/**
	* Performing additional checks
	*/",
 "/**
* Responsible for holding all file relevant information, as well as doing file-specific operations.
* The {@link fileupload fileupload class} can be used to upload several files, each of them being this object to operate further on.
* @package phpBB3
*/",
 "/**
* Class for assigning error messages before a real filespec class can be assigned
*
* @package phpBB3
*/",
 "/**
	* Init file upload class.
	*
	* @param string $error_prefix Used error messages will get prefixed by this string
	* @param array $allowed_extensions Array of allowed extensions, for example array(\'jpg\', \'jpeg\', \'gif\', \'png\')
	* @param int $max_filesize Maximum filesize
	* @param int $min_width Minimum image width (only checked for images)
	* @param int $min_height Minimum image height (only checked for images)
	* @param int $max_width Maximum image width (only checked for images)
	* @param int $max_height Maximum image height (only checked for images)
	*
	*/",
 "/**
	* Reset vars
	*/",
 "/**
	* Set allowed extensions
	*/",
 "/**
	* Set allowed dimensions
	*/",
 "/**
	* Set maximum allowed filesize
	*/",
 "/**
	* Set disallowed strings
	*/",
 "/**
	* Set error prefix
	*/",
 "/**
	* Form upload method
	* Upload file from users harddisk
	*
	* @param string $form_name Form name assigned to the file input field (if it is an array, the key has to be specified)
	* @return object $file Object \"filespec\" is returned, all further operations can be done with this object
	* @access public
	*/",
 "/**
	* Move file from another location to phpBB
	*/",
 "/**
	* Remote upload method
	* Uploads file from given url
	*
	* @param string $upload_url URL pointing to file to upload, for example http://www.foobar.com/example.gif
	* @return object $file Object \"filespec\" is returned, all further operations can be done with this object
	* @access public
	*/",
 "/**
	* Assign internal error
	* @access private
	*/",
 "/**
	* Perform common checks
	*/",
 "/**
	* Check for allowed extension
	*/",
 "/**
	* Check for allowed dimension
	*/",
 "/**
	* Check if form upload is valid
	*/",
 "/**
	* Check for allowed extension
	*/",
 "/**
	* Return image type/extension mapping
	*/",
 "/**
* File upload class
* Init class (all parameters optional and able to be set/overwritten separately) - scope is global and valid for all uploads
*
* @package phpBB3
*/",
 "/**
	* Purge cache data
	*
	* @return void
	*/",
 "/**
	 * Perform cache garbage collection
	 *
	 * @return void
	 */",
 "/**
	* Fetch an item from the cache
	*
	* @access protected
	* @param string $var Cache key
	* @return mixed Cached data
	*/",
 "/**
	* Store data in the cache
	*
	* @access protected
	* @param string $var Cache key
	* @param mixed $data Data to store
	* @param int $ttl Time-to-live of cached data
	* @return bool True if the operation succeeded
	*/",
 "/**
	* Remove an item from the cache
	*
	* @access protected
	* @param string $var Cache key
	* @return bool True if the operation succeeded
	*/",
 "/**
* ACM for eAccelerator
* @package acm
* @todo Missing locks from destroy() talk with David
*/",
 "/**
* View message folder
* Called from ucp_pm with mode == \'view\' && action == \'view_folder\'
*/",
 "/**
* Get Messages from folder/user
*/",
 "/**
* @package module_install
*/",
 "/**
* @package module_install
*/",
 "/**
* @package acp
*/",
 "/**
	* Connect to server
	*/",
 "/**
	* Version information about used database
	* @param bool $use_cache If true, it is safe to retrieve the value from the cache
	* @return string sql server version
	*/",
 "/**
	* SQL Transaction
	* @access private
	*/",
 "/**
	* Base query method
	*
	* @param	string	$query		Contains the SQL query which shall be executed
	* @param	int		$cache_ttl	Either 0 to avoid caching or the time in seconds which the result shall be kept in cache
	* @return	mixed				When casted to bool the returned value returns true on success and false on failure
	*
	* @access	public
	*/",
 "/**
	* Build LIMIT query
	*/",
 "/**
	* Return number of affected rows
	*/",
 "/**
	* Fetch current row
	*/",
 "/**
	* Seek to given row number
	* rownum is zero-based
	*/",
 "/**
	* Get last inserted id after insert statement
	*/",
 "/**
	* Free sql result
	*/",
 "/**
	* Escape string used in sql query
	*/",
 "/**
	* Build LIKE expression
	* @access private
	*/",
 "/**
	* Build db-specific query data
	* @access private
	*/",
 "/**
	* return sql error array
	* @access private
	*/",
 "/**
	* Close sql connection
	* @access private
	*/",
 "/**
	* Build db-specific report
	* @access private
	*/",
 "/**
* MySQLi Database Abstraction Layer
* mysqli-extension has to be compiled with:
* MySQL 4.1+ or MySQL 5.0+
* @package dbal
*/",
 "/**
	* Build all Language specific options
	*/",
 "/**
			* @todo check if this line is correct...
			$cp->vars[\'l_lang_default_value\']	= request_var(\'l_lang_default_value\', array(0 => array(\'\')), true);
			*/",
 "/**
	* Save Profile Field
	*/",
 "/**
	* Update, then insert if not successfull
	*/",
 "/**
	* Return sql statement for adding a new field ident (profile field) to the profile fields data table
	*/",
 "/**
* @package acp
*/",
 "/**
* Private Message Class
*
* $_REQUEST[\'folder\'] display folder with the id used
* $_REQUEST[\'folder\'] inbox|outbox|sentbox display folder with the associated name
*
*	Display Messages (default to inbox) - mode=view
*	Display single message - mode=view&p=[msg_id] or &p=[msg_id] (short linkage)
*
*	if the folder id with (&f=[folder_id]) is used when displaying messages, one query will be saved. If it is not used, phpBB needs to grab
*	the folder id first in order to display the input boxes and folder names and such things. ;) phpBB always checks this against the database to make
*	sure the user is able to view the message.
*
*	Composing Messages (mode=compose):
*		To specific user (u=[user_id])
*		To specific group (g=[group_id])
*		Quoting a post (action=quotepost&p=[post_id])
*		Quoting a PM (action=quote&p=[msg_id])
*		Forwarding a PM (action=forward&p=[msg_id])
*
* @package ucp
*/",
 "/**
	* Unload the cache resources
	*
	* @return void
	*/",
 "/**
	* Purge cache data
	*
	* @return void
	*/",
 "/**
	* Fetch an item from the cache
	*
	* @access protected
	* @param string $var Cache key
	* @return mixed Cached data
	*/",
 "/**
	* Store data in the cache
	*
	* @access protected
	* @param string $var Cache key
	* @param mixed $data Data to store
	* @param int $ttl Time-to-live of cached data
	* @return bool True if the operation succeeded
	*/",
 "/**
	* Remove an item from the cache
	*
	* @access protected
	* @param string $var Cache key
	* @return bool True if the operation succeeded
	*/",
 "/**
* ACM for Memcached
* @package acm
*/",
 "/**
	* Connect to server
	*/",
 "/**
		* force $use_cache false.  I didn\'t research why the caching code below is commented out
		* but I assume its because the Oracle extension provides a direct method to access it
		* without a query.
		*/",
 "/**
	* Version information about used database
	* @param bool $raw if true, only return the fetched sql_server_version
	* @param bool $use_cache forced to false for Oracle
	* @return string sql server version
	*/",
 "/**
	* SQL Transaction
	* @access private
	*/",
 "/**
	* Oracle specific code to handle the fact that it does not compare columns properly
	* @access private
	*/",
 "/**
	* Oracle specific code to handle it\'s lack of sanity
	* @access private
	*/",
 "/**
	* Base query method
	*
	* @param	string	$query		Contains the SQL query which shall be executed
	* @param	int		$cache_ttl	Either 0 to avoid caching or the time in seconds which the result shall be kept in cache
	* @return	mixed				When casted to bool the returned value returns true on success and false on failure
	*
	* @access	public
	*/",
 "/**
	* Build LIMIT query
	*/",
 "/**
	* Return number of affected rows
	*/",
 "/**
	* Fetch current row
	*/",
 "/**
	* Seek to given row number
	* rownum is zero-based
	*/",
 "/**
	* Get last inserted id after insert statement
	*/",
 "/**
	* Free sql result
	*/",
 "/**
	* Escape string used in sql query
	*/",
 "/**
	* Build LIKE expression
	* @access private
	*/",
 "/**
	* return sql error array
	* @access private
	*/",
 "/**
	* Close sql connection
	* @access private
	*/",
 "/**
	* Build db-specific report
	* @access private
	*/",
 "/**
* Oracle Database Abstraction Layer
* @package dbal
*/",
 "/**
	* Constructor
	*/",
 "/**
	* Resets all the data (address, template file, etc etc) to default
	*/",
 "/**

	*/",
 "/**

	*/",
 "/**

	*/",
 "/**

	*/",
 "/**

	*/",
 "/**

	*/",
 "/**

	*/",
 "/**

	*/",
 "/**

	*
	*

	*/",
 "/**

	*/",
 "/**

	*/",
 "/**

	*/",
 "/**

	*/",
 "/**

	*/",
 "/**

	*/",
 "/**

	*/",
 "/**

	*/",
 "/**

	*/",
 "/**


*/",
 "/**

	*/",
 "/**

	*/",
 "/**

	*/",
 "/**


	*/",
 "/**

	*/",
 "/**


	*/",
 "/**

	*/",
 "/**


*/",
 "/**

*/",
 "/**

	*/",
 "/**

	*/",
 "/**

	*/",
 "/**

	*/",
 "/**

	*/",
 "/**

	*/",
 "/**

	*/",
 "/**

	*/",
 "/**

	*/",
 "/**
	* digest_md5 authentication method
	* A real pain in the ***
	*/",
 "/**
* SMTP Class
* Auth Mechanisms originally taken from the AUTH Modules found within the PHP Extension and Application Repository (PEAR)
* See docs/AUTHORS for more details
* @package phpBB3
*/",
 "/**
* Encodes the given string for proper display in UTF-8.
*
* This version is using base64 encoded data. The downside of this
* is if the mail client does not understand this encoding the user
* is basically doomed with an unreadable subject.
*
* Please note that this version fully supports RFC 2045 section 6.8.
*
* @param string $eol End of line we are using (optional to be backwards compatible)
*/",
 "/**
* Wrapper for sending out emails with the PHP\'s mail function
*/",
 "/**
* @package module_install
*/",
 "/**
* @package module_install
*/",
 "/**
	* Connect to server
	*/",
 "/**
	* Version information about used database
	* @param bool $raw if true, only return the fetched sql_server_version
	* @param bool $use_cache If true, it is safe to retrieve the value from the cache
	* @return string sql server version
	*/",
 "/**
	* SQL Transaction
	* @access private
	*/",
 "/**
	* Base query method
	*
	* @param	string	$query		Contains the SQL query which shall be executed
	* @param	int		$cache_ttl	Either 0 to avoid caching or the time in seconds which the result shall be kept in cache
	* @return	mixed				When casted to bool the returned value returns true on success and false on failure
	*
	* @access	public
	*/",
 "/**
	* Build db-specific query data
	* @access private
	*/",
 "/**
	* Build LIMIT query
	*/",
 "/**
	* Return number of affected rows
	*/",
 "/**
	* Fetch current row
	*/",
 "/**
	* Seek to given row number
	* rownum is zero-based
	*/",
 "/**
	* Get last inserted id after insert statement
	*/",
 "/**
	* Free sql result
	*/",
 "/**
	* Escape string used in sql query
	* Note: Do not use for bytea values if we may use them at a later stage
	*/",
 "/**
	* Build LIKE expression
	* @access private
	*/",
 "/**
	* return sql error array
	* @access private
	*/",
 "/**
	* Close sql connection
	* @access private
	*/",
 "/**
	* Build db-specific report
	* @access private
	*/",
 "/**
* PostgreSQL Database Abstraction Layer
* Minimum Requirement is Version 7.3+
* @package dbal
*/",
 "/**
	* Set template location
	* @access public
	*/",
 "/**
	* Set custom template location (able to use directory outside of phpBB)
	* @access public
	*/",
 "/**
	* Sets the template filenames for handles. $filename_array
	* should be a hash of handle => filename pairs.
	* @access public
	*/",
 "/**
	* Destroy template data set
	* @access public
	*/",
 "/**
	* Reset/empty complete block
	* @access public
	*/",
 "/**
	* Display handle
	* @access public
	*/",
 "/**
	* Display the handle and assign the output to a template variable or return the compiled result.
	* @access public
	*/",
 "/**
	* Load a compiled template if possible, if not, recompile it
	* @access private
	*/",
 "/**
	* Assign key variable pairs from an array
	* @access public
	*/",
 "/**
	* Assign a single variable to a single key
	* @access public
	*/",
 "/**
	* Assign key variable pairs from an array to a specified block
	* @access public
	*/",
 "/**
	* Change already assigned key variable pair (one-dimensional - single loop entry)
	*
	* An example of how to use this function:
	* {@example alter_block_array.php}
	*
	* @param	string	$blockname	the blockname, for example \'loop\'
	* @param	array	$vararray	the var array to insert/add or merge
	* @param	mixed	$key		Key to search for
	*
	* array: KEY => VALUE [the key/value pair to search for within the loop to determine the correct position]
	*
	* int: Position [the position to change or insert at directly given]
	*
	* If key is false the position is set to 0
	* If key is true the position is set to the last entry
	*
	* @param	string	$mode		Mode to execute (valid modes are \'insert\' and \'change\')
	*
	*	If insert, the vararray is inserted at the given position (position counting from zero).
	*	If change, the current block gets merged with the vararray (resulting in new key/value pairs be added and existing keys be replaced by the new value).
	*
	* Since counting begins by zero, inserting at the last position will result in this array: array(vararray, last positioned array)
	* and inserting at position 1 will result in this array: array(first positioned array, vararray, following vars)
	*
	* @return bool false on error, true on success
	* @access public
	*/",
 "/**
	* Include a separate template
	* @access private
	*/",
 "/**
	* Include a php-file
	* @access private
	*/",
 "/**
* Base Template class.
* @package phpBB3
*/",
 "/**
	* Set cache path
	*/",
 "/**
	* Load global cache
	*/",
 "/**
	* Unload cache object
	*/",
 "/**
	* Save modified objects
	*/",
 "/**
	* Tidy cache
	*/",
 "/**
	* Get saved cache object
	*/",
 "/**
	* Put data into cache
	*/",
 "/**
	* Purge cache data
	*/",
 "/**
	* Destroy cache data
	*/",
 "/**
	* Check if a given cache entry exist
	*/",
 "/**
	* Load cached sql query
	*/",
 "/**
	* Save sql query
	*/",
 "/**
	* Ceck if a given sql query exist in cache
	*/",
 "/**
	* Fetch row from cache (database)
	*/",
 "/**
	* Fetch a field from the current row of a cached database result (database)
	*/",
 "/**
	* Seek a specific row in an a cached database result (database)
	*/",
 "/**
	* Free memory used for a cached database result (database)
	*/",
 "/**
	* Removes/unlinks file
	*/",
 "/**
	* Check if a cache var exists
	*
	* @access protected
	* @param string $var Cache key
	* @return bool True if it exists, otherwise false
	*/",
 "/**
* ACM Abstract Memory Class
* @package acm
*/",
 "/**
* Connect to ldap server
* Only allow changing authentication to ldap if we can connect to the ldap server
* Called in acp_board while setting authentication plugins
*/",
 "/**
* Login function
*/",
 "/**
* Generates a filter string for ldap_search to find a user
*
* @param	$username	string	Username identifying the searched user
*
* @return				string	A filter string for ldap_search
*/",
 "/**

*/",
 "/**
* This function is used to output any required fields in the authentication
* admin panel. It also defines any required configuration table fields.
*/",
 "/**
	*  API function
	*/",
 "/**
	* Submits an HTTP POST to a reCAPTCHA server
	* @param string $host
	* @param string $path
	* @param array $data
	* @param int port
	* @return array response
	*/",
 "/**
	* Calls an HTTP POST function to verify if the user\'s guess was correct
	* @param array $extra_params an array of extra variables to post to the server
	* @return ReCaptchaResponse
	*/",
 "/**
	* Encodes the given data into a query string format
	* @param $data - array of string elements to be encoded
	* @return string - encoded request
	*/",
 "/**
* @package VC
*/",
 "/**
* Fill smiley templates (or just the variables) with smilies, either in a window or inline
*/",
 "/**
* Update last post information
* Should be used instead of sync() if only the last post information are out of sync... faster
*
* @param	string	$type				Can be forum|topic
* @param	mixed	$ids				topic/forum ids
* @param	bool	$return_update_sql	true: SQL query shall be returned, false: execute SQL
*/",
 "/**
* Generate Topic Icons for display
*/",
 "/**
* Build topic types able to be selected
*/",
 "/**
* Upload Attachment - filedata is generated here
* Uses upload class
*/",
 "/**
* Calculate the needed size for Thumbnail
*/",
 "/**
* Return supported image types
*/",
 "/**
* Create Thumbnail
*/",
 "/**
* Assign Inline attachments (build option fields)
*/",
 "/**
* Generate inline attachment entry
*/",
 "/**
* Load Drafts
*/",
 "/**
* Topic Review
*/",
 "/**
* User Notification
*/",
 "/**
* Delete Post
*/",
 "/**
* Submit Post
* @todo Split up and create lightweight, simple API for this.
*/",
 "/**
* Handle topic bumping
* @param int $forum_id The ID of the forum the topic is being bumped belongs to
* @param int $topic_id The ID of the topic is being bumping
* @param array $post_data Passes some topic parameters:
*				- \'topic_title\'
*				- \'topic_last_post_id\'
*				- \'topic_last_poster_id\'
*				- \'topic_last_post_subject\'
*				- \'topic_last_poster_name\'
*				- \'topic_last_poster_colour\'
* @param int $bump_time The time at which topic was bumped, usually it is a current time as obtained via time(). 
* @return string An URL to the bumped topic, example: ./viewtopic.php?forum_id=1&amptopic_id=2&ampp=3#p3
*/",
 "/**
	* Purge cache data
	*
	* @return void
	*/",
 "/**
	* Fetch an item from the cache
	*
	* @access protected
	* @param string $var Cache key
	* @return mixed Cached data
	*/",
 "/**
	* Store data in the cache
	*
	* @access protected
	* @param string $var Cache key
	* @param mixed $data Data to store
	* @param int $ttl Time-to-live of cached data
	* @return bool True if the operation succeeded
	*/",
 "/**
	* Remove an item from the cache
	*
	* @access protected
	* @param string $var Cache key
	* @return bool True if the operation succeeded
	*/",
 "/**
* ACM for APC
* @package acm
*/",
 "/**
	* Constructor
	* Init bbcode cache entries if bitfield is specified
	*/",
 "/**
	* Second pass bbcodes
	*/",
 "/**
	* Init bbcode cache
	*
	* requires: $this->bbcode_bitfield
	* sets: $this->bbcode_cache with bbcode templates needed for bbcode_bitfield
	*/",
 "/**

	*/",
 "/**

	*/",
 "/**

	*/",
 "/**
	* Second parse quote tag
	*/",
 "/**
	* Second parse code tag
	*/",
 "/**
* BBCode class
* @package phpBB3
*/",
 "/**
* Execute message options
*/",
 "/**
* Defining check option for message rules
*/",
 "/**
* Defining action option for message rules
*/",
 "/**
* Defining rule option for message rules
*/",
 "/**
* Defining condition option for message rules
*/",
 "/**
* Display defined message rules
*/",
 "/**
	* Build +subforum options
	*/",
 "/**
	* Build dropdown field for changing permission types
	*/",
 "/**
	* Check if selected items exist. Remove not found ids and if empty return error.
	*/",
 "/**
	* Apply permissions
	*/",
 "/**
	* Apply all permissions
	*/",
 "/**
	* Compare auth settings with auth settings from role
	* returns false if they differ, true if they are equal
	*/",
 "/**
	* Remove permissions
	*/",
 "/**
	* Log permission changes
	*/",
 "/**
	* Display a complete trace tree for the selected permission to determine where settings are set/unset
	*/",
 "/**
	* Handles copying permissions from one forum to others
	*/",
 "/**
	* Get already assigned users/groups
	*/",
 "/**
* @package acp
*/",
 "/**
* Unlock cron script
*/",
 "/**
* Return the preceding value
*/",
 "/**
* Return the next value
*/",
 "/**
* Return whether the value is positive
*/",
 "/**
* Boolean inverse of the value
*/",
 "/**
* Convert a textual value to it\'s equivalent boolean value
*
* @param string $str String to convert (converts yes, on, y, 1 and true to boolean true)
* @return boolean The equivalent value
*/",
 "/**
* Function to mimic php\'s empty() function (it is the same)
*/",
 "/**
* Convert the name of a user\'s primary group to the appropriate equivalent phpBB group id
*
* @param string $status The name of the group
* @return int The group_id corresponding to the equivalent group
*/",
 "/**
* Convert a boolean into the appropriate phpBB constant indicating whether the item is locked
*/",
 "/**
* Convert a value from days to seconds
*/",
 "/**
* Determine whether a user is anonymous and return the appropriate new user_id
*/",
 "/**
* Generate a key value based on existing values
*
* @param int $pad Amount to add to the maximum value
* @return int Key value
*/",
 "/**
* Convert a boolean into the appropriate phpBB constant indicating whether the user is active
*/",
 "/**
* Convert a value from minutes to hours
*/",
 "/**
* Return the group_id for a given group name
*/",
 "/**
* Generate the email hash stored in the users table
*
* Note: Deprecated, calls should directly go to phpbb_email_hash()
*/",
 "/**
* Convert a boolean into the appropriate phpBB constant indicating whether the topic is locked
*/",
 "/**
* Generate a bbcode_uid value
*/",
 "/**
* Validate a website address
*/",
 "/**
* Convert nulls to zeros for fields which allowed a NULL value in the source but not the destination
*/",
 "/**
* Convert nulls to empty strings for fields which allowed a NULL value in the source but not the destination
*/",
 "/**
* Get old config value
*/",
 "/**
* Convert an IP address from the hexadecimal notation to normal dotted-quad notation
*/",
 "/**
* Reverse the encoding of wild-carded bans
*/",
 "/**
* Determine the MIME-type of a specified filename
* This does not actually inspect the file, but simply uses the file extension
*/",
 "/**
* Obtain the dimensions of all remotely hosted avatars
* This should only be called from execute_last
* There can be significant network overhead if there are a large number of remote avatars
* @todo Look at the option of allowing the user to decide whether this is called or to force the dimensions
*/",
 "/**
* Calculate the size of the specified image
* Called from the following functions for calculating the size of specific image types
*/",
 "/**
* Obtain the width of the specified smilie
*/",
 "/**
* Obtain the height of the specified smilie
*/",
 "/**
* Obtain the size of the specified smilie (using the cache if possible) and cache the value
*/",
 "/**
* Obtain the width of the specified avatar
*/",
 "/**
* Obtain the height of the specified avatar
*/",
 "/**
*/",
 "/**
* Obtain the size of the specified uploaded avatar (using the cache if possible) and cache the value
*/",
 "/**
* Obtain the size of the specified gallery avatar (using the cache if possible) and cache the value
*/",
 "/**
* Obtain the size of the specified remote avatar (using the cache if possible) and cache the value
* Whilst it\'s unlikely that remote avatars will be duplicated, it is possible so caching seems the best option
* This should only be called from a post processing step due to the possibility of network timeouts
*/",
 "/**
* Index messages on the fly as we convert them
* @todo naderman, can you check that this works with the new search plugins as it\'s use is currently disabled (and thus untested)
function search_indexing($message = \'\')
{
	global $fulltext_search, $convert_row;

	if (!isset($convert_row[\'post_id\']))
	{
		return;
	}

	if (!$message)
	{
		if (!isset($convert_row[\'message\']))
		{
			return;
		}

		$message = $convert_row[\'message\'];
	}

	$title = (isset($convert_row[\'title\'])) ? $convert_row[\'title\'] : \'\';

	$fulltext_search->index(\'post\', $convert_row[\'post_id\'], $message, $title, $convert_row[\'poster_id\'], $convert_row[\'forum_id\']);
}
*/",
 "/**
* Adds a user to the specified group and optionally makes them a group leader
* This function does not create the group if it does not exist and so should only be called after the groups have been created
*/",
 "/**
* Add users to the pre-defined \"special\" groups
*
* @param string $group The name of the special group to add to
* @param string $select_query An SQL query to retrieve the user(s) to add to the group
*/",
 "/**
* Retrieves configuration information from the source forum and caches it as an array
* Both database and file driven configuration formats can be handled
* (the type used is specified in $config_schema, see convert_phpbb20.php for more details)
*/",
 "/**
* Transfers the relevant configuration information from the source forum
* The mapping of fields is specified in $config_schema, see convert_phpbb20.php for more details
*/",
 "/**
* Update the count of PM\'s in custom folders for all users
*/",
 "/**
* Extract the variables defined in a configuration file
* @todo As noted by Xore we need to look at this from a security perspective
*/",
 "/**
* Grant permissions to a specified user or group
*
* @param string $ug_type user|group|user_role|group_role
* @param mixed $forum_id forum ids (array|int|0) -> 0 == all forums
* @param mixed $ug_id [int] user_id|group_id : [string] usergroup name
* @param mixed $acl_list [string] acl entry : [array] acl entries : [string] role entry
* @param int $setting ACL_YES|ACL_NO|ACL_NEVER
*/",
 "/**
* Update the count of unread private messages for all users
*/",
 "/**
* Add any of the pre-defined \"special\" groups which are missing from the database
*/",
 "/**
* Sync post count. We might need to do this in batches.
*/",
 "/**
* Add the search bots into the database
* This code should be used in execute_last if the source database did not have bots
* If you are converting bots this function should not be called
* @todo We might want to look at sharing the bot list between the install code and this code for consistancy
*/",
 "/**
* Update any dynamic configuration variables after the conversion is finished
* @todo Confirm that this updates all relevant values since it has not necessarily been kept in sync with all changes
*/",
 "/**
* Updates topics_posted entries
*/",
 "/**
* Ensure that all users have a default group specified and update related information such as their colour
*/",
 "/**
* Cleanly remove invalid user entries after converting the users table...
*/",
 "/**
	* Generates the summary on the main page of the warning module
	*/",
 "/**
	* Lists all users with warnings
	*/",
 "/**
	* Handles warning the user when the warning is for a specific post
	*/",
 "/**
	* Handles warning the user
	*/",
 "/**
* mcp_warn
* Handling warning the users
* @package mcp
*/",
 "/**
* Insert the warning into the database
*/",
 "/**
	* Constructor.
	*/",
 "/**
	* Get any renderer parameters.
	*
	* @return array  All parameters of this renderer object.
	*/",
 "/**
	* Renders a diff.
	*
	* @param diff &$diff A diff object.
	*
	* @return string  The formatted output.
	*/",
 "/**
	* Our function to get the diff
	*/",
 "/**
* Code from pear.php.net, Text_Diff-1.1.0 package
* http://pear.php.net/package/Text_Diff/
*
* Modified by phpBB Group to meet our coding standards
* and being able to integrate into phpBB
*
* A class to render Diffs in different formats.
*
* This class renders the diff in classic diff format. It is intended that
* this class be customized via inheritance, to obtain fancier outputs.
*
* Copyright 2004-2008 The Horde Project (http://www.horde.org/)
*
* @package diff
*/",
 "/**
	* Our function to get the diff
	*/",
 "/**
* Renders a unified diff
* @package diff
*/",
 "/**
	* Our function to get the diff
	*/",
 "/**
* \"Inline\" diff renderer.
*
* This class renders diffs in the Wiki-style \"inline\" format.
*
* @author  Ciprian Popovici
* @package diff
*/",
 "/**
	* Our function to get the diff
	*/",
 "/**
* \"raw\" diff renderer.
* This class could be used to output a raw unified patch file
*
* @package diff
*/",
 "/**
	* Our function to get the diff
	*/",
 "/**
* \"chora (Horde)\" diff renderer - similar style.
* This renderer class is a modified human_readable function from the Horde Framework.
*
* @package diff
*/",
 "/**
	* Purge cache data
	*
	* @return void
	*/",
 "/**
	* Fetch an item from the cache
	*
	* @access protected
	* @param string $var Cache key
	* @return mixed Cached data
	*/",
 "/**
	* Store data in the cache
	*
	* @access protected
	* @param string $var Cache key
	* @param mixed $data Data to store
	* @param int $ttl Time-to-live of cached data
	* @return bool True if the operation succeeded
	*/",
 "/**
	* Remove an item from the cache
	*
	* @access protected
	* @param string $var Cache key
	* @return bool True if the operation succeeded
	*/",
 "/**
* ACM for WinCache
* @package acm
*/",
 "/**
* ucp_groups
* @package ucp
*/",
 "/**
* @package acp
*/",
 "/**
* @package acp
*/",
 "/**
* Wave3D CAPTCHA
*
* @author Robert Hetzler
* @package VC
*/",
 "/**
	* Initialises the fulltext_native search backend with min/max word length and makes sure the UTF-8 normalizer is loaded.
	*
	* @param	boolean|string	&$error	is passed by reference and should either be set to false on success or an error message on failure.
	*
	* @access	public
	*/",
 "/**
	* This function fills $this->search_query with the cleaned user search query.
	*
	* If $terms is \'any\' then the words will be extracted from the search query
	* and combined with | inside brackets. They will afterwards be treated like
	* an standard search query.
	*
	* Then it analyses the query and fills the internal arrays $must_not_contain_ids,
	* $must_contain_ids and $must_exclude_one_ids which are later used by keyword_search().
	*
	* @param	string	$keywords	contains the search query string as entered by the user
	* @param	string	$terms		is either \'all\' (use search query as entered, default words to \'must be contained in post\')
	* 	or \'any\' (find all posts containing at least one of the given words)
	* @return	boolean				false if no valid keywords were found and otherwise true
	*
	* @access	public
	*/",
 "/**
	* Performs a search on keywords depending on display specific params. You have to run split_keywords() first.
	*
	* @param	string		$type				contains either posts or topics depending on what should be searched for
	* @param	string		$fields				contains either titleonly (topic titles should be searched), msgonly (only message bodies should be searched), firstpost (only subject and body of the first post should be searched) or all (all post bodies and subjects should be searched)
	* @param	string		$terms				is either \'all\' (use query as entered, words without prefix should default to \"have to be in field\") or \'any\' (ignore search query parts and just return all posts that contain any of the specified words)
	* @param	array		$sort_by_sql		contains SQL code for the ORDER BY part of a query
	* @param	string		$sort_key			is the key of $sort_by_sql for the selected sorting
	* @param	string		$sort_dir			is either a or d representing ASC and DESC
	* @param	string		$sort_days			specifies the maximum amount of days a post may be old
	* @param	array		$ex_fid_ary			specifies an array of forum ids which should not be searched
	* @param	array		$m_approve_fid_ary	specifies an array of forum ids in which the searcher is allowed to view unapproved posts
	* @param	int			$topic_id			is set to 0 or a topic id, if it is not 0 then only posts in this topic should be searched
	* @param	array		$author_ary			an array of author ids if the author should be ignored during the search the array is empty
	* @param	string		$author_name		specifies the author match, when ANONYMOUS is also a search-match
	* @param	array		&$id_ary			passed by reference, to be filled with ids for the page specified by $start and $per_page, should be ordered
	* @param	int			$start				indicates the first index of the page
	* @param	int			$per_page			number of ids each page is supposed to contain
	* @return	boolean|int						total number of results
	*
	* @access	public
	*/",
 "/**
	* Performs a search on an author\'s posts without caring about message contents. Depends on display specific params
	*
	* @param	string		$type				contains either posts or topics depending on what should be searched for
	* @param	boolean		$firstpost_only		if true, only topic starting posts will be considered
	* @param	array		$sort_by_sql		contains SQL code for the ORDER BY part of a query
	* @param	string		$sort_key			is the key of $sort_by_sql for the selected sorting
	* @param	string		$sort_dir			is either a or d representing ASC and DESC
	* @param	string		$sort_days			specifies the maximum amount of days a post may be old
	* @param	array		$ex_fid_ary			specifies an array of forum ids which should not be searched
	* @param	array		$m_approve_fid_ary	specifies an array of forum ids in which the searcher is allowed to view unapproved posts
	* @param	int			$topic_id			is set to 0 or a topic id, if it is not 0 then only posts in this topic should be searched
	* @param	array		$author_ary			an array of author ids
	* @param	string		$author_name		specifies the author match, when ANONYMOUS is also a search-match
	* @param	array		&$id_ary			passed by reference, to be filled with ids for the page specified by $start and $per_page, should be ordered
	* @param	int			$start				indicates the first index of the page
	* @param	int			$per_page			number of ids each page is supposed to contain
	* @return	boolean|int						total number of results
	*
	* @access	public
	*/",
 "/**
		* Clean up the string, remove HTML tags, remove BBCodes
		*/",
 "/**
				* Words longer than 255 bytes are ignored. This will have to be
				* changed whenever we change the length of search_wordlist.word_text
				*
				* Words shorter than $isset_min bytes are ignored, too
				*/",
 "/**
	* Split a text into words of a given length
	*
	* The text is converted to UTF-8, cleaned up, and split. Then, words that
	* conform to the defined length range are returned in an array.
	*
	* NOTE: duplicates are NOT removed from the return array
	*
	* @param	string	$text	Text to split, encoded in UTF-8
	* @return	array			Array of UTF-8 words
	*
	* @access	private
	*/",
 "/**
	* Updates wordlist and wordmatch tables when a message is posted or changed
	*
	* @param	string	$mode		Contains the post mode: edit, post, reply, quote
	* @param	int		$post_id	The id of the post which is modified/created
	* @param	string	&$message	New or updated post content
	* @param	string	&$subject	New or updated post subject
	* @param	int		$poster_id	Post author\'s user id
	* @param	int		$forum_id	The id of the forum in which the post is located
	*
	* @access	public
	*/",
 "/**
	* Removes entries from the wordmatch table for the specified post_ids
	*/",
 "/**
	* Tidy up indexes: Tag \'common words\' and remove
	* words no longer referenced in the match table
	*/",
 "/**
	* Deletes all words from the index
	*/",
 "/**
	* Returns true if both FULLTEXT indexes exist
	*/",
 "/**
	* Returns an associative array containing information about the indexes
	*/",
 "/**
		* Replace HTML entities and NCRs
		*/",
 "/**
		* The first thing we do is:
		*
		* - convert ASCII-7 letters to lowercase
		* - remove the ASCII-7 non-alpha characters
		* - remove the bytes that should not appear in a valid UTF-8 string: 0xC0,
		*   0xC1 and 0xF5-0xFF
		*
		* @todo in theory, the third one is already taken care of during normalization and those chars should have been replaced by Unicode replacement chars
		*/",
 "/**
		* This is the list of legal ASCII chars, it is automatically extended
		* with ASCII chars from $allowed_chars
		*/",
 "/**
					* ASCII char
					*/",
 "/**
						* Remove the char from $sb_match and its corresponding
						* replacement in $sb_replace
						*/",
 "/**
					* UTF-8 char
					*/",
 "/**
			* Capture the UTF char
			*/",
 "/**
				* All characters within these ranges are valid
				*
				* We separate them with a space in order to index each character
				* individually
				*/",
 "/**
				* The char is explicitly allowed
				*/",
 "/**
				* The char is mapped to something, maybe to itself actually
				*/",
 "/**
					* 1111 0nnn 10nn nnnn 10nx xxxx 10xx xxxx
					* 0000 0111 0011 1111 0010 0000
					*/",
 "/**
					* 1110 nnnn 10nx xxxx 10xx xxxx
					* 0000 0111 0010 0000
					*/",
 "/**
				* 110x xxxx 10xx xxxx
				* 0000 0000 0000 0000
				*/",
 "/**
				* We add an entry to the conversion table so that we
				* don\'t have to convert to codepoint and perform the checks
				* that are above this block
				*/",
 "/**
	* Clean up a text to remove non-alphanumeric characters
	*
	* This method receives a UTF-8 string, normalizes and validates it, replaces all
	* non-alphanumeric characters with strings then returns the result.
	*
	* Any number of \"allowed chars\" can be passed as a UTF-8 string in NFC.
	*
	* @param	string	$text			Text to split, in UTF-8 (not normalized or sanitized)
	* @param	string	$allowed_chars	String of special chars to allow
	* @param	string	$encoding		Text encoding
	* @return	string					Cleaned up text, only alphanumeric chars are left
	*
	* @todo normalizer::cleanup being able to be used?
	*/",
 "/**
		* if we need any options, copied from fulltext_native for now, will have to be adjusted or removed
		*/",
 "/**
	* Returns a list of options for the ACP to display
	*/",
 "/**
* fulltext_native
* phpBB\'s own db driven fulltext search, version 2
* @package search
*/",
 "/**
	* Connect to server
	* @access public
	*/",
 "/**
	* Version information about used database
	* @param bool $raw if true, only return the fetched sql_server_version
	* @param bool $use_cache If true, it is safe to retrieve the value from the cache
	* @return string sql server version
	*/",
 "/**
	* SQL Transaction
	* @access private
	*/",
 "/**
	* Base query method
	*
	* @param	string	$query		Contains the SQL query which shall be executed
	* @param	int		$cache_ttl	Either 0 to avoid caching or the time in seconds which the result shall be kept in cache
	* @return	mixed				When casted to bool the returned value returns true on success and false on failure
	*
	* @access	public
	*/",
 "/**
	* Build LIMIT query
	*/",
 "/**
	* Return number of affected rows
	*/",
 "/**
	* Fetch current row
	*/",
 "/**
	* Seek to given row number
	* rownum is zero-based
	*/",
 "/**
	* Get last inserted id after insert statement
	*/",
 "/**
	* Free sql result
	*/",
 "/**
	* Escape string used in sql query
	*/",
 "/**
	* Build LIKE expression
	* @access private
	*/",
 "/**
	* Build db-specific query data
	* @access private
	*/",
 "/**
	* return sql error array
	* @access private
	*/",
 "/**
	* Close sql connection
	* @access private
	*/",
 "/**
	* Build db-specific report
	* @access private
	*/",
 "/**
* MySQL4 Database Abstraction Layer
* Compatible with:
* MySQL 3.23+
* MySQL 4.0+
* MySQL 4.1+
* MySQL 5.0+
* @package dbal
*/",
 "/**
* Determine if we are able to load a specified PHP module and do so if possible
*/",
 "/**
* Returns an array of available DBMS with some data, if a DBMS is specified it will only
* return data for that DBMS and will load its extension if necessary.
*/",
 "/**
* Generate the drop down of available database options
*/",
 "/**
* Get tables of a database
*
* @deprecated
*/",
 "/**


*@param	array	$dbmsshouldbeoftheformatofanelementofthearrayreturnedby{@linkget_available_dbmsget_available_dbms()}
*					necessaryextensionsshouldbeloadedalready
*/",
 "/**

*/",
 "/**


*/",
 "/**

*/",
 "/**
	* Constructor.
	*
	* @param	string
	*/",
 "/**
	* Get data as an array.
	*
	* @return	array	All Data
	*/",
 "/**
	* Collect info into the data property.
	*
	* @return	void
	*/",
 "/**
* This class collects data which is used to create some usage statistics.
*
* The collected data is - after authorization of the administrator - submitted
* to a central server. For privacy reasons we try to collect only data which aren\'t private
* or don\'t give any information which might help to identify the user.
*
* @author		Johannes Schlueter <johannes@php.net>
* @copyright	(c) 2007-2008 Johannes Schlueter
*/",
 "/**
	* Get data about the PHP runtime setup.
	*
	* @return	array
	*/",
 "/**
* Questionnaire PHP data provider
* @package phpBB3
*/",
 "/**
	* Get data about the general system information, like OS or IP (shortened).
	*
	* @return	array
	*/",
 "/**
	* Checks whether the given IP is in a private network.
	*
	* @param	string	$ip	IP in v4 dot-decimal or v6 hex format
	* @return	bool		true if the IP is from a private network, else false
	*/",
 "/**
* Questionnaire System data provider
* @package phpBB3
*/",
 "/**
	* Constructor.
	*
	* @param	array	$config
	*/",
 "/**
	* Returns a string identifier for this data provider
	*
	* @return	string	\"phpBB\"
	*/",
 "/**
	* Get data about this phpBB installation.
	*
	* @return	array	Relevant anonymous config options
	*/",
 "/**
* Questionnaire phpBB data provider
* @package phpBB3
*/",
 "/**
* ucp_confirm
* Visual confirmation
*
* Note to potential users of this code ...
*
* Remember this is released under the _GPL_ and is subject
* to that licence. Do not incorporate this within software
* released or distributed in any way under a licence other
* than the GPL. We will be watching ... ;)
*
* @package VC
*/",
 "/**
* @package acp
*/",
 "/**
	* Display permission settings able to be set
	*/",
 "/**
	* Remove role
	*/",
 "/**
* @package acp
*/",
 "/**
* Show upload popup (progress bar)
*/",
 "/**
* Do the various checks required for removing posts as well as removing it
*/",
 "/**
* @package module_install
*/",
 "/**
	* Create the image containing $code with a seed of $seed
	*/",
 "/**
	* Sinus
	*/",
 "/**
	* Noise line
	*/",
 "/**
	* Return bitmaps
	*/",
 "/**
* Original Author - Xore (Robert Hetzler)
* With contributions from Neothermic
*
* @package VC
*/",
 "/**
	*/",
 "/**
	* Draw a character
	*/",
 "/**
	* Vector length
	*/",
 "/**
	* Normalize
	*/",
 "/**
	*/",
 "/**
	*/",
 "/**
	*/",
 "/**
	*/",
 "/**
	*/",
 "/**
	* dimensions
	*/",
 "/**
* @package VC
*/",
 "/**
	* Create the colour manager, link it to the image resource
	*/",
 "/**
	* Lookup a named colour resource
	*/",
 "/**
	* Assign a name to a colour resource
	*/",
 "/**
	* names and allocates a colour resource
	*/",
 "/**
	* allocates a specified colour into the image
	*/",
 "/**
	* randomly generates a colour, with optional params
	*/",
 "/**
	*/",
 "/**
	*/",
 "/**
	* Convert from one colour model to another
	*/",
 "/**
	* Slightly altered from wikipedia\'s algorithm
	*/",
 "/**
	* (more than) Slightly altered from wikipedia\'s algorithm
	*/",
 "/**
	*/",
 "/**
	* Alternate hue to hue
	*/",
 "/**
	* hue to Alternate hue
	*/",
 "/**
* @package VC
*/",
 "/**
* Obtain user_ids from usernames or vice versa. Returns false on
* success else the error string
*
* @param array &$user_id_ary The user ids to check or empty if usernames used
* @param array &$username_ary The usernames to check or empty if user ids used
* @param mixed $user_type Array of user types to check, false if not restricting by user type
*/",
 "/**
* Get latest registered username and update database to reflect it
*/",
 "/**
* Updates a username across all relevant tables/fields
*
* @param string $old_name the old/current username
* @param string $new_name the new username
*/",
 "/**
* Adds an user
*
* @param mixed $user_row An array containing the following keys (and the appropriate values): username, group_id (the group to place the user in), user_email and the user_type(usually 0). Additional entries not overridden by defaults will be forwarded.
* @param string $cp_data custom profile fields, see custom_profile::build_insert_sql_array
* @return the new user\'s ID.
*/",
 "/**
* Remove User
*/",
 "/**
* Flips user_type from active to inactive and vice versa, handles group membership updates
*
* @param string $mode can be flip for flipping from active/inactive, activate or deactivate
*/",
 "/**
* Add a ban or ban exclusion to the banlist. Bans either a user, an IP or an email address
*
* @param string $mode Type of ban. One of the following: user, ip, email
* @param mixed $ban Banned entity. Either string or array with usernames, ips or email addresses
* @param int $ban_len Ban length in minutes
* @param string $ban_len_other Ban length as a date (YYYY-MM-DD)
* @param boolean $ban_exclude Exclude these entities from banning?
* @param string $ban_reason String describing the reason for this ban
* @return boolean
*/",
 "/**
* Unban User
*/",
 "/**
* Internet Protocol Address Whois
* RFC3912: WHOIS Protocol Specification
*
* @param string $ip		Ip address, either IPv4 or IPv6.
*
* @return string		Empty string if not a valid ip address.
*						Otherwise make_clickable()\'ed whois result.
*/",
 "/**
* Data validation ... used primarily but not exclusively by ucp modules
*
* \"Master\" function for validating a range of data types
*/",
 "/**
* Validate String
*
* @return	boolean|string	Either false if validation succeeded or a string which will be used as the error message (with the variable name appended)
*/",
 "/**
* Validate Number
*
* @return	boolean|string	Either false if validation succeeded or a string which will be used as the error message (with the variable name appended)
*/",
 "/**
* Validate Date
* @param String $string a date in the dd-mm-yyyy format
* @return	boolean
*/",
 "/**
* Validate Match
*
* @return	boolean|string	Either false if validation succeeded or a string which will be used as the error message (with the variable name appended)
*/",
 "/**
* Validate Language Pack ISO Name
*
* Tests whether a language name is valid and installed
*
* @param string $lang_iso	The language string to test
*
* @return bool|string		Either false if validation succeeded or
*							a string which will be used as the error message
*							(with the variable name appended)
*/",
 "/**
* Check to see if the username has been taken, or if it is disallowed.
* Also checks if it includes the \" character, which we don\'t allow in usernames.
* Used for registering, changing names, and posting anonymously with a username
*
* @param string $username The username to check
* @param string $allowed_username An allowed username, default being $user->data[\'username\']
*
* @return	mixed	Either false if validation succeeded or a string which will be used as the error message (with the variable name appended)
*/",
 "/**
* Check to see if the password meets the complexity settings
*
* @return	boolean|string	Either false if validation succeeded or a string which will be used as the error message (with the variable name appended)
*/",
 "/**
* Check to see if email address is banned or already present in the DB
*
* @param string $email The email to check
* @param string $allowed_email An allowed email, default being $user->data[\'user_email\']
*
* @return mixed Either false if validation succeeded or a string which will be used as the error message (with the variable name appended)
*/",
 "/**
* Validate jabber address
* Taken from the jabber class within flyspray (see author notes)
*
* @author flyspray.org
*/",
 "/**
* Remove avatar
*/",
 "/**
* Remote avatar linkage
*/",
 "/**

*/",
 "/**

*/",
 "/**
* Avatar Gallery
*/",
 "/**
* Tries to (re-)establish avatar dimensions
*/",
 "/**
* Uploading/Changing user avatar
*/",
 "/**
* Add or edit a group. If we\'re editing a group we only update user
* parameters such as rank, etc. if they are changed
*/",
 "/**
* Changes a group avatar\'s filename to conform to the naming scheme
*/",
 "/**
* Remove avatar also for users not having the group as default
*/",
 "/**
* Group Delete
*/",
 "/**
* Add user(s) to group
*
* @return mixed false if no errors occurred, else the user lang string for the relevant error, for example \'NO_USER\'
*/",
 "/**
* Remove a user/s from a given group. When we remove users we update their
* default group_id. We do this by examining which \"special\" groups they belong
* to. The selection is made based on a reasonable priority system
*
* @return false if no errors occurred, else the user lang string for the relevant error, for example \'NO_USER\'
*/",
 "/**
* Removes the group avatar of the default group from the users in user_ids who have that group as default.
*/",
 "/**
* Removes the group rank of the default group from the users in user_ids who have that group as default.
*/",
 "/**
* This is used to promote (to leader), demote or set as default a member/s
*/",
 "/**
* A small version of validate_username to check for a group name\'s existence. To be called directly.
*/",
 "/**
* Set users default group
*
* @access private
*/",
 "/**
* Get group name
*/",
 "/**
* Obtain either the members of a specified group, the groups the specified user is subscribed to
* or checking if a specified user is in a specified group. This function does not return pending memberships.
*
* Note: Never use this more than once... first group your users/groups
*/",
 "/**
* Re-cache moderators and foes if group has a_ or m_ permissions
*/",
 "/**
* Funtion to make a user leave the NEWLY_REGISTERED system group.
* @access public
* @param $user_id The id of the user to remove from the group
*/",
 "/**
	* Init permissions
	*/",
 "/**
	* Fill ACL array with relevant bitstrings from user_permissions column
	* @access private
	*/",
 "/**
	* Look up an option
	* if the option is prefixed with !, then the result becomes negated
	*
	* If a forum id is specified the local option will be combined with a global option if one exist.
	* If a forum id is not specified, only the global option will be checked.
	*/",
 "/**
	* Get forums with the specified permission setting
	* if the option is prefixed with !, then the result becomes nagated
	*
	* @param bool $clean set to true if only values needs to be returned which are set/unset
	*/",
 "/**
	* Get local permission state for any forum.
	*
	* Returns true if user has the permission in one or more forums, false if in no forum.
	* If global option is checked it returns the global state (same as acl_get($opt))
	* Local option has precedence...
	*/",
 "/**
	* Get permission settings (more than one)
	*/",
 "/**
	* Get permission listing based on user_id/options/forum_ids
	*
	* Be careful when using this function with permissions a_, m_, u_ and f_ !
	* It may not work correctly. When a user group grants an a_* permission,
	* e.g. a_foo, but the user\'s a_foo permission is set to \"Never\", then
	* the user does not in fact have the a_ permission.
	* But the user will still be listed as having the a_ permission.
	*
	* For more information see: http://tracker.phpbb.com/browse/PHPBB3-10252
	*/",
 "/**
	* Cache data to user_permissions row
	*/",
 "/**
	* Build bitstring from permission set
	*/",
 "/**
	* Clear one or all users cached permission settings
	*/",
 "/**
	* Get assigned roles
	*/",
 "/**
	* Get raw acl data based on user/option/forum
	*/",
 "/**
	* Get raw user based permission settings
	*/",
 "/**
	* Get raw group based permission settings
	*/",
 "/**
	* Get raw acl data based on user for caching user_permissions
	* This function returns the same data as acl_raw_data(), but without the user id as the first key within the array.
	*/",
 "/**
	* Private function snippet for setting a specific piece of the hold_ary
	*/",
 "/**
	* Authentication plug-ins is largely down to Sergey Kanareykin, our thanks to him.
	*/",
 "/**
	* Fill auth_option statement for later querying based on the supplied options
	*/",
 "/**
* Permission/Auth class
* @package phpBB3
*/",
 "/**
* @package VC
*/",
 "/**
* Generate sort selection fields
*/",
 "/**
* Generate Jumpbox
*/",
 "/**
* Bump Topic Check - used by posting and viewtopic
*/",
 "/**
* Generates a text with approx. the specified length which contains the specified words and their context
*
* @param	string	$text	The full text from which context shall be extracted
* @param	string	$words	An array of words which should be contained in the result, has to be a valid part of a PCRE pattern (escape with preg_quote!)
* @param	int		$length	The desired length of the resulting text, however the result might be shorter or longer than this value
*
* @return	string			Context of the specified words separated by \"...\"
*/",
 "/**
* Decode text whereby text is coming from the db and expected to be pre-parsed content
* We are placing this outside of the message parser because we are often in need of it...
*/",
 "/**
* Strips all bbcode from a text and returns the plain content
*/",
 "/**
* For display of custom parsed text on user-facing pages
* Expects $text to be the value directly from the database (stored value)
*/",
 "/**
* For parsing custom parsed text to be stored within the database.
* This function additionally returns the uid and bitfield that needs to be stored.
* Expects $text to be the value directly from request_var() and in it\'s non-parsed form
*/",
 "/**
* For decoding custom parsed text for edits as well as extracting the flags
* Expects $text to be the value directly from the database (pre-parsed content)
*/",
 "/**
* A subroutine of make_clickable used with preg_replace
* It places correct HTML around an url, shortens the displayed text
* and makes sure no entities are inside URLs
*/",
 "/**
* make_clickable function
*
* Replace magic urls of form http://xxx.xxx., www.xxx. and xxx@xxx.xxx.
* Cuts down displayed size of link if over 50 chars, turns absolute links
* into relative versions when the server/script path matches the link
*/",
 "/**
* Censoring
*/",
 "/**
* custom version of nl2br which takes custom BBCodes into account
*/",
 "/**
* Smiley processing
*/",
 "/**
* General attachment parsing
*
* @param mixed $forum_id The forum id the attachments are displayed in (false if in private message)
* @param string &$message The post/private message
* @param array &$attachments The attachments to parse for (inline) display. The attachments array will hold templated data after parsing.
* @param array &$update_count The attachment counts to be updated - will be filled
* @param bool $preview If set to true the attachments are parsed for preview. Within preview mode the comments are fetched from the given $attachments array and not fetched from the database.
*/",
 "/**
* Check if extension is allowed to be posted.
*
* @param mixed $forum_id The forum id to check or false if private message
* @param string $extension The extension to check, for example zip.
* @param array &$extensions The extension array holding the information from the cache (will be obtained if empty)
*
* @return bool False if the extension is not allowed to be posted, else true.
*/",
 "/**
* Truncates string while retaining special characters if going over the max length
* The default max length is 60 at the moment
* The maximum storage length is there to fit the string within the given length. The string may be further truncated due to html entities.
* For example: string given is \'a \"quote\"\' (length: 9), would be a stored as \'a &quot;quote&quot;\' (length: 19)
*
* @param string $string The text to truncate to the given length. String is specialchared.
* @param int $max_length Maximum length of string (multibyte character count as 1 char / Html entity count as 1 char)
* @param int $max_store_length Maximum character length of string (multibyte character count as 1 char / Html entity count as entity chars).
* @param bool $allow_reply Allow Re: in front of string 
* 	NOTE: This parameter can cause undesired behavior (returning strings longer than $max_store_length) and is deprecated. 
* @param string $append String to be appended
*/",
 "/**
* Get username details for placing into templates.
* This function caches all modes on first call, except for no_profile and anonymous user - determined by $user_id.
*
* @param string $mode Can be profile (for getting an url to the profile), username (for obtaining the username), colour (for obtaining the user colour), full (for obtaining a html string representing a coloured link to the users profile) or no_profile (the same as full but forcing no profile link)
* @param int $user_id The users id
* @param string $username The users name
* @param string $username_colour The users colour
* @param string $guest_username optional parameter to specify the guest username. It will be used in favor of the GUEST language variable then.
* @param string $custom_profile_url optional parameter to specify a profile url. The user id get appended to this url as &amp;u={user_id}
*
* @return string A string consisting of what is wanted based on $mode.
* @author BartVB, Acyd Burn
*/",
 "/**
	*/",
 "/**
* @package phpBB3
*/",
 "/**
* Main Tab - Installation
* @package install
*/",
 "/**
* Global private message rules
* These rules define what to do if a rule is hit
*/",
 "/**
* This is for defining which condition fields to show for which Rule
*/",
 "/**
* Get all folder
*/",
 "/**
* Delete Messages From Sentbox
* we are doing this here because this saves us a bunch of checks and queries
*/",
 "/**
* Check Rule against Message Information
*/",
 "/**
* Update user PM count
*/",
 "/**
* Place new messages into appropriate folder
*/",
 "/**
* Move PM from one to another folder
*/",
 "/**
* Update unread message status
*/",
 "/**
* Handle all actions possible with marked messages
*/",
 "/**
* Delete PM(s)
*/",
 "/**
* Rebuild message header
*/",
 "/**
* Print out/assign recipient information
*/",
 "/**
* Get folder status
*/",
 "/**
* Submit PM
*/",
 "/**
* PM Notification
*/",
 "/**
* Display Message History
*/",
 "/**
* Set correct users max messages in PM folder.
* If several group memberships define different amount of messages, the highest will be chosen.
*/",
 "/**
* Generates an array of coloured recipient names from a list of PMs - (groups & users)
*
* @param	array	$pm_by_id	An array of rows from PRIVMSGS_TABLE, keys are the msg_ids.
*
* @return	array				2D Array: array(msg_id => array(\'username or group string\', ...), ...)
*								Usernames are generated with {@link get_username_string get_username_string}
*								Groups are coloured and have a link to the membership page
*/",
 "/**
	* Get forum details
	*/",
 "/**
	* Update forum data
	*/",
 "/**
	* Move forum
	*/",
 "/**
	* Move forum content from one to another forum
	*/",
 "/**
	* Remove complete forum
	*/",
 "/**
	* Delete forum content
	*/",
 "/**
		* Fetch all the siblings between the module\'s current spot
		* and where we want to move it to. If there are less than $steps
		* siblings between the current spot and the target then the
		* module will move as far as possible
		*/",
 "/**
	* Move forum position by $steps up/down
	*/",
 "/**
	* Display progress bar for syncinc forums
	*/",
 "/**
	* Display copy permission page
	* Not used at the moment - we will have a look at it for 3.0.7
	*/",
 "/**
* @package acp
*/",
 "/**
	* Computes diffs between sequences of strings.
	*
	* @param array $from_lines  An array of strings. Typically these are lines from a file.
	* @param array $to_lines    An array of strings.
	*/",
 "/**
	* Returns the array of differences.
	*/",
 "/**
	* returns the number of new (added) lines in a given diff.
	*
	* @since Text_Diff 1.1.0
	*
	* @return integer The number of new lines
	*/",
 "/**
	* Returns the number of deleted (removed) lines in a given diff.
	*
	* @since Text_Diff 1.1.0
	*
	* @return integer The number of deleted lines
	*/",
 "/**
	* Computes a reversed diff.
	*
	* Example:
	* <code>
	* $diff = new diff($lines1, $lines2);
	* $rev = $diff->reverse();
	* </code>
	*
	* @return diff  A Diff object representing the inverse of the original diff.
	*               Note that we purposely don\'t return a reference here, since
	*               this essentially is a clone() method.
	*/",
 "/**
	* Checks for an empty diff.
	*
	* @return boolean  True if two sequences were identical.
	*/",
 "/**
	* Computes the length of the Longest Common Subsequence (LCS).
	*
	* This is mostly for diagnostic purposes.
	*
	* @return integer  The length of the LCS.
	*/",
 "/**
	* Gets the original set of lines.
	*
	* This reconstructs the $from_lines parameter passed to the constructor.
	*
	* @return array  The original sequence of strings.
	*/",
 "/**
	* Gets the final set of lines.
	*
	* This reconstructs the $to_lines parameter passed to the constructor.
	*
	* @return array  The sequence of strings.
	*/",
 "/**
	* Removes trailing newlines from a line of text. This is meant to be used with array_walk().
	*
	* @param string &$line  The line to trim.
	* @param integer $key  The index of the line in the array. Not used.
	*/",
 "/**
	* Checks a diff for validity.
	*
	* This is here only for debugging purposes.
	*/",
 "/**
* Code from pear.php.net, Text_Diff-1.1.0 package
* http://pear.php.net/package/Text_Diff/
*
* Modified by phpBB Group to meet our coding standards
* and being able to integrate into phpBB
*
* General API for generating and formatting diffs - the differences between
* two sequences of strings.
*
* Copyright 2004 Geoffrey T. Dairiki <dairiki@dairiki.org>
* Copyright 2004-2008 The Horde Project (http://www.horde.org/)
*
* @package diff
* @author  Geoffrey T. Dairiki <dairiki@dairiki.org>
*/",
 "/**
	* Computes a diff between sequences of strings.
	*
	* This can be used to compute things like case-insensitve diffs, or diffs
	* which ignore changes in white-space.
	*
	* @param array $from_lines         An array of strings.
	* @param array $to_lines           An array of strings.
	* @param array $mapped_from_lines  This array should have the same size number of elements as $from_lines.
	*                                  The elements in $mapped_from_lines and $mapped_to_lines are what is actually
	*                                  compared when computing the diff.
	* @param array $mapped_to_lines    This array should have the same number of elements as $to_lines.
	*/",
 "/**
* @package diff
* @author  Geoffrey T. Dairiki <dairiki@dairiki.org>
*/",
 "/**
* @package diff
* @author  Geoffrey T. Dairiki <dairiki@dairiki.org>
*
* @access private
*/",
 "/**
* @package diff
* @author  Geoffrey T. Dairiki <dairiki@dairiki.org>
*
* @access private
*/",
 "/**
* @package diff
* @author  Geoffrey T. Dairiki <dairiki@dairiki.org>
*
* @access private
*/",
 "/**
* @package diff
* @author  Geoffrey T. Dairiki <dairiki@dairiki.org>
*
* @access private
*/",
 "/**
* @package diff
* @author  Geoffrey T. Dairiki <dairiki@dairiki.org>
*
* @access private
*/",
 "/**
	* Computes diff between 3 sequences of strings.
	*
	* @param array $orig    The original lines to use.
	* @param array $final1  The first version to compare to.
	* @param array $final2  The second version to compare to.
	*/",
 "/**
	* Return number of conflicts
	*/",
 "/**
	* Get conflicts content for download. This is generally a merged file, but preserving conflicts and adding explanations to it.
	* A user could then go through this file, search for the conflicts and changes the code accordingly.
	*
	* @param string $label1 the cvs file version/label from the original set of lines
	* @param string $label2 the cvs file version/label from the new set of lines
	* @param string $label_sep the explanation between label1 and label2 - more of a helper for the user
	*
	* @return mixed the merged output
	*/",
 "/**
	* Return merged output (used by the renderer)
	*
	* @return mixed the merged output
	*/",
 "/**
	* Merge the output and use the new file code for conflicts
	*/",
 "/**
	* Merge the output and use the original file code for conflicts
	*/",
 "/**
	* Get conflicting block(s)
	*/",
 "/**
	* @access private
	*/",
 "/**
* A class for computing three way diffs.
*
* @package diff
* @author  Geoffrey T. Dairiki <dairiki@dairiki.org>
*/",
 "/**
	* Function to prepare the arrays for comparing - we want to skip over newline changes
	* @author acydburn
	*/",
 "/**
	* Find code portions from $orig in $final1 and use $final2 as merged instance if provided
	* @author acydburn
	*/",
 "/**
	* Tries to solve conflicts aggressively based on typical \"assumptions\"
	* @author acydburn
	*/",
 "/**
* @package diff
* @author  Geoffrey T. Dairiki <dairiki@dairiki.org>
*
* @access private
*/",
 "/**
* @package diff
* @author  Geoffrey T. Dairiki <dairiki@dairiki.org>
*
* @access private
*/",
 "/**
* @package diff
* @author  Geoffrey T. Dairiki <dairiki@dairiki.org>
*
* @access private
*/",
 "/**
* @package acp
*/",
 "/**
* Function for assigning a template var if the zebra module got included
*/",
 "/**
	* Private methods, should not be overwritten
	*/",
 "/**
	* Load and run the relevant module if applicable
	*/",
 "/**
	* Output the standard page header
	*/",
 "/**
	* Output the standard page footer
	*/",
 "/**
	* Returns desired template name
	*/",
 "/**
	* Returns the desired page title
	*/",
 "/**



	*/",
 "/**

	*/",
 "/**
	* Output an error message
	* If skip is true, return and continue execution, else exit
	*/",
 "/**
	* Output an error message for a database related problem
	* If skip is true, return and continue execution, else exit
	*/",
 "/**
	* Generate the relevant HTML for an input field and the associated label and explanatory text
	*/",
 "/**
	* Generate the drop down of available language packs
	*/",
 "/**
* @package install
*/",
 "/**
* Functions used to generate additional URL paramters
*/",
 "/**
* Get simple topic data
*/",
 "/**
* Get simple post data
*/",
 "/**
* Get simple forum data
*/",
 "/**
* Get simple pm data
*/",
 "/**
* sorting in mcp
*
* @param string $where_sql should either be WHERE (default if ommited) or end with AND or OR
*
* $mode reports and reports_closed: the $where parameters uses aliases p for posts table and r for report table
* $mode unapproved_posts: the $where parameters uses aliases p for posts table and t for topic table
*/",
 "/**
* Validate ids
*
* @param	array	&$ids			The relevant ids to check
* @param	string	$table			The table to find the ids in
* @param	string	$sql_id			The ids relevant column name
* @param	array	$acl_list		A list of permissions the user need to have
* @param	mixed	$singe_forum	Limit to one forum id (int) or the first forum found (true)
*
* @return	mixed	False if no ids were able to be retrieved, true if at least one id left.
*					Additionally, this value can be the forum_id assigned if $single_forum was set.
*					Therefore checking the result for with !== false is the best method.
*/",
 "/**
	* Unload the cache resources
	*
	* @return void
	*/",
 "/**
	* Purge cache data
	*
	* @return void
	*/",
 "/**
	* Fetch an item from the cache
	*
	* @access protected
	* @param string $var Cache key
	* @return mixed Cached data
	*/",
 "/**
	* Store data in the cache
	*
	* @access protected
	* @param string $var Cache key
	* @param mixed $data Data to store
	* @param int $ttl Time-to-live of cached data
	* @return bool True if the operation succeeded
	*/",
 "/**
	* Remove an item from the cache
	*
	* @access protected
	* @param string $var Cache key
	* @return bool True if the operation succeeded
	*/",
 "/**
* ACM for Redis
*
* Compatible with the php extension phpredis available
* at https://github.com/nicolasff/phpredis
*
* @package acm
*/",
 "/**
* mcp_main
* Handling mcp actions
* @package mcp
*/",
 "/**
* Lock/Unlock Topic/Post
*/",
 "/**
* Change Topic Type
*/",
 "/**
* Move Topic
*/",
 "/**
* Delete Topics
*/",
 "/**
* Delete Posts
*/",
 "/**
* Fork Topic
*/",
 "/**
* @package module_install
*/",
 "/**
	* Connect to server
	*/",
 "/**
	* Version information about used database
	* @param bool $raw if true, only return the fetched sql_server_version
	* @param bool $use_cache if true, it is safe to retrieve the stored value from the cache
	* @return string sql server version
	*/",
 "/**
	* SQL Transaction
	* @access private
	*/",
 "/**
	* Base query method
	*
	* @param	string	$query		Contains the SQL query which shall be executed
	* @param	int		$cache_ttl	Either 0 to avoid caching or the time in seconds which the result shall be kept in cache
	* @return	mixed				When casted to bool the returned value returns true on success and false on failure
	*
	* @access	public
	*/",
 "/**
	* Build LIMIT query
	*/",
 "/**
	* Return number of affected rows
	*/",
 "/**
	* Fetch current row
	*/",
 "/**
	* Seek to given row number
	* rownum is zero-based
	*/",
 "/**
	* Get last inserted id after insert statement
	*/",
 "/**
	* Free sql result
	*/",
 "/**
	* Escape string used in sql query
	*/",
 "/**
	* Correctly adjust LIKE expression for special characters
	* For SQLite an underscore is a not-known character... this may change with SQLite3
	*/",
 "/**
	* return sql error array
	* @access private
	*/",
 "/**
	* Build db-specific query data
	* @access private
	*/",
 "/**
	* Close sql connection
	* @access private
	*/",
 "/**
	* Build db-specific report
	* @access private
	*/",
 "/**
* Sqlite Database Abstraction Layer
* Minimum Requirement: 2.8.2+
* @package dbal
*/",
 "/**
* View private message
*/",
 "/**
* Get user information (only for message display)
*/",
 "/**
* @package module_install
*/",
 "/**
* @package acp
*/",
 "/**
	* @param int $type  as per the CAPTCHA API docs, the type
	*/",
 "/**
	*  API function
	*/",
 "/**
	* See if the captcha has created its tables.
	*/",
 "/**
	*  API function - for the captcha to be available, it must have installed itself and there has to be at least one question in the board\'s default lang
	*/",
 "/**
	*  API function
	*/",
 "/**
	*  API function
	*/",
 "/**
	*  API function
	*/",
 "/**
	*  API function - not needed as we don\'t display an image
	*/",
 "/**
	*  API function - not needed as we don\'t display an image
	*/",
 "/**
	*  API function - send the question to the template
	*/",
 "/**
	*  API function - we just display a mockup so that the captcha doesn\'t need to be installed
	*/",
 "/**
	*  API function
	*/",
 "/**
	*  API function
	*/",
 "/**
	*  API function - we don\'t drop the tables here, as that would cause the loss of all entered questions.
	*/",
 "/**
	*  API function - set up shop
	*/",
 "/**
	*  API function - see what has to be done to validate
	*/",
 "/**
	*  Select a question
	*/",
 "/**
	* New Question, if desired.
	*/",
 "/**
	* Wrong answer, so we increase the attempts and use a different question.
	*/",
 "/**
	* See if there is already an entry for the current session.
	*/",
 "/**
	* Look up everything we need and populate the instance variables.
	*/",
 "/**
	*  The actual validation
	*/",
 "/**
	*  API function - clean the entry
	*/",
 "/**
	*  API function
	*/",
 "/**
	*  API function
	*/",
 "/**
	*  API function
	*/",
 "/**
	*  API function - The ACP backend, this marks the end of the easy methods
	*/",
 "/**
	*  This handles the list overview
	*/",
 "/**
	*  Grab a question and bring it into a format the editor understands
	*/",
 "/**
	*  Grab a question from input and bring it into a format the editor understands
	*/",
 "/**
	*  Update a question.
	* param mixed $data : an array as created from acp_get_question_input or acp_get_question_data
	*/",
 "/**
	*  Insert a question.
	* param mixed $data : an array as created from acp_get_question_input or acp_get_question_data
	*/",
 "/**
	*  Insert the answers.
	* param mixed $data : an array as created from acp_get_question_input or acp_get_question_data
	*/",
 "/**
	*  Delete a question.
	*/",
 "/**
	*  Check if the entered data can be inserted/used
	* param mixed $data : an array as created from acp_get_question_input or acp_get_question_data
	*/",
 "/**
	* List the installed language packs
	*/",
 "/**
	*  See if there is a question other than the one we have
	*/",
 "/**
* And now to something completely different. Let\'s make a captcha without extending the abstract class.
* QA CAPTCHA sample implementation
*
* @package VC
*/",
 "/**
	* Build and assign topiclist for bookmarks/subscribed topics
	*/",
 "/**
* ucp_main
* UCP Front Panel
* @package ucp
*/",
 "/**
* @package acp
*/",
 "/**
* @package module_install
*/",
 "/**
* ucp_prefs
* Changing user preferences
* @package ucp
*/",
 "/**

	*/",
 "/**



		*/",
 "/**




	*/",
 "/**


	*/",
 "/**

	*
	*@param	string	$query		ContainstheSQLquerywhichshallbeexecuted
	*@param	int		$cache_ttl	Either0toavoidcachingorthetimeinsecondswhichtheresultshallbekeptincache
	*@return	mixed				Whencastedtoboolthereturnedvaluereturnstrueonsuccessandfalseonfailure
	*
	*@access	public
	*/",
 "/**

	*/",
 "/**

	*/",
 "/**

	*/",
 "/**


	*/",
 "/**

	*/",
 "/**

	*/",
 "/**

	*/",
 "/**


	*/",
 "/**


	*/",
 "/**


	*/",
 "/**


	*/",
 "/**


	*/",
 "/**



*/",
 "/**
* Display Forums
*/",
 "/**
* Create forum rules for given forum
*/",
 "/**
* Create forum navigation links for given forum, create parent
* list if currently null, assign basic forum info to template
*/",
 "/**
* Returns forum parents as an array. Get them from forum_data if available, or update the database otherwise
*/",
 "/**
* Generate topic pagination
*/",
 "/**
* Obtain list of moderators of each forum
*/",
 "/**
* User authorisation levels output
*
* @param	string	$mode			Can be forum or topic. Not in use at the moment.
* @param	int		$forum_id		The current forum the user is in.
* @param	int		$forum_status	The forums status bit.
*/",
 "/**
* Generate topic status
*/",
 "/**
* Assign/Build custom bbcodes for display in screens supporting using of bbcodes
* The custom bbcodes buttons will be placed within the template block \'custom_codes\'
*/",
 "/**
* Display reasons
*/",
 "/**
* Display user activity (action forum/topic)
*/",
 "/**
* Topic and forum watching common code
*/",
 "/**
* Get user rank title and image
*
* @param int $user_rank the current stored users rank id
* @param int $user_posts the users number of posts
* @param string &$rank_title the rank title will be stored here after execution
* @param string &$rank_img the rank image as full img tag is stored here after execution
* @param string &$rank_img_src the rank image source is stored here after execution
*
* Note: since we do not want to break backwards-compatibility, this function will only properly assign ranks to guests if you call it for them with user_posts == false
*/",
 "/**
* Get user avatar
*
* @param string $avatar Users assigned avatar name
* @param int $avatar_type Type of avatar
* @param string $avatar_width Width of users avatar
* @param string $avatar_height Height of users avatar
* @param string $alt Optional language string for alt tag within image, can be a language key or text
* @param bool $ignore_config Ignores the config-setting, to be still able to view the avatar in the UCP
*
* @return string Avatar image
*/",
 "/**
* set_var
*
* Set variable, used by {@link request_var the request_var function}
*
* @access private
*/",
 "/**
* request_var
*
* Used to get passed variable
*/",
 "/**
* Set config value. Creates missing config entry.
*/",
 "/**
* Set dynamic config value with arithmetic operation.
*/",
 "/**
* Generates an alphanumeric random string of given length
*
* @return string
*/",
 "/**
* Generates a user-friendly alphanumeric random string of given length
* We remove 0 and O so users cannot confuse those in passwords etc.
*
* @return string
*/",
 "/**
* Return unique id
* @param string $extra additional entropy
*/",
 "/**
* Wrapper for mt_rand() which allows swapping $min and $max parameters.
*
* PHP does not allow us to swap the order of the arguments for mt_rand() anymore.
* (since PHP 5.3.4, see http://bugs.php.net/46587)
*
* @param int $min		Lowest value to be returned
* @param int $max		Highest value to be returned
*
* @return int			Random integer between $min and $max (or $max and $min)
*/",
 "/**
* Wrapper for getdate() which returns the equivalent array for UTC timestamps.
*
* @param int $time		Unix timestamp (optional)
*
* @return array			Returns an associative array of information related to the timestamp.
*						See http://www.php.net/manual/en/function.getdate.php
*/",
 "/**
* Return formatted string for filesizes
*
* @param int	$value			filesize in bytes
* @param bool	$string_only	true if language string should be returned
* @param array	$allowed_units	only allow these units (data array indexes)
*
* @return mixed					data array if $string_only is false
* @author bantu
*/",
 "/**
* Determine whether we are approaching the maximum execution time. Should be called once
* at the beginning of the script in which it\'s used.
* @return	bool	Either true if the maximum execution time is nearly reached, or false
*					if some time is still left.
*/",
 "/**
*
* @version Version 0.1 / slightly modified for phpBB 3.0.x (using $H$ as hash type identifier)
*
* Portable PHP password hashing framework.
*
* Written by Solar Designer <solar at openwall.com> in 2004-2006 and placed in
* the public domain.
*
* There\'s absolutely no warranty.
*
* The homepage URL for this framework is:
*
*	http://www.openwall.com/phpass/
*
* Please be sure to update the Version line if you edit this file in any way.
* It is suggested that you leave the main version number intact, but indicate
* your project name (after the slash) and add your own revision information.
*
* Please do not change the \"private\" password hashing method implemented in
* here, thereby making your hashes incompatible.  However, if you must, please
* change the hash type identifier (the \"$P$\") to something different.
*
* Obviously, since this code is in the public domain, the above are not
* requirements (there can be none), but merely suggestions.
*
*
* Hash the password
*/",
 "/**
* Check for correct password
*
* @param string $password The password in plain text
* @param string $hash The stored password hash
*
* @return bool Returns true if the password is correct, false if not.
*/",
 "/**
* Generate salt for hash generation
*/",
 "/**
* Encode hash
*/",
 "/**
* The crypt function/replacement
*/",
 "/**
* Hashes an email address to a big integer
*
* @param string $email		Email address
*
* @return string			Unsigned Big Integer
*/",
 "/**
* Wrapper for version_compare() that allows using uppercase A and B
* for alpha and beta releases.
*
* See http://www.php.net/manual/en/function.version-compare.php
*
* @param string $version1		First version number
* @param string $version2		Second version number
* @param string $operator		Comparison operator (optional)
*
* @return mixed					Boolean (true, false) if comparison operator is specified.
*								Integer (-1, 0, 1) otherwise.
*/",
 "/**
* Global function for chmodding directories and files for internal use
*
* This function determines owner and group whom the file belongs to and user and group of PHP and then set safest possible file permissions.
* The function determines owner and group from common.php file and sets the same to the provided file.
* The function uses bit fields to build the permissions.
* The function sets the appropiate execute bit on directories.
*
* Supported constants representing bit fields are:
*
* CHMOD_ALL - all permissions (7)
* CHMOD_READ - read permission (4)
* CHMOD_WRITE - write permission (2)
* CHMOD_EXECUTE - execute permission (1)
*
* NOTE: The function uses POSIX extension and fileowner()/filegroup() functions. If any of them is disabled, this function tries to build proper permissions, by calling is_readable() and is_writable() functions.
*
* @param string	$filename	The file/directory to be chmodded
* @param int	$perms		Permissions to set
*
* @return bool	true on success, otherwise false
* @author faw, phpBB Group
*/",
 "/**
* Test if a file/directory is writable
*
* This function calls the native is_writable() when not running under
* Windows and it is not disabled.
*
* @param string $file Path to perform write test on
* @return bool True when the path is writable, otherwise false.
*/",
 "/**
	* A wrapper for the PHP5 function array_combine()
	* @param array $keys contains keys for the resulting array
	* @param array $values contains values for the resulting array
	*
	* @return Returns an array by using the values from the keys array as keys and the
	* 	values from the values array as the corresponding values. Returns false if the
	* 	number of elements for each array isn\'t equal or if the arrays are empty.
	*/",
 "/**
	* A wrapper for the PHP5 function str_split()
	* @param array $string contains the string to be converted
	* @param array $split_length contains the length of each chunk
	*
	* @return  Converts a string to an array. If the optional split_length parameter is specified,
	*  	the returned array will be broken down into chunks with each being split_length in length,
	*  	otherwise each chunk will be one character in length. FALSE is returned if split_length is
	*  	less than 1. If the split_length length exceeds the length of string, the entire string is
	*  	returned as the first (and only) array element.
	*/",
 "/**
	* A wrapper for the PHP5 function stripos
	* Find position of first occurrence of a case-insensitive string
	*
	* @param string $haystack is the string to search in
	* @param string $needle is the string to search for
	*
	* @return mixed Returns the numeric position of the first occurrence of needle in the haystack string. Unlike strpos(), stripos() is case-insensitive.
	* Note that the needle may be a string of one or more characters.
	* If needle is not found, stripos() will return boolean FALSE.
	*/",
 "/**

*


*/",
 "/**




*/",
 "/**


	*/",
 "/**

	*/",
 "/**


	*/",
 "/**
* Pick a language, any language ...
*/",
 "/**
* Pick a template/theme combo,
*/",
 "/**
* Pick a timezone
*/",
 "/**
* Marks a topic/forum as read
* Marks a topic as posted to
*
* @param int $user_id can only be used with $mode == \'post\'
*/",
 "/**
* Get topic tracking info by using already fetched info
*/",
 "/**
* Get topic tracking info from db (for cookie based tracking only this function is used)
*/",
 "/**
* Get list of unread topics
*
* @param int $user_id			User ID (or false for current user)
* @param string $sql_extra		Extra WHERE SQL statement
* @param string $sql_sort		ORDER BY SQL sorting statement
* @param string $sql_limit		Limits the size of unread topics list, 0 for unlimited query
* @param string $sql_limit_offset  Sets the offset of the first row to search, 0 to search from the start
*
* @return array[int][int]		Topic ids as keys, mark_time of topic as value
*/",
 "/**
* Check for read forums and update topic tracking info accordingly
*
* @param int $forum_id the forum id to check
* @param int $forum_last_post_time the forums last post time
* @param int $f_mark_time the forums last mark time if user is registered and load_db_lastread enabled
* @param int $mark_time_forum false if the mark time needs to be obtained, else the last users forum mark time
*
* @return true if complete forum got marked read, else false.
*/",
 "/**
* Transform an array into a serialized format
*/",
 "/**
* Transform a serialized array into an actual array
*/",
 "/**
* Pagination routine, generates page number sequence
* tpl_prefix is for using different pagination blocks at one page
*/",
 "/**
* Return current page (pagination)
*/",
 "/**
* Append session id to url.
* This function supports hooks.
*
* @param string $url The url the session id needs to be appended to (can have params)
* @param mixed $params String or array of additional url parameters
* @param bool $is_amp Is url using &amp; (true) or & (false)
* @param string $session_id Possibility to use a custom session id instead of the global one
*
* Examples:
* <code>
* append_sid(\"{$phpbb_root_path}viewtopic.$phpEx?t=1&amp;f=2\");
* append_sid(\"{$phpbb_root_path}viewtopic.$phpEx\", \'t=1&amp;f=2\');
* append_sid(\"{$phpbb_root_path}viewtopic.$phpEx\", \'t=1&f=2\', false);
* append_sid(\"{$phpbb_root_path}viewtopic.$phpEx\", array(\'t\' => 1, \'f\' => 2));
* </code>
*
*/",
 "/**
* Generate board url (example: http://www.example.com/phpBB)
*
* @param bool $without_script_path if set to true the script path gets not appended (example: http://www.example.com)
*
* @return string the generated board url
*/",
 "/**
* Redirects the user to another page then exits the script nicely
* This function is intended for urls within the board. It\'s not meant to redirect to cross-domains.
*
* @param string $url The url to redirect to
* @param bool $return If true, do not redirect but return the sanitized URL. Default is no return.
* @param bool $disable_cd_check If true, redirect() will redirect to an external domain. If false, the redirect point to the boards url if it does not match the current domain. Default is false.
*/",
 "/**
* Re-Apply session id after page reloads
*/",
 "/**
* Returns url from the session/current page with an re-appended SID with optionally stripping vars from the url
*/",
 "/**
* Meta refresh assignment
* Adds META template variable with meta http tag.
*
* @param int $time Time in seconds for meta refresh tag
* @param string $url URL to redirect to. The url will go through redirect() first before the template variable is assigned
* @param bool $disable_cd_check If true, meta_refresh() will redirect to an external domain. If false, the redirect point to the boards url if it does not match the current domain. Default is false.
*/",
 "/**
* Outputs correct status line header.
*
* Depending on php sapi one of the two following forms is used:
*
* Status: 404 Not Found
*
* HTTP/1.x 404 Not Found
*
* HTTP version is taken from HTTP_VERSION environment variable,
* and defaults to 1.0.
*
* Sample usage:
*
* send_status_line(404, \'Not Found\');
*
* @param int $code HTTP status code
* @param string $message Message for the status code
* @return void
*/",
 "/**
* Add a secret hash   for use in links/GET requests
* @param string  $link_name The name of the link; has to match the name used in check_link_hash, otherwise no restrictions apply
* @return string the hash

*/",
 "/**
* checks a link hash - for GET requests
* @param string $token the submitted token
* @param string $link_name The name of the link
* @return boolean true if all is fine
*/",
 "/**
* Add a secret token to the form (requires the S_FORM_TOKEN template variable)
* @param string  $form_name The name of the form; has to match the name used in check_form_key, otherwise no restrictions apply
*/",
 "/**
* Check the form key. Required for all altering actions not secured by confirm_box
* @param string  $form_name The name of the form; has to match the name used in add_form_key, otherwise no restrictions apply
* @param int $timespan The maximum acceptable age for a submitted form in seconds. Defaults to the config setting.
* @param string $return_page The address for the return link
* @param bool $trigger If true, the function will triger an error when encountering an invalid form
*/",
 "/**
* Build Confirm box
* @param boolean $check True for checking if confirmed (without any additional parameters) and false for displaying the confirm box
* @param string $title Title/Message used for confirm box.
*		message text is _CONFIRM appended to title.
*		If title cannot be found in user->lang a default one is displayed
*		If title_CONFIRM cannot be found in user->lang the text given is used.
* @param string $hidden Hidden variables
* @param string $html_body Template used for confirm box
* @param string $u_action Custom form action
*/",
 "/**
* Generate login box or verify password
*/",
 "/**
* Generate forum login box
*/",
 "/**
* Little helper for the build_hidden_fields function
*/",
 "/**
* Build simple hidden fields from array
*
* @param array $field_ary an array of values to build the hidden field from
* @param bool $specialchar if true, keys and values get specialchared
* @param bool $stripslashes if true, keys and values get stripslashed
*
* @return string the hidden fields
*/",
 "/**
* Parse cfg file
*/",
 "/**
* Add log event
*/",
 "/**
* Return a nicely formatted backtrace.
*
* Turns the array returned by debug_backtrace() into HTML markup.
* Also filters out absolute paths to phpBB root.
*
* @return string	HTML markup
*/",
 "/**
* This function returns a regular expression pattern for commonly used expressions
* Use with / as delimiter for email mode and # for url modes
* mode can be: email|bbcode_htm|url|url_inline|www_url|www_url_inline|relative_url|relative_url_inline|ipv4|ipv6
*/",
 "/**
* Generate regexp for naughty words censoring
* Depends on whether installed PHP version supports unicode properties
*
* @param string	$word			word template to be replaced
* @param bool	$use_unicode	whether or not to take advantage of PCRE supporting unicode
*
* @return string $preg_expr		regex to use with word censor
*/",
 "/**
* Returns the first block of the specified IPv6 address and as many additional
* ones as specified in the length paramater.
* If length is zero, then an empty string is returned.
* If length is greater than 3 the complete IP will be returned
*/",
 "/**
* Login using http authenticate.
*
* @param array	$param		Parameter array, see $param_defaults array.
*
* @return void
*/",
 "/**
		* Load online data:
		* For obtaining another session column use $item and $item_id in the function-parameter, whereby the column is session_{$item}_id.
		*/",
 "/**
* Generate page header
*/",
 "/**
* Generate page footer
*/",
 "/**
* Closing the cache object and the database
* Cool function name, eh? We might want to add operations to it later
*/",
 "/**
* Handler for exit calls in phpBB.
* This function supports hooks.
*
* Note: This function is called after the template has been outputted.
*/",
 "/**
* Handler for init calls in phpBB. This function is called in user::setup();
* This function supports hooks.
*/",
 "/**
* @package module_install
*/",
 "/**
* Header for acp pages
*/",
 "/**
* Page footer for acp pages
*/",
 "/**
* Generate back link for acp pages
*/",
 "/**
* Build select field options in acp pages
*/",
 "/**
* Build radio fields in acp pages
*/",
 "/**
* Build configuration template for acp configuration pages
*/",
 "/**


*/",
 "/**



*/",
 "/**
* @todo normalize?
*/",
 "/**
* @package module_install
*/",
 "/**
	* constuctor
	*/",
 "/**
	* Load template source from file
	* @access private
	*/",
 "/**
	* Remove any PHP tags that do not belong, these regular expressions are derived from
	* the ones that exist in zend_language_scanner.l
	* @access private
	*/",
 "/**
	* The all seeing all doing compile method. Parts are inspired by or directly from Smarty
	* @access private
	*/",
 "/**
	* Compile variables
	* @access private
	*/",
 "/**
		* The following uses foreach for iteration instead of a for loop, foreach is faster but requires PHP to make a copy of the contents of the array which uses more memory
		* <code>
		*	if (!$offset)
		*	{
		*		$tag_template_php .= \'foreach (\' . $varref . \' as $_\' . $tag_args . \'_i => $_\' . $tag_args . \'_val){\';
		*	}
		* </code>
		*/",
 "/**
	* Compile blocks
	* @access private
	*/",
 "/**
	* Compile IF tags - much of this is from Smarty with
	* some adaptions for our block level methods
	* @access private
	*/",
 "/**


	*/",
 "/**


	*/",
 "/**


	*/",
 "/**



	*/",
 "/**



	*It\'sreadytobeinsertedintoan\"echo\" line in one of the templates.
	* NOTE: expects a trailing \".\" on the namespace.
	* @access private
	*/",
 "/**
	* Generates a reference to the array of data values for the given
	* (possibly nested) block namespace. This is a string of the form:
	* $this->_tpldata[\'parent\'][$_parent_i][\'$child1\'][$_child1_i][\'$child2\'][$_child2_i]...[\'$childN\']
	*
	* If $include_last_iterator is true, then [$_childN_i] will be appended to the form shown above.
	* NOTE: does not expect a trailing \".\" on the blockname.
	* @access private
	*/",
 "/**
	* Write compiled file to cache directory
	* @access private
	*/",
 "/**
* Extension of template class - Functions needed for compiling templates only.
*
* psoTFX, phpBB Development Team - Completion of file caching, decompilation
* routines and implementation of conditionals/keywords and associated changes
*
* The interface was inspired by PHPLib templates,  and the template file (formats are
* quite similar)
*
* The keyword/conditional implementation is currently based on sections of code from
* the Smarty templating engine (c) 2001 ispi of Lincoln, Inc. which is released
* (on its own and in whole) under the LGPL. Section 3 of the LGPL states that any code
* derived from an LGPL application may be relicenced under the GPL, this applies
* to this source
*
* DEFINE directive inspired by a request by Cyberalien
*
* @package phpBB3
*/",
 "/**
* MCP Forum View
*/",
 "/**
* Resync topics
*/",
 "/**
* Merge selected topics into selected topic
*/",
 "/**
* @package module_install
*/",
 "/**
* @package module_install
*/",
 "/**
* @package module_install
*/",
 "/**
* @package module_install
*/",
 "/**
	* Prune forums
	*/",
 "/**
	* Prune users
	*/",
 "/**
	* Get user_ids/usernames from those being pruned
	*/",
 "/**
* @package acp
*/",
 "/**
* mcp_queue
* Handling the moderation queue
* @package mcp
*/",
 "/**
* Approve Post/Topic
*/",
 "/**
* Disapprove Post/Topic
*/",
 "/**
	*/",
 "/**
	* Able to use the SSL functionality?
	*/",
 "/**
	* Able to use TLS?
	*/",
 "/**
	* Sets the resource which is used. No validation is done here, only escaping.
	* @param string $name
	* @access public
	*/",
 "/**
	* Connect
	*/",
 "/**
	* Disconnect
	*/",
 "/**
	* Connected?
	*/",
 "/**
	* Initiates login (using data from contructor, after calling connect())
	* @access public
	* @return bool
	*/",
 "/**
	* Send data to the Jabber server
	* @param string $xml
	* @access public
	* @return bool
	*/",
 "/**
	* OpenSocket
	* @param string $server host to connect to
	* @param int $port port number
	* @param bool $use_ssl use ssl or not
	* @access public
	* @return bool
	*/",
 "/**
	* Return log
	*/",
 "/**
	* Add information to log
	*/",
 "/**
	* Listens to the connection until it gets data or the timeout is reached.
	* Thus, it should only be called if data is expected to be received.
	* @access public
	* @return mixed either false for timeout or an array with the received data
	*/",
 "/**
	* Initiates account registration (based on data used for contructor)
	* @access public
	* @return bool
	*/",
 "/**
	* Sets account presence. No additional info required (default is \"online\" status)
	* @param $message online, offline...
	* @param $type dnd, away, chat, xa or nothing
	* @param $unavailable set this to true if you want to become unavailable
	* @access public
	* @return bool
	*/",
 "/**
	* This handles all the different XML elements
	* @param array $xml
	* @access public
	* @return bool
	*/",
 "/**
	* Encrypts a password as in RFC 2831
	* @param array $data Needs data from the client-server connection
	* @access public
	* @return string
	*/",
 "/**
	* parse_data like a=\"b\",c=\"d\",... or like a=\"a, b\", c, d=\"e\", f=g,...
	* @param string $data
	* @access public
	* @return array a => b ...
	*/",
 "/**
	* opposite of jabber::parse_data()
	* @param array $data
	* @access public
	* @return string
	*/",
 "/**
	* xmlize()
	* @author Hans Anderson
	* @copyright Hans Anderson / http://www.hansanderson.com/php/xml/
	*/",
 "/**
	* _xml_depth()
	* @author Hans Anderson
	* @copyright Hans Anderson / http://www.hansanderson.com/php/xml/
	*/",
 "/**
*
* Jabber class from Flyspray project
*
* @version class.jabber2.php 1595 2008-09-19 (0.9.9)
* @copyright 2006 Flyspray.org
* @author Florian Schmitz (floele)
*
* Only slightly modified by Acyd Burn
*
* @package phpBB3
*/",
 "/**
	* Initialize hook class.
	*
	* @param array $valid_hooks array containing the hookable functions/methods
	*/",
 "/**
	* Register function/method to be called within hook
	* This function is normally called by the modification/application to attach/register the functions.
	*
	* @param mixed $definition Declaring function (with __FUNCTION__) or class with array(__CLASS__, __FUNCTION__)
	* @param mixed $hook The replacement function/method to be called. Passing function name or array with object/class definition
	* @param string $mode Specify the priority/chain mode. \'normal\' -> hook gets appended to the chain. \'standalone\' -> only the specified hook gets called - later hooks are not able to overwrite this (E_NOTICE is triggered then). \'first\' -> hook is called as the first one within the chain. \'last\' -> hook is called as the last one within the chain.
	*/",
 "/**
	* Calling all functions/methods attached to a specified hook.
	* Called by the function allowing hooks...
	*
	* @param mixed $definition Declaring function (with __FUNCTION__) or class with array(__CLASS__, __FUNCTION__)
	* @return bool False if no hook got executed, true otherwise
	*/",
 "/**
	* Get result from previously called functions/methods for the same hook
	*
	* @param mixed $definition Declaring function (with __FUNCTION__) or class with array(__CLASS__, __FUNCTION__)
	* @return mixed False if nothing returned if there is no result, else array(\'result\' => ... )
	*/",
 "/**
	* Check if the called functions/methods returned something.
	*
	* @param mixed $definition Declaring function (with __FUNCTION__) or class with array(__CLASS__, __FUNCTION__)
	* @return bool True if results are there, false if not
	*/",
 "/**
	* Give actual result from called functions/methods back.
	*
	* @param mixed $definition Declaring function (with __FUNCTION__) or class with array(__CLASS__, __FUNCTION__)
	* @return mixed The result
	*/",
 "/**
	* Add new function to the allowed hooks.
	*
	* @param mixed $definition Declaring function (with __FUNCTION__) or class with array(__CLASS__, __FUNCTION__)
	*/",
 "/**
	* Remove function from the allowed hooks.
	*
	* @param mixed $definition Declaring function (with __FUNCTION__) or class with array(__CLASS__, __FUNCTION__)
	*/",
 "/**
* phpBB Hook Class
* @package phpBB3
*/",
 "/**
	* Validate, cleanup and normalize a string
	*
	* The ultimate convenience function! Clean up invalid UTF-8 sequences,
	* and convert to Normal Form C, canonical composition.
	*
	* @param	string	&$str	The dirty string
	* @return	string			The same string, all shiny and cleaned-up
	*/",
 "/**
	* Validate and normalize a UTF string to NFC
	*
	* @param	string	&$str	Unchecked UTF string
	* @return	string			The string, validated and in normal form
	*/",
 "/**
	* Validate and normalize a UTF string to NFKC
	*
	* @param	string	&$str	Unchecked UTF string
	* @return	string			The string, validated and in normal form
	*/",
 "/**
	* Validate and normalize a UTF string to NFD
	*
	* @param	string	&$str	Unchecked UTF string
	* @return	string			The string, validated and in normal form
	*/",
 "/**
	* Validate and normalize a UTF string to NFKD
	*
	* @param	string	&$str	Unchecked UTF string
	* @return	string			The string, validated and in normal form
	*/",
 "/**
	* Recompose a UTF string
	*
	* @param	string	$str			Unchecked UTF string
	* @param	integer	$pos			Position of the first UTF char (in bytes)
	* @param	integer	$len			Length of the string (in bytes)
	* @param	array	&$qc			Quick-check array, passed by reference but never modified
	* @param	array	&$decomp_map	Decomposition mapping, passed by reference but never modified
	* @return	string					The string, validated and recomposed
	*
	* @access	private
	*/",
 "/**
	* Decompose a UTF string
	*
	* @param	string	$str			UTF string
	* @param	integer	$pos			Position of the first UTF char (in bytes)
	* @param	integer	$len			Length of the string (in bytes)
	* @param	array	&$decomp_map	Decomposition mapping, passed by reference but never modified
	* @return	string					The string, decomposed and sorted canonically
	*
	* @access	private
	*/",
 "/**
* Unicode normalization routines
*
* @package utf
*/",
 "/**
	* Retrieves a language dependend list of words that should be ignored by the search
	*/",
 "/**
	* Stores a list of synonyms that should be replaced in $this->match_synonym and $this->replace_synonym and caches them
	*/",
 "/**
	* Retrieves cached search results
	*
	* @param int &$result_count will contain the number of all results for the search (not only for the current page)
	* @param array &$id_ary is filled with the ids belonging to the requested page that are stored in the cache
	*
	* @return int SEARCH_RESULT_NOT_IN_CACHE or SEARCH_RESULT_IN_CACHE or SEARCH_RESULT_INCOMPLETE
	*/",
 "/**
	* Caches post/topic ids
	*
	* @param array &$id_ary contains a list of post or topic ids that shall be cached, the first element
	* 	must have the absolute index $start in the result set.
	*/",
 "/**
	* Removes old entries from the search results table and removes searches with keywords that contain a word in $words.
	*/",
 "/**
* search_backend
* optional base class for search plugins providing simple caching based on ACM
* and functions to retrieve ignore_words and synonyms
* @package search
*/",
 "/**
	* Set cache path
	*/",
 "/**
	* Load global cache
	*/",
 "/**
	* Unload cache object
	*/",
 "/**
	* Save modified objects
	*/",
 "/**
	* Tidy cache
	*/",
 "/**
	* Get saved cache object
	*/",
 "/**
	* Put data into cache
	*/",
 "/**
	* Purge cache data
	*/",
 "/**
	* Destroy cache data
	*/",
 "/**
	* Check if a given cache entry exist
	*/",
 "/**
	* Load cached sql query
	*/",
 "/**
	* Save sql query
	*/",
 "/**
	* Ceck if a given sql query exist in cache
	*/",
 "/**
	* Fetch row from cache (database)
	*/",
 "/**
	* Fetch a field from the current row of a cached database result (database)
	*/",
 "/**
	* Seek a specific row in an a cached database result (database)
	*/",
 "/**
	* Free memory used for a cached database result (database)
	*/",
 "/**
* ACM Null Caching
* @package acm
*/",
 "/**
* ucp_activate
* User activation
* @package ucp
*/",
 "/**
* ucp_attachments
* User attachments
* @package ucp
*/",
 "/**
* mcp_reports
* Handling the reports queue
* @package mcp
*/",
 "/**
* Closes a report
*/",
 "/**
* @package module_install
*/",
 "/**

	*

	*/",
 "/**

	*/",
 "/**

	*






	*

	*			Thiscanbesettocircumventcertainscriptstoupdatetheuserslastvisitedpage.
	*/",
 "/**




		*/",
 "/**

	*





	*/",
 "/**

	*




	*/",
 "/**

	*






	*/",
 "/**
	* Check for banned user
	*
	* Checks whether the supplied user is banned by id, ip or email. If no parameters
	* are passed to the method pre-existing session data is used. If $return is false
	* this routine does not return on finding a banned user, it outputs a relevant
	* message and stops execution.
	*
	* @param string|array	$user_ips	Can contain a string with one IP or an array of multiple IPs
	*/",
 "/**
	* Check if ip is blacklisted
	* This should be called only where absolutly necessary
	*
	* Only IPv4 (rbldns does not support AAAA records/IPv6 lookups)
	*
	* @author satmd (from the php manual)
	* @param string $mode register/post - spamcop for example is ommitted for posting
	* @return false if ip is not blacklisted, else an array([checked server], [lookup])
	*/",
 "/**
	* Set/Update a persistent login key
	*
	* This method creates or updates a persistent session key. When a user makes
	* use of persistent (formerly auto-) logins a key is generated and stored in the
	* DB. When they revisit with the same key it\'s automatically updated in both the
	* DB and cookie. Multiple keys may exist for each user representing different
	* browsers or locations. As with _any_ non-secure-socket no passphrase login this
	* remains vulnerable to exploit.
	*/",
 "/**
	* Reset all login keys for the specified user
	*
	* This method removes all current login keys for a specified (or the current)
	* user. It will be called on password change to render old keys unusable
	*/",
 "/**
	* Check if the request originated from the same page.
	* @param bool $check_script_path If true, the path will be checked as well
	*/",
 "/**
* Session class
* @package phpBB3
*/",
 "/**
	* Constructor to set the lang path
	*/",
 "/**
	* Function to set custom language path (able to use directory outside of phpBB)
	*
	* @param string $lang_path New language path used.
	* @access public
	*/",
 "/**
	* Setup basic user-specific items (style, language, ...)
	*/",
 "/**
	* More advanced language substitution
	* Function to mimic sprintf() with the possibility of using phpBB\'s language system to substitute nullar/singular/plural forms.
	* Params are the language key and the parameters to be substituted.
	* This function/functionality is inspired by SHS` and Ashe.
	*
	* Example call: <samp>$user->lang(\'NUM_POSTS_IN_QUEUE\', 1);</samp>
	*/",
 "/**
	* Add Language Items - use_db and use_help are assigned where needed (only use them to force inclusion)
	*
	* @param mixed $lang_set specifies the language entries to include
	* @param bool $use_db internal variable for recursion, do not use
	* @param bool $use_help internal variable for recursion, do not use
	*
	* Examples:
	* <code>
	* $lang_set = array(\'posting\', \'help\' => \'faq\');
	* $lang_set = array(\'posting\', \'viewtopic\', \'help\' => array(\'bbcode\', \'faq\'))
	* $lang_set = array(array(\'posting\', \'viewtopic\'), \'help\' => array(\'bbcode\', \'faq\'))
	* $lang_set = \'posting\'
	* $lang_set = array(\'help\' => \'faq\', \'db\' => array(\'help:faq\', \'posting\'))
	* </code>
	*/",
 "/**
	* Set language entry (called by add_lang)
	* @access private
	*/",
 "/**
	* Format user date
	*
	* @param int $gmepoch unix timestamp
	* @param string $format date format in date() notation. | used to indicate relative dates, for example |d m Y|, h:i is translated to Today, h:i.
	* @param bool $forcedate force non-relative date format.
	*
	* @return mixed translated date
	*/",
 "/**
	* Get language id currently used by the user
	*/",
 "/**
	* Get users profile fields
	*/",
 "/**
	* Specify/Get image
	* $suffix is no longer used - we know it. ;) It is there for backward compatibility.
	*/",
 "/**
	* Get option bit field from user options
	*/",
 "/**
	* Set option bit field for user options
	*/",
 "/**
	* Funtion to make the user leave the NEWLY_REGISTERED system group.
	* @access public
	*/",
 "/**
	* Returns all password protected forum ids the user is currently NOT authenticated for.
	*
	* @return array		Array of forum ids
	* @access public
	*/",
 "/**
* Base user class
*
* This is the overarching class which contains (through session extend)
* all methods utilised for user functionality during a session.
*
* @package phpBB3
*/",
 "/**
* @package module_install
*/",
 "/**
* @package acp
*/",
 "/**
	* Parse BBCode
	*/",
 "/**
	* Prepare some bbcodes for better parsing
	*/",
 "/**
	* Init bbcode data for later parsing
	*/",
 "/**
	* Making some pre-checks for bbcodes as well as increasing the number of parsed items
	*/",
 "/**
	* Transform some characters in valid bbcodes
	*/",
 "/**
	* Parse size tag
	*/",
 "/**
	* Parse color tag
	*/",
 "/**
	* Parse u tag
	*/",
 "/**
	* Parse b tag
	*/",
 "/**
	* Parse i tag
	*/",
 "/**
	* Parse img tag
	*/",
 "/**
	* Parse flash tag
	*/",
 "/**
	* Parse inline attachments [ia]
	*/",
 "/**
	* Parse code text from code tag
	* @access private
	*/",
 "/**
	* Parse code tag
	* Expects the argument to start right after the opening [code] tag and to end with [/code]
	*/",
 "/**
	* Parse list bbcode
	* Expects the argument to start with a tag
	*/",
 "/**
		* If you change this code, make sure the cases described within the following reports are still working:
		* #3572 - [quote=\"[test]test\"]test [ test[/quote] - (correct: parsed)
		* #14667 - [quote]test[/quote] test ] and [ test [quote]test[/quote] (correct: parsed)
		* #14770 - [quote=\"[\"]test[/quote] (correct: parsed)
		* [quote=\"[i]test[/i]\"]test[/quote] (correct: parsed)
		* [quote=\"[quote]test[/quote]\"]test[/quote] (correct: parsed - Username displayed as [quote]test[/quote])
		* #20735 - [quote]test[/[/b]quote] test [/quote][/quote] test - (correct: quoted: \"test[/[/b]quote] test\" / non-quoted: \"[/quote] test\" - also failed if layout distorted)
		* #40565 - [quote=\"a\"]a[/quote][quote=\"a]a[/quote] (correct: first quote tag parsed, second quote tag unparsed)
		*/",
 "/**
*				Old quote code working fine, but having errors listed in bug #3572
*
*				$out .= $buffer . $tok;
*				$tok = ($tok == \'[\') ? \']\' : \'[]\';
*				$buffer = \'\';
*/",
 "/**
	* Parse quote bbcode
	* Expects the argument to start with a tag
	*/",
 "/**
	* Validate email
	*/",
 "/**
	* Validate url
	*
	* @param string $var1 optional url parameter for url bbcode: [url(=$var1)]$var2[/url]
	* @param string $var2 url bbcode content: [url(=$var1)]$var2[/url]
	*/",
 "/**
	* Check if url is pointing to this domain/script_path/php-file
	*
	* @param string $url the url to check
	* @return true if the url is pointing to this domain/script_path/php-file, false if not
	*
	* @access private
	*/",
 "/**
* BBCODE FIRSTPASS
* BBCODE first pass class (functions for parsing messages for db storage)
* @package phpBB3
*/",
 "/**
	* Init - give message here or manually
	*/",
 "/**
	* Parse Message
	*/",
 "/**
	* Formatting text for display
	*/",
 "/**
	* Decode message to be placed back into form box
	*/",
 "/**
	* Replace magic urls of form http://xxx.xxx., www.xxx. and xxx@xxx.xxx.
	* Cuts down displayed size of link if over 50 chars, turns absolute links
	* into relative versions when the server/script path matches the link
	*/",
 "/**
	* Parse Smilies
	*/",
 "/**
	* Parse Attachments
	*/",
 "/**
	* Get Attachment Data
	*/",
 "/**
	* Parse Poll
	*/",
 "/**
* Main message parser for posting, pm, etc. takes raw message
* and parses it for attachments, bbcode and smilies
* @package phpBB3
*/",
 "/**
* @package module_install
*/",
 "/**
	* Build Frontend with supplied options
	*/",
 "/**
	* Provides a template editor which allows saving changes to template files on the filesystem or in the database.
	*
	* @param int $template_id specifies which template set is being edited
	*/",
 "/**
	* Allows the admin to view cached versions of template files and clear single template cache files
	*
	* @param int $template_id specifies which template\'s cache is shown
	*/",
 "/**
	* Provides a css editor and a basic easier to use stylesheet editing tool for less experienced (or lazy) users
	*
	* @param int $theme_id specifies which theme is being edited
	*/",
 "/**
	* Edit imagesets
	*
	* @param int $imageset_id specifies which imageset is being edited
	*/",
 "/**
	* Remove style/template/theme/imageset
	*/",
 "/**
	* Remove template/theme/imageset entry from the database
	*/",
 "/**
	* Display the options which can be used to replace a style/template/theme/imageset
	*
	* @return boolean Returns true if the component is the only component and can not be deleted.
	*/",
 "/**
	* Check whether the component is still used by another style or component
	*/",
 "/**
	* Export style or style elements
	*/",
 "/**
	* Display details
	*/",
 "/**
	* Load css file contents
	*/",
 "/**
	* Returns a string containing the value that should be used for the theme_data column in the theme database table.
	* Includes contents of files loaded via @import
	*
	* @param array $theme_row is an associative array containing the theme\'s current database entry
	* @param mixed $stylesheet can either be the new content for the stylesheet or false to load from the standard file
	* @param string $root_path should only be used in case you want to use a different root path than \"{$phpbb_root_path}styles/{$theme_row[\'theme_path\']}\"
	*
	* @return string Stylesheet data for theme_data column in the theme table
	*/",
 "/**
	* Store template files into db
	*/",
 "/**
	* Returns an array containing all template filenames for one template that are currently cached.
	*
	* @param string $template_path contains the name of the template\'s folder in /styles/
	*
	* @return array of filenames that exist in /styles/$template_path/template/ (without extension!)
	*/",
 "/**
	* Destroys cached versions of template files
	*
	* @param array $template_row contains the template\'s row in the STYLES_TEMPLATE_TABLE database table
	* @param mixed $file_ary is optional and may contain an array of template file names which should be refreshed in the cache.
	*	The file names should be the original template file names and not the cache file names.
	*/",
 "/**
	* Install Style/Template/Theme/Imageset
	*/",
 "/**
	* Add new style
	*/",
 "/**

					$reqd_template = (isset($installcfg[\'required_template\'])) ? $installcfg[\'required_template\'] : false;
					$reqd_theme = (isset($installcfg[\'required_theme\'])) ? $installcfg[\'required_theme\'] : false;
					$reqd_imageset = (isset($installcfg[\'required_imageset\'])) ? $installcfg[\'required_imageset\'] : false;

					// Check to see if each element is already installed, if it is grab the id
					foreach ($element_ary as $element => $table)
					{
						$style_row = array_merge($style_row, array(
							$element . \'_id\'			=> 0,
							$element . \'_name\'			=> \'\',
							$element . \'_copyright\'		=> \'\')
						);

			 			$this->test_installed($element, $error, $root_path, ${\'reqd_\' . $element}, $style_row[$element . \'_id\'], $style_row[$element . \'_name\'], $style_row[$element . \'_copyright\']);
	* Is this element installed? If not, grab its cfg details
	*/",
 "/**
	* Install/Add style
	*/",
 "/**
	* Install/add an element, doing various checks as we go
	*/",
 "/**
	* Checks downwards dependencies
	*
	* @access public
	* @param string $mode The element type to check - only template is supported
	* @param int $id The template id
	* @returns false if no component inherits, array with name, path and id for each subtemplate otherwise
	*/",
 "/**
	* Checks upwards dependencies
	*
	* @access public
	* @param string $mode The element type to check - only template is supported
	* @param int $id The template id
	* @returns false if the component does not inherit, array with name, path and id otherwise
	*/",
 "/**
	* Moves a template set and its subtemplates to the database
	*
	* @access public
	* @param string $mode The component to move - only template is supported
	* @param int $id The template id
	*/",
 "/**
	* Moves a template set to the database
	*
	* @access private
	* @param string $mode The component to move - only template is supported
	* @param int $id The template id
	* @param string $path TThe path to the template files
	*/",
 "/**
	* Moves a template set and its subtemplates to the filesystem
	*
	* @access public
	* @param string $mode The component to move - only template is supported
	* @param int $id The template id
	*/",
 "/**
	* Moves a template set to the filesystem
	*
	* @access private
	* @param string $mode The component to move - only template is supported
	* @param int $id The template id
	* @param string $path The path to the template
	*/",
 "/**
* @package acp
*/",
 "/**
	* Constuctor
	* Set module include path
	*/",
 "/**
	* Set custom include path for modules
	* Schema for inclusion is include_path . modulebase
	*
	* @param string $include_path include path to be used.
	* @access public
	*/",
 "/**

	*





	*/",
 "/**


	*


	*

	*/",
 "/**
	* Check module authorisation
	*/",
 "/**
	* Set active module
	*/",
 "/**
	* Loads currently active module
	*
	* This method loads a given module, passing it the relevant id and mode.
	*/",
 "/**
	* Appending url parameter to the currently active module.
	*
	* This function is called for adding specific url parameters while executing the current module.
	* It is doing the same as the _module_{name}_url() function, apart from being able to be called after
	* having dynamically parsed specific parameters. This allows more freedom in choosing additional parameters.
	* One example can be seen in /includes/mcp/mcp_notes.php - $this->p_master->adjust_url() call.
	*
	* @param string $url_extra Extra url parameters, e.g.: &amp;u=$user_id
	*
	*/",
 "/**
	* Check if a module is active
	*/",
 "/**
	* Get parents
	*/",
 "/**
	* Get tree branch
	*/",
 "/**
	* Build true binary tree from given array
	* Not in use
	*/",
 "/**
	* Build navigation structure
	*/",
 "/**
	* Returns desired template name
	*/",
 "/**
	* Returns the desired page title
	*/",
 "/**
	* Load module as the current active one without the need for registering it
	*/",
 "/**
	* Display module
	*/",
 "/**
	* Toggle whether this module will be displayed or not
	*/",
 "/**
	* Add custom MOD info language file
	*/",
 "/**
* Class handling all types of \'plugins\' (a future term)
* @package phpBB3
*/",
 "/** @todo use in-built function **/",
 "/**
	* Build Select for category items
	*/",
 "/**
	* Extension group select
	*/",
 "/**

	*/",
 "/**

	*/",
 "/**

	*/",
 "/**

	*/",
 "/**
	* Adjust all three max_filesize config vars for display
	*/",
 "/**
	* Write secure_allow_deny config field
	*/",
 "/**
* @package acp
*/",
 "/**
* @package module_install
*/",
 "/**
* Login function
*
* @param string $username
* @param string $password
* @param string $ip			IP address the login is taking place from. Used to
*							limit the number of login attempts per IP address.
* @param string $browser	The user agent used to login
* @param string $forwarded_for X_FORWARDED_FOR header sent with login request
* @return array				A associative array of the format
*							array(
*								\'status\' => status constant
*								\'error_msg\' => string
*								\'user_row\' => array
*							)
*/",
 "/**
* @package mcp
*/",
 "/**
* @package acp
*/",
 "/**
	* Validate bot name against username table
	*/",
 "/**
* @package acp
*/",
 "/**
* Handling actions in post details screen
*/",
 "/**
* Change a post\'s poster
*/",
 "/**
	* Display user notes
	*/",
 "/**
* mcp_notes
* Displays notes about a user
* @package mcp
*/",
 "/**
* @package module_install
*/",
 "/**
	* Checks for correct MySQL version and stores min/max word length in the config
	*/",
 "/**
	* Splits keywords entered by a user into an array of words stored in $this->split_words
	* Stores the tidied search query in $this->search_query
	*
	* @param string &$keywords Contains the keyword as entered by the user
	* @param string $terms is either \'all\' or \'any\'
	* @return bool false if no valid keywords were found and otherwise true
	*/",
 "/**
	* Turns text into an array of words
	*/",
 "/**
	* Performs a search on keywords depending on display specific params. You have to run split_keywords() first.
	*
	* @param	string		$type				contains either posts or topics depending on what should be searched for
	* @param	string		$fields				contains either titleonly (topic titles should be searched), msgonly (only message bodies should be searched), firstpost (only subject and body of the first post should be searched) or all (all post bodies and subjects should be searched)
	* @param	string		$terms				is either \'all\' (use query as entered, words without prefix should default to \"have to be in field\") or \'any\' (ignore search query parts and just return all posts that contain any of the specified words)
	* @param	array		$sort_by_sql		contains SQL code for the ORDER BY part of a query
	* @param	string		$sort_key			is the key of $sort_by_sql for the selected sorting
	* @param	string		$sort_dir			is either a or d representing ASC and DESC
	* @param	string		$sort_days			specifies the maximum amount of days a post may be old
	* @param	array		$ex_fid_ary			specifies an array of forum ids which should not be searched
	* @param	array		$m_approve_fid_ary	specifies an array of forum ids in which the searcher is allowed to view unapproved posts
	* @param	int			$topic_id			is set to 0 or a topic id, if it is not 0 then only posts in this topic should be searched
	* @param	array		$author_ary			an array of author ids if the author should be ignored during the search the array is empty
	* @param	string		$author_name		specifies the author match, when ANONYMOUS is also a search-match
	* @param	array		&$id_ary			passed by reference, to be filled with ids for the page specified by $start and $per_page, should be ordered
	* @param	int			$start				indicates the first index of the page
	* @param	int			$per_page			number of ids each page is supposed to contain
	* @return	boolean|int						total number of results
	*
	* @access	public
	*/",
 "/**
	* Performs a search on an author\'s posts without caring about message contents. Depends on display specific params
	*
	* @param	string		$type				contains either posts or topics depending on what should be searched for
	* @param	boolean		$firstpost_only		if true, only topic starting posts will be considered
	* @param	array		$sort_by_sql		contains SQL code for the ORDER BY part of a query
	* @param	string		$sort_key			is the key of $sort_by_sql for the selected sorting
	* @param	string		$sort_dir			is either a or d representing ASC and DESC
	* @param	string		$sort_days			specifies the maximum amount of days a post may be old
	* @param	array		$ex_fid_ary			specifies an array of forum ids which should not be searched
	* @param	array		$m_approve_fid_ary	specifies an array of forum ids in which the searcher is allowed to view unapproved posts
	* @param	int			$topic_id			is set to 0 or a topic id, if it is not 0 then only posts in this topic should be searched
	* @param	array		$author_ary			an array of author ids
	* @param	string		$author_name		specifies the author match, when ANONYMOUS is also a search-match
	* @param	array		&$id_ary			passed by reference, to be filled with ids for the page specified by $start and $per_page, should be ordered
	* @param	int			$start				indicates the first index of the page
	* @param	int			$per_page			number of ids each page is supposed to contain
	* @return	boolean|int						total number of results
	*
	* @access	public
	*/",
 "/**
	* Destroys cached search results, that contained one of the new words in a post so the results won\'t be outdated.
	*
	* @param string $mode contains the post mode: edit, post, reply, quote ...
	*/",
 "/**
	* Destroy cached results, that might be outdated after deleting a post
	*/",
 "/**
	* Destroy old cache entries
	*/",
 "/**
	* Create fulltext index
	*/",
 "/**
	* Drop fulltext index
	*/",
 "/**
	* Returns true if both FULLTEXT indexes exist
	*/",
 "/**
	* Returns an associative array containing information about the indexes
	*/",
 "/**
	* Display a note, that UTF-8 support is not available with certain versions of PHP
	*/",
 "/**
* fulltext_mysql
* Fulltext search for MySQL
* @package search
*/",
 "/**
* @package module_install
*/",
 "/**
* @package module_install
*/",
 "/**
* Run links through append_sid(), prepend generate_board_url() and remove session id
**/",
 "/**
* Generate ISO 8601 date string (RFC 3339)
**/",
 "/**
* Generate text content
**/",
 "/**
	* Return correct object for specified mode
	*
	* @param string	$mode		The feeds mode.
	* @param int	$forum_id	Forum id specified by the script if forum feed provided.
	* @param int	$topic_id	Topic id specified by the script if topic feed provided.
	*
	* @return object	Returns correct feeds object for specified mode.
	*/",
 "/**
* Factory class to return correct object
* @package phpBB3
*/",
 "/**
	* Constructor
	*/",
 "/**
	* Set keys.
	*/",
 "/**
	* Open feed
	*/",
 "/**
	* Close feed
	*/",
 "/**
	* Set key
	*/",
 "/**
	* Get key
	*/",
 "/**
* Base class with some generic functions and settings.
*
* @package phpBB3
*/",
 "/**
* Abstract class for post based feeds
*
* @package phpBB3
*/",
 "/**
* Abstract class for topic based feeds
*
* @package phpBB3
*/",
 "/**
* Board wide feed (aka overall feed)
*
* This will give you the newest {$this->num_items} posts
* from the whole board.
*
* @package phpBB3
*/",
 "/**
* Forum feed
*
* This will give you the last {$this->num_items} posts made
* within a specific forum.
*
* @package phpBB3
*/",
 "/**
* Topic feed for a specific topic
*
* This will give you the last {$this->num_items} posts made within this topic.
*
* @package phpBB3
*/",
 "/**
* \'All Forums\' feed
*
* This will give you a list of all postable forums where feeds are enabled
* including forum description, topic stats and post stats
*
* @package phpBB3
*/",
 "/**
* News feed
*
* This will give you {$this->num_items} first posts
* of all topics in the selected news forums.
*
* @package phpBB3
*/",
 "/**
* New Topics feed
*
* This will give you the last {$this->num_items} created topics
* including the first post.
*
* @package phpBB3
*/",
 "/**
* Active Topics feed
*
* This will give you the last {$this->num_items} topics
* with replies made withing the last {$this->sort_days} days
* including the last post.
*
* @package phpBB3
*/",
 "/**
	* Display ban options
	*/",
 "/**
* @package acp
*/",
 "/**
* @package module_install
*/",
 "/**
* @package acp
*/",
 "/**
* @package acp
*/",
 "/**
* @package acp
*/",
 "/**
* @package acp
*/",
 "/**
* @package acp
*/",
 "/**
* @package acp
*/",
 "/**
* @package acp
*/",
 "/**
* @package acp
*/",
 "/**
* @package acp
*/",
 "/**
* ucp_register
* Board registration
* @package ucp
*/",
 "/**
* @package module_install
*/",
 "/**
	* Define filtered pngs on init
	*/",
 "/**
	* Create the image containing $code with a seed of $seed
	*/",
 "/**
	* This is designed to randomise the pixels of the image data within
	* certain limits so as to keep it readable. It also varies the image
	* width a little
	*/",
 "/**
	* This creates a chunk of the given type, with the given data
	* of the given length adding the relevant crc
	*/",
 "/**
	* Creates greyscale 8bit png - The PNG spec can be found at
	* http://www.libpng.org/pub/png/spec/PNG-Contents.html we use
	* png because it\'s a fully recognised open standard and supported
	* by practically all modern browsers and OSs
	*/",
 "/**
	* png image data
	* Each \'data\' element is base64_encoded uncompressed IDAT
	*/",
 "/**
* Main non-gd captcha class
* @ignore
* @package VC
*/",
 "/**
	* Get row for specified module
	*/",
 "/**
	* Get available module information from module files
	*/",
 "/**
	* Simple version of jumpbox, just lists modules
	*/",
 "/**
	* Get module branch
	*/",
 "/**

	*/",
 "/**

	*/",
 "/**

	*

	*/",
 "/**

	*/",
 "/**

	*/",
 "/**




		*/",
 "/**

	*/",
 "/**

*/",
 "/**
* @package acp
*/",
 "/**
* @package module_install
*/",
 "/**
* @package module_install
*/",
 "/**
* @package module_install
*/",
 "/**
	* Constructor. Set DB Object and set {@link $return_statements return_statements}.
	*
	* @param phpbb_dbal	$db					DBAL object
	* @param bool		$return_statements	True if only statements should be returned and no SQL being executed
	*/",
 "/**
	* Gets a list of tables in the database.
	*
	* @return array		Array of table names  (all lower case)
	*/",
 "/**
	* Check if table exists
	*
	*
	* @param string	$table_name	The table name to check for
	* @return bool true if table exists, else false
	*/",
 "/**
	* Create SQL Table
	*
	* @param string	$table_name	The table name to create
	* @param array	$table_data	Array containing table data.
	* @return array	Statements if $return_statements is true.
	*/",
 "/**
	* Handle passed database update array.
	* Expected structure...
	* Key being one of the following
	*	change_columns: Column changes (only type, not name)
	*	add_columns: Add columns to a table
	*	drop_keys: Dropping keys
	*	drop_columns: Removing/Dropping columns
	*	add_primary_keys: adding primary keys
	*	add_unique_index: adding an unique index
	*	add_index: adding an index (can be column:index_size if you need to provide size)
	*
	* The values are in this format:
	*		{TABLE NAME}		=> array(
	*			{COLUMN NAME}		=> array({COLUMN TYPE}, {DEFAULT VALUE}, {OPTIONAL VARIABLES}),
	*			{KEY/INDEX NAME}	=> array({COLUMN NAMES}),
	*		)
	*
	* For more information have a look at /develop/create_schema_files.php (only available through SVN)
	*/",
 "/**
	* Gets a list of columns of a table.
	*
	* @param string $table		Table name
	*
	* @return array				Array of column names (all lower case)
	*/",
 "/**
	* Check whether a specified column exist in a table
	*
	* @param string	$table			Table to check
	* @param string	$column_name	Column to check
	*
	* @return bool		True if column exists, false otherwise
	*/",
 "/**
	* Check if a specified index exists in table. Does not return PRIMARY KEY and UNIQUE indexes.
	*
	* @param string	$table_name		Table to check the index at
	* @param string	$index_name		The index name to check
	*
	* @return bool True if index exists, else false
	*/",
 "/**
	* Check if a specified index exists in table. Does not return PRIMARY KEY and UNIQUE indexes.
	*
	* @param string	$table_name		Table to check the index at
	* @param string	$index_name		The index name to check
	*
	* @return bool True if index exists, else false
	*/",
 "/**
	* Private method for performing sql statements (either execute them or return them)
	* @access private
	*/",
 "/**
	* Function to prepare some column information for better usage
	* @access private
	*/",
 "/**
	* Add new column
	*/",
 "/**
	* Drop column
	*/",
 "/**
	* Drop Index
	*/",
 "/**
	* Drop Table
	*/",
 "/**
	* Add primary key
	*/",
 "/**
	* Add unique index
	*/",
 "/**
	* Add index
	*/",
 "/**
	* List all of the indices that belong to a table,
	* does not count:
	* * UNIQUE indices
	* * PRIMARY keys
	*/",
 "/**
	* Change column type (not name!)
	*/",
 "/**
* Database Tools for handling cross-db actions such as altering columns, etc.
* Currently not supported is returning SQL for creating tables.
*
* @package dbal
* @note currently not used within phpBB3, but may be utilized later.
*/",
 "/**
	* Initialises a search backend object
	*
	* @return false if no error occurred else an error message
	*/",
 "/**
* @package acp
*/",
 "/**
* Compose private message
* Called from ucp_pm with mode == \'compose\'
*/",
 "/**
* For composing messages, handle list actions
*/",
 "/**
* Build the hidden field for the recipients. Needed, as the variable is not read via request_var.
*/",
 "/**
* Return number of private message recipients
*/",
 "/**
* Get number of \'num_recipients\' recipients from first position
*/",
 "/**
* @package module_install
*/",
 "/**
* @package module_install
*/",
 "/**
* ucp_zebra
* @package ucp
*/",
 "/**
* Prepare profile data
*/",
 "/**
	* The old way to generate code, suitable for GD and non-GD. Resets the internal state.
	*/",
 "/**
	* New Question, if desired.
	*/",
 "/**
	* New Question, if desired.
	*/",
 "/**
	* Look up everything we need for painting&checking.
	*/",
 "/**
	*  API function
	*/",
 "/**
* This class holds the code shared by the two default 3.0.x CAPTCHAs.
*
* @package VC
*/",
 "/**
* @todo [words] check regular expressions for special char replacements (stored specialchared in db)
* @package acp
*/",
 "/**
* @package module_install
*/",
 "/**
* @package module_install
*/",
 "/**
* ucp_resend
* Resending activation emails
* @package ucp
*/",
 "/**
* Recalculate Nested Sets
*
* @param int	$new_id	first left_id (should start with 1)
* @param string	$pkey	primary key-column (containing the id for the parent_id of the children)
* @param string	$table	constant or fullname of the table
* @param int	$parent_id parent_id of the current set (default = 0)
* @param array	$where	contains strings to compare closer on the where statement (additional)
*
* @author EXreaction
*/",
 "/**
* Simple version of jumpbox, just lists authed forums
*/",
 "/**
* Generate size select options
*/",
 "/**
* Generate list of groups (option fields without select)
*
* @param int $group_id The default group id to mark as selected
* @param array $exclude_ids The group ids to exclude from the list, false (default) if you whish to exclude no id
* @param int $manage_founder If set to false (default) all groups are returned, if 0 only those groups returned not being managed by founders only, if 1 only those groups returned managed by founders only.
*
* @return string The list of options.
*/",
 "/**
* Obtain authed forums list
*/",
 "/**
* Get forum branch
*/",
 "/**
* Copies permissions from one forum to others
*
* @param int	$src_forum_id		The source forum we want to copy permissions from
* @param array	$dest_forum_ids		The destination forum(s) we want to copy to
* @param bool	$clear_dest_perms	True if destination permissions should be deleted
* @param bool	$add_log			True if log entry should be added
*
* @return bool						False on error
*
* @author bantu
*/",
 "/**
* Get physical file listing
*/",
 "/**
* Move topic(s)
*/",
 "/**
* Move post(s)
*/",
 "/**
* Remove topic(s)
*/",
 "/**
* Remove post(s)
*/",
 "/**
* Delete Attachments
*
* @param string $mode can be: post|message|topic|attach|user
* @param mixed $ids can be: post_ids, message_ids, topic_ids, attach_ids, user_ids
* @param bool $resync set this to false if you are deleting posts or topics
*/",
 "/**
* Deletes shadow topics pointing to a specified forum.
*
* @param int		$forum_id		The forum id
* @param string		$sql_more		Additional WHERE statement, e.g. t.topic_time < (time() - 1234)
* @param bool		$auto_sync		Will call sync() if this is true
*
* @return array		Array with affected forums
*
* @author bantu
*/",
 "/**
* Update/Sync posted information for topics
*/",
 "/**
* Delete attached file
*/",
 "/**
* All-encompasing sync function
*
* Exaples:
* <code>
* sync(\'topic\', \'topic_id\', 123);			// resync topic #123
* sync(\'topic\', \'forum_id\', array(2, 3));	// resync topics from forum #2 and #3
* sync(\'topic\');							// resync all topics
* sync(\'topic\', \'range\', \'topic_id BETWEEN 1 AND 60\');	// resync a range of topics/forums (only available for \'topic\' and \'forum\' modes)
* </code>
*
* Modes:
* - forum				Resync complete forum
* - topic				Resync topics
* - topic_moved			Removes topic shadows that would be in the same forum as the topic they link to
* - topic_approved		Resyncs the topic_approved flag according to the status of the first post
* - post_reported		Resyncs the post_reported flag, relying on actual reports
* - topic_reported		Resyncs the topic_reported flag, relying on post_reported flags
* - post_attachement	Same as post_reported, but with attachment flags
* - topic_attachement	Same as topic_reported, but with attachment flags
*/",
 "/**
* Prune function
*/",
 "/**
* Function auto_prune(), this function now relies on passed vars
*/",
 "/**
* remove_comments will strip the sql comment lines out of an uploaded sql file
* specifically for mssql and postgres type files in the install....
*/",
 "/**
* Cache moderators, called whenever permissions are changed via admin_permissions. Changes of username
* and group names must be carried through for the moderators table
*/",
 "/**
* View log
* If $log_count is set to false, we will skip counting all entries in the database.
*/",
 "/**
* Update foes - remove moderators and administrators from foe lists...
*/",
 "/**
* Lists inactive users
*/",
 "/**
* Lists warned users
*/",
 "/**
* Get database size
* Currently only mysql and mssql are supported
*/",
 "/**
* Retrieve contents from remotely stored file
*/",
 "/**
* Tidy Warnings
* Remove all warnings which have now expired from the database
* The duration of a warning can be defined by the administrator
* This only removes the warning and reduces the associated count,
* it does not remove the user note recording the contents of the warning
*/",
 "/**
* Tidy database, doing some maintanance tasks
*/",
 "/**
* Add permission language - this will make sure custom files will be included
*/",
 "/**
 * Obtains the latest version information
 *
 * @param bool $force_update Ignores cached data. Defaults to false.
 * @param bool $warn_fail Trigger a warning if obtaining the latest version information fails. Defaults to false.
 * @param int $ttl Cache version information for $ttl seconds. Defaults to 86400 (24 hours).
 *
 * @return string|false Version info on success, false on failure.
 */",
 "/**
 * Enables a particular flag in a bitfield column of a given table.
 *
 * @param string	$table_name		The table to update
 * @param string	$column_name	The column containing a bitfield to update
 * @param int		$flag			The binary flag which is OR-ed with the current column value
 * @param string	$sql_more		This string is attached to the sql query generated to update the table.
 *
 * @return void
 */",
 "/**
* @todo [smilies] check regular expressions for special char replacements (stored specialchared in db)
* @package acp
*/",
 "/**
* @package module_install
*/",
 "/**
* @package module_install
*/",
 "/**
	* Set cache path
	*/",
 "/**
	* Load global cache
	*/",
 "/**
	* Unload cache object
	*/",
 "/**
	* Save modified objects
	*/",
 "/**
	* Tidy cache
	*/",
 "/**
	* Get saved cache object
	*/",
 "/**
	* Put data into cache
	*/",
 "/**
	* Purge cache data
	*/",
 "/**
	* Destroy cache data
	*/",
 "/**
	* Check if a given cache entry exist
	*/",
 "/**
	* Load cached sql query
	*/",
 "/**
	* Save sql query
	*/",
 "/**
	* Ceck if a given sql query exist in cache
	*/",
 "/**
	* Fetch row from cache (database)
	*/",
 "/**
	* Fetch a field from the current row of a cached database result (database)
	*/",
 "/**
	* Seek a specific row in an a cached database result (database)
	*/",
 "/**
	* Free memory used for a cached database result (database)
	*/",
 "/**
	* Read cached data from a specified file
	*
	* @access private
	* @param string $filename Filename to write
	* @return mixed False if an error was encountered, otherwise the data type of the cached data
	*/",
 "/**
	* Write cache data to a specified file
	*
	* \'data_global\' is a special case and the generated format is different for this file:
	* <code>
	* <?php exit; ?>
	* (expiration)
	* (length of var and serialised data)
	* (var)
	* (serialised data)
	* ... (repeat)
	* </code>
	*
	* The other files have a similar format:
	* <code>
	* <?php exit; ?>
	* (expiration)
	* (query) [SQL files only]
	* (length of serialised data)
	* (serialised data)
	* </code>
	*
	* @access private
	* @param string $filename Filename to write
	* @param mixed $data Data to store
	* @param int $expires Timestamp when the data expires
	* @param string $query Query when caching SQL queries
	* @return bool True if the file was successfully created, otherwise false
	*/",
 "/**
	* Removes/unlinks file
	*/",
 "/**
* ACM File Based Caching
* @package acm
*/",
 "/**
 * Prior to version 1.1 the SQL Server Native PHP driver didn\'t support sqlsrv_num_rows, or cursor based seeking so we recall all rows into an array
 * and maintain our own cursor index into that array.
 */",
 "/**
	* Connect to server
	*/",
 "/**
	* Version information about used database
	* @param bool $raw if true, only return the fetched sql_server_version
	* @param bool $use_cache If true, it is safe to retrieve the value from the cache
	* @return string sql server version
	*/",
 "/**
	* {@inheritDoc}
	*/",
 "/**
	* SQL Transaction
	* @access private
	*/",
 "/**
	* Base query method
	*
	* @param	string	$query		Contains the SQL query which shall be executed
	* @param	int		$cache_ttl	Either 0 to avoid caching or the time in seconds which the result shall be kept in cache
	* @return	mixed				When casted to bool the returned value returns true on success and false on failure
	*
	* @access	public
	*/",
 "/**
	* Build LIMIT query
	*/",
 "/**
	* Return number of affected rows
	*/",
 "/**
	* Fetch current row
	*/",
 "/**
	* Seek to given row number
	* rownum is zero-based
	*/",
 "/**
	* Get last inserted id after insert statement
	*/",
 "/**
	* Free sql result
	*/",
 "/**
	* Escape string used in sql query
	*/",
 "/**
	* Build LIKE expression
	* @access private
	*/",
 "/**
	* return sql error array
	* @access private
	*/",
 "/**
	* Build db-specific query data
	* @access private
	*/",
 "/**
	* Close sql connection
	* @access private
	*/",
 "/**
	* Build db-specific report
	* @access private
	*/",
 "/**
	* Utility method used to retrieve number of rows
	* Emulates mysql_num_rows
	* Used in acp_database.php -> write_data_mssqlnative()
	* Requires a static or keyset cursor to be definde via
	* mssqlnative_set_query_options()
	*/",
 "/**
	* Allows setting mssqlnative specific query options passed to sqlsrv_query as 4th parameter.
	*/",
 "/**
* @package dbal
*/",
 "/**
	* Constructor
	*/",
 "/**
	* return on error or display error message
	*/",
 "/**
	* Return number of sql queries and cached sql queries used
	*/",
 "/**
	* Add to query count
	*/",
 "/**
	* DBAL garbage collection, close sql connection
	*/",
 "/**
	* Build LIMIT query
	* Doing some validation here.
	*/",
 "/**
	* Fetch all rows
	*/",
 "/**
	* Fetch field
	* if rownum is false, the current row is used, else it is pointing to the row (zero-based)
	*/",
 "/**
	* Correctly adjust LIKE expression for special characters
	* Some DBMS are handling them in a different way
	*
	* @param string $expression The expression to use. Every wildcard is escaped, except $this->any_char and $this->one_char
	* @return string LIKE expression including the keyword!
	*/",
 "/**
	* Returns whether results of a query need to be buffered to run a transaction while iterating over them.
	*
	* @return bool Whether buffering is required.
	*/",
 "/**
	* SQL Transaction
	* @access private
	*/",
 "/**
	* Build sql statement from array for insert/update/select statements
	*
	* Idea for this from Ikonboard
	* Possible query values: INSERT, INSERT_SELECT, UPDATE, SELECT
	*
	*/",
 "/**
	* Build IN or NOT IN sql comparison string, uses <> or = on single element
	* arrays to improve comparison speed
	*
	* @access public
	* @param	string	$field				name of the sql column that shall be compared
	* @param	array	$array				array of values that are allowed (IN) or not allowed (NOT IN)
	* @param	bool	$negate				true for NOT IN (), false for IN () (default)
	* @param	bool	$allow_empty_set	If true, allow $array to be empty, this function will return 1=1 or 1=0 then. Default to false.
	*/",
 "/**
	* Run binary AND operator on DB column.
	* Results in sql statement: \"{$column_name} & (1 << {$bit}) {$compare}\"
	*
	* @param string $column_name The column name to use
	* @param int $bit The value to use for the AND operator, will be converted to (1 << $bit). Is used by options, using the number schema... 0, 1, 2...29
	* @param string $compare Any custom SQL code after the check (for example \"= 0\")
	*/",
 "/**
	* Run binary OR operator on DB column.
	* Results in sql statement: \"{$column_name} | (1 << {$bit}) {$compare}\"
	*
	* @param string $column_name The column name to use
	* @param int $bit The value to use for the OR operator, will be converted to (1 << $bit). Is used by options, using the number schema... 0, 1, 2...29
	* @param string $compare Any custom SQL code after the check (for example \"= 0\")
	*/",
 "/**
	* Run more than one insert statement.
	*
	* @param string $table table name to run the statements on
	* @param array &$sql_ary multi-dimensional array holding the statement data.
	*
	* @return bool false if no statements were executed.
	* @access public
	*/",
 "/**
	* Function for validating values
	* @access private
	*/",
 "/**
	* Build sql statement from array for select and select distinct statements
	*
	* Possible query values: SELECT, SELECT_DISTINCT
	*/",
 "/**
	* display sql error page
	*/",
 "/**
	* Explain queries
	*/",
 "/**
* Database Abstraction Layer
* @package dbal
*/",
 "/**
* This variable holds the class name to use later
*/",
 "/**
* @package acp
*/",
 "/**
	* Optionset replacement for this module based on $user->optionset
	*/",
 "/**
	* Optionget replacement for this module based on $user->optionget
	*/",
 "/**
* @package acp
*/",
 "/**
	* Divides the Largest Common Subsequence (LCS) of the sequences (XOFF,
	* XLIM) and (YOFF, YLIM) into NCHUNKS approximately equally sized segments.
	*
	* Returns (LCS, PTS).  LCS is the length of the LCS. PTS is an array of
	* NCHUNKS+1 (X, Y) indexes giving the diving points between sub
	* sequences.  The first sub-sequence is contained in (X0, X1), (Y0, Y1),
	* the second in (X1, X2), (Y1, Y2) and so on.  Note that (X0, Y0) ==
	* (XOFF, YOFF) and (X[NCHUNKS], Y[NCHUNKS]) == (XLIM, YLIM).
	*
	* This function assumes that the first lines of the specified portions of
	* the two files do not match, and likewise that the last lines do not
	* match.  The caller must trim matching lines from the beginning and end
	* of the portions it is going to specify.
	*/",
 "/**
	* Finds LCS of two sequences.
	*
	* The results are recorded in the vectors $this->{x,y}changed[], by
	* storing a 1 in the element for each line that is an insertion or
	* deletion (ie. is not in the LCS).
	*
	* The subsequence of file 0 is (XOFF, XLIM) and likewise for file 1.
	*
	* Note that XLIM, YLIM are exclusive bounds.  All line numbers are
	* origin-0 and discarded lines are not counted.
	*/",
 "/**
	* Adjusts inserts/deletes of identical lines to join changes as much as possible.
	*
	* We do something when a run of changed lines include a line at one end
	* and has an excluded, identical line at the other.  We are free to
	* choose which identical line is included. \'compareseq\' usually chooses
	* the one at the beginning, but usually it is cleaner to consider the
	* following identical line to be the \"change\".
	*
	* This is extracted verbatim from analyze.c (GNU diffutils-2.7).
	*/",
 "/**
* Code from pear.php.net, Text_Diff-1.1.0 package
* http://pear.php.net/package/Text_Diff/ (native engine)
*
* Modified by phpBB Group to meet our coding standards
* and being able to integrate into phpBB
*
* Class used internally by Text_Diff to actually compute the diffs. This
* class is implemented using native PHP code.
*
* The algorithm used here is mostly lifted from the perl module
* Algorithm::Diff (version 1.06) by Ned Konz, which is available at:
* http://www.perl.com/CPAN/authors/id/N/NE/NEDKONZ/Algorithm-Diff-1.06.zip
*
* More ideas are taken from: http://www.ics.uci.edu/~eppstein/161/960229.html
*
* Some ideas (and a bit of code) are taken from analyze.c, of GNU
* diffutils-2.7, which can be found at:
* ftp://gnudist.gnu.org/pub/gnu/diffutils/diffutils-2.7.tar.gz
*
* Some ideas (subdivision by NCHUNKS > 2, and some optimizations) are from
* Geoffrey T. Dairiki <dairiki@dairiki.org>. The original PHP version of this
* code was written by him, and is used/adapted with his permission.
*
* Copyright 2004-2008 The Horde Project (http://www.horde.org/)
*
* @author  Geoffrey T. Dairiki <dairiki@dairiki.org>
* @package diff
*
* @access private
*/",
 "/**
* @package module_install
*/",
 "/**
* Class holding all convertor-specific details.
* @package install
*/",
 "/**
	* Variables used while converting, they are accessible from the global variable $convert
	*/",
 "/**
	* Generate a list of all available conversion modules
	*/",
 "/**
	*/",
 "/**
	* The function which does the actual work (or dispatches it to the relevant places)
	*/",
 "/**
	* Sync function being executed at the middle, some functions need to be executed after a successful sync.
	*/",
 "/**
	* Save the convertor status
	*/",
 "/**
	* Finish conversion, the last function to be called.
	*/",
 "/**
	* This function marks the steps after syncing
	*/",
 "/**
	* This function marks the steps before syncing (jump=1)
	*/",
 "/**
	* Function for processing the currently handled row
	*/",
 "/**
	* Own meta refresh function to be able to change the global time used
	*/",
 "/**
* Convert class for conversions
* @package install
*/",
 "/**
	* Connect to server
	*/",
 "/**
	* Version information about used database
	* @param bool $raw if true, only return the fetched sql_server_version
	* @param bool $use_cache If true, it is safe to retrieve the value from the cache
	* @return string sql server version
	*/",
 "/**
	* SQL Transaction
	* @access private
	*/",
 "/**
	* Base query method
	*
	* @param	string	$query		Contains the SQL query which shall be executed
	* @param	int		$cache_ttl	Either 0 to avoid caching or the time in seconds which the result shall be kept in cache
	* @return	mixed				When casted to bool the returned value returns true on success and false on failure
	*
	* @access	public
	*/",
 "/**
	* Build LIMIT query
	*/",
 "/**
	* Return number of affected rows
	*/",
 "/**
	* Fetch current row
	*/",
 "/**
	* Seek to given row number
	* rownum is zero-based
	*/",
 "/**
	* Get last inserted id after insert statement
	*/",
 "/**
	* Free sql result
	*/",
 "/**
	* Escape string used in sql query
	*/",
 "/**
	* Build LIKE expression
	* @access private
	*/",
 "/**
	* return sql error array
	* @access private
	*/",
 "/**
	* Build db-specific query data
	* @access private
	*/",
 "/**
	* Close sql connection
	* @access private
	*/",
 "/**
	* Build db-specific report
	* @access private
	*/",
 "/**
* MSSQL Database Abstraction Layer
* Minimum Requirement is MSSQL 2000+
* @package dbal
*/",
 "/**
	*  API function
	*/",
 "/**
* @package VC
*/",
 "/**
* mcp_reports
* Handling the reports queue
* @package mcp
*/",
 "/**
* Print out footer
*/",
 "/**
* Function for triggering an sql statement
*/",
 "/**
			* Do not resync post counts here. An admin may do this later from the ACP
			$start = 0;
			$step = ($config[\'num_posts\']) ? (max((int) ($config[\'num_posts\'] / 5), 20000)) : 20000;

			$sql = \'UPDATE \' . USERS_TABLE . \' SET user_posts = 0\';
			_sql($sql, $errored, $error_ary);

			do
			{
				$sql = \'SELECT COUNT(post_id) AS num_posts, poster_id
					FROM \' . POSTS_TABLE . \'
					WHERE post_id BETWEEN \' . ($start + 1) . \' AND \' . ($start + $step) . \'
						AND post_postcount = 1 AND post_approved = 1
					GROUP BY poster_id\';
				$result = _sql($sql, $errored, $error_ary);

				if ($row = $db->sql_fetchrow($result))
				{
					do
					{
						$sql = \'UPDATE \' . USERS_TABLE . \" SET user_posts = user_posts + {$row[\'num_posts\']} WHERE user_id = {$row[\'poster_id\']}\";
						_sql($sql, $errored, $error_ary);
					}
					while ($row = $db->sql_fetchrow($result));

					$start += $step;
				}
				else
				{
					$start = 0;
				}
				$db->sql_freeresult($result);
			}
			while ($start);
			*/",
 "/**
* @package module_install
*/",
 "/**
* ucp_remind
* Sending password reminders
* @package ucp
*/",
 "/**
* @package module_install
*/",
 "/**
* @package module_install
*/",
 "/**
	* Init auth settings
	*/",
 "/**
	* Get permission mask
	* This function only supports getting permissions of one type (for example a_)
	*
	* @param set|view $mode defines the permissions we get, view gets effective permissions (checking user AND group permissions), set only gets the user or group permission set alone
	* @param mixed $user_id user ids to search for (a user_id or a group_id has to be specified at least)
	* @param mixed $group_id group ids to search for, return group related settings (a user_id or a group_id has to be specified at least)
	* @param mixed $forum_id forum_ids to search for. Defining a forum id also means getting local settings
	* @param string $auth_option the auth_option defines the permission setting to look for (a_ for example)
	* @param local|global $scope the scope defines the permission scope. If local, a forum_id is additionally required
	* @param ACL_NEVER|ACL_NO|ACL_YES $acl_fill defines the mode those permissions not set are getting filled with
	*/",
 "/**
	* Get permission mask for roles
	* This function only supports getting masks for one role
	*/",
 "/**
	* Display permission mask (assign to template)
	*/",
 "/**
	* Display permission mask for roles
	*/",
 "/**
	* NOTE: this function is not in use atm
	* Add a new option to the list ... $options is a hash of form ->
	* $options = array(
	*	\'local\'		=> array(\'option1\', \'option2\', ...),
	*	\'global\'	=> array(\'optionA\', \'optionB\', ...)
	* );
	*/",
 "/**
	* Set a user or group ACL record
	*/",
 "/**
	* Set a role-specific ACL record
	*/",
 "/**
	* Remove local permission
	*/",
 "/**
	* Assign category to template
	* used by display_mask()
	*/",
 "/**
	* Building content array from permission rows with explicit key ordering
	* used by display_mask()
	*/",
 "/**
	* Use permissions from another user. This transferes a permission set from one user to another.
	* The other user is always able to revert back to his permission set.
	* This function does not check for lower/higher permissions, it is possible for the user to gain
	* \"more\" permissions by this.
	* Admin permissions will not be copied.
	*/",
 "/**
* ACP Permission/Auth class
* @package phpBB3
*/",
 "/**
* mcp_logs
* Handling warning the users
* @package mcp
*/",
 "/**
	* Select auth method
	*/",
 "/**
	* Select mail authentication method
	*/",
 "/**
	* Select full folder action
	*/",
 "/**
	* Select ip validation
	*/",
 "/**
	* Select referer validation
	*/",
 "/**
	* Select account activation method
	*/",
 "/**
	* Maximum/Minimum username length
	*/",
 "/**
	* Allowed chars in usernames
	*/",
 "/**
	* Maximum/Minimum password length
	*/",
 "/**
	* Required chars in passwords
	*/",
 "/**
	* Select bump interval
	*/",
 "/**
	* Board disable option and message
	*/",
 "/**
	* Global quick reply enable/disable setting and button to enable in all forums
	*/",
 "/**
	* Select default dateformat
	*/",
 "/**
	* Select multiple forums
	*/",
 "/**
* @package acp
*/",
 "/**
	* Purge cache data
	*
	* @return void
	*/",
 "/**
	* Fetch an item from the cache
	*
	* @access protected
	* @param string $var Cache key
	* @return mixed Cached data
	*/",
 "/**
	* Store data in the cache
	*
	* @access protected
	* @param string $var Cache key
	* @param mixed $data Data to store
	* @param int $ttl Time-to-live of cached data
	* @return bool True if the operation succeeded
	*/",
 "/**
	* Remove an item from the cache
	*
	* @access protected
	* @param string $var Cache key
	* @return bool True if the operation succeeded
	*/",
 "/**
	* Check if a cache var exists
	*
	* @access protected
	* @param string $var Cache key
	* @return bool True if it exists, otherwise false
	*/",
 "/**
* ACM for XCache
* @package acm
*
* To use this module you need ini_get() enabled and the following INI settings configured as follows:
* - xcache.var_size > 0
* - xcache.admin.enable_auth = off (or xcache.admin.user and xcache.admin.password set)
*
*/",
 "/**
*		Better not enabling and adding to the loaded extensions due to the specific requirements needed
		if (!@extension_loaded(\'mbstring\'))
		{
			can_load_dll(\'mbstring\');
		}
*/",
 "/**
	* Checks that the server we are installing on meets the requirements for running phpBB
	*/",
 "/**
	* Obtain the information required to connect to the database
	*/",
 "/**
	* Obtain the administrator\'s name, password and email address
	*/",
 "/**
	* Writes the config file to disk, or if unable to do so offers alternative methods
	*/",
 "/**
	* Provide an opportunity to customise some advanced settings during the install
	* in case it is necessary for them to be set to access later
	*/",
 "/**
	* Load the contents of the schema into the database and then alter it based on what has been input during the installation
	*/",
 "/**
	* Build the search index...
	*/",
 "/**
	* Populate the module tables
	*/",
 "/**
	* Populate the language tables
	*/",
 "/**
	* Add search robots to the database
	*/",
 "/**
	* Sends an email to the board administrator with their password and some useful links
	*/",
 "/**
	* Generate a list of available mail server authentication methods
	*/",
 "/**
	* Get submitted data
	*/",
 "/**
* Installation
* @package install
*/",
 "/**
* @package module_install
*/",
 "/**
* @package module_install
*/",
 "/**
* @package module_install
*/"
]
