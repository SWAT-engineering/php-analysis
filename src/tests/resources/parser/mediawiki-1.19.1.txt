 ["/**
	 * This is largely cadged from PageHistory::history
	 *
	 * @return String HTML
	 */",
 "/**
	 * Get a list of contributors
	 *
	 * @param $cnt Int: maximum list of contributors to show
	 * @param $showIfMax Bool: whether to contributors if there more than $cnt
	 * @return String: html
	 */",
 "/**
	 * Get the last author with the last modification time
	 * @param $article Article object
	 * @return String HTML
	 */",
 "/**
	 * Get a list of contributors of $article
	 * @param $cnt Int: maximum list of contributors to show
	 * @param $showIfMax Bool: whether to contributors if there more than $cnt
	 * @return String: html
	 */",
 "/**
	 * Get a link to $user\'s user page
	 * @param $user User object
	 * @return String: html
	 */",
 "/**
	 * Get a link to $user\'s user page
	 * @param $user User object
	 * @return String: html
	 */",
 "/**
	 * Get a link to action=credits of $article page
	 * @return String: HTML link
	 */",
 "/**
 * Formats credits for articles
 *
 * Copyright 2004, Evan Prodromou <evan@wikitravel.org>.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA
 *
 * @file
 * @ingroup Actions
 * @author <evan@wikitravel.org>
 */",
 "/**
	 * Protected helper to do the actual bulk work of adding a single pattern.
	 * This is in a separate method so that add() can handle the difference between
	 * a single string $path and an array() $path that contains multiple path
	 * patterns each with an associated $key to pass on.
	 */",
 "/**
	 * Add a new path pattern to the path router
	 *
	 * @param $path The path pattern to add
	 * @param $params The params for this path pattern
	 * @param $options The options for this path pattern
	 */",
 "/**
	 * Add a new path pattern to the path router with the strict option on
	 * @see self::add
	 */",
 "/**
	 * Protected helper to re-sort our patterns so that the most specific
	 * (most heavily weighted) patterns are at the start of the array.
	 */",
 "/**
	 * Parse a path and return the query matches for the path
	 *
	 * @param $path The path to parse
	 * @return Array The array of matches for the path
	 */",
 "/**
 * PathRouter class.
 * This class can take patterns such as /wiki/$1 and use them to
 * parse query parameters out of REQUEST_URI paths.
 *
 * $router->add( \"/wiki/$1\" );
 *   - Matches /wiki/Foo style urls and extracts the title
 * $router->add( array( \'edit\' => \"/edit/$1\" ), array( \'action\' => \'$key\' ) );
 *   - Matches /edit/Foo style urls and sets action=edit
 * $router->add( \'/$2/$1\',
 *   array( \'variant\' => \'$2\' ),
 *   array( \'$2\' => array( \'zh-hant\', \'zh-hans\' )
 * );
 *   - Matches /zh-hant/Foo or /zh-hans/Foo
 * $router->addStrict( \"/foo/Bar\", array( \'title\' => \'Baz\' ) );
 *   - Matches /foo/Bar explicitly and uses \"Baz\" as the title
 * $router->add( \'/help/$1\', array( \'title\' => \'Help:$1\' ) );
 *   - Matches /help/Foo with \"Help:Foo\" as the title
 * $router->add( \'/$1\', array( \'foo\' => array( \'value\' => \'bar$2\' ) );
 *   - Matches /Foo and sets \'foo\' to \'bar$2\' without $2 being replaced
 * $router->add( \'/$1\', array( \'data:foo\' => \'bar\' ), array( \'callback\' => \'functionname\' ) );
 *   - Matches /Foo, adds the key \'foo\' with the value \'bar\' to the data array
 *     and calls functionname( &$matches, $data );
 *
 * Path patterns:
 *   - Paths may contain $# patterns such as $1, $2, etc...
 *   - $1 will match 0 or more while the rest will match 1 or more
 *   - Unless you use addStrict \"/wiki\" and \"/wiki/\" will be expanded to \"/wiki/$1\"
 *
 * Params:
 *   - In a pattern $1, $2, etc... will be replaced with the relevant contents
 *   - If you used a keyed array as a path pattern, $key will be replaced with
 *     the relevant contents
 *   - The default behavior is equivalent to `array( \'title\' => \'$1\' )`,
 *     if you don\'t want the title parameter you can explicitly use `array( \'title\' => false )`
 *   - You can specify a value that won\'t have replacements in it 
 *     using `\'foo\' => array( \'value\' => \'bar\' );`
 *
 * Options:
 *   - The option keys $1, $2, etc... can be specified to restrict the possible values
 *     of that variable. A string can be used for a single value, or an array for multiple.
 *   - When the option key \'strict\' is set (Using addStrict is simpler than doing this directly)
 *     the path won\'t have $1 implicitly added to it.
 *   - The option key \'callback\' can specify a callback that will be run when a path is matched.
 *     The callback will have the arguments ( &$matches, $data ) and the matches array can
 *     be modified.
 *
 * @since 1.19
 * @author Daniel Friesen
 */",
 "/**
	 * Replace keys inside path router patterns with text.
	 * We do this inside of a replacement callback because after replacement we can\'t tell the
	 * difference between a $1 that was not replaced and a $1 that was part of
	 * the content a $1 was replaced with.
	 */",
 "/**
	 * Build a new file operation transaction
	 *
	 * @params $backend FileBackendStore
	 * @params $params Array
	 * @throws MWException
	 */",
 "/**
	 * Allow stale data for file reads and existence checks
	 *
	 * @return void
	 */",
 "/**
	 * Attempt a series of file operations.
	 * Callers are responsible for handling file locking.
	 * 
	 * $opts is an array of options, including:
	 * \'force\'      : Errors that would normally cause a rollback do not.
	 *                The remaining operations are still attempted if any fail.
	 * \'allowStale\' : Don\'t require the latest available data.
	 *                This can increase performance for non-critical writes.
	 *                This has no effect unless the \'force\' flag is set.
	 *
	 * The resulting Status will be \"OK\" unless:
	 *     a) unexpected operation errors occurred (network partitions, disk full...)
	 *     b) significant operation errors occured and \'force\' was not set
	 * 
	 * @param $performOps Array List of FileOp operations
	 * @param $opts Array Batch operation options
	 * @return Status 
	 */",
 "/**
	 * Get the value of the parameter with the given name
	 * 
	 * @param $name string
	 * @return mixed Returns null if the parameter is not set
	 */",
 "/**
	 * Check if this operation failed precheck() or attempt()
	 * 
	 * @return bool 
	 */",
 "/**
	 * Get a new empty predicates array for precheck()
	 *
	 * @return Array 
	 */",
 "/**
	 * Check preconditions of the operation without writing anything
	 *
	 * @param $predicates Array
	 * @return Status
	 */",
 "/**
	 * Attempt the operation, backing up files as needed; this must be reversible
	 *
	 * @return Status
	 */",
 "/**
	 * Get the file operation parameters
	 * 
	 * @return Array (required params list, optional params list)
	 */",
 "/**
	 * Get a list of storage paths read from for this operation
	 *
	 * @return Array
	 */",
 "/**
	 * Get a list of storage paths written to for this operation
	 *
	 * @return Array
	 */",
 "/**
	 * @return Status
	 */",
 "/**
	 * @return Status
	 */",
 "/**
	 * Check for errors with regards to the destination file already existing.
	 * This also updates the destSameAsSource and sourceSha1 member variables.
	 * A bad status will be returned if there is no chance it can be overwritten.
	 * 
	 * @param $predicates Array
	 * @return Status
	 */",
 "/**
	 * precheckDestExistence() helper function to get the source file SHA-1.
	 * Subclasses should overwride this iff the source is not in storage.
	 *
	 * @return string|false Returns false on failure
	 */",
 "/**
	 * Check if a file will exist in storage when this operation is attempted
	 * 
	 * @param $source string Storage path
	 * @param $predicates Array
	 * @return bool 
	 */",
 "/**
	 * Get the SHA-1 of a file in storage when this operation is attempted
	 * 
	 * @param $source string Storage path
	 * @param $predicates Array
	 * @return string|false 
	 */",
 "/**
	 * Log a file operation failure and preserve any temp files
	 * 
	 * @param $action string
	 * @return void
	 */",
 "/**
 * Helper class for representing operations with transaction support.
 * Do not use this class from places outside FileBackend.
 *
 * Methods called from attemptBatch() should avoid throwing exceptions at all costs.
 * FileOp objects should be lightweight in order to support large arrays in memory.
 * 
 * @ingroup FileBackend
 * @since 1.19
 */",
 "/**
	 * @param $seconds integer
	 */",
 "/**
	 * Restore the original timeout.
	 * This does not account for the timer value on __construct().
	 */",
 "/**
 * FileOp helper class to expand PHP execution time for a function.
 * On construction, set_time_limit() is called and set to $seconds.
 * When the object goes out of scope, the timer is restarted, with
 * the original time limit minus the time the object existed.
 */",
 "/**
 * Store a file into the backend from a file on the file system.
 * Parameters similar to FileBackendStore::storeInternal(), which include:
 *     src           : source path on file system
 *     dst           : destination storage path
 *     overwrite     : do nothing and pass if an identical file exists at destination
 *     overwriteSame : override any existing file at destination
 */",
 "/**
 * Create a file in the backend with the given content.
 * Parameters similar to FileBackendStore::createInternal(), which include:
 *     content       : the raw file contents
 *     dst           : destination storage path
 *     overwrite     : do nothing and pass if an identical file exists at destination
 *     overwriteSame : override any existing file at destination
 */",
 "/**
 * Copy a file from one storage path to another in the backend.
 * Parameters similar to FileBackendStore::copyInternal(), which include:
 *     src           : source storage path
 *     dst           : destination storage path
 *     overwrite     : do nothing and pass if an identical file exists at destination
 *     overwriteSame : override any existing file at destination
 */",
 "/**
 * Move a file from one storage path to another in the backend.
 * Parameters similar to FileBackendStore::moveInternal(), which include:
 *     src           : source storage path
 *     dst           : destination storage path
 *     overwrite     : do nothing and pass if an identical file exists at destination
 *     overwriteSame : override any existing file at destination
 */",
 "/**
 * Delete a file at the given storage path from the backend.
 * Parameters similar to FileBackendStore::deleteInternal(), which include:
 *     src                 : source storage path
 *     ignoreMissingSource : don\'t return an error if the file does not exist
 */",
 "/**
 * Placeholder operation that has no params and does nothing
 */",
 "/**
	 * Fetch data from given URL
	 *
	 * @param $url String: The URL of the text to get
	 * @param $params Array: associative array of parameters for the ExternalStore object.
	 * @return The text stored or false on error
	 */",
 "/**
	 * Get an external store object of the given type, with the given parameters
	 *
	 * @param $proto String: type of external storage, should be a value in $wgExternalStores
	 * @param $params Array: associative array of parameters for the ExternalStore object.
	 * @return ExternalStore subclass or false on error
	 */",
 "/**
	 * Store a data item to an external store, identified by a partial URL
	 * The protocol part is used to identify the class, the rest is passed to the
	 * class itself as a parameter.
	 * @param $url
	 * @param $data
	 * @param $params array
	 * @return string|false The URL of the stored data item, or false on error
	 */",
 "/**
	 * Like insert() above, but does more of the work for us.
	 * This function does not need a url param, it builds it by
	 * itself. It also fails-over to the next possible clusters.
	 *
	 * @param $data String
	 * @param $storageParams Array: associative array of parameters for the ExternalStore object.
	 * @return string The URL of the stored data item, or false on error
	 */",
 "/**
	 * @param $data
	 * @param $wiki
	 *
	 * @return string
	 */",
 "/**
 * Constructor class for data kept in external repositories
 *
 * External repositories might be populated by maintenance/async
 * scripts, thus partial moving of data may be possible, as well
 * as possibility to have any storage format (i.e. for archives)
 *
 * @ingroup ExternalStorage
 */",
 "/** @dataProvider providePlural */",
 "/** Tests for MediaWiki languages/LanguageBs.php */",
 "/**
	 * Convert day names
	 * Invoked with {{GRAMMAR:transformation|word}}
	 *
	 * @param $word string
	 * @param $case string
	 * @return string
	 */",
 "/**
	 * @param $count int
	 * @param $forms array
	 * @return string
	 */",
 "/** Irish (Gaeilge)
 *
 * @ingroup Language
 */",
 "/**
	 * Avoid grouping whole numbers between 0 to 9999
	 *
	 * @param $_ string
	 *
	 * @return string
	 */",
 "/** Kurdish
 *
 * @ingroup Language
 */",
 "/** ????????????? (????????????)??? (????????????? (????????????)???)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Arastein
 * @author Asoxor
 * @author George Animal
 * @author Marmzok
 */",
 "/** Cornish (Kernowek)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Kernoweger
 * @author Kw-Moon
 * @author MF-Warburg
 * @author Malafaya
 * @author Mongvras
 * @author Nicky.ker
 * @author Scryfer
 */",
 "/**
	 * Get the file backend instance
	 *
	 * @return FileBackend
	 */",
 "/**
	 * Prepare a single zone or list of zones for usage.
	 * See initDeletedDir() for additional setup needed for the \'deleted\' zone.
	 * 
	 * @param $doZones Array Only do a particular zones
	 * @return Status
	 */",
 "/**
	 * Take all available measures to prevent web accessibility of new deleted
	 * directories, in case the user has not configured offline storage
	 *
	 * @param $dir string
	 * @return void
	 */",
 "/**
	 * Determine if a string is an mwrepo:// URL
	 *
	 * @param $url string
	 * @return bool
	 */",
 "/**
	 * Get a URL referring to this repository, with the private mwrepo protocol.
	 * The suffix, if supplied, is considered to be unencoded, and will be
	 * URL-encoded before being returned.
	 *
	 * @param $suffix string
	 * @return string
	 */",
 "/**
	 * Get the URL corresponding to one of the four basic zones
	 *
	 * @param $zone String: one of: public, deleted, temp, thumb
	 * @return String or false
	 */",
 "/**
	 * Get the backend storage path corresponding to a virtual URL
	 *
	 * @param $url string
	 * @return string
	 */",
 "/**
	 * The the storage container and base path of a zone
	 * 
	 * @param $zone string
	 * @return Array (container, base path) or (null, null)
	 */",
 "/**
	 * Get the storage path corresponding to one of the zones
	 *
	 * @param $zone string
	 * @return string|null
	 */",
 "/**
	 * Create a new File object from the local repository
	 *
	 * @param $title Mixed: Title object or string
	 * @param $time Mixed: Time at which the image was uploaded.
	 *              If this is specified, the returned object will be an
	 *              instance of the repository\'s old file class instead of a
	 *              current file. Repositories not supporting version control
	 *              should return false if this parameter is set.
	 * @return File|null A File, or null if passed an invalid Title
	 */",
 "/**
	 * Find an instance of the named file created at the specified time
	 * Returns false if the file does not exist. Repositories not supporting
	 * version control should return false if the time is specified.
	 *
	 * @param $title Mixed: Title object or string
	 * @param $options array Associative array of options:
	 *     time:           requested time for an archived image, or false for the
	 *                     current version. An image object will be returned which was
	 *                     created at the specified time.
	 *
	 *     ignoreRedirect: If true, do not follow file redirects
	 *
	 *     private:        If true, return restricted (deleted) files if the current
	 *                     user is allowed to view them. Otherwise, such files will not
	 *                     be found.
	 * @return File|false
	 */",
 "/**
	 * Find many files at once.
	 *
	 * @param $items An array of titles, or an array of findFile() options with
	 *    the \"title\" option giving the title. Example:
	 *
	 *     $findItem = array( \'title\' => $title, \'private\' => true );
	 *     $findBatch = array( $findItem );
	 *     $repo->findFiles( $findBatch );
	 * @return array
	 */",
 "/**
	 * Find an instance of the file with this key, created at the specified time
	 * Returns false if the file does not exist. Repositories not supporting
	 * version control should return false if the time is specified.
	 *
	 * @param $sha1 String base 36 SHA-1 hash
	 * @param $options Option array, same as findFile().
	 * @return File|false
	 */",
 "/**
	 * Get an array or iterator of file objects for files that have a given
	 * SHA-1 content hash.
	 *
	 * STUB
	 */",
 "/**
	 * Get the public root URL of the repository
	 *
	 * @return string|false
	 */",
 "/**
	 * Returns true if the repository uses a multi-level directory structure
	 *
	 * @return string
	 */",
 "/**
	 * Get the URL of thumb.php
	 *
	 * @return string
	 */",
 "/**
	 * Returns true if the repository can transform files via a 404 handler
	 *
	 * @return bool
	 */",
 "/**
	 * Get the name of an image from its title object
	 *
	 * @param $title Title
	 */",
 "/**
	 * Get the public zone root storage directory of the repository
	 *
	 * @return string
	 */",
 "/**
	 * Get a relative path including trailing slash, e.g. f/fa/
	 * If the repo is not hashed, returns an empty string
	 *
	 * @param $name string
	 * @return string
	 */",
 "/**
	 * @param $name
	 * @param $levels
	 * @return string
	 */",
 "/**
	 * Get the number of hash directory levels
	 *
	 * @return integer
	 */",
 "/**
	 * Get the name of this repository, as specified by $info[\'name]\' to the constructor
	 *
	 * @return string
	 */",
 "/**
	 * Make an url to this repo
	 *
	 * @param $query mixed Query string to append
	 * @param $entry string Entry point; defaults to index
	 * @return string|false
	 */",
 "/**
	 * Get the URL of an image description page. May return false if it is
	 * unknown or not applicable. In general this should only be called by the
	 * File class, since it may return invalid results for certain kinds of
	 * repositories. Use File::getDescriptionUrl() in user code.
	 *
	 * In particular, it uses the article paths as specified to the repository
	 * constructor, whereas local repositories use the local Title functions.
	 *
	 * @param $name string
	 * @return string
	 */",
 "/**
	 * Get the URL of the content-only fragment of the description page. For
	 * MediaWiki this means action=render. This should only be called by the
	 * repository\'s file class, since it may return invalid results. User code
	 * should use File::getDescriptionText().
	 *
	 * @param $name String: name of image to fetch
	 * @param $lang String: language to fetch it in, if any.
	 * @return string
	 */",
 "/**
	 * Get the URL of the stylesheet to apply to description pages
	 *
	 * @return string|false
	 */",
 "/**
	 * Store a file to a given destination.
	 *
	 * @param $srcPath String: source FS path, storage path, or virtual URL
	 * @param $dstZone String: destination zone
	 * @param $dstRel String: destination relative path
	 * @param $flags Integer: bitwise combination of the following flags:
	 *     self::DELETE_SOURCE     Delete the source file after upload
	 *     self::OVERWRITE         Overwrite an existing destination file instead of failing
	 *     self::OVERWRITE_SAME    Overwrite the file if the destination exists and has the
	 *                             same contents as the source
	 *     self::SKIP_LOCKING      Skip any file locking when doing the store
	 * @return FileRepoStatus
	 */",
 "/**
	 * Store a batch of files
	 *
	 * @param $triplets Array: (src, dest zone, dest rel) triplets as per store()
	 * @param $flags Integer: bitwise combination of the following flags:
	 *     self::DELETE_SOURCE     Delete the source file after upload
	 *     self::OVERWRITE         Overwrite an existing destination file instead of failing
	 *     self::OVERWRITE_SAME    Overwrite the file if the destination exists and has the
	 *                             same contents as the source
	 *     self::SKIP_LOCKING      Skip any file locking when doing the store
	 * @return FileRepoStatus
	 */",
 "/**
	 * Deletes a batch of files.
	 * Each file can be a (zone, rel) pair, virtual url, storage path, or FS path.
	 * It will try to delete each file, but ignores any errors that may occur.
	 *
	 * @param $pairs array List of files to delete
	 * @param $flags Integer: bitwise combination of the following flags:
	 *     self::SKIP_LOCKING      Skip any file locking when doing the deletions
	 * @return void
	 */",
 "/**
	 * Pick a random name in the temp zone and store a file to it.
	 * Returns a FileRepoStatus object with the file Virtual URL in the value,
	 * file can later be disposed using FileRepo::freeTemp().
	 *
	 *
	 * @param $originalName String: the base name of the file as specified
	 *     by the user. The file extension will be maintained.
	 * @param $srcPath String: the current location of the file.
	 * @return FileRepoStatus object with the URL in the value.
	 */",
 "/**
	 * Concatenate a list of files into a target file location. 
	 * 
	 * @param $srcPaths Array Ordered list of source virtual URLs/storage paths
	 * @param $dstPath String Target file system path
	 * @param $flags Integer: bitwise combination of the following flags:
	 *     self::DELETE_SOURCE     Delete the source files
	 * @return FileRepoStatus
	 */",
 "/**
	 * Remove a temporary file or mark it for garbage collection
	 *
	 * @param $virtualUrl String: the virtual URL returned by FileRepo::storeTemp()
	 * @return Boolean: true on success, false on failure
	 */",
 "/**
	 * Copy or move a file either from a storage path, virtual URL,
	 * or FS path, into this repository at the specified destination location.
	 *
	 * Returns a FileRepoStatus object. On success, the value contains \"new\" or
	 * \"archived\", to indicate whether the file was new with that name.
	 *
	 * @param $srcPath String: the source FS path, storage path, or URL
	 * @param $dstRel String: the destination relative path
	 * @param $archiveRel String: the relative path where the existing file is to
	 *        be archived, if there is one. Relative to the public zone root.
	 * @param $flags Integer: bitfield, may be FileRepo::DELETE_SOURCE to indicate
	 *        that the source file should be deleted if possible
	 */",
 "/**
	 * Publish a batch of files
	 *
	 * @param $triplets Array: (source, dest, archive) triplets as per publish()
	 * @param $flags Integer: bitfield, may be FileRepo::DELETE_SOURCE to indicate
	 *        that the source files should be deleted if possible
	 * @return FileRepoStatus
	 */",
 "/**
	 * Checks existence of a a file
	 *
	 * @param $file Virtual URL (or storage path) of file to check
	 * @param $flags Integer: bitwise combination of the following flags:
	 *     self::FILES_ONLY     Mark file as existing only if it is a file (not directory)
	 * @return bool
	 */",
 "/**
	 * Checks existence of an array of files.
	 *
	 * @param $files Array: Virtual URLs (or storage paths) of files to check
	 * @param $flags Integer: bitwise combination of the following flags:
	 *     self::FILES_ONLY     Mark file as existing only if it is a file (not directory)
	 * @return Either array of files and existence flags, or false
	 */",
 "/**
	 * Move a file to the deletion archive.
	 * If no valid deletion archive exists, this may either delete the file
	 * or throw an exception, depending on the preference of the repository
	 *
	 * @param $srcRel Mixed: relative path for the file to be deleted
	 * @param $archiveRel Mixed: relative path for the archive location.
	 *        Relative to a private archive directory.
	 * @return FileRepoStatus object
	 */",
 "/**
	 * Move a group of files to the deletion archive.
	 *
	 * If no valid deletion archive is configured, this may either delete the
	 * file or throw an exception, depending on the preference of the repository.
	 *
	 * The overwrite policy is determined by the repository -- currently LocalRepo
	 * assumes a naming scheme in the deleted zone based on content hash, as
	 * opposed to the public zone which is assumed to be unique.
	 *
	 * @param $sourceDestPairs Array of source/destination pairs. Each element
	 *        is a two-element array containing the source file path relative to the
	 *        public root in the first element, and the archive file path relative
	 *        to the deleted zone root in the second element.
	 * @return FileRepoStatus
	 */",
 "/**
	 * Get a relative path for a deletion archive key,
	 * e.g. s/z/a/ for sza251lrxrc1jad41h5mgilp8nysje52.jpg
	 *
	 * @return string
	 */",
 "/**
	 * If a path is a virtual URL, resolve it to a storage path.
	 * Otherwise, just return the path as it is.
	 *
	 * @param $path string
	 * @return string
	 * @throws MWException
	 */",
 "/**
	 * Get a local FS copy of a file with a given virtual URL/storage path.
	 * Temporary files may be purged when the file object falls out of scope.
	 * 
	 * @param $virtualUrl string
	 * @return TempFSFile|null Returns null on failure
	 */",
 "/**
	 * Get a local FS file with a given virtual URL/storage path.
	 * The file is either an original or a copy. It should not be changed.
	 * Temporary files may be purged when the file object falls out of scope.
	 * 
	 * @param $virtualUrl string
	 * @return FSFile|null Returns null on failure.
	 */",
 "/**
	 * Get properties of a file with a given virtual URL/storage path.
	 * Properties should ultimately be obtained via FSFile::getProps().
	 *
	 * @param $virtualUrl string
	 * @return Array
	 */",
 "/**
	 * Get the timestamp of a file with a given virtual URL/storage path
	 *
	 * @param $virtualUrl string
	 * @return string|false
	 */",
 "/**
	 * Get the sha1 of a file with a given virtual URL/storage path
	 *
	 * @param $virtualUrl string
	 * @return string|false
	 */",
 "/**
	 * Attempt to stream a file with the given virtual URL/storage path
	 *
	 * @param $virtualUrl string
	 * @param $headers Array Additional HTTP headers to send on success
	 * @return bool Success
	 */",
 "/**
	 * Call a callback function for every public regular file in the repository.
	 * This only acts on the current version of files, not any old versions.
	 * May use either the database or the filesystem.
	 *
	 * @param $callback Array|string
	 * @return void
	 */",
 "/**
	 * Call a callback function for every public file in the repository.
	 * May use either the database or the filesystem.
	 *
	 * @param $callback Array|string
	 * @return void
	 */",
 "/**
	*Determineifarelativepathisvalid,i.e.notblankorinvolvingdirectorytraveral
	*
	*@param$filenamestring
	*@returnbool
	*/",
 "/**
	*Getacallbackfunctiontouseforcleaningerrormessageparameters
	*
	*@returnArray
	*/",
 "/**
	*Pathdisclosureprotectionfunction
	*
	*@param$paramstring
	*@returnstring
	*/",
 "/**
	*Pathdisclosureprotectionfunction
	*
	*@param$paramstring
	*@returnstring
	*/",
 "/**
	*Pathdisclosureprotectionfunction
	*
	*@param$paramstring
	*@returnstring
	*/",
 "/**
	*Createanewfatalerror
	*
	*@returnFileRepoStatus
	*/",
 "/**
	*Createanewgoodresult
	*
	*@returnFileRepoStatus
	*/",
 "/**
	*Deletefilesinthedeleteddirectoryiftheyarenotreferencedinthefilearchivetable
	*
	*STUB
	*/",
 "/**
	*Checksifthereisaredirectnamedas$title.Ifthereis,returnthe
	*titleobject.Ifnot,returnfalse.
	*STUB
	*
	*@param$titleTitleofimage
	*@returnBool
	*/",
 "/**
	*Invalidatesimageredirectcacherelatedtothatimage
	*Doesn\'tdoanythingforrepositoriesthatdon\'tsupportimageredirects.
	*
	*STUB
	*@param$titleTitleofimage
	*/",
 "/**
	*Getthehuman-readablenameoftherepo
	*
	*@returnstring
	*/",
 "/**
	*Returnstrueifthisthelocalfilerepository.
	*
	*@returnbool
	*/",
 "/**
	*Getakeyontheprimarycacheforthisrepository.
	*Returnsfalseiftherepository\'scacheisnotaccessibleatthissite.
	*Theparametersarethepartsofthekey,asforwfMemcKey().
	*
	*STUB
	*/",
 "/**
	*Getakeyforthisrepointhelocalcachedomain.Thesecachekeysare
	*notsharedwithremoteinstancesoftherepo.
	*Theparametersarethepartsofthekey,asforwfMemcKey().
	*
	*@returnstring
	*/",
 "/**
	*GetanUploadStashassociatedwiththisrepo.
	*
	*@returnUploadStash
	*/",
 "/**
*Baseclassforfilerepositories
*
*@ingroupFileRepo
*/",
 "/**
	 * This module uses a custom feed wrapper printer.
	 *
	 * @return ApiFormatFeedWrapper
	 */",
 "/**
	 * @param $revision Revision
	 * @return string
	 */",
 "/**
	 * @param $revision Revision
	 * @return string
	 */",
 "/**
 * @ingroup API
 */",
 "/**
 * Aliases for Special:Gadgets
 *
 * @file
 * @ingroup Extensions
 */",
 "/** English (English) */",
 "/** Afrikaans (Afrikaans) */",
 "/** Arabic (??????????????) */",
 "/** Egyptian Spoken Arabic (????????) */",
 "/** Bulgarian (??????????????????) */",
 "/** Banjar (Bahasa Banjar) */",
 "/** Breton (brezhoneg) */",
 "/** Bosnian (bosanski) */",
 "/** Czech (??esky) */",
 "/** German (Deutsch) */",
 "/** Zazaki (Zazaki) */",
 "/** Lower Sorbian (Dolnoserbski) */",
 "/** Greek (????????????????) */",
 "/** Esperanto (Esperanto) */",
 "/** Spanish (espa??ol) */",
 "/** Estonian (eesti) */",
 "/** Basque (euskara) */",
 "/** Persian (??????????) */",
 "/** Finnish (suomi) */",
 "/** Franco-Proven??al (arpetan) */",
 "/** Galician (Galego) */",
 "/** Swiss German (Alemannisch) */",
 "/** Hawaiian (Hawai`i) */",
 "/** Hebrew (??????????) */",
 "/** Hindi (??????????????????) */",
 "/** Croatian (hrvatski) */",
 "/** Upper Sorbian (Hornjoserbsce) */",
 "/** Haitian (Krey??l ayisyen) */",
 "/** Hungarian (magyar) */",
 "/** Interlingua (interlingua) */",
 "/** Indonesian (Bahasa Indonesia) */",
 "/** Italian (italiano) */",
 "/** Japanese (?????????) */",
 "/** Korean (?????????) */",
 "/** Ladino (Ladino) */",
 "/** Luxembourgish (L??tzebuergesch) */",
 "/** Macedonian (????????????????????) */",
 "/** Malayalam (??????????????????) */",
 "/** Marathi (???????????????) */",
 "/** Malay (Bahasa Melayu) */",
 "/** Maltese (Malti) */",
 "/** Norwegian Bokm??l (???norsk (bokm??l)???) */",
 "/** Nedersaksisch (Nedersaksisch) */",
 "/** Dutch (Nederlands) */",
 "/** Norwegian Nynorsk (???norsk (nynorsk)???) */",
 "/** Occitan (occitan) */",
 "/** Polish (polski) */",
 "/** Romanian (rom??n??) */",
 "/** Russian (??????????????) */",
 "/** Sanskrit (???????????????????????????) */",
 "/** Sinhala (???????????????) */",
 "/** Slovak (sloven??ina) */",
 "/** Slovenian (sloven????ina) */",
 "/** Serbian (Cyrillic script) (??????????????? (????????????????)???) */",
 "/** Swedish (svenska) */",
 "/** Thai (?????????) */",
 "/** Tagalog (Tagalog) */",
 "/** Turkish (T??rk??e) */",
 "/** Tatar (Cyrillic script) (??????????????) */",
 "/** Ukrainian (????????????????????) */",
 "/** v??neto (v??neto) */",
 "/** Vietnamese (Ti???ng Vi???t) */",
 "/** Simplified Chinese (????????????????????????) */",
 "/** Traditional Chinese (????????????????????????) */",
 "/**
 * Handle action=render
 *
 * Copyright ?? 2012 Timo Tijhof
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA
 *
 * @file
 * @ingroup Actions
 * @author Timo Tijhof
 */",
 "/** @dataProvider providePluralFourForms */",
 "/** @dataProvider providePluralTwoForms */",
 "/** Tests for MediaWiki languages/classes/LanguageRu.php */",
 "/** Uyghur (Latin script) (Uyghurche???)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Jose77
 * @author M.erdem
 * @author ???????? ????????????????
 */",
 "/** Albanian (Shqip)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Andejkendej
 * @author Cradel
 * @author Dashohoxha
 * @author Dasius
 * @author Dori
 * @author Eagleal
 * @author Ergon
 * @author Kaganer
 * @author Marinari
 * @author Mdupont
 * @author MicroBoy
 * @author Mikullovci11
 * @author Olsi
 * @author Puntori
 * @author Techlik
 * @author The Evil IP address
 * @author Urhixidur
 * @author Vinie007
 * @author ???????? ????????????????
 */",
 "/**
	 * Constructor.
	 *
	 * Available parameters are:
	 *   - servers:             The list of IP:port combinations holding the memcached servers.
	 *   - debug:               Whether to set the debug flag in the underlying client.
	 *   - persistent:          Whether to use a persistent connection
	 *   - compress_threshold:  The minimum size an object must be before it is compressed
	 *   - timeout:             The read timeout in microseconds
	 *   - connect_timeout:     The connect timeout in seconds
	 *
	 * @param $params array
	 */",
 "/**
	 * @param $debug bool
	 */",
 "/**
	 * @param $key string
	 * @return Mixed
	 */",
 "/**
	 * @param $key string
	 * @param $value
	 * @param $exptime int
	 * @return bool
	 */",
 "/**
	 * @param $key string
	 * @param $time int
	 * @return bool
	 */",
 "/**
	 * @param $key
	 * @param $timeout int
	 * @return
	 */",
 "/**
	 * @param $key string
	 * @return Mixed
	 */",
 "/**
	 * @param $key string
	 * @param $value int
	 * @return Mixed
	 */",
 "/**
	 * @param $key string
	 * @param $value int
	 * @param $exptime
	 * @return Mixed
	 */",
 "/**
	 * @param $key string
	 * @param $value int
	 * @return Mixed
	 */",
 "/**
	 * @param $key string
	 * @param $value int
	 * @return Mixed
	 */",
 "/**
	 * Get the underlying client object. This is provided for debugging 
	 * purposes.
	 *
	 * @return MemCachedClientforWiki
	 */",
 "/**
	 * Encode a key for use on the wire inside the memcached protocol.
	 *
	 * We encode spaces and line breaks to avoid protocol errors. We encode 
	 * the other control characters for compatibility with libmemcached 
	 * verify_key. We leave other punctuation alone, to maximise backwards
	 * compatibility.
	 */",
 "/**
	 * Decode a key encoded with encodeKey(). This is provided as a convenience 
	 * function for debugging.
	 *
	 * @param $key string
	 *
	 * @return string
	 */",
 "/**
 * A wrapper class for the pure-PHP memcached client, exposing a BagOStuff interface.
 */",
 "/** Kongo (Kongo)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Rkupsala
 * @author ???????? ????????????????
 */",
 "/**
	 * @dataProvider providerSvgFiles
	 */",
 "/**
	 * @dataProvider providerSvgFilesWithXMLMetadata
	 */",
 "/** @codeCoverageIgnore */",
 "/** @codeCoverageIgnore */",
 "/** @codeCoverageIgnore */",
 "/** @codeCoverageIgnore */",
 "/** @codeCoverageIgnore */",
 "/** @codeCoverageIgnore */",
 "/** @codeCoverageIgnore */",
 "/** @codeCoverageIgnore */",
 "/** @codeCoverageIgnore */",
 "/**
 * Like array_diff( $a, $b ) except that it works with two-dimensional arrays.
 * @param $a array
 * @param $b array
 * @return array
 */",
 "/**
 * @param $a
 * @param $b
 * @return int
 */",
 "/**
 * Array lookup
 * Returns an array where the values in the first array are replaced by the
 * values in the second array with the corresponding keys
 *
 * @param $a Array
 * @param $b Array
 * @return array
 */",
 "/**
 * Appends to second array if $value differs from that in $default
 *
 * @param $key String|Int
 * @param $value Mixed
 * @param $default Mixed
 * @param $changed Array to alter
 */",
 "/**
 * Backwards array plus for people who haven\'t bothered to read the PHP manual
 * XXX: will not darn your socks for you.
 *
 * @param $array1 Array
 * @param [$array2, [...]] Arrays
 * @return Array
 */",
 "/**
 * Merge arrays in the style of getUserPermissionsErrors, with duplicate removal
 * e.g.
 *	wfMergeErrorArrays(
 *		array( array( \'x\' ) ),
 *		array( array( \'x\', \'2\' ) ),
 *		array( array( \'x\' ) ),
 *		array( array( \'y\' ) )
 *	);
 * returns:
 * 		array(
 *   		array( \'x\', \'2\' ),
 *   		array( \'x\' ),
 *   		array( \'y\' )
 *   	)
 * @param varargs
 * @return Array
 */",
 "/**
 * Insert array into another array after the specified *KEY*
 *
 * @param $array Array: The array.
 * @param $insert Array: The array to insert.
 * @param $after Mixed: The key to insert after
 * @return Array
 */",
 "/**
 * Recursively converts the parameter (an object) to an array with the same data
 *
 * @param $objOrArray Object|Array
 * @param $recursive Bool
 * @return Array
 */",
 "/**
 * Wrapper around array_map() which also taints variables
 *
 * @param  $function Callback
 * @param  $input Array
 * @return Array
 */",
 "/**
 * Get a random decimal value between 0 and 1, in a way
 * not likely to give duplicate values for any realistic
 * number of articles.
 *
 * @return string
 */",
 "/**
 * We want some things to be included as literal characters in our title URLs
 * for prettiness, which urlencode encodes by default.  According to RFC 1738,
 * all of the following should be safe:
 *
 * ;:@&=$-_.+!*\'(),
 *
 * But + is not safe because it\'s used to indicate a space; &= are only safe in
 * paths and not in queries (and we don\'t distinguish here); \' seems kind of
 * scary; and urlencode() doesn\'t touch -_. to begin with.  Plus, although /
 * is reserved, we don\'t care.  So the list we unescape is:
 *
 * ;:@$!*(),/
 *
 * However, IIS7 redirects fail when the url contains a colon (Bug 22709),
 * so no fancy : for IIS7.
 *
 * %2F in the page titles seems to fatally break for some reason.
 *
 * @param $s String:
 * @return string
*/",
 "/**
 * This function takes two arrays as input, and returns a CGI-style string, e.g.
 * \"days=7&limit=100\". Options in the first array override options in the second.
 * Options set to null or false will not be output.
 *
 * @param $array1 Array ( String|Array )
 * @param $array2 Array ( String|Array )
 * @param $prefix String
 * @return String
 */",
 "/**
 * This is the logical opposite of wfArrayToCGI(): it accepts a query string as
 * its argument and returns the same string in array form.  This allows compa-
 * tibility with legacy functions that accept raw query strings instead of nice
 * arrays.  Of course, keys and values are urldecode()d.
 *
 * @param $query String: query string
 * @return array Array version of input
 */",
 "/**
 * Append a query string to an existing URL, which may or may not already
 * have query string parameters already. If so, they will be combined.
 *
 * @param $url String
 * @param $query Mixed: string or associative array
 * @return string
 */",
 "/**
 * Expand a potentially local URL to a fully-qualified URL.  Assumes $wgServer
 * is correct.
 *
 * The meaning of the PROTO_* constants is as follows:
 * PROTO_HTTP: Output a URL starting with http://
 * PROTO_HTTPS: Output a URL starting with https://
 * PROTO_RELATIVE: Output a URL starting with // (protocol-relative URL)
 * PROTO_CURRENT: Output a URL starting with either http:// or https:// , depending on which protocol was used for the current incoming request
 * PROTO_CANONICAL: For URLs without a domain, like /w/index.php , use $wgCanonicalServer. For protocol-relative URLs, use the protocol of $wgCanonicalServer
 * PROTO_INTERNAL: Like PROTO_CANONICAL, but uses $wgInternalServer instead of $wgCanonicalServer
 *
 * @todo this won\'t work with current-path-relative URLs
 * like \"subdir/foo.html\", etc.
 *
 * @param $url String: either fully-qualified or a local path + query
 * @param $defaultProto Mixed: one of the PROTO_* constants. Determines the
 *                             protocol to use if $url or $wgServer is
 *                             protocol-relative
 * @return string Fully-qualified URL, current-path-relative URL or false if
 *                no valid URL can be constructed
 */",
 "/**
 * This function will reassemble a URL parsed with wfParseURL.  This is useful
 * if you need to edit part of a URL and put it back together.
 *
 * This is the basic structure used (brackets contain keys for $urlParts):
 * [scheme][delimiter][user]:[pass]@[host]:[port][path]?[query]#[fragment]
 *
 * @todo Need to integrate this into wfExpandUrl (bug 32168)
 *
 * @since 1.19
 * @param $urlParts Array URL parts, as output from wfParseUrl
 * @return string URL assembled from its component parts
 */",
 "/**
 * Remove all dot-segments in the provided URL path.  For example,
 * \'/a/./b/../c/\' becomes \'/a/c/\'.  For details on the algorithm, please see
 * RFC3986 section 5.2.4.
 *
 * @todo Need to integrate this into wfExpandUrl (bug 32168)
 *
 * @param $urlPath String URL path, potentially containing dot-segments
 * @return string URL path with all dot-segments removed
 */",
 "/**
 * Returns a regular expression of url protocols
 *
 * @param $includeProtocolRelative bool If false, remove \'//\' from the returned protocol list.
 *        DO NOT USE this directly, use wfUrlProtocolsWithoutProtRel() instead
 * @return String
 */",
 "/**
 * Like wfUrlProtocols(), but excludes \'//\' from the protocol list. Use this if
 * you need a regex that matches all URL protocols but does not match protocol-
 * relative URLs
 * @return String
 */",
 "/**
 * parse_url() work-alike, but non-broken.  Differences:
 *
 * 1) Does not raise warnings on bad URLs (just returns false)
 * 2) Handles protocols that don\'t use :// (e.g., mailto: and news: , as well as protocol-relative URLs) correctly
 * 3) Adds a \"delimiter\" element to the array, either \'://\', \':\' or \'//\' (see (2))
 *
 * @param $url String: a URL to parse
 * @return Array: bits of the URL in an associative array, per PHP docs
 */",
 "/**
 * Make URL indexes, appropriate for the el_index field of externallinks.
 *
 * @param $url String
 * @return array
 */",
 "/**
 * Check whether a given URL has a domain that occurs in a given set of domains
 * @param $url string URL
 * @param $domains array Array of domains (strings)
 * @return bool True if the host part of $url ends in one of the strings in $domains
 */",
 "/**
 * Sends a line to the debug log if enabled or, optionally, to a comment in output.
 * In normal operation this is a NOP.
 *
 * Controlling globals:
 * $wgDebugLogFile - points to the log file
 * $wgProfileOnly - if set, normal debug messages will not be recorded.
 * $wgDebugRawPage - if false, \'action=raw\' hits will not result in debug output.
 * $wgDebugComments - if on, some debug items may appear in comments in the HTML output.
 *
 * @param $text String
 * @param $logonly Bool: set true to avoid appearing in HTML when $wgDebugComments is set
 */",
 "/**
 * Returns true if debug logging should be suppressed if $wgDebugRawPage = false
 */",
 "/**
 * Get microsecond timestamps for debug logs
 *
 * @return string
 */",
 "/**
 * Send a line giving PHP memory usage.
 *
 * @param $exact Bool: print exact values instead of kilobytes (default: false)
 */",
 "/**
 * Send a line to a supplementary debug log file, if configured, or main debug log if not.
 * $wgDebugLogGroups[$logGroup] should be set to a filename to send to a separate log.
 *
 * @param $logGroup String
 * @param $text String
 * @param $public Bool: whether to log the event in the public log if no private
 *                     log file is specified, (default true)
 */",
 "/**
 * Log for database errors
 *
 * @param $text String: database error message.
 */",
 "/**
 * Throws a warning that $function is deprecated
 *
 * @param $function String
 * @param $version String|false: Added in 1.19.
 * @param $component String|false: Added in 1.19.
 * 
 * @return null
 */",
 "/**
 * Send a warning either to the debug log or in a PHP error depending on
 * $wgDevelopmentWarnings
 *
 * @param $msg String: message to send
 * @param $callerOffset Integer: number of items to go back in the backtrace to
 *        find the correct caller (1 = function calling wfWarn, ...)
 * @param $level Integer: PHP error level; only used when $wgDevelopmentWarnings
 *        is true
 */",
 "/**
 * Log to a file without getting \"file size exceeded\" signals.
 *
 * Can also log to TCP or UDP with the syntax udp://host:port/prefix. This will
 * send lines to the specified port, prefixed by the specified prefix and a space.
 *
 * @param $text String
 * @param $file String filename
 */",
 "/**
 * @todo document
 */",
 "/**
 * Check if the wiki read-only lock file is present. This can be used to lock
 * off editing functions, but doesn\'t guarantee that the database will not be
 * modified.
 *
 * @return bool
 */",
 "/**
 * @return bool
 */",
 "/**
 * Return a Language object from $langcode
 *
 * @param $langcode Mixed: either:
 *                  - a Language object
 *                  - code of the language to get the message for, if it is
 *                    a valid code create a language for that language, if
 *                    it is a string but not a valid code then make a basic
 *                    language object
 *                  - a boolean: if it\'s false then use the global object for
 *                    the current user\'s language (as a fallback for the old parameter
 *                    functionality), or if it is true then use global object
 *                    for the wiki\'s content language.
 * @return Language object
 */",
 "/**
 * Old function when $wgBetterDirectionality existed
 * Removed in core, kept in extensions for backwards compat.
 *
 * @deprecated since 1.18
 * @return Language
 */",
 "/**
 * This is the new function for getting translated interface messages.
 * See the Message class for documentation how to use them.
 * The intention is that this function replaces all old wfMsg* functions.
 * @param $key \string Message key.
 * Varargs: normal message parameters.
 * @return Message
 * @since 1.17
 */",
 "/**
 * This function accepts multiple message keys and returns a message instance
 * for the first message which is non-empty. If all messages are empty then an
 * instance of the first message key is returned.
 * @param varargs: message keys
 * @return Message
 * @since 1.18
 */",
 "/**
 * Get a message from anywhere, for the current user language.
 *
 * Use wfMsgForContent() instead if the message should NOT
 * change depending on the user preferences.
 *
 * @param $key String: lookup key for the message, usually
 *    defined in languages/Language.php
 *
 * Parameters to the message, which can be used to insert variable text into
 * it, can be passed to this function in the following formats:
 * - One per argument, starting at the second parameter
 * - As an array in the second parameter
 * These are not shown in the function definition.
 *
 * @return String
 */",
 "/**
 * Same as above except doesn\'t transform the message
 *
 * @param $key String
 * @return String
 */",
 "/**
 * Get a message from anywhere, for the current global language
 * set with $wgLanguageCode.
 *
 * Use this if the message should NOT change dependent on the
 * language set in the user\'s preferences. This is the case for
 * most text written into logs, as well as link targets (such as
 * the name of the copyright policy page). Link titles, on the
 * other hand, should be shown in the UI language.
 *
 * Note that MediaWiki allows users to change the user interface
 * language in their preferences, but a single installation
 * typically only contains content in one language.
 *
 * Be wary of this distinction: If you use wfMsg() where you should
 * use wfMsgForContent(), a user of the software may have to
 * customize potentially hundreds of messages in
 * order to, e.g., fix a link in every possible language.
 *
 * @param $key String: lookup key for the message, usually
 *     defined in languages/Language.php
 * @return String
 */",
 "/**
 * Same as above except doesn\'t transform the message
 *
 * @param $key String
 * @return String
 */",
 "/**
 * Really get a message
 *
 * @param $key String: key to get.
 * @param $args
 * @param $useDB Boolean
 * @param $forContent Mixed: Language code, or false for user lang, true for content lang.
 * @param $transform Boolean: Whether or not to transform the message.
 * @return String: the requested message.
 */",
 "/**
 * Fetch a message string value, but don\'t replace any keys yet.
 *
 * @param $key String
 * @param $useDB Bool
 * @param $langCode String: Code of the language to get the message for, or
 *                  behaves as a content language switch if it is a boolean.
 * @param $transform Boolean: whether to parse magic words, etc.
 * @return string
 */",
 "/**
 * Replace message parameter keys on the given formatted output.
 *
 * @param $message String
 * @param $args Array
 * @return string
 * @private
 */",
 "/**
 * Return an HTML-escaped version of a message.
 * Parameter replacements, if any, are done *after* the HTML-escaping,
 * so parameters may contain HTML (eg links or form controls). Be sure
 * to pre-escape them if you really do want plaintext, or just wrap
 * the whole thing in htmlspecialchars().
 *
 * @param $key String
 * @param string ... parameters
 * @return string
 */",
 "/**
 * Return an HTML version of message
 * Parameter replacements, if any, are done *after* parsing the wiki-text message,
 * so parameters may contain HTML (eg links or form controls). Be sure
 * to pre-escape them if you really do want plaintext, or just wrap
 * the whole thing in htmlspecialchars().
 *
 * @param $key String
 * @param string ... parameters
 * @return string
 */",
 "/**
 * Returns message in the requested format
 * @param $key String: key of the message
 * @param $options Array: processing rules. Can take the following options:
 *   <i>parse</i>: parses wikitext to HTML
 *   <i>parseinline</i>: parses wikitext to HTML and removes the surrounding
 *       p\'s added by parser or tidy
 *   <i>escape</i>: filters message through htmlspecialchars
 *   <i>escapenoentities</i>: same, but allows entity references like &#160; through
 *   <i>replaceafter</i>: parameters are substituted after parsing or escaping
 *   <i>parsemag</i>: transform the message using magic phrases
 *   <i>content</i>: fetch message for content language instead of interface
 * Also can accept a single associative argument, of the form \'language\' => \'xx\':
 *   <i>language</i>: Language object or language code to fetch message for
 *       (overriden by <i>content</i>).
 * Behavior for conflicting options (e.g., parse+parseinline) is undefined.
 *
 * @return String
 */",
 "/**
 * Since wfMsg() and co suck, they don\'t return false if the message key they
 * looked up didn\'t exist but a XHTML string, this function checks for the
 * nonexistance of messages by checking the MessageCache::get() result directly.
 *
 * @param $key      String: the message key looked up
 * @return Boolean True if the message *doesn\'t* exist.
 */",
 "/**
 * Throw a debugging exception. This function previously once exited the process,
 * but now throws an exception instead, with similar results.
 *
 * @param $msg String: message shown when dying.
 */",
 "/**
 * Fetch server name for use in error reporting etc.
 * Use real server name if available, so we know which machine
 * in a server farm generated the current page.
 *
 * @return string
 */",
 "/**
 * Returns a HTML comment with the elapsed time since request.
 * This method has no side effects.
 *
 * @return string
 */",
 "/**
 * Safety wrapper for debug_backtrace().
 *
 * With Zend Optimizer 3.2.0 loaded, this causes segfaults under somewhat
 * murky circumstances, which may be triggered in part by stub objects
 * or other fancy talkin\'.
 *
 * Will return an empty array if Zend Optimizer is detected or if
 * debug_backtrace is disabled, otherwise the output from
 * debug_backtrace() (trimmed).
 *
 * @param $limit int This parameter can be used to limit the number of stack frames returned
 *
 * @return array of backtrace information
 */",
 "/**
 * Get a debug backtrace as a string
 *
 * @return string
 */",
 "/**
 * Get the name of the function which called this function
 *
 * @param $level Int
 * @return Bool|string
 */",
 "/**
 * Return a string consisting of callers in the stack. Useful sometimes
 * for profiling specific points.
 *
 * @param $limit The maximum depth of the stack frame to return, or false for
 *               the entire stack.
 * @return String
 */",
 "/**
 * Return a string representation of frame
 *
 * @param $frame Array
 * @return Bool
 */",
 "/**
 * @todo document
 *
 * @param $offset Int
 * @param $limit Int
 * @return String
 */",
 "/**
 * Generate (prev x| next x) (20|50|100...) type links for paging
 *
 * @param $offset String
 * @param $limit Integer
 * @param $link String
 * @param $query String: optional URL query parameter string
 * @param $atend Bool: optional param for specified if this is the last page
 * @return String
 * @deprecated in 1.19; use Language::viewPrevNext() instead
 */",
 "/**
 * Make a list item, used by various special pages
 *
 * @param $page String Page link
 * @param $details String Text between brackets
 * @param $oppositedm Boolean	Add the direction mark opposite to your
 *								language, to display text properly
 * @return String
 * @deprecated since 1.19; use Language::specialList() instead
 */",
 "/**
 * @todo document
 * @todo FIXME: We may want to blacklist some broken browsers
 *
 * @param $force Bool
 * @return bool Whereas client accept gzip compression
 */",
 "/**
 * Obtain the offset and limit values from the request string;
 * used in special pages
 *
 * @param $deflimit Int default limit if none supplied
 * @param $optionname String Name of a user preference to check against
 * @return array
 *
 */",
 "/**
 * Escapes the given text so that it may be output using addWikiText()
 * without any linking, formatting, etc. making its way through. This
 * is achieved by substituting certain characters with HTML entities.
 * As required by the callers, <nowiki> is not used.
 *
 * @param $text String: text to be escaped
 * @return String
 */",
 "/**
 * Get the current unix timetstamp with microseconds.  Useful for profiling
 * @return Float
 */",
 "/**
 * Sets dest to source and returns the original value of dest
 * If source is NULL, it just returns the value, it doesn\'t set the variable
 * If force is true, it will set the value even if source is NULL
 *
 * @param $dest Mixed
 * @param $source Mixed
 * @param $force Bool
 * @return Mixed
 */",
 "/**
 * As for wfSetVar except setting a bit
 *
 * @param $dest Int
 * @param $bit Int
 * @param $state Bool
 *
 * @return bool
 */",
 "/**
 * A wrapper around the PHP function var_export().
 * Either print it or add it to the regular output ($wgOut).
 *
 * @param $var A PHP variable to dump.
 */",
 "/**
 * Provide a simple HTTP error.
 *
 * @param $code Int|String
 * @param $label String
 * @param $desc String
 */",
 "/**
 * Clear away any user-level output buffers, discarding contents.
 *
 * Suitable for \'starting afresh\', for instance when streaming
 * relatively large amounts of data without buffering, or wanting to
 * output image files without ob_gzhandler\'s compression.
 *
 * The optional $resetGzipEncoding parameter controls suppression of
 * the Content-Encoding header sent by ob_gzhandler; by default it
 * is left. See comments for wfClearOutputBuffers() for why it would
 * be used.
 *
 * Note that some PHP configuration options may add output buffer
 * layers which cannot be removed; these are left in place.
 *
 * @param $resetGzipEncoding Bool
 */",
 "/**
 * More legible than passing a \'false\' parameter to wfResetOutputBuffers():
 *
 * Clear away output buffers, but keep the Content-Encoding header
 * produced by ob_gzhandler, if any.
 *
 * This should be used for HTTP 304 responses, where you need to
 * preserve the Content-Encoding header of the real result, but
 * also need to suppress the output of ob_gzhandler to keep to spec
 * and avoid breaking Firefox in rare cases where the headers and
 * body are broken over two packets.
 */",
 "/**
 * Converts an Accept-* header into an array mapping string values to quality
 * factors
 *
 * @param $accept String
 * @param $def String default
 * @return Array
 */",
 "/**
 * Checks if a given MIME type matches any of the keys in the given
 * array. Basic wildcards are accepted in the array keys.
 *
 * Returns the matching MIME type (or wildcard) if a match, otherwise
 * NULL if no match.
 *
 * @param $type String
 * @param $avail Array
 * @return string
 * @private
 */",
 "/**
 * Returns the \'best\' match between a client\'s requested internet media types
 * and the server\'s list of available types. Each list should be an associative
 * array of type to preference (preference is a float between 0.0 and 1.0).
 * Wildcards in the types are acceptable.
 *
 * @param $cprefs Array: client\'s acceptable type list
 * @param $sprefs Array: server\'s offered types
 * @return string
 *
 * @todo FIXME: Doesn\'t handle params like \'text/plain; charset=UTF-8\'
 * XXX: generalize to negotiate other stuff
 */",
 "/**
 * Reference-counted warning suppression
 *
 * @param $end Bool
 */",
 "/**
 * Restore error level to previous value
 */",
 "/**
 * Get a timestamp string in one of various formats
 *
 * @param $outputtype Mixed: A timestamp in one of the supported formats, the
 *                    function will autodetect which format is supplied and act
 *                    accordingly.
 * @param $ts Mixed: the timestamp to convert or 0 for the current timestamp
 * @return Mixed: String / false The same date in the format specified in $outputtype or false
 */",
 "/**
 * Return a formatted timestamp, or null if input is null.
 * For dealing with nullable timestamp columns in the database.
 *
 * @param $outputtype Integer
 * @param $ts String
 * @return String
 */",
 "/**
 * Convenience function; returns MediaWiki timestamp for the present time.
 *
 * @return string
 */",
 "/**
 * Check if the operating system is Windows
 *
 * @return Bool: true if it\'s Windows, False otherwise.
 */",
 "/**
 * Check if we are running under HipHop
 *
 * @return Bool
 */",
 "/**
 * Swap two variables
 *
 * @param $x Mixed
 * @param $y Mixed
 */",
 "/**
 * Tries to get the system directory for temporary files. The TMPDIR, TMP, and
 * TEMP environment variables are then checked in sequence, and if none are set
 * try sys_get_temp_dir() for PHP >= 5.2.1. All else fails, return /tmp for Unix
 * or C:\Windows\Temp for Windows and hope for the best.
 * It is common to call it with tempnam().
 *
 * NOTE: When possible, use instead the tmpfile() function to create
 * temporary files to avoid race conditions on file creation, etc.
 *
 * @return String
 */",
 "/**
 * Make directory, and make all parent directories if they don\'t exist
 *
 * @param $dir String: full path to directory to create
 * @param $mode Integer: chmod value to use, default is $wgDirectoryMode
 * @param $caller String: optional caller param for debugging.
 * @return bool
 */",
 "/**
 * Increment a statistics counter
 *
 * @param $key String
 * @param $count Int
 */",
 "/**
 * Remove a directory and all its content.
 * Does not hide error.
 */",
 "/**
 * @param $nr Mixed: the number to format
 * @param $acc Integer: the number of digits after the decimal point, default 2
 * @param $round Boolean: whether or not to round the value, default true
 * @return float
 */",
 "/**
 * Find out whether or not a mixed variable exists in a string
 *
 * @param $needle String
 * @param $str String
 * @param $insensitive Boolean
 * @return Boolean
 */",
 "/**
 * Safety wrapper around ini_get() for boolean settings.
 * The values returned from ini_get() are pre-normalized for settings
 * set via php.ini or php_flag/php_admin_flag... but *not*
 * for those set via php_value/php_admin_value.
 *
 * It\'s fairly common for people to use php_value instead of php_flag,
 * which can leave you with an \'off\' setting giving a false positive
 * for code that just takes the ini_get() return value as a boolean.
 *
 * To make things extra interesting, setting via php_value accepts
 * \"true\" and \"yes\" as true, but php.ini and php_flag consider them false. :)
 * Unrecognized values go false... again opposite PHP\'s own coercion
 * from string to bool.
 *
 * Luckily, \'properly\' set settings will always come back as \'0\' or \'1\',
 * so we only have to worry about them and the \'improper\' settings.
 *
 * I frickin\' hate PHP... :P
 *
 * @param $setting String
 * @return Bool
 */",
 "/**
 * Wrapper function for PHP\'s dl(). This doesn\'t work in most situations from
 * PHP 5.3 onward, and is usually disabled in shared environments anyway.
 *
 * @param $extension String A PHP extension. The file suffix (.so or .dll)
 *                          should be omitted
 * @param $fileName String Name of the library, if not $extension.suffix
 * @return Bool - Whether or not the extension is loaded
 */",
 "/**
 * Windows-compatible version of escapeshellarg()
 * Windows doesn\'t recognise single-quotes in the shell, but the escapeshellarg()
 * function puts single quotes in regardless of OS.
 *
 * Also fixes the locale problems on Linux in PHP 5.2.6+ (bug backported to
 * earlier distro releases of PHP)
 *
 * @param varargs
 * @return String
 */",
 "/**
 * Execute a shell command, with time and memory limits mirrored from the PHP
 * configuration if supported.
 * @param $cmd String Command line, properly escaped for shell.
 * @param &$retval optional, will receive the program\'s exit code.
 *                 (non-zero is usually failure)
 * @param $environ Array optional environment variables which should be
 *                 added to the executed command environment.
 * @return collected stdout as a string (trailing newlines stripped)
 */",
 "/**
 * Workaround for http://bugs.php.net/bug.php?id=45132
 * escapeshellarg() destroys non-ASCII characters if LANG is not a UTF-8 locale
 */",
 "/**
 * Generate a shell-escaped command line string to run a maintenance script.
 * Note that $parameters should be a flat array and an option with an argument
 * should consist of two consecutive items in the array (do not use \"--option value\").
 * @param $script string MediaWiki maintenance script path
 * @param $parameters Array Arguments and options to the script
 * @param $options Array Associative array of options:
 * 		\'php\': The path to the php executable
 * 		\'wrapper\': Path to a PHP wrapper to handle the maintenance script
 * @return Array
 */",
 "/**
 * wfMerge attempts to merge differences between three texts.
 * Returns true for a clean merge and false for failure or a conflict.
 *
 * @param $old String
 * @param $mine String
 * @param $yours String
 * @param $result String
 * @return Bool
 */",
 "/**
 * Returns unified plain-text diff of two texts.
 * Useful for machine processing of diffs.
 *
 * @param $before String: the text before the changes.
 * @param $after String: the text after the changes.
 * @param $params String: command-line options for the diff command.
 * @return String: unified diff of $before and $after
 */",
 "/**
 * This function works like \"use VERSION\" in Perl, the program will die with a
 * backtrace if the current version of PHP is less than the version provided
 *
 * This is useful for extensions which due to their nature are not kept in sync
 * with releases, and might depend on other versions of PHP than the main code
 *
 * Note: PHP might die due to parsing errors in some cases before it ever
 *       manages to call this function, such is life
 *
 * @see perldoc -f use
 *
 * @param $req_ver Mixed: the version to check, can be a string, an integer, or
 *                 a float
 */",
 "/**
 * This function works like \"use VERSION\" in Perl except it checks the version
 * of MediaWiki, the program will die with a backtrace if the current version
 * of MediaWiki is less than the version provided.
 *
 * This is useful for extensions which due to their nature are not kept in sync
 * with releases
 *
 * @see perldoc -f use
 *
 * @param $req_ver Mixed: the version to check, can be a string, an integer, or
 *                 a float
 */",
 "/**
 * Return the final portion of a pathname.
 * Reimplemented because PHP5\'s basename() is buggy with multibyte text.
 * http://bugs.php.net/bug.php?id=33898
 *
 * PHP\'s basename() only considers \'\\\' a pathchar on Windows and Netware.
 * We\'ll consider it so always, as we don\'t want \s in our Unix paths either.
 *
 * @param $path String
 * @param $suffix String: to remove if present
 * @return String
 */",
 "/**
 * Generate a relative path name to the given file.
 * May explode on non-matching case-insensitive paths,
 * funky symlinks, etc.
 *
 * @param $path String: absolute destination path including target filename
 * @param $from String: Absolute source path, directory only
 * @return String
 */",
 "/**
 * Do any deferred updates and clear the list
 *
 * @deprecated since 1.19
 * @see DeferredUpdates::doUpdate()
 * @param $commit string
 */",
 "/**
 * Convert an arbitrarily-long digit string from one numeric base
 * to another, optionally zero-padding to a minimum column width.
 *
 * Supports base 2 through 36; digit values 10-36 are represented
 * as lowercase letters a-z. Input is case-insensitive.
 *
 * @param $input String: of digits
 * @param $sourceBase Integer: 2-36
 * @param $destBase Integer: 2-36
 * @param $pad Integer: 1 or greater
 * @param $lowercase Boolean
 * @return String or false on invalid input
 */",
 "/**
 * Create an object with a given name and an array of construct parameters
 *
 * @param $name String
 * @param $p Array: parameters
 * @return object
 * @deprecated since 1.18, warnings in 1.18, removal in 1.20
 */",
 "/**
 * @return bool
 */",
 "/**
 * Override session_id before session startup if php\'s built-in
 * session generation code is not secure.
 */",
 "/**
 * Initialise php session
 *
 * @param $sessionId Bool
 */",
 "/**
 * Get an object from the precompiled serialized directory
 *
 * @param $name String
 * @return Mixed: the variable on success, false on failure
 */",
 "/**
 * Get a cache key
 *
 * @param varargs
 * @return String
 */",
 "/**
 * Get a cache key for a foreign DB
 *
 * @param $db String
 * @param $prefix String
 * @param varargs String
 * @return String
 */",
 "/**
 * Get an ASCII string identifying this wiki
 * This is used as a prefix in memcached keys
 *
 * @return String
 */",
 "/**
 * Split a wiki ID into DB name and table prefix
 *
 * @param $wiki String
 *
 * @return array
 */",
 "/**
 * Get a Database object.
 *
 * @param $db Integer: index of the connection to get. May be DB_MASTER for the
 *            master (for write queries), DB_SLAVE for potentially lagged read
 *            queries, or an integer >= 0 for a particular server.
 *
 * @param $groups Mixed: query groups. An array of group names that this query
 *                belongs to. May contain a single string if the query is only
 *                in one group.
 *
 * @param $wiki String: the wiki ID, or false for the current wiki
 *
 * Note: multiple calls to wfGetDB(DB_SLAVE) during the course of one request
 * will always return the same object, unless the underlying connection or load
 * balancer is manually destroyed.
 *
 * Note 2: use $this->getDB() in maintenance scripts that may be invoked by
 * updater to ensure that a proper database is being updated.
 *
 * @return DatabaseBase
 */",
 "/**
 * Get a load balancer object.
 *
 * @param $wiki String: wiki ID, or false for the current wiki
 * @return LoadBalancer
 */",
 "/**
 * Get the load balancer factory object
 *
 * @return LBFactory
 */",
 "/**
 * Find a file.
 * Shortcut for RepoGroup::singleton()->findFile()
 *
 * @param $title String or Title object
 * @param $options Associative array of options:
 *     time:           requested time for an archived image, or false for the
 *                     current version. An image object will be returned which was
 *                     created at the specified time.
 *
 *     ignoreRedirect: If true, do not follow file redirects
 *
 *     private:        If true, return restricted (deleted) files if the current
 *                     user is allowed to view them. Otherwise, such files will not
 *                     be found.
 *
 *     bypassCache:    If true, do not use the process-local cache of File objects
 *
 * @return File, or false if the file does not exist
 */",
 "/**
 * Get an object referring to a locally registered file.
 * Returns a valid placeholder object if the file does not exist.
 *
 * @param $title Title|String
 * @return File|null A File, or null if passed an invalid Title
 */",
 "/**
 * Stream a file to the browser. Back-compat alias for StreamFile::stream()
 * @deprecated since 1.19
 */",
 "/**
 * Should low-performance queries be disabled?
 *
 * @return Boolean
 * @codeCoverageIgnore
 */",
 "/**
 * Get the path to a specified script file, respecting file
 * extensions; this is a wrapper around $wgScriptExtension etc.
 *
 * @param $script String: script filename, sans extension
 * @return String
 */",
 "/**
 * Get the script URL.
 *
 * @return script URL
 */",
 "/**
 * Convenience function converts boolean values into \"true\"
 * or \"false\" (string) values
 *
 * @param $value Boolean
 * @return String
 */",
 "/**
 * Load an extension messages file
 *
 * @deprecated since 1.16, warnings in 1.18, remove in 1.20
 * @codeCoverageIgnore
 */",
 "/**
 * Get a platform-independent path to the null file, e.g. /dev/null
 *
 * @return string
 */",
 "/**
 * Modern version of wfWaitForSlaves(). Instead of looking at replication lag
 * and waiting for it to go down, this waits for the slaves to catch up to the
 * master position. Use this when updating very large numbers of rows, as
 * in maintenance scripts, to avoid causing too much lag.  Of course, this is
 * a no-op if there are no slaves.
 *
 * @param $maxLag Integer (deprecated)
 * @param $wiki mixed Wiki identifier accepted by wfGetLB
 */",
 "/**
 * Used to be used for outputting text in the installer/updater
 * @deprecated since 1.18, warnings in 1.18, remove in 1.20
 */",
 "/**
 * Count down from $n to zero on the terminal, with a one-second pause
 * between showing each number. For use in command-line scripts.
 * @codeCoverageIgnore
 * @param $n int
 */",
 "/**
 * Generate a random 32-character hexadecimal token.
 * @param $salt Mixed: some sort of salt, if necessary, to add to random
 *              characters before hashing.
 * @return string
 * @codeCoverageIgnore
 */",
 "/**
 * Replace all invalid characters with -
 *
 * @param $name Mixed: filename to process
 * @return String
 */",
 "/**
 * Set PHP\'s memory limit to the larger of php.ini or $wgMemoryLimit;
 *
 * @return Integer value memory was set to.
 */",
 "/**
 * Converts shorthand byte notation to integer form
 *
 * @param $string String
 * @return Integer
 */",
 "/**
 * Get the normalised IETF language tag
 * See unit test for examples.
 *
 * @param $code String: The language code.
 * @return String: The language code which complying with BCP 47 standards.
 */",
 "/**
 * Get a cache object.
 *
 * @param $inputType integer Cache type, one the the CACHE_* constants.
 * @return BagOStuff
 */",
 "/**
 * Get the main cache object
 *
 * @return BagOStuff
 */",
 "/**
 * Get the cache object used by the message cache
 *
 * @return BagOStuff
 */",
 "/**
 * Get the cache object used by the parser cache
 *
 * @return BagOStuff
 */",
 "/**
 * Call hook functions defined in $wgHooks
 *
 * @param $event String: event name
 * @param $args Array: parameters passed to hook functions
 * @return Boolean True if no handler aborted the hook
 */",
 "/**
 * Wrapper around php\'s unpack.
 *
 * @param $format String: The format string (See php\'s docs)
 * @param $data: A binary string of binary data
 * @param $length integer or false: The minimun length of $data. This is to
 *	prevent reading beyond the end of $data. false to disable the check.
 *
 * Also be careful when using this function to read unsigned 32 bit integer
 * because php might make it negative.
 *
 * @throws MWException if $data not long enough, or if unpack fails
 * @return Associative array of the extracted data
 */",
 "/** @dataProvider provideForWfArrayDiff2 */",
 "/**
	 * @dataProvider dataArrayToCGI
	 */",
 "/**
	 * @dataProvider dataCgiToArray
	 */",
 "/**
	 * @dataProvider dataCgiRoundTrip
	 */",
 "/**
	 * test @see wfShorthandToInteger()
	 * @dataProvider provideShorthand
	 */",
 "/** array( shorthand, expected integer ) */",
 "/**
	 * @dataProvider provideMakeUrlIndexes()
	 */",
 "/**
	 * @dataProvider provideWfMatchesDomainList
	 */",
 "/**
	 * @dataProvider provideWfShellMaintenanceCmdList
	 */",
 "/**
 * Script that dumps wiki pages or logging database into an XML interchange
 * wrapper format for export or backup
 *
 * Copyright ?? 2005 Brion Vibber <brion@pobox.com>
 * http://www.mediawiki.org/
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @file
 * @ingroup Dump Maintenance
 */",
 "/**
 * Query module to enumerate all registered users.
 *
 * @ingroup API
 */",
 "/**
 * API module to allow users to watch a page
 *
 * @ingroup API
 */",
 "/** German (formal address) (???Deutsch (Sie-Form)???)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author *Surak*
 * @author ChrisiPK
 * @author Geitost
 * @author Imre
 * @author Jimmy Collins <jimmy.collins@web.de>
 * @author Kghbln
 * @author Leithian
 * @author Merlissimo
 * @author MichaelFrey
 * @author Michawiki
 * @author Pill
 * @author Raimond Spekking (Raymond) <raimond.spekking@gmail.com> since January 2007
 * @author SVG
 * @author The Evil IP address
 * @author Tim Bartel (avatar) <wikipedia@computerkultur.org> formal addressing
 * @author Tischbeinahe
 * @author Umherirrender
 * @author Urhixidur
 */",
 "/**
	 * @param $count int
	 * @param $forms array
	 * @return string
	 */",
 "/**
 * Romanian (Rom??n??)
 *
 * @ingroup Language
 */",
 "/**
	 * Mostly to test the raw ascii feature.
	 * @dataProvider providerSprintfDate
	 */",
 "/** @dataProvider providePlural */",
 "/** Tests for MediaWiki languages/LanguageAr.php */",
 "/**
	 * @param $string string
	 * @return mixed|string
	 */",
 "/** Azerbaijani (Az??rbaycan)
  *
  * @ingroup Language
  */",
 "/**
	 * Add skin specific stylesheets
	 * @param $out OutputPage
	 */",
 "/**
	 * Suppress the quickbar from the output, only for skin supporting
	 * the quickbar
	 */",
 "/**
	 * Return whether the quickbar should be suppressed from the output
	 *
	 * @return Boolean
	 */",
 "/**
	 * This will be called immediately after the <body> tag.  Split into
	 * two functions to make it easier to subclass.
	 */",
 "/**
	 * This gets called shortly before the </body> tag.
	 * @return String HTML to be put before </body>
	 */",
 "/** overloaded by derived classes */",
 "/**
	 * Language/charset variant links for classic-style skins
	 * @return string
	 */",
 "/**
	 * Compatibility for extensions adding functionality through tabs.
	 * Eventually these old skins should be replaced with SkinTemplate-based
	 * versions, sigh...
	 * @return string
	 * @todo Exterminate! ...that, and replace it with normal SkinTemplate stuff
	 */",
 "/**
	 * Show a drop-down box of special pages
	 */",
 "/**
	 * Gets the h1 element with the page title.
	 * @return string
	 */",
 "/**
	 * @deprecated in 1.19
	 */",
 "/** Sanskrit (???????????????????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Abhirama
 * @author Ansumang
 * @author Bharata
 * @author Bhawani Gautam
 * @author Hemant wikikosh1
 * @author Hrishikesh.kb
 * @author Htt
 * @author Kaustubh
 * @author Mahitgar
 * @author Naveen Sankar
 * @author Omnipaedista
 * @author Shijualex
 * @author Shubha
 * @author Vibhijain
 * @author ????????????????????????
 */",
 "/**
	 * Loads information stored in the database about modules.
	 *
	 * This method grabs modules dependencies from the database and updates modules
	 * objects.
	 *
	 * This is not inside the module code because it is much faster to
	 * request all of the information at once than it is to have each module
	 * requests its own information. This sacrifice of modularity yields a substantial
	 * performance improvement.
	 *
	 * @param $modules Array: List of module names to preload information for
	 * @param $context ResourceLoaderContext: Context to load the information within
	 */",
 "/**
	 * Runs JavaScript or CSS data through a filter, caching the filtered result for future calls.
	 *
	 * Available filters are:
	 *  - minify-js \see JavaScriptMinifier::minify
	 *  - minify-css \see CSSMin::minify
	 *
	 * If $data is empty, only contains whitespace or the filter was unknown,
	 * $data is returned unmodified.
	 *
	 * @param $filter String: Name of filter to run
	 * @param $data String: Text to filter, such as JavaScript or CSS text
	 * @return String: Filtered data, or a comment containing an error message
	 */",
 "/**
	 * Registers core modules and runs registration hooks.
	 */",
 "/**
	 * Registers a module with the ResourceLoader system.
	 *
	 * @param $name Mixed: Name of module as a string or List of name/object pairs as an array
	 * @param $info Module info array. For backwards compatibility with 1.17alpha,
	 *   this may also be a ResourceLoaderModule object. Optional when using
	 *   multiple-registration calling style.
	 * @throws MWException: If a duplicate module registration is attempted
	 * @throws MWException: If a module name contains illegal characters (pipes or commas)
	 * @throws MWException: If something other than a ResourceLoaderModule is being registered
	 * @return Boolean: False if there were any errors, in which case one or more modules were not
	 *     registered
	 */",
 "/**
	 */",
 "/**
	 * Add a foreign source of modules.
	 *
	 * Source properties:
	 * \'loadScript\': URL (either fully-qualified or protocol-relative) of load.php for this source
	 *
	 * @param $id Mixed: source ID (string), or array( id1 => props1, id2 => props2, ... )
	 * @param $properties Array: source properties
	 */",
 "/**
	 * Get a list of module names
	 *
	 * @return Array: List of module names
	 */",
 "/**
	 * Get a list of test module names for one (or all) frameworks.
	 * If the given framework id is unknkown, or if the in-object variable is not an array,
	 * then it will return an empty array.
	 *
	 * @param $framework String: Optional. Get only the test module names for one
	 * particular framework.
	 * @return Array
	 */",
 "/**
	 * Get the ResourceLoaderModule object for a given module name.
	 *
	 * @param $name String: Module name
	 * @return ResourceLoaderModule if module has been registered, null otherwise
	 */",
 "/**
	 * Get the list of sources
	 *
	 * @return Array: array( id => array of properties, .. )
	 */",
 "/**
	 * Outputs a response to a resource load-request, including a content-type header.
	 *
	 * @param $context ResourceLoaderContext: Context in which a response should be formed
	 */",
 "/**
	 * Send content type and last modified headers to the client.
	 * @param $context ResourceLoaderContext
	 * @param $mtime string TS_MW timestamp to use for last-modified
	 * @return void
	 */",
 "/**
	 * If there\'s an If-Modified-Since header, respond with a 304 appropriately
	 * and clear out the output buffer. If the client cache is too old then do nothing.
	 * @param $context ResourceLoaderContext
	 * @param $mtime string The TS_MW timestamp to check the header against
	 * @return bool True iff 304 header sent and output handled
	 */",
 "/**
	 * Send out code for a response from file cache if possible
	 *
	 * @param $fileCache ObjectFileCache: Cache object for this request URL
	 * @param $context ResourceLoaderContext: Context in which to generate a response
	 * @return bool If this found a cache file and handled the response
	 */",
 "/**
	 * Generates code for a response
	 *
	 * @param $context ResourceLoaderContext: Context in which to generate a response
	 * @param $modules Array: List of module objects keyed by module name
	 * @param $missing Array: List of unavailable modules (optional)
	 * @return String: Response data
	 */",
 "/**
	 * Returns JS code to call to mw.loader.implement for a module with
	 * given properties.
	 *
	 * @param $name Module name
	 * @param $scripts Mixed: List of URLs to JavaScript files or String of JavaScript code
	 * @param $styles Mixed: List of CSS strings keyed by media type, or list of lists of URLs to
	 * CSS files keyed by media type
	 * @param $messages Mixed: List of messages associated with this module. May either be an
	 *     associative array mapping message key to value, or a JSON-encoded message blob containing
	 *     the same data, wrapped in an XmlJsCode object.
	 *
	 * @return string
	 */",
 "/**
	 * Returns JS code which, when called, will register a given list of messages.
	 *
	 * @param $messages Mixed: Either an associative array mapping message key to value, or a
	 *     JSON-encoded message blob containing the same data, wrapped in an XmlJsCode object.
	 *
	 * @return string
	 */",
 "/**
	 * Combines an associative array mapping media type to CSS into a
	 * single stylesheet with @media blocks.
	 *
	 * @param $styles Array: List of CSS strings keyed by media type
	 *
	 * @return string
	 */",
 "/**
	 * Returns a JS call to mw.loader.state, which sets the state of a
	 * module or modules to a given value. Has two calling conventions:
	 *
	 *    - ResourceLoader::makeLoaderStateScript( $name, $state ):
	 *         Set the state of a single module called $name to $state
	 *
	 *    - ResourceLoader::makeLoaderStateScript( array( $name => $state, ... ) ):
	 *         Set the state of modules with the given names to the given states
	 *
	 * @param $name string
	 * @param $state
	 *
	 * @return string
	 */",
 "/**
	 * Returns JS code which calls the script given by $script. The script will
	 * be called with local variables name, version, dependencies and group,
	 * which will have values corresponding to $name, $version, $dependencies
	 * and $group as supplied.
	 *
	 * @param $name String: Module name
	 * @param $version Integer: Module version number as a timestamp
	 * @param $dependencies Array: List of module names on which this module depends
	 * @param $group String: Group which the module is in.
	 * @param $source String: Source of the module, or \'local\' if not foreign.
	 * @param $script String: JavaScript code
	 *
	 * @return string
	 */",
 "/**
	 * Returns JS code which calls mw.loader.register with the given
	 * parameters. Has three calling conventions:
	 *
	 *   - ResourceLoader::makeLoaderRegisterScript( $name, $version, $dependencies, $group, $source ):
	 *       Register a single module.
	 *
	 *   - ResourceLoader::makeLoaderRegisterScript( array( $name1, $name2 ) ):
	 *       Register modules with the given names.
	 *
	 *   - ResourceLoader::makeLoaderRegisterScript( array(
	 *        array( $name1, $version1, $dependencies1, $group1, $source1 ),
	 *        array( $name2, $version2, $dependencies1, $group2, $source2 ),
	 *        ...
	 *     ) ):
	 *        Registers modules with the given names and parameters.
	 *
	 * @param $name String: Module name
	 * @param $version Integer: Module version number as a timestamp
	 * @param $dependencies Array: List of module names on which this module depends
	 * @param $group String: group which the module is in.
	 * @param $source String: source of the module, or \'local\' if not foreign
	 *
	 * @return string
	 */",
 "/**
	 * Returns JS code which calls mw.loader.addSource() with the given
	 * parameters. Has two calling conventions:
	 *
	 *   - ResourceLoader::makeLoaderSourcesScript( $id, $properties ):
	 *       Register a single source
	 *
	 *   - ResourceLoader::makeLoaderSourcesScript( array( $id1 => $props1, $id2 => $props2, ... ) );
	 *       Register sources with the given IDs and properties.
	 *
	 * @param $id String: source ID
	 * @param $properties Array: source properties (see addSource())
	 *
	 * @return string
	 */",
 "/**
	 * Returns JS code which runs given JS code if the client-side framework is
	 * present.
	 *
	 * @param $script String: JavaScript code
	 *
	 * @return string
	 */",
 "/**
	 * Returns JS code which will set the MediaWiki configuration array to
	 * the given value.
	 *
	 * @param $configuration Array: List of configuration values keyed by variable name
	 *
	 * @return string
	 */",
 "/**
	 * Convert an array of module names to a packed query string.
	 *
	 * For example, array( \'foo.bar\', \'foo.baz\', \'bar.baz\', \'bar.quux\' )
	 * becomes \'foo.bar,baz|bar.baz,quux\'
	 * @param $modules array of module names (strings)
	 * @return string Packed query string
	 */",
 "/**
	 * Determine whether debug mode was requested
	 * Order of priority is 1) request param, 2) cookie, 3) $wg setting
	 * @return bool
	 */",
 "/**
	 * Build a load.php URL
	 * @param $modules array of module names (strings)
	 * @param $lang string Language code
	 * @param $skin string Skin name
	 * @param $user string|null User name. If null, the &user= parameter is omitted
	 * @param $version string|null Versioning timestamp
	 * @param $debug bool Whether the request should be in debug mode
	 * @param $only string|null &only= parameter
	 * @param $printable bool Printable mode
	 * @param $handheld bool Handheld mode
	 * @param $extraQuery array Extra query parameters to add
	 * @return string URL to load.php. May be protocol-relative (if $wgLoadScript is procol-relative)
	 */",
 "/**
	 * Build a query array (array representation of query string) for load.php. Helper
	 * function for makeLoaderURL().
	 * @return array
	 */",
 "/**
 * Dynamic JavaScript and CSS resource loading system.
 *
 * Most of the documention is on the MediaWiki documentation wiki starting at:
 *    http://www.mediawiki.org/wiki/ResourceLoader
 */",
 "/** Javanese (Basa Jawa)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Anggoro
 * @author Helix84
 * @author Kaganer
 * @author Meursault2004
 * @author Pras
 * @author Rex
 * @author StefanusRA
 * @author ???????? ????????????????
 */",
 "/**
	 * Get the type of the DBMS, as it appears in $wgDBtype.
	 *
	 * @return string
	 */",
 "/**
	 * Open a connection to the database. Usually aborts on failure
	 *
	 * @param $server String: database server host
	 * @param $user String: database user name
	 * @param $password String: database user password
	 * @param $dbName String: database name
	 * @return bool
	 * @throws DBConnectionError
	 */",
 "/**
	 * Fetch the next row from the given result object, in object form.
	 * Fields can be retrieved with $row->fieldname, with fields acting like
	 * member variables.
	 *
	 * @param $res ResultWrapper|object as returned from DatabaseBase::query(), etc.
	 * @return Row object
	 * @throws DBUnexpectedError Thrown if the database returns an error
	 */",
 "/**
	 * Fetch the next row from the given result object, in associative array
	 * form.  Fields are retrieved with $row[\'fieldname\'].
	 *
	 * @param $res ResultWrapper result object as returned from DatabaseBase::query(), etc.
	 * @return Row object
	 * @throws DBUnexpectedError Thrown if the database returns an error
	 */",
 "/**
	 * Get the number of rows in a result object
	 *
	 * @param $res Mixed: A SQL result
	 * @return int
	 */",
 "/**
	 * Get the number of fields in a result object
	 * @see http://www.php.net/mysql_num_fields
	 *
	 * @param $res Mixed: A SQL result
	 * @return int
	 */",
 "/**
	 * Get a field name in a result object
	 * @see http://www.php.net/mysql_field_name
	 *
	 * @param $res Mixed: A SQL result
	 * @param $n Integer
	 * @return string
	 */",
 "/**
	 * Get the inserted value of an auto-increment row
	 *
	 * The value inserted should be fetched from nextSequenceValue()
	 *
	 * Example:
	 * $id = $dbw->nextSequenceValue(\'page_page_id_seq\');
	 * $dbw->insert(\'page\',array(\'page_id\' => $id));
	 * $id = $dbw->insertId();
	 *
	 * @return int
	 */",
 "/**
	 * Change the position of the cursor in a result object
	 * @see http://www.php.net/mysql_data_seek
	 *
	 * @param $res Mixed: A SQL result
	 * @param $row Mixed: Either MySQL row or ResultWrapper
	 */",
 "/**
	 * Get the last error number
	 * @see http://www.php.net/mysql_errno
	 *
	 * @return int
	 */",
 "/**
	 * Get a description of the last error
	 * @see http://www.php.net/mysql_error
	 *
	 * @return string
	 */",
 "/**
	 * mysql_fetch_field() wrapper
	 * Returns false if the field doesn\'t exist
	 *
	 * @param $table string: table name
	 * @param $field string: field name
	 *
	 * @return Field
	 */",
 "/**
	 * Get information about an index into an object
	 * @param $table string: Table name
	 * @param $index string: Index name
	 * @param $fname string: Calling function name
	 * @return Mixed: Database-specific index description class or false if the index does not exist
	 */",
 "/**
	 * Get the number of rows affected by the last write query
	 * @see http://www.php.net/mysql_affected_rows
	 *
	 * @return int
	 */",
 "/**
	 * Wrapper for addslashes()
	 *
	 * @param $s string: to be slashed.
	 * @return string: slashed string.
	 */",
 "/**
	 * Returns a wikitext link to the DB\'s website, e.g.,
	 *     return \"[http://www.mysql.com/ MySQL]\";
	 * Should at least contain plain text, if for some reason
	 * your database has no website.
	 *
	 * @return string: wikitext of a link to the server software\'s web site
	 */",
 "/**
	 * A string describing the current software version, like from
	 * mysql_get_server_info().
	 *
	 * @return string: Version information from the database server.
	 */",
 "/**
	 * A string describing the current software version, and possibly
	 * other details in a user-friendly way.  Will be listed on Special:Version, etc.
	 * Use getServerVersion() to get machine-friendly information.
	 *
	 * @return string: Version information from the database server
	 */",
 "/**
 * Base interface for all DBMS-specific code. At a bare minimum, all of the
 * following must be implemented to support MediaWiki
 *
 * @file
 * @ingroup Database
 */",
 "/**
	 * A string describing the current software version, and possibly
	 * other details in a user-friendly way.  Will be listed on Special:Version, etc.
	 * Use getServerVersion() to get machine-friendly information.
	 *
	 * @return string: Version information from the database server
	 */",
 "/**
	 * Boolean, controls output of large amounts of debug information.
	 * @param $debug bool|null
	 *   - true to enable debugging
	 *   - false to disable debugging
	 *   - omitted or null to do nothing
	 *
	 * @return The previous value of the flag
	 */",
 "/**
	 * Turns buffering of SQL result sets on (true) or off (false). Default is
	 * \"on\".
	 *
	 * Unbuffered queries are very troublesome in MySQL:
	 *
	 *   - If another query is executed while the first query is being read
	 *     out, the first query is killed. This means you can\'t call normal
	 *     MediaWiki functions while you are reading an unbuffered query result
	 *     from a normal wfGetDB() connection.
	 *
	 *   - Unbuffered queries cause the MySQL server to use large amounts of
	 *     memory and to hold broad locks which block other queries.
	 *
	 * If you want to limit client-side memory, it\'s almost always better to
	 * split up queries into batches using a LIMIT clause than to switch off
	 * buffering.
	 *
	 * @param $buffer null|bool
	 *
	 * @return The previous value of the flag
	 */",
 "/**
	 * Turns on (false) or off (true) the automatic generation and sending
	 * of a \"we\'re sorry, but there has been a database error\" page on
	 * database errors. Default is on (false). When turned off, the
	 * code should use lastErrno() and lastError() to handle the
	 * situation as appropriate.
	 *
	 * @param $ignoreErrors bool|null
	 *
	 * @return bool The previous value of the flag.
	 */",
 "/**
	 * Gets or sets the current transaction level.
	 *
	 * Historically, transactions were allowed to be \"nested\". This is no
	 * longer supported, so this function really only returns a boolean.
	 *
	 * @param $level An integer (0 or 1), or omitted to leave it unchanged.
	 * @return The previous value
	 */",
 "/**
	 * Get/set the number of errors logged. Only useful when errors are ignored
	 * @param $count The count to set, or omitted to leave it unchanged.
	 * @return The error count
	 */",
 "/**
	 * Get/set the table prefix.
	 * @param $prefix The table prefix to set, or omitted to leave it unchanged.
	 * @return The previous table prefix.
	 */",
 "/**
	 * Get properties passed down from the server info array of the load
	 * balancer.
	 *
	 * @param $name string The entry of the info array to get, or null to get the
	 *   whole array
	 *
	 * @return LoadBalancer|null
	 */",
 "/**
	 * Set the LB info array, or a member of it. If called with one parameter,
	 * the LB info array is set to that parameter. If it is called with two
	 * parameters, the member with the given name is set to the given value.
	 *
	 * @param $name
	 * @param $value
	 */",
 "/**
	 * Set lag time in seconds for a fake slave
	 *
	 * @param $lag int
	 */",
 "/**
	 * Make this connection a fake master
	 *
	 * @param $enabled bool
	 */",
 "/**
	 * Returns true if this database supports (and uses) cascading deletes
	 *
	 * @return bool
	 */",
 "/**
	 * Returns true if this database supports (and uses) triggers (e.g. on the page table)
	 *
	 * @return bool
	 */",
 "/**
	 * Returns true if this database is strict about what can be put into an IP field.
	 * Specifically, it uses a NULL value instead of an empty string.
	 *
	 * @return bool
	 */",
 "/**
	 * Returns true if this database uses timestamps rather than integers
	 *
	 * @return bool
	*/",
 "/**
	 * Returns true if this database does an implicit sort when doing GROUP BY
	 *
	 * @return bool
	 */",
 "/**
	 * Returns true if this database does an implicit order by when the column has an index
	 * For example: SELECT page_title FROM page LIMIT 1
	 *
	 * @return bool
	 */",
 "/**
	 * Returns true if this database requires that SELECT DISTINCT queries require that all
	   ORDER BY expressions occur in the SELECT list per the SQL92 standard
	 *
	 * @return bool
	 */",
 "/**
	 * Returns true if this database can do a native search on IP columns
	 * e.g. this works as expected: .. WHERE rc_ip = \'127.42.12.102/32\';
	 *
	 * @return bool
	 */",
 "/**
	 * Returns true if this database can use functional indexes
	 *
	 * @return bool
	 */",
 "/**
	 * Return the last query that went through DatabaseBase::query()
	 * @return String
	 */",
 "/**
	 * Returns true if the connection may have been used for write queries.
	 * Should return true if unsure.
	 *
	 * @return bool
	 */",
 "/**
	 * Is a connection to the database open?
	 * @return Boolean
	 */",
 "/**
	 * Set a flag for this connection
	 *
	 * @param $flag Integer: DBO_* constants from Defines.php:
	 *   - DBO_DEBUG: output some debug info (same as debug())
	 *   - DBO_NOBUFFER: don\'t buffer results (inverse of bufferResults())
	 *   - DBO_IGNORE: ignore errors (same as ignoreErrors())
	 *   - DBO_TRX: automatically start transactions
	 *   - DBO_DEFAULT: automatically sets DBO_TRX if not in command line mode
	 *       and removes it in command line mode
	 *   - DBO_PERSISTENT: use persistant database connection
	 */",
 "/**
	 * Clear a flag for this connection
	 *
	 * @param $flag: same as setFlag()\'s $flag param
	 */",
 "/**
	 * Returns a boolean whether the flag $flag is set for this connection
	 *
	 * @param $flag: same as setFlag()\'s $flag param
	 * @return Boolean
	 */",
 "/**
	 * General read-only accessor
	 *
	 * @param $name string
	 *
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * Return a path to the DBMS-specific schema file, otherwise default to tables.sql
	 *
	 * @return string
	 */",
 "/**
	 * Constructor.
	 * @param $server String: database server host
	 * @param $user String: database user name
	 * @param $password String: database user password
	 * @param $dbName String: database name
	 * @param $flags
	 * @param $tablePrefix String: database table prefixes. By default use the prefix gave in LocalSettings.php
	 */",
 "/**
	 * Called by serialize. Throw an exception when DB connection is serialized.
	 * This causes problems on some database engines because the connection is
	 * not restored on unserialize.
	 */",
 "/**
	 * Same as new DatabaseMysql( ... ), kept for backward compatibility
	 * @deprecated since 1.17
	 *
	 * @param $server
	 * @param $user
	 * @param $password
	 * @param $dbName
	 * @param $flags int
	 * @return DatabaseMysql
	 */",
 "/**
	 * Same as new factory( ... ), kept for backward compatibility
	 * @deprecated since 1.18
	 * @see Database::factory()
	 */",
 "/**
	 * Given a DB type, construct the name of the appropriate child class of
	 * DatabaseBase. This is designed to replace all of the manual stuff like:
	 *	$class = \'Database\' . ucfirst( strtolower( $type ) );
	 * as well as validate against the canonical list of DB types we have
	 *
	 * This factory function is mostly useful for when you need to connect to a
	 * database other than the MediaWiki default (such as for external auth,
	 * an extension, et cetera). Do not use this to connect to the MediaWiki
	 * database. Example uses in core:
	 * @see LoadBalancer::reallyOpenConnection()
	 * @see ExternalUser_MediaWiki::initFromCond()
	 * @see ForeignDBRepo::getMasterDB()
	 * @see WebInstaller_DBConnect::execute()
	 *
	 * @param $dbType String A possible DB type
	 * @param $p Array An array of options to pass to the constructor.
	 *    Valid options are: host, user, password, dbname, flags, tablePrefix
	 * @return DatabaseBase subclass or null
	 */",
 "/**
	 * @return bool|string
	 */",
 "/**
	 * @param $errno
	 * @param $errstr
	 */",
 "/**
	 * Closes a database connection.
	 * if it is open : commits any open transactions
	 *
	 * @return Bool operation success. true if already closed.
	 */",
 "/**
	 * @param $error String: fallback error message, used if none is given by DB
	 */",
 "/**
	 * The DBMS-dependent part of query()
	 *
	 * @param  $sql String: SQL query.
	 * @return ResultWrapper Result object to feed to fetchObject, fetchRow, ...; or false on failure
	 */",
 "/**
	 * Determine whether a query writes to the DB.
	 * Should return true if unsure.
	 *
	 * @param $sql string
	 *
	 * @return bool
	 */",
 "/**
	 * Run an SQL query and return the result. Normally throws a DBQueryError
	 * on failure. If errors are ignored, returns false instead.
	 *
	 * In new code, the query wrappers select(), insert(), update(), delete(),
	 * etc. should be used where possible, since they give much better DBMS
	 * independence and automatically quote or validate user input in a variety
	 * of contexts. This function is generally only useful for queries which are
	 * explicitly DBMS-dependent and are unsupported by the query wrappers, such
	 * as CREATE TABLE.
	 *
	 * However, the query wrappers themselves should call this function.
	 *
	 * @param  $sql        String: SQL query
	 * @param  $fname      String: Name of the calling function, for profiling/SHOW PROCESSLIST
	 *     comment (you can use __METHOD__ or add some extra info)
	 * @param  $tempIgnore Boolean:   Whether to avoid throwing an exception on errors...
	 *     maybe best to catch the exception instead?
	 * @return boolean|ResultWrapper. true for a successful write query, ResultWrapper object
	 *     for a successful read query, or false on failure if $tempIgnore set
	 * @throws DBQueryError Thrown when the database returns an error of any kind
	 */",
 "/**
	 * Report a query error. Log the error, and if neither the object ignore
	 * flag nor the $tempIgnore flag is set, throw a DBQueryError.
	 *
	 * @param $error String
	 * @param $errno Integer
	 * @param $sql String
	 * @param $fname String
	 * @param $tempIgnore Boolean
	 */",
 "/**
	 * Intended to be compatible with the PEAR::DB wrapper functions.
	 * http://pear.php.net/manual/en/package.database.db.intro-execute.php
	 *
	 * ? = scalar value, quoted as necessary
	 * ! = raw SQL bit (a function for instance)
	 * & = filename; reads the file and inserts as a blob
	 *     (we don\'t use this though...)
	 *
	 * This function should not be used directly by new code outside of the
	 * database classes. The query wrapper functions (select() etc.) should be
	 * used instead.
	 *
	 * @param $sql string
	 * @param $func string
	 *
	 * @return array
	 */",
 "/**
	 * Free a prepared query, generated by prepare().
	 * @param $prepared
	 */",
 "/**
	 * Execute a prepared query with the various arguments
	 * @param $prepared String: the prepared sql
	 * @param $args Mixed: Either an array here, or put scalars as varargs
	 *
	 * @return ResultWrapper
	 */",
 "/**
	 * Prepare & execute an SQL statement, quoting and inserting arguments
	 * in the appropriate places.
	 *
	 * This function should not be used directly by new code outside of the
	 * database classes. The query wrapper functions (select() etc.) should be
	 * used instead.
	 *
	 * @param $query String
	 * @param $args ...
	 *
	 * @return ResultWrapper
	 */",
 "/**
	 * For faking prepared SQL statements on DBs that don\'t support
	 * it directly.
	 * @param $preparedQuery String: a \'preparable\' SQL statement
	 * @param $args Array of arguments to fill it with
	 * @return string executable SQL
	 */",
 "/**
	 * preg_callback func for fillPrepared()
	 * The arguments should be in $this->preparedArgs and must not be touched
	 * while we\'re doing this.
	 *
	 * @param $matches Array
	 * @return String
	 */",
 "/**
	 * Free a result object returned by query() or select(). It\'s usually not
	 * necessary to call this, just use unset() or let the variable holding
	 * the result object go out of scope.
	 *
	 * @param $res Mixed: A SQL result
	 */",
 "/**
	 * Simple UPDATE wrapper.
	 * Usually throws a DBQueryError on failure.
	 * If errors are explicitly ignored, returns success
	 *
	 * This function exists for historical reasons, DatabaseBase::update() has a more standard
	 * calling convention and feature set
	 *
	 * @param $table string
	 * @param $var
	 * @param $value
	 * @param $cond
	 * @param $fname string
	 *
	 * @return bool
	 */",
 "/**
	 * A SELECT wrapper which returns a single field from a single result row.
	 *
	 * Usually throws a DBQueryError on failure. If errors are explicitly
	 * ignored, returns false on failure.
	 *
	 * If no result rows are returned from the query, false is returned.
	 *
	 * @param $table string|array Table name. See DatabaseBase::select() for details.
	 * @param $var string The field name to select. This must be a valid SQL
	 *   fragment: do not use unvalidated user input.
	 * @param $cond string|array The condition array. See DatabaseBase::select() for details.
	 * @param $fname string The function name of the caller.
	 * @param $options string|array The query options. See DatabaseBase::select() for details.
	 *
	 * @return false|mixed The value from the field, or false on failure.
	 */",
 "/**
	 * Returns an optional USE INDEX clause to go after the table, and a
	 * string to go at the end of the query.
	 *
	 * @param $options Array: associative array of options to be turned into
	 *              an SQL query, valid keys are listed in the function.
	 * @return Array
	 * @see DatabaseBase::select()
	 */",
 "/**
	 * Execute a SELECT query constructed using the various parameters provided.
	 * See below for full details of the parameters.
	 *
	 * @param $table String|Array Table name
	 * @param $vars String|Array Field names
	 * @param $conds String|Array Conditions
	 * @param $fname String Caller function name
	 * @param $options Array Query options
	 * @param $join_conds Array Join conditions
	 *
	 * @param $table string|array
	 *
	 * May be either an array of table names, or a single string holding a table
	 * name. If an array is given, table aliases can be specified, for example:
	 *
	 *    array( \'a\' => \'user\' )
	 *
	 * This includes the user table in the query, with the alias \"a\" available
	 * for use in field names (e.g. a.user_name).
	 *
	 * All of the table names given here are automatically run through
	 * DatabaseBase::tableName(), which causes the table prefix (if any) to be
	 * added, and various other table name mappings to be performed.
	 *
	 *
	 * @param $vars string|array
	 *
	 * May be either a field name or an array of field names. The field names
	 * here are complete fragments of SQL, for direct inclusion into the SELECT
	 * query. Expressions and aliases may be specified as in SQL, for example:
	 *
	 *   array( \'MAX(rev_id) AS maxrev\' )
	 *
	 * If an expression is given, care must be taken to ensure that it is
	 * DBMS-independent.
	 *
	 *
	 * @param $conds string|array
	 *
	 * May be either a string containing a single condition, or an array of
	 * conditions. If an array is given, the conditions constructed from each
	 * element are combined with AND.
	 *
	 * Array elements may take one of two forms:
	 *
	 *   - Elements with a numeric key are interpreted as raw SQL fragments.
	 *   - Elements with a string key are interpreted as equality conditions,
	 *     where the key is the field name.
	 *     - If the value of such an array element is a scalar (such as a
	 *       string), it will be treated as data and thus quoted appropriately.
	 *       If it is null, an IS NULL clause will be added.
	 *     - If the value is an array, an IN(...) clause will be constructed,
	 *       such that the field name may match any of the elements in the
	 *       array. The elements of the array will be quoted.
	 *
	 * Note that expressions are often DBMS-dependent in their syntax.
	 * DBMS-independent wrappers are provided for constructing several types of
	 * expression commonly used in condition queries. See:
	 *    - DatabaseBase::buildLike()
	 *    - DatabaseBase::conditional()
	 *
	 *
	 * @param $options string|array
	 *
	 * Optional: Array of query options. Boolean options are specified by
	 * including them in the array as a string value with a numeric key, for
	 * example:
	 *
	 *    array( \'FOR UPDATE\' )
	 *
	 * The supported options are:
	 *
	 *   - OFFSET: Skip this many rows at the start of the result set. OFFSET
	 *     with LIMIT can theoretically be used for paging through a result set,
	 *     but this is discouraged in MediaWiki for performance reasons.
	 *
	 *   - LIMIT: Integer: return at most this many rows. The rows are sorted
	 *     and then the first rows are taken until the limit is reached. LIMIT
	 *     is applied to a result set after OFFSET.
	 *
	 *   - FOR UPDATE: Boolean: lock the returned rows so that they can\'t be
	 *     changed until the next COMMIT.
	 *
	 *   - DISTINCT: Boolean: return only unique result rows.
	 *
	 *   - GROUP BY: May be either an SQL fragment string naming a field or
	 *     expression to group by, or an array of such SQL fragments.
	 *
	 *   - HAVING: A string containing a HAVING clause.
	 *
	 *   - ORDER BY: May be either an SQL fragment giving a field name or
	 *     expression to order by, or an array of such SQL fragments.
	 *
	 *   - USE INDEX: This may be either a string giving the index name to use
	 *     for the query, or an array. If it is an associative array, each key
	 *     gives the table name (or alias), each value gives the index name to
	 *     use for that table. All strings are SQL fragments and so should be
	 *     validated by the caller.
	 *
	 *   - EXPLAIN: In MySQL, this causes an EXPLAIN SELECT query to be run,
	 *     instead of SELECT.
	 *
	 * And also the following boolean MySQL extensions, see the MySQL manual
	 * for documentation:
	 *
	 *    - LOCK IN SHARE MODE
	 *    - STRAIGHT_JOIN
	 *    - HIGH_PRIORITY
	 *    - SQL_BIG_RESULT
	 *    - SQL_BUFFER_RESULT
	 *    - SQL_SMALL_RESULT
	 *    - SQL_CALC_FOUND_ROWS
	 *    - SQL_CACHE
	 *    - SQL_NO_CACHE
	 *
	 *
	 * @param $join_conds string|array
	 *
	 * Optional associative array of table-specific join conditions. In the
	 * most common case, this is unnecessary, since the join condition can be
	 * in $conds. However, it is useful for doing a LEFT JOIN.
	 *
	 * The key of the array contains the table name or alias. The value is an
	 * array with two elements, numbered 0 and 1. The first gives the type of
	 * join, the second is an SQL fragment giving the join condition for that
	 * table. For example:
	 *
	 *    array( \'page\' => array(\'LEFT JOIN\',\'page_latest=rev_id\') )
	 *
	 * @return ResultWrapper. If the query returned no rows, a ResultWrapper
	 *   with no rows in it will be returned. If there was a query error, a
	 *   DBQueryError exception will be thrown, except if the \"ignore errors\"
	 *   option was set, in which case false will be returned.
	 */",
 "/**
	 * The equivalent of DatabaseBase::select() except that the constructed SQL
	 * is returned, instead of being immediately executed.
	 *
	 * @param $table string|array Table name
	 * @param $vars string|array Field names
	 * @param $conds string|array Conditions
	 * @param $fname string Caller function name
	 * @param $options string|array Query options
	 * @param $join_conds string|array Join conditions
	 *
	 * @return SQL query string.
	 * @see DatabaseBase::select()
	 */",
 "/**
	 * Single row SELECT wrapper. Equivalent to DatabaseBase::select(), except
	 * that a single row object is returned. If the query returns no rows,
	 * false is returned.
	 *
	 * @param $table string|array Table name
	 * @param $vars string|array Field names
	 * @param $conds array Conditions
	 * @param $fname string Caller function name
	 * @param $options string|array Query options
	 * @param $join_conds array|string Join conditions
	 *
	 * @return ResultWrapper|bool
	 */",
 "/**
	 * Estimate rows in dataset.
	 *
	 * MySQL allows you to estimate the number of rows that would be returned
	 * by a SELECT query, using EXPLAIN SELECT. The estimate is provided using
	 * index cardinality statistics, and is notoriously inaccurate, especially
	 * when large numbers of rows have recently been added or deleted.
	 *
	 * For DBMSs that don\'t support fast result size estimation, this function
	 * will actually perform the SELECT COUNT(*).
	 *
	 * Takes the same arguments as DatabaseBase::select().
	 *
	 * @param $table String: table name
	 * @param Array|string $vars : unused
	 * @param Array|string $conds : filters on the table
	 * @param $fname String: function name for profiling
	 * @param $options Array: options for select
	 * @return Integer: row count
	 */",
 "/**
	 * Removes most variables from an SQL query and replaces them with X or N for numbers.
	 * It\'s only slightly flawed. Don\'t use for anything important.
	 *
	 * @param $sql String A SQL Query
	 *
	 * @return string
	 */",
 "/**
	 * Determines whether a field exists in a table
	 *
	 * @param $table String: table name
	 * @param $field String: filed to check on that table
	 * @param $fname String: calling function name (optional)
	 * @return Boolean: whether $table has filed $field
	 */",
 "/**
	 * Determines whether an index exists
	 * Usually throws a DBQueryError on failure
	 * If errors are explicitly ignored, returns NULL on failure
	 *
	 * @param $table
	 * @param $index
	 * @param $fname string
	 *
	 * @return bool|null
	 */",
 "/**
	 * Query whether a given table exists
	 *
	 * @param $table string
	 * @param $fname string
	 *
	 * @return bool
	 */",
 "/**
	 * mysql_field_type() wrapper
	 * @param $res
	 * @param $index
	 * @return string
	 */",
 "/**
	 * Determines if a given index is unique
	 *
	 * @param $table string
	 * @param $index string
	 *
	 * @return bool
	 */",
 "/**
	 * Helper for DatabaseBase::insert().
	 *
	 * @param $options array
	 * @return string
	 */",
 "/**
	 * INSERT wrapper, inserts an array into a table.
	 *
	 * $a may be either:
	 *
	 *   - A single associative array. The array keys are the field names, and
	 *     the values are the values to insert. The values are treated as data
	 *     and will be quoted appropriately. If NULL is inserted, this will be
	 *     converted to a database NULL.
	 *   - An array with numeric keys, holding a list of associative arrays.
	 *     This causes a multi-row INSERT on DBMSs that support it. The keys in
	 *     each subarray must be identical to each other, and in the same order.
	 *
	 * Usually throws a DBQueryError on failure. If errors are explicitly ignored,
	 * returns success.
	 *
	 * $options is an array of options, with boolean options encoded as values
	 * with numeric keys, in the same style as $options in
	 * DatabaseBase::select(). Supported options are:
	 *
	 *   - IGNORE: Boolean: if present, duplicate key errors are ignored, and
	 *     any rows which cause duplicate key errors are not inserted. It\'s
	 *     possible to determine how many rows were successfully inserted using
	 *     DatabaseBase::affectedRows().
	 *
	 * @param $table   String Table name. This will be passed through
	 *                 DatabaseBase::tableName().
	 * @param $a       Array of rows to insert
	 * @param $fname   String Calling function name (use __METHOD__) for logs/profiling
	 * @param $options Array of options
	 *
	 * @return bool
	 */",
 "/**
	 * Make UPDATE options for the DatabaseBase::update function
	 *
	 * @param $options Array: The options passed to DatabaseBase::update
	 * @return string
	 */",
 "/**
	 * UPDATE wrapper. Takes a condition array and a SET array.
	 *
	 * @param $table  String name of the table to UPDATE. This will be passed through
	 *                DatabaseBase::tableName().
	 *
	 * @param $values Array:  An array of values to SET. For each array element,
	 *                the key gives the field name, and the value gives the data
	 *                to set that field to. The data will be quoted by
	 *                DatabaseBase::addQuotes().
	 *
	 * @param $conds  Array:  An array of conditions (WHERE). See
	 *                DatabaseBase::select() for the details of the format of
	 *                condition arrays. Use \'*\' to update all rows.
	 *
	 * @param $fname  String: The function name of the caller (from __METHOD__),
	 *                for logging and profiling.
	 *
	 * @param $options Array: An array of UPDATE options, can be:
	 *                   - IGNORE: Ignore unique key conflicts
	 *                   - LOW_PRIORITY: MySQL-specific, see MySQL manual.
	 * @return Boolean
	 */",
 "/**
	 * Makes an encoded list of strings from an array
	 * @param $a Array containing the data
	 * @param $mode int Constant
	 *      - LIST_COMMA:          comma separated, no field names
	 *      - LIST_AND:            ANDed WHERE clause (without the WHERE). See
	 *        the documentation for $conds in DatabaseBase::select().
	 *      - LIST_OR:             ORed WHERE clause (without the WHERE)
	 *      - LIST_SET:            comma separated with field names, like a SET clause
	 *      - LIST_NAMES:          comma separated field names
	 *
	 * @return string
	 */",
 "/**
	 * Build a partial where clause from a 2-d array such as used for LinkBatch.
	 * The keys on each level may be either integers or strings.
	 *
	 * @param $data Array: organized as 2-d
	 *              array(baseKeyVal => array(subKeyVal => <ignored>, ...), ...)
	 * @param $baseKey String: field name to match the base-level keys to (eg \'pl_namespace\')
	 * @param $subKey String: field name to match the sub-level keys to (eg \'pl_title\')
	 * @return Mixed: string SQL fragment, or false if no items in array.
	 */",
 "/**
	 * @param $field
	 * @return string
	 */",
 "/**
	 * @param $fieldLeft
	 * @param $fieldRight
	 * @return string
	 */",
 "/**
	 * @param  $fieldLeft
	 * @param  $fieldRight
	 * @return string
	 */",
 "/**
	 * Change the current database
	 *
	 * @todo Explain what exactly will fail if this is not overridden.
	 *
	 * @param $db
	 *
	 * @return bool Success or failure
	 */",
 "/**
	 * Get the current DB name
	 */",
 "/**
	 * Get the server hostname or IP address
	 */",
 "/**
	 * Format a table name ready for use in constructing an SQL query
	 *
	 * This does two important things: it quotes the table names to clean them up,
	 * and it adds a table prefix if only given a table name with no quotes.
	 *
	 * All functions of this object which require a table name call this function
	 * themselves. Pass the canonical name to such functions. This is only needed
	 * when calling query() directly.
	 *
	 * @param $name String: database table name
	 * @param $format String One of:
	 *   quoted - Automatically pass the table name through addIdentifierQuotes()
	 *            so that it can be used in a query.
	 *   raw - Do not add identifier quotes to the table name
	 * @return String: full database name
	 */",
 "/**
	 * Fetch a number of table names into an array
	 * This is handy when you need to construct SQL for joins
	 *
	 * Example:
	 * extract($dbr->tableNames(\'user\',\'watchlist\'));
	 * $sql = \"SELECT wl_namespace,wl_title FROM $watchlist,$user
	 *         WHERE wl_user=user_id AND wl_user=$nameWithQuotes\";
	 *
	 * @return array
	 */",
 "/**
	 * Fetch a number of table names into an zero-indexed numerical array
	 * This is handy when you need to construct SQL for joins
	 *
	 * Example:
	 * list( $user, $watchlist ) = $dbr->tableNamesN(\'user\',\'watchlist\');
	 * $sql = \"SELECT wl_namespace,wl_title FROM $watchlist,$user
	 *         WHERE wl_user=user_id AND wl_user=$nameWithQuotes\";
	 *
	 * @return array
	 */",
 "/**
	 * Get an aliased table name
	 * e.g. tableName AS newTableName
	 *
	 * @param $name string Table name, see tableName()
	 * @param $alias string|bool Alias (optional)
	 * @return string SQL name for aliased table. Will not alias a table to its own name
	 */",
 "/**
	 * Gets an array of aliased table names
	 *
	 * @param $tables array( [alias] => table )
	 * @return array of strings, see tableNameWithAlias()
	 */",
 "/**
	 * Get the aliased table name clause for a FROM clause
	 * which might have a JOIN and/or USE INDEX clause
	 *
	 * @param $tables array ( [alias] => table )
	 * @param $use_index array Same as for select()
	 * @param $join_conds array Same as for select()
	 * @return string
	 */",
 "/**
	 * Get the name of an index in a given table
	 *
	 * @param $index
	 *
	 * @return string
	 */",
 "/**
	 * If it\'s a string, adds quotes and backslashes
	 * Otherwise returns as-is
	 *
	 * @param $s string
	 *
	 * @return string
	 */",
 "/**
	 * Quotes an identifier using `backticks` or \"double quotes\" depending on the database type.
	 * MySQL uses `backticks` while basically everything else uses double quotes.
	 * Since MySQL is the odd one out here the double quotes are our generic
	 * and we implement backticks in DatabaseMysql.
	 *
	 * @param $s string
	 *
	 * @return string
	 */",
 "/**
	 * Returns if the given identifier looks quoted or not according to
	 * the database convention for quoting identifiers .
	 *
	 * @param $name string
	 *
	 * @return boolean
	 */",
 "/**
	 * Backwards compatibility, identifier quoting originated in DatabasePostgres
	 * which used quote_ident which does not follow our naming conventions
	 * was renamed to addIdentifierQuotes.
	 * @deprecated since 1.18 use addIdentifierQuotes
	 *
	 * @param $s string
	 *
	 * @return string
	 */",
 "/**
	 * Escape string for safe LIKE usage.
	 * WARNING: you should almost never use this function directly,
	 * instead use buildLike() that escapes everything automatically
	 * @deprecated since 1.17, warnings in 1.17, removed in ???
	 *
	 * @param $s string
	 *
	 * @return string
	 */",
 "/**
	*@param$sstring
	*@returnstring
	*/",
 "/**
	*LIKEstatementwrapper,receivesavariable-lengthargumentlistwithpartsofpatterntomatch
	*containingeitherstringliteralsthatwillbeescapedortokensreturnedbyanyChar()oranyString().
	*Alternatively,thefunctioncouldbeprovidedwithanarrayofaforementionedparameters.
	*
	*Example:$dbr->buildLike(\'My_page_title/\',$dbr->anyString())returnsaLIKEclausethatsearches
	*forsubpagesof\'Mypagetitle\'.
	*Alternatively:$pattern=array(\'My_page_title/\',$dbr->anyString());$query.=$dbr->buildLike($pattern);
	*
	*@since1.16
	*@returnString:fullybuiltLIKEstatement
	*/",
 "/**
	*ReturnsatokenforbuildLike()thatdenotesa\'_\'tobeusedinaLIKEquery
	*
	*@returnLikeMatch
	*/",
 "/**
	*ReturnsatokenforbuildLike()thatdenotesa\'%\'tobeusedinaLIKEquery
	*
	*@returnLikeMatch
	*/",
 "/**
	*Returnsanappropriatelyquotedsequencevalueforinsertinganewrow.
	*MySQLhasautoincrementfields,sothisisjustNULL.ButthePostgreSQL
	*subclasswillreturnaninteger,andsavethevalueforinsertId()
	*
	*Anyimplementationofthisfunctionshould*not*involvereusing
	*sequencenumberscreatedforrolled-backtransactions.
	*Seehttp://bugs.mysql.com/bug.php?id=30767fordetails.
	*@param$seqNamestring
	*@returnnull
	*/",
 "/**
	*USEINDEXclause.UnlikelytobeusefulforanythingbutMySQL.This
	*isonlyneededbecausea)MySQLmustbeasefficientaspossibledueto
	*itsuseonWikipedia,andb)MySQL4.0iskindofdumbsometimesabout
	*whichindextopick.Anyway,otherdatabasesmighthavedifferent
	*indexesonagiventable.Sodon\'tbotheroverridingthisunlessyou\'re
	*MySQL.
	*@param$index
	*@returnstring
	*/",
 "/**
	*REPLACEquerywrapper.
	*
	*REPLACEisaveryhandyMySQLextension,whichfunctionslikeanINSERT
	*exceptthatwhenthereisaduplicatekeyerror,theoldrowisdeleted
	*andthenewrowisinsertedinitsplace.
	*
	*WesimulatethiswithstandardSQLwithaDELETEfollowedbyINSERT.To
	*performthedelete,weneedtoknowwhattheuniqueindexesaresothat
	*weknowhowtofindtheconflictingrows.
	*
	*Itmaybemoreefficienttoleaveoffuniqueindexeswhichareunlikely
	*tocollide.Howeverifyoudothis,youruntheriskofencountering
	*errorswhichwouldn\'thaveoccurredinMySQL.
	*
	*@param$tableString:Thetabletoreplacetherow(s)in.
	*@param$rowsarrayCanbeeitherasinglerowtoinsert,ormultiplerows,
	*inthesameformatasforDatabaseBase::insert()
	*@param$uniqueIndexesarrayisanarrayofindexes.Eachelementmaybeeither
	*afieldnameoranarrayoffieldnames
	*@param$fnameString:Callingfunctionname(use__METHOD__)forlogs/profiling
	*/",
 "/**
	*REPLACEquerywrapperforMySQLandSQLite,whichhaveanativeREPLACE
	*statement.
	*
	*@param$tablestringTablename
	*@param$rowsarrayRowstoinsert
	*@param$fnamestringCallerfunctionname
	*
	*@returnResultWrapper
	*/",
 "/**
	*DELETEwheretheconditionisajoin.
	*
	*MySQLoverridesthistouseamulti-tableDELETEsyntax,inotherdatabases
	*weusesub-selects
	*
	*Forsafety,anempty$condswillnotdeleteeverything.Ifyouwantto
	*deleteallrowswherethejoinconditionmatches,set$conds=\'*\'.
	*
	*DONOTputthejoinconditionin$conds.
	*
	*@param$delTableString:Thetabletodeletefrom.
	*@param$joinTableString:Theothertable.
	*@param$delVarString:Thevariabletojoinon,inthefirsttable.
	*@param$joinVarString:Thevariabletojoinon,inthesecondtable.
	*@param$condsArray:Conditionarrayoffieldnamesmappedtovariables,
	*ANDedtogetherintheWHEREclause
	*@param$fnameString:Callingfunctionname(use__METHOD__)for
	*logs/profiling
	*/",
 "/**
	 * Returns the size of a text field, or -1 for \"unlimited\"
	 *
	 * @param $table string
	 * @param $field string
	 *
	 * @return int
	 */",
 "/**
	 * A string to insert into queries to show that they\'re low-priority, like
	 * MySQL\'s LOW_PRIORITY.  If no such feature exists, return an empty
	 * string and nothing bad should happen.
	 *
	 * @return string Returns the text of the low priority option if it is
	 *   supported, or a blank string otherwise
	 */",
 "/**
	 * DELETE query wrapper.
	 *
	 * @param $table Array Table name
	 * @param $conds String|Array of conditions. See $conds in DatabaseBase::select() for
	 *               the format. Use $conds == \"*\" to delete all rows
	 * @param $fname String name of the calling function
	 *
	 * @return bool
	 */",
 "/**
	 * INSERT SELECT wrapper. Takes data from a SELECT query and inserts it
	 * into another table.
	 *
	 * @param $destTable string The table name to insert into
	 * @param $srcTable string|array May be either a table name, or an array of table names
	 *    to include in a join.
	 *
	 * @param $varMap array must be an associative array of the form
	 *    array( \'dest1\' => \'source1\', ...). Source items may be literals
	 *    rather than field names, but strings should be quoted with
	 *    DatabaseBase::addQuotes()
	 *
	 * @param $conds array Condition array. See $conds in DatabaseBase::select() for
	 *    the details of the format of condition arrays. May be \"*\" to copy the
	 *    whole table.
	 *
	 * @param $fname string The function name of the caller, from __METHOD__
	 *
	 * @param $insertOptions array Options for the INSERT part of the query, see
	 *    DatabaseBase::insert() for details.
	 * @param $selectOptions array Options for the SELECT part of the query, see
	 *    DatabaseBase::select() for details.
	 *
	 * @return ResultWrapper
	 */",
 "/**
	 * Construct a LIMIT query with optional offset.  This is used for query
	 * pages.  The SQL should be adjusted so that only the first $limit rows
	 * are returned.  If $offset is provided as well, then the first $offset
	 * rows should be discarded, and the next $limit rows should be returned.
	 * If the result of the query is not ordered, then the rows to be returned
	 * are theoretically arbitrary.
	 *
	 * $sql is expected to be a SELECT, if that makes a difference.  For
	 * UPDATE, limitResultForUpdate should be used.
	 *
	 * The version provided by default works in MySQL and SQLite.  It will very
	 * likely need to be overridden for most other DBMSes.
	 *
	 * @param $sql String SQL query we will append the limit too
	 * @param $limit Integer the SQL limit
	 * @param $offset Integer|false the SQL offset (default false)
	 *
	 * @return string
	 */",
 "/**
	 * @param $sql
	 * @param $num
	 * @return string
	 */",
 "/**
	 * Returns true if current database backend supports ORDER BY or LIMIT for separate subqueries
	 * within the UNION construct.
	 * @return Boolean
	 */",
 "/**
	 * Construct a UNION query
	 * This is used for providing overload point for other DB abstractions
	 * not compatible with the MySQL syntax.
	 * @param $sqls Array: SQL statements to combine
	 * @param $all Boolean: use UNION ALL
	 * @return String: SQL fragment
	 */",
 "/**
	 * Returns an SQL expression for a simple conditional.  This doesn\'t need
	 * to be overridden unless CASE isn\'t supported in your DBMS.
	 *
	 * @param $cond String: SQL expression which will result in a boolean value
	 * @param $trueVal String: SQL expression to return if true
	 * @param $falseVal String: SQL expression to return if false
	 * @return String: SQL fragment
	 */",
 "/**
	 * Returns a comand for str_replace function in SQL query.
	 * Uses REPLACE() in MySQL
	 *
	 * @param $orig String: column to modify
	 * @param $old String: column to seek
	 * @param $new String: column to replace with
	 *
	 * @return string
	 */",
 "/**
	 * Determines how long the server has been up
	 * STUB
	 *
	 * @return int
	 */",
 "/**
	 * Determines if the last failure was due to a deadlock
	 * STUB
	 *
	 * @return bool
	 */",
 "/**
	 * Determines if the last failure was due to a lock timeout
	 * STUB
	 *
	 * @return bool
	 */",
 "/**
	 * Determines if the last query error was something that should be dealt
	 * with by pinging the connection and reissuing the query.
	 * STUB
	 *
	 * @return bool
	 */",
 "/**
	 * Determines if the last failure was due to the database being read-only.
	 * STUB
	 *
	 * @return bool
	 */",
 "/**
	 * Perform a deadlock-prone transaction.
	 *
	 * This function invokes a callback function to perform a set of write
	 * queries. If a deadlock occurs during the processing, the transaction
	 * will be rolled back and the callback function will be called again.
	 *
	 * Usage:
	 *   $dbw->deadlockLoop( callback, ... );
	 *
	 * Extra arguments are passed through to the specified callback function.
	 *
	 * Returns whatever the callback function returned on its successful,
	 * iteration, or false on error, for example if the retry limit was
	 * reached.
	 *
	 * @return bool
	 */",
 "/**
	 * Wait for the slave to catch up to a given master position.
	 *
	 * @param $pos DBMasterPos object
	 * @param $timeout Integer: the maximum number of seconds to wait for
	 *   synchronisation
	 *
	 * @return An integer: zero if the slave was past that position already,
	 *   greater than zero if we waited for some period of time, less than
	 *   zero if we timed out.
	 */",
 "/**
	 * Get the replication position of this slave
	 *
	 * @return DBMasterPos, or false if this is not a slave.
	 */",
 "/**
	 * Get the position of this master
	 *
	 * @return DBMasterPos, or false if this is not a master
	 */",
 "/**
	 * Begin a transaction, committing any previously open transaction
	 *
	 * @param $fname string
	 */",
 "/**
	 * End a transaction
	 *
	 * @param $fname string
	 */",
 "/**
	 * Rollback a transaction.
	 * No-op on non-transactional databases.
	 *
	 * @param $fname string
	 */",
 "/**
	 * Creates a new table with structure copied from existing table
	 * Note that unlike most database abstraction functions, this function does not
	 * automatically append database prefix, because it works at a lower
	 * abstraction level.
	 * The table names passed to this function shall not be quoted (this
	 * function calls addIdentifierQuotes when needed).
	 *
	 * @param $oldName String: name of table whose structure should be copied
	 * @param $newName String: name of table to be created
	 * @param $temporary Boolean: whether the new table should be temporary
	 * @param $fname String: calling function name
	 * @return Boolean: true if operation was successful
	 */",
 "/**
	 * List all tables on the database
	 *
	 * @param $prefix Only show tables with this prefix, e.g. mw_
	 * @param $fname String: calling function name
	 */",
 "/**
	 * Convert a timestamp in one of the formats accepted by wfTimestamp()
	 * to the format used for inserting into timestamp fields in this DBMS.
	 *
	 * The result is unquoted, and needs to be passed through addQuotes()
	 * before it can be included in raw SQL.
	 *
	 * @param $ts string|int
	 *
	 * @return string
	 */",
 "/**
	 * Convert a timestamp in one of the formats accepted by wfTimestamp()
	 * to the format used for inserting into timestamp fields in this DBMS. If
	 * NULL is input, it is passed through, allowing NULL values to be inserted
	 * into timestamp fields.
	 *
	 * The result is unquoted, and needs to be passed through addQuotes()
	 * before it can be included in raw SQL.
	 *
	 * @param $ts string|int
	 *
	 * @return string
	 */",
 "/**
	 * Take the result from a query, and wrap it in a ResultWrapper if
	 * necessary. Boolean values are passed through as is, to indicate success
	 * of write queries or failure.
	 *
	 * Once upon a time, DatabaseBase::query() returned a bare MySQL result
	 * resource, and it was necessary to call this function to convert it to
	 * a wrapper. Nowadays, raw database objects are never exposed to external
	 * callers, so this is unnecessary in external code. For compatibility with
	 * old code, ResultWrapper objects are passed through unaltered.
	 *
	 * @param $result bool|ResultWrapper
	 *
	 * @return bool|ResultWrapper
	 */",
 "/**
	 * Return aggregated value alias
	 *
	 * @param $valuedata
	 * @param $valuename string
	 *
	 * @return string
	 */",
 "/**
	 * Ping the server and try to reconnect if it there is no connection
	 *
	 * @return bool Success or failure
	 */",
 "/**
	 * Get slave lag. Currently supported only by MySQL.
	 *
	 * Note that this function will generate a fatal error on many
	 * installations. Most callers should use LoadBalancer::safeGetLag()
	 * instead.
	 *
	 * @return Database replication lag in seconds
	 */",
 "/**
	 * Return the maximum number of items allowed in a list, or 0 for unlimited.
	 *
	 * @return int
	 */",
 "/**
	 * Some DBMSs have a special format for inserting into blob fields, they
	 * don\'t allow simple quoted strings to be inserted. To insert into such
	 * a field, pass the data through this function before passing it to
	 * DatabaseBase::insert().
	 * @param $b string
	 * @return string
	 */",
 "/**
	 * Some DBMSs return a special placeholder object representing blob fields
	 * in result objects. Pass the object through this function to return the
	 * original string.
	 * @param $b string
	 * @return string
	 */",
 "/**
	 * Override database\'s default connection timeout
	 *
	 * @param $timeout Integer in seconds
	 * @return void
	 * @deprecated since 1.19; use setSessionOptions()
	 */",
 "/**
	 * Override database\'s default behavior. $options include:
	 *     \'connTimeout\' : Set the connection timeout value in seconds.
	 *                     May be useful for very long batch queries such as
	 *                     full-wiki dumps, where a single query reads out over
	 *                     hours or days.
	 *
	 * @param $options Array
	 * @return void
	 */",
 "/**
	 * Read and execute SQL commands from a file.
	 *
	 * Returns true on success, error string or exception on failure (depending
	 * on object\'s error ignore settings).
	 *
	 * @param $filename String: File name to open
	 * @param $lineCallback Callback: Optional function called before reading each line
	 * @param $resultCallback Callback: Optional function called for each MySQL result
	 * @param $fname String: Calling function name or false if name should be
	 *      generated dynamically using $filename
	 * @return bool|string
	 */",
 "/**
	 * Get the full path of a patch file. Originally based on archive()
	 * from updaters.inc. Keep in mind this always returns a patch, as
	 * it fails back to MySQL if no DB-specific patch can be found
	 *
	 * @param $patch String The name of the patch, like patch-something.sql
	 * @return String Full path to patch file
	 */",
 "/**
	 * Set variables to be used in sourceFile/sourceStream, in preference to the
	 * ones in $GLOBALS. If an array is set here, $GLOBALS will not be used at
	 * all. If it\'s set to false, $GLOBALS will be used.
	 *
	 * @param $vars False, or array mapping variable name to value.
	 */",
 "/**
	 * Read and execute commands from an open file handle.
	 *
	 * Returns true on success, error string or exception on failure (depending
	 * on object\'s error ignore settings).
	 *
	 * @param $fp Resource: File handle
	 * @param $lineCallback Callback: Optional function called before reading each line
	 * @param $resultCallback Callback: Optional function called for each MySQL result
	 * @param $fname String: Calling function name
	 * @param $inputCallback Callback: Optional function called for each complete line (ended with ;) sent
	 * @return bool|string
	 */",
 "/**
	 * Called by sourceStream() to check if we\'ve reached a statement end
	 *
	 * @param $sql String SQL assembled so far
	 * @param $newLine String New line about to be added to $sql
	 * @return Bool Whether $newLine contains end of the statement
	 */",
 "/**
	 * Database independent variable replacement. Replaces a set of variables
	 * in an SQL statement with their contents as given by $this->getSchemaVars().
	 *
	 * Supports \'{$var}\' `{$var}` and / *$var* / (without the spaces) style variables.
	 *
	 * - \'{$var}\' should be used for text and is passed through the database\'s
	 *   addQuotes method.
	 * - `{$var}` should be used for identifiers (eg: table and database names),
	 *   it is passed through the database\'s addIdentifierQuotes method which
	 *   can be overridden if the database uses something other than backticks.
	 * - / *$var* / is just encoded, besides traditional table prefix and
	 *   table options its use should be avoided.
	 *
	 * @param $ins String: SQL statement to replace variables in
	 * @return String The new SQL statement with variables replaced
	 */",
 "/**
	 * Replace variables in sourced SQL
	 *
	 * @param $ins string
	 *
	 * @return string
	 */",
 "/**
	 * Get schema variables. If none have been set via setSchemaVars(), then
	 * use some defaults from the current object.
	 *
	 * @return array
	 */",
 "/**
	 * Get schema variables to use if none have been set via setSchemaVars().
	 *
	 * Override this in derived classes to provide variables for tables.sql
	 * and SQL patch files.
	 *
	 * @return array
	 */",
 "/**
	 * Table name callback
	 *
	 * @param $matches array
	 *
	 * @return string
	 */",
 "/**
	 * Index name callback
	 *
	 * @param $matches array
	 *
	 * @return string
	 */",
 "/**
	 * Build a concatenation list to feed into a SQL query
	 * @param $stringList Array: list of raw SQL expressions; caller is responsible for any quoting
	 * @return String
	 */",
 "/**
	 * Acquire a named lock
	 *
	 * Abstracted from Filestore::lock() so child classes can implement for
	 * their own needs.
	 *
	 * @param $lockName String: name of lock to aquire
	 * @param $method String: name of method calling us
	 * @param $timeout Integer: timeout
	 * @return Boolean
	 */",
 "/**
	 * Release a lock.
	 *
	 * @param $lockName String: Name of lock to release
	 * @param $method String: Name of method calling us
	 *
	 * @return Returns 1 if the lock was released, 0 if the lock was not established
	 * by this thread (in which case the lock is not released), and NULL if the named
	 * lock did not exist
	 */",
 "/**
	 * Lock specific tables
	 *
	 * @param $read Array of tables to lock for read access
	 * @param $write Array of tables to lock for write access
	 * @param $method String name of caller
	 * @param $lowPriority bool Whether to indicate writes to be LOW PRIORITY
	 *
	 * @return bool
	 */",
 "/**
	 * Unlock specific tables
	 *
	 * @param $method String the caller
	 *
	 * @return bool
	 */",
 "/**
	 * Delete a table
	 * @param $tableName string
	 * @param $fName string
	 * @return bool|ResultWrapper
	 * @since 1.18
	 */",
 "/**
	 * Get search engine class. All subclasses of this need to implement this
	 * if they wish to use searching.
	 *
	 * @return String
	 */",
 "/**
	 * Find out when \'infinity\' is. Most DBMSes support this. This is a special
	 * keyword for timestamps in PostgreSQL, and works with CHAR(14) as well
	 * because \"i\" sorts after all numbers.
	 *
	 * @return String
	 */",
 "/**
	 * Encode an expiry time
	 *
	 * @param $expiry String: timestamp for expiry, or the \'infinity\' string
	 * @return String
	 */",
 "/**
	 * Allow or deny \"big selects\" for this session only. This is done by setting
	 * the sql_big_selects session variable.
	 *
	 * This is a MySQL-specific feature.
	 *
	 * @param $value Mixed: true for allow, false for deny, or \"default\" to
	 *   restore the initial value
	 */",
 "/**
 * Database abstraction object
 * @ingroup Database
 */",
 "/**
	 * Constructor
	 */",
 "/**
	 * Execute
	 */",
 "/**
	 * Create directory if it does not exist and return pathname with a trailing slash
	 * @param $fspath string
	 * @return null|string
	 */",
 "/**
	 * Generate a one-dimensional array of existing namespaces
	 */",
 "/**
	 * Get the priority of a given namespace
	 *
	 * @param $namespace Integer: the namespace to get the priority for
	 * @return String
	 */",
 "/**
	 * If the namespace isn\'t listed on the priority list return the
	 * default priority for the namespace, varies depending on whether it\'s
	 * a talkpage or not.
	 *
	 * @param $namespace Integer: the namespace to get the priority for
	 * @return String
	 */",
 "/**
	 * Return a database resolution of all the pages in a given namespace
	 *
	 * @param $namespace Integer: limit the query to this namespace
	 * @return Resource
	 */",
 "/**
	 * Main loop
	 */",
 "/**
	 * gzopen() / fopen() wrapper
	 *
	 * @return Resource
	 */",
 "/**
	 * gzwrite() / fwrite() wrapper
	 */",
 "/**
	 * gzclose() / fclose() wrapper
	 */",
 "/**
	 * Get a sitemap filename
	 *
	 * @param $namespace Integer: the namespace
	 * @param $count Integer: the count
	 * @return String
	 */",
 "/**
	 * Return the XML required to open an XML file
	 *
	 * @return string
	 */",
 "/**
	 * Return the XML schema being used
	 *
	 * @return String
	 */",
 "/**
	 * Return the XML required to open a sitemap index file
	 *
	 * @return String
	 */",
 "/**
	 * Return the XML for a single sitemap indexfile entry
	 *
	 * @param $filename String: the filename of the sitemap file
	 * @return String
	 */",
 "/**
	 * Return the XML required to close a sitemap index file
	 *
	 * @return String
	 */",
 "/**
	 * Return the XML required to open a sitemap file
	 *
	 * @return String
	 */",
 "/**
	 * Return the XML for a single sitemap entry
	 *
	 * @param $url String: an RFC 2396 compliant URL
	 * @param $date String: a ISO 8601 date
	 * @param $priority String: a priority indicator, 0.0 - 1.0 inclusive with a 0.1 stepsize
	 * @return String
	 */",
 "/**
	 * Return the XML required to close sitemap file
	 *
	 * @return String
	 */",
 "/**
	 * Populate $this->limit
	 */",
 "/**
	 * Set up the global variables for a consistent environment for each test.
	 * Ideally this should replace the global configuration entirely.
	 */",
 "/**
	 * Get an FS upload directory (only applies to FSFileBackend)
	 *
	 * @return String: the directory
	 */",
 "/**
	 * Create a dummy uploads directory which will contain a couple
	 * of files in order to pass existence tests.
	 *
	 * @return String: the directory
	 */",
 "/**
	 * Restore default values and perform any necessary clean-up
	 * after each test runs.
	 */",
 "/**
	 * Remove the dummy uploads directory
	 */",
 "/**
	 * Delete the specified files, if they exist.
	 * @param $files Array: full paths to files to delete.
	 */",
 "/**
	 * Set the file from whose tests will be run by this instance
	 */",
 "/** @dataProvider parserTestProvider */",
 "/**
	 * Run a fuzz test series
	 * Draw input from a set of test files
	 *
	 * @todo @fixme Needs some work to not eat memory until the world explodes
	 *
	 * @group ParserFuzz
	 */",
 "/**
	 * Get an input dictionary from a set of parser test files
	 */",
 "/**
	 * Get a memory usage breakdown
	 */",
 "/**
	 * Get a Parser object
	 */",
 "/**
	 * Steal a callback function from the primary parser, save it for
	 * application to our scary parser. If the hook is not installed,
	 * abort processing of this file.
	 *
	 * @param $name String
	 * @return Bool true if tag hook is present
	 */",
 "/**
	 * Run the \"tidy\" command on text if the $wgUseTidy
	 * global is true
	 *
	 * @param $text String: the text to tidy
	 * @return String
	 */",
 "/**
	 * Remove last character if it is a newline
	 */",
 "/**
	 * Use a regex to find out the value of an option
	 * @param $key String: name of option val to retrieve
	 * @param $opts Options array to look in
	 * @param $default Mixed: default value returned if not found
	 */",
 "/**
 * Although marked as a stub, can work independently.
 *
 * @group Database
 * @group Parser
 * @group Stub
 */",
 "/**
	 * @param $_ string
	 * @return string
	 */",
 "/** Burmese (Myanmasa)
 *
 * @ingroup Language
 *
 * @author Niklas Laxstr??m, 2008
 */",
 "/**
	 * Wrapper for charset conversions.
	 *
	 * In most languages, this calls through to standard system iconv(), but
	 * for Esperanto we\'re also adding a special pseudo-charset to convert
	 * accented characters to/from the ASCII-friendly \"X\" surrogate coding:
	 *
	 *     cx = ??     cxx = cx
	 *     gx = ??     gxx = gx
	 *     hx = ??     hxx = hx
	 *     jx = ??     jxx = jx
	 *     sx = ??     sxx = sx
	 *     ux = ??     uxx = ux
	 *     xx = x
	 *
	 *   http://en.wikipedia.org/wiki/Esperanto_orthography#X-system
	 *   http://eo.wikipedia.org/wiki/X-sistemo
	 *
	 * X-conversion is applied, in either direction, between \"utf-8\" and \"x\" charsets;
	 * this comes into effect when input is run through $wgRequest->getText() and the
	 * $wgEditEncoding is set to \'x\'.
	 *
	 * In the long run, this should be moved out of here and into the client-side
	 * editor behavior; the original server-side translation system dates to 2002-2003
	 * when many browsers with really bad Unicode support were still in use.
	 *
	 * @param string $in input character set
	 * @param string $out output character set
	 * @param string $string text to be converted
	 * @return string
	 */",
 "/**
	 * @param $matches array
	 * @return string
	 */",
 "/**
	 * @param $matches array
	 * @return string
	 */",
 "/**
	 * @param $s string
	 * @return string
	 */",
 "/** Esperanto (Esperanto)
 *
 * @ingroup Language
 * @author Brion Vibber <brion@pobox.com>
 */",
 "/** Persian (??????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Alnokta
 * @author Americophile
 * @author Armandaneshjoo
 * @author Asoxor
 * @author Baqeri
 * @author Behdarvandyani
 * @author Ebraminio
 * @author Huji
 * @author Ibrahim
 * @author Ladsgroup
 * @author Leyth
 * @author Mardetanha
 * @author Mehdi
 * @author Mehran
 * @author MehranVB
 * @author Meisam
 * @author Meno25
 * @author Mjbmr
 * @author Mormegil
 * @author Omnia
 * @author Pouyana
 * @author Reza1615
 * @author Roozbeh Pournader <roozbeh at gmail.com>
 * @author Sahim
 * @author Wayiran
 * @author Zack90
 * @author ZxxZxxZ
 * @author ???????? ????????????????
 * @author ??????
 */",
 "/**
 * A list of date format preference keys which can be selected in user
 * preferences. New preference keys can be added, provided they are supported
 * by the language class\'s timeanddate(). Only the 5 keys listed below are
 * supported by the wikitext converter (DateFormatter.php).
 *
 * The special key \"default\" is an alias for either dmy or mdy depending on
 * $wgAmericanDates
 */",
 "/**
 * The date format to use for generated dates in the user interface.
 * This may be one of the above date preferences, or the special value
 * \"dmy or mdy\", which uses mdy if $wgAmericanDates is true, and dmy
 * if $wgAmericanDates is false.
 */",
 "/**
 * Associative array mapping old numeric date formats, which may still be
 * stored in user preferences, to the new string formats.
 */",
 "/**
 * These are formats for dates generated by MediaWiki (as opposed to the wikitext
 * DateFormatter). Documentation for the format string can be found in
 * Language.php, search for sprintfDate.
 *
 * This array is automatically inherited by all subclasses. Individual keys can be
 * overridden.
 */",
 "/**
	 * @expectedException MWException
	 */",
 "/**
	 * Lock the appropriate tables for the script
	 * @param $db DatabaseBase object
	 * @param $extraTable String The name of any extra tables to lock (eg: text)
	 */",
 "/**
	 * Check for orphan revisions
	 * @param $fix bool Whether to fix broken revisions when found
	 */",
 "/**
	 * @param $fix bool
	 * @todo DON\'T USE THIS YET! It will remove entries which have children,
	 *       but which aren\'t properly attached (eg if page_latest is bogus
	 *       but valid revisions do exist)
	 */",
 "/**
	 * Check for pages where page_latest is wrong
	 * @param $fix bool Whether to fix broken entries
	 */",
 "/**
	 * Constructor
	 * @param $mainModule ApiMain object
	 * @param $moduleName string Name of this module
	 * @param $modulePrefix string Prefix to use for parameter names
	 */",
 "/**
	 * Evaluates the parameters, performs the requested query, and sets up
	 * the result. Concrete implementations of ApiBase must override this
	 * method to provide whatever functionality their module offers.
	 * Implementations must not produce any output on their own and are not
	 * expected to handle any errors.
	 *
	 * The execute() method will be invoked directly by ApiMain immediately
	 * before the result of the module is output. Aside from the
	 * constructor, implementations should assume that no other methods
	 * will be called externally on the module before the result is
	 * processed.
	 *
	 * The result data should be stored in the ApiResult object available
	 * through getResult().
	 */",
 "/**
	 * Returns a string that identifies the version of the extending class.
	 * Typically includes the class name, the svn revision, timestamp, and
	 * last author. Usually done with SVN\'s Id keyword
	 * @return string
	 */",
 "/**
	 * Get the name of the module being executed by this instance
	 * @return string
	 */",
 "/**
	 * Get parameter prefix (usually two letters or an empty string).
	 * @return string
	 */",
 "/**
	 * Get the name of the module as shown in the profiler log
	 *
	 * @param $db DatabaseBase
	 *
	 * @return string
	 */",
 "/**
	 * Get the main module
	 * @return ApiMain object
	 */",
 "/**
	 * Returns true if this module is the main module ($this === $this->mMainModule),
	 * false otherwise.
	 * @return bool
	 */",
 "/**
	 * Get the result object
	 * @return ApiResult
	 */",
 "/**
	 * Get the result data array (read-only)
	 * @return array
	 */",
 "/**
	 * Create a new RequestContext object to use e.g. for calls to other parts
	 * the software.
	 * The object will have the WebRequest and the User object set to the ones
	 * used in this instance.
	 *
	 * @deprecated since 1.19 use getContext to get the current context
	 * @return DerivativeContext
	 */",
 "/**
	 * Set warning section for this module. Users should monitor this
	 * section to notice any changes in API. Multiple calls to this
	 * function will result in the warning messages being separated by
	 * newlines
	 * @param $warning string Warning message
	 */",
 "/**
	 * If the module may only be used with a certain format module,
	 * it should override this method to return an instance of that formatter.
	 * A value of null means the default format will be used.
	 * @return mixed instance of a derived class of ApiFormatBase, or null
	 */",
 "/**
	 * Generates help message for this module, or false if there is no description
	 * @return mixed string or false
	 */",
 "/**
	 * @param $item string
	 * @return string
	 */",
 "/**
	 * @param $prefix string Text to split output items
	 * @param $title string What is being output
	 * @param $input string|array
	 * @return string
	 */",
 "/**
	 * Generates the parameter descriptions for this module, to be displayed in the
	 * module\'s help.
	 * @return string or false
	 */",
 "/**
	 * Callback for preg_replace_callback() call in makeHelpMsg().
	 * Replaces a source file name with a link to ViewVC
	 *
	 * @param $matches array
	 * @return string
	 */",
 "/**
	 * Returns the description string for this module
	 * @return mixed string or array of strings
	 */",
 "/**
	 * Returns usage examples for this module. Return false if no examples are available.
	 * @return false|string|array
	 */",
 "/**
	 * Returns an array of allowed parameters (parameter name) => (default
	 * value) or (parameter name) => (array with PARAM_* constants as keys)
	 * Don\'t call this function directly: use getFinalParams() to allow
	 * hooks to modify parameters as needed.
	 * @return array or false
	 */",
 "/**
	 * Returns an array of parameter descriptions.
	 * Don\'t call this functon directly: use getFinalParamDescription() to
	 * allow hooks to modify descriptions as needed.
	 * @return array or false
	 */",
 "/**
	 * Get final list of parameters, after hooks have had a chance to
	 * tweak it as needed.
	 *
	 * @return array or false
	 */",
 "/**
	 * Get final parameter descriptions, after hooks have had a chance to tweak it as
	 * needed.
	 *
	 * @return array
	 */",
 "/**
	 * Get final module description, after hooks have had a chance to tweak it as
	 * needed.
	 *
	 * @return array
	 */",
 "/**
	 * This method mangles parameter name based on the prefix supplied to the constructor.
	 * Override this method to change parameter name during runtime
	 * @param $paramName string Parameter name
	 * @return string Prefixed parameter name
	 */",
 "/**
	 * Using getAllowedParams(), this function makes an array of the values
	 * provided by the user, with key being the name of the variable, and
	 * value - validated value from user or default. limits will not be
	 * parsed if $parseLimit is set to false; use this when the max
	 * limit is not definitive yet, e.g. when getting revisions.
	 * @param $parseLimit Boolean: true by default
	 * @return array
	 */",
 "/**
	 * Get a value for the given parameter
	 * @param $paramName string Parameter name
	 * @param $parseLimit bool see extractRequestParams()
	 * @return mixed Parameter value
	 */",
 "/**
	 * Die if none or more than one of a certain set of parameters is set and not false.
	 * @param $params array of parameter names
	 */",
 "/**
	 * Generates the possible errors requireOnlyOneParameter() can die with
	 *
	 * @param $params array
	 * @return array
	 */",
 "/**
	 * Die if more than one of a certain set of parameters is set and not false.
	 *
	 * @param $params array
	 */",
 "/**
	 * Generates the possible error requireMaxOneParameter() can die with
	 *
	 * @param $params array
	 * @return array
	 */",
 "/**
	 * Callback function used in requireOnlyOneParameter to check whether reequired parameters are set
	 *
	 * @param  $x object Parameter to check is not null/false
	 * @return bool
	 */",
 "/**
	 * @deprecated since 1.17 use MWNamespace::getValidNamespaces()
	 *
	 * @return array
	 */",
 "/**
	 * Return true if we\'re to watch the page, false if not, null if no change.
	 * @param $watchlist String Valid values: \'watch\', \'unwatch\', \'preferences\', \'nochange\'
	 * @param $titleObj Title the page under consideration
	 * @param $userOption String The user option to consider when $watchlist=preferences.
	 * 	If not set will magically default to either watchdefault or watchcreations
	 * @return bool
	 */",
 "/**
	 * Set a watch (or unwatch) based the based on a watchlist parameter.
	 * @param $watch String Valid values: \'watch\', \'unwatch\', \'preferences\', \'nochange\'
	 * @param $titleObj Title the article\'s title to change
	 * @param $userOption String The user option to consider when $watch=preferences
	 */",
 "/**
	 * Using the settings determine the value for the given parameter
	 *
	 * @param $paramName String: parameter name
	 * @param $paramSettings Mixed: default value or an array of settings
	 *  using PARAM_* constants.
	 * @param $parseLimit Boolean: parse limit?
	 * @return mixed Parameter value
	 */",
 "/**
	 * Return an array of values that were given in a \'a|b|c\' notation,
	 * after it optionally validates them against the list allowed values.
	 *
	 * @param $valueName string The name of the parameter (for error
	 *  reporting)
	 * @param $value mixed The value being parsed
	 * @param $allowMultiple bool Can $value contain more than one value
	 *  separated by \'|\'?
	 * @param $allowedValues mixed An array of values to check against. If
	 *  null, all values are accepted.
	 * @return mixed (allowMultiple ? an_array_of_values : a_single_value)
	 */",
 "/**
	 * Validate the value against the minimum and user/bot maximum limits.
	 * Prints usage info on failure.
	 * @param $paramName string Parameter name
	 * @param $value int Parameter value
	 * @param $min int|null Minimum value
	 * @param $max int|null Maximum value for users
	 * @param $botMax int Maximum value for sysops/bots
	 * @param $enforceLimits Boolean Whether to enforce (die) if value is outside limits
	 */",
 "/**
	 * @param $value string
	 * @param $paramName string
	 * @return string
	 */",
 "/**
	 * Adds a warning to the output, else dies
	 *
	 * @param  $msg String Message to show as a warning, or error message if dying
	 * @param  $enforceLimits Boolean Whether this is an enforce (die)
	 */",
 "/**
	 * Truncate an array to a certain length.
	 * @param $arr array Array to truncate
	 * @param $limit int Maximum length
	 * @return bool True if the array was truncated, false otherwise
	 */",
 "/**
	 * Throw a UsageException, which will (if uncaught) call the main module\'s
	 * error handler and die with an error message.
	 *
	 * @param $description string One-line human-readable description of the
	 *   error condition, e.g., \"The API requires a valid action parameter\"
	 * @param $errorCode string Brief, arbitrary, stable string to allow easy
	 *   automated identification of the error, e.g., \'unknown_action\'
	 * @param $httpRespCode int HTTP response code
	 * @param $extradata array Data to add to the <error> element; array in ApiResult format
	 */",
 "/**
	 * Helper function for readonly errors
	 */",
 "/**
	 * Output the error message related to a certain array
	 * @param $error (array|string) Element of a getUserPermissionsErrors()-style array
	 */",
 "/**
	 * Return the error message related to a certain array
	 * @param $error array Element of a getUserPermissionsErrors()-style array
	 * @return array(\'code\' => code, \'info\' => info)
	 */",
 "/**
	 * Internal code errors should be reported with this method
	 * @param $method string Method or function name
	 * @param $message string Error message
	 */",
 "/**
	 * Indicates if this module needs maxlag to be checked
	 * @return bool
	 */",
 "/**
	 * Indicates whether this module requires read rights
	 * @return bool
	 */",
 "/**
	 * Indicates whether this module requires write mode
	 * @return bool
	 */",
 "/**
	 * Indicates whether this module must be called with a POST request
	 * @return bool
	 */",
 "/**
	 * Returns whether this module requires a Token to execute
	 * @return bool
	 */",
 "/**
	 * Returns the token salt if there is one, \'\' if the module doesn\'t require a salt, else false if the module doesn\'t need a token
	 * @return bool|string
	 */",
 "/**
	 * Gets the user for whom to get the watchlist
	 *
	 * @param $params array
	 * @return User
	 */",
 "/**
	 * @return false|string|array Returns a false if the module has no help url, else returns a (array of) string
	 */",
 "/**
	 * Returns a list of all possible errors returned by the module
	 * @return array in the format of array( key, param1, param2, ... ) or array( \'code\' => ..., \'info\' => ... )
	 */",
 "/**
	 * Parses a list of errors into a standardised format
	 * @param $errors array List of errors. Items can be in the for array( key, param1, param2, ... ) or array( \'code\' => ..., \'info\' => ... )
	 * @return array Parsed list of errors with items in the form array( \'code\' => ..., \'info\' => ... )
	 */",
 "/**
	 * Start module profiling
	 */",
 "/**
	 * End module profiling
	 */",
 "/**
	 * When modules crash, sometimes it is needed to do a profileOut() regardless
	 * of the profiling state the module was in. This method does such cleanup.
	 */",
 "/**
	 * Total time the module was executed
	 * @return float
	 */",
 "/**
	 * Start module profiling
	 */",
 "/**
	 * End database profiling
	 */",
 "/**
	 * Total time the module used the database
	 * @return float
	 */",
 "/**
	 * @return DatabaseBase
	 */",
 "/**
	 * Debugging function that prints a value and an optional backtrace
	 * @param $value mixed Value to print
	 * @param $name string Description of the printed value
	 * @param $backtrace bool If true, print a backtrace
	 */",
 "/**
	 * Returns a string that identifies the version of this class.
	 * @return string
	 */",
 "/**
 * This abstract class implements many basic API functions, and is the base of
 * all API classes.
 * The class functions are divided into several areas of functionality:
 *
 * Module parameters: Derived classes can define getAllowedParams() to specify
 * 	which parameters to expect, how to parse and validate them.
 *
 * Profiling: various methods to allow keeping tabs on various tasks and their
 * 	time costs
 *
 * Self-documentation: code to allow the API to document its own state
 *
 * @ingroup API
 */",
 "/**
	 * Returns minified JavaScript code.
	 *
	 * NOTE: $maxLineLength isn\'t a strict maximum. Longer lines will be produced when
	 *       literals (e.g. quoted strings) longer than $maxLineLength are encountered
	 *       or when required to guard against semicolon insertion.
	 *
	 * @param $s String JavaScript code to minify
	 * @param $statementsOnOwnLine Bool Whether to put each statement on its own line
	 * @param $maxLineLength Int Maximum length of a single line, or -1 for no maximum.
	 * @return String Minified code
	 */",
 "/**
 * JavaScript Minifier
 *
 * This class is meant to safely minify javascript code, while leaving syntactically correct
 * programs intact. Other libraries, such as JSMin require a certain coding style to work
 * correctly. OTOH, libraries like jsminplus, that do parse the code correctly are rather
 * slow, because they construct a complete parse tree before outputting the code minified.
 * So this class is meant to allow arbitrary (but syntactically correct) input, while being
 * fast enough to be used for on-the-fly minifying.
 *
 * Author: Paul Copperman <paul.copperman@gmail.com>
 * License: choose any of Apache, MIT, GPL, LGPL
 */",
 "/** Venda (Tshivenda)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Johannes Rohr (on ve.wikipedia.org)
 * @author Node ue
 */",
 "/**
	 * Execute page -- can output a file directly or show a listing of them.
	 *
	 * @param $subPage String: subpage, e.g. in http://example.com/wiki/Special:UploadStash/foo.jpg, the \"foo.jpg\" part
	 * @return Boolean: success
	 */",
 "/**
	 * If file available in stash, cats it out to the client as a simple HTTP response.
	 * n.b. Most sanity checking done in UploadStashLocalFile, so this is straightforward.
	 *
	 * @param $key String: the key of a particular requested file
	 */",
 "/**
	 * Parse the key passed to the SpecialPage. Returns an array containing
	 * the associated file object, the type (\'file\' or \'thumb\') and if
	 * application the transform parameters
	 *
	 * @param string $key
	 * @return array
	 */",
 "/**
	 * Get a thumbnail for file, either generated locally or remotely, and stream it out
	 *
	 * @param $file
	 * @param $params array
	 *
	 * @return boolean success
	 */",
 "/**
	 * Scale a file (probably with a locally installed imagemagick, or similar) and output it to STDOUT.
	 * @param $file: File object
	 * @param $params: scaling parameters ( e.g. array( width => \'50\' ) );
	 * @param $flags: scaling flags ( see File:: constants )
	 * @throws MWException
	 * @return boolean success
	 */",
 "/**
	 * Scale a file with a remote \"scaler\", as exists on the Wikimedia Foundation cluster, and output it to STDOUT.
	 * Note: unlike the usual thumbnail process, the web client never sees the cluster URL; we do the whole HTTP transaction to the scaler ourselves
	 *  and cat the results out.
	 * Note: We rely on NFS to have propagated the file contents to the scaler. However, we do not rely on the thumbnail being created in NFS and then
	 *   propagated back to our filesystem. Instead we take the results of the HTTP request instead.
	 * Note: no caching is being done here, although we are instructing the client to cache it forever.
	 * @param $file: File object
	 * @param $params: scaling parameters ( e.g. array( width => \'50\' ) );
	 * @param $flags: scaling flags ( see File:: constants )
	 * @throws MWException
	 * @return boolean success
	 */",
 "/**
	 * Output HTTP response for file
	 * Side effect: writes HTTP response to STDOUT.
	 *
	 * @param $file File object with a local path (e.g. UnregisteredLocalFile, LocalFile. Oddly these don\'t share an ancestor!)
	 */",
 "/**
	 * Output HTTP response of raw content
	 * Side effect: writes HTTP response to STDOUT.
	 * @param String $content: content
	 * @param String $mimeType: mime type
	 */",
 "/**
	 * Output headers for streaming
	 * XXX unsure about encoding as binary; if we received from HTTP perhaps we should use that encoding, concatted with semicolon to mimeType as it usually is.
	 * Side effect: preps PHP to write headers to STDOUT.
	 * @param String $contentType : string suitable for content-type header
	 * @param String $size: length in bytes
	 */",
 "/**
	 * Static callback for the HTMLForm in showUploads, to process
	 * Note the stash has to be recreated since this is being called in a static context.
	 * This works, because there really is only one stash per logged-in user, despite appearances.
	 *
	 * @return Status
	 */",
 "/**
	 * Default action when we don\'t have a subpage -- just show links to the uploads we have,
	 * Also show a button to clear stashed files
	 * @param Status : $status - the result of processRequest
	 */",
 "/**
 * Implements Special:UploadStash
 *
 * Web access for files temporarily stored by UploadStash.
 *
 * For example -- files that were uploaded with the UploadWizard extension are stored temporarily
 * before committing them to the db. But we want to see their thumbnails and get other information
 * about them.
 *
 * Since this is based on the user\'s session, in effect this creates a private temporary file area.
 * However, the URLs for the files cannot be shared.
 *
 * @file
 * @ingroup SpecialPage
 * @ingroup Upload
 */",
 "/** Inuktitut (??????????????????/inuktitut)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 * @comment Macro language; kept for backward compatibility
 *
 */",
 "/**
	* This takes the results of iptcparse() and puts it into a
	* form that can be handled by mediawiki. Generally called from
	* BitmapMetadataHandler::doApp13.
	*
	* @see http://www.iptc.org/std/IIM/4.1/specification/IIMV4.1.pdf
	*
	* @param $rawData String app13 block from jpeg containing iptc/iim data
	* @return Array iptc metadata array
	*/",
 "/**
	* Convert an iptc date and time tags into the exif format
	*
	* @todo Potentially this should also capture the timezone offset.
	* @param Array $date The date tag
	* @param Array $time The time tag
	* @param $c
	* @return String Date in exif format.
	*/",
 "/**
	* Helper function to convert charset for iptc values.
	* @param $data Mixed String or Array: The iptc string
	* @param $charset String: The charset
	 *
	 * @return string
	*/",
 "/**
	* Helper function of a helper function to convert charset for iptc values.
	* @param $data Mixed String or Array: The iptc string
	* @param $charset String: The charset
	*
	* @return string
	*/",
 "/**
	* take the value of 1:90 tag and returns a charset
	* @param String $tag 1:90 tag.
	* @return string charset name or \"?\"
	* Warning, this function does not (and is not intended to) detect
	* all iso 2022 escape codes. In practise, the code for utf-8 is the
	* only code that seems to have wide use. It does detect that code.
	*/",
 "/**
*Class for some IPTC functions.

*/",
 "/**
	 * Creates an instance of this class
	 * @param $db DatabasePostgres: database object
	 */",
 "/**
	 * Perform a full text search query and return a result set.
	 *
	 * @param $term String: raw search term
	 * @return SqlSearchResultSet
	 */",
 "/**
	 * Perform a title-only search query and return a result set.
	 *
	 * @param $term String: raw search term
	 * @return SqlSearchResultSet
	 */",
 "/**
	 * Return a partial WHERE clause to exclude redirects, if so set
	 * @return String
	 */",
 "/**
	 * Return a partial WHERE clause to limit the search to the given namespaces
	 * @return String
	 */",
 "/**
	 * Return a LIMIT clause to limit results on the query.
	 *
	 * @param string
	 *
	 * @return String
	 */",
 "/**
	 * Does not do anything for generic search engine
	 * subclasses may define this though
	 *
	 * @return String
	 */",
 "/**
	 * Construct the full SQL query to do the search.
	 * The guts shoulds be constructed in queryMain()
	 * @param $filteredTerm String
	 * @param $fulltext Boolean
	 */",
 "/**
	 * Picks which field to index on, depending on what type of query.
	 * @param $fulltext Boolean
	 * @return String
	 */",
 "/**
	 * Get the base part of the search query.
	 *
	 * @param $filteredTerm String
	 * @param $fulltext Boolean
	 * @return String
	 */",
 "/**
	 * Parse a user input search string, and return an SQL fragment to be used
	 * as part of a WHERE clause
	 */",
 "/**
	 * Create or update the search index record for the given page.
	 * Title and text should be pre-processed.
	 *
	 * @param $id Integer
	 * @param $title String
	 * @param $text String
	 */",
 "/**
	 * Update a search index record\'s title only.
	 * Title should be pre-processed.
	 *
	 * @param $id Integer
	 * @param $title String
	 */",
 "/**
 * Search engine hook base class for Oracle (ConText).
 * @ingroup Search
 */",
 "/** Add content to the response */",
 "/** Output text */",
 "/** Construct the header and output it */",
 "/**
	 * checkLastModified tells the client to use the client-cached response if
	 * possible. If sucessful, the AjaxResponse is disabled so that
	 * any future call to AjaxResponse::printText() have no effect. The method
	 * returns true iff the response code was set to 304 Not Modified.
	 */",
 "/**
	 * @param $mckey
	 * @param $touched
	 * @return bool
	 */",
 "/**
	 * @param $mckey
	 * @param $expiry int
	 * @return bool
	 */",
 "/**
 * Handle responses for Ajax requests (send headers, print
 * content, that sort of thing)
 *
 * @ingroup Ajax
 */",
 "/** Akan (Akan)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Kasahorow
 * @author Natsubee
 * @author Paa.kwesi
 */",
 "/** @dataProvider providerPlural */",
 "/** Tests for MediaWiki languages/classes/LanguageHr.php */",
 "/**
	 * Reset the parser so it isn\'t contaminated by the results of previous parses
	 */",
 "/**
	 * Evaluate a convert expression
	 * @param $args Array of the parameters passed to the original tag function
	 * @return String
	 * @throws ConvertError
	 */",
 "/**
	 * Find the unit at the end of the string and load $this->sourceUnit with an appropriate
	 * ConvertUnit, or throw an exception if the unit is unrecognised.
	 * @param  $string
	 */",
 "/**
	 * Identify the values to be converted, and convert them
	 * @param  $string String
	 * @return String
	 */",
 "/**
	 * Express a value in the $sourceUnit in terms of the $targetUnit, preserving
	 * an appropriate degree of accuracy.
	 * @param  $value String
	 * @return String
	 */",
 "/**
	 * Constructor
	 * @param  $var ConvertDimension|Int a dimension constant or existing unit
	 * @param  $var2 ConvertDimension|Int optionally another dimension constant for a compound unit $var/$var2
	 */",
 "/**
	 * Convert to string.  Magic in PHP 5.1 and above.
	 * @return String
	 */",
 "/**
	 * Get the name, or names, of the dimension
	 * @param $expandCompound Bool Whether to return a string instead of an array of strings in
	 *     case of a compound unit
	 * @return String|Array of String
	 */",
 "/**
	 * Get the localised name of the dimension.  Output is unescaped
	 * @return String
	 */",
 "/**
 * A dimension
 */",
 "/**
	 * Constructor
	 * @param  $rawUnit String
	 */",
 "/**
	 * Parse a raw unit string, and populate member variables
	 * @param  $rawUnit String
	 */",
 "/**
	 * Get the mathematical factor which will convert a measurement in this unit into a
	 * measurement in the SI base unit for the dimension
	 * @return double
	 */",
 "/**
	 * Get the conversion factor associated with the prefix(es) in the unit
	 * @return double
	 */",
 "/**
	 * Get a regular expression which will match keywords for this unit
	 * @return String
	 */",
 "/**
	 * Get the text of the unit
	 * @param $string String Original text, with the number converted
	 * @param $value String number for PLURAL support
	 * @param $link Bool
	 * @param $abbreviate Bool
	 * @param $language Language
	 * @return String
	 */",
 "/**
	 * Retrieve the unit text from actual messages
	 * @param  $dimension String
	 * @param  $unit String
	 * @param  $prefix String
	 * @param  $string String
	 * @param  $number String the actual value (for {{PLURAL}} etc)
	 * @param  $link Bool
	 * @param  $abbreviate Bool
	 * @param  $language Language|Bool|null
	 * @return String
	 */",
 "/**
	 * Get the default (usually SI) unit associated with this particular dimension
	 * @return ConvertUnit
	 */",
 "/**
	 * Constructor
	 */",
 "/**
	 * Execute
	 * @param $par Parameter passed to the page
	 */",
 "/**
	 * Returns html
	 *
	 * @return string
	 */",
 "/**
	 * Count the number of items on a user\'s watchlist
	 *
	 * @return Integer
	 */",
 "/**
 * Implements Special:Watchlist
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @file
 * @ingroup SpecialPage Watchlist
 */",
 "/**
 * A query module to list all langlinks (links to correspanding foreign language pages).
 *
 * @ingroup API
 */",
 "/** Belarusian in Tara??kievica orthography (???????????????????? ??????????????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 * @comment dummy language file. Falls back to \'be-tarask\'. Backward compat.
 */",
 "/**
	 * @param $level int     Recursion level
	 * @param $target Title   Target title
	 * @param $limit int     Number of entries to display
	 * @param $from Title   Display from this article ID
	 * @param $back Title   Display from this article ID at backwards scrolling
	 */",
 "/**
	 * Create filter panel
	 *
	 * @return string HTML fieldset and filter panel with the show/hide links
	 */",
 "/**
 * Implements Special:Whatlinkshere
 *
 * @ingroup SpecialPage
 */",
 "/**
	 * Returns true if uploads are enabled.
	 * Can be override by subclasses.
	 */",
 "/**
	 * Returns true if the user can use this upload module or else a string
	 * identifying the missing permission.
	 * Can be overriden by subclasses.
	 *
	 * @param $user User
	 */",
 "/**
	 * Create a form of UploadBase depending on wpSourceType and initializes it
	 *
	 * @param $request WebRequest
	 * @param $type
	 */",
 "/**
	 * Check whether a request if valid for this handler
	 */",
 "/**
	 * Returns the upload type. Should be overridden by child classes
	 *
	 * @since 1.18
	 * @return string
	 */",
 "/**
	 * Initialize the path information
	 * @param $name string the desired destination name
	 * @param $tempPath string the temporary path
	 * @param $fileSize int the file size
	 * @param $removeTempFile bool (false) remove the temporary file?
	 * @return null
	 */",
 "/**
	 * Initialize from a WebRequest. Override this in a subclass.
	 */",
 "/**
	 * Fetch the file. Usually a no-op
	 */",
 "/**
	 * Return true if the file is empty
	 * @return bool
	 */",
 "/**
	 * Return the file size
	 * @return integer
	 */",
 "/**
	 * @param $srcPath String: the source path
	 * @return the real path if it was a virtual URL
	 */",
 "/**
		 * Honor $wgMaxUploadSize
		 */",
 "/**
		 * Look at the contents of the file; if we can recognize the
		 * type but it\'s corrupt or data of the wrong type, we should
		 * probably not accept it.
		 */",
 "/**
		 * Make sure this file can be created
		 */",
 "/**
	 * Verify whether the upload is sane.
	 * @return mixed self::OK or else an array with error information
	 */",
 "/**
	 * Verify that the name is valid and, if necessary, that we can overwrite
	 *
	 * @return mixed true if valid, otherwise and array with \'status\'
	 * and other keys
	 **/",
 "/**
	 * Verify the mime type
	 *
	 * @param $mime string representing the mime
	 * @return mixed true if the file is verified, an array otherwise
	 */",
 "/**
	 * Verifies that it\'s ok to include the uploaded file
	 *
	 * @return mixed true of the file is verified, array otherwise.
	 */",
 "/**
	 * Callback for ZipDirectoryReader to detect Java class files.
	 */",
 "/**
	 * Alias for verifyTitlePermissions. The function was originally \'verifyPermissions\'
	 * but that suggests it\'s checking the user, when it\'s really checking the title + user combination.
	 * @param $user User object to verify the permissions against
	 * @return mixed An array as returned by getUserPermissionsErrors or true
	 *               in case the user has proper permissions.
	 */",
 "/**
		 * If the image is protected, non-sysop users won\'t be able
		 * to modify it by uploading a new revision.
		 */",
 "/**
	 * Check whether the user can edit, upload and create the image. This
	 * checks only against the current title; if it returns errors, it may
	 * very well be that another title will not give errors. Therefore
	 * isAllowed() should be called as well for generic is-user-blocked or
	 * can-user-upload checking.
	 *
	 * @param $user User object to verify the permissions against
	 * @return mixed An array as returned by getUserPermissionsErrors or true
	 *               in case the user has proper permissions.
	 */",
 "/**
		 * Check whether the resulting filename is different from the desired one,
		 * but ignore things like ucfirst() and spaces/underscore things
		 */",
 "/**
	 * Check for non fatal problems with the file
	 *
	 * @return Array of warnings
	 */",
 "/**
	 * Really perform the upload. Stores the file in the local repo, watches
	 * if necessary and runs the UploadComplete hook.
	 *
	 * @param $user User
	 *
	 * @return Status indicating the whether the upload succeeded.
	 */",
 "/**
		 * Chop off any directories in the given filename. Then
		 * filter out illegal characters, and try to make a legible name
		 * out of it. We\'ll strip some silently that Title would die on.
		 */",
 "/**
	 * Returns the title of the file to be uploaded. Sets mTitleError in case
	 * the name was illegal.
	 *
	 * @return Title The title of the file or null in case the name was illegal
	 */",
 "/**
	 * Return the local file and initializes if necessary.
	 *
	 * @return LocalFile
	 */",
 "/**
	 * NOTE: Probably should be deprecated in favor of UploadStash, but this is sometimes
	 * called outside that context.
	 *
	 * Stash a file in a temporary directory for later processing
	 * after the user has confirmed it.
	 *
	 * If the user doesn\'t explicitly cancel or accept, these files
	 * can accumulate in the temp directory.
	 *
	 * @param $saveName String: the destination filename
	 * @param $tempSrc String: the source temporary file to save
	 * @return String: full path the stashed file, or false on failure
	 */",
 "/**
	 * If the user does not supply all necessary information in the first upload form submission (either by accident or
	 * by design) then we may want to stash the file temporarily, get more information, and publish the file later.
	 *
	 * This method will stash a file in a temporary directory for later processing, and save the necessary descriptive info
	 * into the database.
	 * This method returns the file object, which also has a \'fileKey\' property which can be passed through a form or
	 * API request to find this stashed file again.
	 *
	 * @return UploadStashFile stashed file
	 */",
 "/**
	 * Stash a file in a temporary directory, returning a key which can be used to find the file again. See stashFile().
	 *
	 * @return String: file key
	 */",
 "/**
	 * alias for stashFileGetKey, for backwards compatibility
	 *
	 * @return String: file key
	 */",
 "/**
	 * If we\'ve modified the upload file we need to manually remove it
	 * on exit to clean up.
	 */",
 "/**
	 * Split a file into a base name and all dot-delimited \'extensions\'
	 * on the end. Some web server configurations will fall back to
	 * earlier pseudo-\'extensions\' to determine type and execute
	 * scripts, so the blacklist needs to check them all.
	 *
	 * @return array
	 */",
 "/**
	 * Perform case-insensitive match against a list of file extensions.
	 * Returns true if the extension is in the list.
	 *
	 * @param $ext String
	 * @param $list Array
	 * @return Boolean
	 */",
 "/**
	 * Perform case-insensitive match against a list of file extensions.
	 * Returns an array of matching extensions.
	 *
	 * @param $ext Array
	 * @param $list Array
	 * @return Boolean
	 */",
 "/**
	 * Checks if the mime type of the uploaded file matches the file extension.
	 *
	 * @param $mime String: the mime type of the uploaded file
	 * @param $extension String: the filename extension that the file is to be served with
	 * @return Boolean
	 */",
 "/**
		 * Internet Explorer for Windows performs some really stupid file type
		 * autodetection which can cause it to interpret valid image files as HTML
		 * and potentially execute JavaScript, creating a cross-site scripting
		 * attack vectors.
		 *
		 * Apple\'s Safari browser also performs some unsafe file type autodetection
		 * which can cause legitimate files to be interpreted as HTML if the
		 * web server is not correctly configured to send the right content-type
		 * (or if you\'re really uploading plain text and octet streams!)
		 *
		 * Returns true if IE is likely to mistake the given file for HTML.
		 * Also returns true if Safari would mistake the given file for HTML
		 * when served with a generic content-type.
		 */",
 "/**
	 * Heuristic for detecting files that *could* contain JavaScript instructions or
	 * things that may look like HTML to a browser and are thus
	 * potentially harmful. The present implementation will produce false
	 * positives in some situations.
	 *
	 * @param $file String: pathname to the temporary upload file
	 * @param $mime String: the mime type of the file
	 * @param $extension String: the extension of the file
	 * @return Boolean: true if the file contains something looking like embedded scripts
	 */",
 "/**
	 * @todo Replace this with a whitelist filter!
	 */",
 "/**
	 * Generic wrapper function for a virus scanner program.
	 * This relies on the $wgAntivirus and $wgAntivirusSetup variables.
	 * $wgAntivirusRequired may be used to deny upload if the scan fails.
	 *
	 * @param $file String: pathname to the temporary upload file
	 * @return mixed false if not virus is found, NULL if the scan fails or is disabled,
	 *         or a string containing feedback from the virus scanner if a virus was found.
	 *         If textual feedback is missing but a virus was found, this function returns true.
	 */",
 "/**
	 * Check if there\'s an overwrite conflict and, if so, if restrictions
	 * forbid this user from performing the upload.
	 *
	 * @param $user User
	 *
	 * @return mixed true on success, array on failure
	 */",
 "/**
	 * Check if a user is the last uploader
	 *
	 * @param $user User object
	 * @param $img String: image name
	 * @return Boolean
	 */",
 "/**
	 * Helper function that does various existence checks for a file.
	 * The following checks are performed:
	 * - The file exists
	 * - Article with the same name as the file exists
	 * - File exists with normalized extension
	 * - The file looks like a thumbnail and the original exists
	 *
	 * @param $file File The File object to check
	 * @return mixed False if the file does not exists, else an array
	 */",
 "/**
	 * Helper function that checks whether the filename looks like a thumbnail
	 */",
 "/**
	 * Get a list of blacklisted filename prefixes from [[MediaWiki:Filename-prefix-blacklist]]
	 *
	 * @return array list of prefixes
	 */",
 "/**
	 * Gets image info about the file just uploaded.
	 *
	 * Also has the effect of setting metadata to be an \'indexed tag name\' in returned API result if
	 * \'metadata\' was requested. Oddly, we have to pass the \"result\" object down just so it can do that
	 * with the appropriate format, presumably.
	 *
	 * @param $result ApiResult:
	 * @return Array: image info
	 */",
 "/**
 * @ingroup Upload
 *
 * UploadBase and subclasses are the backend of MediaWiki\'s file uploads.
 * The frontends are formed by ApiUpload and SpecialUpload.
 *
 * See also includes/docs/upload.txt
 *
 * @author Brion Vibber
 * @author Bryan Tong Minh
 * @author Michael Dale
 */",
 "/** Interlingue (Interlingue)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Jmb
 * @author Kaganer
 * @author Malafaya
 * @author Reedy
 * @author Remember the dot
 * @author Renan
 * @author Valodnieks
 * @author ???????? ????????????????
 */",
 "/**
 * @group API
 * @group Database
 */",
 "/**
 * An action that just pass the request to Special:RevisionDelete
 *
 * Copyright ?? 2011 Alexandre Emsenhuber
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA
 *
 * @file
 * @ingroup Actions
 * @author Alexandre Emsenhuber
 */",
 "/** Crimean Turkish (Cyrillic script) (??????????????????????????????? (????????????)???)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author AlefZet
 * @author Alessandro
 * @author Don Alessandro
 * @author Urhixidur
 */",
 "/**
	 * @dataProvider providerDate
	 */",
 "/**
	 * @param $string string
	 * @return string
	 */",
 "/**
	 * @param $string string
	 * @return mixed|string
	 */",
 "/**
 * Turkish (T??rk??e)
 *
 * Turkish has two different i, one with a dot and another without a dot. They
 * are totally different letters in this language, so we have to override the
 * ucfirst and lcfirst methods.
 * See http://en.wikipedia.org/wiki/Dotted_and_dotless_I
 * and @bug 28040
 * @ingroup Language
 */",
 "/**
 * Selenium server manager
 *
 * @file
 * @ingroup Testing
 * Copyright (C) 2010 Nadeesha Weerasinghe <nadeesha@calcey.com>
 * http://www.calcey.com/ 
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @addtogroup Testing
 *
 */",
 "/** Bishnupria Manipuri (???????????? ?????????/??????????????????????????????????????? ?????????????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Usingha
 * @author Uttam Singha, Dec 2006
 */",
 "/** Yiddish (????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Chaim Shel
 * @author Jiddisch
 * @author Joystick
 * @author Kaganer
 * @author Reedy
 * @author Teak
 * @author Yidel
 * @author ??????????????????
 * @author ???????? ????????????????
 * @author ????????????????
 */",
 "/** Bhojpuri (?????????????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Anshumangupta21
 * @author Ganesh
 * @author Rajivkurjee
 */",
 "/** Haitian (Krey??l ayisyen)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Boukman
 * @author Internoob
 * @author Jvm
 * @author Masterches
 * @author Urhixidur
 */",
 "/**
 * The \'skipcaptcha\' permission key can be given out to
 * let known-good users perform triggering actions without
 * having to go through the captcha.
 *
 * By default, sysops and registered bot accounts will be
 * able to skip, while others have to go through it.
 */",
 "/**
 * List of IP ranges to allow to skip the captcha, similar to the group setting:
 * \"$wgGroupPermission[...][\'skipcaptcha\'] = true\"
 *
 * Specific IP addresses or CIDR-style ranges may be used,
 * for instance:
 * $wgCaptchaWhitelistIP = array(\'192.168.1.0/24\', \'10.1.0.0/16\');
 */",
 "/**
 * Actions which can trigger a captcha
 *
 * If the \'edit\' trigger is on, *every* edit will trigger the captcha.
 * This may be useful for protecting against vandalbot attacks.
 *
 * If using the default \'addurl\' trigger, the captcha will trigger on
 * edits that include URLs that aren\'t in the current version of the page.
 * This should catch automated linkspammers without annoying people when
 * they make more typical edits.
 *
 * The captcha code should not use $wgCaptchaTriggers, but CaptchaTriggers()
 * which also takes into account per namespace triggering.
 */",
 "/**
 * You may wish to apply special rules for captcha triggering on some namespaces.
 * $wgCaptchaTriggersOnNamespace[<namespace id>][<trigger>] forces an always on /
 * always off configuration with that trigger for the given namespace.
 * Leave unset to use the global options ($wgCaptchaTriggers).
 *
 * Shall not be used with \'createaccount\' (it is not checked).
 */",
 "/**
 * Indicate how to store per-session data required to match up the
 * internal captcha data with the editor.
 *
 * \'CaptchaSessionStore\' uses PHP\'s session storage, which is cookie-based
 * and may fail for anons with cookies disabled.
 *
 * \'CaptchaCacheStore\' uses $wgMemc, which avoids the cookie dependency
 * but may be fragile depending on cache configuration.
 */",
 "/**
 * Number of seconds a captcha session should last in the data cache
 * before expiring when managing through CaptchaCacheStore class.
 *
 * Default is a half hour.
 */",
 "/**
 * Number of seconds after a bad login that a captcha will be shown to
 * that client on the login form to slow down password-guessing bots.
 *
 * Has no effect if \'badlogin\' is disabled in $wgCaptchaTriggers or
 * if there is not a caching engine enabled.
 *
 * Default is five minutes.
 */",
 "/**
 * Allow users who have confirmed their e-mail addresses to post
 * URL links without being harassed by the captcha.
 */",
 "/**
 * Number of bad login attempts before triggering the captcha.  0 means the
 * captcha is presented on the first login.
 */",
 "/**
 * Regex to whitelist URLs to known-good sites...
 * For instance:
 * $wgCaptchaWhitelist = \'#^https?://([a-z0-9-]+\\.)?(wikimedia|wikipedia)\.org/#i\';
 * Local admins can define a whitelist under [[MediaWiki:captcha-addurl-whitelist]]
 */",
 "/**
 * Additional regexes to check for. Use full regexes; can match things
 * other than URLs such as junk edits.
 *
 * If the new version matches one and the old version doesn\'t,
 * toss up the captcha screen.
 *
 * @fixme Add a message for local admins to add items as well.
 */",
 "/** Register special page */",
 "/**
 * Set up $wgWhitelistRead
 */",
 "/**
 * Selenium server manager
 *
 * @file
 * @ingroup Testing
 * Copyright (C) 2010 Nadeesha Weerasinghe <nadeesha@calcey.com>
 * http://www.calcey.com/ 
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @addtogroup Testing
 *
 */",
 "/** Angika (?????????????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Angpradesh
 * @author Vinitutpal
 */",
 "/** Kashmiri (Devanagari script) (???????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Rk_kaul (on ks.wikipedia.org)
 */",
 "/**
 * Abstract class for type hinting (accepts WikiPage, Article, ImagePage, CategoryPage)
 */",
 "/**
	 * Constructor and clear the article
	 * @param $title Title Reference to a Title object.
	 */",
 "/**
	 * Create a WikiPage object of the appropriate class for the given title.
	 *
	 * @param $title Title
	 * @return WikiPage object of the appropriate type
	 */",
 "/**
	 * Constructor from a page id
	 *
	 * @param $id Int article ID to load
	 *
	 * @return WikiPage
	 */",
 "/**
	 * Returns overrides for action handlers.
	 * Classes listed here will be used instead of the default one when
	 * (and only when) $wgActions[$action] === true. This allows subclasses
	 * to override the default behavior.
	 *
	 * @todo: move this UI stuff somewhere else
	 *
	 * @return Array
	 */",
 "/**
	 * Get the title object of the article
	 * @return Title object of this page
	 */",
 "/**
	 * Clear the object
	 */",
 "/**
	 * Return the list of revision fields that should be selected to create
	 * a new page.
	 *
	 * @return array
	 */",
 "/**
	 * Fetch a page record with the given conditions
	 * @param $dbr DatabaseBase object
	 * @param $conditions Array
	 * @return mixed Database result resource, or false on failure
	 */",
 "/**
	 * Fetch a page record matching the Title object\'s namespace and title
	 * using a sanitized title string
	 *
	 * @param $dbr DatabaseBase object
	 * @param $title Title object
	 * @return mixed Database result resource, or false on failure
	 */",
 "/**
	 * Fetch a page record matching the requested ID
	 *
	 * @param $dbr DatabaseBase
	 * @param $id Integer
	 * @return mixed Database result resource, or false on failure
	 */",
 "/**
	 * Set the general counter, title etc data loaded from
	 * some source.
	 *
	 * @param $data Object|String One of the following:
	 *		A DB query result object or...
	 *		\"fromdb\" to get from a slave DB or...
	 *		\"fromdbmaster\" to get from the master DB
	 * @return void
	 */",
 "/**
	 * @return int Page ID
	 */",
 "/**
	 * @return bool Whether or not the page exists in the database
	 */",
 "/**
	 * Check if this page is something we\'re going to be showing
	 * some sort of sensible content for. If we return false, page
	 * views (plain action=view) will return an HTTP 404 response,
	 * so spiders and robots can know they\'re following a bad link.
	 *
	 * @return bool
	 */",
 "/**
	 * @return int The view count for the page
	 */",
 "/**
	 * Tests if the article text represents a redirect
	 *
	 * @param $text mixed string containing article contents, or boolean
	 * @return bool
	 */",
 "/**
	 * Loads page_touched and returns a value indicating if it should be used
	 * @return boolean true if not a redirect
	 */",
 "/**
	 * Get the page_touched field
	 * @return string containing GMT timestamp
	 */",
 "/**
	 * Get the page_latest field
	 * @return integer rev_id of current revision
	 */",
 "/**
	 * Loads everything except the text
	 * This isn\'t necessary for all uses, so it\'s only done if needed.
	 */",
 "/**
	 * Set the latest revision
	 */",
 "/**
	 * Get the latest revision
	 * @return Revision|null
	 */",
 "/**
	 * Get the text of the current revision. No side-effects...
	 *
	 * @param $audience Integer: one of:
	 *      Revision::FOR_PUBLIC       to be displayed to all users
	 *      Revision::FOR_THIS_USER    to be displayed to $wgUser
	 *      Revision::RAW              get the text regardless of permissions
	 * @return String|false The text of the current revision
	 */",
 "/**
	 * Get the text of the current revision. No side-effects...
	 *
	 * @return String|false The text of the current revision
	 */",
 "/**
	 * @return string MW timestamp of last article revision
	 */",
 "/**
	 * Set the page timestamp (use only to avoid DB queries)
	 * @param $ts string MW timestamp of last article revision
	 * @return void
	 */",
 "/**
	 * @param $audience Integer: one of:
	 *      Revision::FOR_PUBLIC       to be displayed to all users
	 *      Revision::FOR_THIS_USER    to be displayed to $wgUser
	 *      Revision::RAW              get the text regardless of permissions
	 * @return int user ID for the user that made the last article revision
	 */",
 "/**
	 * @param $audience Integer: one of:
	 *      Revision::FOR_PUBLIC       to be displayed to all users
	 *      Revision::FOR_THIS_USER    to be displayed to $wgUser
	 *      Revision::RAW              get the text regardless of permissions
	 * @return string username of the user that made the last article revision
	 */",
 "/**
	 * @param $audience Integer: one of:
	 *      Revision::FOR_PUBLIC       to be displayed to all users
	 *      Revision::FOR_THIS_USER    to be displayed to $wgUser
	 *      Revision::RAW              get the text regardless of permissions
	 * @return string Comment stored for the last article revision
	 */",
 "/**
	 * Returns true if last revision was marked as \"minor edit\"
	 *
	 * @return boolean Minor edit indicator for the last article revision.
	 */",
 "/**
	 * Get the cached timestamp for the last time the page changed.
	 * This is only used to help handle slave lag by comparing to page_touched.
	 * @return string MW timestamp
	 */",
 "/**
	 * Set the cached timestamp for the last time the page changed.
	 * This is only used to help handle slave lag by comparing to page_touched.
	 * @param $timestamp string
	 * @return void
	 */",
 "/**
	 * Determine whether a page would be suitable for being counted as an
	 * article in the site_stats table based on the title & its content
	 *
	 * @param $editInfo Object or false: object returned by prepareTextForEdit(),
	 *        if false, the current database state will be used
	 * @return Boolean
	 */",
 "/**
	 * If this page is a redirect, get its target
	 *
	 * The target will be fetched from the redirect table if possible.
	 * If this page doesn\'t have an entry there, call insertRedirect()
	 * @return Title|mixed object, or null if this page is not a redirect
	 */",
 "/**
	 * Insert an entry for this page into the redirect table.
	 *
	 * Don\'t call this function directly unless you know what you\'re doing.
	 * @return Title object or null if not a redirect
	 */",
 "/**
	 * Insert or update the redirect table entry for this page to indicate
	 * it redirects to $rt .
	 * @param $rt Title redirect target
	 */",
 "/**
	 * Get the Title object or URL this page redirects to
	 *
	 * @return mixed false, Title of in-wiki target, or string with URL
	 */",
 "/**
	 * Get the Title object or URL to use for a redirect. We use Title
	 * objects for same-wiki, non-special redirects and URLs for everything
	 * else.
	 * @param $rt Title Redirect target
	 * @return mixed false, Title object of local target, or string with URL
	 */",
 "/**
	 * Get a list of users who have edited this article, not including the user who made
	 * the most recent revision, which you can get from $article->getUser() if you want it
	 * @return UserArrayFromResult
	 */",
 "/**
	 * Get the last N authors
	 * @param $num Integer: number of revisions to get
	 * @param $revLatest String: the latest rev_id, selected from the master (optional)
	 * @return array Array of authors, duplicates not removed
	 */",
 "/**
	 * Should the parser cache be used?
	 *
	 * @param $parserOptions ParserOptions to check
	 * @param $oldid int
	 * @return boolean
	 */",
 "/**
	 * Get a ParserOutput for the given ParserOptions and revision ID.
	 * The parser cache will be used if possible.
	 *
	 * @since 1.19
	 * @param $parserOptions ParserOptions to use for the parse operation
	 * @param $oldid Revision ID to get the text from, passing null or 0 will
	 *               get the current revision (default value)
	 * @return ParserOutput or false if the revision was not found
	 */",
 "/**
	 * Do standard deferred updates after page view
	 * @param $user User The relevant user
	 */",
 "/**
	 * Perform the actions of a page purging
	 */",
 "/**
	 * Insert a new empty page record for this article.
	 * This *must* be followed up by creating a revision
	 * and running $this->updateRevisionOn( ... );
	 * or else the record will be left in a funky state.
	 * Best if all done inside a transaction.
	 *
	 * @param $dbw DatabaseBase
	 * @return int The newly created page_id key, or false if the title already existed
	 */",
 "/**
	 * Update the page record to point to a newly saved revision.
	 *
	 * @param $dbw DatabaseBase: object
	 * @param $revision Revision: For ID number, and text used to set
	 *                  length and redirect status fields
	 * @param $lastRevision Integer: if given, will not overwrite the page field
	 *                      when different from the currently set value.
	 *                      Giving 0 indicates the new page flag should be set
	 *                      on.
	 * @param $lastRevIsRedirect Boolean: if given, will optimize adding and
	 *                           removing rows in redirect table.
	 * @return bool true on success, false on failure
	 * @private
	 */",
 "/**
	 * Add row to the redirect table if this is a redirect, remove otherwise.
	 *
	 * @param $dbw DatabaseBase
	 * @param $redirectTitle Title object pointing to the redirect target,
	 *                       or NULL if this is not a redirect
	 * @param $lastRevIsRedirect If given, will optimize adding and
	 *                           removing rows in redirect table.
	 * @return bool true on success, false on failure
	 * @private
	 */",
 "/**
	 * If the given revision is newer than the currently set page_latest,
	 * update the page record. Otherwise, do nothing.
	 *
	 * @param $dbw Database object
	 * @param $revision Revision object
	 * @return mixed
	 */",
 "/**
	 * Get the text that needs to be saved in order to undo all revisions
	 * between $undo and $undoafter. Revisions must belong to the same page,
	 * must exist and must not be deleted
	 * @param $undo Revision
	 * @param $undoafter Revision Must be an earlier revision than $undo
	 * @return mixed string on success, false on failure
	 */",
 "/**
	 * @param $section empty/null/false or a section number (0, 1, 2, T1, T2...)
	 * @param $text String: new text of the section
	 * @param $sectionTitle String: new section\'s subject, only if $section is \'new\'
	 * @param $edittime String: revision timestamp or null to use the current revision
	 * @return string Complete article text, or null if error
	 */",
 "/**
	 * Check flags and add EDIT_NEW or EDIT_UPDATE to them as needed.
	 * @param $flags Int
	 * @return Int updated $flags
	 */",
 "/**
	 * Change an existing article or create a new article. Updates RC and all necessary caches,
	 * optionally via the deferred update array.
	 *
	 * @param $text String: new text
	 * @param $summary String: edit summary
	 * @param $flags Integer bitfield:
	 *      EDIT_NEW
	 *          Article is known or assumed to be non-existent, create a new one
	 *      EDIT_UPDATE
	 *          Article is known or assumed to be pre-existing, update it
	 *      EDIT_MINOR
	 *          Mark this edit minor, if the user is allowed to do so
	 *      EDIT_SUPPRESS_RC
	 *          Do not log the change in recentchanges
	 *      EDIT_FORCE_BOT
	 *          Mark the edit a \"bot\" edit regardless of user rights
	 *      EDIT_DEFER_UPDATES
	 *          Defer some of the updates until the end of index.php
	 *      EDIT_AUTOSUMMARY
	 *          Fill in blank summaries with generated text where possible
	 *
	 * If neither EDIT_NEW nor EDIT_UPDATE is specified, the status of the article will be detected.
	 * If EDIT_UPDATE is specified and the article doesn\'t exist, the function will return an
	 * edit-gone-missing error. If EDIT_NEW is specified and the article does exist, an
	 * edit-already-exists error will be returned. These two conditions are also possible with
	 * auto-detection due to MediaWiki\'s performance-optimised locking strategy.
	 *
	 * @param $baseRevId the revision ID this edit was based off, if any
	 * @param $user User the user doing the edit
	 *
	 * @return Status object. Possible errors:
	 *     edit-hook-aborted:       The ArticleSave hook aborted the edit but didn\'t set the fatal flag of $status
	 *     edit-gone-missing:       In update mode, but the article didn\'t exist
	 *     edit-conflict:           In update mode, the article changed unexpectedly
	 *     edit-no-change:          Warning that the text was the same as before
	 *     edit-already-exists:     In creation mode, but the article already exists
	 *
	 *  Extensions may define additional errors.
	 *
	 *  $return->value will contain an associative array with members as follows:
	 *     new:                     Boolean indicating if the function attempted to create a new article
	 *     revision:                The revision object for the inserted revision, or null
	 *
	 *  Compatibility note: this function previously returned a boolean value indicating success/failure
	 */",
 "/**
	 * Get parser options suitable for rendering the primary article wikitext
	 * @param User|string $user User object or \'canonical\'
	 * @return ParserOptions
	 */",
 "/**
	 * Prepare text which is about to be saved.
	 * Returns a stdclass with source, pst and output members
	 */",
 "/**
	 * Do standard deferred updates after page edit.
	 * Update links tables, site stats, search index and message cache.
	 * Purges pages that include this page if the text was changed here.
	 * Every 100th edit, prune the recent changes table.
	 *
	 * @private
	 * @param $revision Revision object
	 * @param $user User object that did the revision
	 * @param $options Array of options, following indexes are used:
	 * - changed: boolean, whether the revision changed the content (default true)
	 * - created: boolean, whether the revision created the page (default false)
	 * - oldcountable: boolean or null (default null):
	 *   - boolean: whether the page was counted as an article before that
	 *     revision, only used in changed is true and created is false
	 *   - null: don\'t change the article count
	 */",
 "/**
	 * Edit an article without doing all that other stuff
	 * The article must already exist; link tables etc
	 * are not updated, caches are not flushed.
	 *
	 * @param $text String: text submitted
	 * @param $user User The relevant user
	 * @param $comment String: comment submitted
	 * @param $minor Boolean: whereas it\'s a minor modification
	 */",
 "/**
	 * Update the article\'s restriction field, and leave a log entry.
	 * This works for protection both existing and non-existing pages.
	 *
	 * @param $limit Array: set of restriction keys
	 * @param $reason String
	 * @param &$cascade Integer. Set to false if cascading protection isn\'t allowed.
	 * @param $expiry Array: per restriction type expiration
	 * @param $user User The user updating the restrictions
	 * @return bool true on success
	 */",
 "/**
	 * Take an array of page restrictions and flatten it to a string
	 * suitable for insertion into the page_restrictions field.
	 * @param $limit Array
	 * @return String
	 */",
 "/**
	 * Same as doDeleteArticleReal(), but returns more detailed success/failure status
	 * Deletes the article with database consistency, writes logs, purges caches
	 *
	 * @param $reason string delete reason for deletion log
	 * @param $suppress bitfield
	 * 	Revision::DELETED_TEXT
	 * 	Revision::DELETED_COMMENT
	 * 	Revision::DELETED_USER
	 * 	Revision::DELETED_RESTRICTED
	 * @param $id int article ID
	 * @param $commit boolean defaults to true, triggers transaction end
	 * @param &$error Array of errors to append to
	 * @param $user User The deleting user
	 * @return boolean true if successful
	 */",
 "/**
	 * Back-end article deletion
	 * Deletes the article with database consistency, writes logs, purges caches
	 *
	 * @param $reason string delete reason for deletion log
	 * @param $suppress bitfield
	 * 	Revision::DELETED_TEXT
	 * 	Revision::DELETED_COMMENT
	 * 	Revision::DELETED_USER
	 * 	Revision::DELETED_RESTRICTED
	 * @param $id int article ID
	 * @param $commit boolean defaults to true, triggers transaction end
	 * @param &$error Array of errors to append to
	 * @param $user User The deleting user
	 * @return int: One of WikiPage::DELETE_* constants
	 */",
 "/**
	 * Do some database updates after deletion
	 *
	 * @param $id Int: page_id value of the page being deleted
	 */",
 "/**
	 * Roll back the most recent consecutive set of edits to a page
	 * from the same user; fails if there are no eligible edits to
	 * roll back to, e.g. user is the sole contributor. This function
	 * performs permissions checks on $user, then calls commitRollback()
	 * to do the dirty work
	 * 
	 * @todo: seperate the business/permission stuff out from backend code
	 *
	 * @param $fromP String: Name of the user whose edits to rollback.
	 * @param $summary String: Custom summary. Set to default summary if empty.
	 * @param $token String: Rollback token.
	 * @param $bot Boolean: If true, mark all reverted edits as bot.
	 *
	 * @param $resultDetails Array: contains result-specific array of additional values
	 *    \'alreadyrolled\' : \'current\' (rev)
	 *    success        : \'summary\' (str), \'current\' (rev), \'target\' (rev)
	 *
	 * @param $user User The user performing the rollback
	 * @return array of errors, each error formatted as
	 *   array(messagekey, param1, param2, ...).
	 * On success, the array is empty.  This array can also be passed to
	 * OutputPage::showPermissionsErrorPage().
	 */",
 "/**
	 * Backend implementation of doRollback(), please refer there for parameter
	 * and return value documentation
	 *
	 * NOTE: This function does NOT check ANY permissions, it just commits the
	 * rollback to the DB. Therefore, you should only call this function direct-
	 * ly if you want to use custom permissions checks. If you don\'t, use
	 * doRollback() instead.
	 * @param $fromP String: Name of the user whose edits to rollback.
	 * @param $summary String: Custom summary. Set to default summary if empty.
	 * @param $bot Boolean: If true, mark all reverted edits as bot.
	 *
	 * @param $resultDetails Array: contains result-specific array of additional values
	 * @param $guser User The user performing the rollback
	 */",
 "/**
	 * The onArticle*() functions are supposed to be a kind of hooks
	 * which should be called whenever any of the specified actions
	 * are done.
	 *
	 * This is a good place to put code to clear caches, for instance.
	 *
	 * This is called on page move and undelete, as well as edit
	 *
	 * @param $title Title object
	 */",
 "/**
	 * Clears caches when article is deleted
	 *
	 * @param $title Title
	 */",
 "/**
	 * Purge caches on page update etc
	 *
	 * @param $title Title object
	 * @todo:  verify that $title is always a Title object (and never false or null), add Title hint to parameter $title
	 */",
 "/**
	 * Returns a list of hidden categories this page is a member of.
	 * Uses the page_props and categorylinks tables.
	 *
	 * @return Array of Title objects
	 */",
 "/**
	* Return an applicable autosummary if one exists for the given edit.
	* @param $oldtext String: the previous text of the page.
	* @param $newtext String: The submitted text of the page.
	* @param $flags Int bitmask: a bitmask of flags submitted for the edit.
	* @return string An appropriate autosummary, or an empty string.
	*/",
 "/**
	 * Auto-generates a deletion reason
	 *
	 * @param &$hasHistory Boolean: whether the page has a history
	 * @return mixed String containing deletion reason or empty string, or boolean false
	 *    if no revision occurred
	 */",
 "/**
	 * Update all the appropriate counts in the category table, given that
	 * we\'ve added the categories $added and deleted the categories $deleted.
	 *
	 * @param $added array   The names of categories that were added
	 * @param $deleted array The names of categories that were deleted
	 */",
 "/**
	 * Updates cascading protections
	 *
	 * @param $parserOutput ParserOutput object for the current version
	 */",
 "/**
	 * Return a list of templates used by this article.
	 * Uses the templatelinks table
	 *
	 * @deprecated in 1.19; use Title::getTemplateLinksFrom()
	 * @return Array of Title objects
	 */",
 "/**
	 * Perform article updates on a special page creation.
	 *
	 * @param $rev Revision object
	 *
	 * @todo This is a shitty interface function. Kill it and replace the
	 * other shitty functions like doEditUpdates and such so it\'s not needed
	 * anymore.
	 * @deprecated since 1.18, use doEditUpdates()
	 */",
 "/**
	 * This function is called right before saving the wikitext,
	 * so we can do things like signatures and links-in-context.
	 *
	 * @deprecated in 1.19; use Parser::preSaveTransform() instead
	 * @param $text String article contents
	 * @param $user User object: user doing the edit
	 * @param $popts ParserOptions object: parser options, default options for
	 *               the user loaded if null given
	 * @return string article contents with altered wikitext markup (signatures
	 * 	converted, {{subst:}}, templates, etc.)
	 */",
 "/**
	 * Check whether the number of revisions of this page surpasses $wgDeleteRevisionsLimit
	 *
	 * @deprecated in 1.19; use Title::isBigDeletion() instead.
	 * @return bool
	 */",
 "/**
	 * Get the  approximate revision count of this page.
	 *
	 * @deprecated in 1.19; use Title::estimateRevisionCount() instead.
	 * @return int
	 */",
 "/**
	 * Update the article\'s restriction field, and leave a log entry.
	 *
	 * @deprecated since 1.19
	 * @param $limit Array: set of restriction keys
	 * @param $reason String
	 * @param &$cascade Integer. Set to false if cascading protection isn\'t allowed.
	 * @param $expiry Array: per restriction type expiration
	 * @param $user User The user updating the restrictions
	 * @return bool true on success
	 */",
 "/**
	 * @deprecated since 1.18
	 */",
 "/**
	 * @deprecated since 1.18
	 */",
 "/**
	 * @deprecated since 1.18
	 */",
 "/**
 * Class representing a MediaWiki article and history.
 *
 * Some fields are public only for backwards-compatibility. Use accessors.
 * In the past, this class was part of Article.php and everything was public.
 *
 * @internal documentation reviewed 15 Mar 2010
 */",
 "/**
	 * Constructor
	 *
	 * @param $page Page
	 * @param $revid Integer: ID of the revision being parsed
	 * @param $useParserCache Boolean: whether to use the parser cache
	 * @param $parserOptions parserOptions to use for the parse operation
	 * @param $text String: text to parse or null to load it
	 */",
 "/**
	 * Get the ParserOutput from this object, or false in case of failure
	 *
	 * @return ParserOutput
	 */",
 "/**
	 * Get whether the ParserOutput is a dirty one (i.e. expired)
	 *
	 * @return bool
	 */",
 "/**
	 * Get a Status object in case of error or false otherwise
	 *
	 * @return Status|false
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * @param $status Status
	 */",
 "/**
	 * Builds an internal list of APIs to expose information about.
	 * Normally this only lists the MediaWiki API, with its base URL,
	 * link to documentation, and a marker as to available authentication
	 * (to aid in OAuth client apps switching to support in the future).
	 *
	 * Extensions can expose other APIs, such as WordPress or Twitter-
	 * compatible APIs, by hooking \'ApiRsdServiceApis\' and adding more
	 * elements to the array.
	 *
	 * See http://cyber.law.harvard.edu/blogs/gems/tech/rsd.html for
	 * the base RSD spec, and check WordPress and StatusNet sites for
	 * in-production examples listing several blogging and micrblogging
	 * APIs.
	 *
	 * @return array
	 */",
 "/**
	 * Formats the internal list of exposed APIs into an array suitable
	 * to pass to the API\'s XML formatter.
	 *
	 * @return array
	 */",
 "/**
 * API module for sending out RSD information
 * @ingroup API
 */",
 "/**
	 * Constructor
	 * @param $context IContextSource context to use, anything else will be ignored
	 * @param $old Integer old ID we want to show and diff with.
	 * @param $new String either \'prev\' or \'next\'.
	 * @param $rcid Integer ??? FIXME (default 0)
	 * @param $refreshCache boolean If set, refreshes the diff cache
	 * @param $unhide boolean If set, allow viewing deleted revs
	 */",
 "/**
	 * @param $value bool
	 */",
 "/**
	 * @return Language
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * @return int
	 */",
 "/**
	 * @return Bool|int
	 */",
 "/**
	 * Look up a special:Undelete link to the given deleted revision id,
	 * as a workaround for being unable to load deleted diffs in currently.
	 *
	 * @param int $id revision ID
	 * @return mixed URL or false
	 */",
 "/**
	 * Build a wikitext link toward a deleted revision, if viewable.
	 *
	 * @param int $id revision ID
	 * @return string wikitext fragment
	 */",
 "/**
	 * Get a link to mark the change as patrolled, or \'\' if there\'s either no
	 * revision to patrol or the user is not allowed to to it.
	 * Side effect: this method will call OutputPage::preventClickjacking()
	 * when a link is builded.
	 *
	 * @return String
	 */",
 "/**
	 * @param $rev Revision
	 * @return String
	 */",
 "/**
	 * Show the new revision of the page.
	 */",
 "/**
	 * Get the diff text, send it to the OutputPage object
	 * Returns false if the diff could not be generated, otherwise returns true
	 *
	 * @return bool
	 */",
 "/**
	 * Add style sheets and supporting JS for diff display.
	 */",
 "/**
	 * Get complete diff table, including header
	 *
	 * @param $otitle Title: old title
	 * @param $ntitle Title: new title
	 * @param $notice String: HTML between diff header and body
	 * @return mixed
	 */",
 "/**
	 * Get the diff table body, without header
	 *
	 * @return mixed (string/false)
	 */",
 "/**
	 * Make sure the proper modules are loaded before we try to
	 * make the diff
	 */",
 "/**
	 * Generate a diff, no caching
	 *
	 * @param $otext String: old text, must be already segmented
	 * @param $ntext String: new text, must be already segmented
	 */",
 "/**
	 * Generate a debug comment indicating diff generating time,
	 * server node, and generator backend.
	 */",
 "/**
	 * Replace line numbers with the text in the user\'s language
	 */",
 "/**
	 * If there are revisions between the ones being compared, return a note saying so.
	 * @return string
	 */",
 "/**
	 * Get a notice about how many intermediate edits and users there are
	 * @param $numEdits int
	 * @param $numUsers int
	 * @param $limit int
	 * @return string
	 */",
 "/**
	 * Get a header for a specified revision.
	 *
	 * @param $rev Revision
	 * @param $complete String: \'complete\' to get the header wrapped depending
	 *        the visibility of the revision and a link to edit the page.
	 * @return String HTML fragment
	 */",
 "/**
	 * Add the header to a diff body
	 *
	 * @return string
	 */",
 "/**
	 * Use specified text instead of loading from the database
	 */",
 "/**
	 * Set the language in which the diff text is written
	 * (Defaults to page content language).
	 * @since 1.19
	 */",
 "/**
	 * Load revision IDs
	 */",
 "/**
	 * Load revision metadata for the specified articles. If newid is 0, then compare
	 * the old article in oldid to the current article; if oldid is 0, then
	 * compare the current article to the immediately previous one (ignoring the
	 * value of newid).
	 *
	 * If oldid is false, leave the corresponding revision object set
	 * to false. This is impossible via ordinary user input, and is provided for
	 * API convenience.
	 *
	 * @return bool
	 */",
 "/**
	 * Load the text of the revisions, as well as revision data.
	 *
	 * @return bool
	 */",
 "/**
	 * Load the text of the new revision, not the old one
	 *
	 * @return bool
	 */",
 "/**
 * @todo document
 * @ingroup DifferenceEngine
 */",
 "/**
	 * Gets list of pages used by this module.  Obviously, it makes absolutely no
	 * sense to include JavaScript files here... :D
	 *
	 * @param $context ResourceLoaderContext
	 *
	 * @return Array: List of pages
	 */",
 "/**
	 * Gets group name
	 * 
	 * @return String: Name of group
	 */",
 "/**
 * Module for site customizations
 */",
 "/**
	 * Do a prefix search of titles and return a list of matching page names.
	 *
	 * @param $search String
	 * @param $limit Integer
	 * @param $namespaces Array: used if query is not explicitely prefixed
	 * @return Array of strings
	 */",
 "/**
	 * Do a prefix search of titles and return a list of matching page names.
	 * @param $namespaces Array
	 * @param $search String
	 * @param $limit Integer
	 * @return Array of strings
	 */",
 "/**
	 * Prefix search special-case for Special: namespace.
	 *
	 * @param $search String: term
	 * @param $limit Integer: max number of items to return
	 * @return Array
	 */",
 "/**
	 * Unless overridden by PrefixSearchBackend hook...
	 * This is case-sensitive (First character may
	 * be automatically capitalized by Title::secureAndSpit()
	 * later on depending on $wgCapitalLinks)
	 *
	 * @param $namespaces Array: namespaces to search in
	 * @param $search String: term
	 * @param $limit Integer: max number of items to return
	 * @return Array of title strings
	 */",
 "/**
	 * Validate an array of numerical namespace indexes
	 *
	 * @param $namespaces Array
	 * @return Array (default: contains only NS_MAIN)
	 */",
 "/**
 * PrefixSearch - Handles searching prefixes of titles and finding any page
 * names that match. Used largely by the OpenSearch implementation.
 *
 * @ingroup Search
 */",
 "/**
 * API module that functions as a shortcut to the wikitext preprocessor. Expands
 * any templates in a provided string, and returns the result of this expansion
 * to the caller.
 *
 * @ingroup API
 */",
 "/**
	 * @param $conf array An associative array with one member:
	 *  - connection: The DatabaseBase connection object
	 */",
 "/**
	 * @param $wiki bool|string
	 *
	 * @return LoadBalancer_Single
	 */",
 "/**
	 * @param $wiki bool|string
	 *
	 * @return LoadBalancer_Single
	 */",
 "/**
	 * @param $cluster
	 * @param $wiki bool|string
	 *
	 * @return LoadBalancer_Single
	 */",
 "/**
	 * @param $cluster
	 * @param $wiki bool|string
	 *
	 * @return LoadBalancer_Single
	 */",
 "/**
	 * @param $callback string|array
	 * @param $params array
	 */",
 "/**
 * An LBFactory class that always returns a single database object.
 */",
 "/**
	 * @param $params array
	 */",
 "/**
	 *
	 * @param $server string
	 * @param $dbNameOverride bool
	 *
	 * @return DatabaseBase
	 */",
 "/**
 * Helper class for LBFactory_Single.
 */",
 "/** Tsonga (Xitsonga)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Thuvack
 */",
 "/**
 * Created on 16 April 2011
 * API for Gadgets extension
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 * http://www.gnu.org/copyleft/gpl.html
 */",
 "/** Limburgish (Limburgs)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Aelske
 * @author Benopat
 * @author Cicero
 * @author Kaganer
 * @author Matthias
 * @author Ooswesthoesbes
 * @author Pahles
 * @author Purodha
 * @author Reedy
 * @author Remember the dot
 * @author Tibor
 * @author ???????? ????????????????
 */",
 "/**
	 * Callback function for each revision, preprocessToObj()
	 * @param $rev Revision
	 */",
 "/** Novial (Novial)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author BRG (on nov.wikipedia.org)
 * @author Chrisportelli
 * @author MF-Warburg
 * @author Malafaya
 * @author Nov ialiste
 * @author Wayne (on nov.wikipedia.org)
 */",
 "/**
 * Stub profiling functions
 * @file
 * @ingroup Profiler
 */",
 "/** @dataProvider providerPlural */",
 "/** Tests for MediaWiki languages/classes/LanguageGa.php */",
 "/** Picard (Picard)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Geoleplubo
 * @author Hercule
 */",
 "/**
	 * Testing login
	 * XXX this is a funny way of getting session context
	 */",
 "/**
	 * @depends testLogin
	 */",
 "/**
	 * @depends testLogin
	 */",
 "/**
	 * @depends testLogin
	 */",
 "/**
	 * @depends testLogin
	 */",
 "/**
	 * @depends testLogin
	 */",
 "/**
	 * @depends testLogin
	 */",
 "/**
	 * @depends testLogin
	 */",
 "/**
	 * @depends testLogin
	 */",
 "/**
 * @group Database
 * @group Broken
 * Broken test, reports false errors from time to time.
 * See https://bugzilla.wikimedia.org/26169
 *
 * This is pretty sucky... needs to be prettified.
 */",
 "/**
	 * Get the Article object we are working on.
	 * @return Page
	 */",
 "/**
	 * As we use the same small set of messages in various methods and that
	 * they are called often, we call them once and save them in $this->message
	 */",
 "/**
		 * Add date selector to quickly get to a certain time
		 */",
 "/**
	 * Print the history page for an article.
	 * @return nothing
	 */",
 "/**
	 * Fetch an array of revisions, specified by a given limit, offset and
	 * direction. This is now only used by the feeds. It was previously
	 * used by the main UI but that\'s now handled by the pager.
	 *
	 * @param $limit Integer: the limit number of revisions to get
	 * @param $offset Integer
	 * @param $direction Integer: either HistoryPage::DIR_PREV or HistoryPage::DIR_NEXT
	 * @return ResultWrapper
	 */",
 "/**
	 * Output a subscription feed listing recent edits to this page.
	 *
	 * @param $type String: feed type
	 */",
 "/**
	 * Generate a FeedItem object from a given revision table row
	 * Borrows Recent Changes\' feed generation functions for formatting;
	 * includes a diff to the previous revision (if any).
	 *
	 * @param $row Object: database row
	 * @return FeedItem
	 */",
 "/**
 * This class handles printing the history page for an article.  In order to
 * be efficient, it uses timestamps rather than offsets for paging, to avoid
 * costly LIMIT,offset queries.
 *
 * Construct it by passing in an Article, and call $h->history() to print the
 * history.
 *
 */",
 "/**
	 * Creates begin of history list with a submit button
	 *
	 * @return string HTML output
	 */",
 "/**
	 * Creates a submit button
	 *
	 * @param $message String: text of the submit button, will be escaped
	 * @param $attributes Array: attributes
	 * @return String: HTML output for the submit button
	 */",
 "/**
	 * Returns a row from the history printout.
	 *
	 * @todo document some more, and maybe clean up the code (some params redundant?)
	 *
	 * @param $row Object: the database row corresponding to the previous line.
	 * @param $next Mixed: the database row corresponding to the next line. (chronologically previous)
	 * @param $notificationtimestamp
	 * @param $latest Boolean: whether this row corresponds to the page\'s latest revision.
	 * @param $firstInList Boolean: whether this row corresponds to the first displayed on this history page.
	 * @return String: HTML output for the row
	 */",
 "/**
	 * Create a link to view this revision of the page
	 *
	 * @param $rev Revision
	 * @return String
	 */",
 "/**
	 * Create a diff-to-current link for this revision for this page
	 *
	 * @param $rev Revision
	 * @param $latest Boolean: this is the latest revision of the page?
	 * @return String
	 */",
 "/**
	 * Create a diff-to-previous link for this revision for this page.
	 *
	 * @param $prevRev Revision: the previous revision
	 * @param $next Mixed: the newer revision
	 * @return String
	 */",
 "/**
	 * Create radio buttons for page history
	 *
	 * @param $rev Revision object
	 * @param $firstInList Boolean: is this version the first one?
	 *
	 * @return String: HTML output for the radio buttons
	 */",
 "/**
	 * This is called if a write operation is possible from the generated HTML
	 */",
 "/**
	 * Get the \"prevent clickjacking\" flag
	 */",
 "/**
 * @ingroup Pager
 */",
 "/**
 * Backwards-compatibility alias
 */",
 "/**
	 * Create a new Title from a prefixed DB key
	 *
	 * @param $key String the database key, which has underscores
	 *	instead of spaces, possibly including namespace and
	 *	interwiki prefixes
	 * @return Title, or NULL on an error
	 */",
 "/**
	 * Create a new Title from text, such as what one would find in a link. De-
	 * codes any HTML entities in the text.
	 *
	 * @param $text String the link text; spaces, prefixes, and an
	 *   initial \':\' indicating the main namespace are accepted.
	 * @param $defaultNamespace Int the namespace to use if none is speci-
	 *   fied by a prefix.  If you want to force a specific namespace even if
	 *   $text might begin with a namespace prefix, use makeTitle() or
	 *   makeTitleSafe().
	 * @return Title, or null on an error.
	 */",
 "/**
	 * THIS IS NOT THE FUNCTION YOU WANT. Use Title::newFromText().
	 *
	 * Example of wrong and broken code:
	 * $title = Title::newFromURL( $wgRequest->getVal( \'title\' ) );
	 *
	 * Example of right code:
	 * $title = Title::newFromText( $wgRequest->getVal( \'title\' ) );
	 *
	 * Create a new Title from URL-encoded text. Ensures that
	 * the given title\'s length does not exceed the maximum.
	 *
	 * @param $url String the title, as might be taken from a URL
	 * @return Title the new object, or NULL on an error
	 */",
 "/**
	 * Create a new Title from an article ID
	 *
	 * @param $id Int the page_id corresponding to the Title to create
	 * @param $flags Int use Title::GAID_FOR_UPDATE to use master
	 * @return Title the new object, or NULL on an error
	 */",
 "/**
	 * Make an array of titles from an array of IDs
	 *
	 * @param $ids Array of Int Array of IDs
	 * @return Array of Titles
	 */",
 "/**
	 * Make a Title object from a DB row
	 *
	 * @param $row Object database row (needs at least page_title,page_namespace)
	 * @return Title corresponding Title
	 */",
 "/**
	 * Load Title object fields from a DB row.
	 * If false is given, the title will be treated as non-existing.
	 *
	 * @param $row Object|false database row
	 * @return void
	 */",
 "/**
	 * Create a new Title from a namespace index and a DB key.
	 * It\'s assumed that $ns and $title are *valid*, for instance when
	 * they came directly from the database or a special page name.
	 * For convenience, spaces are converted to underscores so that
	 * eg user_text fields can be used directly.
	 *
	 * @param $ns Int the namespace of the article
	 * @param $title String the unprefixed database key form
	 * @param $fragment String the link fragment (after the \"#\")
	 * @param $interwiki String the interwiki prefix
	 * @return Title the new object
	 */",
 "/**
	 * Create a new Title from a namespace index and a DB key.
	 * The parameters will be checked for validity, which is a bit slower
	 * than makeTitle() but safer for user-provided data.
	 *
	 * @param $ns Int the namespace of the article
	 * @param $title String database key form
	 * @param $fragment String the link fragment (after the \"#\")
	 * @param $interwiki String interwiki prefix
	 * @return Title the new object, or NULL on an error
	 */",
 "/**
	 * Create a new Title for the Main Page
	 *
	 * @return Title the new object
	 */",
 "/**
	 * Extract a redirect destination from a string and return the
	 * Title, or null if the text doesn\'t contain a valid redirect
	 * This will only return the very next target, useful for
	 * the redirect table and other checks that don\'t need full recursion
	 *
	 * @param $text String: Text with possible redirect
	 * @return Title: The corresponding Title
	 */",
 "/**
	 * Extract a redirect destination from a string and return the
	 * Title, or null if the text doesn\'t contain a valid redirect
	 * This will recurse down $wgMaxRedirects times or until a non-redirect target is hit
	 * in order to provide (hopefully) the Title of the final destination instead of another redirect
	 *
	 * @param $text String Text with possible redirect
	 * @return Title
	 */",
 "/**
	 * Extract a redirect destination from a string and return an
	 * array of Titles, or null if the text doesn\'t contain a valid redirect
	 * The last element in the array is the final destination after all redirects
	 * have been resolved (up to $wgMaxRedirects times)
	 *
	 * @param $text String Text with possible redirect
	 * @return Array of Titles, with the destination last
	 */",
 "/**
	 * Really extract the redirect destination
	 * Do not call this function directly, use one of the newFromRedirect* functions above
	 *
	 * @param $text String Text with possible redirect
	 * @return Title
	 */",
 "/**
	 * Get the prefixed DB key associated with an ID
	 *
	 * @param $id Int the page_id of the article
	 * @return Title an object representing the article, or NULL if no such article was found
	 */",
 "/**
	 * Get a regex character class describing the legal characters in a link
	 *
	 * @return String the list of characters, not delimited
	 */",
 "/**
	 * Returns a simple regex that will match on characters and sequences invalid in titles.
	 * Note that this doesn\'t pick up many things that could be wrong with titles, but that
	 * replacing this regex with something valid will make many titles valid.
	 *
	 * @return String regex string
	 */",
 "/**
	 * Get a string representation of a title suitable for
	 * including in a search index
	 *
	 * @param $ns Int a namespace index
	 * @param $title String text-form main part
	 * @return String a stripped-down title string ready for the search index
	 */",
 "/**
	 * Make a prefixed DB key from a DB key and a namespace index
	 *
	 * @param $ns Int numerical representation of the namespace
	 * @param $title String the DB key form the title
	 * @param $fragment String The link fragment (after the \"#\")
	 * @param $interwiki String The interwiki prefix
	 * @return String the prefixed form of the title
	 */",
 "/**
	 * Escape a text fragment, say from a link, for a URL
	 *
	 * @param $fragment string containing a URL or link fragment (after the \"#\")
	 * @return String: escaped string
	 */",
 "/**
	 * Callback for usort() to do title sorts by (namespace, title)
	 *
	 * @param $a Title
	 * @param $b Title
	 *
	 * @return Integer: result of string comparison, or namespace comparison
	 */",
 "/**
	 * Determine whether the object refers to a page within
	 * this project.
	 *
	 * @return Bool TRUE if this is an in-project interwiki link or a wikilink, FALSE otherwise
	 */",
 "/**
	 * Is this Title interwiki?
	 *
	 * @return Bool
	 */",
 "/**
	 * Get the interwiki prefix (or null string)
	 *
	 * @return String Interwiki prefix
	 */",
 "/**
	 * Determine whether the object refers to a page within
	 * this project and is transcludable.
	 *
	 * @return Bool TRUE if this is transcludable
	 */",
 "/**
	 * Returns the DB name of the distant wiki which owns the object.
	 *
	 * @return String the DB name
	 */",
 "/**
	 * Get the text form (spaces not underscores) of the main part
	 *
	 * @return String Main part of the title
	 */",
 "/**
	 * Get the URL-encoded form of the main part
	 *
	 * @return String Main part of the title, URL-encoded
	 */",
 "/**
	 * Get the main part with underscores
	 *
	 * @return String: Main part of the title, with underscores
	 */",
 "/**
	 * Get the DB key with the initial letter case as specified by the user
	 *
	 * @return String DB key
	 */",
 "/**
	 * Get the namespace index, i.e. one of the NS_xxxx constants.
	 *
	 * @return Integer: Namespace index
	 */",
 "/**
	 * Get the namespace text
	 *
	 * @return String: Namespace text
	 */",
 "/**
	 * Get the namespace text of the subject (rather than talk) page
	 *
	 * @return String Namespace text
	 */",
 "/**
	 * Get the namespace text of the talk page
	 *
	 * @return String Namespace text
	 */",
 "/**
	 * Could this title have a corresponding talk page?
	 *
	 * @return Bool TRUE or FALSE
	 */",
 "/**
	 * Is this in a namespace that allows actual pages?
	 *
	 * @return Bool
	 * @internal note -- uses hardcoded namespace index instead of constants
	 */",
 "/**
	 * Can this title be added to a user\'s watchlist?
	 *
	 * @return Bool TRUE or FALSE
	 */",
 "/**
	 * Returns true if this is a special page.
	 *
	 * @return boolean
	 */",
 "/**
	 * Returns true if this title resolves to the named special page
	 *
	 * @param $name String The special page name
	 * @return boolean
	 */",
 "/**
	 * If the Title refers to a special page alias which is not the local default, resolve
	 * the alias, and localise the name as necessary.  Otherwise, return $this
	 *
	 * @return Title
	 */",
 "/**
	 * Returns true if the title is inside the specified namespace.
	 * 
	 * Please make use of this instead of comparing to getNamespace()
	 * This function is much more resistant to changes we may make
	 * to namespaces than code that makes direct comparisons.
	 * @param $ns int The namespace
	 * @return bool
	 * @since 1.19
	 */",
 "/**
	 * Returns true if the title is inside one of the specified namespaces.
	 *
	 * @param ...$namespaces The namespaces to check for
	 * @return bool
	 * @since 1.19
	 */",
 "/**
	 * Returns true if the title has the same subject namespace as the
	 * namespace specified.
	 * For example this method will take NS_USER and return true if namespace
	 * is either NS_USER or NS_USER_TALK since both of them have NS_USER
	 * as their subject namespace.
	 *
	 * This is MUCH simpler than individually testing for equivilance
	 * against both NS_USER and NS_USER_TALK, and is also forward compatible.
	 * @since 1.19
	 */",
 "/**
	 * Is this Title in a namespace which contains content?
	 * In other words, is this a content page, for the purposes of calculating
	 * statistics, etc?
	 *
	 * @return Boolean
	 */",
 "/**
	 * Would anybody with sufficient privileges be able to move this page?
	 * Some pages just aren\'t movable.
	 *
	 * @return Bool TRUE or FALSE
	 */",
 "/**
	 * Is this the mainpage?
	 * @note Title::newFromText seams to be sufficiently optimized by the title
	 * cache that we don\'t need to over-optimize by doing direct comparisons and
	 * acidentally creating new bugs where $title->equals( Title::newFromText() )
	 * ends up reporting something differently than $title->isMainPage();
	 *
	 * @since 1.18
	 * @return Bool
	 */",
 "/**
	 * Is this a subpage?
	 *
	 * @return Bool
	 */",
 "/**
	 * Is this a conversion table for the LanguageConverter?
	 *
	 * @return Bool
	 */",
 "/**
	 * Does that page contain wikitext, or it is JS, CSS or whatever?
	 *
	 * @return Bool
	 */",
 "/**
	 * Could this page contain custom CSS or JavaScript, based
	 * on the title?
	 *
	 * @return Bool
	 */",
 "/**
	 * Is this a .css or .js subpage of a user page?
	 * @return Bool
	 */",
 "/**
	 * Trim down a .css or .js subpage title to get the corresponding skin name
	 *
	 * @return string containing skin name from .css or .js subpage title
	 */",
 "/**
	 * Is this a .css subpage of a user page?
	 *
	 * @return Bool
	 */",
 "/**
	 * Is this a .js subpage of a user page?
	 *
	 * @return Bool
	 */",
 "/**
	 * Is this a talk page of some sort?
	 *
	 * @return Bool
	 */",
 "/**
	 * Get a Title object associated with the talk page of this article
	 *
	 * @return Title the object for the talk page
	 */",
 "/**
	 * Get a title object associated with the subject page of this
	 * talk page
	 *
	 * @return Title the object for the subject page
	 */",
 "/**
	 * Get the default namespace index, for when there is no namespace
	 *
	 * @return Int Default namespace index
	 */",
 "/**
	 * Get title for search index
	 *
	 * @return String a stripped-down title string ready for the
	 *  search index
	 */",
 "/**
	 * Get the Title fragment (i.e.\ the bit after the #) in text form
	 *
	 * @return String Title fragment
	 */",
 "/**
	 * Get the fragment in URL form, including the \"#\" character if there is one
	 * @return String Fragment in URL form
	 */",
 "/**
	 * Set the fragment for this title. Removes the first character from the
	 * specified fragment before setting, so it assumes you\'re passing it with
	 * an initial \"#\".
	 *
	 * Deprecated for public use, use Title::makeTitle() with fragment parameter.
	 * Still in active use privately.
	 *
	 * @param $fragment String text
	 */",
 "/**
	 * Prefix some arbitrary text with the namespace or interwiki prefix
	 * of this object
	 *
	 * @param $name String the text
	 * @return String the prefixed text
	 * @private
	 */",
 "/**
	 * Get the prefixed database key form
	 *
	 * @return String the prefixed title, with underscores and
	 *  any interwiki and namespace prefixes
	 */",
 "/**
	 * Get the prefixed title with spaces.
	 * This is the form usually used for display
	 *
	 * @return String the prefixed title, with spaces
	 */",
 "/**
	 * Return a string representation of this title
	 *
	 * @return String representation of this title
	 */",
 "/**
	 * Get the prefixed title with spaces, plus any fragment
	 * (part beginning with \'#\')
	 *
	 * @return String the prefixed title, with spaces and the fragment, including \'#\'
	 */",
 "/**
	 * Get the base page name, i.e. the leftmost part before any slashes
	 *
	 * @return String Base name
	 */",
 "/**
	 * Get the lowest-level subpage name, i.e. the rightmost part after any slashes
	 *
	 * @return String Subpage name
	 */",
 "/**
	 * Get the HTML-escaped displayable text form.
	 * Used for the title field in <a> tags.
	 *
	 * @return String the text, including any prefixes
	 */",
 "/**
	 * Get a URL-encoded form of the subpage text
	 *
	 * @return String URL-encoded subpage name
	 */",
 "/**
	 * Get a URL-encoded title (not an actual URL) including interwiki
	 *
	 * @return String the URL-encoded form
	 */",
 "/**
	 * Helper to fix up the get{Local,Full,Link,Canonical}URL args
	 * get{Canonical,Full,Link,Local}URL methods accepted an optional
	 * second argument named variant. This was deprecated in favor
	 * of passing an array of option with a \"variant\" key
	 * Once $query2 is removed for good, this helper can be dropped
	 * andthe wfArrayToCGI moved to getLocalURL();
	 *
	 * @since 1.19 (r105919)
	 */",
 "/**
	 * Get a real URL referring to this title, with interwiki link and
	 * fragment
	 *
	 * See getLocalURL for the arguments.
	 *
	 * @see self::getLocalURL
	 * @return String the URL
	 */",
 "/**
	 * Get a URL with no fragment or server name.  If this page is generated
	 * with action=render, $wgServer is prepended.
	 *

	 * @param $query \twotypes{\string,\\array} an optional query string,
	 *   not used for interwiki	links. Can be specified as an associative array as well,
	 *   e.g., array( \'action\' => \'edit\' ) (keys and values will be URL-escaped).
	 *   Some query patterns will trigger various shorturl path replacements.
	 * @param $query2 Mixed: An optional secondary query array. This one MUST
	 *   be an array. If a string is passed it will be interpreted as a deprecated
	 *   variant argument and urlencoded into a variant= argument.
	 *   This second query argument will be added to the $query
	 *   The second parameter is deprecated since 1.19. Pass it as a key,value
	 *   pair in the first parameter array instead.
	 *
	 * @return String the URL
	 */",
 "/**
	 * Get a URL that\'s the simplest URL that will be valid to link, locally,
	 * to the current Title.  It includes the fragment, but does not include
	 * the server unless action=render is used (or the link is external).  If
	 * there\'s a fragment but the prefixed text is empty, we just return a link
	 * to the fragment.
	 *
	 * The result obviously should not be URL-escaped, but does need to be
	 * HTML-escaped if it\'s being output in HTML.
	 *
	 * See getLocalURL for the arguments.
	 *
	 * @see self::getLocalURL
	 * @return String the URL
	 */",
 "/**
	 * Get an HTML-escaped version of the URL form, suitable for
	 * using in a link, without a server name or fragment
	 *
	 * See getLocalURL for the arguments.
	 *
	 * @see self::getLocalURL
	 * @return String the URL
	 */",
 "/**
	 * Get an HTML-escaped version of the URL form, suitable for
	 * using in a link, including the server name and fragment
	 *
	 * See getLocalURL for the arguments.
	 *
	 * @see self::getLocalURL
	 * @return String the URL
	 */",
 "/**
	 * Get the URL form for an internal link.
	 * - Used in various Squid-related code, in case we have a different
	 * internal hostname for the server from the exposed one.
	 *
	 * This uses $wgInternalServer to qualify the path, or $wgServer
	 * if $wgInternalServer is not set. If the server variable used is
	 * protocol-relative, the URL will be expanded to http://
	 *
	 * See getLocalURL for the arguments.
	 *
	 * @see self::getLocalURL
	 * @return String the URL
	 */",
 "/**
	 * Get the URL for a canonical link, for use in things like IRC and
	 * e-mail notifications. Uses $wgCanonicalServer and the
	 * GetCanonicalURL hook.
	 *
	 * NOTE: Unlike getInternalURL(), the canonical URL includes the fragment
	 *
	 * See getLocalURL for the arguments.
	 *
	 * @see self::getLocalURL
	 * @return string The URL
	 * @since 1.18
	 */",
 "/**
	 * HTML-escaped version of getCanonicalURL()
	 *
	 * See getLocalURL for the arguments.
	 *
	 * @see self::getLocalURL
	 * @since 1.18
	 */",
 "/**
	 * Get the edit URL for this Title
	 *
	 * @return String the URL, or a null string if this is an
	 *  interwiki link
	 */",
 "/**
	 * Is $wgUser watching this page?
	 *
	 * @return Bool
	 */",
 "/**
	 * Can $wgUser read this page?
	 *
	 * @deprecated in 1.19; use userCan(), quickUserCan() or getUserPermissionsErrors() instead
	 * @return Bool
	 * @todo fold these checks into userCan()
	 */",
 "/**
	 * Can $user perform $action on this page?
	 * This skips potentially expensive cascading permission checks
	 * as well as avoids expensive error formatting
	 *
	 * Suitable for use for nonessential UI controls in common cases, but
	 * _not_ for functional access control.
	 *
	 * May provide false positives, but should never provide a false negative.
	 *
	 * @param $action String action that permission needs to be checked for
	 * @param $user User to check (since 1.19); $wgUser will be used if not
	 *              provided.
	 * @return Bool
	 */",
 "/**
	 * Can $user perform $action on this page?
	 *
	 * @param $action String action that permission needs to be checked for
	 * @param $user User to check (since 1.19); $wgUser will be used if not
	 *   provided.
	 * @param $doExpensiveQueries Bool Set this to false to avoid doing
	 *   unnecessary queries.
	 * @return Bool
	 */",
 "/**
	 * Can $user perform $action on this page?
	 *
	 * @todo FIXME: This *does not* check throttles (User::pingLimiter()).
	 *
	 * @param $action String action that permission needs to be checked for
	 * @param $user User to check
	 * @param $doExpensiveQueries Bool Set this to false to avoid doing unnecessary
	 *   queries by skipping checks for cascading protections and user blocks.
	 * @param $ignoreErrors Array of Strings Set this to a list of message keys
	 *   whose corresponding errors may be ignored.
	 * @return Array of arguments to wfMsg to explain permissions problems.
	 */",
 "/**
	 * Permissions checks that fail most often, and which are easiest to test.
	 *
	 * @param $action String the action to check
	 * @param $user User user to check
	 * @param $errors Array list of current errors
	 * @param $doExpensiveQueries Boolean whether or not to perform expensive queries
	 * @param $short Boolean short circuit on first error
	 *
	 * @return Array list of errors
	 */",
 "/**
	 * Add the resulting error code to the errors array
	 *
	 * @param $errors Array list of current errors
	 * @param $result Mixed result of errors
	 *
	 * @return Array list of errors
	 */",
 "/**
	 * Check various permission hooks
	 *
	 * @param $action String the action to check
	 * @param $user User user to check
	 * @param $errors Array list of current errors
	 * @param $doExpensiveQueries Boolean whether or not to perform expensive queries
	 * @param $short Boolean short circuit on first error
	 *
	 * @return Array list of errors
	 */",
 "/**
	 * Check permissions on special pages & namespaces
	 *
	 * @param $action String the action to check
	 * @param $user User user to check
	 * @param $errors Array list of current errors
	 * @param $doExpensiveQueries Boolean whether or not to perform expensive queries
	 * @param $short Boolean short circuit on first error
	 *
	 * @return Array list of errors
	 */",
 "/**
	 * Check CSS/JS sub-page permissions
	 *
	 * @param $action String the action to check
	 * @param $user User user to check
	 * @param $errors Array list of current errors
	 * @param $doExpensiveQueries Boolean whether or not to perform expensive queries
	 * @param $short Boolean short circuit on first error
	 *
	 * @return Array list of errors
	 */",
 "/**
	 * Check against page_restrictions table requirements on this
	 * page. The user must possess all required rights for this
	 * action.
	 *
	 * @param $action String the action to check
	 * @param $user User user to check
	 * @param $errors Array list of current errors
	 * @param $doExpensiveQueries Boolean whether or not to perform expensive queries
	 * @param $short Boolean short circuit on first error
	 *
	 * @return Array list of errors
	 */",
 "/**
	 * Check restrictions on cascading pages.
	 *
	 * @param $action String the action to check
	 * @param $user User to check
	 * @param $errors Array list of current errors
	 * @param $doExpensiveQueries Boolean whether or not to perform expensive queries
	 * @param $short Boolean short circuit on first error
	 *
	 * @return Array list of errors
	 */",
 "/**
	 * Check action permissions not already checked in checkQuickPermissions
	 *
	 * @param $action String the action to check
	 * @param $user User to check
	 * @param $errors Array list of current errors
	 * @param $doExpensiveQueries Boolean whether or not to perform expensive queries
	 * @param $short Boolean short circuit on first error
	 *
	 * @return Array list of errors
	 */",
 "/**
	 * Check that the user isn\'t blocked from editting.
	 *
	 * @param $action String the action to check
	 * @param $user User to check
	 * @param $errors Array list of current errors
	 * @param $doExpensiveQueries Boolean whether or not to perform expensive queries
	 * @param $short Boolean short circuit on first error
	 *
	 * @return Array list of errors
	 */",
 "/**
	 * Check that the user is allowed to read this page.
	 *
	 * @param $action String the action to check
	 * @param $user User to check
	 * @param $errors Array list of current errors
	 * @param $doExpensiveQueries Boolean whether or not to perform expensive queries
	 * @param $short Boolean short circuit on first error
	 *
	 * @return Array list of errors
	 */",
 "/**
	 * Get a description array when the user doesn\'t have the right to perform
	 * $action (i.e. when User::isAllowed() returns false)
	 *
	 * @param $action String the action to check
	 * @param $short Boolean short circuit on first error
	 * @return Array list of errors
	 */",
 "/**
	 * Can $user perform $action on this page? This is an internal function,
	 * which checks ONLY that previously checked by userCan (i.e. it leaves out
	 * checks on wfReadOnly() and blocks)
	 *
	 * @param $action String action that permission needs to be checked for
	 * @param $user User to check
	 * @param $doExpensiveQueries Bool Set this to false to avoid doing unnecessary queries.
	 * @param $short Bool Set this to true to stop after the first permission error.
	 * @return Array of arrays of the arguments to wfMsg to explain permissions problems.
	 */",
 "/**
	 * Protect css subpages of user pages: can $wgUser edit
	 * this page?
	 *
	 * @deprecated in 1.19; will be removed in 1.20. Use getUserPermissionsErrors() instead.
	 * @return Bool
	 */",
 "/**
	 * Protect js subpages of user pages: can $wgUser edit
	 * this page?
	 *
	 * @deprecated in 1.19; will be removed in 1.20. Use getUserPermissionsErrors() instead.
	 * @return Bool
	 */",
 "/**
	 * Get a filtered list of all restriction types supported by this wiki.
	 * @param bool $exists True to get all restriction types that apply to
	 * titles that do exist, False for all restriction types that apply to
	 * titles that do not exist
	 * @return array
	 */",
 "/**
	 * Returns restriction types for the current Title
	 *
	 * @return array applicable restriction types
	 */",
 "/**
	 * Is this title subject to title protection?
	 * Title protection is the one applied against creation of such title.
	 *
	 * @return Mixed An associative array representing any existent title
	 *   protection, or false if there\'s none.
	 */",
 "/**
	 * Update the title protection status
	 *
	 * @deprecated in 1.19; will be removed in 1.20. Use WikiPage::doUpdateRestrictions() instead.
	 * @param $create_perm String Permission required for creation
	 * @param $reason String Reason for protection
	 * @param $expiry String Expiry timestamp
	 * @return boolean true
	 */",
 "/**
	 * Remove any title protection due to page existing
	 */",
 "/**
	 * Is this page \"semi-protected\" - the *only* protection is autoconfirm?
	 *
	 * @param $action String Action to check (default: edit)
	 * @return Bool
	 */",
 "/**
	 * Does the title correspond to a protected article?
	 *
	 * @param $action String the action the page is protected from,
	 * by default checks all actions.
	 * @return Bool
	 */",
 "/**
	 * Determines if $user is unable to edit this page because it has been protected
	 * by $wgNamespaceProtection.
	 *
	 * @param $user User object to check permissions
	 * @return Bool
	 */",
 "/**
	 * Cascading protection: Return true if cascading restrictions apply to this page, false if not.
	 *
	 * @return Bool If the page is subject to cascading restrictions.
	 */",
 "/**
	 * Cascading protection: Get the source of any cascading restrictions on this page.
	 *
	 * @param $getPages Bool Whether or not to retrieve the actual pages
	 *        that the restrictions have come from.
	 * @return Mixed Array of Title objects of the pages from which cascading restrictions
	 *     have come, false for none, or true if such restrictions exist, but $getPages
	 *     was not set.  The restriction array is an array of each type, each of which
	 *     contains a array of unique groups.
	 */",
 "/**
	 * Accessor/initialisation for mRestrictions
	 *
	 * @param $action String action that permission needs to be checked for
	 * @return Array of Strings the array of groups allowed to edit this article
	 */",
 "/**
	 * Get the expiry time for the restriction against a given action
	 *
	 * @return String|Bool 14-char timestamp, or \'infinity\' if the page is protected forever
	 * 	or not protected at all, or false if the action is not recognised.
	 */",
 "/**
	 * Returns cascading restrictions for the current article
	 *
	 * @return Boolean
	 */",
 "/**
	 * Loads a string into mRestrictions array
	 *
	 * @param $res Resource restrictions as an SQL result.
	 * @param $oldFashionedRestrictions String comma-separated list of page
	 *        restrictions from page table (pre 1.10)
	 */",
 "/**
	 * Compiles list of active page restrictions from both page table (pre 1.10)
	 * and page_restrictions table for this existing page.
	 * Public for usage by LiquidThreads.
	 *
	 * @param $rows array of db result objects
	 * @param $oldFashionedRestrictions string comma-separated list of page
	 *        restrictions from page table (pre 1.10)
	 */",
 "/**
	 * Load restrictions from the page_restrictions table
	 *
	 * @param $oldFashionedRestrictions String comma-separated list of page
	 *        restrictions from page table (pre 1.10)
	 */",
 "/**
	 * Flush the protection cache in this object and force reload from the database.
	 * This is used when updating protection from WikiPage::doUpdateRestrictions().
	 */",
 "/**
	 * Purge expired restrictions from the page_restrictions table
	 */",
 "/**
	 * Does this have subpages?  (Warning, usually requires an extra DB query.)
	 *
	 * @return Bool
	 */",
 "/**
	 * Get all subpages of this page.
	 *
	 * @param $limit Int maximum number of subpages to fetch; -1 for no limit
	 * @return mixed TitleArray, or empty array if this page\'s namespace
	 *  doesn\'t allow subpages
	 */",
 "/**
	 * Is there a version of this page in the deletion archive?
	 *
	 * @return Int the number of archived revisions
	 */",
 "/**
	 * Is there a version of this page in the deletion archive?
	 *
	 * @return Boolean
	 */",
 "/**
	 * Get the article ID for this Title from the link cache,
	 * adding it if necessary
	 *
	 * @param $flags Int a bit field; may be Title::GAID_FOR_UPDATE to select
	 *  for update
	 * @return Int the ID
	 */",
 "/**
	 * Is this an article that is a redirect page?
	 * Uses link cache, adding it if necessary
	 *
	 * @param $flags Int a bit field; may be Title::GAID_FOR_UPDATE to select for update
	 * @return Bool
	 */",
 "/**
	 * What is the length of this page?
	 * Uses link cache, adding it if necessary
	 *
	 * @param $flags Int a bit field; may be Title::GAID_FOR_UPDATE to select for update
	 * @return Int
	 */",
 "/**
	 * What is the page_latest field for this page?
	 *
	 * @param $flags Int a bit field; may be Title::GAID_FOR_UPDATE to select for update
	 * @return Int or 0 if the page doesn\'t exist
	 */",
 "/**
	 * This clears some fields in this object, and clears any associated
	 * keys in the \"bad links\" section of the link cache.
	 *
	 * - This is called from WikiPage::doEdit() and WikiPage::insertOn() to allow
	 * loading of the new page_id. It\'s also called from
	 * WikiPage::doDeleteArticle()
	 *
	 * @param $newid Int the new Article ID
	 */",
 "/**
	 * Capitalize a text string for a title if it belongs to a namespace that capitalizes
	 *
	 * @param $text String containing title to capitalize
	 * @param $ns int namespace index, defaults to NS_MAIN
	 * @return String containing capitalized title
	 */",
 "/**
	 * Secure and split - main initialisation function for this object
	 *
	 * Assumes that mDbkeyform has been set, and is urldecoded
	 * and uses underscores, but not otherwise munged.  This function
	 * removes illegal characters, splits off the interwiki and
	 * namespace prefixes, sets the other forms, and canonicalizes
	 * everything.
	 *
	 * @return Bool true on success
	 */",
 "/**
	 * Get an array of Title objects linking to this Title
	 * Also stores the IDs in the link cache.
	 *
	 * WARNING: do not use this function on arbitrary user-supplied titles!
	 * On heavily-used templates it will max out the memory.
	 *
	 * @param $options Array: may be FOR UPDATE
	 * @param $table String: table name
	 * @param $prefix String: fields prefix
	 * @return Array of Title objects linking here
	 */",
 "/**
	 * Get an array of Title objects using this Title as a template
	 * Also stores the IDs in the link cache.
	 *
	 * WARNING: do not use this function on arbitrary user-supplied titles!
	 * On heavily-used templates it will max out the memory.
	 *
	 * @param $options Array: may be FOR UPDATE
	 * @return Array of Title the Title objects linking here
	 */",
 "/**
	 * Get an array of Title objects linked from this Title
	 * Also stores the IDs in the link cache.
	 *
	 * WARNING: do not use this function on arbitrary user-supplied titles!
	 * On heavily-used templates it will max out the memory.
	 *
	 * @param $options Array: may be FOR UPDATE
	 * @param $table String: table name
	 * @param $prefix String: fields prefix
	 * @return Array of Title objects linking here
	 */",
 "/**
	 * Get an array of Title objects used on this Title as a template
	 * Also stores the IDs in the link cache.
	 *
	 * WARNING: do not use this function on arbitrary user-supplied titles!
	 * On heavily-used templates it will max out the memory.
	 *
	 * @param $options Array: may be FOR UPDATE
	 * @return Array of Title the Title objects used here
	 */",
 "/**
	 * Get an array of Title objects referring to non-existent articles linked from this page
	 *
	 * @todo check if needed (used only in SpecialBrokenRedirects.php, and should use redirect table in this case)
	 * @return Array of Title the Title objects
	 */",
 "/**
	 * Get a list of URLs to purge from the Squid cache when this
	 * page changes
	 *
	 * @return Array of String the URLs
	 */",
 "/**
	 * Purge all applicable Squid URLs
	 */",
 "/**
	 * Move this page without authentication
	 *
	 * @param $nt Title the new page Title
	 * @return Mixed true on success, getUserPermissionsErrors()-like array on failure
	 */",
 "/**
	 * Check whether a given move operation would be valid.
	 * Returns true if ok, or a getUserPermissionsErrors()-like array otherwise
	 *
	 * @param $nt Title the new title
	 * @param $auth Bool indicates whether $wgUser\'s permissions
	 *  should be checked
	 * @param $reason String is the log summary of the move, used for spam checking
	 * @return Mixed True on success, getUserPermissionsErrors()-like array on failure
	 */",
 "/**
	 * Check if the requested move target is a valid file move target
	 * @param Title $nt Target title
	 * @return array List of errors
	 */",
 "/**
	 * Move a title to a new location
	 *
	 * @param $nt Title the new title
	 * @param $auth Bool indicates whether $wgUser\'s permissions
	 *  should be checked
	 * @param $reason String the reason for the move
	 * @param $createRedirect Bool Whether to create a redirect from the old title to the new title.
	 *  Ignored if the user doesn\'t have the suppressredirect right.
	 * @return Mixed true on success, getUserPermissionsErrors()-like array on failure
	 */",
 "/**
	 * Move page to a title which is either a redirect to the
	 * source page or nonexistent
	 *
	 * @param $nt Title the page to move to, which should be a redirect or nonexistent
	 * @param $reason String The reason for the move
	 * @param $createRedirect Bool Whether to leave a redirect at the old title.  Ignored
	 *   if the user doesn\'t have the suppressredirect right
	 */",
 "/**
	 * Move this page\'s subpages to be subpages of $nt
	 *
	 * @param $nt Title Move target
	 * @param $auth bool Whether $wgUser\'s permissions should be checked
	 * @param $reason string The reason for the move
	 * @param $createRedirect bool Whether to create redirects from the old subpages to
	 *     the new ones Ignored if the user doesn\'t have the \'suppressredirect\' right
	 * @return mixed array with old page titles as keys, and strings (new page titles) or
	 *     arrays (errors) as values, or an error array with numeric indices if no pages
	 *     were moved
	 */",
 "/**
	 * Checks if this page is just a one-rev redirect.
	 * Adds lock, so don\'t use just for light purposes.
	 *
	 * @return Bool
	 */",
 "/**
	 * Checks if $this can be moved to a given Title
	 * - Selects for update, so don\'t call it unless you mean business
	 *
	 * @param $nt Title the new title to check
	 * @return Bool
	 */",
 "/**
	 * Get categories to which this Title belongs and return an array of
	 * categories\' names.
	 *
	 * @return Array of parents in the form:
	 *	  $parent => $currentarticle
	 */",
 "/**
	 * Get a tree of parent categories
	 *
	 * @param $children Array with the children in the keys, to check for circular refs
	 * @return Array Tree of parent categories
	 */",
 "/**
	 * Get an associative array for selecting this title from
	 * the \"page\" table
	 *
	 * @return Array suitable for the $where parameter of DB::select()
	 */",
 "/**
	 * Get the revision ID of the previous revision
	 *
	 * @param $revId Int Revision ID. Get the revision that was before this one.
	 * @param $flags Int Title::GAID_FOR_UPDATE
	 * @return Int|Bool Old revision ID, or FALSE if none exists
	 */",
 "/**
	 * Get the revision ID of the next revision
	 *
	 * @param $revId Int Revision ID. Get the revision that was after this one.
	 * @param $flags Int Title::GAID_FOR_UPDATE
	 * @return Int|Bool Next revision ID, or FALSE if none exists
	 */",
 "/**
	 * Get the first revision of the page
	 *
	 * @param $flags Int Title::GAID_FOR_UPDATE
	 * @return Revision|Null if page doesn\'t exist
	 */",
 "/**
	 * Get the oldest revision timestamp of this page
	 *
	 * @param $flags Int Title::GAID_FOR_UPDATE
	 * @return String: MW timestamp
	 */",
 "/**
	 * Check if this is a new page
	 *
	 * @return bool
	 */",
 "/**
	 * Check whether the number of revisions of this page surpasses $wgDeleteRevisionsLimit
	 *
	 * @return bool
	 */",
 "/**
	 * Get the  approximate revision count of this page.
	 *
	 * @return int
	 */",
 "/**
	 * Get the number of revisions between the given revision.
	 * Used for diffs and other things that really need it.
	 *
	 * @param $old int|Revision Old revision or rev ID (first before range)
	 * @param $new int|Revision New revision or rev ID (first after range)
	 * @return Int Number of revisions between these revisions.
	 */",
 "/**
	 * Get the number of authors between the given revision IDs.
	 * Used for diffs and other things that really need it.
	 *
	 * @param $old int|Revision Old revision or rev ID (first before range)
	 * @param $new int|Revision New revision or rev ID (first after range)
	 * @param $limit Int Maximum number of authors
	 * @return Int Number of revision authors between these revisions.
	 */",
 "/**
	 * Compare with another title.
	 *
	 * @param $title Title
	 * @return Bool
	 */",
 "/**
	 * Check if this title is a subpage of another title
	 *
	 * @param $title Title
	 * @return Bool
	 */",
 "/**
	 * Check if page exists.  For historical reasons, this function simply
	 * checks for the existence of the title in the page table, and will
	 * thus return false for interwiki links, special pages and the like.
	 * If you want to know if a title can be meaningfully viewed, you should
	 * probably call the isKnown() method instead.
	 *
	 * @return Bool
	 */",
 "/**
	 * Should links to this title be shown as potentially viewable (i.e. as
	 * \"bluelinks\"), even if there\'s no record by this title in the page
	 * table?
	 *
	 * This function is semi-deprecated for public use, as well as somewhat
	 * misleadingly named.  You probably just want to call isKnown(), which
	 * calls this function internally.
	 *
	 * (ISSUE: Most of these checks are cheap, but the file existence check
	 * can potentially be quite expensive.  Including it here fixes a lot of
	 * existing code, but we might want to add an optional parameter to skip
	 * it and any other expensive checks.)
	 *
	 * @return Bool
	 */",
 "/**
	 * Does this title refer to a page that can (or might) be meaningfully
	 * viewed?  In particular, this function may be used to determine if
	 * links to the title should be rendered as \"bluelinks\" (as opposed to
	 * \"redlinks\" to non-existent pages).
	 *
	 * @return Bool
	 */",
 "/**
	 * Does this page have source text?
	 *
	 * @return Boolean
	 */",
 "/**
	 * Get the default message text or false if the message doesn\'t exist
	 *
	 * @return String or false
	 */",
 "/**
	 * Updates page_touched for this page; called from LinksUpdate.php
	 *
	 * @return Bool true if the update succeded
	 */",
 "/**
	 * Update page_touched timestamps and send squid purge messages for
	 * pages linking to this title.	May be sent to the job queue depending
	 * on the number of links. Typically called on create and delete.
	 */",
 "/**
	 * Get the last touched timestamp
	 *
	 * @param $db DatabaseBase: optional db
	 * @return String last-touched timestamp
	 */",
 "/**
	 * Get the timestamp when this page was updated since the user last saw it.
	 *
	 * @param $user User
	 * @return String|Null
	 */",
 "/**
	 * Generate strings used for xml \'id\' names in monobook tabs
	 *
	 * @param $prepend string defaults to \'nstab-\'
	 * @return String XML \'id\' name
	 */",
 "/**
	 * Get all extant redirects to this Title
	 *
	 * @param $ns Int|Null Single namespace to consider; NULL to consider all namespaces
	 * @return Array of Title redirects to this title
	 */",
 "/**
	 * Check if this Title is a valid redirect target
	 *
	 * @return Bool
	 */",
 "/**
	 * Get a backlink cache object
	 *
	 * @return BacklinkCache
	 */",
 "/**
	 * Whether the magic words __INDEX__ and __NOINDEX__ function for  this page.
	 *
	 * @return Boolean
	 */",
 "/**
	 * Returns the raw sort key to be used for categories, with the specified
	 * prefix.  This will be fed to Collation::getSortKey() to get a
	 * binary sortkey that can be used for actual sorting.
	 *
	 * @param $prefix string The prefix to be used, specified using
	 *   {{defaultsort:}} or like [[Category:Foo|prefix]].  Empty for no
	 *   prefix.
	 * @return string
	 */",
 "/**
	 * Get the language in which the content of this page is written.
	 * Defaults to $wgContLang, but in certain cases it can be e.g.
	 * $wgLang (such as special pages, which are in the user language).
	 *
	 * @since 1.18
	 * @return object Language
	 */",
 "/**
 * Represents a title within MediaWiki.
 * Optionally may contain an interwiki designation or namespace.
 * @note This class can fetch various kinds of data from the database;
 *       however, it does so inefficiently.
 *
 * @internal documentation reviewed 15 Mar 2010
 */",
 "/** Gagauz (Gagauz)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Andrijko Z.
 * @author Cuman
 * @author Emperyan
 * @author Reedy
 */",
 "/** Kara-Kalpak (Qaraqalpaqsha)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author AlefZet
 * @author Atabek
 * @author Emperyan
 * @author Jiemurat
 * @author Kaganer
 * @author Reedy
 * @author Urhixidur
 */",
 "/** Xhosa (isiXhosa)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Jcwf
 * @author Jose77
 */",
 "/**
	 * Delete one or more revisions from the database
	 * Do this inside a transaction
	 *
	 * @param $id Array of revision id values
	 * @param $dbw DatabaseBase class (needs to be a master)
	 */",
 "/**
 * Script that postprocesses XML dumps from dumpBackup.php to add page text
 *
 * Copyright (C) 2005 Brion Vibber <brion@pobox.com>
 * http://www.mediawiki.org/
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @file
 * @ingroup Maintenance
 */",
 "/**
	 * Overridden to include prefetch ratio if enabled.
	 */",
 "/**
	 * Fetch a text revision from the database, retrying in case of failure.
	 * This may survive some transitory errors by reconnecting, but
	 * may not survive a long-term server outage.
	 *
	 * FIXME: WTF? Why is it using a loop and then returning unconditionally?
	 */",
 "/**
	 * May throw a database error if, say, the server dies during query.
	 * @param $id
	 * @return bool|string
	 */",
 "/**
 * @ingroup Maintenance
 */",
 "/**
	 * @param $count int
	 * @param $forms array
	 * @return string
	 */",
 "/** Samogitian (??emait????ka)
 *
 * @ingroup Language
 *
 * @author Niklas Laxstr??m
 */",
 "/** Cantonese (??????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Horacewai2
 * @author Kaganer
 * @author KaiesTse
 * @author Mark85296341
 * @author Waihorace
 * @author William915
 * @author Wong128hk
 */",
 "/**
	 * @param $filename String basename of the file to check
	 * @param $expected boolean Expected result.
	 * @dataProvider dataIsAnimated
	 */",
 "/**
	 * @param $filename String
	 * @param $expected Integer Total image area
	 * @dataProvider dataGetImageArea
	 */",
 "/**
	 * @param $metadata String Serialized metadata
	 * @param $expected Integer One of the class constants of PNGHandler
	 * @dataProvider dataIsMetadataValid
	 */",
 "/**
	 * @param $filename String
	 * @param $expected String Serialized array
	 * @dataProvider dataGetMetadata
	 */",
 "/**
 * a fake language converter
 *
 * @ingroup Language
 */",
 "/**
	 * Get a cached language object for a given language code
	 * @param $code String
	 * @return Language
	 */",
 "/**
	 * Create a language object for a given language code
	 * @param $code String
	 * @return Language
	 */",
 "/**
	 * Returns true if a language code string is of a valid form, whether or
	 * not it exists. This includes codes which are used solely for
	 * customisation via the MediaWiki namespace.
	 *
	 * @param $code string
	 *
	 * @return bool
	 */",
 "/**
	 * Returns true if a language code is of a valid form for the purposes of
	 * internal customisation of MediaWiki, via Messages*.php.
	 *
	 * @param $code string
	 *
	 * @since 1.18
	 * @return bool
	 */",
 "/**
	 * @param $code
	 * @return String Name of the language class
	 */",
 "/**
	 * Includes language class files
	 *
	 * @param $class string Name of the language class
	 */",
 "/**
	 * Get the LocalisationCache instance
	 *
	 * @return LocalisationCache
	 */",
 "/**
	 * Reduce memory usage
	 */",
 "/**
	 * Hook which will be called if this is the content language.
	 * Descendants can use this to register hook functions or modify globals
	 */",
 "/**
	 * Same as getFallbacksFor for current language.
	 * @return array|bool
	 * @deprecated in 1.19
	 */",
 "/**
	 * @return array
	 * @since 1.19
	 */",
 "/**
	 * Exports $wgBookstoreListEn
	 * @return array
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * Arbitrarily set all of the namespace names at once. Mainly used for testing
	 * @param $namespaces Array of namespaces (id => name)
	 */",
 "/**
	 * A convenience function that returns the same thing as
	 * getNamespaces() except with the array values changed to \' \'
	 * where it found \'_\', useful for producing output to be displayed
	 * e.g. in <select> forms.
	 *
	 * @return array
	 */",
 "/**
	 * Get a namespace value by key
	 * <code>
	 * $mw_ns = $wgContLang->getNsText( NS_MEDIAWIKI );
	 * echo $mw_ns; // prints \'MediaWiki\'
	 * </code>
	 *
	 * @param $index Int: the array key of the namespace to return
	 * @return mixed, string if the namespace value exists, otherwise false
	 */",
 "/**
	 * A convenience function that returns the same thing as
	 * getNsText() except with \'_\' changed to \' \', useful for
	 * producing output.
	 *
	 * @param $index string
	 *
	 * @return array
	 */",
 "/**
	 * Returns gender-dependent namespace alias if available.
	 * @param $index Int: namespace index
	 * @param $gender String: gender key (male, female... )
	 * @return String
	 * @since 1.18
	 */",
 "/**
	 * Whether this language makes distinguishes genders for example in
	 * namespaces.
	 * @return bool
	 * @since 1.18
	 */",
 "/**
	 * Get a namespace key by value, case insensitive.
	 * Only matches namespace names for the current language, not the
	 * canonical ones defined in Namespace.php.
	 *
	 * @param $text String
	 * @return mixed An integer if $text is a valid value otherwise false
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * Get a namespace key by value, case insensitive.  Canonical namespace
	 * names override custom ones defined for the current language.
	 *
	 * @param $text String
	 * @return mixed An integer if $text is a valid value otherwise false
	 */",
 "/**
	 * short names for language variants used for language conversion links.
	 *
	 * @param $code String
	 * @param $usemsg bool Use the \"variantname-xyz\" message if it exists
	 * @return string
	 */",
 "/**
	 * @param $name string
	 * @return string
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * @return array|string
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * @param  $image
	 * @return array|null
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * @param  $tog
	 * @return string
	 */",
 "/**
	 * Get native language names, indexed by code.
	 * Only those defined in MediaWiki, no other data like CLDR.
	 * If $customisedOnly is true, only returns codes with a messages file
	 *
	 * @param $customisedOnly bool
	 *
	 * @return array
	 */",
 "/**
	 * Get translated language names. This is done on best effort and
	 * by default this is exactly the same as Language::getLanguageNames.
	 * The CLDR extension provides translated names.
	 * @param $code String Language code.
	 * @return Array language code => language name
	 * @since 1.18.0
	 */",
 "/**
	 * Get a message from the MediaWiki namespace.
	 *
	 * @param $msg String: message name
	 * @return string
	 */",
 "/**
	 * Get the native language name of $code.
	 * Only if defined in MediaWiki, no other data like CLDR.
	 * @param $code string
	 * @return string
	 */",
 "/**
	 * @param $key string
	 * @return string
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * @param $key string
	 * @return string
	 */",
 "/**
	 * @param $key string
	 * @return string
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * @param $key string
	 * @return string
	 */",
 "/**
	 * @param $key string
	 * @return string
	 */",
 "/**
	 * @param $key string
	 * @return string
	 */",
 "/**
	 * @param $key string
	 * @return string
	 */",
 "/**
	 * @param $key string
	 * @return string
	 */",
 "/**
	 * @param $key string
	 * @return string
	 */",
 "/**
	 * This is a workalike of PHP\'s date() function, but with better
	 * internationalisation, a reduced set of format characters, and a better
	 * escaping format.
	 *
	 * Supported format characters are dDjlNwzWFmMntLoYyaAgGhHiscrU. See the
	 * PHP manual for definitions. There are a number of extensions, which
	 * start with \"x\":
	 *
	 *    xn   Do not translate digits of the next numeric format character
	 *    xN   Toggle raw digit (xn) flag, stays set until explicitly unset
	 *    xr   Use roman numerals for the next numeric format character
	 *    xh   Use hebrew numerals for the next numeric format character
	 *    xx   Literal x
	 *    xg   Genitive month name
	 *
	 *    xij  j (day number) in Iranian calendar
	 *    xiF  F (month name) in Iranian calendar
	 *    xin  n (month number) in Iranian calendar
	 *    xiy  y (two digit year) in Iranian calendar
	 *    xiY  Y (full year) in Iranian calendar
	 *
	 *    xjj  j (day number) in Hebrew calendar
	 *    xjF  F (month name) in Hebrew calendar
	 *    xjt  t (days in month) in Hebrew calendar
	 *    xjx  xg (genitive month name) in Hebrew calendar
	 *    xjn  n (month number) in Hebrew calendar
	 *    xjY  Y (full year) in Hebrew calendar
	 *
	 *    xmj  j (day number) in Hijri calendar
	 *    xmF  F (month name) in Hijri calendar
	 *    xmn  n (month number) in Hijri calendar
	 *    xmY  Y (full year) in Hijri calendar
	 *
	 *    xkY  Y (full year) in Thai solar calendar. Months and days are
	 *                       identical to the Gregorian calendar
	 *    xoY  Y (full year) in Minguo calendar or Juche year.
	 *                       Months and days are identical to the
	 *                       Gregorian calendar
	 *    xtY  Y (full year) in Japanese nengo. Months and days are
	 *                       identical to the Gregorian calendar
	 *
	 * Characters enclosed in double quotes will be considered literal (with
	 * the quotes themselves removed). Unmatched quotes will be considered
	 * literal quotes. Example:
	 *
	 * \"The month is\" F       => The month is January
	 * i\'s\"                   => 20\'11\"
	 *
	 * Backslash escaping is also supported.
	 *
	 * Input timestamp is assumed to be pre-normalized to the desired local
	 * time zone, if any.
	 *
	 * @param $format String
	 * @param $ts String: 14-character timestamp
	 *      YYYYMMDDHHMMSS
	 *      01234567890123
	 * @todo handling of \"o\" format character for Iranian, Hebrew, Hijri & Thai?
	 *
	 * @return string
	 */",
 "/**
	 * Algorithm by Roozbeh Pournader and Mohammad Toossi to convert
	 * Gregorian dates to Iranian dates. Originally written in C, it
	 * is released under the terms of GNU Lesser General Public
	 * License. Conversion to PHP was performed by Niklas Laxstr??m.
	 *
	 * Link: http://www.farsiweb.info/jalali/jalali.c
	 *
	 * @param $ts string
	 *
	 * @return string
	 */",
 "/**
	 * Converting Gregorian dates to Hijri dates.
	 *
	 * Based on a PHP-Nuke block by Sharjeel which is released under GNU/GPL license
	 *
	 * @see http://phpnuke.org/modules.php?name=News&file=article&sid=8234&mode=thread&order=0&thold=0
	 *
	 * @param $ts string
	 *
	 * @return string
	 */",
 "/**
	 * Converting Gregorian dates to Hebrew dates.
	 *
	 * Based on a JavaScript code by Abu Mami and Yisrael Hersch
	 * (abu-mami@kaluach.net, http://www.kaluach.net), who permitted
	 * to translate the relevant functions into PHP and release them under
	 * GNU GPL.
	 *
	 * The months are counted from Tishrei = 1. In a leap year, Adar I is 13
	 * and Adar II is 14. In a non-leap year, Adar is 6.
	 *
	 * @param $ts string
	 *
	 * @return string
	 */",
 "/**
	 * This calculates the Hebrew year start, as days since 1 September.
	 * Based on Carl Friedrich Gauss algorithm for finding Easter date.
	 * Used for Hebrew date.
	 *
	 * @param $year int
	 *
	 * @return string
	 */",
 "/**
	 * Algorithm to convert Gregorian dates to Thai solar dates,
	 * Minguo dates or Minguo dates.
	 *
	 * Link: http://en.wikipedia.org/wiki/Thai_solar_calendar
	 *       http://en.wikipedia.org/wiki/Minguo_calendar
	 *       http://en.wikipedia.org/wiki/Japanese_era_name
	 *
	 * @param $ts String: 14-character timestamp
	 * @param $cName String: calender name
	 * @return Array: converted year, month, day
	 */",
 "/**
	 * Roman number formatting up to 3000
	 *
	 * @param $num int
	 *
	 * @return string
	 */",
 "/**
	 * Hebrew Gematria number formatting up to 9999
	 *
	 * @param $num int
	 *
	 * @return string
	 */",
 "/**
	 * Used by date() and time() to adjust the time output.
	 *
	 * @param $ts Int the time in date(\'YmdHis\') format
	 * @param $tz Mixed: adjust the time by this amount (default false, mean we
	 *            get user timecorrection setting)
	 * @return int
	 */",
 "/**
	 * This is meant to be used by time(), date(), and timeanddate() to get
	 * the date preference they\'re supposed to use, it should be used in
	 * all children.
	 *
	 *<code>
	 * function timeanddate([...], $format = true) {
	 * 	$datePreference = $this->dateFormat($format);
	 * [...]
	 * }
	 *</code>
	 *
	 * @param $usePrefs Mixed: if true, the user\'s preference is used
	 *                         if false, the site/language default is used
	 *                         if int/string, assumed to be a format.
	 * @return string
	 */",
 "/**
	 * Get a format string for a given type and preference
	 * @param $type string May be date, time or both
	 * @param $pref string The format name as it appears in Messages*.php
	 *
	 * @return string
	 */",
 "/**
	 * @param $ts Mixed: the time format which needs to be turned into a
	 *            date(\'YmdHis\') format with wfTimestamp(TS_MW,$ts)
	 * @param $adj Bool: whether to adjust the time output according to the
	 *             user configured offset ($timecorrection)
	 * @param $format Mixed: true to use user\'s date format preference
	 * @param $timecorrection String|bool the time offset as returned by
	 *                        validateTimeZone() in Special:Preferences
	 * @return string
	 */",
 "/**
	 * @param $ts Mixed: the time format which needs to be turned into a
	 *            date(\'YmdHis\') format with wfTimestamp(TS_MW,$ts)
	 * @param $adj Bool: whether to adjust the time output according to the
	 *             user configured offset ($timecorrection)
	 * @param $format Mixed: true to use user\'s date format preference
	 * @param $timecorrection String|bool the time offset as returned by
	 *                        validateTimeZone() in Special:Preferences
	 * @return string
	 */",
 "/**
	 * @param $ts Mixed: the time format which needs to be turned into a
	 *            date(\'YmdHis\') format with wfTimestamp(TS_MW,$ts)
	 * @param $adj Bool: whether to adjust the time output according to the
	 *             user configured offset ($timecorrection)
	 * @param $format Mixed: what format to return, if it\'s false output the
	 *                default one (default true)
	 * @param $timecorrection String|bool the time offset as returned by
	 *                        validateTimeZone() in Special:Preferences
	 * @return string
	 */",
 "/**
	 * Internal helper function for userDate(), userTime() and userTimeAndDate()
	 *
	 * @param $type String: can be \'date\', \'time\' or \'both\'
	 * @param $ts Mixed: the time format which needs to be turned into a
	 *            date(\'YmdHis\') format with wfTimestamp(TS_MW,$ts)
	 * @param $user User object used to get preferences for timezone and format
	 * @param $options Array, can contain the following keys:
	 *        - \'timecorrection\': time correction, can have the following values:
	 *             - true: use user\'s preference
	 *             - false: don\'t use time correction
	 *             - integer: value of time correction in minutes
	 *        - \'format\': format to use, can have the following values:
	 *             - true: use user\'s preference
	 *             - false: use default preference
	 *             - string: format to use
	 * @since 1.19
	 * @return String
	 */",
 "/**
	 * Get the formatted date for the given timestamp and formatted for
	 * the given user.
	 *
	 * @param $ts Mixed: the time format which needs to be turned into a
	 *            date(\'YmdHis\') format with wfTimestamp(TS_MW,$ts)
	 * @param $user User object used to get preferences for timezone and format
	 * @param $options Array, can contain the following keys:
	 *        - \'timecorrection\': time correction, can have the following values:
	 *             - true: use user\'s preference
	 *             - false: don\'t use time correction
	 *             - integer: value of time correction in minutes
	 *        - \'format\': format to use, can have the following values:
	 *             - true: use user\'s preference
	 *             - false: use default preference
	 *             - string: format to use
	 * @since 1.19
	 * @return String
	 */",
 "/**
	 * Get the formatted time for the given timestamp and formatted for
	 * the given user.
	 *
	 * @param $ts Mixed: the time format which needs to be turned into a
	 *            date(\'YmdHis\') format with wfTimestamp(TS_MW,$ts)
	 * @param $user User object used to get preferences for timezone and format
	 * @param $options Array, can contain the following keys:
	 *        - \'timecorrection\': time correction, can have the following values:
	 *             - true: use user\'s preference
	 *             - false: don\'t use time correction
	 *             - integer: value of time correction in minutes
	 *        - \'format\': format to use, can have the following values:
	 *             - true: use user\'s preference
	 *             - false: use default preference
	 *             - string: format to use
	 * @since 1.19
	 * @return String
	 */",
 "/**
	 * Get the formatted date and time for the given timestamp and formatted for
	 * the given user.
	 *
	 * @param $ts Mixed: the time format which needs to be turned into a
	 *            date(\'YmdHis\') format with wfTimestamp(TS_MW,$ts)
	 * @param $user User object used to get preferences for timezone and format
	 * @param $options Array, can contain the following keys:
	 *        - \'timecorrection\': time correction, can have the following values:
	 *             - true: use user\'s preference
	 *             - false: don\'t use time correction
	 *             - integer: value of time correction in minutes
	 *        - \'format\': format to use, can have the following values:
	 *             - true: use user\'s preference
	 *             - false: use default preference
	 *             - string: format to use
	 * @since 1.19
	 * @return String
	 */",
 "/**
	 * @param $key string
	 * @return array|null
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * @param $in
	 * @param $out
	 * @param $string
	 * @return string
	 */",
 "/**
	 * @param $matches array
	 * @return mixed|string
	 */",
 "/**
	 * @param $matches array
	 * @return string
	 */",
 "/**
	 * @param $matches array
	 * @return string
	 */",
 "/**
	 * @param $matches array
	 * @return string
	 */",
 "/**
	 * @param $matches array
	 * @return string
	 */",
 "/**
	 * @param $matches array
	 * @return string
	 */",
 "/**
	 * Make a string\'s first character uppercase
	 *
	 * @param $str string
	 *
	 * @return string
	 */",
 "/**
	 * Convert a string to uppercase
	 *
	 * @param $str string
	 * @param $first bool
	 *
	 * @return string
	 */",
 "/**
	 * @param $str string
	 * @return mixed|string
	 */",
 "/**
	 * @param $str string
	 * @param $first bool
	 * @return mixed|string
	 */",
 "/**
	 * @param $str string
	 * @return bool
	 */",
 "/**
	 * @param $str string
	 * @return mixed|string
	 */",
 "/**
	 * capitalize words at word breaks
	 *
	 * @param $str string
	 * @return mixed
	 */",
 "/**
	 * Return a case-folded representation of $s
	 *
	 * This is a representation such that caseFold($s1)==caseFold($s2) if $s1
	 * and $s2 are the same except for the case of their characters. It is not
	 * necessary for the value returned to make sense when displayed.
	 *
	 * Do *not* perform any other normalisation in this function. If a caller
	 * uses this function when it should be using a more general normalisation
	 * function, then fix the caller.
	 *
	 * @param $s string
	 *
	 * @return string
	 */",
 "/**
	 * @param $s string
	 * @return string
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * Most writing systems use whitespace to break up words.
	 * Some languages such as Chinese don\'t conventionally do this,
	 * which requires special handling when breaking up words for
	 * searching etc.
	 *
	 * @return bool
	 */",
 "/**
	 * Some languages such as Chinese require word segmentation,
	 * Specify such segmentation when overridden in derived class.
	 *
	 * @param $string String
	 * @return String
	 */",
 "/**
	 * Some languages have special punctuation need to be normalized.
	 * Make such changes here.
	 *
	 * @param $string String
	 * @return String
	 */",
 "/**
	 * convert double-width roman characters to single-width.
	 * range: ff00-ff5f ~= 0020-007f
	 *
	 * @param $string string
	 *
	 * @return string
	 */",
 "/**
	 * @param $string string
	 * @param $pattern string
	 * @return string
	 */",
 "/**
	 * @param $termsArray array
	 * @return array
	 */",
 "/**
	 * Get the first character of a string.
	 *
	 * @param $s string
	 * @return string
	 */",
 "/**
	 * @param $s string
	 * @return string
	 */",
 "/**
	 * @param $s string
	 * @return string
	 */",
 "/**
	 * Convert a UTF-8 string to normal form C. In Malayalam and Arabic, this
	 * also cleans up certain backwards-compatible sequences, converting them
	 * to the modern Unicode equivalent.
	 *
	 * This is language-specific for performance reasons only.
	 *
	 * @param $s string
	 *
	 * @return string
	 */",
 "/**
	 * Transform a string using serialized data stored in the given file (which
	 * must be in the serialized subdirectory of $IP). The file contains pairs
	 * mapping source characters to destination characters.
	 *
	 * The data is cached in process memory. This will go faster if you have the
	 * FastStringSearch extension.
	 *
	 * @param $file string
	 * @param $string string
	 *
	 * @return string
	 */",
 "/**
	 * For right-to-left language support
	 *
	 * @return bool
	 */",
 "/**
	 * Return the correct HTML \'dir\' attribute value for this language.
	 * @return String
	 */",
 "/**
	 * Return \'left\' or \'right\' as appropriate alignment for line-start
	 * for this language\'s text direction.
	 *
	 * Should be equivalent to CSS3 \'start\' text-align value....
	 *
	 * @return String
	 */",
 "/**
	 * Return \'right\' or \'left\' as appropriate alignment for line-end
	 * for this language\'s text direction.
	 *
	 * Should be equivalent to CSS3 \'end\' text-align value....
	 *
	 * @return String
	 */",
 "/**
	 * A hidden direction mark (LRM or RLM), depending on the language direction
	 *
	 * @param $opposite Boolean Get the direction mark opposite to your language
	 * @return string
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * An arrow, depending on the language direction
	 *
	 * @return string
	 */",
 "/**
	 * To allow \"foo[[bar]]\" to extend the link over the whole word \"foobar\"
	 *
	 * @return bool
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * Fill a MagicWord object with data from here
	 *
	 * @param $mw
	 */",
 "/**
	 * Add magic words to the extension array
	 *
	 * @param $newWords array
	 */",
 "/**
	 * Get special page names, as an associative array
	 *   case folded alias => real name
	 */",
 "/**
	 * Italic is unsuitable for some languages
	 *
	 * @param $text String: the text to be emphasized.
	 * @return string
	 */",
 "/**
	  * Normally we output all numbers in plain en_US style, that is
	  * 293,291.235 for twohundredninetythreethousand-twohundredninetyone
	  * point twohundredthirtyfive. However this is not suitable for all
	  * languages, some such as Pakaran want ?????????,?????????.????????? and others such as
	  * Icelandic just want to use commas instead of dots, and dots instead
	  * of commas like \"293.291,235\".
	  *
	  * An example of this function being called:
	  * <code>
	  * wfMsg( \'message\', $wgLang->formatNum( $num ) )
	  * </code>
	  *
	  * See LanguageGu.php for the Gujarati implementation and
	  * $separatorTransformTable on MessageIs.php for
	  * the , => . and . => , implementation.
	  *
	  * @todo check if it\'s viable to use localeconv() for the decimal
	  *       separator thing.
	  * @param $number Mixed: the string to be formatted, should be an integer
	  *        or a floating point number.
	  * @param $nocommafy Bool: set to true for special numbers like dates
	  * @return string
	  */",
 "/**
	 * @param $number string
	 * @return string
	 */",
 "/**
	 * Adds commas to a given number
	 * @since 1.19
	 * @param $_ mixed
	 * @return string
	 */",
 "/**
	 * @return String
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * Take a list of strings and build a locale-friendly comma-separated
	 * list, using the local comma-separator message.
	 * The last two strings are chained with an \"and\".
	 *
	 * @param $l Array
	 * @return string
	 */",
 "/**
	 * Take a list of strings and build a locale-friendly comma-separated
	 * list, using the local comma-separator message.
	 * @param $list array of strings to put in a comma list
	 * @return string
	 */",
 "/**
	 * Take a list of strings and build a locale-friendly semicolon-separated
	 * list, using the local semicolon-separator message.
	 * @param $list array of strings to put in a semicolon list
	 * @return string
	 */",
 "/**
	 * Same as commaList, but separate it with the pipe instead.
	 * @param $list array of strings to put in a pipe list
	 * @return string
	 */",
 "/**
	 * Truncate a string to a specified length in bytes, appending an optional
	 * string (e.g. for ellipses)
	 *
	 * The database offers limited byte lengths for some columns in the database;
	 * multi-byte character sets mean we need to ensure that only whole characters
	 * are included, otherwise broken characters can be passed to the user
	 *
	 * If $length is negative, the string will be truncated from the beginning
	 *
	 * @param $string String to truncate
	 * @param $length Int: maximum length (including ellipses)
	 * @param $ellipsis String to append to the truncated text
	 * @param $adjustLength Boolean: Subtract length of ellipsis from $length.
	 *	$adjustLength was introduced in 1.18, before that behaved as if false.
	 * @return string
	 */",
 "/**
	 * Remove bytes that represent an incomplete Unicode character
	 * at the end of string (e.g. bytes of the char are missing)
	 *
	 * @param $string String
	 * @return string
	 */",
 "/**
	 * Remove bytes that represent an incomplete Unicode character
	 * at the start of string (e.g. bytes of the char are missing)
	 *
	 * @param $string String
	 * @return string
	 */",
 "/**
	 * Truncate a string of valid HTML to a specified length in bytes,
	 * appending an optional string (e.g. for ellipses), and return valid HTML
	 *
	 * This is only intended for styled/linked text, such as HTML with
	 * tags like <span> and <a>, were the tags are self-contained (valid HTML).
	 * Also, this will not detect things like \"display:none\" CSS.
	 *
	 * Note: since 1.18 you do not need to leave extra room in $length for ellipses.
	 *
	 * @param string $text HTML string to truncate
	 * @param int $length (zero/positive) Maximum length (including ellipses)
	 * @param string $ellipsis String to append to the truncated text
	 * @return string
	 */",
 "/**
	 * truncateHtml() helper function
	 * like strcspn() but adds the skipped chars to $ret
	 *
	 * @param $ret
	 * @param $text
	 * @param $search
	 * @param $start
	 * @param $len
	 * @return int
	 */",
 "/**
	 * truncateHtml() helper function
	 * (a) push or pop $tag from $openTags as needed
	 * (b) clear $tag value
	 * @param &$tag string Current HTML tag name we are looking at
	 * @param $tagType int (0-open tag, 1-close tag)
	 * @param $lastCh char|string Character before the \'>\' that ended this tag
	 * @param &$openTags array Open tag stack (not accounting for $tag)
	 */",
 "/**
	 * Grammatical transformations, needed for inflected languages
	 * Invoked by putting {{grammar:case|word}} in a message
	 *
	 * @param $word string
	 * @param $case string
	 * @return string
	 */",
 "/**
	 * Provides an alternative text depending on specified gender.
	 * Usage {{gender:username|masculine|feminine|neutral}}.
	 * username is optional, in which case the gender of current user is used,
	 * but only in (some) interface messages; otherwise default gender is used.
	 *
	 * If no forms are given, an empty string is returned. If only one form is
	 * given, it will be returned unconditionally. These details are implied by
	 * the caller and cannot be overridden in subclasses.
	 *
	 * If more than one form is given, the default is to use the neutral one
	 * if it is specified, and to use the masculine one otherwise. These
	 * details can be overridden in subclasses.
	 *
	 * @param $gender string
	 * @param $forms array
	 *
	 * @return string
	 */",
 "/**
	 * Plural form transformations, needed for some languages.
	 * For example, there are 3 form of plural in Russian and Polish,
	 * depending on \"count mod 10\". See [[w:Plural]]
	 * For English it is pretty simple.
	 *
	 * Invoked by putting {{plural:count|wordform1|wordform2}}
	 * or {{plural:count|wordform1|wordform2|wordform3}}
	 *
	 * Example: {{plural:{{NUMBEROFARTICLES}}|article|articles}}
	 *
	 * @param $count Integer: non-localized number
	 * @param $forms Array: different plural forms
	 * @return string Correct form of plural for $count in this language
	 */",
 "/**
	 * Checks that convertPlural was given an array and pads it to requested
	 * amount of forms by copying the last one.
	 *
	 * @param $count Integer: How many forms should there be at least
	 * @param $forms Array of forms given to convertPlural
	 * @return array Padded array of forms or an exception if not an array
	 */",
 "/**
	 * @todo Maybe translate block durations.  Note that this function is somewhat misnamed: it
	 * deals with translating the *duration* (\"1 week\", \"4 days\", etc), not the expiry time
	 * (which is an absolute timestamp). Please note: do NOT add this blindly, as it is used
	 * on old expiry lengths recorded in log entries. You\'d need to provide the start date to
	 * match up with it.
	 *
	 * @param $str String: the validated block duration in English
	 * @return Somehow translated block duration
	 * @see LanguageFi.php for example implementation
	 */",
 "/**
	 * languages like Chinese need to be segmented in order for the diff
	 * to be of any use
	 *
	 * @param $text String
	 * @return String
	 */",
 "/**
	 * and unsegment to show the result
	 *
	 * @param $text String
	 * @return String
	 */",
 "/**
	 * Return the LanguageConverter used in the Language
	 *
	 * @since 1.19
	 * @return LanguageConverter
	 */",
 "/**
	 * convert text to all supported variants
	 *
	 * @param $text string
	 * @return array
	 */",
 "/**
	 * convert text to different variants of a language.
	 *
	 * @param $text string
	 * @return string
	 */",
 "/**
	 * Convert a Title object to a string in the preferred variant
	 *
	 * @param $title Title
	 * @return string
	 */",
 "/**
	 * Check if this is a language with variants
	 *
	 * @return bool
	 */",
 "/**
	 * Check if the language has the specific variant
	 *
	 * @since 1.19
	 * @param $variant string
	 * @return bool
	 */",
 "/**
	 * Put custom tags (e.g. -{ }-) around math to prevent conversion
	 *
	 * @param $text string
	 * @return string
	 */",
 "/**
	 * Perform output conversion on a string, and encode for safe HTML output.
	 * @param $text String text to be converted
	 * @param $isTitle Bool whether this conversion is for the article title
	 * @return string
	 * @todo this should get integrated somewhere sane
	 */",
 "/**
	 * @param $key string
	 * @return string
	 */",
 "/**
	 * Get the list of variants supported by this language
	 * see sample implementation in LanguageZh.php
	 *
	 * @return array an array of language codes
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * If a language supports multiple variants, it is
	 * possible that non-existing link in one variant
	 * actually exists in another variant. this function
	 * tries to find it. See e.g. LanguageZh.php
	 *
	 * @param $link String: the name of the link
	 * @param $nt Mixed: the title object of the link
	 * @param $ignoreOtherCond Boolean: to disable other conditions when
	 *      we need to transclude a template or update a category\'s link
	 * @return null the input parameters may be modified upon return
	 */",
 "/**
	 * If a language supports multiple variants, converts text
	 * into an array of all possible variants of the text:
	 *  \'variant\' => text in that variant
	 *
	 * @deprecated since 1.17 Use autoConvertToAllVariants()
	 *
	 * @param $text string
	 *
	 * @return string
	 */",
 "/**
	 * returns language specific options used by User::getPageRenderHash()
	 * for example, the preferred language variant
	 *
	 * @return string
	 */",
 "/**
	 * For languages that support multiple variants, the title of an
	 * article may be displayed differently in different variants. this
	 * function returns the apporiate title defined in the body of the article.
	 *
	 * @return string
	 */",
 "/**
	 * Enclose a string with the \"no conversion\" tag. This is used by
	 * various functions in the Parser
	 *
	 * @param $text String: text to be tagged for no conversion
	 * @param $noParse bool
	 * @return string the tagged text
	 */",
 "/**
	 * A regular expression to match legal word-trailing characters
	 * which should be merged onto a link of the form [[foo]]bar.
	 *
	 * @return string
	 */",
 "/**
	 * @return Language
	 */",
 "/**
	 * Get the RFC 3066 code for this language object
	 *
	 * NOTE: The return value of this function is NOT HTML-safe and must be escaped with
	 * htmlspecialchars() or similar
	 *
	 * @return string
	 */",
 "/**
	 * Get the code in Bcp47 format which we can use
	 * inside of html lang=\"\" tags.
	 *
	 * NOTE: The return value of this function is NOT HTML-safe and must be escaped with
	 * htmlspecialchars() or similar.
	 *
	 * @since 1.19
	 * @return string
	 */",
 "/**
	 * @param $code string
	 */",
 "/**
	 * Get the name of a file for a certain language code
	 * @param $prefix string Prepend this to the filename
	 * @param $code string Language code
	 * @param $suffix string Append this to the filename
	 * @return string $prefix . $mangledCode . $suffix
	 */",
 "/**
	 * Get the language code from a file name. Inverse of getFileName()
	 * @param $filename string $prefix . $languageCode . $suffix
	 * @param $prefix string Prefix before the language code
	 * @param $suffix string Suffix after the language code
	 * @return string Language code, or false if $prefix or $suffix isn\'t found
	 */",
 "/**
	 * @param $code string
	 * @return string
	 */",
 "/**
	 * @param $code string
	 * @return string
	 */",
 "/**
	 * Get the first fallback for a given language.
	 *
	 * @param $code string
	 *
	 * @return false|string
	 */",
 "/**
	 * Get the ordered list of fallback languages.
	 *
	 * @since 1.19
	 * @param $code string Language code
	 * @return array
	 */",
 "/**
	 * Get all messages for a given language
	 * WARNING: this may take a long time. If you just need all message *keys*
	 * but need the *contents* of only a few messages, consider using getMessageKeysFor().
	 *
	 * @param $code string
	 *
	 * @return array
	 */",
 "/**
	 * Get a message for a given language
	 *
	 * @param $key string
	 * @param $code string
	 *
	 * @return string
	 */",
 "/**
	 * Get all message keys for a given language. This is a faster alternative to
	 * array_keys( Language::getMessagesFor( $code ) )
	 *
	 * @since 1.19
	 * @param $code string Language code
	 * @return array of message keys (strings)
	 */",
 "/**
	 * @param $talk
	 * @return mixed
	 */",
 "/**
	 * @param $m string
	 * @return string
	 */",
 "/**
	 * @throws MWException
	 * @return array
	 */",
 "/**
	 * Decode an expiry (block, protection, etc) which has come from the DB
	 *
	 * @param $expiry String: Database expiry String
	 * @param $format Bool|Int true to process using language functions, or TS_ constant
	 *     to return the expiry in a given timestamp
	 * @return String
	 */",
 "/**
	 * @todo Document
	 * @param $seconds int|float
	 * @param $format Array Optional
	 *		If $format[\'avoid\'] == \'avoidseconds\' - don\'t mention seconds if $seconds >= 1 hour
	 *		If $format[\'avoid\'] == \'avoidminutes\' - don\'t mention seconds/minutes if $seconds > 48 hours
	 *		If $format[\'noabbrevs\'] is true - use \'seconds\' and friends instead of \'seconds-abbrev\' and friends
	 *		For backwards compatibility, $format may also be one of the strings \'avoidseconds\' or \'avoidminutes\'
	 * @return string
	 */",
 "/**
	 * Format a bitrate for output, using an appropriate
	 * unit (bps, kbps, Mbps, Gbps, Tbps, Pbps, Ebps, Zbps or Ybps) according to the magnitude in question
	 *
	 * This use base 1000. For base 1024 use formatSize(), for another base
	 * see formatComputingNumbers()
	 *
	 * @param $bps int
	 * @return string
	 */",
 "/**
	 * @param $size int Size of the unit
	 * @param $boundary int Size boundary (1000, or 1024 in most cases)
	 * @param $messageKey string Message key to be uesd
	 * @return string
	 */",
 "/**
	 * Format a size in bytes for output, using an appropriate
	 * unit (B, KB, MB, GB, TB, PB, EB, ZB or YB) according to the magnitude in question
	 *
	 * This method use base 1024. For base 1000 use formatBitrate(), for
	 * another base see formatComputingNumbers()
	 *
	 * @param $size int Size to format
	 * @return string Plain text (not HTML)
	 */",
 "/**
	 * Make a list item, used by various special pages
	 *
	 * @param $page String Page link
	 * @param $details String Text between brackets
	 * @param $oppositedm Boolean Add the direction mark opposite to your
	 *                    language, to display text properly
	 * @return String
	 */",
 "/**
	 * Generate (prev x| next x) (20|50|100...) type links for paging
	 *
	 * @param $title Title object to link
	 * @param $offset Integer offset parameter
	 * @param $limit Integer limit parameter
	 * @param $query String optional URL query parameter string
	 * @param $atend Bool optional param for specified if this is the last page
	 * @return String
	 */",
 "/**
	 * Helper function for viewPrevNext() that generates links
	 *
	 * @param $title Title object to link
	 * @param $offset Integer offset parameter
	 * @param $limit Integer limit parameter
	 * @param $query Array extra query parameters
	 * @param $link String text to use for the link; will be escaped
	 * @param $tooltipMsg String name of the message to use as tooltip
	 * @param $class String value of the \"class\" attribute of the link
	 * @return String HTML fragment
	 */",
 "/**
	 * Get the conversion rule title, if any.
	 *
	 * @return string
	 */",
 "/**
 * Internationalisation code
 * @ingroup Language
 */",
 "/**
 * @file
 * @ingroup Maintenance
 * @copyright Copyright ???? Wikimedia Deuschland, 2009
 * @author Hallo Welt! Medienwerkstatt GmbH
 * @author Markus Glaser, Dan Nessett, Priyanka Dhanda
 * initial idea by Daniel Kinzler
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 * http://www.gnu.org/copyleft/gpl.html
 */",
 "/**
	 * @param $resultPageSet ApiPageSet
	 * @return void
	 */",
 "/**
 * This query action allows clients to retrieve a list of pages
 * on the logged-in user\'s watchlist.
 *
 * @ingroup API
 */",
 "/** Cebuano (Cebuano)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Abastillas
 * @author Jordz
 * @author Palang hernan
 * @author Reedy
 * @author ???????? ????????????????
 */",
 "/**
	 * Callback function to output a restriction
	 * @param $row object Protected title
	 * @return string Formatted <li> element
	 */",
 "/**
	 * @param $namespace Integer
	 * @param $type String: restriction type
	 * @param $level String: restriction level
	 * @param $sizetype String: \"min\" or \"max\"
	 * @param $size Integer
	 * @param $indefOnly Boolean: only indefinie protection
	 * @param $cascadeOnly Boolean: only cascading protection
	 * @return String: input form
	 */",
 "/**
	 * Prepare the namespace filter drop-down; standard namespace
	 * selector, sans the MediaWiki namespace
	 *
	 * @param $namespace Mixed: pre-select namespace
	 * @return String
	 */",
 "/**
	 * @return string Formatted HTML
	 */",
 "/**
	 * @return string Formatted HTML
	 */",
 "/**
	 * @return string Formatted HTML
	 */",
 "/**
	 * Creates the input label of the restriction type
	 * @param $pr_type string Protection type
	 * @return string Formatted HTML
	 */",
 "/**
	 * Creates the input label of the restriction level
	 * @param $pr_level string Protection level
	 * @return string Formatted HTML
	 */",
 "/**
 * A special page that lists protected pages
 *
 * @ingroup SpecialPage
 */",
 "/**
 * @todo document
 * @ingroup Pager
 */",
 "/**
	 * Constructor
	 */",
 "/**
	 * Do various kinds of initialisation on the first call of the parser
	 */",
 "/**
	 * Create a link hook, e.g. [[Namepsace:...|display}}
	 * The callback function should have the form:
	 *    function myLinkCallback( $parser, $holders, $markers,
	 *    	Title $title, $titleText, &$sortText = null, &$leadingColon = false ) { ... }
	 *
	 * Or with SLH_PATTERN:
	 *    function myLinkCallback( $parser, $holders, $markers, )
	 *    	&$titleText, &$sortText = null, &$leadingColon = false ) { ... }
	 *
	 * The callback may either return a number of different possible values:
	 * String) Text result of the link
	 * True) (Treat as link) Parse the link according to normal link rules
	 * False) (Bad link) Just output the raw wikitext (You may modify the text first)
	 *
	 * @param $ns Integer or String: the Namespace ID or regex pattern if SLH_PATTERN is set
	 * @param $callback Mixed: the callback function (and object) to use
	 * @param $flags Integer: a combination of the following flags:
	 *     SLH_PATTERN   Use a regex link pattern rather than a namespace
	 *
	 * @return The old callback function for this name, if any
	 */",
 "/**
	 * Get all registered link hook identifiers
	 *
	 * @return array
	 */",
 "/**
	 * Process [[ ]] wikilinks
	 * @return LinkHolderArray
	 *
	 * @private
	 */",
 "/**
 * Parser with LinkHooks experiment
 * @ingroup Parser
 */",
 "/**
	 * @param $resultPageSet ApiPageSet
	 * @return void
	 */",
 "/**
 * Query module to enumerate all create-protected pages.
 *
 * @ingroup API
 */",
 "/**
 * Implements the conformance test at:
 * http://www.unicode.org/Public/UNIDATA/NormalizationTest.txt
 *
 * Copyright ?? 2004 Brion Vibber <brion@pobox.com>
 * http://www.mediawiki.org/
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @file
 * @ingroup UtfNormal
 */",
 "/**
	 * @ignore
	 */",
 "/**
 * Basic pager interface.
 * @ingroup Pager
 */",
 "/**
	 * Do the query, using information from the object context. This function
	 * has been kept minimal to make it overridable if necessary, to allow for
	 * result sets formed from multiple DB queries.
	 */",
 "/**
	 * @return ResultWrapper The result wrapper.
	 */",
 "/**
	 * Set the offset from an other source than the request
	 *
	 * @param $offset Int|String
	 */",
 "/**
	 * Set the limit from an other source than the request
	 *
	 * @param $limit Int|String
	 */",
 "/**
	 * Extract some useful data from the result object for use by
	 * the navigation bar, put it into $this
	 *
	 * @param $offset String: index offset, inclusive
	 * @param $limit Integer: exact query limit
	 * @param $res ResultWrapper
	 */",
 "/**
	 * Get some text to go in brackets in the \"function name\" part of the SQL comment
	 *
	 * @return String
	 */",
 "/**
	 * Do a query with specified parameters, rather than using the object
	 * context
	 *
	 * @param $offset String: index offset, inclusive
	 * @param $limit Integer: exact query limit
	 * @param $descending Boolean: query direction, false for ascending, true for descending
	 * @return ResultWrapper
	 */",
 "/**
	 * Pre-process results; useful for performing batch existence checks, etc.
	 *
	 * @param $result ResultWrapper
	 */",
 "/**
	 * Get the formatted result list. Calls getStartBody(), formatRow() and
	 * getEndBody(), concatenates the results and returns them.
	 *
	 * @return String
	 */",
 "/**
	 * Make a self-link
	 *
	 * @param $text String: text displayed on the link
	 * @param $query Array: associative array of paramter to be in the query string
	 * @param $type String: value of the \"rel\" attribute
	 * @return String: HTML fragment
	 */",
 "/**
	 * Called from getBody(), before getStartBody() is called and
	 * after doQuery() was called. This will be called only if there
	 * are rows in the result set.
	 *
	 * @return void
	 */",
 "/**
	 * Hook into getBody(), allows text to be inserted at the start. This
	 * will be called even if there are no rows in the result set.
	 *
	 * @return String
	 */",
 "/**
	 * Hook into getBody() for the end of the list
	 *
	 * @return String
	 */",
 "/**
	 * Hook into getBody(), for the bit between the start and the
	 * end when there are no rows
	 *
	 * @return String
	 */",
 "/**
	 * Get an array of query parameters that should be put into self-links.
	 * By default, all parameters passed in the URL are used, except for a
	 * short blacklist.
	 *
	 * @return Associative array
	 */",
 "/**
	 * Get the number of rows in the result set
	 *
	 * @return Integer
	 */",
 "/**
	 * Get a URL query array for the prev, next, first and last links.
	 *
	 * @return Array
	 */",
 "/**
	 * Returns whether to show the \"navigation bar\"
	 *
	 * @return Boolean
	 */",
 "/**
	 * Get paging links. If a link is disabled, the item from $disabledTexts
	 * will be used. If there is no such item, the unlinked text from
	 * $linkTexts will be used. Both $linkTexts and $disabledTexts are arrays
	 * of HTML.
	 *
	 * @param $linkTexts Array
	 * @param $disabledTexts Array
	 * @return Array
	 */",
 "/**
	 * Abstract formatting function. This should return an HTML string
	 * representing the result row $row. Rows will be concatenated and
	 * returned by getBody()
	 *
	 * @param $row Object: database row
	 * @return String
	 */",
 "/**
	 * This function should be overridden to provide all parameters
	 * needed for the main paged query. It returns an associative
	 * array with the following elements:
	 *    tables => Table(s) for passing to Database::select()
	 *    fields => Field(s) for passing to Database::select(), may be *
	 *    conds => WHERE conditions
	 *    options => option array
	 *    join_conds => JOIN conditions
	 *
	 * @return Array
	 */",
 "/**
	 * This function should be overridden to return the name of the index fi-
	 * eld.  If the pager supports multiple orders, it may return an array of
	 * \'querykey\' => \'indexfield\' pairs, so that a request with &count=querykey
	 * will use indexfield to sort.  In this case, the first returned key is
	 * the default.
	 *
	 * Needless to say, it\'s really not a good idea to use a non-unique index
	 * for this!  That won\'t page right.
	 *
	 * @return string|Array
	 */",
 "/**
	 * This function should be overridden to return the names of secondary columns
	 * to order by in addition to the column in getIndexField(). These fields will
	 * not be used in the pager offset or in any links for users.
	 *
	 * If getIndexField() returns an array of \'querykey\' => \'indexfield\' pairs then
	 * this must return a corresponding array of \'querykey\' => array( fields...) pairs
	 * in order for a request with &count=querykey to use array( fields...) to sort.
	 *
	 * This is useful for pagers that GROUP BY a unique column (say page_id)
	 * and ORDER BY another (say page_len). Using GROUP BY and ORDER BY both on
	 * page_len,page_id avoids temp tables (given a page_len index). This would
	 * also work if page_id was non-unique but we had a page_len,page_id index.
	 *
	 * @return Array
	 */",
 "/**
	 * Return the default sorting direction: false for ascending, true for de-
	 * scending.  You can also have an associative array of ordertype => dir,
	 * if multiple order types are supported.  In this case getIndexField()
	 * must return an array, and the keys of that must exactly match the keys
	 * of this.
	 *
	 * For backward compatibility, this method\'s return value will be ignored
	 * if $this->mDefaultDirection is already set when the constructor is
	 * called, for instance if it\'s statically initialized.  In that case the
	 * value of that variable (which must be a boolean) will be used.
	 *
	 * Note that despite its name, this does not return the value of the
	 * $this->mDefaultDirection member variable.  That\'s the default for this
	 * particular instantiation, which is a single value.  This is the set of
	 * all defaults for the class.
	 *
	 * @return Boolean
	 */",
 "/**
 * IndexPager is an efficient pager which uses a (roughly unique) index in the
 * data set to implement paging, rather than a \"LIMIT offset,limit\" clause.
 * In MySQL, such a limit/offset clause requires counting through the
 * specified number of offset rows to find the desired data, which can be
 * expensive for large offsets.
 *
 * ReverseChronologicalPager is a child class of the abstract IndexPager, and
 * contains  some formatting and display code which is specific to the use of
 * timestamps as  indexes. Here is a synopsis of its operation:
 *
 *    * The query is specified by the offset, limit and direction (dir)
 *      parameters, in addition to any subclass-specific parameters.
 *    * The offset is the non-inclusive start of the DB query. A row with an
 *      index value equal to the offset will never be shown.
 *    * The query may either be done backwards, where the rows are returned by
 *      the database in the opposite order to which they are displayed to the
 *      user, or forwards. This is specified by the \"dir\" parameter, dir=prev
 *      means backwards, anything else means forwards. The offset value
 *      specifies the start of the database result set, which may be either
 *      the start or end of the displayed data set. This allows \"previous\"
 *      links to be implemented without knowledge of the index value at the
 *      start of the previous page.
 *    * An additional row beyond the user-specified limit is always requested.
 *      This allows us to tell whether we should display a \"next\" link in the
 *      case of forwards mode, or a \"previous\" link in the case of backwards
 *      mode. Determining whether to display the other link (the one for the
 *      page before the start of the database result set) can be done
 *      heuristically by examining the offset.
 *
 *    * An empty offset indicates that the offset condition should be omitted
 *      from the query. This naturally produces either the first page or the
 *      last page depending on the dir parameter.
 *
 *  Subclassing the pager to implement concrete functionality should be fairly
 *  simple, please see the examples in HistoryPage.php and
 *  SpecialBlockList.php. You just need to override formatRow(),
 *  getQueryInfo() and getIndexField(). Don\'t forget to call the parent
 *  constructor if you override it.
 *
 * @ingroup Pager
 */",
 "/**
	 * Shamelessly stolen bits from ReverseChronologicalPager,
	 * didn\'t want to do class magic as may be still revamped
	 *
	 * @return String HTML
	 */",
 "/**
	 * If this supports multiple order type messages, give the message key for
	 * enabling each one in getNavigationBar.  The return type is an associa-
	 * tive array whose keys must exactly match the keys of the array returned
	 * by getIndexField(), and whose values are message keys.
	 *
	 * @return Array
	 */",
 "/**
 * IndexPager with an alphabetic list and a formatted navigation bar
 * @ingroup Pager
 */",
 "/**
 * IndexPager with a formatted navigation bar
 * @ingroup Pager
 */",
 "/**
	 * @param $row Array
	 * @return String HTML
	 */",
 "/**
	 * Get a class name to be applied to the given row.
	 *
	 * @param $row Object: the database result row
	 * @return String
	 */",
 "/**
	 * Get attributes to be applied to the given row.
	 *
	 * @param $row Object: the database result row
	 * @return Array of <attr> => <value>
	 */",
 "/**
	 * Get any extra attributes to be applied to the given cell. Don\'t
	 * take this as an excuse to hardcode styles; use classes and
	 * CSS instead.  Row context is available in $this->mCurrentRow
	 *
	 * @param $field String The column
	 * @param $value String The cell contents
	 * @return Array of attr => value
	 */",
 "/**
	 * A navigation bar with images
	 * @return String HTML
	 */",
 "/**
	 * Get a <select> element which has options for each of the allowed limits
	 *
	 * @return String: HTML fragment
	 */",
 "/**
	 * Get <input type=\"hidden\"> elements for use in a method=\"get\" form.
	 * Resubmits all defined elements of the query string, except for a
	 * blacklist, passed in the $blacklist parameter.
	 *
	 * @param $blacklist Array parameters from the request query which should not be resubmitted
	 * @return String: HTML fragment
	 */",
 "/**
	 * Get a form containing a limit selection dropdown
	 *
	 * @return String: HTML fragment
	 */",
 "/**
	 * Gets a limit selection dropdown
	 *
	 * @return string
	 */",
 "/**
	 * Return true if the named field should be sortable by the UI, false
	 * otherwise
	 *
	 * @param $field String
	 */",
 "/**
	 * Format a table cell. The return value should be HTML, but use an empty
	 * string not &#160; for empty cells. Do not include the <td> and </td>.
	 *
	 * The current result row is available as $this->mCurrentRow, in case you
	 * need more context.
	 *
	 * @param $name String: the database field name
	 * @param $value String: the value retrieved from the database
	 */",
 "/**
	 * The database field name used as a default sort order
	 */",
 "/**
	 * An array mapping database field names to a textual description of the
	 * field name, for use in the table header. The description should be plain
	 * text, it will be HTML-escaped later.
	 *
	 * @return Array
	 */",
 "/**
 * Table-based display with a user-selectable sort order
 * @ingroup Pager
 */",
 "/**
	 * @param $obj ApiBase
	 * @return ApiResult
	 */",
 "/**
 * @ingroup API
 */",
 "/** Serbian (???????????? / Srpski)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Misos
 * @author Terik
 * @author ?????????? ??????????????????
 * @author ?????????????? ????????????????????
 */",
 "/** Oromo (Oromoo)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Diroma Elias (on om.wikipedia.org)
 * @author Johannes Rohr (on om.wikipedia.org)
 * @author Malafaya
 * @author Node ue
 */",
 "/**
	 * @return mixed
	 */",
 "/**
 * This diff implementation is mainly lifted from the LCS algorithm of the Eclipse project which
 * in turn is based on Myers\' \"An O(ND) difference algorithm and its variations\"
 * (http://citeseer.ist.psu.edu/myers86ond.html) with range compression (see Wu et al.\'s
 * \"An O(NP) Sequence Comparison Algorithm\").
 *
 * This implementation supports an upper bound on the excution time.
 *
 * Complexity: O((M + N)D) worst case time, O(M + N + D^2) expected time, O(M + N) space
 *
 * @author Guy Van den Broeck
 * @ingroup DifferenceEngine
 */",
 "/**
 * Alternative representation of a set of changes, by the index
 * ranges that are changed.
 *
 * @ingroup DifferenceEngine
 */",
 "/** Lingua Franca Nova (Lingua Franca Nova)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Cgboeree
 * @author Kaganer
 * @author Malafaya
 * @author Reedy
 * @author Urhixidur
 */",
 "/**
	 * @param $resultPageSet ApiPageSet
	 */",
 "/**
 * Query module to enumerate all categories, even the ones that don\'t have
 * category pages.
 *
 * @ingroup API
 */",
 "/**
	 * Helper function to append any add-in modules to the list
	 * @param $modules array Module array
	 * @param $newModules array Module array to add to $modules
	 */",
 "/**
	 * Gets a default slave database connection object
	 * @return Database
	 */",
 "/**
	 * Get the query database connection with the given name.
	 * If no such connection has been requested before, it will be created.
	 * Subsequent calls with the same $name will return the same connection
	 * as the first, regardless of the values of $db and $groups
	 * @param $name string Name to assign to the database connection
	 * @param $db int One of the DB_* constants
	 * @param $groups array Query groups
	 * @return Database
	 */",
 "/**
	 * Gets the set of pages the user has requested (or generated)
	 * @return ApiPageSet
	 */",
 "/**
	 * Get the array mapping module names to class names
	 * @return array array(modulename => classname)
	 */",
 "/**
	 * Get whether the specified module is a prop, list or a meta query module
	 * @param $moduleName string Name of the module to find type for
	 * @return mixed string or null
	 */",
 "/**
	 * Query execution happens in the following steps:
	 * #1 Create a PageSet object with any pages requested by the user
	 * #2 If using a generator, execute it to get a new ApiPageSet object
	 * #3 Instantiate all requested modules.
	 *    This way the PageSet object will know what shared data is required,
	 *    and minimize DB calls.
	 * #4 Output all normalization and redirect resolution information
	 * #5 Execute all requested modules
	 */",
 "/**
	 * Update a cache mode string, applying the cache mode of a new module to it.
	 * The cache mode may increase in the level of privacy, but public modules
	 * added to private data do not decrease the level of privacy.
	 *
	 * @param $cacheMode string
	 * @param $modCacheMode string
	 * @return string
	 */",
 "/**
	 * Query modules may optimize data requests through the $this->getPageSet() object
	 * by adding extra fields from the page table.
	 * This function will gather all the extra request fields from the modules.
	 * @param $modules array of module objects
	 * @param $pageSet ApiPageSet
	 */",
 "/**
	 * Create instances of all modules requested by the client
	 * @param $modules Array to append instantiated modules to
	 * @param $param string Parameter name to read modules from
	 * @param $moduleList Array array(modulename => classname)
	 */",
 "/**
	 * Appends an element for each page in the current pageSet with the
	 * most general information (id, title), plus any title normalizations
	 * and missing or invalid title/pageids/revids.
	 */",
 "/**
	 * @param  $pageSet ApiPageSet Pages to be exported
	 * @param  $result ApiResult Result to output to
	 */",
 "/**
	 * Create a generator object of the given type and return it
	 * @param $generatorName string Module name
	 * @return ApiQueryGeneratorBase
	 */",
 "/**
	 * For generator mode, execute generator, and use its output as new
	 * ApiPageSet
	 * @param $generator ApiQueryGeneratorBase Generator Module
	 * @param $modules array of module objects
	 */",
 "/**
	 * Override the parent to generate help messages for all available query modules.
	 * @return string
	 */",
 "/**
			 * @var $module ApiQueryBase
			 */",
 "/**
	 * For all modules in $moduleList, generate help messages and join them together
	 * @param $moduleList Array array(modulename => classname)
	 * @param $paramName string Parameter name
	 * @return string
	 */",
 "/**
	 * Override to add extra parameters from PageSet
	 * @return string
	 */",
 "/**
 * This is the main query class. It behaves similar to ApiMain: based on the
 * parameters given, it will create a list of titles to work on (an ApiPageSet
 * object), instantiate and execute various property/list/meta modules, and
 * assemble all resulting data into a single ApiResult object.
 *
 * In generator mode, a generator will be executed first to populate a second
 * ApiPageSet object, and that object will be used for all subsequent modules.
 *
 * @ingroup API
 */",
 "/** French (Fran??ais)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Agzennay
 * @author Cedric31
 * @author ChrisPtDe
 * @author Coyau
 * @author Crochet.david
 * @author Csisc
 * @author Damouns
 * @author DavidL
 * @author Delhovlyn
 * @author Dereckson
 * @author Diti
 * @author Dodo??ste
 * @author Elfix
 * @author Enzoreg
 * @author Esbardu
 * @author Fryed-peach
 * @author Giro720
 * @author Gomoko
 * @author Grondin
 * @author Guillom
 * @author Hashar
 * @author Hercule
 * @author Houcinee1
 * @author H??g??sippe Cormier
 * @author IAlex
 * @author Jagwar
 * @author Jean-Fr??d??ric
 * @author JeanVoisin
 * @author Jens Liebenau
 * @author Klutzy
 * @author Korg
 * @author Korrigan
 * @author Krinkle
 * @author Kropotkine 113
 * @author Litlok
 * @author Lloffiwr
 * @author Louperivois
 * @author Lucyin
 * @author McDutchie
 * @author Meithal
 * @author Moyg
 * @author Nicolas Raoul
 * @author Od1n
 * @author Omnipaedista
 * @author Peter17
 * @author PieRRoMaN
 * @author Quentinv57
 * @author Remember the dot
 * @author Robby
 * @author Sandji
 * @author Seb35
 * @author Sherbrooke
 * @author Skalman
 * @author The Evil IP address
 * @author TouzaxA
 * @author Tpt
 * @author Urhixidur
 * @author Verdy p
 * @author Wyz
 * @author Yumeki
 * @author Zebulon84
 * @author Zetud
 * @author ?????????? ????????????????????
 * @author ???????? ????????????????
 */",
 "/** Prussian (Pr??siskan)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Kaganer
 * @author Nertiks
 * @author Peteris
 */",
 "/** Basa Banyumasan (Basa Banyumasan)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Slamet Serayu (on map-bms.wikipedia.org)
 * @author StefanusRA
 * @author ???????? ????????????????
 */",
 "/** Bambara (Bamanankan)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Guaka
 * @author ???????? ????????????????
 */",
 "/** Western Punjabi (????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Arslan
 * @author Kaganer
 * @author Khalid Mahmood
 * @author Rachitrali
 * @author ZaDiak
 */",
 "/**
	 * @return void
	 */",
 "/**
	 * As we use the same small set of messages in various methods and that
	 * they are called often, we call them once and save them in $this->message
	 */",
 "/**
 * Special page allowing users with the appropriate permissions to
 * merge article histories, with some restrictions
 *
 * @ingroup SpecialPage
 */",
 "/**
	 * @param $type string
	 * @return bool
	 */",
 "/**
 * Searches the database for files of the requested MIME type, comparing this with the
 * \'img_major_mime\' and \'img_minor_mime\' fields in the image table.
 * @ingroup SpecialPage
 */",
 "/** Gheg Albanian (Geg??)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Bresta
 * @author Cradel
 * @author Dardan
 * @author Mdupont
 */",
 "/**
	 * @dataProvider provideCases
	 */",
 "/**
	 * @dataProvider provideBug32548
	 */",
 "/**
	 * Test for Html::expandAttributes()
	 * Please note it output a string prefixed with a space!
	 */",
 "/**
	 * Html::expandAttributes has special features for HTML
	 * attributes that use space separated lists and also
	 * allows arrays to be used as values.
	 */",
 "/**
	 * Test feature added by r96188, let pass attributes values as
	 * a PHP array. Restricted to class,rel, accesskey.
	 */",
 "/**
	 * How do we handle duplicate keys in HTML attributes expansion?
	 * We could pass a \"class\" the values: \'GREEN\' and array( \'GREEN\' => false )
	 * The later will take precedence.
	 *
	 * Feature added by r96188
	 */",
 "/**
	 * Helper to verify <select> attributes generated by Html::namespaceSelector()
	 * This helper expect the Html method to use \'namespace\' as a default value for
	 * both \'id\' and \'name\' attributes.
	 *
	 * @param String $expectedId <select> id attribute value
	 * @param String $expectedName <select> name attribute value
	 * @param String $html Output of a call to Html::namespaceSelector()
	 * @param String $msg Optional message (default: \'\')
	*/",
 "/** tests for includes/Html.php */",
 "/**
	 * rules should be defined as -{Syllabic | Latin-} -or-
	 * -{code:text | code:text | ...}-
	 * update: delete all rule parsing because it\'s not used
	 * currently, and just produces a couple of bugs
	 *
	 * @param $rule string
	 * @param $flags array
	 * @return array
	 */",
 "/**
	 * Do not convert content on talk pages
	 *
	 * @param $text string
	 * @param $parser Parser
	 * @return string
	 */",
 "/**
	 * A function wrapper:
	 *   - if there is no selected variant, leave the link
	 *     names as they were
	 *   - do not try to find variants for usernames
	 *
	 * @param $link string
	 * @param $nt Title
	 * @param $ignoreOtherCond bool
	 */",
 "/**
	 * We want our external link captions to be converted in variants,
	 * so we return the original text instead -{$text}-, except for URLs
	 *
	 * @param $text string
	 * @param $noParse bool
	 *
	 * @return string
	 */",
 "/**
	 * An ugly function wrapper for parsing Image titles
	 * (to prevent image name conversion)
	 *
	 * @param $text string
	 * @param $toVariant bool
	 *
	 * @return string
	 */",
 "/**
	 * It translates text into variant
	 *
	 * @param $text string
	 * @param $toVariant bool
	 *
	 * @return string
	 */",
 "/**
 *
 */",
 "/**
 * Inuktitut
 *
 * @ingroup Language
 */",
 "/** @dataProvider provideFormattableTimes */",
 "/**
	* @dataProvider provideHTMLTruncateData()
	*/",
 "/**
	 * Array format is ($len, $ellipsis, $input, $expected)
	 */",
 "/**
	 * Test Language::isValidBuiltInCode()
	 * @dataProvider provideLanguageCodes
	 */",
 "/**
	 * @dataProvider provideSprintfDateSamples
	 */",
 "/**
	 * bug 33454. sprintfDate should always use UTC.
	 * @dataProvider provideSprintfDateSamples
	 */",
 "/**
	 * @dataProvider provideFormatSizes
	 */",
 "/**
	 * @dataProvider provideFormatBitrate
	 */",
 "/**
	 * Constructs a new formatter suitable for given entry.
	 * @param $entry LogEntry
	 * @return LogFormatter
	 */",
 "/**
	 * Handy shortcut for constructing a formatter directly from
	 * database row.
	 * @param $row
	 * @see DatabaseLogEntry::getSelectQueryData
	 * @return LogFormatter
	 */",
 "/**
	 * Replace the default context
	 * @param $context IContextSource
	 */",
 "/**
	 * Set the visibility restrictions for displaying content.
	 * If set to public, and an item is deleted, then it will be replaced 
	 * with a placeholder even if the context user is allowed to view it.
	 * @param $audience integer self::FOR_THIS_USER or self::FOR_PUBLIC
	 */",
 "/**
	 * Check if a log item can be displayed
	 * @param $field integer LogPage::DELETED_* constant
	 * @return bool 
	 */",
 "/**
	 * If set to true, will produce user tool links after
	 * the user name. This should be replaced with generic
	 * CSS/JS solution.
	 * @param $value boolean
	 */",
 "/**
	 * Ugly hack to produce plaintext version of the message.
	 * Usually you also want to set extraneous request context
	 * to avoid formatting for any particular user.
	 * @see getActionText()
	 * @return string text
	 */",
 "/**
	 * Even uglier hack to maintain backwards compatibilty with IRC bots
	 * (bug 34508).
	 * @see getActionText()
	 * @return string text
	 */",
 "/**
	 * Gets the log action, including username.
	 * @return string HTML
	 */",
 "/**
	 * Returns a sentence describing the log action. Usually
	 * a Message object is returned, but old style log types
	 * and entries might return pre-escaped html string.
	 * @return Message|pre-escaped html
	 */",
 "/**
	 * Returns a key to be used for formatting the action sentence.
	 * Default is logentry-TYPE-SUBTYPE for modern logs. Legacy log
	 * types will use custom keys, and subclasses can also alter the
	 * key depending on the entry itself.
	 * @return string message key
	 */",
 "/**
	 * Extracts the optional extra parameters for use in action messages.
	 * The array indexes start from number 3.
	 * @return array
	 */",
 "/**
	 * Formats parameters intented for action message from
	 * array of all parameters. There are three hardcoded
	 * parameters (array is zero-indexed, this list not):
	 *  - 1: user name with premade link
	 *  - 2: usable for gender magic function
	 *  - 3: target page with premade link
	 * @return array
	 */",
 "/**
	 * Helper to make a link to the page, taking the plaintext
	 * value in consideration.
	 * @param $title Title the page
	 * @param $parameters array query parameters
	 * @return String
	 */",
 "/**
	 * Provides the name of the user who performed the log action.
	 * Used as part of log action message or standalone, depending
	 * which parts of the log entry has been hidden.
	 */",
 "/**
	 * Gets the luser provided comment
	 * @return string HTML
	 */",
 "/**
	 * Helper method for displaying restricted element.
	 * @param $message string
	 * @return string HTML or wikitext
	 */",
 "/**
	 * Helper method for styling restricted element.
	 * @param $content string
	 * @return string HTML or wikitext
	 */",
 "/**
	 * Shortcut for wfMessage which honors local context.
	 * @todo Would it be better to require replacing the global context instead?
	 * @param $key string
	 * @return Message
	 */",
 "/**
	 * @return Array of titles that should be preloaded with LinkBatch.
	 */",
 "/**
 * Implements the default log formatting.
 * Can be overridden by subclassing and setting
 * $wgLogActionsHandlers[\'type/subtype\'] = \'class\'; or
 * $wgLogActionsHandlers[\'type/*\'] = \'class\';
 * @since 1.19
 */",
 "/**
 * This class formats all log entries for log types
 * which have not been converted to the new system.
 * This is not about old log entries which store
 * parameters in a different format - the new
 * LogFormatter classes have code to support formatting
 * those too.
 * @since 1.19
 */",
 "/**
 * This class formats move log entries.
 * @since 1.19
 */",
 "/**
 * This class formats delete log entries.
 * @since 1.19
 */",
 "/**
 * This class formats patrol log entries.
 * @since 1.19
 */",
 "/**
 * This class formats new user log entries.
 * @since 1.19
 */",
 "/**
	 * Constructor
	 * @param $main ApiMain object
	 */",
 "/**
	 * Clear the current result data.
	 */",
 "/**
	 * Call this function when special elements such as \'_element\'
	 * are needed by the formatter, for example in XML printing.
	 */",
 "/**
	 * Returns true whether the formatter requested raw data.
	 * @return bool
	 */",
 "/**
	 * Get the result\'s internal data array (read-only)
	 * @return array
	 */",
 "/**
	 * Get the \'real\' size of a result item. This means the strlen() of the item,
	 * or the sum of the strlen()s of the elements if the item is an array.
	 * @param $value mixed
	 * @return int
	 */",
 "/**
	 * Get the size of the result, i.e. the amount of bytes in it
	 * @return int
	 */",
 "/**
	 * Disable size checking in addValue(). Don\'t use this unless you
	 * REALLY know what you\'re doing. Values added while size checking
	 * was disabled will not be counted (ever)
	 */",
 "/**
	 * Re-enable size checking in addValue()
	 */",
 "/**
	 * Add an output value to the array by name.
	 * Verifies that value with the same name has not been added before.
	 * @param $arr array to add $value to
	 * @param $name string Index of $arr to add $value at
	 * @param $value mixed
	 * @param $overwrite bool Whether overwriting an existing element is allowed
	 */",
 "/**
	 * Adds a content element to an array.
	 * Use this function instead of hardcoding the \'*\' element.
	 * @param $arr array to add the content element to
	 * @param $value Mixed
	 * @param $subElemName string when present, content element is created
	 *  as a sub item of $arr. Use this parameter to create elements in
	 *  format <elem>text</elem> without attributes
	 */",
 "/**
	 * In case the array contains indexed values (in addition to named),
	 * give all indexed values the given tag name. This function MUST be
	 * called on every array that has numerical indexes.
	 * @param $arr array
	 * @param $tag string Tag name
	 */",
 "/**
	 * Calls setIndexedTagName() on each sub-array of $arr
	 * @param $arr array
	 * @param $tag string Tag name
	 */",
 "/**
	 * Calls setIndexedTagName() on an array already in the result.
	 * Don\'t specify a path to a value that\'s not in the result, or
	 * you\'ll get nasty errors.
	 * @param $path array Path to the array, like addValue()\'s $path
	 * @param $tag string
	 */",
 "/**
	 * Add value to the output data at the given path.
	 * Path can be an indexed array, each element specifying the branch at which to add the new
	 * value. Setting $path to array(\'a\',\'b\',\'c\') is equivalent to data[\'a\'][\'b\'][\'c\'] = $value.
	 * If $path is null, the value will be inserted at the data root.
	 * If $name is empty, the $value is added as a next list element data[] = $value.
	 *
	 * @param $path array|string|null
	 * @param $name string
	 * @param $value mixed
	 * @param $overwrite bool
	 *
	 * @return bool True if $value fits in the result, false if not
	 */",
 "/**
	 * Add a parsed limit=max to the result.
	 *
	 * @param $moduleName string
	 * @param $limit int
	 */",
 "/**
	 * Unset a value previously added to the result set.
	 * Fails silently if the value isn\'t found.
	 * For parameters, see addValue()
	 * @param $path array
	 * @param $name string
	 */",
 "/**
	 * Ensure all values in this result are valid UTF-8.
	 */",
 "/**
	 * Callback function for cleanUpUTF8()
	 *
	 * @param $s string
	 */",
 "/**
	 * Converts a Status object to an array suitable for addValue
	 * @param Status $status
	 * @param string $errorType
	 * @return array
	 */",
 "/**
 * This class represents the result of the API operations.
 * It simply wraps a nested array() structure, adding some functions to simplify array\'s modifications.
 * As various modules execute, they add different pieces of information to this result,
 * structuring it as it will be given to the client.
 *
 * Each subarray may either be a dictionary - key-value pairs with unique keys,
 * or lists, where the items are added using $data[] = $value notation.
 *
 * There are two special key values that change how XML output is generated:
 *   \'_element\' This key sets the tag name for the rest of the elements in the current array.
 *              It is only inserted if the formatter returned true for getNeedsRawData()
 *   \'*\'        This key has special meaning only to the XML formatter, and is outputed as is
 * 				for all others. In XML it becomes the content of the current element.
 *
 * @ingroup API
 */",
 "/**
	 * @expectedException MWException
	 */",
 "/**
	 * @expectedException MWException
	 */",
 "/**
	 * @expectedException MWException
	 */",
 "/**
	 * @expectedException MWException
	 */",
 "/**
	 * Open a file and return a subclass instance
	 *
	 * @param $fileName string
	 *
	 * @return CdbReader
	 */",
 "/**
	 * Returns true if the native extension is available
	 *
	 * @return bool
	 */",
 "/**
	 * Construct the object and open the file
	 */",
 "/**
	 * Close the file. Optional, you can just let the variable go out of scope.
	 */",
 "/**
	 * Get a value with a given key. Only string values are supported.
	 *
	 * @param $key string
	 */",
 "/**
 * Read from a CDB file.
 * Native and pure PHP implementations are provided.
 * http://cr.yp.to/cdb.html
 */",
 "/**
	 * Open a writer and return a subclass instance.
	 * The user must have write access to the directory, for temporary file creation.
	 *
	 * @param $fileName string
	 *
	 * @return CdbWriter_DBA|CdbWriter_PHP
	 */",
 "/**
	 * Create the object and open the file
	 *
	 * @param $fileName string
	 */",
 "/**
	 * Set a key to a given value. The value will be converted to string.
	 * @param $key string
	 * @param $value string
	 */",
 "/**
	 * Close the writer object. You should call this function before the object
	 * goes out of scope, to write out the final hashtables.
	 */",
 "/**
 * Write to a CDB file.
 * Native and pure PHP implementations are provided.
 */",
 "/**
 * Reader class which uses the DBA extension
 */",
 "/**
 * Writer class which uses the DBA extension
 */",
 "/** Dutch (Nederlands)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Annabel
 * @author B4bol4t
 * @author DasRakel
 * @author Effeietsanders
 * @author Erwin
 * @author Erwin85
 * @author Extended by Hendrik Maryns <hendrik.maryns@uni-tuebingen.de>, March 2007.
 * @author Fryed-peach
 * @author Galwaygirl
 * @author GerardM
 * @author Hamaryns
 * @author Jens Liebenau
 * @author Kaganer
 * @author Krinkle
 * @author MarkvA
 * @author McDutchie
 * @author Mihxil
 * @author Multichill
 * @author Mwpnl
 * @author Naudefj
 * @author Niels
 * @author Paul B
 * @author Romaine
 * @author SPQRobin
 * @author Saruman
 * @author Servien
 * @author Siebrand
 * @author Slomox
 * @author TBloemink
 * @author Tedjuh10
 * @author Tjcool007
 * @author Troefkaart
 * @author Tvdm
 * @author ???????? ????????????????
 */",
 "/**
	 * Get a RepoGroup instance. At present only one instance of RepoGroup is
	 * needed in a MediaWiki invocation, this may change in the future.
	 * @return RepoGroup
	 */",
 "/**
	 * Destroy the singleton instance, so that a new one will be created next
	 * time singleton() is called.
	 */",
 "/**
	 * Set the singleton instance to a given object
	 * Used by extensions which hook into the Repo chain.
	 * It\'s not enough to just create a superclass ... you have
	 * to get people to call into it even though all they know is RepoGroup::singleton()
	 *
	 * @param $instance RepoGroup
	 */",
 "/**
	 * Construct a group of file repositories.
	 *
	 * @param $localInfo Associative array for local repo\'s info
	 * @param $foreignInfo Array of repository info arrays.
	 *     Each info array is an associative array with the \'class\' member
	 *     giving the class name. The entire array is passed to the repository
	 *     constructor as the first parameter.
	 */",
 "/**
	 * Search repositories for an image.
	 * You can also use wfFindFile() to do this.
	 *
	 * @param $title Title|string Title object or string
	 * @param $options array Associative array of options:
	 *     time:           requested time for an archived image, or false for the
	 *                     current version. An image object will be returned which was
	 *                     created at the specified time.
	 *
	 *     ignoreRedirect: If true, do not follow file redirects
	 *
	 *     private:        If true, return restricted (deleted) files if the current
	 *                     user is allowed to view them. Otherwise, such files will not
	 *                     be found.
	 *
	 *     bypassCache:    If true, do not use the process-local cache of File objects
	 * @return File object or false if it is not found
	 */",
 "/**
	 * Interface for FileRepo::checkRedirect()
	 */",
 "/**
	 * Find an instance of the file with this key, created at the specified time
	 * Returns false if the file does not exist.
	 *
	 * @param $hash String base 36 SHA-1 hash
	 * @param $options Option array, same as findFile()
	 * @return File object or false if it is not found
	 */",
 "/**
	 * Find all instances of files with this key
	 *
	 * @param $hash String base 36 SHA-1 hash
	 * @return Array of File objects
	 */",
 "/**
	 * Get the repo instance with a given key.
	 */",
 "/**
	 * Get the repo instance by its name
	 */",
 "/**
	 * Get the local repository, i.e. the one corresponding to the local image
	 * table. Files are typically uploaded to the local repository.
	 *
	 * @return LocalRepo
	 */",
 "/**
	 * Call a function for each foreign repo, with the repo object as the
	 * first parameter.
	 *
	 * @param $callback Callback: the function to call
	 * @param $params Array: optional additional parameters to pass to the function
	 */",
 "/**
	 * Does the installation have any foreign repos set up?
	 * @return Boolean
	 */",
 "/**
	 * Initialise the $repos array
	 */",
 "/**
	 * Create a repo class based on an info structure
	 */",
 "/**
	 * Split a virtual URL into repo, zone and rel parts
	 * @return an array containing repo, zone and rel
	 */",
 "/**
	 * Limit cache memory
	 */",
 "/**
	 * Clear RepoGroup process cache used for finding a file
	 * @param $title Title|null Title of the file or null to clear all files
	 */",
 "/**
 * Prioritized list of file repositories
 *
 * @ingroup FileRepo
 */",
 "/**
 * A BagOStuff object with no objects in it. Used to provide a no-op object to calling code.
 *
 * @ingroup Cache
 */",
 "/**
 * Backwards compatibility alias for EmptyBagOStuff
 * @deprecated since 1.18
 */",
 "/**
	 * Leave a message on the user talk page or in the session according to
	 * $params[\'leaveMessage\'].
	 *
	 * @param $status Status
	 */",
 "/**
	 * Store a result in the session data. Note that the caller is responsible
	 * for appropriate session_start and session_write_close calls.
	 *
	 * @param $result String: the result (Success|Warning|Failure)
	 * @param $dataKey String: the key of the extra data
	 * @param $dataValue Mixed: the extra data itself
	 */",
 "/**
	 * Initialize the session data. Sets the intial result to queued.
	 */",
 "/**
	 * @param $key
	 * @return mixed
	 */",
 "/**
 * Job for asynchronous upload-by-url.
 *
 * This job is in fact an interface to UploadFromUrl, which is designed such
 * that it does not require any globals. If it does, fix it elsewhere, do not
 * add globals in here.
 *
 * @ingroup JobQueue
 */",
 "/**
	 * Constructor
	 */",
 "/**
	 * Show the special page
	 *
	 * @param mixed $par Parameter passed to the page
	 */",
 "/**
	 * @param $username Title
	 * @param $type
	 * @param $out OutputPage
	 */",
 "/**
 * Special page allows authorised users to rename
 * user accounts
 */",
 "/**
	 * Constructor
	 *
	 * @param $old string The old username
	 * @param $new string The new username
	 * @param $uid
	 */",
 "/**
	 * Do the rename operation
	 */",
 "/**
	 * Prompt for a username or IP address.
	 *
	 * @param $userName string
	 */",
 "/**
	 * Display list of pages to delete.
	 *
	 * @param string $username
	 * @param string $reason
	 * @param integer $limit
	 */",
 "/**
	 * Gets a list of new pages by the specified user or everyone when none is specified.
	 *
	 * @param string $username
	 * @param integer $limit
	 *
	 * @return array
	 */",
 "/**
	 * Does the actual deletion of the pages.
	 *
	 * @param array $pages The pages to delete
	 * @param string $reason
	 */",
 "/** Jutish (Jysk)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Husl??ke
 * @author Urhixidur
 * @author ??ls??n
 */",
 "/**
	 * Store the correct answer for a given captcha
	 * @param  $index String
	 * @param  $info String the captcha result
	 */",
 "/**
	 * Retrieve the answer for a given captcha
	 * @param  $index String
	 * @return String
	 */",
 "/**
	 * Delete a result once the captcha has been used, so it cannot be reused
	 * @param  $index
	 */",
 "/**
	 * Whether this type of CaptchaStore needs cookies
	 * @return Bool
	 */",
 "/**
	 * Get somewhere to store captcha data that will persist between requests
	 *
	 * @throws MWException
	 * @return CaptchaStore
	 */",
 "/**
	 * Protected constructor: no creating instances except through the factory method above
	 */",
 "/**
	 * constructs a new JSON instance
	 *
	 * @param $use Integer: object behavior flags; combine with boolean-OR
	 *
	 *	possible values:
	 *	- SERVICES_JSON_LOOSE_TYPE:  loose typing.
	 *			\"{...}\" syntax creates associative arrays
	 *			instead of objects in decode().
	 *	- SERVICES_JSON_SUPPRESS_ERRORS:  error suppression.
	 *			Values which can\'t be encoded (e.g. resources)
	 *			appear as NULL instead of throwing errors.
	 *			By default, a deeply-nested resource will
	 *			bubble up with an error, so all return values
	 *			from encode() should be checked with isError()
	 */",
 "/**
	 * Returns cached result of class_exists(\'pear\'), to avoid calling AutoLoader numerous times
	 * in cases when PEAR is not present.
	 * @return boolean
	 */",
 "/**
	 * convert a string from one UTF-16 char to one UTF-8 char
	 *
	 * Normally should be handled by mb_convert_encoding, but
	 * provides a slower PHP-only method for installations
	 * that lack the multibye string extension.
	 *
	 * @param $utf16 String: UTF-16 character
	 * @return String: UTF-8 character
	 * @access private
	 */",
 "/**
	 * convert a string from one UTF-8 char to one UTF-16 char
	 *
	 * Normally should be handled by mb_convert_encoding, but
	 * provides a slower PHP-only method for installations
	 * that lack the multibye string extension.
	 *
	 * @param $utf8 String: UTF-8 character
	 * @return String: UTF-16 character
	 * @access private
	 */",
 "/**
	 * encodes an arbitrary variable into JSON format
	 *
	 * @param $var Mixed: any number, boolean, string, array, or object to be encoded.
	 *			see argument 1 to Services_JSON() above for array-parsing behavior.
	 *			if var is a strng, note that encode() always expects it
	 *			to be in ASCII or UTF-8 format!
	 * @param $pretty Boolean: pretty-print output with indents and newlines
	 *
	 * @return mixed JSON string representation of input var or an error if a problem occurs
	 * @access public
	 */",
 "/**
	 * encodes an arbitrary variable into JSON format
	 *
	 * @param $var Mixed: any number, boolean, string, array, or object to be encoded.
	 *			see argument 1 to Services_JSON() above for array-parsing behavior.
	 *			if var is a strng, note that encode() always expects it
	 *			to be in ASCII or UTF-8 format!
	 *
	 * @return mixed JSON string representation of input var or an error if a problem occurs
	 * @access private
	 */",
 "/**
	 * array-walking function for use in generating JSON-formatted name-value pairs
	 *
	 * @param $name String: name of key to use
	 * @param $value Mixed: reference to an array element to be encoded
	 *
	 * @return String: JSON-formatted name-value pair, like \'\"name\":value\'
	 * @access private
	 */",
 "/**
	 * reduce a string by removing leading and trailing comments and whitespace
	 *
	 * @param $str String: string value to strip of comments and whitespace
	 *
	 * @return String: string value stripped of comments and whitespace
	 * @access private
	 */",
 "/**
	*decodesaJSONstringintoappropriatevariable
	*
	*@param$strString:JSON-formattedstring
	*
	*@returnmixednumber,boolean,string,array,orobject
	*		correspondingtogivenJSONinputstring.
	*		Seeargument1toServices_JSON()aboveforobject-outputbehavior.
	*		Notethatdecode()alwaysreturnsstrings
	*		inASCIIorUTF-8format!
	*@accesspublic
	*/",
 "/**
	*@todoUltimately,thisshouldjustcallPEAR::isError()
	*/",
 "/**
*ConvertstoandfromJSONformat.
*
*Briefexampleofuse:
*
*<code>
*//createanewinstanceofServices_JSON
*$json=newServices_JSON();
*
*//convertacomplexevaluetoJSONnotation,andsendittothebrowser
*$value=array(\'foo\',\'bar\',array(1,2,\'baz\'),array(3,array(4)));
*$output=$json->encode($value);
*
*print($output);
*//prints:[\"foo\",\"bar\",[1,2,\"baz\"],[3,[4]]]
 *
 * // accept incoming POST data, assumed to be in JSON notation
 * $input = file_get_contents(\'php://input\', 1000000);
 * $value = $json->decode($input);
 * </code>
 *
 * @ingroup API
 */",
 "/**
	 * @ingroup API
	 */",
 "/**
	 * @todo Ultimately, this class shall be descended from PEAR_Error
	 * @ingroup API
	 */",
 "/** Eastern Canadian (Latin script) (inuktitut)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 */",
 "/**
	 * Constructor
	 * @todo FIXME: Don\'t know what the best format to have for this constructor is, but fourteen
	 * optional parameters certainly isn\'t it.
	 */",
 "/**
	 * Load a block from the database, using either the IP address or
	 * user ID. Tries the user ID first, and if that doesn\'t work, tries
	 * the address.
	 *
	 * @param $address String: IP address of user/anon
	 * @param $user Integer: user id of user
	 * @return Block Object
	 * @deprecated since 1.18
	 */",
 "/**
	 * Load a blocked user from their block id.
	 *
	 * @param $id Integer: Block id to search for
	 * @return Block object or null
	 */",
 "/**
	 * Check if two blocks are effectively equal.  Doesn\'t check irrelevant things like
	 * the blocking user or the block timestamp, only things which affect the blocked user	 *
	 *
	 * @param $block Block
	 *
	 * @return bool
	 */",
 "/**
	 * Clear all member variables in the current object. Does not clear
	 * the block from the DB.
	 * @deprecated since 1.18
	 */",
 "/**
	 * Get a block from the DB, with either the given address or the given username
	 *
	 * @param $address string The IP address of the user, or blank to skip IP blocks
	 * @param $user int The user ID, or zero for anonymous users
	 * @return Boolean: the user is blocked from editing
	 * @deprecated since 1.18
	 */",
 "/**
	 * Load a block from the database which affects the already-set $this->target:
	 *     1) A block directly on the given user or IP
	 *     2) A rangeblock encompasing the given IP (smallest first)
	 *     3) An autoblock on the given IP
	 * @param $vagueTarget User|String also search for blocks affecting this target.  Doesn\'t
	 *     make any sense to use TYPE_AUTO / TYPE_ID here. Leave blank to skip IP lookups.
	 * @return Bool whether a relevant block was found
	 */",
 "/**
	 * Get a set of SQL conditions which will select rangeblocks encompasing a given range
	 * @param $start String Hexadecimal IP representation
	 * @param $end String Hexadecimal IP represenation, or null to use $start = $end
	 * @return String
	 */",
 "/**
	 * Get the component of an IP address which is certain to be the same between an IP
	 * address and a rangeblock containing that IP address.
	 * @param  $hex String Hexadecimal IP representation
	 * @return String
	 */",
 "/**
	 * Given a database row from the ipblocks table, initialize
	 * member variables
	 * @param $row ResultWrapper: a row from the ipblocks table
	 */",
 "/**
	 * Create a new Block object from a database row
	 * @param  $row ResultWrapper row from the ipblocks table
	 * @return Block
	 */",
 "/**
	 * Delete the row from the IP blocks table.
	 *
	 * @return Boolean
	 */",
 "/**
	 * Insert a block into the block table. Will fail if there is a conflicting
	 * block (same name and options) already in the database.
	 *
	 * @param $dbw DatabaseBase if you have one available
	 * @return mixed: false on failure, assoc array on success:
	 *	(\'id\' => block ID, \'autoIds\' => array of autoblock IDs)
	 */",
 "/**
	 * Update a block in the DB with new parameters.
	 * The ID field needs to be loaded first.
	 *
	 * @return Int number of affected rows, which should probably be 1 or something\'s
	 *     gone slightly awry
	 */",
 "/**
	 * Get an array suitable for passing to $dbw->insert() or $dbw->update()
	 * @param $db DatabaseBase
	 * @return Array
	 */",
 "/**
	 * Retroactively autoblocks the last IP used by the user (if it is a user)
	 * blocked by this Block.
	 *
	 * @return Array: block IDs of retroactive autoblocks made
	 */",
 "/**
	 * Retroactively autoblocks the last IP used by the user (if it is a user)
	 * blocked by this Block. This will use the recentchanges table.
	 *
	 * @param Block $block
	 * @param Array &$blockIds
	 * @return Array: block IDs of retroactive autoblocks made
	 */",
 "/**
	 * Checks whether a given IP is on the autoblock whitelist.
	 * TODO: this probably belongs somewhere else, but not sure where...
	 *
	 * @param $ip String: The IP to check
	 * @return Boolean
	 */",
 "/**
	 * Autoblocks the given IP, referring to this Block.
	 *
	 * @param $autoblockIP String: the IP to autoblock.
	 * @return mixed: block ID if an autoblock was inserted, false if not.
	 */",
 "/**
	 * Check if a block has expired. Delete it if it is.
	 * @return Boolean
	 */",
 "/**
	 * Has the block expired?
	 * @return Boolean
	 */",
 "/**
	 * Is the block address valid (i.e. not a null string?)
	 * @return Boolean
	 */",
 "/**
	 * Update the timestamp on autoblocks.
	 */",
 "/**
	 * Get the IP address at the start of the range in Hex form
	 * @return String IP in Hex form
	 */",
 "/**
	 * Get the IP address at the start of the range in Hex form
	 * @return String IP in Hex form
	 */",
 "/**
	 * Get the user id of the blocking sysop
	 *
	 * @return Integer (0 for foreign users)
	 */",
 "/**
	 * Get the username of the blocking sysop
	 *
	 * @return String
	 */",
 "/**
	 * Get the block ID
	 * @return int
	 */",
 "/**
	 * Get/set the SELECT ... FOR UPDATE flag
	 * @deprecated since 1.18
	 *
	 * @param $x Bool
	 */",
 "/**
	 * Get/set a flag determining whether the master is used for reads
	 *
	 * @param $x Bool
	 * @return Bool
	 */",
 "/**
	 * Get/set whether the Block is a hardblock (affects logged-in users on a given IP/range
	 * @param $x Bool
	 * @return  Bool
	 */",
 "/**
	 * Get/set whether the Block prevents a given action
	 * @param $action String
	 * @param $x Bool
	 * @return Bool
	 */",
 "/**
	 * Get the block name, but with autoblocked IPs hidden as per standard privacy policy
	 * @return String, text is escaped
	 */",
 "/**
	 * Encode expiry for DB
	 *
	 * @param $expiry String: timestamp for expiry, or
	 * @param $db Database object
	 * @return String
	 * @deprecated since 1.18; use $dbw->encodeExpiry() instead
	 */",
 "/**
	 * Decode expiry which has come from the DB
	 *
	 * @param $expiry String: Database expiry format
	 * @param $timestampType Int Requested timestamp format
	 * @return String
	 * @deprecated since 1.18; use $wgLang->formatExpiry() instead
	 */",
 "/**
	 * Get a timestamp of the expiry for autoblocks
	 *
	 * @param $timestamp String|Int
	 * @return String
	 */",
 "/**
	 * Gets rid of uneeded numbers in quad-dotted/octet IP strings
	 * For example, 127.111.113.151/24 -> 127.111.113.0/24
	 * @param $range String: IP address to normalize
	 * @return string
	 * @deprecated since 1.18, call IP::sanitizeRange() directly
	 */",
 "/**
	 * Purge expired blocks from the ipblocks table
	 */",
 "/**
	 * Get a value to insert into expiry field of the database when infinite expiry
	 * is desired
	 * @deprecated since 1.18, call $dbr->getInfinity() directly
	 * @return String
	 */",
 "/**
	 * Convert a DB-encoded expiry into a real string that humans can read.
	 *
	 * @param $encoded_expiry String: Database encoded expiry time
	 * @return Html-escaped String
	 * @deprecated since 1.18; use $wgLang->formatExpiry() instead
	 */",
 "/**
	 * Convert a submitted expiry time, which may be relative (\"2 weeks\", etc) or absolute
	 * (\"24 May 2034\"), into an absolute timestamp we can put into the database.
	 * @param $expiry String: whatever was typed into the form
	 * @return String: timestamp or \"infinity\" string for th DB implementation
	 * @deprecated since 1.18 moved to SpecialBlock::parseExpiryInput()
	 */",
 "/**
	 * Given a target and the target\'s type, get an existing Block object if possible.
	 * @param $specificTarget String|User|Int a block target, which may be one of several types:
	 *     * A user to block, in which case $target will be a User
	 *     * An IP to block, in which case $target will be a User generated by using
	 *       User::newFromName( $ip, false ) to turn off name validation
	 *     * An IP range, in which case $target will be a String \"123.123.123.123/18\" etc
	 *     * The ID of an existing block, in the format \"#12345\" (since pure numbers are valid
	 *       usernames
	 *     Calling this with a user, IP address or range will not select autoblocks, and will
	 *     only select a block where the targets match exactly (so looking for blocks on
	 *     1.2.3.4 will not select 1.2.0.0/16 or even 1.2.3.4/32)
	 * @param $vagueTarget String|User|Int as above, but we will search for *any* block which
	 *     affects that target (so for an IP address, get ranges containing that IP; and also
	 *     get any relevant autoblocks). Leave empty or blank to skip IP-based lookups.
	 * @param $fromMaster Bool whether to use the DB_MASTER database
	 * @return Block|null (null if no relevant block could be found).  The target and type
	 *     of the returned Block will refer to the actual block which was found, which might
	 *     not be the same as the target you gave if you used $vagueTarget!
	 */",
 "/**
	 * From an existing Block, get the target and the type of target.  Note that it is
	 * always safe to treat the target as a string; for User objects this will return
	 * User::__toString() which in turn gives User::getName().
	 *
	 * @param $target String|Int|User
	 * @return array( User|String, Block::TYPE_ constant )
	 */",
 "/**
	 * Get the type of target for this particular block
	 * @return Block::TYPE_ constant, will never be TYPE_ID
	 */",
 "/**
	 * Get the target and target type for this particular Block.  Note that for autoblocks,
	 * this returns the unredacted name; frontend functions need to call $block->getRedactedName()
	 * in this situation.
	 * @return array( User|String, Block::TYPE_ constant )
	 * @todo FIXME: This should be an integral part of the Block member variables
	 */",
 "/**
	 * Get the target for this particular Block.  Note that for autoblocks,
	 * this returns the unredacted name; frontend functions need to call $block->getRedactedName()
	 * in this situation.
	 * @return User|String
	 */",
 "/**
	 * @since 1.19
	 *
	 * @return Mixed|string
	 */",
 "/**
	 * Set the target for this block, and update $this->type accordingly
	 * @param $target Mixed
	 */",
 "/**
	 * Get the user who implemented this block
	 * @return User|string Local User object or string for a foreign user
	 */",
 "/**
	 * Set the user who implemented (or will implement) this block
	 * @param $user User|string Local User object or username string for foriegn users
	 */",
 "/**
 * Blocks and bans object
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @file
 */",
 "/**
	 * Start the child processes.
	 *
	 * This should only be called from the command line. It should be called
	 * as early as possible during execution.
	 *
	 * This will return \'child\' in the child processes. In the parent process,
	 * it will run until all the child processes exit or a TERM signal is
	 * received. It will then return \'done\'.
	 */",
 "/**
	 * Fork a number of worker processes.
	 *
	 * @return string
	 */",
 "/**
 * Class for managing forking command line scripts.
 * Currently just does forking and process control, but it could easily be extended
 * to provide IPC and job dispatch.
 *
 * This class requires the posix and pcntl extensions.
 *
 * @ingroup Maintenance
 */",
 "/**
	 * @return Collation
	 */",
 "/**
	 * @throws MWException
	 * @param $collationName string
	 * @return Collation
	 */",
 "/**
	 * Given a string, convert it to a (hopefully short) key that can be used
	 * for efficient sorting.  A binary sort according to the sortkeys
	 * corresponds to a logical sort of the corresponding strings.  Current
	 * code expects that a line feed character should sort before all others, but
	 * has no other particular expectations (and that one can be changed if
	 * necessary).
	 *
	 * @param string $string UTF-8 string
	 * @return string Binary sortkey
	 */",
 "/**
	 * Given a string, return the logical \"first letter\" to be used for
	 * grouping on category pages and so on.  This has to be coordinated
	 * carefully with convertToSortkey(), or else the sorted list might jump
	 * back and forth between the same \"initial letters\" or other pathological
	 * behavior.  For instance, if you just return the first character, but \"a\"
	 * sorts the same as \"A\" based on getSortKey(), then you might get a
	 * list like
	 *
	 * == A ==
	 * * [[Aardvark]]
	 *
	 * == a ==
	 * * [[antelope]]
	 *
	 * == A ==
	 * * [[Ape]]
	 *
	 * etc., assuming for the sake of argument that $wgCapitalLinks is false.
	 *
	 * @param string $string UTF-8 string
	 * @return string UTF-8 string corresponding to the first letter of input
	 */",
 "/**
 * Collation class that\'s essentially a no-op.
 *
 * Does sorting based on binary value of the string.
 * Like how things were pre 1.17.
 */",
 "/**
	 * Do a binary search, and return the index of the largest item that sorts 
	 * less than or equal to the target value.
	 *
	 * @param $valueCallback array A function to call to get the value with
	 *     a given array index.
	 * @param $valueCount int The number of items accessible via $valueCallback,
	 *     indexed from 0 to $valueCount - 1
	 * @param $comparisonCallback array A callback to compare two values, returning
	 *     -1, 0 or 1 in the style of strcmp().
	 * @param $target string The target value to find.
	 *
	 * @return The item index of the lower bound, or false if the target value
	 *     sorts before all items.
	 */",
 "/**
	 * Get the message blobs for a set of modules
	 *
	 * @param $resourceLoader ResourceLoader object
	 * @param $modules array Array of module objects keyed by module name
	 * @param $lang string Language code
	 * @return array An array mapping module names to message blobs
	 */",
 "/**
	 * Generate and insert a new message blob. If the blob was already
	 * present, it is not regenerated; instead, the preexisting blob
	 * is fetched and returned.
	 *
	 * @param $name String: module name
	 * @param $module ResourceLoaderModule object
	 * @param $lang String: language code
	 * @return mixed Message blob or false if the module has no messages
	 */",
 "/**
	 * Update the message blob for a given module in a given language
	 *
	 * @param $name String: module name
	 * @param $module ResourceLoaderModule object
	 * @param $lang String: language code
	 * @return String Regenerated message blob, or null if there was no blob for the given module/language pair
	 */",
 "/**
	 * Update a single message in all message blobs it occurs in.
	 *
	 * @param $key String: message key
	 */",
 "/**
	 * Create an update queue for updateMessage()
	 *
	 * @param $key String: message key
	 * @param $prevUpdates Array: updates queue to refresh or null to build a fresh update queue
	 * @return Array: updates queue
	 */",
 "/**
	 * Reencode a message blob with the updated value for a message
	 *
	 * @param $blob String: message blob (JSON object)
	 * @param $key String: message key
	 * @param $lang String: language code
	 * @return Message blob with $key replaced with its new value
	 */",
 "/**
	 * Get the message blobs for a set of modules from the database.
	 * Modules whose blobs are not in the database are silently dropped.
	 *
	 * @param $resourceLoader ResourceLoader object
	 * @param $modules Array of module names
	 * @param $lang String: language code
	 * @return array Array mapping module names to blobs
	 */",
 "/**
	 * Generate the message blob for a given module in a given language.
	 *
	 * @param $module ResourceLoaderModule object
	 * @param $lang String: language code
	 * @return String: JSON object
	 */",
 "/**
 * This class provides access to the resource message blobs storage used by
 * the ResourceLoader.
 *
 * A message blob is a JSON object containing the interface messages for a
 * certain resource in a certain language. These message blobs are cached
 * in the msg_resource table and automatically invalidated when one of their
 * consistuent messages or the resource itself is changed.
 */",
 "/**
 * Hints for editing
 * Avoid ???? and other special codings because of legibility for those users,
 * who will take this as a basis for further ripuarian message interfaces
 * ???? => ??, ???? => ??, ???? => ??, ????? => ??, ????? => ??, ???? => ??, ???? => ??
 * ??????? => ???, ??????? => ???
 */",
 "/**
	 * Constructor.
	 * @param $key: message key, or array of message keys to try and use the first non-empty message for
	 * @param $params Array message parameters
	 * @return Message: $this
	 */",
 "/**
	 * Factory function that is just wrapper for the real constructor. It is
	 * intented to be used instead of the real constructor, because it allows
	 * chaining method calls, while new objects don\'t.
	 * @param $key String: message key
	 * @param Varargs: parameters as Strings
	 * @return Message: $this
	 */",
 "/**
	 * Factory function accepting multiple message keys and returning a message instance
	 * for the first message which is non-empty. If all messages are empty then an
	 * instance of the first message key is returned.
	 * @param Varargs: message keys (or first arg as an array of all the message keys)
	 * @return Message: $this
	 */",
 "/**
	 * Adds parameters to the parameter list of this message.
	 * @param Varargs: parameters as Strings, or a single argument that is an array of Strings
	 * @return Message: $this
	 */",
 "/**
	 * Add parameters that are substituted after parsing or escaping.
	 * In other words the parsing process cannot access the contents
	 * of this type of parameter, and you need to make sure it is
	 * sanitized beforehand.  The parser will see \"$n\", instead.
	 * @param Varargs: raw parameters as Strings (or single argument that is an array of raw parameters)
	 * @return Message: $this
	 */",
 "/**
	 * Add parameters that are numeric and will be passed through
	 * Language::formatNum before substitution
	 * @param Varargs: numeric parameters (or single argument that is array of numeric parameters)
	 * @return Message: $this
	 */",
 "/**
	 * Set the language and the title from a context object
	 *
	 * @param $context IContextSource
	 * @return Message: $this
	 */",
 "/**
	 * Request the message in any language that is supported.
	 * As a side effect interface message status is unconditionally
	 * turned off.
	 * @param $lang Mixed: language code or Language object.
	 * @return Message: $this
	 */",
 "/**
	 * Request the message in the wiki\'s content language,
	 * unless it is disabled for this message.
	 * @see $wgForceUIMsgAsContentMsg
	 * @return Message: $this
	 */",
 "/**
	 * Enable or disable database use.
	 * @param $value Boolean
	 * @return Message: $this
	 */",
 "/**
	 * Set the Title object to use as context when transforming the message
	 *
	 * @param $title Title object
	 * @return Message: $this
	 */",
 "/**
	 * Returns the message parsed from wikitext to HTML.
	 * @return String: HTML
	 */",
 "/**
	 * Magic method implementation of the above (for PHP >= 5.2.0), so we can do, eg:
	 *     $foo = Message::get($key);
	 *     $string = \"<abbr>$foo</abbr>\";
	 * @return String
	 */",
 "/**
	 * Fully parse the text from wikitext to HTML
	 * @return String parsed HTML
	 */",
 "/**
	 * Returns the message text. {{-transformation is done.
	 * @return String: Unescaped message text.
	 */",
 "/**
	 * Returns the message text as-is, only parameters are subsituted.
	 * @return String: Unescaped untransformed message text.
	 */",
 "/**
	 * Returns the parsed message text which is always surrounded by a block element.
	 * @return String: HTML
	 */",
 "/**
	 * Returns the message text. {{-transformation is done and the result
	 * is escaped excluding any raw parameters.
	 * @return String: Escaped message text.
	 */",
 "/**
	 * Check whether a message key has been defined currently.
	 * @return Bool: true if it is and false if not.
	 */",
 "/**
	 * Check whether a message does not exist, or is an empty string
	 * @return Bool: true if is is and false if not
	 * @todo FIXME: Merge with isDisabled()?
	 */",
 "/**
	 * Check whether a message does not exist, is an empty string, or is \"-\"
	 * @return Bool: true if is is and false if not
	 */",
 "/**
	 * @param $value
	 * @return array
	 */",
 "/**
	 * @param $value
	 * @return array
	 */",
 "/**
	 * Substitutes any paramaters into the message text.
	 * @param $message String: the message text
	 * @param $type String: either before or after
	 * @return String
	 */",
 "/**
	 * Extracts the parameter type and preprocessed the value if needed.
	 * @param $param String|Array: Parameter as defined in this class.
	 * @return Tuple(type, value)
	 * @throws MWException
	 */",
 "/**
	 * Wrapper for what ever method we use to parse wikitext.
	 * @param $string String: Wikitext message contents
	 * @return string Wikitext parsed into HTML
	 */",
 "/**
	 * Wrapper for what ever method we use to {{-transform wikitext.
	 * @param $string String: Wikitext message contents
	 * @return string Wikitext with {{-constructs replaced with their values.
	 */",
 "/**
	 * Returns the textual value for the message.
	 * @return Message contents or placeholder
	 */",
 "/**
	 * Wrapper for what ever method we use to get message contents
	 *
	 * @return string
	 */",
 "/**
 * The Message class provides methods which fullfil two basic services:
 *  - fetching interface messages
 *  - processing messages into a variety of formats
 *
 * First implemented with MediaWiki 1.17, the Message class is intented to
 * replace the old wfMsg* functions that over time grew unusable.
 * @see https://www.mediawiki.org/wiki/New_messages_API for equivalences
 * between old and new functions.
 *
 * You should use the wfMessage() global function which acts as a wrapper for
 * the Message class. The wrapper let you pass parameters as arguments.
 *
 * The most basic usage cases would be:
 *
 * @code
 *     // Initialize a Message object using the \'some_key\' message key
 *     $message = wfMessage( \'some_key\' );
 *
 *     // Using two parameters those values are strings \'value1\' and \'value2\':
 *     $message = wfMessage( \'some_key\',
 *          \'value1\', \'value2\'
 *     );
 * @endcode
 *
 * @section message_global_fn Global function wrapper:
 *
 * Since wfMessage() returns a Message instance, you can chain its call with
 * a method. Some of them return a Message instance too so you can chain them.
 * You will find below several examples of wfMessage() usage.
 *
 * Fetching a message text for interface message:
 *
 * @code
 *    $button = Xml::button(
 *         wfMessage( \'submit\' )->text()
 *    );
 * @endcode
 *
 * A Message instance can be passed parameters after it has been constructed,
 * use the params() method to do so:
 *
 * @code
 *     wfMessage( \'welcome-to\' )
 *         ->params( $wgSitename )
 *         ->text();
 * @endcode
 *
 * {{GRAMMAR}} and friends work correctly:
 *
 * @code
 *    wfMessage( \'are-friends\',
 *        $user, $friend
 *    );
 *    wfMessage( \'bad-message\' )
 *         ->rawParams( \'<script>...</script>\' )
 *         ->escaped();
 * @endcode
 *
 * @section message_language Changing language:
 *
 * Messages can be requested in a different language or in whatever current
 * content language is being used. The methods are:
 *     - Message->inContentLanguage()
 *     - Message->inLanguage()
 *
 * Sometimes the message text ends up in the database, so content language is
 * needed:
 *
 * @code
 *    wfMessage( \'file-log\',
 *        $user, $filename
 *    )->inContentLanguage()->text();
 * @endcode
 *
 * Checking whether a message exists:
 *
 * @code
 *    wfMessage( \'mysterious-message\' )->exists()
 *    // returns a boolean whether the \'mysterious-message\' key exist.
 * @endcode
 *
 * If you want to use a different language:
 *
 * @code
 *    $userLanguage = $user->getOption( \'language\' );
 *    wfMessage( \'email-header\' )
 *         ->inLanguage( $userLanguage )
 *         ->plain();
 * @endcode
 *
 * @note You cannot parse the text except in the content or interface
 * @note languages
 *
 * @section message_compare_old Comparison with old wfMsg* functions:
 *
 * Use full parsing:
 *
 * @code
 *     // old style:
 *     wfMsgExt( \'key\', array( \'parseinline\' ), \'apple\' );
 *     // new style:
 *     wfMessage( \'key\', \'apple\' )->parse();
 * @endcode
 *
 * Parseinline is used because it is more useful when pre-building HTML.
 * In normal use it is better to use OutputPage::(add|wrap)WikiMsg.
 *
 * Places where HTML cannot be used. {{-transformation is done.
 * @code
 *     // old style:
 *     wfMsgExt( \'key\', array( \'parsemag\' ), \'apple\', \'pear\' );
 *     // new style:
 *     wfMessage( \'key\', \'apple\', \'pear\' )->text();
 * @endcode
 *
 * Shortcut for escaping the message too, similar to wfMsgHTML(), but
 * parameters are not replaced after escaping by default.
 * @code
 *     $escaped = wfMessage( \'key\' )
 *          ->rawParams( \'apple\' )
 *          ->escaped();
 * @endcode
 *
 * @section message_appendix Appendix:
 *
 * @todo
 * - test, can we have tests?
 * - this documentation needs to be extended
 *
 * @see https://www.mediawiki.org/wiki/WfMessage()
 * @see https://www.mediawiki.org/wiki/New_messages_API
 * @see https://www.mediawiki.org/wiki/Localisation
 *
 * @since 1.17
 * @author Niklas Laxstr??m
 */",
 "/**
	 * @param $resultPageSet ApiPageSet
	 */",
 "/**
 * This query adds an <images> subelement to all pages with the list of images embedded into those pages.
 *
 * @ingroup API
 */",
 "/**
	 * @param $langobj Language
	 * @param $maincode string
	 * @param $variants array
	 * @param $variantfallbacks array
	 * @param $flags array
	 * @param $manualLevel array
	 */",
 "/**
	 * there shouldn\'t be any latin text in Chinese conversion, so no need
	 * to mark anything.
	 * $noParse is there for compatibility with LanguageConvert::markNoConversion
	 *
	 * @param $text string
	 * @param $noParse bool
	 *
	 * @return string
	 */",
 "/**
	 * @param $key string
	 * @return String
	 */",
 "/**
 * @ingroup Language
 */",
 "/**
	 * this should give much better diff info
	 *
	 * @param $text string
	 * @return string
	 */",
 "/**
	 * @param $text string
	 * @return string
	 */",
 "/**
	 * word segmentation
	 *
	 * @param $string string
	 * @param $autoVariant string
	 * @return String
	 */",
 "/**
	 * @param $termsArray array
	 * @return array
	 */",
 "/**
 * class that handles both Traditional and Simplified Chinese
 * right now it only distinguish gan_hans, gan_hant.
 *
 * @ingroup Language
 */",
 "/** Tajik (Cyrillic script) (????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Cbrown1023
 * @author Chinneeb
 * @author Farrukh
 * @author FrancisTyers
 * @author Ibrahim
 * @author Kaganer
 * @author Soroush
 * @author Urhixidur
 * @author ???????? ????????????????
 */",
 "/** Macedonian (????????????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Bjankuloski06
 * @author Brainmachine
 * @author Brest
 * @author Brest2008
 * @author FlavrSavr
 * @author Glupav
 * @author INkubusse
 * @author Kaganer
 * @author Misos
 * @author Rancher
 * @author Spacebirdy
 * @author Urhixidur
 * @author ???????? ????????????????
 */",
 "/**
	 * Update *_deleted bitfields in various tables to hide or unhide usernames
	 * @param  $name String username
	 * @param  $userId Int user id
	 * @param  $op String operator \'|\' or \'&\'
	 * @param  $dbw null|Database, if you happen to have one lying around
	 * @return bool
	 */",
 "/**
 * Backend functions for suppressing and unsuppressing all references to a given user,
 * used when blocking with HideUser enabled.  This was spun out of SpecialBlockip.php
 * in 1.18; at some point it needs to be rewritten to either use RevisionDelete abstraction,
 * or at least schema abstraction.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @file
 * @ingroup RevisionDelete
 */",
 "/**
 * By default the FancyCaptcha rotates among all available captchas.
 * Setting $wgCaptchaDeleteOnSolve to true will delete the captcha
 * files when they are correctly solved. Thus the user will need
 * something like a cron creating new thumbnails to avoid drying up.
 */",
 "/**
	 * @param $parser Parser
	 * @return void
	 */",
 "/**
	 * @param $parser Parser
	 * @param string $part1
	 * @return array
	 */",
 "/**
	 * @param $parser Parser
	 * @param  $date
	 * @param null $defaultPref
	 * @return mixed|string
	 */",
 "/**
	 * urlencodes a string according to one of three patterns: (bug 22474)
	 *
	 * By default (for HTTP \"query\" strings), spaces are encoded as \'+\'.
	 * Or to encode a value for the HTTP \"path\", spaces are encoded as \'%20\'.
	 * For links to \"wiki\"s, or similar software, spaces are encoded as \'_\',
	 *
	 * @param $parser Parser object
	 * @param $s String: The text to encode.
	 * @param $arg String (optional): The type of encoding.
	 */",
 "/**
	 * @param $parser Parser
	 * @param string $s
	 * @return
	 */",
 "/**
	 * @param $parser Parser
	 * @param string $s
	 * @return
	 */",
 "/**
	 * @param $parser Parser
	 * @param string $num
	 * @param null $raw
	 * @return
	 */",
 "/**
	 * @param $parser Parser
	 * @param string $case
	 * @param string $word
	 * @return
	 */",
 "/**
	 * @param $parser Parser
	 * @param $username string
	 * @return
	 */",
 "/**
	 * @param $parser Parser
	 * @param string $text
	 * @return
	 */",
 "/**
	 * Override the title of the page when viewed, provided we\'ve been given a
	 * title which will normalise to the canonical title
	 *
	 * @param $parser Parser: parent parser
	 * @param $text String: desired title text
	 * @return String
	 */",
 "/**
	 * Given a title, return the namespace name that would be given by the
	 * corresponding magic word
	 * Note: function name changed to \"mwnamespace\" rather than \"namespace\"
	 * to not break PHP 5.3
	 */",
 "/**
	 * Functions to get and normalize pagenames, corresponding to the magic words
	 * of the same names
	 */",
 "/**
	 * Return the number of pages in the given category, or 0 if it\'s nonexis-
	 * tent.  This is an expensive parser function and can\'t be called too many
	 * times per page.
	 */",
 "/**
	 * Return the size of the given page, or 0 if it\'s nonexistent.  This is an
	 * expensive parser function and can\'t be called too many times per page.
	 *
	 * @todo FIXME: This doesn\'t work correctly on preview for getting the size
	 *   of the current page.
	 * @todo FIXME: Title::getLength() documentation claims that it adds things
	 *   to the link cache, so the local cache here should be unnecessary, but
	 *   in fact calling getLength() repeatedly for the same $page does seem to
	 *   run one query for each call?
	 * @todo Document parameters
	 *
	 * @param $parser Parser
	 * @param $page String TODO DOCUMENT (Default: empty string)
	 * @param $raw TODO DOCUMENT (Default: null)
	 */",
 "/**
	* Returns the requested protection level for the current page
	*/",
 "/**
	 * Gives language names.
	 * @param $parser Parser
	 * @param $code String  Language code
	 * @param $language String  Language code
	 * @return String
	 */",
 "/**
	 * Unicode-safe str_pad with the restriction that $length is forced to be <= 500
	 */",
 "/**
	 * @param $parser Parser
	 * @param  $text
	 * @return string
	 */",
 "/**
	 * @param $parser Parser
	 * @param $text String The sortkey to use
	 * @param $uarg String Either \"noreplace\" or \"noerror\" (in en)
	 *   both suppress errors, and noreplace does nothing if
	 *   a default sortkey already exists.
	 * @return string
	 */",
 "/**
	 * Parser function to extension tag adaptor
	 */",
 "/**
 * Various core parser functions, registered in Parser::firstCallInit()
 * @ingroup Parser
 */",
 "/** @dataProvider providerPlural */",
 "/** Tests for MediaWiki languages/LanguageCu.php */",
 "/**
 * Internationalisation file for extension Gadgets.
 *
 * @file
 * @ingroup Extensions
 * @author Daniel Kinzler, brightbyte.de
 * @copyright ?? 2007 Daniel Kinzler
 * @license GNU General Public Licence 2.0 or later
 */",
 "/** English
 * @author Daniel Kinzler, brightbyte.de
 */",
 "/** Message documentation (Message documentation)
 * @author EugeneZelenko
 * @author Jon Harald S??by
 * @author Kghbln
 * @author Lloffiwr
 * @author Mormegil
 * @author Purodha
 * @author SPQRobin
 * @author Siebrand
 * @author The Evil IP address
 */",
 "/** Afrikaans (Afrikaans)
 * @author Anrie
 * @author Naudefj
 */",
 "/** Amharic (????????????)
 * @author Codex Sinaiticus
 */",
 "/** Aragonese (Aragon??s)
 * @author Juanpabl
 */",
 "/** Arabic (??????????????)
 * @author Aiman titi
 * @author DRIHEM
 * @author Meno25
 * @author OsamaK
 * @author ????????
 */",
 "/** Aramaic (??????????)
 * @author Basharh
 */",
 "/** Egyptian Spoken Arabic (????????)
 * @author Ghaly
 * @author Meno25
 * @author Ramsis II
 */",
 "/** Assamese (??????????????????)
 * @author Bishnu Saikia
 * @author Gitartha.bordoloi
 */",
 "/** Asturian (Asturianu)
 * @author Esbardu
 * @author Xuacu
 */",
 "/** Azerbaijani (Az??rbaycanca)
 * @author Cekli829
 * @author PPerviz
 * @author Vago
 * @author Vugar 1981
 */",
 "/** Bashkir (??????????????????)
 * @author ???????????? ????????????
 */",
 "/** Bavarian (Boarisch)
 * @author Mucalexx
 */",
 "/** Southern Balochi (?????????? ????????????)
 * @author Mostafadaneshvar
 */",
 "/** Belarusian (Tara??kievica orthography) (??????????????????????? (??????????????????????)???)
 * @author Cesco
 * @author EugeneZelenko
 * @author Jim-by
 * @author Red Winged Duck
 * @author Wizardist
 * @author Zedlik
 */",
 "/** Bulgarian (??????????????????)
 * @author Borislav
 * @author DCLXVI
 * @author Spiritia
 * @author Turin
 */",
 "/** Bengali (???????????????)
 * @author Bellayet
 * @author Wikitanvir
 * @author Zaheen
 */",
 "/** Breton (Brezhoneg)
 * @author Fulup
 * @author Gwendal
 * @author Y-M D
 */",
 "/** Bosnian (Bosanski)
 * @author CERminator
 */",
 "/** Catalan (Catal??)
 * @author Aleator
 * @author Gemmaa
 * @author Paucabot
 * @author SMP
 * @author Toniher
 * @author Vriullop
 */",
 "/** Chechen (??????????????)
 * @author Sasan700
 */",
 "/** Sorani (??????????)
 * @author Asoxor
 */",
 "/** Czech (??esky)
 * @author Danny B.
 * @author Li-sung
 * @author Mormegil
 */",
 "/** Welsh (Cymraeg)
 * @author Lloffiwr
 */",
 "/** Danish (Dansk)
 * @author Byrial
 * @author Peter Alberti
 */",
 "/** German (Deutsch)
 * @author Daniel Kinzler, brightbyte.de
 * @author Kghbln
 * @author Metalhead64
 * @author Raimond Spekking
 * @author The Evil IP address
 * @author Umherirrender
 * @author ???
 */",
 "/** German (formal address) (???Deutsch (Sie-Form)???)
 * @author Kghbln
 */",
 "/** Zazaki (Zazaki)
 * @author Erdemaslancan
 * @author Xoser
 */",
 "/** Lower Sorbian (Dolnoserbski)
 * @author Michawiki
 */",
 "/** Greek (????????????????)
 * @author AK
 * @author Badseed
 * @author Consta
 * @author Dead3y3
 * @author Glavkos
 * @author Lou
 * @author ZaDiak
 */",
 "/** Esperanto (Esperanto)
 * @author Yekrats
 */",
 "/** Spanish (Espa??ol)
 * @author Crazymadlover
 * @author Fitoschido
 * @author Muro de Aguas
 * @author Remember the dot
 * @author Sanbec
 * @author Vivaelcelta
 */",
 "/** Estonian (Eesti)
 * @author Avjoska
 * @author Pikne
 */",
 "/** Basque (Euskara)
 * @author An13sa
 * @author Inorbez
 * @author Unai Fdz. de Beto??o
 */",
 "/** Extremaduran (Estreme??u)
 * @author Better
 */",
 "/** Persian (??????????)
 * @author Bersam
 * @author Ebraminio
 * @author Huji
 * @author Ladsgroup
 * @author Wayiran
 * @author ZxxZxxZ
 */",
 "/** Finnish (Suomi)
 * @author Crt
 * @author Nike
 * @author Olli
 */",
 "/** Faroese (F??royskt)
 * @author EileenSanda
 */",
 "/** French (Fran??ais)
 * @author Delhovlyn
 * @author Dr Brains
 * @author Grondin
 * @author IAlex
 * @author Meno25
 * @author Peter17
 * @author PieRRoMaN
 * @author Sherbrooke
 * @author Urhixidur
 * @author Zcqsc06
 * @author Zetud
 */",
 "/** Franco-Proven??al (Arpetan)
 * @author ChrisPtDe
 */",
 "/** Galician (Galego)
 * @author Alma
 * @author Toli??o
 */",
 "/** Ancient Greek (????????????? ??????????????????)
 * @author Omnipaedista
 */",
 "/** Swiss German (Alemannisch)
 * @author Als-Chl??mens
 * @author Als-Holder
 */",
 "/** Gujarati (?????????????????????)
 * @author Dsvyas
 * @author KartikMistry
 * @author Sushant savla
 */",
 "/** Hebrew (??????????)
 * @author Amire80
 * @author Rotem Liss
 * @author YaronSh
 */",
 "/** Hindi (??????????????????)
 * @author Ansumang
 * @author Kaustubh
 * @author Mayur
 * @author Shyam
 */",
 "/** Croatian (Hrvatski)
 * @author Anton008
 * @author Dalibor Bosits
 * @author Ex13
 * @author SpeedyGonsales
 */",
 "/** Upper Sorbian (Hornjoserbsce)
 * @author Michawiki
 */",
 "/** Hungarian (Magyar)
 * @author B??thoryP??ter
 * @author Dani
 * @author Tgr
 */",
 "/** Interlingua (Interlingua)
 * @author McDutchie
 */",
 "/** Indonesian (Bahasa Indonesia)
 * @author Bennylin
 * @author Farras
 * @author IvanLanin
 */",
 "/** Iloko (Ilokano)
 * @author Lam-ang
 */",
 "/** Ido (Ido)
 * @author Malafaya
 */",
 "/** Icelandic (??slenska)
 * @author J??na ????runn
 * @author Max??
 * @author Sn??var
 */",
 "/** Italian (Italiano)
 * @author Beta16
 * @author BrokenArrow
 * @author Darth Kule
 * @author Melos
 * @author Nemo bis
 */",
 "/** Japanese (?????????)
 * @author Aotake
 * @author Fryed-peach
 * @author JtFuruhata
 * @author Mzm5zbC3
 * @author Shirayuki
 * @author Whym
 * @author ????????????
 */",
 "/** Jutish (Jysk)
 * @author Husl??ke
 */",
 "/** Javanese (Basa Jawa)
 * @author Meursault2004
 * @author Pras
 */",
 "/** Georgian (?????????????????????)
 * @author BRUTE
 * @author David1010
 */",
 "/** Kazakh (Arabic script) (????????????????? (??????????)???) */",
 "/** Kazakh (Cyrillic script) (????????????????? (??????????)???) */",
 "/** Kazakh (Latin script) (???Qazaq??a (lat??n)???) */",
 "/** Khmer (???????????????????????????)
 * @author Chhorran
 * @author Lovekhmer
 * @author Thearith
 * @author ???????????????????????????
 * @author ??????????????????????????????
 */",
 "/** Korean (?????????)
 * @author Ficell
 * @author IRTC1015
 * @author Klutzy
 * @author Kwj2772
 */",
 "/** Karachay-Balkar (????????????????-??????????????)
 * @author Iltever
 */",
 "/** Colognian (Ripoarisch)
 * @author Hoo
 * @author Purodha
 */",
 "/** Kurdish (Latin script) (???Kurd?? (lat??n??)???)
 * @author George Animal
 */",
 "/** Luxembourgish (L??tzebuergesch)
 * @author Les Meloures
 * @author Robby
 */",
 "/** Lezghian (??????????)
 * @author Soul Train
 */",
 "/** Limburgish (Limburgs)
 * @author Matthias
 * @author Ooswesthoesbes
 * @author Tibor
 */",
 "/** Lithuanian (Lietuvi??)
 * @author Eitvys200
 * @author Homo
 * @author Vpovilaitis
 */",
 "/** Lushai (Mizo ??awng)
 * @author RMizo
 */",
 "/** Latvian (Latvie??u)
 * @author Marozols
 * @author Papuass
 */",
 "/** Malagasy (Malagasy)
 * @author Jagwar
 */",
 "/** Macedonian (????????????????????)
 * @author Bjankuloski06
 * @author Brest
 */",
 "/** Malayalam (??????????????????)
 * @author Praveenp
 * @author Shijualex
 */",
 "/** Marathi (???????????????)
 * @author Kaustubh
 * @author Mahitgar
 * @author Rahuldeshmukh101
 * @author V.narsikar
 */",
 "/** Malay (Bahasa Melayu)
 * @author Anakmalaysia
 * @author Aviator
 * @author Zamwan
 */",
 "/** Maltese (Malti)
 * @author Chrisportelli
 */",
 "/** Mazanderani (????????????????)
 * @author Mehdi
 */",
 "/** Norwegian (bokm??l)??? (???Norsk (bokm??l)???)
 * @author Jon Harald S??by
 * @author Laaknor
 * @author Nghtwlkr
 * @author Sjurhamre
 */",
 "/** Low German (Plattd????tsch)
 * @author Slomox
 */",
 "/** Nedersaksisch (Nedersaksisch)
 * @author Servien
 */",
 "/** Nepali (??????????????????)
 * @author Bhawani Gautam
 */",
 "/** Dutch (Nederlands)
 * @author Annabel
 * @author SPQRobin
 * @author Siebrand
 */",
 "/** Norwegian Nynorsk (???Norsk (nynorsk)???)
 * @author Eirik
 * @author Harald Khan
 * @author Nghtwlkr
 * @author Njardarlogar
 */",
 "/** Occitan (Occitan)
 * @author Boulaur
 * @author Cedric31
 */",
 "/** Oriya (????????????)
 * @author Odisha1
 * @author Psubhashish
 */",
 "/** Pampanga (Kapampangan)
 * @author Katimawan2005
 */",
 "/** Deitsch (Deitsch)
 * @author Xqt
 */",
 "/** Polish (Polski)
 * @author Derbeth
 * @author Marcin ??ukasz Kiejzik
 * @author Sp5uhe
 */",
 "/** Piedmontese (Piemont??is)
 * @author Borich??t
 * @author B??rto \'d S??ra
 * @author Dragon??t
 */",
 "/** Western Punjabi (????????????)
 * @author Khalid Mahmood
 */",
 "/** Pashto (????????)
 * @author Ahmed-Najib-Biabani-Ibrahimkhel
 */",
 "/** Portuguese (Portugu??s)
 * @author 555
 * @author Hamilton Abreu
 * @author Malafaya
 */",
 "/** Brazilian Portuguese (Portugu??s do Brasil)
 * @author Eduardo.mps
 * @author Giro720
 * @author GoEThe
 * @author Rafael Vargas
 */",
 "/** Quechua (Runa Simi)
 * @author AlimanRuna
 */",
 "/** Romanian (Rom??n??)
 * @author Cin
 * @author Firilacroco
 * @author KlaudiuMihaila
 * @author Minisarm
 * @author Stelistcristi
 */",
 "/** Tarand??ne (Tarand??ne)
 * @author Joetaras
 */",
 "/** Russian (??????????????)
 * @author Ahonc
 * @author Eleferen
 * @author Illusion
 * @author MaxSem
 * @author VasilievVV
 * @author ?????????????????? ??????????????
 */",
 "/** Rusyn (????????????????????)
 * @author Gazeb
 */",
 "/** Sakha (???????? ????????)
 * @author HalanTul
 */",
 "/** Samogitian (??emait????ka)
 * @author Hugo.arg
 */",
 "/** Sinhala (???????????????)
 * @author Budhajeewa
 * @author ?????????????????????????????????
 * @author ??????????????? ?????????????????????
 * @author ??????????????????
 */",
 "/** Slovak (Sloven??ina)
 * @author Helix84
 * @author Teslaton
 */",
 "/** Slovenian (Sloven????ina)
 * @author Dbc334
 * @author Smihael
 */",
 "/** Albanian (Shqip)
 * @author Mikullovci11
 * @author Olsi
 * @author Vinie007
 */",
 "/** Serbian (Cyrillic script) (??????????????? (????????????????)???)
 * @author Millosh
 * @author Nikola Smolenski
 * @author Rancher
 * @author ?????????? ??????????????????
 */",
 "/** Serbian (Latin script) (???Srpski (latinica)???)
 * @author Michaello
 * @author ?????????? ??????????????????
 */",
 "/** Seeltersk (Seeltersk)
 * @author Pyt
 */",
 "/** Sundanese (Basa Sunda)
 * @author Irwangatot
 */",
 "/** Swedish (Svenska)
 * @author Ainali
 * @author Boivie
 * @author Cohan
 * @author Diupwijk
 * @author Lejonel
 * @author M.M.S.
 */",
 "/** Swahili (Kiswahili) */",
 "/** Tamil (???????????????)
 * @author TRYPPN
 */",
 "/** Telugu (??????????????????)
 * @author Kiranmayee
 * @author Mpradeep
 * @author Veeven
 */",
 "/** Tajik (Cyrillic script) (????????????)
 * @author Ibrahim
 */",
 "/** Tajik (Latin script) (Tojik??)
 * @author Liangent
 */",
 "/** Thai (?????????)
 * @author Ans
 * @author Passawuth
 */",
 "/** Turkmen (T??rkmen??e)
 * @author Hanberke
 */",
 "/** Tagalog (Tagalog)
 * @author AnakngAraw
 */",
 "/** Turkish (T??rk??e)
 * @author Emperyan
 * @author Erkan Yilmaz
 * @author Joseph
 * @author Karduelis
 * @author Koc61
 */",
 "/** Tatar (Cyrillic script) (??????????????)
 * @author ????????????
 */",
 "/** Ukrainian (????????????????????)
 * @author AS
 * @author Ahonc
 * @author Dim Grits
 * @author Prima klasy4na
 * @author Riwnodennyk
 * @author Sodmy
 * @author ????????
 */",
 "/** V??neto (V??neto)
 * @author Candalua
 */",
 "/** Veps (Veps??n kel???)
 * @author ?????????? ????????????????
 */",
 "/** Vietnamese (Ti???ng Vi???t)
 * @author Meno25
 * @author Minh Nguyen
 * @author Vinhtantran
 */",
 "/** Volap??k (Volap??k)
 * @author Smeira
 */",
 "/** Yiddish (????????????)
 * @author ????????????????
 */",
 "/** Yoruba (Yor??b??)
 * @author Demmy
 */",
 "/** Cantonese (??????)
 * @author Shinjiman
 */",
 "/** Simplified Chinese (?????????(??????)???)
 * @author Anakmalaysia
 * @author Bencmq
 * @author Gaoxuewei
 * @author Hydra
 * @author Liangent
 * @author Shinjiman
 * @author Xiaomingyan
 * @author ???pp
 */",
 "/** Traditional Chinese (?????????(??????)???)
 * @author Anakmalaysia
 * @author Horacewai2
 * @author Liangent
 * @author Mark85296341
 * @author Shinjiman
 * @author Waihorace
 */",
 "/** Hungarian (Magyar)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Alquen
 * @author Balasyum
 * @author Bdamokos
 * @author Bean49
 * @author Benn??
 * @author Bin??ris
 * @author B??thoryP??ter
 * @author CERminator
 * @author Cerasus
 * @author Dani
 * @author Dj
 * @author Dorgan
 * @author Enb??k??
 * @author Glanthor Reviol
 * @author Gondnok
 * @author Hunyadym
 * @author Kaganer
 * @author KossuthRad
 * @author Misibacsi
 * @author Samat
 * @author Sucy
 * @author Terik
 * @author Tgr
 * @author Xbspiro
 */",
 "/** Mazanderani (????????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Ali1986
 * @author Ebraminio
 * @author Firuz
 * @author Mjbmr
 * @author Parthava (on mzn.wikipedia.org)
 * @author Spacebirdy
 * @author ??????
 */",
 "/** Tatar (??????????????/Tatar??a)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Timming
 */",
 "/**
	 * Create a WatchedItem object with the given user and title
	 * @param $user User: the user to use for (un)watching
	 * @param $title Title: the title we\'re going to (un)watch
	 * @return WatchedItem object
	 */",
 "/**
	 * Is mTitle being watched by mUser?
	 * @return bool
	 */",
 "/**
	 * Given a title and user (assumes the object is setup), add the watch to the
	 * database.
	 * @return bool (always true)
	 */",
 "/**
	 * Same as addWatch, only the opposite.
	 * @return bool
	 */",
 "/**
	 * Check if the given title already is watched by the user, and if so
	 * add watches on a new title. To be used for page renames and such.
	 *
	 * @param $ot Title: page title to duplicate entries from, if present
	 * @param $nt Title: page title to add watches on
	 */",
 "/**
	 * Handle duplicate entries. Backend for duplicateEntries().
	 *
	 * @param $ot Title
	 * @param $nt Title
	 *
	 * @return bool
	 */",
 "/**
 * @ingroup Watchlist
 */",
 "/** Lozi (Silozi)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Kaganer
 * @author Litingatinga Silozi
 * @author Ooswesthoesbes
 * @author SF-Language
 */",
 "/** Hebrew (??????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Agbad
 * @author Amire80
 * @author Drorsnir
 * @author Ijon
 * @author Ofekalef
 * @author Ofrahod
 * @author Rotem Dan (July 2003)
 * @author Rotem Liss (March 2006 on)
 * @author Rotemliss
 * @author YaronSh
 * @author ??????
 * @author ????????????
 * @author ???????? ??
 */",
 "/** Kotava (Kotava)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Kaganer
 * @author Nkosi ya Cabinda
 * @author Sab
 * @author Urhixidur
 * @author Wikimistusik
 * @author Zetud
 */",
 "/**
	 * @param string $wikitext Wikitext to get rendered
	 * @return string HTML Rendering
	 */",
 "/**
	 * Get wikitext from a the file passed as argument or STDIN
	 * @return string Wikitext
	 */",
 "/**
	 * Title object to use for CLI parsing.
	 * Default title is \'CLIParser\', it can be overriden with the option
	 * --title <Your:Title>
	 *
	 * @return Title object
	 */",
 "/**
	 * @param string $wikitext Wikitext to parse
	 * @return ParserOutput
	 */",
 "/**
	 * rules should be defined as -{ekavian | iyekavian-} -or-
	 * -{code:text | code:text | ...}-
	 *
	 * update: delete all rule parsing because it\'s not used
	 * currently, and just produces a couple of bugs
	 *
	 * @param $rule string
	 * @param $flags array
	 * @return array
	 */",
 "/**
	 * A function wrapper:
	 *   - if there is no selected variant, leave the link
	 *     names as they were
	 *   - do not try to find variants for usernames
	 *
	 * @param $link string
	 * @param $nt Title
	 * @param $ignoreOtherCond bool
	 */",
 "/**
	 * We want our external link captions to be converted in variants,
	 * so we return the original text instead -{$text}-, except for URLs
	 *
	 * @param $text string
	 * @param $noParse bool
	 *
	 * @return string
	 */",
 "/**
	 * An ugly function wrapper for parsing Image titles
	 * (to prevent image name conversion)
	 *
	 * @param $text string
	 * @param $toVariant bool
	 *
	 * @return string
	 */",
 "/**
	 *  It translates text into variant, specials:
	 *    - ommiting roman numbers
	 *
	 * @param $text string
	 * @param $toVariant string
	 *
	 * @return string
	 */",
 "/**
	 * Guess if a text is written in Cyrillic or Latin.
	 * Overrides LanguageConverter::guessVariant()
	 *
	 * @param string  $text The text to be checked
	 * @param string  $variant Language code of the variant to be checked for
	 * @return bool  true if $text appears to be written in $variant
	 *
	 * @author Nikola Smolenski <smolensk@eunet.rs>
	 * @since 1.19
	 */",
 "/**
 * There are two levels of conversion for Serbian: the script level
 * (Cyrillics <-> Latin), and the variant level (ekavian
 * <->iyekavian). The two are orthogonal. So we really only need two
 * dictionaries: one for Cyrillics and Latin, and one for ekavian and
 * iyekavian.
 *
 * @ingroup Language
 */",
 "/**
	 * @param $count int
	 * @param $forms array
	 *
	 * @return string
	 */",
 "/**
 * Serbian (???????????? / Srpski)
 *
 * @ingroup Language
 */",
 "/**
	 * Factory: creates an object representing an ID
	 *
	 * @param $id
	 *
	 * @return MagicWord
	 */",
 "/**
	 * Get an array of parser variable IDs
	 *
	 * @return array
	 */",
 "/**
	 * Get an array of parser substitution modifier IDs
	 * @return array
	 */",
 "/**
	 * Allow external reads of TTL array
	 *
	 * @param $id int
	 * @return array
	 */",
 "/**
	 * Get a MagicWordArray of double-underscore entities
	 *
	 * @return MagicWordArray
	 */",
 "/**
	 * Clear the self::$mObjects variable
	 * For use in parser tests
	 */",
 "/**
	 * Initialises this object with an ID
	 *
	 * @param $id
	 */",
 "/**
	 * Preliminary initialisation
	 * @private
	 */",
 "/**
	 * A comparison function that returns -1, 0 or 1 depending on whether the
	 * first string is longer, the same length or shorter than the second
	 * string.
	 *
	 * @param $s1 string
	 * @param $s2 string
	 *
	 * @return int
	 */",
 "/**
	 * Gets a regex representing matching the word
	 *
	 * @return string
	 */",
 "/**
	 * Gets the regexp case modifier to use, i.e. i or nothing, to be used if
	 * one is using MagicWord::getBaseRegex(), otherwise it\'ll be included in
	 * the complete expression
	 *
	 * @return string
	 */",
 "/**
	 * Gets a regex matching the word, if it is at the string start
	 *
	 * @return string
	 */",
 "/**
	 * regex without the slashes and what not
	 *
	 * @return string
	 */",
 "/**
	 * Returns true if the text contains the word
	 *
	 * @param $text string
	 *
	 * @return bool
	 */",
 "/**
	 * Returns true if the text starts with the word
	 *
	 * @param $text string
	 *
	 * @return bool
	 */",
 "/**
	 * Returns NULL if there\'s no match, the value of $1 otherwise
	 * The return code is the matched string, if there\'s no variable
	 * part in the regex and the matched variable part ($1) if there
	 * is one.
	 *
	 * @param $text string
	 *
	 * @return string
	 */",
 "/**
	 * Returns true if the text matches the word, and alters the
	 * input string, removing all instances of the word
	 *
	 * @param $text string
	 *
	 * @return bool
	 */",
 "/**
	 * @param  $text
	 * @return bool
	 */",
 "/**
	 * Used in matchAndRemove()
	 *
	 * @return string
	 */",
 "/**
	 * Replaces the word with something else
	 *
	 * @param $replacement
	 * @param $subject
	 * @param $limit int
	 *
	 * @return string
	 */",
 "/**
	 * Variable handling: {{SUBST:xxx}} style words
	 * Calls back a function to determine what to replace xxx with
	 * Input word must contain $1
	 *
	 * @param $text string
	 * @param $callback
	 *
	 * @return string
	 */",
 "/**
	 * Matches the word, where $1 is a wildcard
	 *
	 * @return string
	 */",
 "/**
	 * Matches the entire string, where $1 is a wildcard
	 *
	 * @return string
	 */",
 "/**
	 * Accesses the synonym list directly
	 *
	 * @param $i int
	 *
	 * @return string
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * Returns true if the last call to replace() or substituteCallback()
	 * returned a modified text, otherwise false.
	 *
	 * @return bool
	 */",
 "/**
	 * $magicarr is an associative array of (magic word ID => replacement)
	 * This method uses the php feature to do several replacements at the same time,
	 * thereby gaining some efficiency. The result is placed in the out variable
	 * $result. The return value is true if something was replaced.
	 * @todo Should this be static? It doesn\'t seem to be used at all
	 *
	 * @param $magicarr
	 * @param $subject
	 * @param $result
	 *
	 * @return bool
	 */",
 "/**
	 * Adds all the synonyms of this MagicWord to an array, to allow quick
	 * lookup in a list of magic words
	 *
	 * @param $array
	 * @param $value
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * @return int
	 */",
 "/**
 * This class encapsulates \"magic words\" such as #redirect, __NOTOC__, etc.
 *
 * @par Usage:
 * @code
 *     if (MagicWord::get( \'redirect\' )->match( $text ) ) {
 *       // some code
 *     }
 * @endcode
 *
 * Possible future improvements:
 *   * Simultaneous searching for a number of magic words
 *   * MagicWord::$mObjects in shared memory
 *
 * Please avoid reading the data out of one of these objects and then writing
 * special case code. If possible, add another match()-like function here.
 *
 * To add magic words in an extension, use $magicWords in a file listed in
 * $wgExtensionMessagesFiles[].
 * 
 * @par Example:
 * @code
 * $magicWords = array();
 *
 * $magicWords[\'en\'] = array(
 * 	\'magicwordkey\' => array( 0, \'case_insensitive_magic_word\' ),
 * 	\'magicwordkey2\' => array( 1, \'CASE_sensitive_magic_word2\' ),
 * );
 * @endcode
 *
 * For magic words which are also Parser variables, add a MagicWordwgVariableIDs
 * hook. Use string keys.
 *
 * @ingroup Parser
 */",
 "/**
	 * Add a magic word by name
	 *
	 * @param $name string
	 */",
 "/**
	 * Add a number of magic words by name
	 *
	 * @param $names array
	 */",
 "/**
	 * Get a 2-d hashtable for this array
	 */",
 "/**
	 * Get the base regex
	 */",
 "/**
	 * Get an unanchored regex that does not match parameters
	 */",
 "/**
	 * Get a regex for matching variables with parameters
	 *
	 * @return string
	 */",
 "/**
	 * Get a regex anchored to the start of the string that does not match parameters
	 *
	 * @return array
	 */",
 "/**
	 * Get an anchored regex for matching variables with parameters
	 *
	 * @return array
	 */",
 "/**
	 * Parse a match array from preg_match
	 * Returns array(magic word ID, parameter value)
	 * If there is no parameter value, that element will be false.
	 *
	 * @param $m array
	 *
	 * @return array
	 */",
 "/**
	 * Match some text, with parameter capture
	 * Returns an array with the magic word name in the first element and the
	 * parameter in the second element.
	 * Both elements are false if there was no match.
	 *
	 * @param $text string
	 *
	 * @return array
	 */",
 "/**
	 * Match some text, without parameter capture
	 * Returns the magic word name, or false if there was no capture
	 *
	 * @param $text string
	 *
	 * @return string|false
	 */",
 "/**
	 * Returns an associative array, ID => param value, for all items that match
	 * Removes the matched items from the input string (passed by reference)
	 *
	 * @param $text string
	 *
	 * @return array
	 */",
 "/**
	 * Return the ID of the magic word at the start of $text, and remove
	 * the prefix from $text.
	 * Return false if no match found and $text is not modified.
	 * Does not match parameters.
	 *
	 * @param $text string
	 *
	 * @return int|false
	 */",
 "/**
 * Class for handling an array of magic words
 * @ingroup Parser
 */",
 "/** Kabyle (Taqbaylit)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Agurzil
 * @author Agzennay
 * @author Azwaw
 * @author Teak
 * @author Urhixidur
 */",
 "/**
	 * Ensure that the job queue is empty before continuing
	 */",
 "/**
	 * @todo Document why we test login, since the $wgUser hack used doesn\'t
	 * require login
	 */",
 "/**
	 * @depends testLogin
	 * @depends testClearQueue
	 */",
 "/**
	 * @depends testLogin
	 * @depends testClearQueue
	 */",
 "/**
	 * @depends testLogin
	 * @depends testClearQueue
	 */",
 "/**
	 * @depends testLogin
	 * @depends testClearQueue
	 */",
 "/**
	 * Helper function to perform an async upload, execute the job and fetch
	 * the status
	 *
	 * @return array The result of action=upload&statuskey=key
	 */",
 "/**
	 *
	 */",
 "/**
 * @group Broken
 * @group Upload
 */",
 "/**
	 * @param $parser Parser
	 * @return bool
	 */",
 "/**
 * @ingroup Parser
 */",
 "/**
	 * Build patterns we can\'t define above because they depend on other patterns.
	 */",
 "/**
	 * Transform an LTR stylesheet to RTL
	 * @param $css String: stylesheet to transform
	 * @param $swapLtrRtlInURL Boolean: If true, swap \'ltr\' and \'rtl\' in URLs
	 * @param $swapLeftRightInURL Boolean: If true, swap \'left\' and \'right\' in URLs
	 * @return Transformed stylesheet
	 */",
 "/**
	 * Replace direction: ltr; with direction: rtl; and vice versa.
	 *
	 * The original implementation only does this inside body selectors
	 * and misses \"body\n{\ndirection:ltr;\n}\". This function does not have
	 * these problems.
	 *
	 * See http://code.google.com/p/cssjanus/issues/detail?id=15 and
	 * TODO: URL
	 * @param $css string
	 * @return string
	 */",
 "/**
	 * Replace \'ltr\' with \'rtl\' and vice versa in background URLs
	 * @param $css string
	 * @return string
	 */",
 "/**
	 * Replace \'left\' with \'right\' and vice versa in background URLs
	 * @param $css string
	 * @return string
	 */",
 "/**
	 * Flip rules like left: , padding-right: , etc.
	 * @param $css string
	 * @return string
	 */",
 "/**
	 * Flip East and West in rules like cursor: nw-resize;
	 * @param $css string
	 * @return string
	 */",
 "/**
	 * Swap the second and fourth parts in four-part notation rules like
	 * padding: 1px 2px 3px 4px;
	 *
	 * Unlike the original implementation, this function doesn\'t suffer from
	 * the bug where whitespace is not preserved when flipping four-part rules
	 * and four-part color rules with multiple whitespace characters between
	 * colors are not recognized.
	 * See http://code.google.com/p/cssjanus/issues/detail?id=16
	 * @param $css string
	 * @return string
	 */",
 "/**
	 * Flip horizontal background percentages.
	 * @param $css string
	 * @return string
	 */",
 "/**
	 * Callback for calculateNewBackgroundPosition()
	 * @param $matches array
	 * @return string
	 */",
 "/**
 * This is a PHP port of CSSJanus, a utility that transforms CSS style sheets
 * written for LTR to RTL.
 *
 * The original Python version of CSSJanus is Copyright 2008 by Google Inc. and
 * is distributed under the Apache license. This PHP port is Copyright 2010 by
 * Roan Kattouw and is dual-licensed under the GPL (as in the comment above) and
 * the Apache (as in the original code) licenses.
 *
 * Original code: http://code.google.com/p/cssjanus/source/browse/trunk/cssjanus.py
 * License of original code: http://code.google.com/p/cssjanus/source/browse/trunk/LICENSE
 * @author Roan Kattouw
 *
 */",
 "/**
	 * Constructor
	 * @param $regex string Regular expression whose matches to replace by a token.
	 * @param $token string Token
	 */",
 "/**
	 * Replace all occurrences of $regex in $str with a token and remember
	 * the original strings.
	 * @param $str String to tokenize
	 * @return string Tokenized string
	 */",
 "/**
	 * @param $matches array
	 * @return string
	 */",
 "/**
	 * Replace tokens with their originals. If multiple strings were tokenized, it\'s important they be
	 * detokenized in exactly the SAME ORDER.
	 * @param $str String: previously run through tokenize()
	 * @return string Original string
	 */",
 "/**
	 * @param $matches
	 * @return mixed
	 */",
 "/**
 * Utility class used by CSSJanus that tokenizes and untokenizes things we want
 * to protect from being janused.
 * @author Roan Kattouw
 */",
 "/**
	 * Manage forms to be shown according to posted data.
	 * Depending on the submit button used, call a form or a save function.
	 *
	 * @param $par Mixed: string if any subpage provided, else null
	 */",
 "/**
	 * Save user groups changes in the database.
	 * Data comes from the editUserGroupsForm() form function
	 *
	 * @param $username String: username to apply changes to.
	 * @param $reason String: reason for group change
	 * @return null
	 */",
 "/**
	 * Save user groups changes in the database.
	 *
	 * @param $user User object
	 * @param $add Array of groups to add
	 * @param $remove Array of groups to remove
	 * @param $reason String: reason for group change
	 * @return Array: Tuple of added, then removed groups
	 */",
 "/**
	 * Add a rights log entry for an action.
	 */",
 "/**
	 * Edit user groups membership
	 * @param $username String: name of the user.
	 */",
 "/**
	 * Normalize the input username, which may be local or remote, and
	 * return a user (or proxy) object for manipulating it.
	 *
	 * Side effects: error output for invalid access
	 * @return Status object
	 */",
 "/**
	 * Output a form to allow searching for a user
	 */",
 "/**
	 * Go through used and available groups and return the ones that this
	 * form will be able to manipulate based on the current user\'s system
	 * permissions.
	 *
	 * @param $groups Array: list of groups the given user is in
	 * @return Array:  Tuple of addable, then removable groups
	 */",
 "/**
	 * Show the form to edit group memberships.
	 *
	 * @param $user      User or UserRightsProxy you\'re editing
	 * @param $groups    Array:  Array of groups the user is in
	 */",
 "/**
	 * Format a link to a group description page
	 *
	 * @param $group string
	 * @return string
	 */",
 "/**
	 * Returns an array of all groups that may be edited
	 * @return array Array of groups that may be edited.
	 */",
 "/**
	 * Adds a table with checkboxes where you can select what groups to add/remove
	 *
	 * @todo Just pass the username string?
	 * @param $usergroups Array: groups the user belongs to
	 * @param $user User a user object
	 * @return string XHTML table element with checkboxes
	 */",
 "/**
	 * @param  $group String: the name of the group to check
	 * @return bool Can we remove the group?
	 */",
 "/**
	 * @param $group string: the name of the group to check
	 * @return bool Can we add the group?
	 */",
 "/**
	 * Returns $this->getUser()->changeableGroups()
	 *
	 * @return Array array( \'add\' => array( addablegroups ), \'remove\' => array( removablegroups ) , \'add-self\' => array( addablegroups to self), \'remove-self\' => array( removable groups from self) )
	 */",
 "/**
	 * Show a rights log fragment for the specified user
	 *
	 * @param $user User to show log for
	 * @param $output OutputPage to use
	 */",
 "/**
 * Special page to allow managing user group membership
 *
 * @ingroup SpecialPage
 */",
 "/** Kirghiz (????????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author AidaBishkek
 * @author Aidabishkek
 */",
 "/**
 * Test Case ID   : 03 (http://www.mediawiki.org/wiki/New_installer/Test_plan)
 * Test Case Name : Install mediawiki on a already installed Mediawiki.]
 * Version        : MediaWiki 1.18alpha
*/",
 "/**
 * Selenium server manager
 *
 * @file
 * @ingroup Testing
 * Copyright (C) 2010 Nadeesha Weerasinghe <nadeesha@calcey.com>
 * http://www.calcey.com/ 
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @addtogroup Testing
 *
 */",
 "/**
	 * Show the form
	 *
	 * @param $err Array: error messages. Each item is an error message.
	 *    It may either be a string message name or array message name and
	 *    parameters, like the second argument to OutputPage::wrapWikiMsg().
	 */",
 "/**
 * A special page that allows users to change page titles
 *
 * @ingroup SpecialPage
 */",
 "/**
	 * @param $out OutputPage
	 */",
 "/**
 * Inherit main code from SkinTemplate, set the CSS and template filter.
 * @ingroup Skins
 */",
 "/** Corsican (Corsu)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Ale Mister (on co.wikipedia.org)
 * @author Img (on co.wikipedia.org)
 */",
 "/**
 * This PHP script defines the spec that the Javascript message parser should conform to.
 *
 * It does this by looking up the results of various string kinds of string parsing, with various languages,
 * in the current installation of MediaWiki. It then outputs a static specification, mapping expected inputs to outputs,
 * which can be used with the JasmineBDD framework. This specification can then be used by simply including it into
 * the SpecRunner.html file.
 *
 * This is similar to Michael Dale (mdale@mediawiki.org)\'s parser tests, except that it doesn\'t look up the 
 * API results while doing the test, so the Jasmine run is much faster(at the cost of being out of date in rare
 * circumstances. But mostly the parsing that we are doing in Javascript doesn\'t change much.)
 *
 */",
 "/**
 * API module that does nothing
 *
 * Use this to disable core modules with e.g.
 * $wgAPIPropModules[\'modulename\'] = \'ApiQueryDisabled\';
 *
 * To disable top-level modules, use ApiDisabled instead
 *
 * @ingroup API
 */",
 "/**
	 * @param $out OutputPage
	 */",
 "/**
 * Inherit main code from SkinTemplate, set the CSS and template filter.
 * @todo document
 * @ingroup Skins
 */",
 "/**
	 * Template filter callback for MonoBook skin.
	 * Takes an associative array of data set from a SkinTemplate-based
	 * class, and a wrapper for MediaWiki\'s localization database, and
	 * outputs a formatted page.
	 *
	 * @access private
	 */",
 "/**
	 * Prints the cactions bar.
	 * Shared between MonoBook and Modern
	 */",
 "/**
 * @todo document
 * @ingroup Skins
 */",
 "/**
	 * Constructor
	 *
	 * @param $db DatabaseBase object to perform updates on
	 * @param $shared bool Whether to perform updates on shared tables
	 * @param $maintenance Maintenance Maintenance object which created us
	 */",
 "/**
	 * Initialize all of the old globals. One day this should all become
	 * something much nicer
	 */",
 "/**
	 * Loads LocalSettings.php, if needed, and initialises everything needed for LoadExtensionSchemaUpdates hook
	 */",
 "/**
	 * @throws MWException
	 * @param DatabaseBase $db
	 * @param bool $shared
	 * @param null $maintenance
	 * @return DatabaseUpdater
	 */",
 "/**
	 * Get a database connection to run updates
	 *
	 * @return DatabaseBase
	 */",
 "/**
	 * Output some text. If we\'re running from web, escape the text first.
	 *
	 * @param $str String: Text to output
	 */",
 "/**
	 * Add a new update coming from an extension. This should be called by
	 * extensions while executing the LoadExtensionSchemaUpdates hook.
	 *
	 * @since 1.17
	 *
	 * @param $update Array: the update to run. Format is the following:
	 *                first item is the callback function, it also can be a
	 *                simple string with the name of a function in this class,
	 *                following elements are parameters to the function.
	 *                Note that callback functions will receive this object as
	 *                first parameter.
	 */",
 "/**
	 * Convenience wrapper for addExtensionUpdate() when adding a new table (which
	 * is the most common usage of updaters in an extension)
	 *
	 * @since 1.18
	 *
	 * @param $tableName String Name of table to create
	 * @param $sqlPath String Full path to the schema file
	 */",
 "/**
	 * @since 1.19
	 *
	 * @param $tableName string
	 * @param $indexName string
	 * @param $sqlPath string
	 */",
 "/**
	 *
	 * @since 1.19
	 *
	 * @param $tableName string
	 * @param $columnName string
	 * @param $sqlPath string
	 */",
 "/**
	 * Add a maintenance script to be run after the database updates are complete.
	 * 
	 * @since 1.19
	 * 
	 * @param $class string Name of a Maintenance subclass
	 */",
 "/**
	 * Get the list of extension-defined updates
	 *
	 * @return Array
	 */",
 "/**
	 * @since 1.17
	 * 
	 * @return array
	 */",
 "/**
	 * Do all the updates
	 *
	 * @param $what Array: what updates to perform
	 */",
 "/**
	 * Helper function for doUpdates()
	 *
	 * @param $updates Array of updates to run
	 * @param $passSelf Boolean: whether to pass this object we calling external
	 *                  functions
	 */",
 "/**
	 * @param $version
	 * @param $updates array
	 */",
 "/**
	 * Helper function: check if the given key is present in the updatelog table.
	 * Obviously, only use this for updates that occur after the updatelog table was
	 * created!
	 * @param $key String Name of the key to check for
	 *
	 * @return bool
	 */",
 "/**
	 * Helper function: Add a key to the updatelog table
	 * Obviously, only use this for updates that occur after the updatelog table was
	 * created!
	 * @param $key String Name of key to insert
	 * @param $val String [optional] value to insert along with the key
	 */",
 "/**
	 * Updatelog was changed in 1.17 to have a ul_value column so we can record
	 * more information about what kind of updates we\'ve done (that\'s what this
	 * class does). Pre-1.17 wikis won\'t have this column, and really old wikis
	 * might not even have updatelog at all
	 *
	 * @return boolean
	 */",
 "/**
	 * Before 1.17, we used to handle updates via stuff like
	 * $wgExtNewTables/Fields/Indexes. This is nasty :) We refactored a lot
	 * of this in 1.17 but we want to remain back-compatible for a while. So
	 * load up these old global-based things into our update list.
	 *
	 * @return array
	 */",
 "/**
	 * Get an array of updates to perform on the database. Should return a
	 * multi-dimensional array. The main key is the MediaWiki version (1.12,
	 * 1.13...) with the values being arrays of updates, identical to how
	 * updaters.inc did it (for now)
	 *
	 * @return Array
	 */",
 "/**
	 * Applies a SQL patch
	 * @param $path String Path to the patch file
	 * @param $isFullPath Boolean Whether to treat $path as a relative or not
	 */",
 "/**
	 * Add a new table to the database
	 * @param $name String Name of the new table
	 * @param $patch String Path to the patch file
	 * @param $fullpath Boolean Whether to treat $patch path as a relative or not
	 */",
 "/**
	 * Add a new field to an existing table
	 * @param $table String Name of the table to modify
	 * @param $field String Name of the new field
	 * @param $patch String Path to the patch file
	 * @param $fullpath Boolean Whether to treat $patch path as a relative or not
	 */",
 "/**
	 * Add a new index to an existing table
	 * @param $table String Name of the table to modify
	 * @param $index String Name of the new index
	 * @param $patch String Path to the patch file
	 * @param $fullpath Boolean Whether to treat $patch path as a relative or not
	 */",
 "/**
	 * Drop a field from an existing table
	 *
	 * @param $table String Name of the table to modify
	 * @param $field String Name of the old field
	 * @param $patch String Path to the patch file
	 * @param $fullpath Boolean Whether to treat $patch path as a relative or not
	 */",
 "/**
	 * Drop an index from an existing table
	 *
	 * @param $table String: Name of the table to modify
	 * @param $index String: Name of the old index
	 * @param $patch String: Path to the patch file
	 * @param $fullpath Boolean: Whether to treat $patch path as a relative or not
	 */",
 "/**
	 * @param $table string
	 * @param $patch string
	 * @param $fullpath bool
	 */",
 "/**
	 * Modify an existing field
	 *
	 * @param $table String: name of the table to which the field belongs
	 * @param $field String: name of the field to modify
	 * @param $patch String: path to the patch file
	 * @param $fullpath Boolean: whether to treat $patch path as a relative or not
	 */",
 "/**
	 * Purge the objectcache table
	 */",
 "/**
	 * Check the site_stats table is not properly populated.
	 */",
 "/**
	 * Sets the number of active users in the site_stats table
	 */",
 "/**
	 * Populates the log_user_text field in the logging table
	 */",
 "/**
	 * Migrate log params to new table and index for searching
	 */",
 "/**
	 * Updates the timestamps in the transcache table
	 */",
 "/**
	 * Update CategoryLinks collation
	 */",
 "/**
	 * Migrates user options from the user table blob to user_properties
	 */",
 "/**
		 * @var $cl RebuildLocalisationCache
		 */",
 "/**
	 * Rebuilds the localisation cache
	 */",
 "/**
 * Class for handling database updates. Roughly based off of updaters.inc, with
 * a few improvements :)
 *
 * @ingroup Deployment
 * @since 1.17
 */",
 "/**
	 * Use singular form for zero (see bug 7309)
	 *
	 * @param $count int
	 * @param $forms array
	 *
	 * @return string
	 */",
 "/** French (Fran??ais)
 *
 * @ingroup Language
 */",
 "/** Swati (SiSwati)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Jatrobat
 * @author MF-Warburg
 * @author Sibande
 */",
 "/** Scottish Gaelic (G??idhlig)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Akerbeltz
 * @author Alison
 * @author Caoimhin
 * @author Sionnach
 * @author Steafan31
 * @author ???????? ????????????????
 */",
 "/**
	 * Recursively go through the object and output its data in WDDX format.
	 * @param $elemValue
	 * @param $indent int
	 */",
 "/**
 * API WDDX output formatter
 * @ingroup API
 */",
 "/** V??ro (V??ro)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Kaganer
 * @author Niklas Laxstr??m
 * @author Pikne
 * @author Sulev Iva (V??rok)
 * @author Trixt
 * @author V??rok
 */",
 "/**
	 * @dataProvider dataExtractSectionTitle
	 */",
 "/** Sardinian (Sardu)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Andria
 * @author Marzedu
 * @author Node ue
 * @author ???????? ????????????????
 */",
 "/** Bengali (???????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Ali Haidar Khan
 * @author Bellayet
 * @author Ehsanulhb
 * @author Jayantanth
 * @author Kaganer
 * @author Mayeenul Islam
 * @author Nasir8891
 * @author Prometheus.pyrphoros
 * @author RIPENDIL
 * @author Reedy
 * @author Samritmaity
 * @author Sayak Sarkar
 * @author Sm faysal
 * @author Usarker
 * @author Wikitanvir
 * @author Zaheen
 * @author ???????? ????????????????
 */",
 "/**
 * API module that imports an XML file like Special:Import does
 *
 * @ingroup API
 */",
 "/**
	 * @param $title Title
	 * @param $origTitle Title
	 * @param $revisionCount int
	 * @param $successCount int
	 * @param $pageInfo
	 * @return void
	 */",
 "/**
 * Import reporter for the API
 * @ingroup API
 */",
 "/**
 * Selenium server manager
 *
 * @file
 * @ingroup Testing
 * Copyright (C) 2010 Nadeesha Weerasinghe <nadeesha@calcey.com>
 * http://www.calcey.com/ 
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @addtogroup Testing
 *
 */",
 "/** @dataProvider provideURLParts */",
 "/**
	 * Provider of URL parts for testing wfAssembleUrl()
	 *
	 * @return array
	 */",
 "/**
 * Unit tests for wfAssembleUrl()
 */",
 "/**
	 ** Randomly returns one element of the input array.
	 */",
 "/**
	 * Returns random number between finish and start.
	 * @param $finish
	 * @param $start int
	 * @return int
	 */",
 "/**
	 * Returns a mix of random text and random wiki syntax.
	 * @return string
	 */",
 "/**
	 * Returns either random text, or random wiki syntax, or random data from \"ints\",
	 *        or random data from \"other\".
	 * @return string
	 */",
 "/**
	 * Returns the matched character slash-escaped as in a C string
	 * Helper for makeTitleSafe callback
	 * @param $matches
	 * @return atring
	 */",
 "/**
	 ** Strips out the stuff that Mediawiki balks at in a page\'s title.
	 **        Implementation copied/pasted from cleanupTable.inc & cleanupImages.php
	 * @param $str string
	 * @return string
	 */",
 "/**
	 ** Returns a string of fuzz text.
	 * @return string
	 */",
 "/**
	 * Returns one of the three styles of random quote: \', \", and nothing.
	 * @return string
	 */",
 "/**
	 ** Returns fuzz text, with the parameter indicating approximately how many lines of text you want.
	 * @param $maxtypes int
	 * @return string
	 */",
 "/**
 ** A page test has just these things:
 **        1) Form parameters.
 **        2) the URL we are going to test those parameters on.
 **        3) Any cookies required for the test.
 **        4) Whether Tidy should validate the page. Defaults to true, but can be turned off.
 **        Declared abstract because it should be extended by a class
 **        that supplies these parameters.
 */",
 "/**
 ** a page test for the \"Edit\" page. Tests Parser.php and Sanitizer.php.
 */",
 "/**
 ** a page test for \"Special:Listusers\".
 */",
 "/**
 ** a page test for \"Special:Search\".
 */",
 "/**
 ** a page test for \"Special:Recentchanges\".
 */",
 "/**
 ** a page test for \"Special:Prefixindex\".
 */",
 "/**
 ** a page test for \"Special:MIMEsearch\".
 */",
 "/**
 ** a page test for \"Special:Log\".
 */",
 "/**
 ** a page test for \"Special:Userlogin\", with a successful login.
 */",
 "/**
 ** a page test for \"Special:Userlogin\".
 */",
 "/**
 ** a page test for \"Special:Ipblocklist\" (also includes unblocking)
 */",
 "/**
 ** a page test for \"Special:Newimages\".
 */",
 "/**
 ** a page test for the \"Special:Imagelist\" page.
 */",
 "/**
 ** a page test for \"Special:Export\".
 */",
 "/**
 ** a page test for \"Special:Booksources\".
 */",
 "/**
 ** a page test for \"Special:Allpages\".
 */",
 "/**
 ** a page test for the page History.
 */",
 "/**
 ** a page test for the Special:Contributions\".
 */",
 "/**
 ** a page test for viewing a normal page, whilst posting various params.
 */",
 "/**
 ** a page test for \"Special:Allmessages\".
 */",
 "/**
 ** a page test for \"Special:Newpages\".
 */",
 "/**
 ** a page test for \"redirect.php\"
 */",
 "/**
 ** a page test for \"Special:Confirmemail\"
 */",
 "/**
 ** a page test for \"Special:Watchlist\"
 **        Note: this test would be better if we were logged in.
 */",
 "/**
 ** a page test for \"Special:Blockme\"
 */",
 "/**
 ** a page test for \"Special:Movepage\"
 */",
 "/**
 ** a page test for \"Special:Undelete\"
 */",
 "/**
 ** a page test for \"Special:Unlockdb\"
 */",
 "/**
 ** a page test for \"Special:Lockdb\"
 */",
 "/**
 ** a page test for \"Special:Userrights\"
 */",
 "/**
 ** a test for page protection and unprotection.
 */",
 "/**
 ** a page test for \"Special:Blockip\".
 */",
 "/**
 ** a test for the imagepage.
 */",
 "/**
 ** a test for page deletion form.
 */",
 "/**
 ** a test for Revision Deletion.
 */",
 "/**
 ** a test for Special:Import.
 */",
 "/**
**atestforthumb.php
*/",
 "/**
**atestforprofileinfo.php
*/",
 "/**
 ** a test for Special:Cite (extension Special page).
 */",
 "/**
 ** a test for Special:Filepath (extension Special page).
 */",
 "/**
 ** a test for Special:Renameuser (extension Special page).
 */",
 "/**
 ** a test for Special:Linksearch (extension Special page).
 */",
 "/**
 ** a test for Special:CategoryTree (extension Special page).
 */",
 "/**
 ** a test for \"Special:Chemicalsources\" (extension Special page).
 */",
 "/**
 ** A test for api.php (programmatic interface to MediaWiki in XML/JSON/RSS/etc formats).
 ** Quite involved to test because there are lots of options/parameters, and because
 ** for a lot of the functionality if all the parameters don\'t make sense then it just
 ** returns the help screen - so currently a lot of the tests aren\'t actually doing much
 ** because something wasn\'t right in the query.
 **
 ** @todo: Incomplete / unfinished; Runs too fast (suggests not much testing going on).
 */",
 "/**
 ** a page test for the GeSHi extension.
 */",
 "/**
 ** selects a page test to run.
 * @param $count
 * @return \\api|\confirmEmail|\contributionsTest|\editPageTest|\imagelistTest|\imagepageTest|\ipblocklistTest|\listusersTest|\mimeSearchTest|\newImagesTest|\pageDeletion|\pageHistoryTest|\pageProtectionForm|\prefixindexTest|\profileInfo|\recentchangesTest|\redirectTest|\searchTest|\specialAllmessagesTest|\specialAllpagesTest|\specialBlockip|\specialBlockmeTest|\specialBooksourcesTest|\specialCategoryTree|\specialChemicalsourcesTest|\specialCitePageTest|\specialExportTest|\specialFilepathPageTest|\specialImportPageTest|\specialLinksearch|\specialLockdbPageTest|\specialLogTest|\specialMovePage|\specialNewpagesPageTest|\specialRenameuserPageTest|\specialRevisionDeletePageTest|\specialUndeletePageTest|\specialUnlockdbPageTest|\specialUserrights|\successfulUserLoginTest|\thumbTest|\\userLoginTest|\viewPageTest|\watchlistTest
 */",
 "/**
 ** Utility function for saving a file. Currently has no error checking.
 */",
 "/**
 ** Returns a test as an experimental GET-to-POST URL.
 **        This doesn\'t seem to always work though, and sometimes the output is too long
 **        to be a valid GET URL, so we also save in other formats.
 * @param $test pageTest
 * @return string
 */",
 "/**
 ** Saves a plain-text human-readable version of a test.
 */",
 "/**
 ** Saves a test as a standalone basic PHP script that shows this one problem.
 **        Resulting script requires PHP-Curl be installed in order to work.
 */",
 "/**
*EscapesavaluesothatitcanbeusedonthecommandlinebyCurl.
*Specifically,\"<\" and \"@\" need to be escaped if they are the first character,
 *        otherwise  curl interprets these as meaning that we want to insert a file.
 * @param $input_params array
 * @return array
 */",
 "/**
 ** Saves a test as a standalone CURL shell script that shows this one problem.
 **        Resulting script requires standalone Curl be installed in order to work.
 */",
 "/**
 ** Saves the internal data structure to file.
 */",
 "/**
 ** saves a test in the various formats.
 */",
 "/**
 * Asks MediaWiki for the HTML output of a test.
 * @param $test pageTest
 * @return string
 */",
 "/**
 * Asks the validator whether this is valid HTML, or not.
 * @param $text string
 * @return array
 */",
 "/**
 * Get tidy to check for no HTML errors in the output file (e.g. unescaped strings).
 * @param $name
 * @return bool
 */",
 "/**
 ** Returns whether or not an database error log file has changed in size since
 **        the last time this was run. This is used to tell if a test caused a DB error.
 * @return bool
 */",
 "/**
 * takes a page test, and runs it and tests it for problems in the output.
 *        Returns: False on finding a problem, or True on no problems being found.
 * @param $test pageTest
 * @param $testname
 * @param $can_overwrite bool
 * @return bool
 */",
 "/**
 ** We keep our failed tests so that they can be rerun.
 **        This function does that retesting.
 */",
 "/**
 * Translation array to get upper case character
 */",
 "/**
 * Translation array to get lower case character
 */",
 "/**
	 * @return Title
	 */",
 "/**
 * @ingroup API
 */",
 "/**
 * HTML template for Special:Userlogin form
 * @ingroup Templates
 */",
 "/**
 * A list of date format preference keys which can be selected in user
 * preferences. New preference keys can be added, provided they are supported
 * by the language class\'s timeanddate(). Only the 5 keys listed below are
 * supported by the wikitext converter (DateFormatter.php).
 *
 * The special key \"default\" is an alias for either dmy or mdy depending on
 * $wgAmericanDates
 */",
 "/**
 * These are formats for dates generated by MediaWiki (as opposed to the wikitext
 * DateFormatter). Documentation for the format string can be found in
 * Language.php, search for sprintfDate.
 *
 * This array is automatically inherited by all subclasses. Individual keys can be
 * overridden.
 */",
 "/**
	 * Main execution point
	 *
	 * @param $mode int
	 */",
 "/**
	 * Extract a list of titles from a blob of text, returning
	 * (prefixed) strings; unwatchable titles are ignored
	 *
	 * @param $list String
	 * @return array
	 */",
 "/**
	 * Print out a list of linked titles
	 *
	 * $titles can be an array of strings or Title objects; the former
	 * is preferred, since Titles are very memory-heavy
	 *
	 * @param $titles array of strings, or Title objects
	 * @param $output String
	 */",
 "/**
	 * Prepare a list of titles on a user\'s watchlist (excluding talk pages)
	 * and return an array of (prefixed) strings
	 *
	 * @return array
	 */",
 "/**
	 * Get a list of titles on a user\'s watchlist, excluding talk pages,
	 * and return as a two-dimensional array with namespace and title.
	 *
	 * @return array
	 */",
 "/**
	 * Validates watchlist entry
	 *
	 * @param Title $title
	 * @param int $namespace
	 * @param String $dbKey 
	 * @return bool: Whether this item is valid
	 */",
 "/**
	 * Attempts to clean up broken items
	 */",
 "/**
	 * Remove all titles from a user\'s watchlist
	 */",
 "/**
	 * Add a list of titles to a user\'s watchlist
	 *
	 * $titles can be an array of strings or Title objects; the former
	 * is preferred, since Titles are very memory-heavy
	 *
	 * @param $titles Array of strings, or Title objects
	 */",
 "/**
	 * Remove a list of titles from a user\'s watchlist
	 *
	 * $titles can be an array of strings or Title objects; the former
	 * is preferred, since Titles are very memory-heavy
	 *
	 * @param $titles Array of strings, or Title objects
	 */",
 "/**
	 * Get the standard watchlist editing form
	 *
	 * @return HTMLForm
	 */",
 "/**
	 * Build the label for a checkbox, with a link to the title, and various additional bits
	 *
	 * @param $title Title
	 * @return string
	 */",
 "/**
	 * Get a form for editing the watchlist in \"raw\" mode
	 *
	 * @return HTMLForm
	 */",
 "/**
	 * Determine whether we are editing the watchlist, and if so, what
	 * kind of editing operation
	 *
	 * @param $request WebRequest
	 * @param $par mixed
	 * @return int
	 */",
 "/**
	 * Build a set of links for convenient navigation
	 * between watchlist viewing and editing modes
	 *
	 * @param $unused Unused
	 * @return string
	 */",
 "/**
 * Provides the UI through which users can perform editing
 * operations on their watchlist
 *
 * @ingroup Watchlist
 * @author Rob Church <robchur@gmail.com>
 */",
 "/**
 * Extend HTMLForm purely so we can have a more sane way of getting the section headers
 */",
 "/**
	 * HTMLMultiSelectField throws validation errors if we get input data
	 * that doesn\'t match the data set in the form setup. This causes
	 * problems if something gets removed from the watchlist while the
	 * form is open (bug 32126), but we know that invalid items will
	 * be harmless so we can override it here.
	 *
	 * @param $value String the value the field was submitted with
	 * @param $alldata Array the data collected from the form
	 * @return Mixed Bool true on success, or String error to display.
	 */",
 "/**
 * This query adds the <categories> subelement to all pages with the list of categories the page is in
 *
 * @ingroup API
 */",
 "/** Mingrelian (???????????????????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Alsandro
 * @author Andrijko Z.
 * @author Dato deutschland
 * @author Dawid Deutschland
 * @author Kaganer
 * @author Kilavagora
 * @author Lika2672
 * @author Machirkholi
 * @author Malafaya
 * @author Reedy
 * @author ??????????????????????????????
 */",
 "/**
	 * @param $image File
	 * @return array|bool
	 */",
 "/**
	 * @param $image File
	 * @todo unittests
	 * @return bool
	 */",
 "/**
	 * @param $image File
	 * @return bool
	 */",
 "/**
	 * @param $image File
	 * @return string
	 */",
 "/**
 * Handler for GIF images.
 *
 * @ingroup Media
 */",
 "/**
 * Dummy class for pages not in NS_FILE
 *
 * @ingroup Actions
 */",
 "/**
*ClassforpagesinNS_FILE
*
*@ingroupActions
*/",
 "/**
	 * Plural forms per
	 * http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html#mk
	 *
	 * @param $count int
	 * @param $forms array
	 *
	 * @return string
	 */",
 "/**
 * Macedonian (????????????????????)
 *
 * @ingroup Language
 */",
 "/**
	 * Fetch dupes from all connected file repositories.
	 *
	 * @return Array of File objects
	 */",
 "/**
	 *
	 * @param $dupes Array of File objects
	 */",
 "/**
	 *
	 * @param Skin $skin
	 * @param File $result
	 * @return string
	 */",
 "/**
 * Searches the database for files of the requested hash, comparing this with the
 * \'img_sha1\' field in the image table.
 *
 * @ingroup SpecialPage
 */",
 "/**
	 * Determine if a string is as valid IP address or network (CIDR prefix).
	 * SIIT IPv4-translated addresses are rejected.
	 * Note: canonicalize() tries to convert translated addresses to IPv4.
	 *
	 * @param $ip String: possible IP address
	 * @return Boolean
	 */",
 "/**
	 * Given a string, determine if it as valid IP in IPv6 only.
	 * Note: Unlike isValid(), this looks for networks too.
	 *
	 * @param $ip String: possible IP address
	 * @return Boolean
	 */",
 "/**
	 * Given a string, determine if it as valid IP in IPv4 only.
	 * Note: Unlike isValid(), this looks for networks too.
	 *
	 * @param $ip String: possible IP address
	 * @return Boolean
	 */",
 "/**
	 * Validate an IP address. Ranges are NOT considered valid.
	 * SIIT IPv4-translated addresses are rejected.
	 * Note: canonicalize() tries to convert translated addresses to IPv4.
	 *
	 * @param $ip String
	 * @return Boolean: True if it is valid.
	 */",
 "/**
	 * Validate an IP Block (valid address WITH a valid prefix).
	 * SIIT IPv4-translated addresses are rejected.
	 * Note: canonicalize() tries to convert translated addresses to IPv4.
	 *
	 * @param $ipblock String
	 * @return Boolean: True if it is valid.
	 */",
 "/**
	 * Convert an IP into a nice standard form.
	 * IPv6 addresses in octet notation are expanded to 8 words.
	 * IPv4 addresses are just trimmed.
	 *
	 * @param $ip String: IP address in quad or octet form (CIDR or not).
	 * @return String
	 */",
 "/**
	 * Given a host/port string, like one might find in the host part of a URL
	 * per RFC 2732, split the hostname part and the port part and return an
	 * array with an element for each. If there is no port part, the array will
	 * have false in place of the port. If the string was invalid in some way,
	 * false is returned.
	 *
	 * This was easy with IPv4 and was generally done in an ad-hoc way, but
	 * with IPv6 it\'s somewhat more complicated due to the need to parse the
	 * square brackets and colons.
	 *
	 * A bare IPv6 address is accepted despite the lack of square brackets.
	 *
	 * @param $both The string with the host and port
	 * @return array
	 */",
 "/**
	 * Given a host name and a port, combine them into host/port string like
	 * you might find in a URL. If the host contains a colon, wrap it in square
	 * brackets like in RFC 2732. If the port matches the default port, omit
	 * the port specification
	 *
	 * @param $host string
	 * @param $port int
	 * @param $defaultPort bool|int
	 * @return string
	 */",
 "/**
	 * Given an unsigned integer, returns an IPv6 address in octet notation
	 *
	 * @param $ip_int String: IP address.
	 * @return String
	 */",
 "/**
	 * Convert an IPv4 or IPv6 hexadecimal representation back to readable format
	 *
	 * @param $hex String: number, with \"v6-\" prefix if it is IPv6
	 * @return String: quad-dotted (IPv4) or octet notation (IPv6)
	 */",
 "/**
	 * Converts a hexadecimal number to an IPv6 address in octet notation
	 *
	 * @param $ip_hex String: pure hex (no v6- prefix)
	 * @return String (of format a:b:c:d:e:f:g:h)
	 */",
 "/**
	 * Converts a hexadecimal number to an IPv4 address in quad-dotted notation
	 *
	 * @param $ip_hex String: pure hex
	 * @return String (of format a.b.c.d)
	 */",
 "/**
	 * Determine if an IP address really is an IP address, and if it is public,
	 * i.e. not RFC 1918 or similar
	 * Comes from ProxyTools.php
	 *
	 * @param $ip String
	 * @return Boolean
	 */",
 "/**
	 * Determine if an IPv6 address really is an IP address, and if it is public,
	 * i.e. not RFC 4193 or similar
	 *
	 * @param $ip String
	 * @return Boolean
	 */",
 "/**
	 * Return a zero-padded upper case hexadecimal representation of an IP address.
	 *
	 * Hexadecimal addresses are used because they can easily be extended to
	 * IPv6 support. To separate the ranges, the return value from this
	 * function for an IPv6 address will be prefixed with \"v6-\", a non-
	 * hexadecimal string which sorts after the IPv4 addresses.
	 *
	 * @param $ip String: quad dotted/octet IP address.
	 * @return String
	 */",
 "/**
	 * Given an IPv6 address in octet notation, returns a pure hex string.
	 *
	 * @param $ip String: octet ipv6 IP address.
	 * @return String: pure hex (uppercase)
	 */",
 "/**
	 * Given an IP address in dotted-quad/octet notation, returns an unsigned integer.
	 * Like ip2long() except that it actually works and has a consistent error return value.
	 * Comes from ProxyTools.php
	 *
	 * @param $ip String: quad dotted IP address.
	 * @return Mixed: string/int/false
	 */",
 "/**
	 * @param $ip
	 * @return String
	 */",
 "/**
	 * Convert a network specification in CIDR notation
	 * to an integer network and a number of bits
	 *
	 * @param $range String: IP with CIDR prefix
	 * @return array(int or string, int)
	 */",
 "/**
	 * Given a string range in a number of formats,
	 * return the start and end of the range in hexadecimal.
	 *
	 * Formats are:
	 *     1.2.3.4/24          CIDR
	 *     1.2.3.4 - 1.2.3.5   Explicit range
	 *     1.2.3.4             Single IP
	 *
	 *     2001:0db8:85a3::7344/96          			 CIDR
	 *     2001:0db8:85a3::7344 - 2001:0db8:85a3::7344   Explicit range
	 *     2001:0db8:85a3::7344             			 Single IP
	 * @param $range String: IP range
	 * @return array(string, string)
	 */",
 "/**
	 * Convert a network specification in IPv6 CIDR notation to an
	 * integer network and a number of bits
	 *
	 * @param $range
	 *
	 * @return array(string, int)
	 */",
 "/**
	 * Given a string range in a number of formats, return the
	 * start and end of the range in hexadecimal. For IPv6.
	 *
	 * Formats are:
	 *     2001:0db8:85a3::7344/96          			 CIDR
	 *     2001:0db8:85a3::7344 - 2001:0db8:85a3::7344   Explicit range
	 *     2001:0db8:85a3::7344/96             			 Single IP
	 *
	 * @param $range
	 *
	 * @return array(string, string)
	 */",
 "/**
	 * Determine if a given IPv4/IPv6 address is in a given CIDR network
	 *
	 * @param $addr String: the address to check against the given range.
	 * @param $range String: the range to check the given address against.
	 * @return Boolean: whether or not the given address is in the given range.
	 */",
 "/**
	 * Convert some unusual representations of IPv4 addresses to their
	 * canonical dotted quad representation.
	 *
	 * This currently only checks a few IPV4-to-IPv6 related cases.  More
	 * unusual representations may be added later.
	 *
	 * @param $addr String: something that might be an IP address
	 * @return String: valid dotted quad IPv4 address or null
	 */",
 "/**
	 * Gets rid of uneeded numbers in quad-dotted/octet IP strings
	 * For example, 127.111.113.151/24 -> 127.111.113.0/24
	 * @param $range String: IP address to normalize
	 * @return string
	 */",
 "/**
 * A collection of public static functions to play with IP address
 * and IP blocks.
 */",
 "/**
	 * Process the form.  At this point we know that the user passes all the criteria in
	 * userCanExecute(), and if the data array contains \'Username\', etc, then Username
	 * resets are allowed.
	 * @param $data array
	 * @return Bool|Array
	 */",
 "/**
	 * Hide the password reset page if resets are disabled.
	 * @return Bool
	 */",
 "/**
 * Special page for requesting a password reset email
 *
 * @ingroup SpecialPage
 */",
 "/** Amharic (????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Codex Sinaiticus
 * @author Elfalem
 * @author Hinstein
 * @author Reedy
 * @author Romaine
 * @author Solomon
 * @author Teferra
 */",
 "/**
 * @ingroup SpecialPage
 */",
 "/**
 * TODO: Allow sorting by count.  We need to have a unique index to do this
 * properly.
 *
 * @ingroup SpecialPage Pager
 */",
 "/**
	 * Set up all member variables using a database query.
	 * @return bool True on success, false on failure.
	 */",
 "/**
	 * Factory function.
	 *
	 * @param $name Array: A category name (no \"Category:\" prefix).  It need
	 *   not be normalized, with spaces replaced by underscores.
	 * @return mixed Category, or false on a totally invalid name
	 */",
 "/**
	 * Factory function.
	 *
	 * @param $title Title for the category page
	 * @return category|false on a totally invalid name
	 */",
 "/**
	 * Factory function.
	 *
	 * @param $id Integer: a category id
	 * @return Category
	 */",
 "/**
	 * Factory function, for constructing a Category object from a result set
	 *
	 * @param $row result set row, must contain the cat_xxx fields. If the fields are null,
	 *        the resulting Category object will represent an empty category if a title object
	 *        was given. If the fields are null and no title was given, this method fails and returns false.
	 * @param Title $title optional title object for the category represented by the given row.
	 *        May be provided if it is already known, to avoid having to re-create a title object later.
	 * @return Category
	 */",
 "/** @return mixed DB key name, or false on failure */",
 "/** @return mixed Category ID, or false on failure */",
 "/** @return mixed Total number of member pages, or false on failure */",
 "/** @return mixed Number of subcategories, or false on failure */",
 "/** @return mixed Number of member files, or false on failure */",
 "/**
	 * @return Title|false Title for this category, or false on failure.
	 */",
 "/**
	 * Fetch a TitleArray of up to $limit category members, beginning after the
	 * category sort key $offset.
	 * @param $limit integer
	 * @param $offset string
	 * @return TitleArray object for category members.
	 */",
 "/** Generic accessor */",
 "/**
	 * Refresh the counts for this category.
	 *
	 * @return bool True on success, false on failure
	 */",
 "/**
 * Category objects are immutable, strictly speaking. If you call methods that change the database,
 * like to refresh link counts, the objects will be appropriately reinitialized.
 * Member variables are lazy-initialized.
 *
 * TODO: Move some stuff from CategoryPage.php to here, and use that.
 *
 * @author Simetrical
 */",
 "/**
	 * All this test really does is verify that a global var was set.
	 * It depends on $wgDefaultSkin = \'chick\'; being set
	 */",
 "/**
	 * Just verify that the test db was loaded correctly
	 */",
 "/**
	 * Creates an instance of this class
	 * @param $db DatabaseIbm_db2: database object
	 */",
 "/**
	 * Perform a full text search query and return a result set.
	 *
	 * @param $term String: raw search term
	 * @return SqlSearchResultSet
	 */",
 "/**
	 * Perform a title-only search query and return a result set.
	 *
	 * @param $term String: taw search term
	 * @return SqlSearchResultSet
	 */",
 "/**
	 * Return a partial WHERE clause to exclude redirects, if so set
	 * @return String
	 */",
 "/**
	 * Return a partial WHERE clause to limit the search to the given namespaces
	 * @return String
	 */",
 "/**
	 * Return a LIMIT clause to limit results on the query.
	 * @return String
	 */",
 "/**
	 * Does not do anything for generic search engine
	 * subclasses may define this though
	 * @return String
	 */",
 "/**
	 * Construct the full SQL query to do the search.
	 * The guts shoulds be constructed in queryMain()
	 * @param $filteredTerm String
	 * @param $fulltext Boolean
	 */",
 "/**
	 * Picks which field to index on, depending on what type of query.
	 * @param $fulltext Boolean
	 * @return String
	 */",
 "/**
	 * Get the base part of the search query.
	 *
	 * @param $filteredTerm String
	 * @param $fulltext Boolean
	 * @return String
	 */",
 "/** @todo document */",
 "/**
	 * Create or update the search index record for the given page.
	 * Title and text should be pre-processed.
	 *
	 * @param $id Integer
	 * @param $title String
	 * @param $text String
	 */",
 "/**
	 * Update a search index record\'s title only.
	 * Title should be pre-processed.
	 *
	 * @param $id Integer
	 * @param $title String
	 */",
 "/**
 * Search engine hook base class for IBM DB2
 * @ingroup Search
 */",
 "/**
	 * @param $word string
	 * @param $case
	 * @return string
	 */",
 "/** Hungarian localisation for MediaWiki
 *
 * @ingroup Language
 */",
 "/** Malayalam (??????????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Abhishek Jacob
 * @author Anoopan
 * @author Chrisportelli
 * @author Deepugn
 * @author Jacob.jose
 * @author Jigesh
 * @author Junaidpv
 * @author Jyothis
 * @author Kaganer
 * @author Manjith Joseph <manjithkaini@gmail.com>
 * @author Naveen Sankar
 * @author Praveen Prakash <me.praveen@gmail.com>
 * @author Praveenp
 * @author Sadik Khalid
 * @author Sadik Khalid <sadik.khalid@gmail.com>
 * @author ShajiA
 * @author Shiju Alex <shijualexonline@gmail.com>
 * @author Shijualex
 * @author Vssun
 * @author ??var Arnfj??r?? Bjarmason <avarab@gmail.com>
 * @author ???????? ????????????????
 */",
 "/** Igbo (Igbo)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Reedy
 * @author Ukabia
 */",
 "/** @dataProvider providerPluralFourForms */",
 "/** @dataProvider providerPlural */",
 "/** Tests for MediaWiki languages/classes/LanguagePl.php */",
 "/**
	 * @param File $image
	 * @param string $filename
	 * @return string
	 */",
 "/**
	 * @param $image File
	 * @return array|bool
	 */",
 "/**
	 * @param $image File
	 * @return bool
	 */",
 "/**
	 * @param $image File
	 * @return string
	 */",
 "/**
 * Handler for PNG images.
 *
 * @ingroup Media
 */",
 "/**
	 * @param $text string
	 * @return string
	 */",
 "/**
	 * @param $m array
	 *
	 * @return string
	 */",
 "/**
	 * @param $text string
	 * @return string
	 */",
 "/**
 * Class used to hide mw:editsection tokens from Tidy so that it doesn\'t break them
 * or break on them. This is a bit of a hack for now, but hopefully in the future
 * we may create a real postprocessor or something that will replace this.
 * It\'s called wrapper because for now it basically takes over MWTidy::tidy\'s task
 * of wrapping the text in a xhtml block
 *
 * This re-uses some of the parser\'s UNIQ tricks, though some of it is private so it\'s
 * duplicated. Perhaps we should create an abstract marker hiding class.
 */",
 "/**
	 * Interface with html tidy, used if $wgUseTidy = true.
	 * If tidy isn\'t able to correct the markup, the original will be
	 * returned in all its glory with a warning comment appended.
	 *
	 * @param $text String: hideous HTML input
	 * @return String: corrected HTML output
	 */",
 "/**
	 * Check HTML for errors, used if $wgValidateAllHtml = true.
	 *
	 * @param $text String
	 * @param &$errorStr String: return the error string
	 * @return Boolean: whether the HTML is valid
	 */",
 "/**
	 * Spawn an external HTML tidy process and get corrected markup back from it.
	 * Also called in OutputHandler.php for full page validation
	 *
	 * @param $text String: HTML to check
	 * @param $stderr Boolean: Whether to read result from STDERR rather than STDOUT
	 * @param &$retval Exit code (-1 on internal error)
	 * @return mixed String or null
	 */",
 "/**
	 * Use the HTML tidy extension to use the tidy library in-process,
	 * saving the overhead of spawning a new process.
	 *
	 * @param $text String: HTML to check
	 * @param $stderr Boolean: Whether to read result from error status instead of output
	 * @param &$retval Exit code (-1 on internal error)
	 * @return mixed String or null
	 */",
 "/**
 * Class to interact with HTML tidy
 *
 * Either the external tidy program or the in-process tidy extension
 * will be used depending on availability. Override the default
 * $wgTidyInternal setting to disable the internal if it\'s not working.
 *
 * @ingroup Parser
 */",
 "/** Kabardian
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 * @comment falls back to Kabardian (Cyrillic)
 */",
 "/**
	 * Convert grammar forms of words.
	 *
	 * Available cases:
	 * \"prefixed\" (or \"????????????\") - when the word has a prefix
	 *
	 * @param $word String: the word to convert
	 * @param $case String: the case
	 *
	 * @return string
	 */",
 "/**
	 * Gets a number and uses the suited form of the word.
	 *
	 * @param $count Integer: the number of items
	 * @param $forms Array with 3 items: the three plural forms
	 * @return String: the suited form of word
	 */",
 "/**
 * Hebrew (??????????)
 *
 * @ingroup Language
 *
 * @author Rotem Liss
 */",
 "/**
	 * Creates HTML for the given tags
	 *
	 * @param $tags String: Comma-separated list of tags
	 * @param $page String: A label for the type of action which is being displayed,
	 *                     for example: \'history\', \'contributions\' or \'newpages\'
	 *
	 * @return Array with two items: (html, classes)
	 *            - html: String: HTML for displaying the tags (empty string when param $tags is empty)
	 *            - classes: Array of strings: CSS classes used in the generated html, one class for each tag
	 *
	 */",
 "/**
	 * Get a short description for a tag
	 *
	 * @param $tag String: tag
	 *
	 * @return String: Short description of the tag from \"mediawiki:tag-$tag\" if this message exists,
	 *                 html-escaped version of $tag otherwise
	 */",
 "/**
	 * Add tags to a change given its rc_id, rev_id and/or log_id
	 *
	 * @param $tags String|Array: Tags to add to the change
	 * @param $rc_id int: rc_id of the change to add the tags to
	 * @param $rev_id int: rev_id of the change to add the tags to
	 * @param $log_id int: log_id of the change to add the tags to
	 * @param $params String: params to put in the ct_params field of tabel \'change_tag\'
	 *
	 * @return bool: false if no changes are made, otherwise true
	 *
	 * @exception MWException when $rc_id, $rev_id and $log_id are all null
	 */",
 "/**
	 * Applies all tags-related changes to a query.
	 * Handles selecting tags, and filtering.
	 * Needs $tables to be set up properly, so we can figure out which join conditions to use.
	 *
	 * @param $tables String|Array: Tabel names, see DatabaseBase::select
	 * @param $fields String|Array: Fields used in query, see DatabaseBase::select
	 * @param $conds String|Array: conditions used in query, see DatabaseBase::select
	 * @param $join_conds Array: join conditions, see DatabaseBase::select
	 * @param $options Array: options, see Database::select
	 * @param $filter_tag String: tag to select on
	 *
	 * @exception MWException when unable to determine appropriate JOIN condition for tagging
	 *
	 */",
 "/**
	 * Build a text box to select a change tag
	 *
	 * @param $selected String: tag to select by default
	 * @param $fullForm Boolean:
	 *        - if false, then it returns an array of (label, form).
	 *        - if true, it returns an entire form around the selector.
	 * @param $title Title object to send the form to.
	 *        Used when, and only when $fullForm is true.
	 * @return String or array:
	 *        - if $fullForm is false: Array with
	 *        - if $fullForm is true: String, html fragment
	 */",
 "/**
	 * Basically lists defined tags which count even if they aren\'t applied to anything.
	 * Tags on items in table \'change_tag\' which are not (or no longer) in table \'valid_tag\'
	 * are not included.
	 *
	 * Tries memcached first.
	 *
	 * @return Array of strings: tags
	 */",
 "/**
 * Functions related to change tags.
 *
 * @file
 */",
 "/**
	 * main()
	 */",
 "/**
	 * Returns wiki text showing the license information.
	 *
	 * @return string
	 */",
 "/**
	 * Get the \"MediaWiki is copyright 2001-20xx by lots of cool guys\" text
	 *
	 * @return String
	 */",
 "/**
	 * Returns wiki text showing the third party software versions (apache, php, mysql).
	 *
	 * @return string
	 */",
 "/**
	 * Return a string of the MediaWiki version with SVN revision if available.
	 *
	 * @param $flags String
	 * @return mixed
	 */",
 "/**
	 * Return a wikitext-formatted string of the MediaWiki version with a link to
	 * the SVN revision if available.
	 *
	 * @return mixed
	 */",
 "/**
	 * Returns an array with the base extension types.
	 * Type is stored as array key, the message as array value.
	 *
	 * TODO: ideally this would return all extension types, including
	 * those added by SpecialVersionExtensionTypes. This is not possible
	 * since this hook is passing along $this though.
	 *
	 * @since 1.17
	 *
	 * @return array
	 */",
 "/**
	 * Returns the internationalized name for an extension type.
	 *
	 * @since 1.17
	 *
	 * @param $type String
	 *
	 * @return string
	 */",
 "/**
	 * Generate wikitext showing extensions name, URL, author and description.
	 *
	 * @return String: Wikitext
	 */",
 "/**
	 * Creates and returns the HTML for a single extension category.
	 *
	 * @since 1.17
	 *
	 * @param $type String
	 * @param $message String
	 *
	 * @return string
	 */",
 "/**
	 * Callback to sort extensions by type.
	 */",
 "/**
	 * Creates and formats the credits for a single extension and returns this.
	 *
	 * @param $extension Array
	 *
	 * @return string
	 */",
 "/**
	 * Generate wikitext showing hooks in $wgHooks.
	 *
	 * @return String: wikitext
	 */",
 "/**
	 * Get information about client\'s IP address.
	 *
	 * @return String: HTML fragment
	 */",
 "/**
	 * Return a formatted unsorted list of authors
	 *
	 * @param $authors mixed: string or array of strings
	 * @return String: HTML fragment
	 */",
 "/**
	 * Convert an array of items into a list for display.
	 *
	 * @param $list Array of elements to display
	 * @param $sort Boolean: whether to sort the items in $list
	 *
	 * @return String
	 */",
 "/**
	 * Convert an array or object to a string for display.
	 *
	 * @param $list Mixed: will convert an array to string if given and return
	 *              the paramater unaltered otherwise
	 *
	 * @return Mixed
	 */",
 "/**
	 * Get an associative array of information about a given path, from its .svn
	 * subdirectory. Returns false on error, such as if the directory was not
	 * checked out with subversion.
	 *
	 * Returned keys are:
	 *    Required:
	 *        checkout-rev          The revision which was checked out
	 *    Optional:
	 *        directory-rev         The revision when the directory was last modified
	 *        url                   The subversion URL of the directory
	 *        repo-url              The base URL of the repository
	 *        viewvc-url            A ViewVC URL pointing to the checked-out revision
	 */",
 "/**
	 * Retrieve the revision number of a Subversion working directory.
	 *
	 * @param $dir String: directory of the svn checkout
	 *
	 * @return Integer: revision number as int
	 */",
 "/**
*GiveinformationabouttheversionofMediaWiki,PHP,theDBandextensions
*
*@ingroupSpecialPage
*/",
 "/**
 * Implements Special:Mostrevisions
 *
 * Copyright ?? 2005 ??var Arnfj??r?? Bjarmason
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @file
 * @ingroup SpecialPage
 * @author ??var Arnfj??r?? Bjarmason <avarab@gmail.com>
 */",
 "/**
	 * @param $count int
	 * @param $forms array
	 * @return string
	 */",
 "/**
 * Serbian (cyrillic script)
 *
 * @ingroup Language
 */",
 "/**
 * Selenium server manager
 *
 * @file
 * @ingroup Testing
 * Copyright (C) 2010 Nadeesha Weerasinghe <nadeesha@calcey.com>
 * http://www.calcey.com/ 
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @addtogroup Testing
 *
 */",
 "/**
	 * @param $from
	 * @param $to
	 * @param $string
	 * @return string
	 */",
 "/**
	 * Fallback implementation for mb_substr, hardcoded to UTF-8.
	 * Attempts to be at least _moderately_ efficient; best optimized
	 * for relatively small offset and count values -- about 5x slower
	 * than native mb_string in my testing.
	 *
	 * Larger offsets are still fairly efficient for Latin text, but
	 * can be up to 100x slower than native if the text is heavily
	 * multibyte and we have to slog through a few hundred kb.
	 *
	 * @param $str
	 * @param $start
	 * @param $count string
	 *
	 * @return string
	 */",
 "/**
	 * @param $str
	 * @param $splitPos
	 * @return int
	 */",
 "/**
	 * Fallback implementation of mb_strlen, hardcoded to UTF-8.
	 * @param string $str
	 * @param string $enc optional encoding; ignored
	 * @return int
	 */",
 "/**
	 * Fallback implementation of mb_strpos, hardcoded to UTF-8.
	 * @param $haystack String
	 * @param $needle String
	 * @param $offset String: optional start position
	 * @param $encoding String: optional encoding; ignored
	 * @return int
	 */",
 "/**
	 * Fallback implementation of mb_strrpos, hardcoded to UTF-8.
	 * @param $haystack String
	 * @param $needle String
	 * @param $offset String: optional start position
	 * @param $encoding String: optional encoding; ignored
	 * @return int
	 */",
 "/**
	 * Fallback implementation of stream_resolve_include_path()
	 * Native stream_resolve_include_path is available for PHP 5 >= 5.3.2
	 * @param $filename String
	 * @return String
	 */",
 "/**
 * Fallback functions for PHP installed without mbstring support
 */",
 "/**
	 * Verify all files that appear to be tests have file names ending in
	 * Test.  If the file names do not end in Test, they will not be run.
	 */",
 "/**
	 * Filter to remove testUnitTestFileNamesEndWithTest false positives.
	 */",
 "/**
 * The tests here verify the structure of the code.  This is for outright bugs,
 * not just style issues.
 */",
 "/**
 * Query module to enumerate change tags.
 *
 * @ingroup API
 */",
 "/**
	 * @throws MWException
	 * @param $row
	 * @return File
	 */",
 "/**
	 * @param $title
	 * @param $archiveName
	 * @return OldLocalFile
	 */",
 "/**
	 * Delete files in the deleted directory if they are not referenced in the
	 * filearchive table. This needs to be done in the repo because it needs to
	 * interleave database locks with file operations, which is potentially a
	 * remote operation.
	 *
	 * @param $storageKeys array
	 *
	 * @return FileRepoStatus
	 */",
 "/**
	 * Check if a deleted (filearchive) file has this sha1 key
	 *
	 * @param $key String File storage key (base-36 sha1 key with file extension)
	 * @param $lock String|null Use \"lock\" to lock the row via FOR UPDATE
	 * @return bool File with this key is in use
	 */",
 "/**
	 * Check if a hidden (revision delete) file has this sha1 key
	 *
	 * @param $key String File storage key (base-36 sha1 key with file extension)
	 * @param $lock String|null Use \"lock\" to lock the row via FOR UPDATE
	 * @return bool File with this key is in use
	 */",
 "/**
	 * Gets the SHA1 hash from a storage key
	 *
	 * @param string $key
	 * @return string
	 */",
 "/**
	 * Checks if there is a redirect named as $title
	 *
	 * @param $title Title of file
	 * @return bool
	 */",
 "/**
	 * Function link Title::getArticleID().
	 * We can\'t say Title object, what database it should use, so we duplicate that function here.
	 *
	 * @param $title Title
	 */",
 "/**
	 * Get an array or iterator of file objects for files that have a given
	 * SHA-1 content hash.
	 *
	 * @param $hash String a sha1 hash to look for
	 * @return Array
	 */",
 "/**
	 * Get a connection to the slave DB
	 */",
 "/**
	 * Get a connection to the master DB
	 */",
 "/**
	 * Get a key on the primary cache for this repository.
	 * Returns false if the repository\'s cache is not accessible at this site. 
	 * The parameters are the parts of the key, as for wfMemcKey().
	 *
	 * @return string
	 */",
 "/**
	 * Invalidates image redirect cache related to that image
	 *
	 * @param $title Title of page
	 * @return void
	 */",
 "/**
 * A repository that stores files in the local filesystem and registers them
 * in the wiki\'s own database. This is the most commonly used repository class.
 *
 * @ingroup FileRepo
 */",
 "/**
	 * Format and output report results using the given information plus
	 * OutputPage
	 *
	 * @param $out OutputPage to print to
	 * @param $skin Skin: user skin to use [unused]
	 * @param $dbr DatabaseBase (read) connection to use
	 * @param $res Integer: result pointer
	 * @param $num Integer: number of available result rows
	 * @param $offset Integer: paging offset
	 */",
 "/**
	 * Get additional HTML to be shown in a results\' cell
	 *
	 * @param $row Object: result row
	 * @return String
	 */",
 "/**
 * Variant of QueryPage which uses a gallery to output results, thus
 * suited for reports generating images
 *
 * @ingroup SpecialPage
 * @author Rob Church <robchur@gmail.com>
 */",
 "/**
	 * @return User
	 */",
 "/**
 * @ingroup API
 */",
 "/**
 * Generates normalizer data files for Arabic and Malayalam.
 * For NFC see includes/normal.
 */",
 "/**
	 * Convert from the nominative form of a noun to some other case
	 * Invoked with {{grammar:case|word}}
	 *
	 * @param $word string
	 * @param $case string
	 * @return string
	 */",
 "/**
	 * @param $count int
	 * @param $forms array
	 * @return string
	 */",
 "/** Lower Sorbian (Dolnoserbski)
 *
 * @ingroup Language
 */",
 "/** Constructor. Will show usage and exit if script options are not correct */",
 "/**
	 * This is used to check options. Only needed on construction
	 *
	 * @param $opts array
	 * @param $args array
	 *
	 * @return bool
	 */",
 "/**
	 * load script options in the object
	 *
	 * @param $opts array
	 * @param $args array
	 *
	 * @return true
	 */",
 "/** List default options and their value */",
 "/** List options usage */",
 "/** Change our users options */",
 "/**
	 * Return an array of option names
	 * @return array
	 */",
 "/**
	 * The warning message and countdown
	 * @return bool
	 */",
 "/**
 * @ingroup Maintenance
 */",
 "/**
 * Test Case ID   : 06 (http://www.mediawiki.org/wiki/New_installer/Test_plan)
 * Test Case Name : Install Mediawiki using \'MySQL\' database type successfully
 * Version        : MediaWiki 1.18alpha
*/",
 "/**
	 * A should come before Z (bug 30907)
	 */",
 "/**
 * @ingroup SpecialPage
 */",
 "/**
	 * @param $out OutputPage
	 */",
 "/**
 * @todo document
 * @ingroup Skins
 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/** Danish (Dansk)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Amjaabc
 * @author Anders Wegge Jakobsen <awegge@gmail.com>
 * @author Aputtu
 * @author Boivie
 * @author Byrial
 * @author Christian List
 * @author EPO
 * @author Emilkris33
 * @author Froztbyte
 * @author Gorbi
 * @author H92
 * @author Hylle
 * @author Jan Friberg
 * @author Jon Harald S??by
 * @author Kaganer
 * @author Kwi
 * @author Lars J. Helbo <lars.helbo@gmail.com>
 * @author Leolaursen
 * @author MGA73
 * @author Masz
 * @author MinuteElectron
 * @author Morten LJ
 * @author Najami
 * @author Nghtwlkr
 * @author Peter Alberti
 * @author Peter Andersen
 * @author Purodha
 * @author Qaqqalik
 * @author Remember the dot
 * @author Sarrus
 * @author Sir48
 * @author Slomox
 * @author Svip
 * @author S??ren L??vborg
 * @author Urhixidur
 */",
 "/**
	 * Setup local pointers to stash, repo and user ( similar to UploadFromStash )
	 * 
	 * @param $user User
	 * @param $stash UploadStash
	 * @param $repo FileRepo
	 */",
 "/**
	 * Calls the parent stashFile and updates the uploadsession table to handle \"chunks\" 
	 *
	 * @return UploadStashFile stashed file
	 */",
 "/**
	 * Continue chunk uploading
	 */",
 "/**
	 * Append the final chunk and ready file for parent::performUpload()
	 * @return FileRepoStatus
	 */",
 "/**
	 * Perform the upload, then remove the temp copy afterward
	 * @param $comment string
	 * @param $pageText string
	 * @param $watch bool
	 * @param $user User
	 * @return Status
	 */",
 "/**
	 * Returns the virtual chunk location: 	
	 * @param unknown_type $index
	 */",
 "/**
	 * Add a chunk to the temporary directory
	 *
	 * @param $chunkPath path to temporary chunk file
	 * @param $chunkSize size of the current chunk
	 * @param $offset offset of current chunk ( mutch match database chunk offset ) 
	 * @return Status
	 */",
 "/**
	 * Update the chunk db table with the current status: 
	 */",
 "/**
	 * Get the chunk db state and populate update relevant local values
	 */",
 "/**
	 * Get the current Chunk index 
	 * @return Integer index of the current chunk
	 */",
 "/**
	 * Gets the current offset in fromt the stashedupload table 
	 * @return Integer current byte offset of the chunk file set 
	 */",
 "/**
	 * Output the chunk to disk
	 * 
	 * @param $chunkPath string
	 */",
 "/**
 * Implements uploading from chunks
 *
 * @ingroup Upload
 * @author Michael Dale
 */",
 "/**
	 * Main execution point
	 */",
 "/**
	 * @throws PasswordError when cannot set the new password because requirements not met.
	 */",
 "/**
 * Let users recover their password.
 *
 * @ingroup SpecialPage
 */",
 "/**
	 * Call this constructor from child classes.
	 *
	 * Both $title and $repo are optional, though some functions
	 * may return false or throw exceptions if they are not set.
	 * Most subclasses will want to call assertRepoDefined() here.
	 *
	 * @param $title Title|string|false
	 * @param $repo FileRepo|false
	 */",
 "/**
	 * Given a string or Title object return either a
	 * valid Title object with namespace NS_FILE or null
	 *
	 * @param $title Title|string
	 * @param $exception string|false Use \'exception\' to throw an error on bad titles
	 * @return Title|null
	 */",
 "/**
	 * Normalize a file extension to the common form, and ensure it\'s clean.
	 * Extensions with non-alphanumeric characters will be discarded.
	 *
	 * @param $ext string (without the .)
	 * @return string
	 */",
 "/**
	 * Checks if file extensions are compatible
	 *
	 * @param $old File Old file
	 * @param $new string New name
	 *
	 * @return bool|null
	 */",
 "/**
	 * Upgrade the database row if there is one
	 * Called by ImagePage
	 * STUB
	 */",
 "/**
	 * Split an internet media type into its two components; if not
	 * a two-part name, set the minor type to \'unknown\'.
	 *
	 * @param string $mime \"text/html\" etc
	 * @return array (\"text\", \"html\") etc
	 */",
 "/**
	 * Return the name of this file
	 *
	 * @return string
	 */",
 "/**
	 * Get the file extension, e.g. \"svg\"
	 *
	 * @return string
	 */",
 "/**
	 * Return the associated title object
	 *
	 * @return Title|false
	 */",
 "/**
	 * Return the title used to find this file
	 *
	 * @return Title
	 */",
 "/**
	 * Return the URL of the file
	 *
	 * @return string
	 */",
 "/**
	 * Return a fully-qualified URL to the file.
	 * Upload URL paths _may or may not_ be fully qualified, so
	 * we check. Local paths are assumed to belong on $wgServer.
	 *
	 * @return String
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
	* Return the storage path to the file. Note that this does
	* not mean that a file actually exists under that location.
	*
	* This path depends on whether directory hashing is active or not,
	* i.e. whether the files are all found in the same directory,
	* or in hashed paths like /images/3/3c.
	*
	* Most callers don\'t check the return value, but ForeignAPIFile::getPath
	* returns false.
	 *
	 * @return string|false
	*/",
 "/**
	 * Get an FS copy or original of this file and return the path.
	 * Returns false on failure. Callers must not alter the file.
	 * Temporary files are cleared automatically.
	 *
	 * @return string|false
	 */",
 "/**
	 * Return the width of the image. Returns false if the width is unknown
	 * or undefined.
	 *
	 * STUB
	 * Overridden by LocalFile, UnregisteredLocalFile
	 *
	 * @param $page int
	 *
	 * @return number
	 */",
 "/**
	 * Return the height of the image. Returns false if the height is unknown
	 * or undefined
	 *
	 * STUB
	 * Overridden by LocalFile, UnregisteredLocalFile
	 *
	 * @param $page int
	 *
	 * @return false|number
	 */",
 "/**
	 * Returns ID or name of user who uploaded the file
	 * STUB
	 *
	 * @param $type string \'text\' or \'id\'
	 *
	 * @return string|int
	 */",
 "/**
	 * Get the duration of a media file in seconds
	 *
	 * @return number
	 */",
 "/**
	 * Return true if the file is vectorized
	 *
	 * @return bool
	 */",
 "/**
	 * Get handler-specific metadata
	 * Overridden by LocalFile, UnregisteredLocalFile
	 * STUB
	 */",
 "/**
	* get versioned metadata
	*
	* @param $metadata Mixed Array or String of (serialized) metadata
	* @param $version integer version number.
	* @return Array containing metadata, or what was passed to it on fail (unserializing if not array)
	*/",
 "/**
	 * Return the bit depth of the file
	 * Overridden by LocalFile
	 * STUB
	 */",
 "/**
	 * Return the size of the image file, in bytes
	 * Overridden by LocalFile, UnregisteredLocalFile
	 * STUB
	 */",
 "/**
	 * Returns the mime type of the file.
	 * Overridden by LocalFile, UnregisteredLocalFile
	 * STUB
	 *
	 * @return string
	 */",
 "/**
	 * Return the type of the media in the file.
	 * Use the value returned by this function with the MEDIATYPE_xxx constants.
	 * Overridden by LocalFile,
	 * STUB
	 */",
 "/**
	 * Checks if the output of transform() for this file is likely
	 * to be valid. If this is false, various user elements will
	 * display a placeholder instead.
	 *
	 * Currently, this checks if the file is an image format
	 * that can be converted to a format
	 * supported by all browsers (namely GIF, PNG and JPEG),
	 * or if it is an SVG image and SVG conversion is enabled.
	 *
	 * @return bool
	 */",
 "/**
	 * Accessor for __get()
	 */",
 "/**
	 * Return true if the file is of a type that can\'t be directly
	 * rendered by typical browsers and needs to be re-rasterized.
	 *
	 * This returns true for everything but the bitmap types
	 * supported by all browsers, i.e. JPEG; GIF and PNG. It will
	 * also return true for any non-image formats.
	 *
	 * @return bool
	 */",
 "/**
	 * Alias for canRender()
	 *
	 * @return bool
	 */",
 "/**
	 * Determines if this media file is in a format that is unlikely to
	 * contain viruses or malicious content. It uses the global
	 * $wgTrustedMediaFormats list to determine if the file is safe.
	 *
	 * This is used to show a warning on the description page of non-safe files.
	 * It may also be used to disallow direct [[media:...]] links to such files.
	 *
	 * Note that this function will always return true if allowInlineDisplay()
	 * or isTrustedFile() is true for this file.
	 *
	 * @return bool
	 */",
 "/**
	 * Accessor for __get()
	 *
	 * @return bool
	 */",
 "/**
	 * Uncached accessor
	 *
	 * @return bool
	 */",
 "/**
	 * Returns true if the file is flagged as trusted. Files flagged that way
	 * can be linked to directly, even if that is not allowed for this type of
	 * file normally.
	 *
	 * This is a dummy function right now and always returns false. It could be
	 * implemented to extract a flag from the database. The trusted flag could be
	 * set on upload, if the user has sufficient privileges, to bypass script-
	 * and html-filters. It may even be coupled with cryptographics signatures
	 * or such.
	 *
	 * @return bool
	 */",
 "/**
	 * Returns true if file exists in the repository.
	 *
	 * Overridden by LocalFile to avoid unnecessary stat calls.
	 *
	 * @return boolean Whether file exists in the repository.
	 */",
 "/**
	 * Returns true if file exists in the repository and can be included in a page.
	 * It would be unsafe to include private images, making public thumbnails inadvertently
	 *
	 * @return boolean Whether file exists in the repository and is includable.
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * Get a ThumbnailImage which is the same size as the source
	 *
	 * @param $handlerParams array
	 *
	 * @return string
	 */",
 "/**
	 * Return the file name of a thumbnail with the specified parameters
	 *
	 * @param $params Array: handler-specific parameters
	 * @private -ish
	 *
	 * @return string
	 */",
 "/**
	 * Generate a thumbnail file name from a name and specified parameters
	 *
	 * @param string $name
	 * @param array $params Parameters which will be passed to MediaHandler::makeParamString
	 *
	 * @return string
	 */",
 "/**
	 * Create a thumbnail of the image having the specified width/height.
	 * The thumbnail will not be created if the width is larger than the
	 * image\'s width. Let the browser do the scaling in this case.
	 * The thumbnail is stored on disk and is only computed if the thumbnail
	 * file does not exist OR if it is older than the image.
	 * Returns the URL.
	 *
	 * Keeps aspect ratio of original image. If both width and height are
	 * specified, the generated image will be no bigger than width x height,
	 * and will also have correct aspect ratio.
	 *
	 * @param $width Integer: maximum width of the generated thumbnail
	 * @param $height Integer: maximum height of the image (optional)
	 *
	 * @return string
	 */",
 "/**
	 * Return either a MediaTransformError or placeholder thumbnail (if $wgIgnoreImageErrors)
	 * 
	 * @param $thumbPath string Thumbnail storage path
	 * @param $thumbUrl string Thumbnail URL
	 * @param $params Array
	 * @param $flags integer
	 * @return MediaTransformOutput
	 */",
 "/**
	 * Transform a media file
	 *
	 * @param $params Array: an associative array of handler-specific parameters.
	 *                Typical keys are width, height and page.
	 * @param $flags Integer: a bitfield, may contain self::RENDER_NOW to force rendering
	 * @return MediaTransformOutput|false
	 */",
 "/**
	 * Hook into transform() to allow migration of thumbnail files
	 * STUB
	 * Overridden by LocalFile
	 */",
 "/**
	 * Get a MediaHandler instance for this file
	 *
	 * @return MediaHandler
	 */",
 "/**
	 * Get a ThumbnailImage representing a file type icon
	 *
	 * @return ThumbnailImage
	 */",
 "/**
	 * Get last thumbnailing error.
	 * Largely obsolete.
	 */",
 "/**
	 * Get all thumbnail names previously generated for this file
	 * STUB
	 * Overridden by LocalFile
	 */",
 "/**
	 * Purge shared caches such as thumbnails and DB data caching
	 * STUB
	 * Overridden by LocalFile
	 * @param $options Array Options, which include:
	 *     \'forThumbRefresh\' : The purging is only to refresh thumbnails
	 */",
 "/**
	 * Purge the file description page, but don\'t go after
	 * pages using the file. Use when modifying file history
	 * but not the current data.
	 */",
 "/**
	 * Purge metadata and all affected pages when the file is created,
	 * deleted, or majorly updated.
	 */",
 "/**
	 * Return a fragment of the history of file.
	 *
	 * STUB
	 * @param $limit integer Limit of rows to return
	 * @param $start timestamp Only revisions older than $start will be returned
	 * @param $end timestamp Only revisions newer than $end will be returned
	 * @param $inc bool Include the endpoints of the time range
	 *
	 * @return array
	 */",
 "/**
	 * Return the history of this file, line by line. Starts with current version,
	 * then old versions. Should return an object similar to an image/oldimage
	 * database row.
	 *
	 * STUB
	 * Overridden in LocalFile
	 */",
 "/**
	 * Reset the history pointer to the first element of the history.
	 * Always call this function after using nextHistoryLine() to free db resources
	 * STUB
	 * Overridden in LocalFile.
	 */",
 "/**
	 * Get the filename hash component of the directory including trailing slash,
	 * e.g. f/fa/
	 * If the repository is not hashed, returns an empty string.
	 *
	 * @return string
	 */",
 "/**
	 * Get the path of the file relative to the public zone root.
	 * This function is overriden in OldLocalFile to be like getArchiveRel().
	 *
	 * @return string
	 */",
 "/**
	 * Get the path of an archived file relative to the public zone root
	 *
	 * @param $suffix bool|string if not false, the name of an archived thumbnail file
	 *
	 * @return string
	 */",
 "/**
	 * Get the path, relative to the thumbnail zone root, of the
	 * thumbnail directory or a particular file if $suffix is specified
	 *
	 * @param $suffix bool|string if not false, the name of a thumbnail file
	 *
	 * @return string
	 */",
 "/**
	 * Get urlencoded path of the file relative to the public zone root.
	 * This function is overriden in OldLocalFile to be like getArchiveUrl().
	 *
	 * @return string
	 */",
 "/**
	 * Get the path, relative to the thumbnail zone root, for an archived file\'s thumbs directory
	 * or a specific thumb if the $suffix is given.
	 *
	 * @param $archiveName string the timestamped name of an archived image
	 * @param $suffix bool|string if not false, the name of a thumbnail file
	 *
	 * @return string
	 */",
 "/**
	 * Get the path of the archived file.
	 *
	 * @param $suffix bool|string if not false, the name of an archived file.
	 *
	 * @return string
	 */",
 "/**
	 * Get the path of an archived file\'s thumbs, or a particular thumb if $suffix is specified
	 *
	 * @param $archiveName string the timestamped name of an archived image
	 * @param $suffix bool|string if not false, the name of a thumbnail file
	 *
	 * @return string
	 */",
 "/**
	 * Get the path of the thumbnail directory, or a particular file if $suffix is specified
	 *
	 * @param $suffix bool|string if not false, the name of a thumbnail file
	 *
	 * @return string
	 */",
 "/**
	 * Get the URL of the archive directory, or a particular file if $suffix is specified
	 *
	 * @param $suffix bool|string if not false, the name of an archived file
	 *
	 * @return string
	 */",
 "/**
	 * Get the URL of the archived file\'s thumbs, or a particular thumb if $suffix is specified
	 *
	 * @param $archiveName string the timestamped name of an archived image
	 * @param $suffix bool|string if not false, the name of a thumbnail file
	 *
	 * @return string
	 */",
 "/**
	 * Get the URL of the thumbnail directory, or a particular file if $suffix is specified
	 *
	 * @param $suffix bool|string if not false, the name of a thumbnail file
	 *
	 * @return path
	 */",
 "/**
	 * Get the public zone virtual URL for a current version source file
	 *
	 * @param $suffix bool|string if not false, the name of a thumbnail file
	 *
	 * @return string
	 */",
 "/**
	 * Get the public zone virtual URL for an archived version source file
	 *
	 * @param $suffix bool|string if not false, the name of a thumbnail file
	 *
	 * @return string
	 */",
 "/**
	 * Get the virtual URL for a thumbnail file or directory
	 *
	 * @param $suffix bool|string if not false, the name of a thumbnail file
	 *
	 * @return string
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * @throws MWException
	 */",
 "/**
	 * Record a file upload in the upload log and the image table
	 * STUB
	 * Overridden by LocalFile
	 * @param $oldver
	 * @param $desc
	 * @param $license string
	 * @param $copyStatus string
	 * @param $source string
	 * @param $watch bool
	 */",
 "/**
	 * Move or copy a file to its public location. If a file exists at the
	 * destination, move it to an archive. Returns a FileRepoStatus object with
	 * the archive name in the \"value\" member on success.
	 *
	 * The archive name should be passed through to recordUpload for database
	 * registration.
	 *
	 * @param $srcPath String: local filesystem path to the source image
	 * @param $flags Integer: a bitwise combination of:
	 *     File::DELETE_SOURCE    Delete the source file, i.e. move
	 *         rather than copy
	 * @return FileRepoStatus object. On success, the value member contains the
	 *     archive name, or an empty string if it was a new file.
	 *
	 * STUB
	 * Overridden by LocalFile
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * Returns true if the file comes from the local file repository.
	 *
	 * @return bool
	 */",
 "/**
	 * Returns the name of the repository.
	 *
	 * @return string
	 */",
 "/**
	 * Returns the repository
	 *
	 * @return FileRepo|false
	 */",
 "/**
	 * Returns true if the image is an old version
	 * STUB
	 *
	 * @return bool
	 */",
 "/**
	 * Is this file a \"deleted\" file in a private archive?
	 * STUB
	 *
	 * @param $field
	 *
	 * @return bool
	 */",
 "/**
	 * Return the deletion bitfield
	 * STUB
	 */",
 "/**
	 * Was this file ever deleted from the wiki?
	 *
	 * @return bool
	 */",
 "/**
	 * Move file to the new title
	 *
	 * Move current, old version and all thumbnails
	 * to the new filename. Old file is deleted.
	 *
	 * Cache purging is done; checks for validity
	 * and logging are caller\'s responsibility
	 *
	 * @param $target Title New file name
	 * @return FileRepoStatus object.
	 */",
 "/**
	 * Delete all versions of the file.
	 *
	 * Moves the files into an archive directory (or deletes them)
	 * and removes the database rows.
	 *
	 * Cache purging is done; logging is caller\'s responsibility.
	 *
	 * @param $reason String
	 * @param $suppress Boolean: hide content from sysops?
	 * @return true on success, false on some kind of failure
	 * STUB
	 * Overridden by LocalFile
	 */",
 "/**
	 * Restore all or specified deleted revisions to the given file.
	 * Permissions and logging are left to the caller.
	 *
	 * May throw database exceptions on error.
	 *
	 * @param $versions array set of record ids of deleted items to restore,
	 *                    or empty to restore all revisions.
	 * @param $unsuppress bool remove restrictions on content upon restoration?
	 * @return int|false the number of file revisions restored if successful,
	 *         or false on failure
	 * STUB
	 * Overridden by LocalFile
	 */",
 "/**
	 * Returns \'true\' if this file is a type which supports multiple pages,
	 * e.g. DJVU or PDF. Note that this may be true even if the file in
	 * question only has a single page.
	 *
	 * @return Bool
	 */",
 "/**
	 * Returns the number of pages of a multipage document, or false for
	 * documents which aren\'t multipage documents
	 *
	 * @return false|int
	 */",
 "/**
	 * Calculate the height of a thumbnail using the source and destination width
	 *
	 * @param $srcWidth
	 * @param $srcHeight
	 * @param $dstWidth
	 *
	 * @return int
	 */",
 "/**
	 * Get an image size array like that returned by getImageSize(), or false if it
	 * can\'t be determined.
	 *
	 * @param $fileName String: The filename
	 * @return Array
	 */",
 "/**
	 * Get the URL of the image description page. May return false if it is
	 * unknown or not applicable.
	 *
	 * @return string
	 */",
 "/**
	 * Get the HTML text of the description page, if available
	 *
	 * @return string
	 */",
 "/**
	 * Get discription of file revision
	 * STUB
	 *
	 * @return string
	 */",
 "/**
	 * Get the 14-character timestamp of the file upload
	 *
	 * @return string|false TS_MW timestamp or false on failure
	 */",
 "/**
	 * Get the SHA-1 base 36 hash of the file
	 *
	 * @return string
	 */",
 "/**
	 * Get the deletion archive key, <sha1>.<ext>
	 *
	 * @return string
	 */",
 "/**
	 * Determine if the current user is allowed to view a particular
	 * field of this file, if it\'s marked as deleted.
	 * STUB
	 * @param $field Integer
	 * @param $user User object to check, or null to use $wgUser
	 * @return Boolean
	 */",
 "/**
	 * Get an associative array containing information about a file in the local filesystem.
	 *
	 * @param $path String: absolute local filesystem path
	 * @param $ext Mixed: the file extension, or true to extract it from the filename.
	 *             Set it to false to ignore the extension.
	 *
	 * @return array
	 */",
 "/**
	 * Get a SHA-1 hash of a file in the local filesystem, in base-36 lower case
	 * encoding, zero padded to 31 digits.
	 *
	 * 160 log 2 / log 36 = 30.95, so the 160-bit hash fills 31 digits in base 36
	 * fairly neatly.
	 *
	 * @param $path string
	 *
	 * @return false|string False on failure
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return
	 */",
 "/**
	 * @return Title
	 */",
 "/**
	 * @param  $from
	 * @return void
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * Assert that $this->repo is set to a valid FileRepo instance
	 * @throws MWException
	 */",
 "/**
	 * Assert that $this->title is set to a Title
	 * @throws MWException
	 */",
 "/**
 * Implements some public methods and some protected utility functions which
 * are required by multiple child classes. Contains stub functionality for
 * unimplemented public methods.
 *
 * Stub functions which should be overridden are marked with STUB. Some more
 * concrete functions are also typically overridden by child classes.
 *
 * Note that only the repo object knows what its file class is called. You should
 * never name a file class explictly outside of the repo class. Instead use the
 * repo\'s factory functions to generate file objects, for example:
 *
 * RepoGroup::singleton()->getLocalRepo()->newFile($title);
 *
 * The convenience functions wfLocalFile() and wfFindFile() should be sufficient
 * in most cases.
 *
 * @ingroup FileAbstraction
 */",
 "/**
	 * Plural form transformations
	 * Based on this discussion: http://translatewiki.net/wiki/Thread:Support/New_plural_rules_for_Scots_Gaelic_(gd)
	 *
	 * $forms[0] - 1
	 * $forms[1] - 2
	 * $forms[2] - 11
	 * $forms[3] - 12
	 * $forms[4] - 3-10, 13-19
	 * $forms[5] - 0, 20, rest
	 *
	 * @param $count int
	 * @param $forms array
	 *
	 * @return string
	 */",
 "/** Scots Gaelic (G??idhlig)
 *
 * @ingroup Language
 *
 * @author Raimond Spekking
 * @author Niklas Laxstr??m
 */",
 "/** Telugu (??????????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Chaduvari
 * @author Kaganer
 * @author Kiranmayee
 * @author Meno25
 * @author Mpradeep
 * @author Praveen Illa
 * @author Ravichandra
 * @author Sunil Mohan
 * @author The Evil IP address
 * @author Urhixidur
 * @author Veeven
 * @author ??var Arnfj??r?? Bjarmason <avarab@gmail.com>
 * @author ???????? ????????????????
 * @author ???????????????????????????????????????
 * @author ????????????????????????
 * @author ????????????????????????
 */",
 "/** @dataProvider providerPluralThreeForms */",
 "/** @dataProvider providerPlural */",
 "/** Tests for MediaWiki languages/classes/LanguageSma.php */",
 "/** Gujarati (?????????????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Aguddi
 * @author Aksi great
 * @author Aritra
 * @author Ashok modhvadia
 * @author Dineshjk
 * @author Dsvyas
 * @author Haritosh
 * @author Jay
 * @author Kaganer
 * @author KartikMistry
 * @author Metrix1312
 * @author Mohit.dalal
 * @author Nehal
 * @author Ramesh
 * @author Rangilo Gujarati
 * @author RaviC
 * @author Sushant savla
 * @author ???????? ????????????????
 */",
 "/**
	 * Show a form for filtering namespace and username
	 *
	 * @param $par String
	 * @return String
	 */",
 "/**
 * Implements Special:ComparePages
 *
 * @ingroup SpecialPage
 */",
 "/**
	 * Get the RequestContext object
	 * @since 1.18
	 * @return RequestContext
	 */",
 "/**
	 * Set the IContextSource object
	 *
	 * @since 1.18
	 * @param $context IContextSource
	 */",
 "/**
	 * Get the WebRequest object
	 *
	 * @since 1.18
	 * @return WebRequest
	 */",
 "/**
	 * Get the Title object
	 *
	 * @since 1.18
	 * @return Title
	 */",
 "/**
	 * Check whether a WikiPage object can be get with getWikiPage().
	 * Callers should expect that an exception is thrown from getWikiPage()
	 * if this method returns false.
	 *
	 * @since 1.19
	 * @return bool
	 */",
 "/**
	 * Get the WikiPage object.
	 * May throw an exception if there\'s no Title object set or the Title object
	 * belongs to a special namespace that doesn\'t have WikiPage, so use first
	 * canUseWikiPage() to check whether this method can be called safely.
	 *
	 * @since 1.19
	 * @return WikiPage
	 */",
 "/**
	 * Get the OutputPage object
	 *
	 * @since 1.18
	 * @return OutputPage object
	 */",
 "/**
	 * Get the User object
	 *
	 * @since 1.18
	 * @return User
	 */",
 "/**
	 * Get the Language object
	 *
	 * @deprecated 1.19 Use getLanguage instead
	 * @return Language
	 */",
 "/**
	 * Get the Language object
	 *
	 * @since 1.19
	 * @return Language
	 */",
 "/**
	 * Get the Skin object
	 *
	 * @since 1.18
	 * @return Skin
	 */",
 "/**
	 * Get a Message object with context set
	 * Parameters are the same as wfMessage()
	 *
	 * @since 1.18
	 * @return Message object
	 */",
 "/**
 * The simplest way of implementing IContextSource is to hold a RequestContext as a
 * member variable and provide accessors to it.
 */",
 "/**
	 * @return LockManagerGroup
	 */",
 "/**
	 * Register lock managers from the global variables
	 * 
	 * @return void
	 */",
 "/**
	 * Register an array of file lock manager configurations
	 *
	 * @param $configs Array
	 * @return void
	 * @throws MWException
	 */",
 "/**
	 * Get the lock manager object with a given name
	 *
	 * @param $name string
	 * @return LockManager
	 * @throws MWException
	 */",
 "/**
 * Class to handle file lock manager registration
 * 
 * @ingroup LockManager
 * @author Aaron Schulz
 * @since 1.19
 */",
 "/** Southern Sotho (Sesotho)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Cbrown1023
 * @author Zyxoas (on st.wikipedia.org)
 */",
 "/**
 * Selenium server manager
 *
 * @file
 * @ingroup Testing
 * Copyright (C) 2010 Nadeesha Weerasinghe <nadeesha@calcey.com>
 * http://www.calcey.com/ 
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @addtogroup Testing
 *
 */",
 "/**
 * To configure MW for these tests
 * 1) If you are running multiple test suites, add the following in LocalSettings.php
 * require_once(\"extensions/WikiEditor/tests/selenium/WikiEditorSeleniumConfig.php\");
 * $wgSeleniumTestConfigs[\'WikiEditorTestSuite\'] = \'WikiEditorSeleniumConfig::getSettings\';
 * OR
 * 2) Add the following to your Localsettings.php
 * require_once( \"$IP/extensions/Vector/Vector.php\" );
 * require_once( \"$IP/extensions/WikiEditor/WikiEditor.php\" );
 * $wgDefaultSkin = \'vector\';
 * $wgVectorFeatures[\'editwarning\'] = array( \'global\' => false, \'user\' => false );
 * $wgWikiEditorFeatures[\'templateEditor\'] = array( \'global\' => false, \'user\' => false );
 * $wgWikiEditorFeatures[\'toolbar\'] = array( \'global\' => true, \'user\' => true );
 * $wgWikiEditorFeatures[\'toc\'] = array( \'global\' => false, \'user\' => false );
 * $wgWikiEditorFeatures[\'highlight\'] = array( \'global\' => false, \'user\' => false );
 * $wgWikiEditorFeatures[\'dialogs\'] = array( \'global\' => true, \'user\' => true );
 *
 */",
 "/**
 * API module that dies with an error immediately.
 *
 * Use this to disable core modules with
 * $wgAPIModules[\'modulename\'] = \'ApiDisabled\';
 *
 * To disable submodules of action=query, use ApiQueryDisabled instead
 *
 * @ingroup API
 */",
 "/** Pontic (????????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Consta
 * @author Crazymadlover
 * @author Kaganer
 * @author Omnipaedista
 * @author Reedy
 * @author Sinopeus
 * @author Urhixidur
 * @author ZaDiak
 */",
 "/**
	 * test @see wfBCP47().
	 * Please note the BCP explicitly state that language codes are case
	 * insensitive, there are some exceptions to the rule :)
   	 * This test is used to verify our formatting against all lower and
	 * all upper cases language code.
	 *
	 * @see http://tools.ietf.org/html/bcp47
	 * @dataProvider provideLanguageCodes()
	 */",
 "/**
	 * Array format is ($code, $expected)
	 */",
 "/**
 * Unit tests for wfBCP47()
 */",
 "/**
	 * Constructor for OutputPage. This should not be called directly.
	 * Instead a new RequestContext should be created and it will implicitly create
	 * a OutputPage tied to that context.
	 */",
 "/**
	 * Redirect to $url rather than displaying the normal page
	 *
	 * @param $url String: URL
	 * @param $responsecode String: HTTP status code
	 */",
 "/**
	 * Get the URL to redirect to, or an empty string if not redirect URL set
	 *
	 * @return String
	 */",
 "/**
	 * Set the HTTP status code to send with the output.
	 *
	 * @param $statusCode Integer
	 */",
 "/**
	 * Add a new <meta> tag
	 * To add an http-equiv meta tag, precede the name with \"http:\"
	 *
	 * @param $name String tag name
	 * @param $val String tag value
	 */",
 "/**
	 * Add a keyword or a list of keywords in the page header
	 *
	 * @param $text String or array of strings
	 */",
 "/**
	 * Add a new \<link\> tag to the page header
	 *
	 * @param $linkarr Array: associative array of attributes.
	 */",
 "/**
	 * Add a new \<link\> with \"rel\" attribute set to \"meta\"
	 *
	 * @param $linkarr Array: associative array mapping attribute names to their
	 *                 values, both keys and values will be escaped, and the
	 *                 \"rel\" attribute will be automatically added
	 */",
 "/**
	 * Get the value of the \"rel\" attribute for metadata links
	 *
	 * @return String
	 */",
 "/**
	 * Add raw HTML to the list of scripts (including \<script\> tag, etc.)
	 *
	 * @param $script String: raw HTML
	 */",
 "/**
	 * Register and add a stylesheet from an extension directory.
	 *
	 * @param $url String path to sheet.  Provide either a full url (beginning
	 *             with \'http\', etc) or a relative path from the document root
	 *             (beginning with \'/\').  Otherwise it behaves identically to
	 *             addStyle() and draws from the /skins folder.
	 */",
 "/**
	 * Get all styles added by extensions
	 *
	 * @return Array
	 */",
 "/**
	 * Add a JavaScript file out of skins/common, or a given relative path.
	 *
	 * @param $file String: filename in skins/common or complete on-server path
	 *              (/foo/bar.js)
	 * @param $version String: style version of the file. Defaults to $wgStyleVersion
	 */",
 "/**
	 * Add a self-contained script tag with the given contents
	 *
	 * @param $script String: JavaScript text, no <script> tags
	 */",
 "/**
	 * Get all registered JS and CSS tags for the header.
	 *
	 * @return String
	 */",
 "/**
	 * Filter an array of modules to remove insufficiently trustworthy members, and modules
	 * which are no longer registered (eg a page is cached before an extension is disabled)
	 * @param $modules Array
	 * @param $position String if not null, only return modules with this position
	 * @param $type string
	 * @return Array
	 */",
 "/**
	 * Get the list of modules to include on this page
	 *
	 * @param $filter Bool whether to filter out insufficiently trustworthy modules
	 * @param $position String if not null, only return modules with this position
	 * @param $param string
	 * @return Array of module names
	 */",
 "/**
	 * Add one or more modules recognized by the resource loader. Modules added
	 * through this function will be loaded by the resource loader when the
	 * page loads.
	 *
	 * @param $modules Mixed: module name (string) or array of module names
	 */",
 "/**
	 * Get the list of module JS to include on this page
	 *
	 * @param $filter
	 * @param $position
	 *
	 * @return array of module names
	 */",
 "/**
	 * Add only JS of one or more modules recognized by the resource loader. Module
	 * scripts added through this function will be loaded by the resource loader when
	 * the page loads.
	 *
	 * @param $modules Mixed: module name (string) or array of module names
	 */",
 "/**
	 * Get the list of module CSS to include on this page
	 *
	 * @param $filter
	 * @param $position
	 *
	 * @return Array of module names
	 */",
 "/**
	 * Add only CSS of one or more modules recognized by the resource loader. Module
	 * styles added through this function will be loaded by the resource loader when
	 * the page loads.
	 *
	 * @param $modules Mixed: module name (string) or array of module names
	 */",
 "/**
	 * Get the list of module messages to include on this page
	 *
	 * @param $filter
	 * @param $position
	 *
	 * @return Array of module names
	 */",
 "/**
	 * Add only messages of one or more modules recognized by the resource loader.
	 * Module messages added through this function will be loaded by the resource
	 * loader when the page loads.
	 *
	 * @param $modules Mixed: module name (string) or array of module names
	 */",
 "/**
	 * Get an array of head items
	 *
	 * @return Array
	 */",
 "/**
	 * Get all header items in a string
	 *
	 * @return String
	 */",
 "/**
	 * Add or replace an header item to the output
	 *
	 * @param $name String: item name
	 * @param $value String: raw HTML
	 */",
 "/**
	 * Check if the header item $name is already set
	 *
	 * @param $name String: item name
	 * @return Boolean
	 */",
 "/**
	 * Set the value of the ETag HTTP header, only used if $wgUseETag is true
	 *
	 * @param $tag String: value of \"ETag\" header
	 */",
 "/**
	 * Set whether the output should only contain the body of the article,
	 * without any skin, sidebar, etc.
	 * Used e.g. when calling with \"action=render\".
	 *
	 * @param $only Boolean: whether to output only the body of the article
	 */",
 "/**
	 * Return whether the output will contain only the body of the article
	 *
	 * @return Boolean
	 */",
 "/**
	 * checkLastModified tells the client to use the client-cached page if
	 * possible. If sucessful, the OutputPage is disabled so that
	 * any future call to OutputPage->output() have no effect.
	 *
	 * Side effect: sets mLastModified for Last-Modified header
	 *
	 * @param $timestamp string
	 *
	 * @return Boolean: true iff cache-ok headers was sent.
	 */",
 "/**
	 * Override the last modified timestamp
	 *
	 * @param $timestamp String: new timestamp, in a format readable by
	 *        wfTimestamp()
	 */",
 "/**
	 * Set the robot policy for the page: <http://www.robotstxt.org/meta.html>
	 *
	 * @param $policy String: the literal string to output as the contents of
	 *   the meta tag.  Will be parsed according to the spec and output in
	 *   standardized form.
	 * @return null
	 */",
 "/**
	 * Set the index policy for the page, but leave the follow policy un-
	 * touched.
	 *
	 * @param $policy string Either \'index\' or \'noindex\'.
	 * @return null
	 */",
 "/**
	 * Set the follow policy for the page, but leave the index policy un-
	 * touched.
	 *
	 * @param $policy String: either \'follow\' or \'nofollow\'.
	 * @return null
	 */",
 "/**
	 * Set the new value of the \"action text\", this will be added to the
	 * \"HTML title\", separated from it with \" - \".
	 *
	 * @param $text String: new value of the \"action text\"
	 */",
 "/**
	 * Get the value of the \"action text\"
	 *
	 * @return String
	 */",
 "/**
	 * \"HTML title\" means the contents of <title>.
	 * It is stored as plain, unescaped text and will be run through htmlspecialchars in the skin file.
	 *
	 * @param $name string
	 */",
 "/**
	 * Return the \"HTML title\", i.e. the content of the <title> tag.
	 *
	 * @return String
	 */",
 "/**
	 * Set $mRedirectedFrom, the Title of the page which redirected us to the current page.
	 *
	 * param @t Title
	 */",
 "/**
	 * \"Page title\" means the contents of \<h1\>. It is stored as a valid HTML fragment.
	 * This function allows good tags like \<sup\> in the \<h1\> tag, but not bad tags like \<script\>.
	 * This function automatically sets \<title\> to the same content as \<h1\> but with all tags removed.
	 * Bad tags that were escaped in \<h1\> will still be escaped in \<title\>, and good tags like \<i\> will be dropped entirely.
	 *
	 * @param $name string|Message
	 */",
 "/**
	 * Return the \"page title\", i.e. the content of the \<h1\> tag.
	 *
	 * @return String
	 */",
 "/**
	 * Set the Title object to use
	 *
	 * @param $t Title object
	 */",
 "/**
	 * Replace the subtile with $str
	 *
	 * @param $str String|Message: new value of the subtitle
	 */",
 "/**
	 * Add $str to the subtitle
	 *
	 * @deprecated in 1.19; use addSubtitle() instead
	 * @param $str String|Message to add to the subtitle
	 */",
 "/**
	 * Add $str to the subtitle
	 *
	 * @param $str String|Message to add to the subtitle
	 */",
 "/**
	 * Add a subtitle containing a backlink to a page
	 *
	 * @param $title Title to link to
	 */",
 "/**
	 * Clear the subtitles
	 */",
 "/**
	 * Get the subtitle
	 *
	 * @return String
	 */",
 "/**
	 * Set the page as printable, i.e. it\'ll be displayed with with all
	 * print styles included
	 */",
 "/**
	 * Return whether the page is \"printable\"
	 *
	 * @return Boolean
	 */",
 "/**
	 * Disable output completely, i.e. calling output() will have no effect
	 */",
 "/**
	 * Return whether the output will be completely disabled
	 *
	 * @return Boolean
	 */",
 "/**
	 * Show an \"add new section\" link?
	 *
	 * @return Boolean
	 */",
 "/**
	 * Forcibly hide the new section link?
	 *
	 * @return Boolean
	 */",
 "/**
	 * Add or remove feed links in the page header
	 * This is mainly kept for backward compatibility, see OutputPage::addFeedLink()
	 * for the new version
	 * @see addFeedLink()
	 *
	 * @param $show Boolean: true: add default feeds, false: remove all feeds
	 */",
 "/**
	 * Add default feeds to the page header
	 * This is mainly kept for backward compatibility, see OutputPage::addFeedLink()
	 * for the new version
	 * @see addFeedLink()
	 *
	 * @param $val String: query to append to feed links or false to output
	 *        default links
	 */",
 "/**
	 * Add a feed link to the page header
	 *
	 * @param $format String: feed type, should be a key of $wgFeedClasses
	 * @param $href String: URL
	 */",
 "/**
	 * Should we output feed links for this page?
	 * @return Boolean
	 */",
 "/**
	 * Return URLs for each supported syndication format for this page.
	 * @return array associating format keys with URLs
	 */",
 "/**
	 * Will currently always return null
	 *
	 * @return null
	 */",
 "/**
	 * Set whether the displayed content is related to the source of the
	 * corresponding article on the wiki
	 * Setting true will cause the change \"article related\" toggle to true
	 *
	 * @param $v Boolean
	 */",
 "/**
	 * Return whether the content displayed page is related to the source of
	 * the corresponding article on the wiki
	 *
	 * @return Boolean
	 */",
 "/**
	 * Set whether this page is related an article on the wiki
	 * Setting false will cause the change of \"article flag\" toggle to false
	 *
	 * @param $v Boolean
	 */",
 "/**
	 * Return whether this page is related an article on the wiki
	 *
	 * @return Boolean
	 */",
 "/**
	 * Add new language links
	 *
	 * @param $newLinkArray Associative array mapping language code to the page
	 *                      name
	 */",
 "/**
	 * Reset the language links and add new language links
	 *
	 * @param $newLinkArray Associative array mapping language code to the page
	 *                      name
	 */",
 "/**
	 * Get the list of language links
	 *
	 * @return Array of Interwiki Prefixed (non DB key) Titles (e.g. \'fr:Test page\')
	 */",
 "/**
	 * Add an array of categories, with names in the keys
	 *
	 * @param $categories Array mapping category name => sort key
	 */",
 "/**
	 * Reset the category links (but not the category list) and add $categories
	 *
	 * @param $categories Array mapping category name => sort key
	 */",
 "/**
	 * Get the list of category links, in a 2-D array with the following format:
	 * $arr[$type][] = $link, where $type is either \"normal\" or \"hidden\" (for
	 * hidden categories) and $link a HTML fragment with a link to the category
	 * page
	 *
	 * @return Array
	 */",
 "/**
	 * Get the list of category names this page belongs to
	 *
	 * @return Array of strings
	 */",
 "/**
	 * Do not allow scripts which can be modified by wiki users to load on this page;
	 * only allow scripts bundled with, or generated by, the software.
	 */",
 "/**
	 * Return whether user JavaScript is allowed for this page
	 * @deprecated since 1.18 Load modules with ResourceLoader, and origin and
	 *     trustworthiness is identified and enforced automagically.
	 *     Will be removed in 1.20.
	 * @return Boolean
	 */",
 "/**
	 * Show what level of JavaScript / CSS untrustworthiness is allowed on this page
	 * @see ResourceLoaderModule::$origin
	 * @param $type String ResourceLoaderModule TYPE_ constant
	 * @return Int ResourceLoaderModule ORIGIN_ class constant
	 */",
 "/**
	 * Set the highest level of CSS/JS untrustworthiness allowed
	 * @param  $type String ResourceLoaderModule TYPE_ constant
	 * @param  $level Int ResourceLoaderModule class constant
	 */",
 "/**
	 * As for setAllowedModules(), but don\'t inadvertantly make the page more accessible
	 * @param  $type String
	 * @param  $level Int ResourceLoaderModule class constant
	 */",
 "/**
	 * Prepend $text to the body HTML
	 *
	 * @param $text String: HTML
	 */",
 "/**
	 * Append $text to the body HTML
	 *
	 * @param $text String: HTML
	 */",
 "/**
	 * Shortcut for adding an Html::element via addHTML.
	 *
	 * @since 1.19
	 *
	 * @param $element string
	 * @param $attribs array
	 * @param $contents string
	 */",
 "/**
	 * Clear the body HTML
	 */",
 "/**
	 * Get the body HTML
	 *
	 * @return String: HTML
	 */",
 "/**
	 * Add $text to the debug output
	 *
	 * @param $text String: debug text
	 */",
 "/**
	 * Get/set the ParserOptions object to use for wikitext parsing
	 *
	 * @param $options either the ParserOption to use or null to only get the
	 *                 current ParserOption object
	 * @return ParserOptions object
	 */",
 "/**
	 * Set the revision ID which will be seen by the wiki text parser
	 * for things such as embedded {{REVISIONID}} variable use.
	 *
	 * @param $revid Mixed: an positive integer, or null
	 * @return Mixed: previous value
	 */",
 "/**
	 * Get the displayed revision ID
	 *
	 * @return Integer
	 */",
 "/**
	 * Set the timestamp of the revision which will be displayed. This is used
	 * to avoid a extra DB call in Skin::lastModified().
	 *
	 * @param $revid Mixed: string, or null
	 * @return Mixed: previous value
	 */",
 "/**
	 * Get the timestamp of displayed revision.
	 * This will be null if not filled by setRevisionTimestamp().
	 *
	 * @return String or null
	 */",
 "/**
	 * Set the displayed file version
	 *
	 * @param $file File|false
	 * @return Mixed: previous value
	 */",
 "/**
	 * Get the displayed file version
	 *
	 * @return Array|null (\'time\' => MW timestamp, \'sha1\' => sha1)
	 */",
 "/**
	 * Get the templates used on this page
	 *
	 * @return Array (namespace => dbKey => revId)
	 * @since 1.18
	 */",
 "/**
	 * Get the files used on this page
	 *
	 * @return Array (dbKey => array(\'time\' => MW timestamp or null, \'sha1\' => sha1 or \'\'))
	 * @since 1.18
	 */",
 "/**
	 * Convert wikitext to HTML and add it to the buffer
	 * Default assumes that the current page title will be used.
	 *
	 * @param $text String
	 * @param $linestart Boolean: is this the start of a line?
	 * @param $interface Boolean: is this text in the user interface language?
	 */",
 "/**
	 * Add wikitext with a custom Title object
	 *
	 * @param $text String: wikitext
	 * @param $title Title object
	 * @param $linestart Boolean: is this the start of a line?
	 */",
 "/**
	 * Add wikitext with a custom Title object and tidy enabled.
	 *
	 * @param $text String: wikitext
	 * @param $title Title object
	 * @param $linestart Boolean: is this the start of a line?
	 */",
 "/**
	 * Add wikitext with tidy enabled
	 *
	 * @param $text String: wikitext
	 * @param $linestart Boolean: is this the start of a line?
	 */",
 "/**
	 * Add wikitext with a custom Title object
	 *
	 * @param $text String: wikitext
	 * @param $title Title object
	 * @param $linestart Boolean: is this the start of a line?
	 * @param $tidy Boolean: whether to use tidy
	 * @param $interface Boolean: whether it is an interface message
	 *								(for example disables conversion)
	 */",
 "/**
	 * Add a ParserOutput object, but without Html
	 *
	 * @param $parserOutput ParserOutput object
	 */",
 "/**
	 * Add a ParserOutput object
	 *
	 * @param $parserOutput ParserOutput
	 */",
 "/**
	 * Add the output of a QuickTemplate to the output buffer
	 *
	 * @param $template QuickTemplate
	 */",
 "/**
	 * Parse wikitext and return the HTML.
	 *
	 * @param $text String
	 * @param $linestart Boolean: is this the start of a line?
	 * @param $interface Boolean: use interface language ($wgLang instead of
	 *                   $wgContLang) while parsing language sensitive magic
	 *                   words like GRAMMAR and PLURAL. This also disables
	 *					 LanguageConverter.
	 * @param $language  Language object: target language object, will override
	 *                   $interface
	 * @return String: HTML
	 */",
 "/**
	 * Parse wikitext, strip paragraphs, and return the HTML.
	 *
	 * @param $text String
	 * @param $linestart Boolean: is this the start of a line?
	 * @param $interface Boolean: use interface language ($wgLang instead of
	 *                   $wgContLang) while parsing language sensitive magic
	 *                   words like GRAMMAR and PLURAL
	 * @return String: HTML
	 */",
 "/**
	 * Set the value of the \"s-maxage\" part of the \"Cache-control\" HTTP header
	 *
	 * @param $maxage Integer: maximum cache time on the Squid, in seconds.
	 */",
 "/**
	 * Use enableClientCache(false) to force it to send nocache headers
	 *
	 * @param $state bool
	 *
	 * @return bool
	 */",
 "/**
	 * Get the list of cookies that will influence on the cache
	 *
	 * @return Array
	 */",
 "/**
	 * Return whether this page is not cacheable because \"useskin\" or \"uselang\"
	 * URL parameters were passed.
	 *
	 * @return Boolean
	 */",
 "/**
	 * Check if the request has a cache-varying cookie header
	 * If it does, it\'s very important that we don\'t allow public caching
	 *
	 * @return Boolean
	 */",
 "/**
	 * Add an HTTP header that will influence on the cache
	 *
	 * @param $header String: header name
	 * @param $option Array|null
	 * @todo FIXME: Document the $option parameter; it appears to be for
	 *        X-Vary-Options but what format is acceptable?
	 */",
 "/**
	 * Get a complete X-Vary-Options header
	 *
	 * @return String
	 */",
 "/**
	 * bug 21672: Add Accept-Language to Vary and XVO headers
	 * if there\'s no \'variant\' parameter existed in GET.
	 *
	 * For example:
	 *   /w/index.php?title=Main_page should always be served; but
	 *   /w/index.php?title=Main_page&variant=zh-cn should never be served.
	 */",
 "/**
	 * Set a flag which will cause an X-Frame-Options header appropriate for
	 * edit pages to be sent. The header value is controlled by
	 * $wgEditPageFrameOptions.
	 *
	 * This is the default for special pages. If you display a CSRF-protected
	 * form on an ordinary view page, then you need to call this function.
	 *
	 * @param $enable bool
	 */",
 "/**
	 * Turn off frame-breaking. Alias for $this->preventClickjacking(false).
	 * This can be called from pages which do not contain any CSRF-protected
	 * HTML form.
	 */",
 "/**
	 * Get the X-Frame-Options header value (without the name part), or false
	 * if there isn\'t one. This is used by Skin to determine whether to enable
	 * JavaScript frame-breaking, for clients that don\'t support X-Frame-Options.
	 *
	 * @return string
	 */",
 "/**
	 * Send cache control HTTP headers
	 */",
 "/**
	 * Get the message associed with the HTTP response code $code
	 *
	 * @param $code Integer: status code
	 * @return String or null: message or null if $code is not in the list of
	 *         messages
	 *
	 * @deprecated since 1.18 Use HttpStatus::getMessage() instead.
	 */",
 "/**
	 * Finally, all the text has been munged and accumulated into
	 * the object, let\'s actually output it:
	 */",
 "/**
	 * Actually output something with print().
	 *
	 * @param $ins String: the string to output
	 */",
 "/**
	 * Produce a \"user is blocked\" page.
	 * @deprecated since 1.18
	 */",
 "/**
	 * Prepare this object to display an error page; disable caching and
	 * indexing, clear the current text and redirect, set the page\'s title
	 * and optionally an custom HTML title (content of the <title> tag).
	 *
	 * @param $pageTitle String|Message will be passed directly to setPageTitle()
	 * @param $htmlTitle String|Message will be passed directly to setHTMLTitle();
	 *                   optional, if not passed the <title> attribute will be
	 *                   based on $pageTitle
	 */",
 "/**
	 * Output a standard error page
	 *
	 * showErrorPage( \'titlemsg\', \'pagetextmsg\', array( \'param1\', \'param2\' ) );
	 * showErrorPage( \'titlemsg\', $messageObject );
	 *
	 * @param $title String: message key for page title
	 * @param $msg Mixed: message key (string) for page text, or a Message object
	 * @param $params Array: message parameters; ignored if $msg is a Message object
	 */",
 "/**
	 * Output a standard permission error page
	 *
	 * @param $errors Array: error message keys
	 * @param $action String: action that was denied or null if unknown
	 */",
 "/**
	 * Display an error page indicating that a given version of MediaWiki is
	 * required to use it
	 *
	 * @param $version Mixed: the version of MediaWiki needed to use the page
	 */",
 "/**
	 * Display an error page noting that a given permission bit is required.
	 * @deprecated since 1.18, just throw the exception directly
	 * @param $permission String: key required
	 */",
 "/**
	 * Produce the stock \"please login to use the wiki\" page
	 *
	 * @deprecated in 1.19; throw the exception directly
	 */",
 "/**
	 * Format a list of error messages
	 *
	 * @param $errors Array of arrays returned by Title::getUserPermissionsErrors
	 * @param $action String: action that was denied or null if unknown
	 * @return String: the wikitext error-messages, formatted into a list.
	 */",
 "/**
	 * Display a page stating that the Wiki is in read-only mode,
	 * and optionally show the source of the page that the user
	 * was trying to edit.  Should only be called (for this
	 * purpose) after wfReadOnly() has returned true.
	 *
	 * For historical reasons, this function is _also_ used to
	 * show the error message when a user tries to edit a page
	 * they are not allowed to edit.  (Unless it\'s because they\'re
	 * blocked, then we show blockedPage() instead.)  In this
	 * case, the second parameter should be set to true and a list
	 * of reasons supplied as the third parameter.
	 *
	 * @todo Needs to be split into multiple functions.
	 *
	 * @param $source    String: source code to show (or null).
	 * @param $protected Boolean: is this a permissions error?
	 * @param $reasons   Array: list of reasons for this error, as returned by Title::getUserPermissionsErrors().
	 * @param $action    String: action that was denied or null if unknown
	 */",
 "/**
	 * Turn off regular page output and return an error reponse
	 * for when rate limiting has triggered.
	 */",
 "/**
	 * Show a warning about slave lag
	 *
	 * If the lag is higher than $wgSlaveLagCritical seconds,
	 * then the warning is a bit more obvious. If the lag is
	 * lower than $wgSlaveLagWarning, then no warning is shown.
	 *
	 * @param $lag Integer: slave lag
	 */",
 "/**
	 * Add a \"return to\" link pointing to a specified title
	 *
	 * @param $title Title to link
	 * @param $query String query string
	 * @param $text String text of the link (input is not escaped)
	 */",
 "/**
	 * Add a \"return to\" link pointing to a specified title,
	 * or the title indicated in the request, or else the main page
	 *
	 * @param $unused No longer used
	 * @param $returnto Title or String to return to
	 * @param $returntoquery String: query string for the return to link
	 */",
 "/**
	 * @param $sk Skin The given Skin
	 * @param $includeStyle Boolean: unused
	 * @return String: The doctype, opening <html>, and head element.
	 */",
 "/**
	 * Add the default ResourceLoader modules to this object
	 */",
 "/**
	 * Get a ResourceLoader object associated with this OutputPage
	 *
	 * @return ResourceLoader
	 */",
 "/**
	 * TODO: Document
	 * @param $modules Array/string with the module name(s)
	 * @param $only String ResourceLoaderModule TYPE_ class constant
	 * @param $useESI boolean
	 * @param $extraQuery Array with extra query parameters to add to each request. array( param => value )
	 * @param $loadCall boolean If true, output an (asynchronous) mw.loader.load() call rather than a <script src=\"...\"> tag
	 * @return string html <script> and <style> tags
	 */",
 "/**
	 * JS stuff to put in the <head>. This is the startup module, config
	 * vars and modules marked with position \'top\'
	 *
	 * @return String: HTML fragment
	 */",
 "/**
	 * JS stuff to put at the \'bottom\', which can either be the bottom of the <body>
	 * or the bottom of the <head> depending on $wgResourceLoaderExperimentalAsyncLoading:
	 * modules marked with position \'bottom\', legacy scripts ($this->mScripts),
	 * user preferences, site JS and user JS
	 *
	 * @param $inHead boolean If true, this HTML goes into the <head>, if false it goes into the <body>
	 * @return string
	 */",
 "/**
	 * JS stuff to put at the bottom of the <body>
	 */",
 "/**
	 * Add one or more variables to be set in mw.config in JavaScript.
	 *
	 * @param $key {String|Array} Key or array of key/value pars.
	 * @param $value {Mixed} [optional] Value of the configuration variable.
	 */",
 "/**
	 * Get an array containing the variables to be set in mw.config in JavaScript.
	 *
	 * DO NOT CALL THIS FROM OUTSIDE OF THIS CLASS OR Skin::makeGlobalVariablesScript().
	 * This is only public until that function is removed. You have been warned.
	 *
	 * Do not add things here which can be evaluated in ResourceLoaderStartupScript
	 * - in other words, page-independent/site-wide variables (without state).
	 * You will only be adding bloat to the html page and causing page caches to
	 * have to be purged on configuration changes.
	 * @return array
	 */",
 "/**
	 * To make it harder for someone to slip a user a fake
	 * user-JavaScript or user-CSS preview, a random token
	 * is associated with the login session. If it\'s not
	 * passed back with the preview request, we won\'t render
	 * the code.
	 *
	 * @return bool
	 */",
 "/**
	 * @param $unused Unused
	 * @param $addContentType bool
	 *
	 * @return string HTML tag links to be put in the header.
	 */",
 "/**
	 * Generate a <link rel/> for a feed.
	 *
	 * @param $type String: feed type
	 * @param $url String: URL to the feed
	 * @param $text String: value of the \"title\" attribute
	 * @return String: HTML fragment
	 */",
 "/**
	 * Add a local or specified stylesheet, with the given media options.
	 * Meant primarily for internal use...
	 *
	 * @param $style String: URL to the file
	 * @param $media String: to specify a media type, \'screen\', \'printable\', \'handheld\' or any.
	 * @param $condition String: for IE conditional comments, specifying an IE version
	 * @param $dir String: set to \'rtl\' or \'ltr\' for direction-specific sheets
	 */",
 "/**
	 * Adds inline CSS styles
	 * @param $style_css Mixed: inline CSS
	 * @param $flip String: Set to \'flip\' to flip the CSS if needed
	 */",
 "/**
	 * Build a set of <link>s for the stylesheets specified in the $this->styles array.
	 * These will be applied to various media & IE conditionals.
	 *
	 * @return string
	 */",
 "/**
	 * @return Array
	 */",
 "/**
	 * Generate \<link\> tags for stylesheets
	 *
	 * @param $style String: URL to the file
	 * @param $options Array: option, can contain \'condition\', \'dir\', \'media\'
	 *                 keys
	 * @return String: HTML fragment
	 */",
 "/**
	 * Transform \"media\" attribute based on request parameters
	 *
	 * @param $media String: current value of the \"media\" attribute
	 * @return String: modified value of the \"media\" attribute
	 */",
 "/**
	 * Add a wikitext-formatted message to the output.
	 * This is equivalent to:
	 *
	 *    $wgOut->addWikiText( wfMsgNoTrans( ... ) )
	 */",
 "/**
	 * Add a wikitext-formatted message to the output.
	 * Like addWikiMsg() except the parameters are taken as an array
	 * instead of a variable argument list.
	 *
	 * @param $name string
	 * @param $args array
	 */",
 "/**
	 * This function takes a number of message/argument specifications, wraps them in
	 * some overall structure, and then parses the result and adds it to the output.
	 *
	 * In the $wrap, $1 is replaced with the first message, $2 with the second, and so
	 * on. The subsequent arguments may either be strings, in which case they are the
	 * message names, or arrays, in which case the first element is the message name,
	 * and subsequent elements are the parameters to that message.
	 *
	 * The special named parameter \'options\' in a message specification array is passed
	 * through to the $options parameter of wfMsgExt().
	 *
	 * Don\'t use this for messages that are not in users interface language.
	 *
	 * For example:
	 *
	 *    $wgOut->wrapWikiMsg( \"<div class=\'error\'>\n$1\n</div>\", \'some-error\' );
	 *
	 * Is equivalent to:
	 *
	 *    $wgOut->addWikiText( \"<div class=\'error\'>\n\" . wfMsgNoTrans( \'some-error\' ) . \"\n</div>\" );
	 *
	 * The newline after opening div is needed in some wikitext. See bug 19226.
	 *
	 * @param $wrap string
	 */",
 "/**
	 * Include jQuery core. Use this to avoid loading it multiple times
	 * before we get a usable script loader.
	 *
	 * @param $modules Array: list of jQuery modules which should be loaded
	 * @return Array: the list of modules which were not loaded.
	 * @since 1.16
	 * @deprecated since 1.17
	 */",
 "/**
 * This class should be covered by a general architecture document which does
 * not exist as of January 2011.  This is one of the Core classes and should
 * be read at least once by any new developers.
 *
 * This class is used to prepare the final rendering. A skin is then
 * applied to the output parameters (links, javascript, html, categories ...).
 *
 * @todo FIXME: Another class handles sending the whole page to the client.
 *
 * Some comments comes from a pairing session between Zak Greant and Antoine Musso
 * in November 2010.
 *
 * @todo document
 */",
 "/**
 * Rewrite a messages array.
 *
 * @param $languages
 * @param $code The language code.
 * @param bool $write Write to the messages file?
 * @param bool $listUnknown List the unknown messages?
 * @param bool $removeUnknown Remove the unknown messages?
 * @param bool $removeDupes Remove the duplicated messages?
 * @param $dupeMsgSource The source file intended to remove from the array.
 */",
 "/**
 * Remove duplicates from a message array.
 *
 * @param $oldMsgArray The input message array.
 * @param $dupeMsgSource The source file path for duplicates.
 * @return Array $newMsgArray The output message array, with duplicates removed.
 */",
 "/**
	 * @see FileBackendStore::__construct()
	 * Additional $config params include:
	 *    basePath       : File system directory that holds containers.
	 *    containerPaths : Map of container names to custom file system directories.
	 *                     This should only be used for backwards-compatibility.
	 *    fileMode       : Octal UNIX file permissions to use on files stored.
	 */",
 "/**
	 * @see FileBackendStore::resolveContainerPath()
	 */",
 "/**
	 * Sanity check a relative file system path for validity
	 * 
	 * @param $path string Normalized relative path
	 * @return bool
	 */",
 "/**
	 * Given the short (unresolved) and full (resolved) name of
	 * a container, return the file system path of the container.
	 * 
	 * @param $shortCont string
	 * @param $fullCont string
	 * @return string|null 
	 */",
 "/**
	 * Get the absolute file system path for a storage path
	 * 
	 * @param $storagePath string Storage path
	 * @return string|null
	 */",
 "/**
	 * @see FileBackendStore::isPathUsableInternal()
	 */",
 "/**
	 * @see FileBackendStore::doStoreInternal()
	 */",
 "/**
	 * @see FileBackendStore::doCopyInternal()
	 */",
 "/**
	 * @see FileBackendStore::doMoveInternal()
	 */",
 "/**
	 * @see FileBackendStore::doDeleteInternal()
	 */",
 "/**
	 * @see FileBackendStore::doCreateInternal()
	 */",
 "/**
	 * @see FileBackendStore::doPrepareInternal()
	 */",
 "/**
	 * @see FileBackendStore::doSecureInternal()
	 */",
 "/**
	 * @see FileBackendStore::doCleanInternal()
	 */",
 "/**
	 * @see FileBackendStore::doFileExists()
	 */",
 "/**
	 * @see FileBackendStore::doClearCache()
	 */",
 "/**
	 * @see FileBackendStore::getFileListInternal()
	 */",
 "/**
	 * @see FileBackendStore::getLocalReference()
	 */",
 "/**
	 * @see FileBackendStore::getLocalCopy()
	 */",
 "/**
	 * Chmod a file, suppressing the warnings
	 *
	 * @param $path string Absolute file system path
	 * @return bool Success
	 */",
 "/**
	 * Listen for E_WARNING errors and track whether any happen
	 *
	 * @return bool
	 */",
 "/**
	 * Stop listening for E_WARNING errors and return true if any happened
	 *
	 * @return bool
	 */",
 "/**
 * Class for a file system (FS) based file backend.
 * 
 * All \"containers\" each map to a directory under the backend\'s base directory.
 * For backwards-compatibility, some container paths can be set to custom paths.
 * The wiki ID will not be used in any custom paths, so this should be avoided.
 * 
 * Having directories with thousands of files will diminish performance.
 * Sharding can be accomplished by using FileRepo-style hash paths.
 *
 * Status messages should avoid mentioning the internal FS paths.
 * PHP warnings are assumed to be logged rather than output.
 *
 * @ingroup FileBackend
 * @since 1.19
 */",
 "/**
	 * @param $dir string file system directory
	 */",
 "/**
*WrapperaroundRecursiveDirectoryIteratorthatcatches
*exceptionordoesanycustombehavoirthatwemaywant.
*DonotusethisclassfromplacesoutsideFSFileBackend.
*
*@ingroupFileBackend
*/",
 "/**
	 * @expectedException UsageException
	 */",
 "/**
	 * @expectedException UsageException
	 */",
 "/**
	 * Test that the API will accept a FauxRequest and execute. The help action
	 * (default) throws a UsageException. Just validate we\'re getting proper XML
	 *
	 * @expectedException UsageException
	 */",
 "/**
	 * Test result of attempted login with an empty username
	 */",
 "/**
	 * @group Broken
	 */",
 "/**
	 * @todo Finish filling me out...what are we trying to test here?
	 */",
 "/**
 * @group Database
 */",
 "/**
	 * Constructor
	 *
	 * @param $file File object we\'re deleting
	 */",
 "/**
	 * Fulfil the request; shows the form or deletes the file,
	 * pending authentication, confirmation, etc.
	 */",
 "/**
	 * Really delete the file
	 *
	 * @param $title Title object
	 * @param File $file: file object
	 * @param $oldimage String: archive name
	 * @param $reason String: reason of the deletion
	 * @param $suppress Boolean: whether to mark all deleted versions as restricted
	 * @param $user User object performing the request
	 */",
 "/**
	 * Show the confirmation form
	 */",
 "/**
	 * Show deletion log fragments pertaining to the current file
	 */",
 "/**
	 * Prepare a message referring to the file being deleted,
	 * showing an appropriate message depending upon whether
	 * it\'s a current file or an old version
	 *
	 * @param $message String: message base
	 * @return String
	 */",
 "/**
	 * Set headers, titles and other bits
	 */",
 "/**
	*Istheprovided`oldimage`valuevalid?
	*
	*@returnbool
	*/",
 "/**
	*Couldwedeletethefilespecified?Ifan`oldimage`
	*valuewasprovided,doesitcorrespondtoan
	*existing,local,oldversionofthisfile?
	*
	*@param$fileFile
	*@param$oldfileFile
	*@param$oldimageFile
	*@returnbool
	*/",
 "/**
	*Preparetheformaction
	*
	*@returnstring
	*/",
 "/**
	*Extractthetimestampoftheoldversion
	*
	*@returnstring
	*/",
 "/**
*Filedeletionuserinterface
*
*@ingroupMedia
*@authorRobChurch<robchur@gmail.com>
*/",
 "/**
	 * @return GenderCache
	 */",
 "/**
	 * Returns the default gender option in this wiki.
	 * @return String
	 */",
 "/**
	 * Returns the gender for given username.
	 * @param $username String: username
	 * @param $caller String: the calling method
	 * @return String
	 */",
 "/**
	 * Wrapper for doQuery that processes raw LinkBatch data.
	 *
	 * @param $data
	 * @param $caller
	 */",
 "/**
	 * Preloads genders for given list of users.
	 * @param $users List|String: usernames
	 * @param $caller String: the calling method
	 */",
 "/**
 * Caches user genders when needed to use correct namespace aliases.
 * @author Niklas Laxstr??m
 * @since 1.18
 */",
 "/**
	 * Get the signleton instance of this class
	 *
	 * @since 1.18
	 * @return MessageCache object
	 */",
 "/**
	 * Destroy the singleton instance
	 *
	 * @since 1.18
	 */",
 "/**
	 * ParserOptions is lazy initialised.
	 *
	 * @return ParserOptions
	 */",
 "/**
	 * Try to load the cache from a local file.
	 * Actual format of the file depends on the $wgLocalMessageCacheSerialized
	 * setting.
	 *
	 * @param $hash String: the hash of contents, to check validity.
	 * @param $code Mixed: Optional language code, see documenation of load().
	 * @return false on failure.
	 */",
 "/**
	 * Save the cache to a local file.
	 */",
 "/**
	*Setthecacheto$cache,ifitisvalid.Otherwisesetthecachetofalse.
	*
	*@returnbool
	*/",
 "/**
	*Loadsmessagesfromcachesorfromdatabaseinthisorder:
	*(1)localmessagecache(if$wgUseLocalMessageCacheisenabled)
	*(2)memcached
	*(3)fromthedatabase.
	*
	*Whensuccesfullyloadingfrom(2)or(3),allhigherlevelcachesare
	*updatedforthenewestversion.
	*
	*NothingisloadedifmembervariablemDisableistrue,eithermanually
	*setbycallingcodeorifmessageloadingfails(isthispossible?).
	*
	*Returnstrueifcacheisalreadypopulatedoritwassuccesfullypopulated,
	*orfalseifpopulatingemptycachefails.AlsoreturnstrueifMessageCache
	*isdisabled.
	*
	*@param$codeString:languagetowhichloadmessages
	*/",
 "/**
	*Loadscacheablemessagesfromthedatabase.Messagesbiggerthan
	*$wgMaxMsgCacheEntrySizeareassignedaspecialvalue,andareloaded
	*on-demandfromthedatabaselater.
	*
	*@param$codeString:languagecode.
	*@returnArray:loadedmessagesforstoringincaches.
	*/",
 "/**
	*Updatescacheasnecessarywhenmessagepageischanged
	*
	*@param$titleString:nameofthepagechanged.
	*@param$textMixed:newcontentsofthepage.
	*/",
 "/**
	*Shortcuttoupdatecaches.
	*
	*@param$cacheArray:cachedmessageswithaversion.
	*@param$memcBool:Wethertoupdateornotmemcache.
	*@param$codeString:Languagecode.
	*@returnFalseonsomekindoferror.
	*/",
 "/**
	*Representsawritelockonthemessageskey
	*
	*@param$keystring
	*
	*@returnBoolean:success
	*/",
 "/**
		*Recordeachmessagerequest,butonlyonceperrequest.
		*Thisinformationisnotusedunless$wgAdaptiveMessageCache
		*isenabled.
		*/",
 "/**
	*Getamessagefromeitherthecontentlanguageortheuserlanguage.
	*
	*@param$keyString:themessagecachekey
	*@param$useDBBoolean:getthemessagefromtheDB,falsetouseonly
	*thelocalisation
	*@param$langcodeString:codeofthelanguagetogetthemessagefor,if
	*itisavalidcodecreatealanguageforthatlanguage,
	*ifitisastringbutnotavalidcodethenmakeabasic
	*languageobject,ifitisafalsebooleanthenusethe
	*currentuserslanguage(asafallbackfortheold
	*parameterfunctionality),orifitisatrueboolean
	*thenusethewikiscontentlanguage(alsoasa
	*fallback).
	*@param$isFullKeyBoolean:specifieswhether$keyisatwopartkey
	*\"msg/lang\".
	 *
	 * @return string|false
	 */",
 "/**
	 * Get a message from the MediaWiki namespace, with caching. The key must
	 * first be converted to two-part lang/msg form if necessary.
	 *
	 * @param $title String: Message cache key with initial uppercase letter.
	 * @param $code String: code denoting the language to try.
	 *
	 * @return string|false
	 */",
 "/**
	 * @param $message string
	 * @param $interface bool
	 * @param $language
	 * @param $title Title
	 * @return string
	 */",
 "/**
	 * @return Parser
	 */",
 "/**
	 * @param $text string
	 * @param $title Title
	 * @param $linestart bool
	 * @param $interface bool
	 * @param $language
	 * @return ParserOutput
	 */",
 "/**
	 * Clear all stored messages. Mainly used after a mass rebuild.
	 */",
 "/**
	 * @param $key
	 * @return array
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * Get all message keys stored in the message cache for a given language.
	 * If $code is the content language code, this will return all message keys
	 * for which MediaWiki:msgkey exists. If $code is another language code, this
	 * will ONLY return message keys for which MediaWiki:msgkey/$code exists.
	 * @param $code string
	 * @return array of message keys (strings)
	 */",
 "/**
 * Message cache
 * Performs various MediaWiki namespace-related functions
 * @ingroup Cache
 */",
 "/** Sindhi (????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Aursani
 */",
 "/**
 * This is a wrapper for APC\'s shared memory functions
 *
 * @ingroup Cache
 */",
 "/** Tibetan (?????????????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Freeyak
 * @author Jason (on bo.wikipedia.org)
 */",
 "/** Veps (Veps??n kel\')
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Andrijko Z.
 * @author Kaganer
 * @author Sura
 * @author Triple-ADHD-AS
 * @author ?????????? ????????????????
 */",
 "/**
 * Display something vaguely comprehensible in the event of a totally unrecoverable error.
 * Does not assume access to *anything*; no globals, no autloader, no database, no localisation.
 * Safe for PHP4 (and putting this here means that WebStart.php and GlobalSettings.php
 * no longer need to be).
 *
 * Calling this function kills execution immediately.
 *
 * @param $type String Which entry point we are protecting. One of:
 *   - index.php
 *   - load.php
 *   - api.php
 *   - cli
 *
 * @note Since we can\'t rely on anything, the minimum PHP versions and MW current
 * version are hardcoded here
 */",
 "/**
	 * Usually aborts on failure
	 */",
 "/**
	 * Closes a database connection, if it is open
	 * Returns success, true if already closed
	 */",
 "/**
	 * This must be called after nextSequenceVal
	 */",
 "/**
	 * SELECT wrapper
	 *
	 * @param $table   Mixed: array or string, table name(s) (prefix auto-added)
	 * @param $vars    Mixed: array or string, field name(s) to be retrieved
	 * @param $conds   Mixed: array or string, condition(s) for WHERE
	 * @param $fname   String: calling function name (use __METHOD__) for logs/profiling
	 * @param $options Array: associative array of options (e.g. array(\'GROUP BY\' => \'page_title\')),
	 *                 see Database::makeSelectOptions code for list of supported stuff
	 * @param $join_conds Array: Associative array of table join conditions (optional)
	 *						   (e.g. array( \'page\' => array(\'LEFT JOIN\',\'page_latest=rev_id\') )
	 * @return Mixed: database result resource (feed to Database::fetchObject or whatever), or false on failure
	 */",
 "/**
	 * SELECT wrapper
	 *
	 * @param $table   Mixed:  Array or string, table name(s) (prefix auto-added)
	 * @param $vars    Mixed:  Array or string, field name(s) to be retrieved
	 * @param $conds   Mixed:  Array or string, condition(s) for WHERE
	 * @param $fname   String: Calling function name (use __METHOD__) for logs/profiling
	 * @param $options Array:  Associative array of options (e.g. array(\'GROUP BY\' => \'page_title\')),
	 *                 see Database::makeSelectOptions code for list of supported stuff
	 * @param $join_conds Array: Associative array of table join conditions (optional)
	 *                    (e.g. array( \'page\' => array(\'LEFT JOIN\',\'page_latest=rev_id\') )
	 * @return string, the SQL text
	 */",
 "/**
	 * Estimate rows in dataset
	 * Returns estimated count, based on SHOWPLAN_ALL output
	 * This is not necessarily an accurate estimate, so use sparingly
	 * Returns -1 if count cannot be found
	 * Takes same arguments as Database::select()
	 */",
 "/**
	 * Returns information about an index
	 * If errors are explicitly ignored, returns NULL on failure
	 */",
 "/**
	 * INSERT wrapper, inserts an array into a table
	 *
	 * $arrToInsert may be a single associative array, or an array of these with numeric keys, for
	 * multi-row insert.
	 *
	 * Usually aborts on failure
	 * If errors are explicitly ignored, returns success
	 */",
 "/**
	 * INSERT SELECT wrapper
	 * $varMap must be an associative array of the form array( \'dest1\' => \'source1\', ...)
	 * Source items may be literals rather than field names, but strings should be quoted with Database::addQuotes()
	 * $conds may be \"*\" to copy the whole table
	 * srcTable may be an array of tables.
	 */",
 "/**
	 * Return the next in a sequence, save the value for retrieval via insertId()
	 */",
 "/**
	 * Return the current value of a sequence. Assumes it has ben nextval\'ed in this session.
	 */",
 "/**
	 * Construct a LIMIT query with optional offset
	 * This is used for query pages
	 * $sql string SQL query we will append the limit too
	 * $limit integer the SQL limit
	 * $offset integer the SQL offset (default false)
	 */",
 "/**
	 * @return string wikitext of a link to the server software\'s web site
	 */",
 "/**
	 * @return string Version information from the database
	 */",
 "/**
	 * Query whether a given column exists in the mediawiki schema
	 */",
 "/**
	 * Begin a transaction, committing any previously open transaction
	 */",
 "/**
	 * End a transaction
	 */",
 "/**
	 * Rollback a transaction.
	 * No-op on non-transactional databases.
	 */",
 "/**
	 * Escapes a identifier for use inm SQL.
	 * Throws an exception if it is invalid.
	 * Reference: http://msdn.microsoft.com/en-us/library/aa224033%28v=SQL.80%29.aspx
	 */",
 "/**
	 * Initial setup.
	 * Precondition: This object is connected as the superuser.
	 * Creates the database, schema, user and login.
	 */",
 "/**
	 * @private
	 */",
 "/**
	 * @private
	 *
	 * @param $options Array: an associative array of options to be turned into
	 *                 an SQL query, valid keys are listed in the function.
	 * @return Array
	 */",
 "/**
	 * Get the type of the DBMS, as it appears in $wgDBtype.
	 */",
 "/**
	 * Since MSSQL doesn\'t recognize the infinity keyword, set date manually.
	 * @todo Remove magic date
	 */",
 "/**
 * @ingroup Database
 */",
 "/**
 * Utility class.
 *
 * @ingroup Database
 */",
 "/**
 * The MSSQL PHP driver doesn\'t support sqlsrv_num_rows, so we recall all rows into an array and maintain our
 * own cursor index into that array...This is similar to the way the Oracle driver handles this same issue
 *
 * @ingroup Database
 */",
 "/**
	 * Use singular form for zero
	 *
	 * @param $count int
	 * @param $forms array
	 *
	 * @return string
	 */",
 "/**
 * Amharic (????????????)
 *
 * @ingroup Language
 */",
 "/**
  * @license http://www.gnu.org/copyleft/fdl.html GNU Free Documentation License
  * @license http://www.gnu.org/copyleft/gpl.html GNU General Public License
  *
  * @see http://meta.wikimedia.org/w/index.php?title=LanguageNn.php&action=history
  * @see http://nn.wikipedia.org/w/index.php?title=Brukar:Dittaeva/LanguageNn.php&action=history
  */",
 "/**
 * This test suite runs unit tests registered by extensions.
 * See http://www.mediawiki.org/wiki/Manual:Hooks/UnitTestsList for details of how to register your tests.
 */",
 "/**
 * Needed to avoid warnings like \'No tests found in class \"ExtensionsTestSuite\".\'
 * when no extensions with tests are used.
 */",
 "/**
	 * Constructor.
	 * For constructor parameters, see the documentation in DefaultSettings.php
	 * for $wgLocalisationCacheConf.
	 *
	 * @param $conf Array
	 */",
 "/**
	 * Returns true if the given key is mergeable, that is, if it is an associative
	 * array which can be merged through a fallback sequence.
	 * @param $key
	 * @return bool
	 */",
 "/**
	 * Get a cache item.
	 *
	 * Warning: this may be slow for split items (messages), since it will
	 * need to fetch all of the subitems from the cache individually.
	 * @param $code
	 * @param $key
	 * @return mixed
	 */",
 "/**
	 * Get a subitem, for instance a single message for a given language.
	 * @param $code
	 * @param $key
	 * @param $subkey
	 * @return null
	 */",
 "/**
	 * Get the list of subitem keys for a given item.
	 *
	 * This is faster than array_keys($lc->getItem(...)) for the items listed in
	 * self::$splitKeys.
	 *
	 * Will return null if the item is not found, or false if the item is not an
	 * array.
	 * @param $code
	 * @param $key
	 * @return bool|null|string
	 */",
 "/**
	 * Load an item into the cache.
	 * @param $code
	 * @param $key
	 */",
 "/**
	 * Load a subitem into the cache
	 * @param $code
	 * @param $key
	 * @param $subkey
	 * @return
	 */",
 "/**
	 * Returns true if the cache identified by $code is missing or expired.
	 */",
 "/**
	 * Initialise a language in this object. Rebuild the cache if necessary.
	 * @param $code
	 */",
 "/**
	 * Create a fallback from one language to another, without creating a
	 * complete persistent cache.
	 * @param $primaryCode
	 * @param $fallbackCode
	 */",
 "/**
	 * Read a PHP file containing localisation data.
	 * @param $_fileName
	 * @param $_fileType
	 * @return array
	 */",
 "/**
	 * Merge two localisation values, a primary and a fallback, overwriting the
	 * primary value in place.
	 * @param $key
	 * @param $value
	 * @param $fallbackValue
	 */",
 "/**
	 * @param $value
	 * @param $fallbackValue
	 */",
 "/**
	 * Given an array mapping language code to localisation value, such as is
	 * found in extension *.i18n.php files, iterate through a fallback sequence
	 * to merge the given data with an existing primary value.
	 *
	 * Returns true if any data from the extension array was used, false
	 * otherwise.
	 * @param $codeSequence
	 * @param $key
	 * @param $value
	 * @param $fallbackValue
	 * @return bool
	 */",
 "/**
	 * Load localisation data for a given language for both core and extensions
	 * and save it to the persistent cache store and the process cache
	 * @param $code
	 */",
 "/**
	 * Build the preload item from the given pre-cache data.
	 *
	 * The preload item will be loaded automatically, improving performance
	 * for the commonly-requested items it contains.
	 * @param $data
	 * @return array
	 */",
 "/**
	 * Unload the data for a given language from the object cache.
	 * Reduces memory usage.
	 * @param $code
	 */",
 "/**
	 * Unload all data
	 */",
 "/**
	 * Disable the storage backend
	 */",
 "/**
 * Class for caching the contents of localisation files, Messages*.php
 * and *.i18n.php.
 *
 * An instance of this class is available using Language::getLocalisationCache().
 *
 * The values retrieved from here are merged, containing items from extension
 * files, core messages files and the language fallback sequence (e.g. zh-cn ->
 * zh-hans -> en ). Some common errors are corrected, for example namespace
 * names with spaces instead of underscores, but heavyweight processing, such
 * as grammatical transformation, is done by the caller.
 */",
 "/**
	 * Get a value.
	 * @param $code Language code
	 * @param $key Cache key
	 */",
 "/**
	 * Start a write transaction.
	 * @param $code Language code
	 */",
 "/**
	 * Finish a write transaction.
	 */",
 "/**
	 * Set a key to a given value. startWrite() must be called before this
	 * is called, and finishWrite() must be called afterwards.
	 * @param $key
	 * @param $value
	 */",
 "/**
 * Interface for the persistence layer of LocalisationCache.
 *
 * The persistence layer is two-level hierarchical cache. The first level
 * is the language, the second level is the item or subitem.
 *
 * Since the data for a whole language is rebuilt in one operation, it needs
 * to have a fast and atomic method for deleting or replacing all of the
 * current data for a given language. The interface reflects this bulk update
 * operation. Callers writing to the cache must first call startWrite(), then
 * will call set() a couple of thousand times, then will call finishWrite()
 * to commit the operation. When finishWrite() is called, the cache is
 * expected to delete all data previously stored for that language.
 *
 * The values stored are PHP variables suitable for serialize(). Implementations
 * of LCStore are responsible for serializing and unserializing.
 */",
 "/**
 * LCStore implementation which uses PHP accelerator to store data.
 * This will work if one of XCache, WinCache or APC cacher is configured.
 * (See ObjectCache.php)
 */",
 "/**
 * LCStore implementation which uses the standard DB functions to store data.
 * This will work on any MediaWiki installation.
 */",
 "/**
 * LCStore implementation which stores data as a collection of CDB files in the
 * directory given by $wgCacheDirectory. If $wgCacheDirectory is not set, this
 * will throw an exception.
 *
 * Profiling indicates that on Linux, this implementation outperforms MySQL if
 * the directory is on a local filesystem and there is ample kernel cache
 * space. The performance advantage is greater when the DBA extension is
 * available than it is with the PHP port.
 *
 * See Cdb.php and http://cr.yp.to/cdb.html
 */",
 "/**
 * Null store backend, used to avoid DB errors during install
 */",
 "/**
	 * @param $fileName
	 * @param $fileType
	 * @return array|mixed
	 */",
 "/**
	 * @param $code
	 * @param $key
	 * @return mixed
	 */",
 "/**
	 * @param $code
	 * @param $key
	 * @param $subkey
	 * @return
	 */",
 "/**
	 * @param $code
	 */",
 "/**
	 * @param $code
	 */",
 "/**
	 * Unload cached languages until there are less than $this->maxLoadedLangs
	 */",
 "/**
 * A localisation cache optimised for loading large amounts of data for many
 * languages. Used by rebuildLocalisationCache.php.
 */",
 "/** Jamaican Creole English (Patois)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Hazard-SJ
 * @author Ukabia
 * @author Yocahuna
 */",
 "/** Piedmontese (Piemont??is)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Borich??t
 * @author B??rto \'d S??ra
 * @author Dragon??t
 * @author Kaganer
 * @author MaxSem
 * @author SabineCretella
 * @author Teak
 * @author The Evil IP address
 * @author ??var Arnfj??r?? Bjarmason <avarab@gmail.com>, Jens Frank
 * @author ???????? ????????????????
 */",
 "/** Aromanian (Arm??neashce)
 *
 * ISO 639-3 code \'rup\' should be used. This is code is maintained for backward
 * compatilibity.
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 */",
 "/**
	 * Constructor.
	 *
	 * @param $global String: name of the global variable.
	 * @param $class String: name of the class of the real object.
	 * @param $params Array: parameters to pass to contructor of the real
	 *               object.
	 */",
 "/**
	 * Returns a bool value whetever $obj is a stub object. Can be used to break
	 * a infinite loop when unstubbing an object.
	 *
	 * @param $obj Object to check.
	 * @return Boolean: true if $obj is not an instance of StubObject class.
	 */",
 "/**
	 * Function called if any function exists with that name in this object.
	 * It is used to unstub the object. Only used internally, PHP will call
	 * self::__call() function and that function will call this function.
	 * This function will also call the function with the same name in the real
	 * object.
	 *
	 * @param $name String: name of the function called
	 * @param $args Array: arguments
	 */",
 "/**
	 * Create a new object to replace this stub object.
	 * @return object
	 */",
 "/**
	 * Function called by PHP if no function with that name exists in this
	 * object.
	 *
	 * @param $name String: name of the function called
	 * @param $args Array: arguments
	 */",
 "/**
	 * This function creates a new object of the real class and replace it in
	 * the global variable.
	 * This is public, for the convenience of external callers wishing to access
	 * properties, e.g. eval.php
	 *
	 * @param $name String: name of the method called in this object.
	 * @param $level Integer: level to go in the stact trace to get the function
	 *               who called this function.
	 */",
 "/**
 * Class to implement stub globals, which are globals that delay loading the
 * their associated module code by deferring initialisation until the first
 * method call.
 *
 * Note on unstub loops:
 *
 * Unstub loops (infinite recursion) sometimes occur when a constructor calls
 * another function, and the other function calls some method of the stub. The
 * best way to avoid this is to make constructors as lightweight as possible,
 * deferring any initialisation which depends on other modules. As a last
 * resort, you can use StubObject::isRealObject() to break the loop, but as a
 * general rule, the stub object mechanism should be transparent, and code
 * which refers to it should be kept to a minimum.
 */",
 "/**
	 * @return Language
	 */",
 "/**
 * Stub object for the content language of this wiki. This object have to be in
 * $wgContLang global.
 *
 * @deprecated since 1.18
 */",
 "/**
	 * @return Language
	 */",
 "/**
 * Stub object for the user language. It depends of the user preferences and
 * \"uselang\" parameter that can be passed to index.php. This object have to be
 * in $wgLang global.
 */",
 "/**
 * Maintenance script to clean up after incomplete user renames
 * Sometimes user edits are left lying around under the old name,
 * check for that and assign them to the new username
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @ingroup Maintenance
 * @author Ariel Glenn <ariel@wikimedia.org>
 */",
 "/**
	 * @param $olduser User
	 * @param $newuser User
	 */",
 "/**
	 * @param $olduser User
	 * @param $newuser User
	 */",
 "/**
	 * @param $olduser User
	 * @param $newuser User
	 * @param $uid
	 */",
 "/**
	 * @param $table
	 * @param $usernamefield
	 * @param $useridfield
	 * @param $timestampfield
	 * @param $olduser User
	 * @param $newuser User
	 * @param $uid
	 * @return int
	 */",
 "/**
	 * Temporary hack for the issue described at
	 * http://permalink.gmane.org/gmane.science.linguistics.wikipedia.technical/46396
	 * Convert Unicode 5.0 style Malayalam input to Unicode 5.1. Similar to
	 * bug 9413. Also fixes miscellaneous problems due to mishandling of ZWJ,
	 * e.g. bug 11162.
	 *
	 * @todo FIXME: This is language-specific for now only to avoid the negative
	 * performance impact of enabling it for all languages.
	 *
	 * @param $s string
	 *
	 * @return string
	 */",
 "/**
 * Malayalam (??????????????????)
 *
 * @ingroup Language
 */",
 "/** Purge URL coming from stdin */",
 "/** Purge a namespace given by --namespace */",
 "/**
	 * Helper to purge an array of $urls
	 * @param $urls array List of URLS to purge from squids
	 */",
 "/**
	 * Test if having conflicting metadata values from different
	 * types of metadata, that the right one takes precedence.
	 *
	 * Basically the file has IPTC and XMP metadata, the
	 * IPTC should override the XMP, except for the multilingual
	 * translation (to en) where XMP should win.
	 */",
 "/**
	 * Test for jpeg comments are being handled by
	 * BitmapMetadataHandler correctly.
	 *
	 * There\'s more extensive tests of comment extraction in
	 * JpegMetadataExtractorTests.php
	 */",
 "/**
	 * Make sure a bad iptc block doesn\'t stop the other metadata
	 * from being extracted.
	 */",
 "/**
	 * XMP data should take priority over iptc data
	 * when hash has been updated, but not when
	 * the hash is wrong.
	 */",
 "/**
	 * Format a row
	 * @param $text  String: description of the row
	 * @param $number  Float: a statistical number
	 * @param $trExtraParams  Array: params to table row, see Html::elememt
	 * @param $descMsg  String: message key
	 * @param $descMsgParam  Array: message params
	 * @return string table row in HTML format
	 */",
 "/**
	 * Each of these methods is pretty self-explanatory, get a particular
	 * row for the table of statistics
	 * @return string
	 */",
 "/**
 * Special page lists various statistics, including the contents of
 * `site_stats`, plus page view details if enabled
 *
 * @ingroup SpecialPage
 */",
 "/** Spanish (Espa??ol)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Aleator
 * @author Alhen
 * @author Alpertron
 * @author Alvaro qc
 * @author Armando-Martin
 * @author Asc??nder
 * @author Baiji
 * @author Bea.miau
 * @author Bengoa
 * @author Bernardom
 * @author Better
 * @author BicScope
 * @author Boivie
 * @author Candalua
 * @author Capmo
 * @author Cerealito
 * @author Clerc
 * @author Crazymadlover
 * @author Cvmontuy
 * @author Danke7
 * @author David0811
 * @author Dferg
 * @author Diego Grez
 * @author Dmcdevit
 * @author Drini
 * @author Dvortygirl
 * @author Fibonacci
 * @author Fitoschido
 * @author Fluence
 * @author Gustronico
 * @author Hercule
 * @author Icvav
 * @author Imre
 * @author Jatrobat
 * @author Jens Liebenau
 * @author Jurock
 * @author Kaganer
 * @author Lin linao
 * @author Linterweb
 * @author Locos epraix
 * @author Mahadeva
 * @author Manuelt15
 * @author McDutchie
 * @author Muro de Aguas
 * @author Omnipaedista
 * @author Orgullomoore
 * @author Paucabot
 * @author PerroVerd
 * @author Pertile
 * @author Piolinfax
 * @author Platonides
 * @author PoLuX124
 * @author Remember the dot
 * @author Richard Wolf VI
 * @author Sanbec
 * @author Spacebirdy
 * @author Technorum
 * @author The Evil IP address
 * @author Titoxd
 * @author Toniher
 * @author Translationista
 * @author Urhixidur
 * @author VegaDark
 * @author Vivaelcelta
 * @author Wilfredor
 * @author XalD
 * @author XanaG
 * @author ???????? ????????????????
 */",
 "/** Aragonese (Aragon??s)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Juanpabl
 * @author Kaganer
 * @author Malafaya
 * @author Reedy
 * @author Remember the dot
 * @author The Evil IP address
 * @author Urhixidur
 * @author Willtron
 * @author ???????? ????????????????
 */",
 "/**
 * Begin profiling of a function
 * @param $functionname String: name of the function we will profile
 */",
 "/**
 * Stop profiling of a function
 * @param $functionname String: name of the function we have profiled
 */",
 "/**
	 * Singleton
	 * @return Profiler
	 */",
 "/**
	 * Set the profiler to a specific profiler instance. Mostly for dumpHTML
	 * @param $p Profiler object
	 */",
 "/**
	 * Return whether this a stub profiler
	 *
	 * @return Boolean
	 */",
 "/**
	 * Called by wfProfieIn()
	 *
	 * @param $functionname String
	 */",
 "/**
	 * Called by wfProfieOut()
	 *
	 * @param $functionname String
	 */",
 "/**
	 * Close opened profiling sections
	 */",
 "/**
	 * Mark this call as templated or not
	 *
	 * @param $t Boolean
	 */",
 "/**
	 * Returns a profiling output to be stored in debug file
	 *
	 * @return String
	 */",
 "/**
	 * Returns a tree of function call instead of a list of functions
	 */",
 "/**
	 * Recursive function the format the current profiling array into a tree
	 *
	 * @param $stack profiling array
	 */",
 "/**
	 * Callback to get a formatted line for the call tree
	 */",
 "/**
	 * Returns a list of profiled functions.
	 *
	 * @return string
	 */",
 "/**
	 * Dummy calls to wfProfileIn/wfProfileOut to calculate its overhead
	 */",
 "/**
	 * Counts the number of profiled function calls sitting under
	 * the given point in the call graph. Not the most efficient algo.
	 *
	 * @param $stack Array:
	 * @param $start Integer:
	 * @return Integer
	 * @private
	 */",
 "/**
	 * Log the whole profiling data into the database.
	 */",
 "/**
	 * Get the function name of the current profiling section
	 */",
 "/**
	 * Add an entry in the debug log file
	 *
	 * @param $s String to output
	 */",
 "/**
 * @ingroup Profiler
 * @todo document
 */",
 "/** V??ro
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 * @comment Deprecated language code. Falls back to \'vro\'.
 */",
 "/**
 * API module to allow users to log out of the wiki. API equivalent of
 * Special:Userlogout.
 *
 * @ingroup API
 */",
 "/**
 * Support functions for cleaning up redundant text records
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @file
 * @ingroup Maintenance
 * @author Rob Church <robchur@gmail.com>
 */",
 "/** Achinese (Ac??h)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Abi Azkia
 * @author Andri.h
 * @author Ezagren
 * @author Fadli Idris
 * @author Meno25
 * @author Si Gam Ac??h
 */",
 "/**
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @file
 * @ingroup Maintenance
 * @see wfWaitForSlaves()
 */",
 "/** Mirandese (Mirand??s)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Alchimista
 * @author Cec??lio
 * @author MCruz
 * @author Malafaya
 * @author Romaine
 * @author Urhixidur
 */",
 "/**
 * @group Gadgets
 */",
 "/**
	 * Get the base file cache directory
	 * @return string
	 */",
 "/**
	 * Get the base cache directory (not specific to this file)
	 * @return string
	 */",
 "/**
	 * Get the path to the cache file
	 * @return string
	 */",
 "/**
	 * Check if the cache file exists
	 * @return bool
	 */",
 "/**
	 * Get the last-modified timestamp of the cache file
	 * @return string|false TS_MW timestamp
	 */",
 "/**
	 * Check if up to date cache file exists
	 * @param $timestamp string MW_TS timestamp
	 *
	 * @return bool
	 */",
 "/**
	 * Check if the cache is gzipped
	 * @return bool
	 */",
 "/**
	 * Get the uncompressed text from the cache
	 * @return string
	 */",
 "/**
	 * Save and compress text to the cache
	 * @return string compressed text
	 */",
 "/**
	 * Clear the cache for this page
	 * @return void
	 */",
 "/**
	 * Create parent directors of $this->cachePath()
	 * @return void
	 */",
 "/**
	 * Get the cache type subdirectory (with trailing slash)
	 * An extending class could use that method to alter the type -> directory
	 * mapping. @see HTMLFileCache::typeSubdirectory() for an example.
	 *
	 * @return string
	 */",
 "/**
	 * Return relative multi-level hash subdirectory (with trailing slash)
	 * or the empty string if not $wgFileCacheDepth
	 * @return string
	 */",
 "/**
	 * Roughly increments the cache misses in the last hour by unique visitors
	 * @param $request WebRequest
	 * @return void
	 */",
 "/**
	 * Roughly gets the cache misses in the last hour by unique visitors
	 * @return int
	 */",
 "/**
	 * @return string
	 */",
 "/**
 * Contain the FileCacheBase class
 * @file
 * @ingroup Cache
 */",
 "/**
	 * Constructor
	 */",
 "/**
	 * Show the special page
	 *
	 * @param $par Mixed: parameter passed to the page or null
	 */",
 "/**
 * Use this special page to get a list of the MediaWiki system messages.
 *
 * @file
 * @ingroup SpecialPage
 */",
 "/**
	 * Determine which of the MediaWiki and MediaWiki_talk namespace pages exist.
	 * Returns array( \'pages\' => ..., \'talks\' => ... ), where the subarrays have
	 * an entry for each existing page, with the key being the message name and
	 * value arbitrary.
	 *
	 * @param array $messageNames
	 * @param string $langcode What language code
	 * @param bool $foreign Whether the $langcode is not the content language
	 * @return array: a \'pages\' and \'talks\' array with the keys of existing pages
	 */",
 "/**
	 *  This function normally does a database query to get the results; we need
	 * to make a pretend result using a FakeResultWrapper.
	 */",
 "/**
 * Use TablePager for prettified output. We have to pretend that we\'re
 * getting data from a table when in fact not all of it comes from the database.
 */",
 "/**
	 * @param $prefix string
	 */",
 "/**
	 * Add a nowiki strip item
	 * @param $marker
	 * @param $value
	 */",
 "/**
	 * @param $marker
	 * @param $value
	 */",
 "/**
	 * @throws MWException
	 * @param $type
	 * @param $marker
	 * @param $value
	 */",
 "/**
	 * @param $text
	 * @return mixed
	 */",
 "/**
	 * @param $text
	 * @return mixed
	 */",
 "/**
	 * @param  $text
	 * @return mixed
	 */",
 "/**
	 * @param $type
	 * @param $text
	 * @return mixed
	 */",
 "/**
	 * @param $m array
	 * @return array
	 */",
 "/**
	 * Get a StripState object which is sufficient to unstrip the given text. 
	 * It will contain the minimum subset of strip items necessary.
	 *
	 * @param $text string
	 *
	 * @return StripState
	 */",
 "/**
	 * Merge another StripState object into this one. The strip marker keys
	 * will not be preserved. The strings in the $texts array will have their
	 * strip markers rewritten, the resulting array of strings will be returned.
	 *
	 * @param $otherState StripState
	 * @param $texts Array
	 * @return Array
	 */",
 "/**
	 * @param $m
	 * @return string
	 */",
 "/**
	 * Remove any strip markers found in the given text.
	 *
	 * @param $text Input string
	 * @return string
	 */",
 "/**
 * @todo document, briefly.
 * @ingroup Parser
 */",
 "/**
	 * Return microtime() as a float
	 * @return float
	 */",
 "/**
 * @ingroup Dump Maintenance
 */",
 "/**
	 * @param $name String
	 * @param $class String: name of output filter plugin class
	 */",
 "/**
	 * @param $name String
	 * @param $class String: name of filter plugin class
	 */",
 "/**
	 * Load a plugin and register it
	 *
	 * @param $class String: name of plugin class; must have a static \'register\'
	 *               method that takes a BackupDumper as a parameter.
	 * @param $file String: full or relative path to the PHP file to load, or empty
	 */",
 "/**
	 * @param $args Array
	 * @return Array
	 */",
 "/**
	 * Initialise starting time and maximum revision count.
	 * We\'ll make ETA calculations based an progress, assuming relatively
	 * constant per-revision rate.
	 * @param $history Integer: WikiExporter::CURRENT or WikiExporter::FULL
	 */",
 "/**
	 * @todo Fixme: the --server parameter is currently not respected, as it
	 * doesn\'t seem terribly easy to ask the load balancer for a particular
	 * connection by name.
	 * @return DatabaseBase
	 */",
 "/**
 * @ingroup Dump Maintenance
 */",
 "/**
	 * Validate target User
	 *
	 * @param $target String: target user name
	 * @return User object on success or a string on error
	 */",
 "/**
	 * Check whether a user is allowed to send email
	 *
	 * @param $user User object
	 * @param $editToken String: edit token
	 * @return null on success or string on error
	 */",
 "/**
	 * Form to ask for target user name.
	 *
	 * @param $name String: user name submitted.
	 * @return String: form asking for user name.
	 */",
 "/**
	 * Really send a mail. Permissions should have been checked using
	 * getPermissionsError(). It is probably also a good
	 * idea to check the edit token and ping limiter in advance.
	 *
	 * @return Mixed: Status object, or potentially a String on error
	 * or maybe even true on success if anything uses the EmailUser hook.
	 */",
 "/**
 * A special page that allows users to send e-mails to other users
 *
 * @ingroup SpecialPage
 */",
 "/**
 * A special page called by proxy_check.php to block open proxies
 *
 * @ingroup SpecialPage
 */",
 "/**
	 * Do the actual link refreshing.
	 * @param $start int Page_id to start from
	 * @param $newOnly bool Only do pages with 1 edit
	 * @param $maxLag int Max DB replication lag
	 * @param $end int Page_id to stop at
	 * @param $redirectsOnly bool Only fix redirects
	 * @param $oldRedirectsOnly bool Only fix redirects without redirect entries
	 */",
 "/**
	 * Update the redirect entry for a given page
	 * @param $id int The page_id of the redirect
	 */",
 "/**
	 * Run LinksUpdate for all links on a given page_id
	 * @param $id int The page_id
	 */",
 "/**
	 * Removes non-existing links from pages from pagelinks, imagelinks,
	 * categorylinks, templatelinks, externallinks, interwikilinks, langlinks and redirect tables.
	 *
	 * @param $maxLag
	 * @param $batchSize The size of deletion batches
	 *
	 * @author Merlijn van Deen <valhallasw@arctus.nl>
	 */",
 "/**
 * Implements Special:Ancientpages
 *
 * @ingroup SpecialPage
 */",
 "/**
 * MediaWiki parser test suite
 *
 * Copyright ?? 2004 Brion Vibber <brion@pobox.com>
 * http://www.mediawiki.org/
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @file
 * @ingroup Testing
 */",
 "/**
	 * Print the results, callback for $db->sourceStream()
	 * @param $res ResultWrapper The results object
	 * @param $db DatabaseBase object
	 */",
 "/**
	 * @return int DB_TYPE constant
	 */",
 "/**
 * Selenium server manager
 *
 * @file
 * @ingroup Testing
 * Copyright (C) 2010 Nadeesha Weerasinghe <nadeesha@calcey.com>
 * http://www.calcey.com/ 
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @addtogroup Testing
 *
 */",
 "/**
 * A Special Page extension to rename users, runnable by users with renameuser
 * rights
 *
 * @file
 * @ingroup Extensions
 * @author ??var Arnfj??r?? Bjarmason <avarab@gmail.com>
 * @copyright Copyright ?? 2005, ??var Arnfj??r?? Bjarmason
 * @license http://www.gnu.org/copyleft/gpl.html GNU General Public License 2.0 or later
 */",
 "/**
 * @param $type
 * @param $action
 * @param $title Title
 * @param $skin Skin
 * @param $params array
 * @param $filterWikilinks bool
 * @return String
 */",
 "/**
 * Show a log if the user has been renamed and point to the new username.
 * Don\'t show the log if the $oldUserName exists as a user.
 *
 * @param $article Article
 */",
 "/**
 * @param $id
 * @param $nt Title
 * @param $tools
 * @return bool
 */",
 "/** @dataProvider providerPlural */",
 "/** Tests for MediaWiki languages/classes/LanguageTi.php */",
 "/**
	 * @param $row
	 * @return RecentChange
	 */",
 "/**
	 * @param $row
	 * @return RecentChange
	 */",
 "/**
	 * Obtain the recent change with a given rc_id value
	 *
	 * @param $rcid Int rc_id value to retrieve
	 * @return RecentChange
	 */",
 "/**
	 * Find the first recent change matching some specific conditions
	 *
	 * @param $conds Array of conditions
	 * @param $fname Mixed: override the method name in profiling/logs
	 * @return RecentChange
	 */",
 "/**
	 * @param $attribs array
	 */",
 "/**
	 * @param $extra array
	 */",
 "/**
	 *
	 * @return Title
	 */",
 "/**
	 * @return bool|\Title
	 */",
 "/**
	 * Writes the data in this object to the database
	 * @param $noudp bool
	 */",
 "/**
	 * Send some text to UDP.
	 * @see RecentChange::cleanupForIRC
	 * @param $line String: text to send
	 * @param $address String: defaults to $wgRC2UDPAddress.
	 * @param $prefix String: defaults to $wgRC2UDPPrefix.
	 * @param $port Int: defaults to $wgRC2UDPPort. (Since 1.17)
	 * @return Boolean: success
	 */",
 "/**
	 * Remove newlines, carriage returns and decode html entites
	 * @param $text String
	 * @return String
	 */",
 "/**
	 * Mark a given change as patrolled
	 *
	 * @param $change Mixed: RecentChange or corresponding rc_id
	 * @param $auto Boolean: for automatic patrol
	 * @return Array See doMarkPatrolled(), or null if $change is not an existing rc_id
	 */",
 "/**
	 * Mark this RecentChange as patrolled
	 *
	 * NOTE: Can also return \'rcpatroldisabled\', \'hookaborted\' and \'markedaspatrollederror-noautopatrol\' as errors
	 * @param $user User object doing the action
	 * @param $auto Boolean: for automatic patrol
	 * @return array of permissions errors, see Title::getUserPermissionsErrors()
	 */",
 "/**
	 * Mark this RecentChange patrolled, without error checking
	 * @return Integer: number of affected rows
	 */",
 "/**
	 * Makes an entry in the database corresponding to an edit
	 *
	 * @param $timestamp
	 * @param $title Title
	 * @param $minor
	 * @param $user User
	 * @param $comment
	 * @param $oldId
	 * @param $lastTimestamp
	 * @param $bot
	 * @param $ip string
	 * @param $oldSize int
	 * @param $newSize int
	 * @param $newId int
	 * @param $patrol int
	 * @return RecentChange
	 */",
 "/**
	 * Makes an entry in the database corresponding to page creation
	 * Note: the title object must be loaded with the new id using resetArticleID()
	 * @todo Document parameters and return
	 *
	 * @param $timestamp
	 * @param $title Title
	 * @param $minor
	 * @param $user User
	 * @param $comment
	 * @param $bot
	 * @param $ip string
	 * @param $size int
	 * @param $newId int
	 * @param $patrol int
	 * @return RecentChange
	 */",
 "/**
	 * @param $timestamp
	 * @param $title
	 * @param $user
	 * @param $actionComment
	 * @param $ip string
	 * @param $type
	 * @param $action
	 * @param $target
	 * @param $logComment
	 * @param $params
	 * @param $newId int
	 * @return bool
	 */",
 "/**
	 * @param $timestamp
	 * @param $title Title
	 * @param $user User
	 * @param $actionComment
	 * @param $ip string
	 * @param $type
	 * @param $action
	 * @param $target Title
	 * @param $logComment
	 * @param $params
	 * @param $newId int
	 * @return RecentChange
	 */",
 "/**
	 * Initialises the members of this object from a mysql row object
	 *
	 * @param $row
	 */",
 "/**
	 * Makes a pseudo-RC entry from a cur row
	 *
	 * @param $row
	 */",
 "/**
	 * Get an attribute value
	 *
	 * @param $name String Attribute name
	 * @return mixed
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * Gets the end part of the diff URL associated with this object
	 * Blank if no diff link should be displayed
	 * @param $forceCur
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * Returns the change size (HTML).
	 * The lengths can be given optionally.
	 * @param $old int
	 * @param $new int
	 * @return string
	 */",
 "/**
 * Utility class for creating new RC entries
 *
 * mAttribs:
 *  rc_id           id of the row in the recentchanges table
 *  rc_timestamp    time the entry was made
 *  rc_cur_time     timestamp on the cur row
 *  rc_namespace    namespace #
 *  rc_title        non-prefixed db key
 *  rc_type         is new entry, used to determine whether updating is necessary
 *  rc_minor        is minor
 *  rc_cur_id       page_id of associated page entry
 *  rc_user         user id who made the entry
 *  rc_user_text    user name who made the entry
 *  rc_comment      edit summary
 *  rc_this_oldid   rev_id associated with this entry (or zero)
 *  rc_last_oldid   rev_id associated with the entry before this one (or zero)
 *  rc_bot          is bot, hidden
 *  rc_ip           IP address of the user in dotted quad notation
 *  rc_new          obsolete, use rc_type==RC_NEW
 *  rc_patrolled    boolean whether or not someone has marked this edit as patrolled
 *  rc_old_len      integer byte length of the text before the edit
 *  rc_new_len      the same after the edit
 *  rc_deleted      partial deletion
 *  rc_logid        the log_id value for this log entry (or zero)
 *  rc_log_type     the log type (or null)
 *  rc_log_action   the log action (or null)
 *  rc_params       log params
 *
 * mExtra:
 *  prefixedDBkey   prefixed db key, used by external app via msg queue
 *  lastTimestamp   timestamp of previous entry, used in WHERE clause during update
 *  lang            the interwiki prefix, automatically set in save()
 *  oldSize         text size before the change
 *  newSize         text size after the change
 *
 * temporary:       not stored in the database
 *      notificationtimestamp
 *      numberofWatchingusers
 *
 * @todo document functions and variables
 */",
 "/**
	 * Memcache initializer
	 *
	 * @param $args Array Associative array of settings
	 *
	 * @return  mixed
	 */",
 "/**
	 * Adds a key/value to the memcache server if one isn\'t already set with
	 * that key
	 *
	 * @param $key String: key to set with data
	 * @param $val Mixed: value to store
	 * @param $exp Integer: (optional) Expiration time. This can be a number of seconds
	 * to cache for (up to 30 days inclusive).  Any timespans of 30 days + 1 second or
	 * longer must be the timestamp of the time at which the mapping should expire. It
	 * is safe to use timestamps in all cases, regardless of exipration
	 * eg: strtotime(\"+3 hour\")
	 *
	 * @return Boolean
	 */",
 "/**
	 * Decrease a value stored on the memcache server
	 *
	 * @param $key String: key to decrease
	 * @param $amt Integer: (optional) amount to decrease
	 *
	 * @return Mixed: FALSE on failure, value on success
	 */",
 "/**
	 * Deletes a key from the server, optionally after $time
	 *
	 * @param $key String: key to delete
	 * @param $time Integer: (optional) how long to wait before deleting
	 *
	 * @return Boolean: TRUE on success, FALSE on failure
	 */",
 "/**
	 * Disconnects all connected sockets
	 */",
 "/**
	 * Enable / Disable compression
	 *
	 * @param $enable Boolean: TRUE to enable, FALSE to disable
	 */",
 "/**
	 * Forget about all of the dead hosts
	 */",
 "/**
	 * Retrieves the value associated with the key from the memcache server
	 *
	 * @param $key array|string key to retrieve
	 *
	 * @return Mixed
	 */",
 "/**
	 * Get multiple keys from the server(s)
	 *
	 * @param $keys Array: keys to retrieve
	 *
	 * @return Array
	 */",
 "/**
	 * Increments $key (optionally) by $amt
	 *
	 * @param $key String: key to increment
	 * @param $amt Integer: (optional) amount to increment
	 *
	 * @return Integer: null if the key does not exist yet (this does NOT
	 * create new mappings if the key does not exist). If the key does
	 * exist, this returns the new value for that key.
	 */",
 "/**
	 * Overwrites an existing value for key; only works if key is already set
	 *
	 * @param $key String: key to set value as
	 * @param $value Mixed: value to store
	 * @param $exp Integer: (optional) Expiration time. This can be a number of seconds
	 * to cache for (up to 30 days inclusive).  Any timespans of 30 days + 1 second or
	 * longer must be the timestamp of the time at which the mapping should expire. It
	 * is safe to use timestamps in all cases, regardless of exipration
	 * eg: strtotime(\"+3 hour\")
	 *
	 * @return Boolean
	 */",
 "/**
	 * Passes through $cmd to the memcache server connected by $sock; returns
	 * output as an array (null array if no output)
	 *
	 * NOTE: due to a possible bug in how PHP reads while using fgets(), each
	 *       line may not be terminated by a \r\n.  More specifically, my testing
	 *       has shown that, on FreeBSD at least, each line is terminated only
	 *       with a \n.  This is with the PHP flag auto_detect_line_endings set
	 *       to falase (the default).
	 *
	 * @param $sock Resource: socket to send command on
	 * @param $cmd String: command to run
	 *
	 * @return Array: output array
	 */",
 "/**
	 * Unconditionally sets a key to a given value in the memcache.  Returns true
	 * if set successfully.
	 *
	 * @param $key String: key to set value as
	 * @param $value Mixed: value to set
	 * @param $exp Integer: (optional) Expiration time. This can be a number of seconds
	 * to cache for (up to 30 days inclusive).  Any timespans of 30 days + 1 second or
	 * longer must be the timestamp of the time at which the mapping should expire. It
	 * is safe to use timestamps in all cases, regardless of exipration
	 * eg: strtotime(\"+3 hour\")
	 *
	 * @return Boolean: TRUE on success
	 */",
 "/**
	 * Sets the compression threshold
	 *
	 * @param $thresh Integer: threshold to compress if larger than
	 */",
 "/**
	 * Sets the debug flag
	 *
	 * @param $dbg Boolean: TRUE for debugging, FALSE otherwise
	 *
	 * @see     MWMemcached::__construct
	 */",
 "/**
	 * Sets the server list to distribute key gets and puts between
	 *
	 * @param $list Array of servers to connect to
	 *
	 * @see     MWMemcached::__construct()
	 */",
 "/**
	 * Sets the timeout for new connections
	 *
	 * @param $seconds Integer: number of seconds
	 * @param $microseconds Integer: number of microseconds
	 */",
 "/**
	 * Close the specified socket
	 *
	 * @param $sock String: socket to close
	 *
	 * @access  private
	 */",
 "/**
	 * Connects $sock to $host, timing out after $timeout
	 *
	 * @param $sock Integer: socket to connect
	 * @param $host String: Host:IP to connect to
	 *
	 * @return  boolean
	 * @access  private
	 */",
 "/**
	 * Marks a host as dead until 30-40 seconds in the future
	 *
	 * @param $sock String: socket to mark as dead
	 *
	 * @access  private
	 */",
 "/**
	 * get_sock
	 *
	 * @param $key String: key to retrieve value for;
	 *
	 * @return Mixed: resource on success, false on failure
	 * @access private
	 */",
 "/**
	 * Creates a hash integer based on the $key
	 *
	 * @param $key String: key to hash
	 *
	 * @return Integer: hash value
	 * @access private
	 */",
 "/**
	 * Perform increment/decriment on $key
	 *
	 * @param $cmd String command to perform
	 * @param $key String|array key to perform it on
	 * @param $amt Integer amount to adjust
	 *
	 * @return Integer: new value of $key
	 * @access private
	 */",
 "/**
	 * Load items into $ret from $sock
	 *
	 * @param $sock Resource: socket to read from
	 * @param $ret Array: returned values
	 *
	 * @access private
	 */",
 "/**
	 * Performs the requested storage operation to the memcache server
	 *
	 * @param $cmd String: command to perform
	 * @param $key String: key to act on
	 * @param $val Mixed: what we need to store
	 * @param $exp Integer: (optional) Expiration time. This can be a number of seconds
	 * to cache for (up to 30 days inclusive).  Any timespans of 30 days + 1 second or
	 * longer must be the timestamp of the time at which the mapping should expire. It
	 * is safe to use timestamps in all cases, regardless of exipration
	 * eg: strtotime(\"+3 hour\")
	 *
	 * @return Boolean
	 * @access private
	 */",
 "/**
	 * Returns the socket for the host
	 *
	 * @param $host String: Host:IP to get socket for
	 *
	 * @return Mixed: IO Stream or false
	 * @access private
	 */",
 "/**
	 * Original behaviour
	 */",
 "/**
	 * Flush the read buffer of a stream
	 */",
 "/**
 * memcached client class implemented using (p)fsockopen()
 *
 * @author  Ryan T. Dean <rtdean@cytherianage.net>
 * @ingroup Cache
 */",
 "/**
	 * @param $request WebRequest
	 */",
 "/**
	 * Initialize from a filename and a WebRequestUpload
	 * @param $name
	 * @param $webRequestUpload
	 */",
 "/**
	 * @param $request
	 * @return bool
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return array
	 */",
 "/**
 * Implements regular file uploads
 *
 * @ingroup Upload
 * @author Bryan Tong Minh
 */",
 "/** Uighur (Uyghurche??? / ????????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 * @comment falls back to Uighur (Arabic script) - ug-arab.
 */",
 "/** @dataProvider provideURLS */",
 "/** @dataProvider provideURLS */",
 "/**
	 * Internal helper that actually run the test.
	 * Called by the public methods testEncodingUrlWith...()
	 *
	 */",
 "/**
	 * Interprets the provider array. Return expected value depending
	 * the HTTP server name.
	 */",
 "/**
	 * Format is either:
	 *   array( \'input\', \'expected\' );
	 * Or:
	 *   array( \'input\',
	 *       array( \'Apache\', \'expected\' ),
	 *       array( \'Microsoft-IIS/7\', \'expected\' ),
	 *    ),
	 * If you want to add other HTTP server name, you will have to add a new
	 * testing method much like the testEncodingUrlWith() method above. 
	 */",
 "/**
 * Tests for includes/GlobalFunctions.php -> wfUrlencode()
 *
 * The function only need a string parameter and might react to IIS7.0
 */",
 "/** Waray (Winaray)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Estudyante
 * @author Harvzsf
 * @author JinJian
 * @author Kaganer
 * @author ???????? ????????????????
 */",
 "/**
	 * No help, it would just be misleading since it misses custom options
	 */",
 "/**
	 * Get the text that should be returned, or false if the page or revision
	 * was not found.
	 *
	 * @return String|Bool
	 */",
 "/**
	 * Get the ID of the revision that should used to get the text.
	 *
	 * @return Integer
	 */",
 "/**
	 * Get the content type to use for the response
	 *
	 * @return String
	 */",
 "/**
 * A simple method to retrieve the plain source of an article,
 * using \"action=raw\" in the GET request string.
 */",
 "/**
 * Backward compatibility for extensions
 *
 * @deprecated in 1.19
 */",
 "/** Krio (Krio)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Jose77
 * @author Meno25
 * @author Protostar
 */",
 "/**
	 * @param $table string
	 * @param $idCol
	 * @param $prefix string
	 * @return Integer Rows changed
	 */",
 "/**
	 * @return int
	 */",
 "/**
	 * @param $row
	 * @param $table
	 * @param $idCol
	 * @param $prefix
	 * @return bool
	 */",
 "/**
	 * @param $row
	 * @return bool
	 */",
 "/** Sakha (???????? ????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Andrijko Z.
 * @author Bert Jickty
 * @author HalanTul
 * @author Kaganer
 * @author Meno25
 * @author Urhixidur
 */",
 "/**
 * Test Case ID   : 05 (http://www.mediawiki.org/wiki/New_installer/Test_plan)
 * Test Case Name : Install Mediawiki by updating the existing database.
 * Version        : MediaWiki 1.18alpha
*/",
 "/**
 * Stubs for now. We\'re going to start populating this test.
 */",
 "/**
	 * Initializes output page and sets up skin-specific parameters
	 * @param $out OutputPage object to initialize
	 */",
 "/**
	 * Load skin and user CSS files in the correct order
	 * fixes bug 22916
	 * @param $out OutputPage object
	 */",
 "/**
 * SkinTemplate class for Vector skin
 * @ingroup Skins
 */",
 "/**
	 * Outputs the entire contents of the (X)HTML page
	 */",
 "/**
	 * Render a series of portals
	 *
	 * @param $portals array
	 */",
 "/**
	 * Render one or more navigations elements by name, automatically reveresed
	 * when UI is in RTL mode
	 *
	 * @param $elements array
	 */",
 "/**
 * QuickTemplate class for Vector skin
 * @ingroup Skins
 */",
 "/**
	 * @param $skin Skin
	 * @param $result
	 * @return string
	 */",
 "/**
 * A special page that displays a list of pages that are not on anyones watchlist.
 *
 * @ingroup SpecialPage
 */",
 "/**
	 * Find all pages that have a corrupted page_latest
	 * @return array
	 */",
 "/**
	 * Fix a broken page entry
	 * @param $pageID int The page_id to fix
	 */",
 "/**
	 * Insert jobs into the job queue to fix redirects to the given title
	 * @param $reason String: the reason for the fix, see message double-redirect-fixed-<reason>
	 * @param $redirTitle Title: the title which has changed, redirects pointing to this title are fixed
	 * @param $destTitle bool Not used
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * Get the final destination of a redirect
	 *
	 * @param $title Title
	 *
	 * @return false if the specified title is not a redirect, or if it is a circular redirect
	 */",
 "/**
	 * Get a user object for doing edits, from a request-lifetime cache
	 * @return User
	 */",
 "/**
 * Job to fix double redirects after moving a page
 *
 * @ingroup JobQueue
 */",
 "/**
	 * @param $title
	 * @param $repo
	 * @param $unused
	 * @return ForeignDBFile
	 */",
 "/**
	 * Create a ForeignDBFile from a title
	 * Do not call this except from inside a repo class.
	 *
	 * @param $row
	 * @param $repo
	 *
	 * @return ForeignDBFile
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
 * Foreign file with an accessible MediaWiki database
 *
 * @ingroup FileAbstraction
 */",
 "/** @dataProvider providerPlural */",
 "/** Tests for MediaWiki languages/classes/LanguageSh.php */",
 "/**
	 * Cache page existence for performance
	 *
	 * @param $db DatabaseBase
	 * @param $res ResultWrapper
	 */",
 "/**
 * Special:Listredirects - Lists all the redirects on the wiki.
 * @ingroup SpecialPage
 */",
 "/**
	 *
	 * @return Status:
	 */",
 "/**
	*SafewrapperforPHP\'srealpath()thatfailsgracefullyifit\'sunabletocanonicalizethepath.
	*
	*@param$pathstring
	*
	*@returnstring
	*/",
 "/**
	*@returnStatus
	*/",
 "/**
	*@param$dir
	*@param$createbool
	*@returnStatus
	*/",
 "/**
	*@returnStatus
	*/",
 "/**
	*@returnbool
	*/",
 "/**
	*@returnStatus
	*/",
 "/**
	*@returnStaus
	*/",
 "/**
	*@param$statusStatus
	*@returnStatus
	*/",
 "/**
	 * @return string
	 */",
 "/**
 * Class for setting up the MediaWiki database using SQLLite.
 *
 * @ingroup Deployment
 * @since 1.17
 */",
 "/** Punjabi (??????????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author AS Alam
 * @author Aalam
 * @author Anjalikaushal
 * @author Gman124
 * @author Guglani
 * @author Kaganer
 * @author Sukh
 * @author Surinder.wadhawan
 * @author ??var Arnfj??r?? Bjarmason
 * @author ???????? ????????????????
 */",
 "/** Bikol Central (Bikol Central)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Filipinayzd
 * @author Kaganer
 * @author Steven*fung
 * @author Urhixidur
 */",
 "/** Manx (Gaelg)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Alison
 * @author Kaganer
 * @author MacTire02
 * @author Shimmin Beg
 */",
 "/** Emiliano-Romagnolo (Emili??n e rumagn??l)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Ottaviano II
 * @author Timichal
 * @author T??staqu??dra
 */",
 "/**
	 * @param $db DatabaseBase
	 * @param $stmt
	 * @param bool $unique
	 */",
 "/**
 * The oci8 extension is fairly weak and doesn\'t support oci_num_rows, among
 * other things.  We use a wrapper class to handle that and other
 * Oracle-specific bits, like converting column names back to lowercase.
 * @ingroup Database
 */",
 "/**
 * Utility class.
 * @ingroup Database
 */",
 "/**
	 * Usually aborts on failure
	 */",
 "/**
	 * Closes a database connection, if it is open
	 * Returns success, true if already closed
	 */",
 "/**
	 * This must be called after nextSequenceVal
	 */",
 "/**
	 * Returns information about an index
	 * If errors are explicitly ignored, returns NULL on failure
	 */",
 "/**
	 * Return the next in a sequence, save the value for retrieval via insertId()
	 */",
 "/**
	 * Return sequence_name if table has a sequence
	 */",
 "/**
	 * Return aggregated value function call
	 */",
 "/**
	 * @return string wikitext of a link to the server software\'s web site
	 */",
 "/**
	 * @return string Version information from the database
	 */",
 "/**
	 * Query whether a given index exists
	 */",
 "/**
	 * Query whether a given table exists (in the given schema, or the default mw one if not given)
	 */",
 "/**
	 * Function translates mysql_fetch_field() functionality on ORACLE.
	 * Caching is present for reducing query time.
	 * For internal calls. Use fieldInfo for normal usage.
	 * Returns false if the field doesn\'t exist
	 *
	 * @param $table Array
	 * @param $field String
	 * @return ORAField|ORAResult
	 */",
 "/**
	 * @throws DBUnexpectedError
	 * @param  $table
	 * @param  $field
	 * @return ORAField
	 */",
 "/**
	 * Returns an optional USE INDEX clause to go after the table, and a
	 * string to go at the end of the query
	 *
	 * @private
	 *
	 * @param $options Array: an associative array of options to be turned into
	 *              an SQL query, valid keys are listed in the function.
	 * @return array
	 */",
 "/**
 * @ingroup Database
 */",
 "/**
	 * Constructor
	 * @param $context IContextSource Context to inherit from
	 */",
 "/**
	 * Set the WebRequest object
	 *
	 * @param $r WebRequest object
	 */",
 "/**
	 * Get the WebRequest object
	 *
	 * @return WebRequest
	 */",
 "/**
	 * Set the Title object
	 *
	 * @param $t Title object
	 */",
 "/**
	 * Get the Title object
	 *
	 * @return Title
	 */",
 "/**
	 * Check whether a WikiPage object can be get with getWikiPage().
	 * Callers should expect that an exception is thrown from getWikiPage()
	 * if this method returns false.
	 *
	 * @since 1.19
	 * @return bool
	 */",
 "/**
	 * Set the WikiPage object
	 *
	 * @since 1.19
	 * @param $p WikiPage object
	 */",
 "/**
	 * Get the WikiPage object.
	 * May throw an exception if there\'s no Title object set or the Title object
	 * belongs to a special namespace that doesn\'t have WikiPage, so use first
	 * canUseWikiPage() to check whether this method can be called safely.
	 *
	 * @since 1.19
	 * @return WikiPage
	 */",
 "/**
	 * Set the OutputPage object
	 *
	 * @param $o OutputPage
	 */",
 "/**
	 * Get the OutputPage object
	 *
	 * @return OutputPage object
	 */",
 "/**
	 * Set the User object
	 *
	 * @param $u User
	 */",
 "/**
	 * Get the User object
	 *
	 * @return User
	 */",
 "/**
	 * Set the Language object
	 *
	 * @deprecated 1.19 Use setLanguage instead
	 * @param $l Mixed Language instance or language code
	 */",
 "/**
	 * Set the Language object
	 *
	 * @param $l Mixed Language instance or language code
	 * @since 1.19
	 */",
 "/**
	 * @deprecated 1.19 Use getLanguage instead
	 * @return Language
	 */",
 "/**
	 * Get the Language object
	 *
	 * @return Language
	 * @since 1.19
	 */",
 "/**
	 * Set the Skin object
	 *
	 * @param $s Skin
	 */",
 "/**
	 * Get the Skin object
	 *
	 * @return Skin
	 */",
 "/**
 * An IContextSource implementation which will inherit context from another source
 * but allow individual pieces of context to be changed locally
 * eg: A ContextSource that can inherit from the main RequestContext but have
 *     a different Title instance set on it.
 */",
 "/** Serbian (Cyrillic script) (??????????????? (????????????????)???)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Bjankuloski06
 * @author CERminator
 * @author Charmed94
 * @author FriedrickMILBarbarossa
 * @author Helios13
 * @author Kaganer
 * @author Kale
 * @author Meno25
 * @author Millosh
 * @author Nikola Smolenski
 * @author Rancher
 * @author Red Baron
 * @author Reedy
 * @author Sasa Stefanovic
 * @author Slaven Kosanovic
 * @author ??????????????
 * @author ?????????? ??????????????????
 * @author ?????????????? ????????????????????
 * @author ???????? ????????????????
 */",
 "/** @dataProvider providePlural */",
 "/** Tests for MediaWiki languages/LanguageBe.php */",
 "/**
 * This class supports external authentication from a literal array dumped in
 * LocalSettings.php.  It\'s mostly useful for testing.  Example configuration:
 *
 *   $wgExternalAuthType = \'ExternalUser_Hardcoded\';
 *   $wgExternalAuthConf = array(
 *       \'Bob Smith\' => array(
 *           \'password\' => \'literal string\',
 *           \'emailaddress\' => \'bob@example.com\',
 *       ),
 *   );
 *
 * Multiple names may be provided.  The keys of the inner arrays can be either
 * \'password\', or the name of any preference.
 *
 * @ingroup ExternalUser
 */",
 "/** Sundanese (Basa Sunda)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Aditia.Gunawan
 * @author Irwangatot
 * @author Kaganer
 * @author Kandar
 * @author Meursault2004
 * @author Mssetiadi
 * @author Urhixidur
 * @author ???????? ????????????????
 */",
 "/**
	 *  not sure it should be tested with boolean false. hashar 20100924
	 * @covers IP::isIPAddress
	 */",
 "/**
	 * @covers IP::isIPv6
	 */",
 "/**
	 * @covers IP::isIPv4
	 */",
 "/**
	 * @covers IP::isValid
	 */",
 "/**
	 * @covers IP::isValid
	 */",
 "/**
	 * @covers IP::isValidBlock
	 */",
 "/**
	 * @covers IP::isValidBlock
	 */",
 "/**
	 * Improve IP::sanitizeIP() code coverage
	 * @todo Most probably incomplete
	 */",
 "/**
	 * test wrapper around ip2long which might return -1 or false depending on PHP version
	 * @covers IP::toUnsigned
	 */",
 "/**
	 * @covers IP::isPublic
	 */",
 "/**
	 * @covers IP::hexToQuad
	 */",
 "/**
	 * @covers IP::hexToOctet
	 */",
 "/**
	 * IP::parseCIDR() returns an array containing a signed IP address
	 * representing the network mask and the bit mask.
	 * @covers IP::parseCIDR
	 */",
 "/**
	 * @covers IP::canonicalize
	 */",
 "/**
	 * @covers IP::canonicalize
	 */",
 "/**
	 * Issues there are most probably from IP::toHex() or IP::parseRange()
	 * @covers IP::isInRange
	 * @dataProvider provideIPsAndRanges
	 */",
 "/** Provider for testIPIsInRange() */",
 "/**
	 * Test for IP::splitHostAndPort().
	 * @dataProvider provideSplitHostAndPort
	 */",
 "/**
	 * Provider for IP::splitHostAndPort()
	 */",
 "/**
	 * Test for IP::combineHostAndPort()
	 * @dataProvider provideCombineHostAndPort
	 */",
 "/**
	 * Provider for IP::combineHostAndPort()
	 */",
 "/**
	 * Test for IP::sanitizeRange()
	 * @dataProvider provideIPCIDRs
	 */",
 "/**
	 * Provider for IP::testSanitizeRange()
	 */",
 "/**
 * Tests for IP validity functions. Ported from /t/inc/IP.t by avar.
 */",
 "/** @dataProvider providePlural */",
 "/** Tests for MediaWiki languages/classes/LanguageHsb.php */",
 "/**
	 * Check if the submitted form matches the captcha session data provided
	 * by the plugin when the form was generated.
	 *
	 * @param string $answer
	 * @param array $info
	 * @return bool
	 */",
 "/**
	 * Insert the captcha prompt into the edit form.
	 */",
 "/**
	 * Select a previously generated captcha image from the queue.
	 * @fixme subject to race conditions if lots of files vanish
	 * @return mixed tuple of (salt key, text hash) or false if no image to find
	 */",
 "/**
	 * Count the number of files in a directory.
	 * @return int
	 */",
 "/**
	 * Show a message asking the user to enter a captcha on edit
	 * The result will be treated as wiki text
	 *
	 * @param $action Action being performed
	 * @return string
	 */",
 "/**
	 * Delete a solved captcha image, if $wgCaptchaDeleteOnSolve is true.
	 */",
 "/** Catalan (Catal??)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Aleator
 * @author Avm99963
 * @author BroOk
 * @author Cedric31
 * @author Davidpar
 * @author El libre
 * @author Gemmaa
 * @author Iradigalesc
 * @author Jordi Roqu??
 * @author Juanpabl
 * @author Kaganer
 * @author Martorell
 * @author McDutchie
 * @author Pasqual (ca)
 * @author Paucabot
 * @author PerroVerd
 * @author P??rez
 * @author Qllach
 * @author SMP
 * @author Smeira
 * @author Solde
 * @author Spacebirdy
 * @author Ssola
 * @author Toniher
 * @author Vriullop
 * @author ???????? ????????????????
 */",
 "/** @dataProvider providerPlural */",
 "/** Tests for MediaWiki languages/classes/LanguageRo.php */",
 "/** Lojban (Lojban)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author (vinny)
 * @author Homo logos
 * @author Inego (on jbo.wikipedia.org)
 * @author Malafaya
 * @author OldakQuill
 * @author PierreAbbat
 */",
 "/**
	 * @param $resultPageSet ApiPageSet
	 * @return
	 */",
 "/**
 * A query module to list duplicates of the given file(s)
 *
 * @ingroup API
 */",
 "/**
	 * Used to find out which type the data is.
	 * All types are defined in the \'Type constants\' section of this class
	 * Please note we do not support detection of INTNULL MediaWiki type
	 * which will be assumed as INT if the data is an integer.
	 *
	 * @param $data Mixed: value to guess type for
	 * @exception MWException Unsupported datatype
	 * @return Type constant 
	 */",
 "/**
	 * Verify the given option name exist.
	 *
	 * @param $name String: option name
	 * @param $strict Boolean: throw an exception when the option does not exist (default false)
	 * @return Boolean: true if option exist, false otherwise
	 */",
 "/**
	 * Use to set the value of an option.
	 *
	 * @param $name String: option name
	 * @param $value Mixed: value for the option
	 * @param $force Boolean: whether to set the value when it is equivalent to the default value for this option (default false).
	 * @return null
	 */",
 "/**
	 * Get the value for the given option name.
	 * Internally use getValueReal()
	 *
	 * @param $name String: option name
	 * @return Mixed
	 */",
 "/**
	 * @todo Document
	 * @param $option Array: array structure describing the option
	 * @return Mixed. Value or the default value if it is null
	 */",
 "/**
	 * Delete the option value.
	 * This will make future calls to getValue()  return the default value.
	 * @param $name String: option name
	 * @return null
	 */",
 "/**
	 * @todo Document
	 * @param $name String: option name
	 * @return null
	 */",
 "/**
	 * @todo Document
	 * @param $names Array: array of option names
	 * @return null
	 */",
 "/**
	 * Validate and set an option integer value
	 * The value will be altered to fit in the range. 
	 *
	 * @param $name String: option name
	 * @param $min Int: minimum value
	 * @param $max Int: maximum value
	 * @exception MWException Option is not of type int
	 * @return null
	 */",
 "/**
	 * Getting the data out for use
	 * @param $all Boolean: whether to include unchanged options (default: false)
	 * @return Array
	 */",
 "/**
	 * Return options modified as an array ( name => value )
	 * @return Array
	 */",
 "/**
	 * Format options to an array ( name => value)
	 * @return Array
	 */",
 "/** Whether option exist*/",
 "/** Retrieve an option value */",
 "/**	Set an option to given value */",
 "/**	Delete the option */",
 "/**
 * Helper class to keep track of options when mixing links and form elements.
 * @todo This badly need some examples and tests :-)
 *
 * Copyright ?? 2008, Niklas Laxstir??m
 *
 * Copyright ?? 2011, Antoine Musso
 *
 * @author Niklas Laxstr??m
 * @author Antoine Musso 
 */",
 "/**
	 * Returns an HTML element in a string.  The major advantage here over
	 * manually typing out the HTML is that it will escape all attribute
	 * values.  If you\'re hardcoding all the attributes, or there are none, you
	 * should probably just type out the html element yourself.
	 *
	 * This is quite similar to Xml::tags(), but it implements some useful
	 * HTML-specific logic.  For instance, there is no $allowShortTag
	 * parameter: the closing tag is magically omitted if $element has an empty
	 * content model.  If $wgWellFormedXml is false, then a few bytes will be
	 * shaved off the HTML output as well.
	 *
	 * @param $element string The element\'s name, e.g., \'a\'
	 * @param $attribs array  Associative array of attributes, e.g., array(
	 *   \'href\' => \'http://www.mediawiki.org/\' ). See expandAttributes() for
	 *   further documentation.
	 * @param $contents string The raw HTML contents of the element: *not*
	 *   escaped!
	 * @return string Raw HTML
	 */",
 "/**
	 * Identical to rawElement(), but HTML-escapes $contents (like
	 * Xml::element()).
	 *
	 * @param $element string
	 * @param $attribs array
	 * @param $contents string
	 *
	 * @return string
	 */",
 "/**
	 * Identical to rawElement(), but has no third parameter and omits the end
	 * tag (and the self-closing \'/\' in XML mode for empty elements).
	 *
	 * @param $element string
	 * @param $attribs array
	 *
	 * @return string
	 */",
 "/**
	 * Returns \"</$element>\", except if $wgWellFormedXml is off, in which case
	 * it returns the empty string when that\'s guaranteed to be safe.
	 *
	 * @since 1.17
	 * @param $element string Name of the element, e.g., \'a\'
	 * @return string A closing tag, if required
	 */",
 "/**
	 * Given an element name and an associative array of element attributes,
	 * return an array that is functionally identical to the input array, but
	 * possibly smaller.  In particular, attributes might be stripped if they
	 * are given their default values.
	 *
	 * This method is not guaranteed to remove all redundant attributes, only
	 * some common ones and some others selected arbitrarily at random.  It
	 * only guarantees that the output array should be functionally identical
	 * to the input array (currently per the HTML 5 draft as of 2009-09-06).
	 *
	 * @param $element string Name of the element, e.g., \'a\'
	 * @param $attribs array  Associative array of attributes, e.g., array(
	 *   \'href\' => \'http://www.mediawiki.org/\' ).  See expandAttributes() for
	 *   further documentation.
	 * @return array An array of attributes functionally identical to $attribs
	 */",
 "/**
	 * Given an associative array of element attributes, generate a string
	 * to stick after the element name in HTML output.  Like array( \'href\' =>
	 * \'http://www.mediawiki.org/\' ) becomes something like
	 * \' href=\"http://www.mediawiki.org\"\'.  Again, this is like
	 * Xml::expandAttributes(), but it implements some HTML-specific logic.
	 * For instance, it will omit quotation marks if $wgWellFormedXml is false,
	 * and will treat boolean attributes specially.
	 *
	 * Attributes that should contain space-separated lists (such as \'class\') array
	 * values are allowed as well, which will automagically be normalized
	 * and converted to a space-separated string. In addition to a numerical
	 * array, the attribute value may also be an associative array. See the
	 * example below for how that works.
	 *
	 * @par Numerical array
	 * @code
	 *     Html::element( \'em\', array(
	 *         \'class\' => array( \'foo\', \'bar\' )
	 *     ) );
	 *     // gives \'<em class=\"foo bar\"></em>\'
	 * @endcode
	 *
	 * @par Associative array
	 * @code
	 *     Html::element( \'em\', array(
	 *         \'class\' => array( \'foo\', \'bar\', \'foo\' => false, \'quux\' => true )
	 *     ) );
	 *     // gives \'<em class=\"bar quux\"></em>\'
	 * @endcode
	 *
	 * @param $attribs array Associative array of attributes, e.g., array(
	 *   \'href\' => \'http://www.mediawiki.org/\' ).  Values will be HTML-escaped.
	 *   A value of false means to omit the attribute.  For boolean attributes,
	 *   you can omit the key, e.g., array( \'checked\' ) instead of
	 *   array( \'checked\' => \'checked\' ) or such.
	 * @return string HTML fragment that goes between element name and \'>\'
	 *   (starting with a space if at least one attribute is output)
	 */",
 "/**
	 * Output a <script> tag with the given contents.  TODO: do some useful
	 * escaping as well, like if $contents contains literal \'</script>\' or (for
	 * XML) literal \"]]>\".
	 *
	 * @param $contents string JavaScript
	 * @return string Raw HTML
	 */",
 "/**
	 * Output a <script> tag linking to the given URL, e.g.,
	 * <script src=foo.js></script>.
	 *
	 * @param $url string
	 * @return string Raw HTML
	 */",
 "/**
	 * Output a <style> tag with the given contents for the given media type
	 * (if any).  TODO: do some useful escaping as well, like if $contents
	 * contains literal \'</style>\' (admittedly unlikely).
	 *
	 * @param $contents string CSS
	 * @param $media mixed A media type string, like \'screen\'
	 * @return string Raw HTML
	 */",
 "/**
	 * Output a <link rel=stylesheet> linking to the given URL for the given
	 * media type (if any).
	 *
	 * @param $url string
	 * @param $media mixed A media type string, like \'screen\'
	 * @return string Raw HTML
	 */",
 "/**
	 * Convenience function to produce an <input> element.  This supports the
	 * new HTML5 input types and attributes, and will silently strip them if
	 * $wgHtml5 is false.
	 *
	 * @param $name    string name attribute
	 * @param $value   mixed  value attribute
	 * @param $type    string type attribute
	 * @param $attribs array  Associative array of miscellaneous extra
	 *   attributes, passed to Html::element()
	 * @return string Raw HTML
	 */",
 "/**
	 * Convenience function to produce an input element with type=hidden
	 *
	 * @param $name    string name attribute
	 * @param $value   string value attribute
	 * @param $attribs array  Associative array of miscellaneous extra
	 *   attributes, passed to Html::element()
	 * @return string Raw HTML
	 */",
 "/**
	 * Convenience function to produce an <input> element.  This supports leaving
	 * out the cols= and rows= which Xml requires and are required by HTML4/XHTML
	 * but not required by HTML5 and will silently set cols=\"\" and rows=\"\" if
	 * $wgHtml5 is false and cols and rows are omitted (HTML4 validates present
	 * but empty cols=\"\" and rows=\"\" as valid).
	 *
	 * @param $name    string name attribute
	 * @param $value   string value attribute
	 * @param $attribs array  Associative array of miscellaneous extra
	 *   attributes, passed to Html::element()
	 * @return string Raw HTML
	 */",
 "/**
	 * Build a drop-down box for selecting a namespace
	 *
	 * @param $params array:
	 * - selected: [optional] Id of namespace which should be pre-selected
	 * - all: [optional] Value of item for \"all namespaces\". If null or unset, no <option> is generated to select all namespaces
	 * - label: text for label to add before the field
	 * @param $selectAttribs array HTML attributes for the generated select element.
	 * - id:   [optional], default: \'namespace\'
	 * - name: [optional], default: \'namespace\'
	 * @return string HTML code to select a namespace.
	 */",
 "/**
	 * Constructs the opening html-tag with necessary doctypes depending on
	 * global variables.
	 *
	 * @param $attribs array  Associative array of miscellaneous extra
	 *   attributes, passed to Html::element() of html tag.
	 * @return string  Raw HTML
	 */",
 "/**
	 * Determines if the given mime type is xml.
	 *
	 * @param $mimetype    string MimeType
	 * @return Boolean
	 */",
 "/**
	 * Get HTML for an info box with an icon.
	 *
	 * @param $text String: wikitext, get this with wfMsgNoTrans()
	 * @param $icon String: icon name, file in skins/common/images
	 * @param $alt String: alternate text for the icon
	 * @param $class String: additional class name to add to the wrapper div
	 * @param $useStylePath
	 *
	 * @return string
	 */",
 "/**
 * This class is a collection of static functions that serve two purposes:
 *
 * 1) Implement any algorithms specified by HTML5, or other HTML
 * specifications, in a convenient and self-contained way.
 *
 * 2) Allow HTML elements to be conveniently and safely generated, like the
 * current Xml class but a) less confused (Xml supports HTML-specific things,
 * but only sometimes!) and b) not necessarily confined to XML-compatible
 * output.
 *
 * There are two important configuration options this class uses:
 *
 * $wgHtml5: If this is set to false, then all output should be valid XHTML 1.0
 *     Transitional.
 * $wgWellFormedXml: If this is set to true, then all output should be
 *     well-formed XML (quotes on attributes, self-closing tags, etc.).
 *
 * This class is meant to be confined to utility functions that are called from
 * trusted code paths.  It does not do enforcement of policy like not allowing
 * <a> elements.
 *
 * @since 1.16
 */",
 "/**
	 *
	 * @dataProvider providerFiles
	 */",
 "/**
	 *
	 * @dataProvider providerFiles
	 */",
 "/**
	 * Same as before, but with auto-rotation disabled.
	 * @dataProvider providerFilesNoAutoRotate
	 */",
 "/**
	 *
	 * @dataProvider providerFilesNoAutoRotate
	 */",
 "/**
	 * @dataProvider provideBitmapExtractPreRotationDimensions
	 */",
 "/**
 * Tests related to auto rotation
 */",
 "/** Lazuri (Lazuri)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Bombola
 * @author Dato deutschland
 * @author Dawid Deutschland
 * @author Ibero-kolxi
 * @author The Evil IP address
 */",
 "/** Northern Sami (S??megiella)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Kaganer
 * @author Laila
 * @author Skuolfi
 * @author Teak
 * @author The Evil IP address
 * @author Trondtr
 * @author ???????? ????????????????
 */",
 "/**
	 * setCacheTime() sets the timestamp expressing when the page has been rendered.
	 * This doesn not control expiry, see updateCacheExpiry() for that!
	 * @param $t string
	 * @return string
	 */",
 "/**
	 * Sets the number of seconds after which this object should expire.
	 * This value is used with the ParserCache.
	 * If called with a value greater than the value provided at any previous call,
	 * the new call has no effect. The value returned by getCacheExpiry is smaller
	 * or equal to the smallest number that was provided as an argument to
	 * updateCacheExpiry().
	 *
	 * @param $seconds number
	 */",
 "/**
	 * Returns the number of seconds after which this object should expire.
	 * This method is used by ParserCache to determine how long the ParserOutput can be cached.
	 * The timestamp of expiry can be calculated by adding getCacheExpiry() to getCacheTime().
	 * The value returned by getCacheExpiry is smaller or equal to the smallest number
	 * that was provided to a call of updateCacheExpiry(), and smaller or equal to the
	 * value of $wgParserCacheExpireTime.
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * Return true if this cached output object predates the global or
	 * per-article cache invalidation timestamps, or if it comes from
	 * an incompatible older version.
	 *
	 * @param $touched String: the affected article\'s last touched timestamp
	 * @return Boolean
	 */",
 "/**
 * @todo document
 * @ingroup Parser
 */",
 "/**
	 * callback used by getText to replace editsection tokens
	 * @private
	 */",
 "/**
	 * Record a local or interwiki inline link for saving in future link tables.
	 *
	 * @param $title Title object
	 * @param $id Mixed: optional known page_id so we can skip the lookup
	 */",
 "/**
	 * Register a file dependency for this output
	 * @param $name string Title dbKey
	 * @param $timestamp string MW timestamp of file creation (or false if non-existing)
	 * @param $sha1 string base 36 SHA-1 of file (or false if non-existing)
	 * @return void
	 */",
 "/**
	 * Register a template dependency for this output
	 * @param $title Title
	 * @param $page_id
	 * @param $rev_id
	 * @return void
	 */",
 "/**
	 * @param $title Title object, must be an interwiki link
	 * @throws MWException if given invalid input
	 */",
 "/**
	 * Add some text to the <head>.
	 * If $tag is set, the section with that tag will only be included once
	 * in a given page.
	 */",
 "/**
	 * Copy items from the OutputPage object into this one
	 *
	 * @param $out OutputPage object
	 */",
 "/**
	 * Override the title to be used for display
	 * -- this is assumed to have been validated
	 * (check equal normalisation, etc.)
	 *
	 * @param $text String: desired title text
	 */",
 "/**
	 * Get the title to be used for display
	 *
	 * @return String
	 */",
 "/**
	 * Fairly generic flag setter thingy.
	 */",
 "/**
	 * Set a property to be cached in the DB
	 */",
 "/**
	 * Returns the options from its ParserOptions which have been taken
	 * into account to produce this output or false if not available.
	 * @return mixed Array
	 */",
 "/**
	  * Callback passed by the Parser to the ParserOptions to keep track of which options are used.
	  * @access private
	  */",
 "/**
	 * Gets a list of local file paths which are referenced in a CSS style sheet
	 *
	 * @param $source string CSS data to remap
	 * @param $path string File path where the source was read from (optional)
	 * @return array List of local file references
	 */",
 "/**
	 * @param $file string
	 * @return bool|string
	 */",
 "/**
	 * Remaps CSS URL paths and automatically embeds data URIs for URL rules
	 * preceded by an /* @embed * / comment
	 *
	 * @param $source string CSS data to remap
	 * @param $local string File path where the source was read from
	 * @param $remote string URL path to the file
	 * @param $embedData bool If false, never do any data URI embedding, even if / * @embed * / is found
	 * @return string Remapped CSS data
	 */",
 "/**
	 * Removes whitespace from CSS data
	 *
	 * @param $css string CSS data to minify
	 * @return string Minified CSS data
	 */",
 "/**
 * Transforms CSS data
 *
 * This class provides minification, URL remapping, URL extracting, and data-URL embedding.
 *
 * @file
 * @version 0.1.1 -- 2010-09-11
 * @author Trevor Parscal <tparscal@wikimedia.org>
 * @copyright Copyright 2010 Wikimedia Foundation
 * @license http://www.apache.org/licenses/LICENSE-2.0
 */",
 "/**
	 * Extracts the title, token, and reason from the request parameters and invokes
	 * the local delete() function with these as arguments. It does not make use of
	 * the delete function specified by Article.php. If the deletion succeeds, the
	 * details of the article deleted and the reason for deletion are added to the
	 * result object.
	 */",
 "/**
	 * @param $title Title
	 * @param $user User doing the action
	 * @param $token String
	 * @return array
	 */",
 "/**
	 * We have our own delete() function, since Article.php\'s implementation is split in two phases
	 *
	 * @param $page WikiPage object to work on
	 * @param $user User doing the action
	 * @param $token String: delete token (same as edit token)
	 * @param $reason String: reason for the deletion. Autogenerated if NULL
	 * @return Title::getUserPermissionsErrors()-like array
	 */",
 "/**
	 * @param $page WikiPage object to work on
	 * @param $user User doing the action
	 * @param $token
	 * @param $oldimage
	 * @param $reason
	 * @param $suppress bool
	 * @return \type|array|Title
	 */",
 "/**
 * API module that facilitates deleting pages. The API equivalent of action=delete.
 * Requires API write mode to be enabled.
 *
 * @ingroup API
 */",
 "/** Capiznon (Capice??o)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Capisano
 * @author Oxyzen
 * @author Reedy
 */",
 "/** Toki Pona (Toki Pona)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author http://tokipona.wikia.com sysops
 */",
 "/** @dataProvider providePluralAllForms */",
 "/** @dataProvider providePluralTwoForms */",
 "/** Tests for MediaWiki languages/classes/LanguageSgs.php */",
 "/**
	 * Return a dummy header for later edition.
	 *
	 * @return String: a dummy header
	 */",
 "/**
	 * generate and write a file in .po format.
	 *
	 * @param $langcode String: code of a language it will process.
	 * @param $messages Array containing the various messages.
	 * @return string Filename where stuff got saved or false.
	 */",
 "/** Tetum (Tetun)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author MF-Warburg
 * @author Reedy
 */",
 "/**
	 * @param $user User
	 * @param $stash UploadStash
	 * @param $repo FileRepo
	 */",
 "/**
	 * @param $key string
	 * @return bool
	 */",
 "/**
	 * @param $request WebRequest
	 *
	 * @return Boolean
	 */",
 "/**
		 * Confirming a temporarily stashed upload.
		 * We don\'t want path names to be forged, so we keep
		 * them in the session on the server and just give
		 * an opaque key to the user agent.
		 */",
 "/**
	 * @param $key string
	 * @param $name string
	 */",
 "/**
	 * @param $request WebRequest
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * File has been previously verified so no need to do so again.
	 *
	 * @return bool
	 */",
 "/**
	 * Stash the file.
	 *
	 * @return UploadStashFile
	 */",
 "/**
	 * This should return the key instead of the UploadStashFile instance, for backward compatibility.
	 * @return String
	 */",
 "/**
	 * Remove a temporarily kept file stashed by saveTempUploadedFile().
	 * @return success
	 */",
 "/**
	 * Perform the upload, then remove the database record afterward.
	 * @param $comment string
	 * @param $pageText string
	 * @param $watch bool
	 * @param $user User
	 * @return Status
	 */",
 "/**
 * Implements uploading from previously stored file.
 *
 * @ingroup Upload
 * @author Bryan Tong Minh
 */",
 "/** Norwegian (bokm??l)??? (???Norsk (bokm??l)???)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 * @comment Deprecated language code. Falls back to \'nb\'.
 */",
 "/**
 *
 */",
 "/**
	 * Get parameters
	 */",
 "/**
 * Query module to enumerate all deleted files.
 *
 * @ingroup API
 */",
 "/**
	 * @param $file string filename
	 * @param $filterCallback callable (optional)
	 *        Function to call to do additional custom validity checks from the
	 *        SAX element handler event. This gives you access to the element
	 *        namespace, name, and attributes, but not to text contents.
	 *        Filter should return \'true\' to toggle on $this->filterMatch
	 */",
 "/**
	 * Get the root element. Simple accessor to $rootElement
	 *
	 * @return string
	 */",
 "/**
	 * @param $fname
	 */",
 "/**
	 * @param $parser
	 * @param $name
	 * @param $attribs
	 */",
 "/**
	 * @param $parser
	 * @param $name
	 * @param $attribs
	 */",
 "/** Nedersaksisch (Nedersaksisch)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Erwin
 * @author Erwin85
 * @author Jens Frank
 * @author Kaganer
 * @author Purodha
 * @author Servien
 * @author Slomox
 * @author Urhixidur
 * @author ??var Arnfj??r?? Bjarmason <avarab@gmail.com>
 * @author ???????? ????????????????
 */",
 "/**
 * Tests for IEUrlExtension::findIE6Extension
 */",
 "/**
 * @group Database
 */",
 "/**
 * Handle page deletion
 *
 * Copyright ?? 2012 Timo Tijhof
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA
 *
 * @file
 * @ingroup Actions
 * @author Timo Tijhof
 */",
 "/** Nahuatl (N??huatl)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Fluence
 * @author Kaganer
 * @author Reedy
 * @author Ricardo gs
 * @author Rob Church <robchur@gmail.com>
 * @author Te??tlalili
 */",
 "/**
	 * LEFT JOIN is expensive
	 *
	 * @return true
	 */",
 "/**
	 * @return false
	 */",
 "/**
 * A special page that list pages that contain no link to other pages
 *
 * @ingroup SpecialPage
 */",
 "/** Ignored messages, which should exist only in the English messages file. */",
 "/** Optional messages, which may be translated only if changed in the target language. */",
 "/** EXIF messages, which may be set as optional in several checks, but are generally mandatory */",
 "/** @todo document */",
 "/** @todo document */",
 "/** @todo document */",
 "/** @todo document */",
 "/**
	 * This test is *very* expensive!
	 * @todo document
	 */",
 "/** @todo document */",
 "/** @todo document */",
 "/** @todo document */",
 "/**
	 * @todo document
	 */",
 "/** @todo document */",
 "/** @todo document */",
 "/** @todo document */",
 "/** @todo document */",
 "/** @todo document */",
 "/** @todo document */",
 "/** @todo document */",
 "/** @todo document */",
 "/** @todo document */",
 "/**
 * Additional tests for UtfNormal::cleanUp() function, inclusion
 * regression checks for known problems.
 * Requires PHPUnit.
 *
 * @ingroup UtfNormal
 */",
 "/**
 * User interface for the rollback action
 *
 * @ingroup Actions
 */",
 "/** Tatar (Cyrillic script) (??????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Ajdar
 * @author Bulatbulat
 * @author Don Alessandro
 * @author Haqmar
 * @author Himiq Dzyu
 * @author KhayR
 * @author Marat Vildanov
 * @author Reedy
 * @author Rinatus
 * @author Timming
 * @author Yildiz
 * @author Zahidulla
 * @author ??????????
 * @author ????????????
 * @author ?????????? ????????????
 */",
 "/**
 * Test Case ID   : 14, 15, 16, 17 (http://www.mediawiki.org/wiki/New_installer/Test_plan)
 * Test Case Name : User selects \'Read me\' link.
 *                  User selects \'Release notes\' link.
 *                  User selects \'Copying\' link.
 *                  User selects \'Upgrading\' link.
 * Version        : MediaWiki 1.18alpha
*/",
 "/**
 * @ingroup API
 */",
 "/** Vietnamese (Ti???ng Vi???t)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Apple
 * @author Arisa
 * @author DHN
 * @author Kaganer
 * @author Minh Nguyen
 * @author Mxn
 * @author Neoneurone
 * @author Nguy???n Thanh Quang
 * @author Thaisk
 * @author Thanhtai2009
 * @author Tmct
 * @author Tr???n Nguy???n Minh Huy
 * @author Tr???n Th??? Trung
 * @author Tttrung
 * @author Vietbio
 * @author Vinhtantran
 * @author V????ng Ng??n H??
 * @author ???????? ????????????????
 */",
 "/**
 * Test Case ID   : 02 (http://www.mediawiki.org/wiki/New_installer/Test_plan)
 * Test Case Name : Install MediaWiki with the same database and the different
 *                  database prefixes(Share one database between multiple wikis).
 * Version        : MediaWiki 1.18alpha
*/",
 "/** Zazaki (Zazaki)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Asmen
 * @author Aspar
 * @author Belekvor
 * @author Erdemaslancan
 * @author Kaganer
 * @author Mirzali
 * @author Reedy
 * @author Sahim
 * @author Xoser
 */",
 "/**
	 * Displays the reCAPTCHA widget.
	 * If $this->recaptcha_error is set, it will display an error in the widget.
	 *
	 */",
 "/**
	 * Calls the library function recaptcha_check_answer to verify the users input.
	 * Sets $this->recaptcha_error if the user is incorrect.
	 * @return boolean
	 *
	 */",
 "/**
	 * Show a message asking the user to enter a captcha on edit
	 * The result will be treated as wiki text
	 *
	 * @param $action Action being performed
	 * @return string
	 */",
 "/**
 * A special page that allows users to change their preferences
 *
 * @ingroup SpecialPage
 */",
 "/** Kashmiri (Arabic script) (??????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Rk_kaul (on ks.wikipedia.org)
 */",
 "/** Estonian (Eesti)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Avjoska
 * @author Cylly1512
 * @author Hendrik
 * @author Hendrix
 * @author Jaan513
 * @author Kaganer
 * @author KaidoKikkas
 * @author KalmerE.
 * @author Ker
 * @author Kyng
 * @author Oop
 * @author Pikne
 * @author Silvar
 * @author V??rok
 * @author WikedKentaur
 * @author ???????? ????????????????
 */",
 "/**
	 * Purges the cache of a page
	 */",
 "/**
 * API interface for page purging
 * @ingroup API
 */",
 "/**
	 * The ultimate convenience function! Clean up invalid UTF-8 sequences,
	 * and convert to normal form C, canonical composition.
	 *
	 * Fast return for pure ASCII strings; some lesser optimizations for
	 * strings containing only known-good characters. Not as fast as toNFC().
	 *
	 * @param $string String: a UTF-8 string
	 * @return string a clean, shiny, normalized UTF-8 string
	 */",
 "/**
	 * Convert a UTF-8 string to normal form C, canonical composition.
	 * Fast return for pure ASCII strings; some lesser optimizations for
	 * strings containing only known-good characters.
	 *
	 * @param $string String: a valid UTF-8 string. Input is not validated.
	 * @return string a UTF-8 string in normal form C
	 */",
 "/**
	 * Convert a UTF-8 string to normal form D, canonical decomposition.
	 * Fast return for pure ASCII strings.
	 *
	 * @param $string String: a valid UTF-8 string. Input is not validated.
	 * @return string a UTF-8 string in normal form D
	 */",
 "/**
	 * Convert a UTF-8 string to normal form KC, compatibility composition.
	 * This may cause irreversible information loss, use judiciously.
	 * Fast return for pure ASCII strings.
	 *
	 * @param $string String: a valid UTF-8 string. Input is not validated.
	 * @return string a UTF-8 string in normal form KC
	 */",
 "/**
	 * Convert a UTF-8 string to normal form KD, compatibility decomposition.
	 * This may cause irreversible information loss, use judiciously.
	 * Fast return for pure ASCII strings.
	 *
	 * @param $string String: a valid UTF-8 string. Input is not validated.
	 * @return string a UTF-8 string in normal form KD
	 */",
 "/**
	 * Load the basic composition data if necessary
	 * @private
	 */",
 "/**
	 * Returns true if the string is _definitely_ in NFC.
	 * Returns false if not or uncertain.
	 * @param $string String: a valid UTF-8 string. Input is not validated.
	 * @return bool
	 */",
 "/**
	 * Returns true if the string is _definitely_ in NFC.
	 * Returns false if not or uncertain.
	 * @param $string String: a UTF-8 string, altered on output to be valid UTF-8 safe for XML.
	 */",
 "/**
	 * @param $string string
	 * @return string
	 * @private
	 */",
 "/**
	 * @param $string string
	 * @return string
	 * @private
	 */",
 "/**
	 * @param $string string
	 * @return string
	 * @private
	 */",
 "/**
	 * @param $string string
	 * @return string
	 * @private
	 */",
 "/**
	 * Perform decomposition of a UTF-8 string into either D or KD form
	 * (depending on which decomposition map is passed to us).
	 * Input is assumed to be *valid* UTF-8. Invalid code will break.
	 * @private
	 * @param $string String: valid UTF-8 string
	 * @param $map Array: hash of expanded decomposition map
	 * @return string a UTF-8 string decomposed, not yet normalized (needs sorting)
	 */",
 "/**
	 * Sorts combining characters into canonical order. This is the
	 * final step in creating decomposed normal forms D and KD.
	 * @private
	 * @param $string String: a valid, decomposed UTF-8 string. Input is not validated.
	 * @return string a UTF-8 string with combining characters sorted in canonical order
	 */",
 "/**
	 * Produces canonically composed sequences, i.e. normal form C or KC.
	 *
	 * @private
	 * @param $string String: a valid UTF-8 string in sorted normal form D or KD. Input is not validated.
	 * @return string a UTF-8 string with canonical precomposed characters used where possible
	 */",
 "/**
	 * This is just used for the benchmark, comparing how long it takes to
	 * interate through a string without really doing anything of substance.
	 * @param $string string
	 * @return string
	 */",
 "/**
	 * Function to replace some characters that we don\'t want
	 * but most of the native normalize functions keep.
	 *
	 * @param $string String The string
	 * @return String String with the character codes replaced.
	 */",
 "/**
 * Unicode normalization routines for working with UTF-8 strings.
 * Currently assumes that input strings are valid UTF-8!
 *
 * Not as fast as I\'d like, but should be usable for most purposes.
 * UtfNormal::toNFC() will bail early if given ASCII text or text
 * it can quickly deterimine is already normalized.
 *
 * All functions can be called static.
 *
 * See description of forms at http://www.unicode.org/reports/tr15/
 *
 * @ingroup UtfNormal
 */",
 "/**
	 * Constructor
	 *
	 * @param Title $title Associated title
	 * @param array $params Job parameters
	 */",
 "/**
	 * Execute the job
	 *
	 * @return bool
	 */",
 "/**
 * Custom job to perform updates on tables in busier environments
 */",
 "/**
 * Sample test suite. 
 * Two ways to configure MW for these tests
 * 1) If you are running multiple test suites, add the following in LocalSettings.php
 * require_once(\"tests/selenium/SimpleSeleniumConfig.php\");
 * $wgSeleniumTestConfigs[\'SimpleSeleniumTestSuite\'] = \'SimpleSeleniumConfig::getSettings\';
 * OR
 * 2) Add the following to your Localsettings.php
 * $wgDefaultSkin = \'chick\';
 */",
 "/**
	 * Clean up the temporary file used to store the selenium settings.
	 */",
 "/**
	 * @expectedException MWException
	 * @group SeleniumFramework
	 */",
 "/**
	 * @expectedException MWException
	 * @group SeleniumFramework
	 */",
 "/**
	 * @group SeleniumFramework
	 */",
 "/**
	 * @group SeleniumFramework
	 * @dataProvider sampleConfigs
	 */",
 "/**
	 * create a temp file and write text to it.
	 * @param $testToWrite the text to write to the temp file
	 */",
 "/**
	 * Returns an array containing:
	 * 	The contents of the selenium cingiguration ini file
	 *  The expected selenium configuration array that getSeleniumSettings should return
	 *  The expected available browsers array that getSeleniumSettings should return
	 *  The expected test suites arrya that getSeleniumSettings should return
	 */",
 "/**
	 * Callback function for each revision, turn into HTML and save
	 * @param $rev Revision
	 */",
 "/** creates a title object and its article object */",
 "/** cleanup title object and its article object */",
 "/**
	 * @depends testImplementsGetMagic
	 */",
 "/**
	 * @depends testImplementsSetMagic
	 */",
 "/**
	 * Checks for the existence of the backwards compatibility static functions (forwarders to WikiPage class)
	 */",
 "/**
 * Test Case ID   : 04 (http://www.mediawiki.org/wiki/New_installer/Test_plan)
 * Test Case Name : Install MediaWiki with different Database accounts for web access.
 * Version        : MediaWiki 1.18alpha
*/",
 "/**
 * A special page that lists tags for edits
 *
 * @ingroup SpecialPage
 */",
 "/**
 * Standard output handler for use with ob_start
 * 
 * @param $s string
 * 
 * @return string
 */",
 "/**
 * Get the \"file extension\" that some client apps will estimate from
 * the currently-requested URL.
 * This isn\'t on WebRequest because we need it when things aren\'t initialized
 * @private
 *
 * @return string
 */",
 "/**
 * Handler that compresses data with gzip if allowed by the Accept header.
 * Unlike ob_gzhandler, it works for HEAD requests too.
 * 
 * @param $s string
 *
 * @return string
 */",
 "/**
 * Mangle flash policy tags which open up the site to XSS attacks.
 *
 * @param $s string
 *
 * @return string
 */",
 "/**
 * Add a Content-Length header if possible. This makes it cooperate with squid better.
 *
 * @param $length int
 */",
 "/**
 * Replace the output with an error if the HTML is not valid
 *
 * @param $s string
 *
 * @return string
 */",
 "/** Mongolian (????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Chinneeb
 * @author E.shijir
 * @author Kaganer
 * @author Meno25
 * @author Wisdom
 * @author ???????? ????????????????
 */",
 "/** Sichuan Yi (??????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Bi??hai
 */",
 "/**
	 * @dataProvider provideNormaliseParams
	 */",
 "/**
	 * Stub. If a test needs to add additional data to the database, it should
	 * implement this method and do so
	 */",
 "/**
	 * Empty all tables so they can be repopulated for tests
	 */",
 "/**
	 * Don\'t throw a warning if $function is deprecated and called later
	 *
	 * @param $function String
	 * @return null
	 */",
 "/** Chinese (Taiwan) (?????????(??????)???)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Alexsh
 * @author Andrew971218
 * @author BobChao
 * @author Ianbu
 * @author Jidanni
 * @author Mark85296341
 * @author Pbdragonwang
 * @author PhiLiP
 * @author Roc michael
 * @author Shizhao
 * @author Urhixidur
 * @author Wong128hk
 * @author Zerng07
 * @author ???????? ????????????????
 */",
 "/**
	 * @return PPFrame_Hash
	 */",
 "/**
	 * @param $args
	 * @return PPCustomFrame_Hash
	 */",
 "/**
	 * @param $values array
	 * @return PPNode_Hash_Array
	 */",
 "/**
	 * Preprocess some wikitext and return the document tree.
	 * This is the ghost of Parser::replace_variables().
	 *
	 * @param $text String: the text to parse
	 * @param $flags Integer: bitwise combination of:
	 *          Parser::PTD_FOR_INCLUSION    Handle <noinclude>/<includeonly> as if the text is being
	 *                                     included. Default is to assume a direct page view.
	 *
	 * The generated DOM tree must depend only on the input text and the flags.
	 * The DOM tree must be the same in OT_HTML and OT_WIKI mode, to avoid a regression of bug 4899.
	 *
	 * Any flag added to the $flags parameter here, or any other parameter liable to cause a
	 * change in the DOM tree for a given text, must be passed through the section identifier
	 * in the section edit link and thus back to extractSections().
	 *
	 * The output of this function is currently only cached in process memory, but a persistent
	 * cache may be implemented at a later date which takes further advantage of these strict
	 * dependency requirements.
	 *
	 * @return PPNode_Hash_Tree
	 */",
 "/**
 * Differences from DOM schema:
 *   * attribute nodes are children
 *   * <h> nodes that aren\'t at the top are replaced with <possible-h>
 * @ingroup Parser
 */",
 "/**
 * Stack class to help Preprocessor::preprocessToObj()
 * @ingroup Parser
 */",
 "/**
	 * Get the accumulator that would result if the close is not found.
	 *
	 * @return PPDAccum_Hash
	 */",
 "/**
 * @ingroup Parser
 */",
 "/**
 * @ingroup Parser
 */",
 "/**
	 * Append a string literal
	 */",
 "/**
	 * Append a PPNode
	 */",
 "/**
	 * Append a tree node with text contents
	 */",
 "/**
	 * Append a PPAccum_Hash
	 * Takes over ownership of the nodes in the source argument. These nodes may
	 * subsequently be modified, especially nextSibling.
	 */",
 "/**
 * @ingroup Parser
 */",
 "/**
	 * Construct a new preprocessor frame.
	 * @param $preprocessor Preprocessor: the parent preprocessor
	 */",
 "/**
	 * Create a new child frame
	 * $args is optionally a multi-root PPNode or array containing the template arguments
	 *
	 * @param $args PPNode_Hash_Array|array
	 * @param $title Title|false
	 *
	 * @return PPTemplateFrame_Hash
	 */",
 "/**
	 * @throws MWException
	 * @param $root
	 * @param $flags int
	 * @return string
	 */",
 "/**
	 * @param $sep
	 * @param $flags
	 * @return string
	 */",
 "/**
	 * Implode with no flags specified
	 * This previously called implodeWithFlags but has now been inlined to reduce stack depth
	 * @return string
	 */",
 "/**
	 * Makes an object that, when expand()ed, will be the same as one obtained
	 * with implode()
	 *
	 * @return PPNode_Hash_Array
	 */",
 "/**
	 * Virtual implode with brackets
	 *
	 * @return PPNode_Hash_Array
	 */",
 "/**
	 * @param $level bool
	 * @return array|bool|String
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * Returns true if there are no arguments in this frame
	 *
	 * @return bool
	 */",
 "/**
	 * @param $name
	 * @return bool
	 */",
 "/**
	 * Returns true if the infinite loop check is OK, false if a loop is detected
	 *
	 * @param $title Title
	 *
	 * @return bool
	 */",
 "/**
	 * Return true if the frame is a template frame
	 *
	 * @return bool
	 */",
 "/**
	 * Get a title of frame
	 *
	 * @return Title
	 */",
 "/**
 * An expansion frame, used as a context to expand the result of preprocessToObj()
 * @ingroup Parser
 */",
 "/**
	 * @param $preprocessor
	 * @param $parent
	 * @param $numberedArgs array
	 * @param $namedArgs array
	 * @param $title Title
	 */",
 "/**
	 * Returns true if there are no arguments in this frame
	 *
	 * @return bool
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * @param $index
	 * @return array|bool
	 */",
 "/**
	 * @param $name
	 * @return bool
	 */",
 "/**
	 * @param $name
	 * @return array|bool
	 */",
 "/**
	 * Return true if the frame is a template frame
	 *
	 * @return bool
	 */",
 "/**
 * Expansion frame with template arguments
 * @ingroup Parser
 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * @param $index
	 * @return bool
	 */",
 "/**
 * Expansion frame with custom arguments
 * @ingroup Parser
 */",
 "/**
	 * @param $name
	 * @param $text
	 * @return PPNode_Hash_Tree
	 */",
 "/**
	 * @return PPNode_Hash_Array
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * @param  $i
	 * @return bool
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * Split a <part> node into an associative array containing:
	 *    name          PPNode name
	 *    index         String index
	 *    value         PPNode value
	 *
	 * @return array
	 */",
 "/**
	 * Split an <ext> node into an associative array containing name, attr, inner and close
	 * All values in the resulting array are PPNodes. Inner and close are optional.
	 *
	 * @return array
	 */",
 "/**
	 * Split an <h> node
	 *
	 * @return array
	 */",
 "/**
	 * Split a <template> or <tplarg> node
	 *
	 * @return array
	 */",
 "/**
 * @ingroup Parser
 */",
 "/**
 * @ingroup Parser
 */",
 "/**
 * @ingroup Parser
 */",
 "/**
 * @ingroup Parser
 */",
 "/**
	 * Is this report expensive, i.e should it be cached?
	 *
	 * @return Boolean
	 */",
 "/**
	 * Is there a feed available?
	 *
	 * @return Boolean
	 */",
 "/**
	 * Sort the results in descending order?
	 *
	 * @return Boolean
	 */",
 "/**
	 * Pre-cache page existence to speed up link generation
	 *
	 * @param $db Database connection
	 * @param $res ResultWrapper
	 */",
 "/**
	 * Format a result row
	 *
	 * @param $skin Skin to use for UI elements
	 * @param $result Result row
	 * @return String
	 */",
 "/**
	 * Make a \"what links here\" link for a given title
	 *
	 * @param $title Title to make the link for
	 * @param $result Result row
	 * @return String
	 */",
 "/**
 * Special page lists templates with a large number of
 * transclusion links, i.e. \"most used\" templates
 *
 * @ingroup SpecialPage
 */",
 "/** Crimean Turkish (Latin script) (???Q??r??mtatarca (Latin)???)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author AlefZet
 * @author Don Alessandro
 * @author Urhixidur
 */",
 "/** Sranan Tongo (Sranantongo)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Adfokati
 * @author Jordi
 * @author Kaganer
 * @author Ooswesthoesbes
 * @author Stretsh
 * @author Urhixidur
 */",
 "/**
	 * Override parent method to make sure to make sure the repo\'s DB is used
	 * which may not necesarilly be the same as the local DB.
	 *
	 * TODO: allow querying non-local repos.
	 * @return DatabaseBase
	 */",
 "/**
	 * @param $resultPageSet ApiPageSet
	 * @return void
	 */",
 "/**
	 * @param $resultPageSet ApiPageSet
	 * @return void
	 */",
 "/**
 * Query module to enumerate all available pages.
 *
 * @ingroup API
 */",
 "/**
 * @ingroup API
 */",
 "/**
	 * Perform an HTTP request
	 *
	 * @param $method String: HTTP method. Usually GET/POST
	 * @param $url String: full URL to act on. If protocol-relative, will be expanded to an http:// URL
	 * @param $options Array: options to pass to MWHttpRequest object.
	 *	Possible keys for the array:
	 *    - timeout             Timeout length in seconds
	 *    - postData            An array of key-value pairs or a url-encoded form data
	 *    - proxy               The proxy to use.
	 *                          Will use $wgHTTPProxy (if set) otherwise.
	 *    - noProxy             Override $wgHTTPProxy (if set) and don\'t use any proxy at all.
	 *    - sslVerifyHost       (curl only) Verify hostname against certificate
	 *    - sslVerifyCert       (curl only) Verify SSL certificate
	 *    - caInfo              (curl only) Provide CA information
	 *    - maxRedirects        Maximum number of redirects to follow (defaults to 5)
	 *    - followRedirects     Whether to follow redirects (defaults to false).
	 *		                    Note: this should only be used when the target URL is trusted,
	 *		                    to avoid attacks on intranet services accessible by HTTP.
	 *    - userAgent           A user agent, if you want to override the default
	 *                          MediaWiki/$wgVersion
	 * @return Mixed: (bool)false on failure or a string on success
	 */",
 "/**
	 * Simple wrapper for Http::request( \'GET\' )
	 * @see Http::request()
	 *
	 * @param $url
	 * @param $timeout string
	 * @param $options array
	 * @return string
	 */",
 "/**
	 * Simple wrapper for Http::request( \'POST\' )
	 * @see Http::request()
	 *
	 * @param $url
	 * @param $options array
	 * @return string
	 */",
 "/**
	 * Check if the URL can be served by localhost
	 *
	 * @param $url String: full url to check
	 * @return Boolean
	 */",
 "/**
	 * A standard user-agent we can use for external requests.
	 * @return String
	 */",
 "/**
	 * Checks that the given URI is a valid one. Hardcoding the
	 * protocols, because we only want protocols that both cURL
	 * and php support.
	 *
	 * file:// should not be allowed here for security purpose (r67684)
	 *
	 * @fixme this is wildly inaccurate and fails to actually check most stuff
	 *
	 * @param $uri Mixed: URI to check for validity
	 * @return Boolean
	 */",
 "/**
 * Various HTTP related functions
 * @ingroup HTTP
 */",
 "/**
	 * @param $url String: url to use. If protocol-relative, will be expanded to an http:// URL
	 * @param $options Array: (optional) extra params to pass (see Http::request())
	 */",
 "/**
	 * Simple function to test if we can make any sort of requests at all, using
	 * cURL or fopen()
	 * @return bool
	 */",
 "/**
	 * Generate a new request object
	 * @param $url String: url to use
	 * @param $options Array: (optional) extra params to pass (see Http::request())
	 * @return CurlHttpRequest|PhpHttpRequest
	 * @see MWHttpRequest::__construct
	 */",
 "/**
	 * Get the body, or content, of the response to the request
	 *
	 * @return String
	 */",
 "/**
	 * Set the parameters of the request

	 * @param $args Array
	 * @todo overload the args param
	 */",
 "/**
	 * Take care of setting up the proxy
	 * (override in subclass)
	 *
	 * @return String
	 */",
 "/**
	 * Set the refererer header
	 */",
 "/**
	 * Set the user agent
	 * @param $UA string
	 */",
 "/**
	 * Set an arbitrary header
	 * @param $name
	 * @param $value
	 */",
 "/**
	 * Get an array of the headers
	 * @return array
	 */",
 "/**
	 * Set a read callback to accept data read from the HTTP request.
	 * By default, data is appended to an internal buffer which can be
	 * retrieved through $req->getContent().
	 *
	 * To handle data as it comes in -- especially for large files that
	 * would not fit in memory -- you can instead set your own callback,
	 * in the form function($resource, $buffer) where the first parameter
	 * is the low-level resource being read (implementation specific),
	 * and the second parameter is the data buffer.
	 *
	 * You MUST return the number of bytes handled in the buffer; if fewer
	 * bytes are reported handled than were passed to you, the HTTP fetch
	 * will be aborted.
	 *
	 * @param $callback Callback
	 */",
 "/**
	 * A generic callback to read the body of the response from a remote
	 * server.
	 *
	 * @param $fh handle
	 * @param $content String
	 */",
 "/**
	 * Take care of whatever is necessary to perform the URI request.
	 *
	 * @return Status
	 */",
 "/**
	 * Parses the headers, including the HTTP status code and any
	 * Set-Cookie headers.  This function expectes the headers to be
	 * found in an array in the member variable headerList.
	 *
	 * @return nothing
	 */",
 "/**
	 * Sets HTTPRequest status member to a fatal value with the error
	 * message if the returned integer value of the status code was
	 * not successful (< 300) or a redirect (>=300 and < 400).  (see
	 * RFC2616, section 10,
	 * http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html for a
	 * list of status codes.)
	 *
	 * @return nothing
	 */",
 "/**
	 * Get the integer value of the HTTP status code (e.g. 200 for \"200 Ok\")
	 * (see RFC2616, section 10, http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html
	 * for a list of status codes.)
	 *
	 * @return Integer
	 */",
 "/**
	 * Returns true if the last status code was a redirect.
	 *
	 * @return Boolean
	 */",
 "/**
	 * Returns an associative array of response headers after the
	 * request has been executed.  Because some headers
	 * (e.g. Set-Cookie) can appear more than once the, each value of
	 * the associative array is an array of the values given.
	 *
	 * @return Array
	 */",
 "/**
	 * Returns the value of the given response header.
	 *
	 * @param $header String
	 * @return String
	 */",
 "/**
	 * Tells the MWHttpRequest object to use this pre-loaded CookieJar.
	 *
	 * @param $jar CookieJar
	 */",
 "/**
	 * Returns the cookie jar in use.
	 *
	 * @return CookieJar
	 */",
 "/**
	 * Sets a cookie.  Used before a request to set up any individual
	 * cookies.	 Used internally after a request to parse the
	 * Set-Cookie headers.
	 * @see Cookie::set
	 * @param $name
	 * @param $value null
	 * @param $attr null
	 */",
 "/**
	 * Parse the cookies in the response headers and store them in the cookie jar.
	 */",
 "/**
	 * Returns the final URL after all redirections.
	 *
	 * Relative values of the \"Location\" header are incorrect as stated in RFC, however they do happen and modern browsers support them.
	 * This function loops backwards through all locations in order to build the proper absolute URI - Marooned at wikia-inc.com
	 *
	 * Note that the multiple Location: headers are an artifact of CURL -- they
	 * shouldn\'t actually get returned this way. Rewrite this when bug 29232 is
	 * taken care of (high-level redirect handling rewrite).
	 *
	 * @return string
	 */",
 "/**
	 * Returns true if the backend can follow redirects. Overridden by the
	 * child classes.
	 * @return bool
	 */",
 "/**
 * This wrapper class will call out to curl (if available) or fallback
 * to regular PHP if necessary for handling internal HTTP requests.
 *
 * Renamed from HttpRequest to MWHttpRequest to avoid conflict with
 * PHP\'s HTTP extension.
 */",
 "/**
	 * @param $fh
	 * @param $content
	 * @return int
	 */",
 "/**
	 * @return bool
	 */",
 "/**
 * MWHttpRequest implemented using internal curl compiled into PHP
 */",
 "/**
	 * @param $url string
	 * @return string
	 */",
 "/**
	 * @param $context ResourceLoaderContext
	 * @return array|int|Mixed
	 */",
 "/**
	 * @param $context ResourceLoaderContext
	 * @return array
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return array
	 */",
 "/**
 * Module for user preference customizations
 */",
 "/** Moroccan Spoken Arabic (Ma??ribi)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Daoudata
 * @author Enzoreg
 * @author Kaganer
 * @author MassNssen
 * @author Zanatos
 * @author ??????????
 */",
 "/** Validate a captcha response */",
 "/**
 * QuestyCaptcha class
 *
 * @file
 * @author Benjamin Lees <emufarmers@gmail.com>
 * @ingroup Extensions
 */",
 "/**
 * The least sophisticated profiler output class possible, view your source! :)
 *
 * Put the following 2 lines in StartProfiler.php:
 *
 * $wgProfiler[\'class\'] = \'ProfilerSimpleText\';
 * $wgProfiler[\'visible\'] = true;
 *
 * @ingroup Profiler
 */",
 "/**
	 * @param $res ResultWrapper A SQL result including at least page_namespace and
	 *   page_title -- also can have page_id, page_len, page_is_redirect,
	 *   page_latest (if those will be used).  See Title::newFromRow.
	 * @return TitleArrayFromResult
	 */",
 "/**
	 * @param $res ResultWrapper
	 * @return TitleArrayFromResult
	 */",
 "/**
 * The TitleArray class only exists to provide the newFromResult method at pre-
 * sent.
 */",
 "/**
	 * @param $row ResultWrapper
	 * @return void
	 */",
 "/**
	 * @return int
	 */",
 "/**
	 * @return bool
	 */",
 "/** Kinaray-a (Kinaray-a)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Harvzsf
 * @author Joebertj
 * @author Jose77
 * @author Oxyzen
 * @author RonaldPanaligan
 */",
 "/** Ingush (???????????????? ??al??aj)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Amire80
 * @author Sapral Mikail
 * @author Tagir
 */",
 "/**
	 * @param $count int
	 * @param $forms array
	 * @return string
	 */",
 "/** Manx (Gaelg)
 *
 * @ingroup Language
 *
 * @author Niklas Laxstr??m
 */",
 "/**
	 * Main execution point
	 *
	 * @param $par String title fragment
	 */",
 "/**
 * A special page that lists existing blocks
 *
 * @ingroup SpecialPage
 */",
 "/**
	 * @param $page SpecialPage
	 * @param $conds Array
	 */",
 "/** @var $row object */",
 "/**
	 * Do a LinkBatch query to minimise database load when generating all these links
	 * @param $result
	 */",
 "/**
	 * Basically don\'t do any validation. If it\'s a number that\'s fine. Also,
	 * add it to the list if it\'s not there already
	 *
	 * @param $value
	 * @param $alldata
	 * @return bool
	 */",
 "/**
 * Items per page dropdown. Essentially a crap workaround for bug 32603.
 *
 * @todo Do not release 1.19 with this.
 */",
 "/**
	 * Callback function to output a restriction
	 *
	 * @return string
	 */",
 "/**
	 * @param $namespace Integer:
	 * @param $type string
	 * @param $level string
	 * @private
	 */",
 "/**
	 * Prepare the namespace filter drop-down; standard namespace
	 * selector, sans the MediaWiki namespace
	 *
	 * @param $namespace Mixed: pre-select namespace
	 * @return string
	 */",
 "/**
	 * @return string Formatted HTML
	 * @private
	 */",
 "/**
 * A special page that list protected titles from creation
 *
 * @ingroup SpecialPage
 */",
 "/**
	 * @return Title
	 */",
 "/**
	 * @return array
	 */",
 "/**
 * @todo document
 * @ingroup Pager
 */",
 "/**
	 * Get the width of the output box
	 */",
 "/**
	 * Get the height of the output box
	 */",
 "/**
	 * @return string The thumbnail URL
	 */",
 "/**
	 * @return string|false The permanent thumbnail storage path
	 */",
 "/**
	 * @param $storagePath string The permanent storage path
	 * @return void
	 */",
 "/**
	 * Fetch HTML for this transform output
	 *
	 * @param $options array Associative array of options. Boolean options
	 *     should be indicated with a value of true for true, and false or
	 *     absent for false.
	 *
	 *     alt          Alternate text or caption
	 *     desc-link    Boolean, show a description link
	 *     file-link    Boolean, show a file download link
	 *     custom-url-link    Custom URL to link to
	 *     custom-title-link  Custom Title object to link to
	 *     valign       vertical-align property, if the output is an inline element
	 *     img-class    Class applied to the <img> tag, if there is such a tag
	 *
	 * For images, desc-link and file-link are implemented as a click-through. For
	 * sounds and videos, they may be displayed in other ways.
	 *
	 * @return string
	 */",
 "/**
	 * This will be overridden to return true in error classes
	 */",
 "/**
	 * Check if an output thumbnail file actually exists.
	 * This will return false if there was an error, the
	 * thumbnail is to be handled client-side only, or if
	 * transformation was deferred via TRANSFORM_LATER.
	 * 
	 * @return Bool
	 */",
 "/**
	 * Check if the output thumbnail is the same as the source.
	 * This can occur if the requested width was bigger than the source.
	 *
	 * @return Bool
	 */",
 "/**
	 * Get the path of a file system copy of the thumbnail.
	 * Callers should never write to this path.
	 *
	 * @return string|false Returns false if there isn\'t one
	 */",
 "/**
	 * Stream the file if there were no errors
	 *
	 * @param $headers Array Additional HTTP headers to send on success
	 * @return Bool success
	 */",
 "/**
	 * Wrap some XHTML text in an anchor tag with the given attributes
	 *
	 * @param $linkAttribs array
	 * @param $contents string
	 *
	 * @return string
	 */",
 "/**
	 * @param $title string
	 * @param $params array
	 * @return array
	 */",
 "/**
 * Base class for the output of MediaHandler::doTransform() and File::transform().
 *
 * @ingroup Media
 */",
 "/**
	 * Get a thumbnail object from a file and parameters.
	 * If $path is set to null, the output file is treated as a source copy.
	 * If $path is set to false, no output file will be created.
	 * 
	 * @param $file File object
	 * @param $url String: URL path to the thumb
	 * @param $width Integer: file\'s width
	 * @param $height Integer: file\'s height
	 * @param $path String|false|null: filesystem path to the thumb
	 * @param $page Integer: page number, for multipage files
	 * @private
	 */",
 "/**
	 * Return HTML <img ... /> tag for the thumbnail, will include
	 * width and height attributes and a blank alt text (as required).
	 *
	 * @param $options array Associative array of options. Boolean options
	 *     should be indicated with a value of true for true, and false or
	 *     absent for false.
	 *
	 *     alt          HTML alt attribute
	 *     title        HTML title attribute
	 *     desc-link    Boolean, show a description link
	 *     file-link    Boolean, show a file download link
	 *     valign       vertical-align property, if the output is an inline element
	 *     img-class    Class applied to the \<img\> tag, if there is such a tag
	 *     desc-query   String, description link query params
	 *     custom-url-link    Custom URL to link to
	 *     custom-title-link  Custom Title object to link to
	 *     custom target-link Value of the target attribute, for custom-target-link
	 *
	 * For images, desc-link and file-link are implemented as a click-through. For
	 * sounds and videos, they may be displayed in other ways.
	 *
	 * @return string
	 */",
 "/**
 * Media transform output for images
 *
 * @ingroup Media
 */",
 "/**
 * Basic media transform error class
 *
 * @ingroup Media
 */",
 "/**
 * Shortcut class for parameter validation errors
 *
 * @ingroup Media
 */",
 "/**
	 * Fetch the tokens for the current user.
	 *
	 * @param $context ResourceLoaderContext: Context object
	 * @return Array: List of tokens keyed by token type
	 */",
 "/**
	 * @param $context ResourceLoaderContext
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
 * Module for user tokens
 */",
 "/**
	 * Remove the dummy uploads directory
	 */",
 "/**
	 * Delete the specified files, if they exist.
	 *
	 * @param $files Array: full paths to files to delete.
	 */",
 "/**
	 * Delete the specified directories, if they exist. Must be empty.
	 *
	 * @param $dirs Array: full paths to directories to delete.
	 */",
 "/**
	 * Create a dummy uploads directory which will contain a couple
	 * of files in order to pass existence tests.
	 *
	 * @return String: the directory
	 */",
 "/**
	 * @param $langobj Language
	 * @param $maincode string
	 * @param $variants array
	 * @param $variantfallbacks array
	 * @param $flags array
	 */",
 "/**
	 * rules should be defined as -{ekavian | iyekavian-} -or-
	 * -{code:text | code:text | ...}-
	 *
	 * update: delete all rule parsing because it\'s not used
	 *      currently, and just produces a couple of bugs
	 *
	 * @param $rule string
	 * @param $flags array
	 * @return array
	 */",
 "/**
	 * A function wrapper:
	 *  - if there is no selected variant, leave the link
	 *    names as they were
	 *  - do not try to find variants for usernames
	 *
	 * @param $link string
	 * @param $nt Title
	 * @param bool $ignoreOtherCond
	 */",
 "/**
	 * An ugly function wrapper for parsing Image titles
	 * (to prevent image name conversion)
	 *
	 * @param $text string
	 * @param $toVariant bool
	 *
	 * @return string
	 */",
 "/**
	 *  It translates text into variant
	 *
	 * @param $text string
	 * @param $toVariant string
	 *
	 * @return string
	 */",
 "/**
	 * @param $text string
	 * @param $toVariant string
	 * @return mixed|string
	 */",
 "/**
	 * We want our external link captions to be converted in variants,
	 * so we return the original text instead -{$text}-, except for URLs
	 *
	 * @param $text string
	 * @param $noParse string|bool
	 *
	 * @return string
	 */",
 "/**
	 * @param $key string
	 * @return String
	 */",
 "/** Kazakh (??????????????)
 * converter routines
 *
 * @ingroup Language
 */",
 "/**
	 * Work around for right-to-left direction support in kk-arab and kk-cn
	 *
	 * @return bool
	 */",
 "/**
	 * It fixes issue with ucfirst for transforming \'i\' to \'??\'
	 *
	 * @param $string string
	 *
	 * @return string
	 */",
 "/**
	 * It fixes issue with  lcfirst for transforming \'I\' to \'??\'
	 *
	 * @param $string string
	 *
	 * @return string
	 */",
 "/**
	 * @param $word string
	 * @param $case string
	 * @return string
	 */",
 "/**
 * class that handles Cyrillic, Latin and Arabic scripts for Kazakh
 * right now it only distinguish kk_cyrl, kk_latn, kk_arab and kk_kz, kk_tr, kk_cn.
 *
 * @ingroup Language
 */",
 "/** Initializes the MimeMagic object. This is called by MimeMagic::singleton().
	 *
	 * This constructor parses the mime.types and mime.info files and build internal mappings.
	 */",
 "/**
	 * Get an instance of this class
	 * @return MimeMagic
	 */",
 "/** 
	 * Returns a list of file extensions for a given mime type as a space 
	 * separated string or null if the mime type was unrecognized. Resolves
	 * mime type aliases.
	 * 
	 * @param $mime string
	 * @return string|null
	 */",
 "/** 
	 * Returns a list of mime types for a given file extension as a space 
	 * separated string or null if the extension was unrecognized.
	 * 
	 * @param $ext string
	 * @return string|null
	 */",
 "/** 
	 * Returns a single mime type for a given file extension or null if unknown.
	 * This is always the first type from the list returned by getTypesForExtension($ext).
	 * 
	 * @param $ext string
	 * @return string|null
	 */",
 "/** 
	 * Tests if the extension matches the given mime type. Returns true if a 
	 * match was found, null if the mime type is unknown, and false if the 
	 * mime type is known but no matches where found.
	 * 
	 * @param $extension string
	 * @param $mime string
	 * @return bool|null
	 */",
 "/** 
	 * Returns true if the mime type is known to represent an image format 
	 * supported by the PHP GD library.
	 *
	 * @param $mime string
	 * 
	 * @return bool
	 */",
 "/**
	 * Returns true if the extension represents a type which can
	 * be reliably detected from its content. Use this to determine
	 * whether strict content checks should be applied to reject
	 * invalid uploads; if we can\'t identify the type we won\'t
	 * be able to say if it\'s invalid.
	 *
	 * @todo Be more accurate when using fancy mime detector plugins;
	 *       right now this is the bare minimum getimagesize() list.
	 * @return bool
	 */",
 "/** 
	 * Improves a mime type using the file extension. Some file formats are very generic,
	 * so their mime type is not very meaningful. A more useful mime type can be derived 
	 * by looking at the file extension. Typically, this method would be called on the 
	 * result of guessMimeType().
	 * 
	 * Currently, this method does the following:
	 *
	 * If $mime is \"unknown/unknown\" and isRecognizableExtension( $ext ) returns false,
	 * return the result of guessTypesForExtension($ext). 
	 *
	 * If $mime is \"application/x-opc+zip\" and isMatchingExtension( $ext, $mime )
	 * gives true, return the result of guessTypesForExtension($ext). 
	 *
	 * @param $mime String: the mime type, typically guessed from a file\'s content.
	 * @param $ext String: the file extension, as taken from the file name
	 *
	 * @return string the mime type
	 */",
 "/** 
	 * Mime type detection. This uses detectMimeType to detect the mime type 
	 * of the file, but applies additional checks to determine some well known 
	 * file formats that may be missed or misinterpreter by the default mime 
	 * detection (namely XML based formats like XHTML or SVG, as well as ZIP 
	 * based formats like OPC/ODF files).
	 *
	 * @param $file String: the file to check
	 * @param $ext Mixed: the file extension, or true (default) to extract it from the filename.
	 *             Set it to false to ignore the extension. DEPRECATED! Set to false, use 
	 *             improveTypeFromExtension($mime, $ext) later to improve mime type.
	 *
	 * @return string the mime type of $file
	 */",
 "/**
		 * look for XML formats (XHTML and SVG)
		 */",
 "/**
		 * look for shell scripts
		 */",
 "/**
	 * Guess the mime type from the file contents.
	 *
	 * @param string $file
	 * @param mixed $ext
	 */",
 "/**
	 * Detect application-specific file type of a given ZIP file from its
	 * header data.  Currently works for OpenDocument and OpenXML types...
	 * If can\'t tell, returns \'application/zip\'.
	 *
	 * @param $header String: some reasonably-sized chunk of file header
	 * @param $tail   String: the tail of the file
	 * @param $ext Mixed: the file extension, or true to extract it from the filename.
	 *             Set it to false (default) to ignore the extension. DEPRECATED! Set to false, 
	 *             use improveTypeFromExtension($mime, $ext) later to improve mime type.
	 *
	 * @return string
	 */",
 "/** 
	 * Internal mime type detection. Detection is done using an external 
	 * program, if $wgMimeDetectorCommand is set. Otherwise, the fileinfo 
	 * extension and mime_content_type are tried (in this order), if they 
	 * are available. If the dections fails and $ext is not false, the mime 
	 * type is guessed from the file extension, using guessTypesForExtension.
	 * 
	 * If the mime type is still unknown, getimagesize is used to detect the 
	 * mime type if the file is an image. If no mime type can be determined, 
	 * this function returns \'unknown/unknown\'.
	 *
	 * @param $file String: the file to check
	 * @param $ext Mixed: the file extension, or true (default) to extract it from the filename.
	 *             Set it to false to ignore the extension. DEPRECATED! Set to false, use 
	 *             improveTypeFromExtension($mime, $ext) later to improve mime type.
	 *
	 * @return string the mime type of $file
	 */",
 "/**
	 * Determine the media type code for a file, using its mime type, name and
	 * possibly its contents.
	 *
	 * This function relies on the findMediaType(), mapping extensions and mime
	 * types to media types.
	 *
	 * @todo analyse file if need be
	 * @todo look at multiple extension, separately and together.
	 *
	 * @param $path String: full path to the image file, in case we have to look at the contents
	 *        (if null, only the mime type is used to determine the media type code).
	 * @param $mime String: mime type. If null it will be guessed using guessMimeType.
	 *
	 * @return (int?string?) a value to be used with the MEDIATYPE_xxx constants.
	 */",
 "/** 
	 * Returns a media code matching the given mime type or file extension.
	 * File extensions are represented by a string starting with a dot (.) to
	 * distinguish them from mime types.
	 *
	 * This funktion relies on the mapping defined by $this->mMediaTypes
	 * @access private
	 */",
 "/**
	 * Get the MIME types that various versions of Internet Explorer would 
	 * detect from a chunk of the content.
	 *
	 * @param $fileName String: the file name (unused at present)
	 * @param $chunk String: the first 256 bytes of the file
	 * @param $proposed String: the MIME type proposed by the server
	 */",
 "/**
	 * Get a cached instance of IEContentAnalyzer
	 *
	 * @return IEContentAnalyzer
	 */",
 "/**
 * Implements functions related to mime types such as detection and mapping to
 * file extension.
 *
 * Instances of this class are stateles, there only needs to be one global instance
 * of MimeMagic. Please use MimeMagic::singleton() to get that instance.
 */",
 "/**
 * Database independant search index updater
 *
 * @ingroup Search
 */",
 "/**
 * Placeholder class
 *
 * @ingroup Search
 */",
 "/** Tajik (????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 * @comment falls back to Tajik (Cyrillic)
 *
 */",
 "/**
	 * We also use this test to test padding bytes don\'t
	 * screw stuff up
	 *
	 * @param $file filename
	 *
	 * @dataProvider dataUtf8Comment
	 */",
 "/** The file is iso-8859-1, but it should get auto converted */",
 "/** Comment values that are non-textual (random binary junk) should not be shown.
	 * The example test file has a comment with a 0x5 byte in it which is a control character
	 * and considered binary junk for our purposes.
	 */",
 "/**
 * @todo Could use a test of extended XMP segments. Hard to find programs that
 * create example files, and creating my own in vim propbably wouldn\'t
 * serve as a very good \"test\". (Adobe photoshop probably creates such files
 * but it costs money). The implementation of it currently in MediaWiki is based
 * solely on reading the standard, without any real world test files.
 */",
 "/**
	 * Get a LoadBalancer for the specified cluster
	 *
	 * @param $cluster String: cluster name
	 * @return LoadBalancer object
	 */",
 "/**
	 * Get a slave database connection for the specified cluster
	 *
	 * @param $cluster String: cluster name
	 * @return DatabaseBase object
	 */",
 "/**
	 * Get a master database connection for the specified cluster
	 *
	 * @param $cluster String: cluster name
	 * @return DatabaseBase object
	 */",
 "/**
	 * Get the \'blobs\' table name for this database
	 *
	 * @param $db DatabaseBase
	 * @return String: table name (\'blobs\' by default)
	 */",
 "/**
	 * Fetch data from given URL
	 * @param $url String: an url of the form DB://cluster/id or DB://cluster/id/itemid for concatened storage.
	 */",
 "/**
	 * Fetch a blob item out of the database; a cache of the last-loaded
	 * blob will be kept so that multiple loads out of a multi-item blob
	 * can avoid redundant database access and decompression.
	 * @param $cluster
	 * @param $id
	 * @param $itemID
	 * @return mixed
	 * @private
	 */",
 "/**
	 * Insert a data item into a given cluster
	 *
	 * @param $cluster String: the cluster name
	 * @param $data String: the data item
	 * @return string URL
	 */",
 "/**
 * DB accessable external objects
 * @ingroup ExternalStorage
 */",
 "/** Northern Sotho (Sesotho sa Leboa)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Kaganer
 * @author Mohau
 * @author Urhixidur
 */",
 "/**
	 * @param $titleTo
	 * @param $table
	 * @param $start bool
	 * @param $end bool
	 */",
 "/**
	 * Update some of the backlinks, defined by a page ID range
	 */",
 "/**
	 * Partition the current range given by $this->mStart and $this->mEnd,
	 * using a pre-calculated title array which gives the links in that range.
	 * Queue the resulting jobs.
	 *
	 * @param $titleArray array
	 */",
 "/**
	 * @return mixed
	 */",
 "/**
	 * Invalidate an array (or iterator) of Title objects, right now
	 * @param $titleArray array
	 */",
 "/**
 * Class to invalidate the HTML cache of all the pages linking to a given title.
 * Small numbers of links will be done immediately, large numbers are pushed onto
 * the job queue.
 *
 * This class is designed to work efficiently with small numbers of links, and
 * to work reasonably well with up to ~10^5 links. Above ~10^6 links, the memory
 * and time requirements of loading all backlinked IDs in doUpdate() might become
 * prohibitive. The requirements measured at Wikimedia are approximately:
 *
 *   memory: 48 bytes per row
 *   time: 16us per row for the query plus processing
 *
 * The reason this query is done is to support partitioning of the job
 * by backlinked ID. The memory issue could be allieviated by doing this query in
 * batches, but of course LIMIT with an offset is inefficient on the DB side.
 *
 * The class is nevertheless a vast improvement on the previous method of using
 * File::getLinksTo() and Title::touchArray(), which uses about 2KB of memory per
 * link.
 *
 * @ingroup Cache
 */",
 "/**
	 * Construct a job
	 * @param $title Title: the title linked to
	 * @param $params Array: job parameters (table, start and end page_ids)
	 * @param $id Integer: job id
	 */",
 "/**
 * Job wrapper for HTMLCacheUpdate. Gets run whenever a related
 * job gets called from the queue.
 *
 * @ingroup JobQueue
 */",
 "/**
	 * Executes the log-in attempt using the parameters passed. If
	 * the log-in succeeeds, it attaches a cookie to the session
	 * and outputs the user id, username, and session token. If a
	 * log-in fails, as the result of a bad password, a nonexistent
	 * user, or any other reason, the host is cached with an expiry
	 * and no log-in attempts will be accepted until that expiry
	 * is reached. The expiry is $this->mLoginThrottle.
	 */",
 "/**
 * Unit to authenticate log-in attempts to the current wiki.
 *
 * @ingroup API
 */",
 "/** @dataProvider providePlural */",
 "/** Tests for MediaWiki languages/classes/LanguageFr.php */",
 "/** Fiji Hindi (Latin script) (Fiji Hindi)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Abdul Kadir
 * @author Bihari
 * @author Girmitya
 * @author Kaganer
 * @author Malafaya
 * @author Thakurji
 */",
 "/**
	 * @param $count int
	 * @param $forms array
	 * @return string
	 */",
 "/**
 * Northern Sami (S??megiella)
 *
 * @ingroup Language
 */",
 "/**
	 * Create a test fixture page if one does not exist
	 * @param $pageName The fixture page name. If none is supplied, it uses SeleniumTestConstants::WIKI_INTERNAL_LINK
	 */",
 "/**
	 * Create a test page using date as part of the name so that it is unique
	 * @param $pagePrefix The prefix to use for the page name. The current date will be appended to this to make it unique
	 * @param $watchThis Whether to add the page to my watchlist. Defaults to false.
	 */",
 "/**
 * @ingroup API
 */",
 "/**
				 * @var $flags int
				 */",
 "/**
 * @ingroup Maintenance ExternalStorage
 */",
 "/**
 * Generate first letter data files for Collation.php
 */",
 "/**
	 * Read the attributes of the current element node and return them
	 * as an array
	 * @return array
	 */",
 "/** Swedish (Svenska)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Ainali
 * @author Boivie
 * @author Dafer45
 * @author Diupwijk
 * @author EPO
 * @author Fluff
 * @author GameOn
 * @author Greggegorius
 * @author Grillo
 * @author Habj
 * @author Habjchen
 * @author Hannibal
 * @author Jon Harald S??by
 * @author Kaganer
 * @author LPfi
 * @author Lejonel
 * @author Leo Johannes
 * @author Lokal Profil
 * @author M.M.S.
 * @author MagnusA
 * @author Micke
 * @author NH
 * @author Najami
 * @author Nghtwlkr
 * @author Ozp
 * @author Per
 * @author Petter Strandmark
 * @author Poxnar
 * @author Purodha
 * @author S.??rvarr.S
 * @author Sannab
 * @author Sertion
 * @author Skalman
 * @author Stefan2
 * @author StefanB
 * @author Steinninn
 * @author Str4nd
 * @author Tobulos1
 * @author Where next Columbus
 * @author Where next Columbus?
 * @author WikiPhoenix
 * @author ???????? ????????????????
 */",
 "/** Kalaallisut (Kalaallisut)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Aputtu
 * @author Iketsi
 * @author Kaare
 * @author Kaniina (on kl.wikipedia.org)
 * @author Qaqqalik
 * @author ???????? ????????????????
 */",
 "/**
	 * Get the Action subclass which should be used to handle this action, false if
	 * the action is disabled, or null if it\'s not recognised
	 * @param $action String
	 * @param $overrides Array
	 * @return bool|null|string
	 */",
 "/**
	 * Get an appropriate Action subclass for the given action
	 * @param $action String
	 * @param $page Page
	 * @param $context IContextSource
	 * @return Action|false|null false if the action is disabled, null
	 *     if it is not recognised
	 */",
 "/**
	 * Get the action that will be executed, not necessarily the one passed
	 * passed through the \"action\" request parameter. Actions disabled in
	 * $wgActions will be replaced by \"nosuchaction\".
	 *
	 * @since 1.19
	 * @param $context IContextSource
	 * @return string: action name
	 */",
 "/**
	 * Check if a given action is recognised, even if it\'s disabled
	 *
	 * @param $name String: name of an action
	 * @return Bool
	 */",
 "/**
	 * Get the IContextSource in use here
	 * @return IContextSource
	 */",
 "/**
	 * Get the WebRequest being used for this instance
	 *
	 * @return WebRequest
	 */",
 "/**
	 * Get the OutputPage being used for this instance
	 *
	 * @return OutputPage
	 */",
 "/**
	 * Shortcut to get the User being used for this instance
	 *
	 * @return User
	 */",
 "/**
	 * Shortcut to get the Skin being used for this instance
	 *
	 * @return Skin
	 */",
 "/**
	 * Shortcut to get the user Language being used for this instance
	 *
	 * @return Language
	 */",
 "/**
	 * Shortcut to get the user Language being used for this instance
	 *
	 * @deprecated 1.19 Use getLanguage instead
	 * @return Language
	 */",
 "/**
	 * Shortcut to get the Title object from the page
	 * @return Title
	 */",
 "/**
	 * Get a Message object with context set
	 * Parameters are the same as wfMessage()
	 *
	 * @return Message object
	 */",
 "/**
	 * Protected constructor: use Action::factory( $action, $page ) to actually build
	 * these things in the real world
	 * @param $page Page
	 * @param $context IContextSource
	 */",
 "/**
	 * Return the name of the action this object responds to
	 * @return String lowercase
	 */",
 "/**
	 * Get the permission required to perform this action.  Often, but not always,
	 * the same as the action name
	 * @return String|null
	 */",
 "/**
	 * Checks if the given user (identified by an object) can perform this action.  Can be
	 * overridden by sub-classes with more complicated permissions schemes.  Failures here
	 * must throw subclasses of ErrorPageError
	 *
	 * @param $user User: the user to check, or null to use the context user
	 * @throws ErrorPageError
	 */",
 "/**
	 * Whether this action requires the wiki not to be locked
	 * @return Bool
	 */",
 "/**
	 * Whether this action can still be executed by a blocked user
	 * @return Bool
	 */",
 "/**
	 * Set output headers for noindexing etc.  This function will not be called through
	 * the execute() entry point, so only put UI-related stuff in here.
	 */",
 "/**
	 * Returns the name that goes in the \<h1\> page title
	 *
	 * @return String
	 */",
 "/**
	 * Returns the description that goes below the \<h1\> tag
	 *
	 * @return String
	 */",
 "/**
	 * The main action entry point.  Do all output for display and send it to the context
	 * output.  Do not use globals $wgOut, $wgRequest, etc, in implementations; use
	 * $this->getOutput(), etc.
	 * @throws ErrorPageError
	 */",
 "/**
	 * Execute the action in a silent fashion: do not display anything or release any errors.
	 * @return Bool whether execution was successful
	 */",
 "/**
 * Actions are things which can be done to pages (edit, delete, rollback, etc).  They
 * are distinct from Special Pages because an action must apply to exactly one page.
 *
 * To add an action in an extension, create a subclass of Action, and add the key to
 * $wgActions.  There is also the deprecated UnknownAction hook
 *
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA
 *
 * @file
 */",
 "/**
	 * Get an HTMLForm descriptor array
	 * @return Array
	 */",
 "/**
	 * Add pre- or post-text to the form
	 * @return String HTML which will be sent to $form->addPreText()
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * Play with the HTMLForm if you need to more substantially
	 * @param $form HTMLForm
	 */",
 "/**
	 * Get the HTMLForm to control behaviour
	 * @return HTMLForm|null
	 */",
 "/**
	 * Process the form on POST submission.  If you return false from getFormFields(),
	 * this will obviously never be reached.  If you don\'t want to do anything with the
	 * form, just return false here
	 * @param  $data Array
	 * @return Bool|Array true for success, false for didn\'t-try, array of errors on failure
	 */",
 "/**
	 * Do something exciting on successful processing of the form.  This might be to show
	 * a confirmation message (watch, rollback, etc) or to redirect somewhere else (edit,
	 * protect, etc).
	 */",
 "/**
	 * The basic pattern for actions is to display some sort of HTMLForm UI, maybe with
	 * some stuff underneath (history etc); to do some processing on submission of that
	 * form (delete, protect, etc) and to do something exciting on \'success\', be that
	 * display something new or redirect to somewhere.  Some actions have more exotic
	 * behaviour, but that\'s what subclassing is for :D
	 */",
 "/**
	 * @see Action::execute()
	 * @throws ErrorPageError
	 * @param array|null $data
	 * @param bool $captureErrors
	 * @return bool
	 */",
 "/**
	 * Show something on GET request.
	 * @return String|null will be added to the HTMLForm if present, or just added to the
	 *     output if not.  Return null to not add anything
	 */",
 "/**
	 * We don\'t want an HTMLForm
	 */",
 "/**
	 * Execute the action silently, not giving any output.  Since these actions don\'t have
	 * forms, they probably won\'t have any data, but some (eg rollback) may do
	 * @param $data Array values that would normally be in the GET request
	 * @param $captureErrors Bool whether to catch exceptions and just return false
	 * @return Bool whether execution was successful
	 */",
 "/**
 * Actions generally fall into two groups: the show-a-form-then-do-something-with-the-input
 * format (protect, delete, move, etc), and the just-do-something format (watch, rollback,
 * patrol, etc).
 */",
 "/**
	 * @see FileBackendStore::__construct()
	 * Additional $config params include:
	 *    swiftAuthUrl       : Swift authentication server URL
	 *    swiftUser          : Swift user used by MediaWiki (account:username)
	 *    swiftKey           : Swift authentication key for the above user
	 *    swiftAuthTTL       : Swift authentication TTL (seconds)
	 *    swiftAnonUser      : Swift user used for end-user requests (account:username)
	 *    shardViaHashLevels : Map of container names to sharding config with:
	 *                         \'base\'   : base of hash characters, 16 or 36
	 *                         \'levels\' : the number of hash levels (and digits)
	 *                         \'repeat\' : hash subdirectories are prefixed with all the 
	 *                                    parent hash directory names (e.g. \"a/ab/abc\")
	 */",
 "/**
	 * @see FileBackendStore::resolveContainerPath()
	 */",
 "/**
	 * @see FileBackendStore::isPathUsableInternal()
	 */",
 "/**
	 * @see FileBackendStore::doCreateInternal()
	 */",
 "/**
	 * @see FileBackendStore::doStoreInternal()
	 */",
 "/**
	 * @see FileBackendStore::doCopyInternal()
	 */",
 "/**
	 * @see FileBackendStore::doDeleteInternal()
	 */",
 "/**
	 * @see FileBackendStore::doPrepareInternal()
	 */",
 "/**
	 * @see FileBackendStore::doSecureInternal()
	 */",
 "/**
	 * @see FileBackendStore::doCleanInternal()
	 */",
 "/**
	 * @see FileBackendStore::doFileExists()
	 */",
 "/**
	 * Fill in any missing object metadata and save it to Swift
	 * 
	 * @param $obj CF_Object
	 * @param $path string Storage path to object
	 * @return bool Success
	 * @throws Exception cloudfiles exceptions
	 */",
 "/**
	 * @see FileBackend::getFileContents()
	 */",
 "/**
	 * @see FileBackendStore::getFileListInternal()
	 */",
 "/**
	 * Do not call this function outside of SwiftFileBackendFileList
	 * 
	 * @param $fullCont string Resolved container name
	 * @param $dir string Resolved storage directory with no trailing slash
	 * @param $after string Storage path of file to list items after
	 * @param $limit integer Max number of items to list
	 * @return Array
	 */",
 "/**
	 * @see FileBackendStore::doGetFileSha1base36()
	 */",
 "/**
	 * @see FileBackendStore::doStreamFile()
	 */",
 "/**
	 * @see FileBackendStore::getLocalCopy()
	 */",
 "/**
	 * Get headers to send to Swift when reading a file based
	 * on a FileBackend params array, e.g. that of getLocalCopy(). 
	 * $params is currently only checked for a \'latest\' flag.
	 * 
	 * @param $params Array
	 * @return Array 
	 */",
 "/**
	 * Set read/write permissions for a Swift container
	 *
	 * @param $contObj CF_Container Swift container
	 * @param $readGrps Array Swift users who can read (account:user)
	 * @param $writeGrps Array Swift users who can write (account:user)
	 * @return Status
	 */",
 "/**
	 * Get a connection to the Swift proxy
	 *
	 * @return CF_Connection|false
	 * @throws InvalidResponseException
	 */",
 "/**
	 * @see FileBackendStore::doClearCache()
	 */",
 "/**
	 * Get a Swift container object, possibly from process cache.
	 * Use $reCache if the file count or byte count is needed.
	 *
	 * @param $container string Container name
	 * @param $reCache bool Refresh the process cache
	 * @return CF_Container
	 */",
 "/**
	 * Create a Swift container
	 *
	 * @param $container string Container name
	 * @return CF_Container
	 */",
 "/**
	 * Delete a Swift container
	 *
	 * @param $container string Container name
	 * @return void
	 */",
 "/**
	 * Log an unexpected exception for this backend
	 * 
	 * @param $e Exception
	 * @param $func string
	 * @param $params Array
	 * @return void
	 */",
 "/**
 * Class for an OpenStack Swift based file backend.
 *
 * This requires the SwiftCloudFiles MediaWiki extension, which includes
 * the php-cloudfiles library (https://github.com/rackspace/php-cloudfiles).
 * php-cloudfiles requires the curl, fileinfo, and mb_string PHP extensions.
 *
 * Status messages should avoid mentioning the Swift account name.
 * Likewise, error suppression should be used to avoid path disclosure.
 *
 * @ingroup FileBackend
 * @since 1.19
 */",
 "/**
	 * @param $backend SwiftFileBackend
	 * @param $fullCont string Resolved container name
	 * @param $dir string Resolved directory relative to container
	 */",
 "/**
 * SwiftFileBackend helper class to page through object listings.
 * Swift also has a listing limit of 10,000 objects for sanity.
 * Do not use this class from places outside SwiftFileBackend.
 *
 * @ingroup FileBackend
 */",
 "/**
 * JPEG specific handler.
 * Inherits most stuff from BitmapHandler, just here to do the metadata handler differently.
 *
 * Metadata stuff common to Jpeg and built-in Tiff (not PagedTiffHandler) is
 * in ExifBitmapHandler.
 *
 * @ingroup Media
 */",
 "/** P??lzisch (P??lzisch)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Als-Holder
 * @author M-sch
 * @author SPS
 * @author Xqt
 */",
 "/**
	 * @group Broken
	 */",
 "/**
 * @group Database
 * @group DatabaseBase
 */",
 "/** Build $this->messages array */",
 "/**
	 * Internal helper to test the sidebar
	 * @param $expected
	 * @param $text
	 * @param $message (Default: \'\')
	 */",
 "/**
	 * bug 33321 - Make sure there\'s a | after transforming.
	 * @group Database
	 */",
 "/**
	 * Simple test to verify our helper assertAttribs() is functional
	 * Please note this assume MediaWiki default settings:
	 *   $wgNoFollowLinks = true
	 *   $wgExternalLinkTarget = false
	 */",
 "/**
	 * Test $wgNoFollowLinks in sidebar
	 */",
 "/**
	 * Test $wgExternaLinkTarget in sidebar
	 */",
 "/**
 * @group Skin
 */",
 "/**
	 * @param $file File
	 * @return bool
	 */",
 "/**
	 * @param $image File
	 * @param  $params
	 * @return bool
	 */",
 "/**
	 * @param $image File
	 * @param  $dstPath
	 * @param  $dstUrl
	 * @param  $params
	 * @param int $flags
	 * @return bool|MediaTransformError|ThumbnailImage|TransformParameterError
	 */",
 "/**
	* Transform an SVG file to PNG
	* This function can be called outside of thumbnail contexts
	* @param string $srcPath
	* @param string $dstPath
	* @param string $width
	* @param string $height
	* @return true|MediaTransformError
	*/",
 "/**
	 * @param $file File
	 * @param  $path
	 * @param bool $metadata
	 * @return array
	 */",
 "/**
	 * @param $file File
	 * @return string
	 */",
 "/**
	 * @param $file File
	 * @return array|bool
	 */",
 "/**
 * Handler for SVG images.
 *
 * @ingroup Media
 */",
 "/** Seeltersk (Seeltersk)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Kaganer
 * @author Kghbln
 * @author Maartenvdbent
 * @author Mucalexx
 * @author Purodha
 * @author Pyt
 * @author Reedy
 * @author Urhixidur
 */",
 "/** Moksha (??????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Jarmanj Turtash
 * @author Kaganer
 * @author Khazar II
 * @author Kranch
 * @author Numulunj pilgae
 */",
 "/**
	 * @group Broken
	 */",
 "/**
	 * Create a new backend instance from configuration.
	 * This should only be called from within FileBackendGroup.
	 * 
	 * $config includes:
	 *     \'name\'        : The unique name of this backend.
	 *                     This should consist of alphanumberic, \'-\', and \'_\' characters.
	 *                     This name should not be changed after use.
	 *     \'wikiId\'      : Prefix to container names that is unique to this wiki.
	 *                     This should consist of alphanumberic, \'-\', and \'_\' characters.
	 *     \'lockManager\' : Registered name of a file lock manager to use.
	 *     \'readOnly\'    : Write operations are disallowed if this is a non-empty string.
	 *                     It should be an explanation for the backend being read-only.
	 * 
	 * @param $config Array
	 */",
 "/**
	 * Get the unique backend name.
	 * We may have multiple different backends of the same type.
	 * For example, we can have two Swift backends using different proxies.
	 * 
	 * @return string
	 */",
 "/**
	 * Check if this backend is read-only
	 * 
	 * @return bool
	 */",
 "/**
	 * Get an explanatory message if this backend is read-only
	 * 
	 * @return string|false Returns falls if the backend is not read-only
	 */",
 "/**
	 * This is the main entry point into the backend for write operations.
	 * Callers supply an ordered list of operations to perform as a transaction.
	 * Files will be locked, the stat cache cleared, and then the operations attempted.
	 * If any serious errors occur, all attempted operations will be rolled back.
	 * 
	 * $ops is an array of arrays. The outer array holds a list of operations.
	 * Each inner array is a set of key value pairs that specify an operation.
	 * 
	 * Supported operations and their parameters:
	 * a) Create a new file in storage with the contents of a string
	 *     array(
	 *         \'op\'                  => \'create\',
	 *         \'dst\'                 => <storage path>,
	 *         \'content\'             => <string of new file contents>,
	 *         \'overwrite\'           => <boolean>,
	 *         \'overwriteSame\'       => <boolean>
	 *     )
	 * b) Copy a file system file into storage
	 *     array(
	 *         \'op\'                  => \'store\',
	 *         \'src\'                 => <file system path>,
	 *         \'dst\'                 => <storage path>,
	 *         \'overwrite\'           => <boolean>,
	 *         \'overwriteSame\'       => <boolean>
	 *     )
	 * c) Copy a file within storage
	 *     array(
	 *         \'op\'                  => \'copy\',
	 *         \'src\'                 => <storage path>,
	 *         \'dst\'                 => <storage path>,
	 *         \'overwrite\'           => <boolean>,
	 *         \'overwriteSame\'       => <boolean>
	 *     )
	 * d) Move a file within storage
	 *     array(
	 *         \'op\'                  => \'move\',
	 *         \'src\'                 => <storage path>,
	 *         \'dst\'                 => <storage path>,
	 *         \'overwrite\'           => <boolean>,
	 *         \'overwriteSame\'       => <boolean>
	 *     )
	 * e) Delete a file within storage
	 *     array(
	 *         \'op\'                  => \'delete\',
	 *         \'src\'                 => <storage path>,
	 *         \'ignoreMissingSource\' => <boolean>
	 *     )
	 * f) Do nothing (no-op)
	 *     array(
	 *         \'op\'                  => \'null\',
	 *     )
	 * 
	 * Boolean flags for operations (operation-specific):
	 * \'ignoreMissingSource\' : The operation will simply succeed and do
	 *                         nothing if the source file does not exist.
	 * \'overwrite\'           : Any destination file will be overwritten.
	 * \'overwriteSame\'       : An error will not be given if a file already
	 *                         exists at the destination that has the same
	 *                         contents as the new contents to be written there.
	 * 
	 * $opts is an associative of boolean flags, including:
	 * \'force\'               : Errors that would normally cause a rollback do not.
	 *                         The remaining operations are still attempted if any fail.
	 * \'nonLocking\'          : No locks are acquired for the operations.
	 *                         This can increase performance for non-critical writes.
	 *                         This has no effect unless the \'force\' flag is set.
	 * \'allowStale\'          : Don\'t require the latest available data.
	 *                         This can increase performance for non-critical writes.
	 *                         This has no effect unless the \'force\' flag is set.
	 * 
	 * Remarks on locking:
	 * File system paths given to operations should refer to files that are
	 * already locked or otherwise safe from modification from other processes.
	 * Normally these files will be new temp files, which should be adequate.
	 * 
	 * Return value:
	 * This returns a Status, which contains all warnings and fatals that occured
	 * during the operation. The \'failCount\', \'successCount\', and \'success\' members
	 * will reflect each operation attempted. The status will be \"OK\" unless:
	 *     a) unexpected operation errors occurred (network partitions, disk full...)
	 *     b) significant operation errors occured and \'force\' was not set
	 * 
	 * @param $ops Array List of operations to execute in order
	 * @param $opts Array Batch operation options
	 * @return Status
	 */",
 "/**
	 * @see FileBackend::doOperations()
	 */",
 "/**
	 * Same as doOperations() except it takes a single operation.
	 * If you are doing a batch of operations that should either
	 * all succeed or all fail, then use that function instead.
	 *
	 * @see FileBackend::doOperations()
	 *
	 * @param $op Array Operation
	 * @param $opts Array Operation options
	 * @return Status
	 */",
 "/**
	 * Performs a single create operation.
	 * This sets $params[\'op\'] to \'create\' and passes it to doOperation().
	 *
	 * @see FileBackend::doOperation()
	 *
	 * @param $params Array Operation parameters
	 * @param $opts Array Operation options
	 * @return Status
	 */",
 "/**
	 * Performs a single store operation.
	 * This sets $params[\'op\'] to \'store\' and passes it to doOperation().
	 *
	 * @see FileBackend::doOperation()
	 *
	 * @param $params Array Operation parameters
	 * @param $opts Array Operation options
	 * @return Status
	 */",
 "/**
	 * Performs a single copy operation.
	 * This sets $params[\'op\'] to \'copy\' and passes it to doOperation().
	 *
	 * @see FileBackend::doOperation()
	 *
	 * @param $params Array Operation parameters
	 * @param $opts Array Operation options
	 * @return Status
	 */",
 "/**
	 * Performs a single move operation.
	 * This sets $params[\'op\'] to \'move\' and passes it to doOperation().
	 *
	 * @see FileBackend::doOperation()
	 *
	 * @param $params Array Operation parameters
	 * @param $opts Array Operation options
	 * @return Status
	 */",
 "/**
	 * Performs a single delete operation.
	 * This sets $params[\'op\'] to \'delete\' and passes it to doOperation().
	 *
	 * @see FileBackend::doOperation()
	 *
	 * @param $params Array Operation parameters
	 * @param $opts Array Operation options
	 * @return Status
	 */",
 "/**
	 * Concatenate a list of storage files into a single file system file.
	 * The target path should refer to a file that is already locked or
	 * otherwise safe from modification from other processes. Normally,
	 * the file will be a new temp file, which should be adequate.
	 * $params include:
	 *     srcs          : ordered source storage paths (e.g. chunk1, chunk2, ...)
	 *     dst           : file system path to 0-byte temp file
	 *
	 * @param $params Array Operation parameters
	 * @return Status
	 */",
 "/**
	 * Prepare a storage directory for usage.
	 * This will create any required containers and parent directories.
	 * Backends using key/value stores only need to create the container.
	 * 
	 * $params include:
	 *     dir : storage directory
	 * 
	 * @param $params Array
	 * @return Status
	 */",
 "/**
	 * @see FileBackend::prepare()
	 */",
 "/**
	 * Take measures to block web access to a storage directory and
	 * the container it belongs to. FS backends might add .htaccess
	 * files whereas key/value store backends might restrict container
	 * access to the auth user that represents end-users in web request.
	 * This is not guaranteed to actually do anything.
	 * 
	 * $params include:
	 *     dir       : storage directory
	 *     noAccess  : try to deny file access
	 *     noListing : try to deny file listing
	 * 
	 * @param $params Array
	 * @return Status
	 */",
 "/**
	 * @see FileBackend::secure()
	 */",
 "/**
	 * Delete a storage directory if it is empty.
	 * Backends using key/value stores may do nothing unless the directory
	 * is that of an empty container, in which case it should be deleted.
	 * 
	 * $params include:
	 *     dir : storage directory
	 * 
	 * @param $params Array
	 * @return Status
	 */",
 "/**
	 * @see FileBackend::clean()
	 */",
 "/**
	 * Check if a file exists at a storage path in the backend.
	 * This returns false if only a directory exists at the path.
	 * 
	 * $params include:
	 *     src    : source storage path
	 *     latest : use the latest available data
	 * 
	 * @param $params Array
	 * @return bool|null Returns null on failure
	 */",
 "/**
	 * Get the last-modified timestamp of the file at a storage path.
	 * 
	 * $params include:
	 *     src    : source storage path
	 *     latest : use the latest available data
	 * 
	 * @param $params Array
	 * @return string|false TS_MW timestamp or false on failure
	 */",
 "/**
	 * Get the contents of a file at a storage path in the backend.
	 * This should be avoided for potentially large files.
	 * 
	 * $params include:
	 *     src    : source storage path
	 *     latest : use the latest available data
	 * 
	 * @param $params Array
	 * @return string|false Returns false on failure
	 */",
 "/**
	 * Get the size (bytes) of a file at a storage path in the backend.
	 * 
	 * $params include:
	 *     src    : source storage path
	 *     latest : use the latest available data
	 * 
	 * @param $params Array
	 * @return integer|false Returns false on failure
	 */",
 "/**
	 * Get quick information about a file at a storage path in the backend.
	 * If the file does not exist, then this returns false.
	 * Otherwise, the result is an associative array that includes:
	 *     mtime  : the last-modified timestamp (TS_MW)
	 *     size   : the file size (bytes)
	 * Additional values may be included for internal use only.
	 * 
	 * $params include:
	 *     src    : source storage path
	 *     latest : use the latest available data
	 * 
	 * @param $params Array
	 * @return Array|false|null Returns null on failure
	 */",
 "/**
	 * Get a SHA-1 hash of the file at a storage path in the backend.
	 * 
	 * $params include:
	 *     src    : source storage path
	 *     latest : use the latest available data
	 * 
	 * @param $params Array
	 * @return string|false Hash string or false on failure
	 */",
 "/**
	 * Get the properties of the file at a storage path in the backend.
	 * Returns FSFile::placeholderProps() on failure.
	 * 
	 * $params include:
	 *     src    : source storage path
	 *     latest : use the latest available data
	 * 
	 * @param $params Array
	 * @return Array
	 */",
 "/**
	 * Stream the file at a storage path in the backend.
	 * If the file does not exists, a 404 error will be given.
	 * Appropriate HTTP headers (Status, Content-Type, Content-Length)
	 * must be sent if streaming began, while none should be sent otherwise.
	 * Implementations should flush the output buffer before sending data.
	 * 
	 * $params include:
	 *     src     : source storage path
	 *     headers : additional HTTP headers to send on success
	 *     latest  : use the latest available data
	 * 
	 * @param $params Array
	 * @return Status
	 */",
 "/**
	 * Returns a file system file, identical to the file at a storage path.
	 * The file returned is either:
	 * a) A local copy of the file at a storage path in the backend.
	 *    The temporary copy will have the same extension as the source.
	 * b) An original of the file at a storage path in the backend.
	 * Temporary files may be purged when the file object falls out of scope.
	 * 
	 * Write operations should *never* be done on this file as some backends
	 * may do internal tracking or may be instances of FileBackendMultiWrite.
	 * In that later case, there are copies of the file that must stay in sync.
	 * Additionally, further calls to this function may return the same file.
	 * 
	 * $params include:
	 *     src    : source storage path
	 *     latest : use the latest available data
	 * 
	 * @param $params Array
	 * @return FSFile|null Returns null on failure
	 */",
 "/**
	 * Get a local copy on disk of the file at a storage path in the backend.
	 * The temporary copy will have the same file extension as the source.
	 * Temporary files may be purged when the file object falls out of scope.
	 * 
	 * $params include:
	 *     src    : source storage path
	 *     latest : use the latest available data
	 * 
	 * @param $params Array
	 * @return TempFSFile|null Returns null on failure
	 */",
 "/**
	 * Get an iterator to list out all stored files under a storage directory.
	 * If the directory is of the form \"mwstore://backend/container\", 
	 * then all files in the container should be listed.
	 * If the directory is of form \"mwstore://backend/container/dir\",
	 * then all files under that container directory should be listed.
	 * Results should be storage paths relative to the given directory.
	 * 
	 * Storage backends with eventual consistency might return stale data.
	 * 
	 * $params include:
	 *     dir : storage path directory
	 *
	 * @return Traversable|Array|null Returns null on failure
	 */",
 "/**
	 * Invalidate any in-process file existence and property cache.
	 * If $paths is given, then only the cache for those files will be cleared.
	 *
	 * @param $paths Array Storage paths (optional)
	 * @return void
	 */",
 "/**
	 * Lock the files at the given storage paths in the backend.
	 * This will either lock all the files or none (on failure).
	 * 
	 * Callers should consider using getScopedFileLocks() instead.
	 * 
	 * @param $paths Array Storage paths
	 * @param $type integer LockManager::LOCK_* constant
	 * @return Status
	 */",
 "/**
	 * Unlock the files at the given storage paths in the backend.
	 * 
	 * @param $paths Array Storage paths
	 * @param $type integer LockManager::LOCK_* constant
	 * @return Status
	 */",
 "/**
	 * Lock the files at the given storage paths in the backend.
	 * This will either lock all the files or none (on failure).
	 * On failure, the status object will be updated with errors.
	 * 
	 * Once the return value goes out scope, the locks will be released and
	 * the status updated. Unlock fatals will not change the status \"OK\" value.
	 * 
	 * @param $paths Array Storage paths
	 * @param $type integer LockManager::LOCK_* constant
	 * @param $status Status Status to update on lock/unlock
	 * @return ScopedLock|null Returns null on failure
	 */",
 "/**
	 * Check if a given path is a \"mwstore://\" path.
	 * This does not do any further validation or any existence checks.
	 * 
	 * @param $path string
	 * @return bool
	 */",
 "/**
	 * Split a storage path into a backend name, a container name, 
	 * and a relative file path. The relative path may be the empty string.
	 * This does not do any path normalization or traversal checks.
	 *
	 * @param $storagePath string
	 * @return Array (backend, container, rel object) or (null, null, null)
	 */",
 "/**
	 * Normalize a storage path by cleaning up directory separators.
	 * Returns null if the path is not of the format of a valid storage path.
	 * 
	 * @param $storagePath string
	 * @return string|null 
	 */",
 "/**
	*Validateandnormalizearelativestoragepath.
	*Nullisreturnedifthepathinvolvesdirectorytraversal.
	*TraversalisinsecureforFSbackendsandbrokenforothers.
	*
	*@param$pathstringStoragepathrelativetoacontainer
	*@returnstring|null
	*/",
 "/**
	*Gettheparentstoragedirectoryofastoragepath.
	*Thisreturnsapathlike\"mwstore://backend/container\",
	 * \"mwstore://backend/container/...\", or null if there is no parent.
	 * 
	 * @param $storagePath string
	 * @return string|null
	 */",
 "/**
	 * Get the final extension from a storage or FS path
	 * 
	 * @param $path string
	 * @return string
	 */",
 "/**
 * Base class for all file backend classes (including multi-write backends).
 *
 * This class defines the methods as abstract that subclasses must implement.
 * Outside callers can assume that all backends will have these functions.
 * 
 * All \"storage paths\" are of the format \"mwstore://backend/container/path\".
 * The paths use UNIX file system (FS) notation, though any particular backend may
 * not actually be using a local filesystem. Therefore, the paths are only virtual.
 * 
 * Backend contents are stored under wiki-specific container names by default.
 * For legacy reasons, this has no effect for the FS backend class, and per-wiki
 * segregation must be done by setting the container paths appropriately.
 * 
 * FS-based backends are somewhat more restrictive due to the existence of real
 * directory files; a regular file cannot have the same name as a directory. Other
 * backends with virtual directories may not have this limitation. Callers should
 * store files in such a way that no files and directories are under the same path.
 * 
 * Methods should avoid throwing exceptions at all costs.
 * As a corollary, external dependencies should be kept to a minimum.
 * 
 * @ingroup FileBackend
 * @since 1.19
 */",
 "/**
	 * Get the maximum allowable file size given backend
	 * medium restrictions and basic performance constraints.
	 * Do not call this function from places outside FileBackend and FileOp.
	 * 
	 * @return integer Bytes 
	 */",
 "/**
	 * Check if a file can be created at a given storage path.
	 * FS backends should check if the parent directory exists and the file is writable.
	 * Backends using key/value stores should check if the container exists.
	 *
	 * @param $storagePath string
	 * @return bool
	 */",
 "/**
	 * Create a file in the backend with the given contents.
	 * Do not call this function from places outside FileBackend and FileOp.
	 * 
	 * $params include:
	 *     content       : the raw file contents
	 *     dst           : destination storage path
	 *     overwrite     : overwrite any file that exists at the destination
	 * 
	 * @param $params Array
	 * @return Status
	 */",
 "/**
	 * @see FileBackendStore::createInternal()
	 */",
 "/**
	 * Store a file into the backend from a file on disk.
	 * Do not call this function from places outside FileBackend and FileOp.
	 * 
	 * $params include:
	 *     src           : source path on disk
	 *     dst           : destination storage path
	 *     overwrite     : overwrite any file that exists at the destination
	 * 
	 * @param $params Array
	 * @return Status
	 */",
 "/**
	 * @see FileBackendStore::storeInternal()
	 */",
 "/**
	 * Copy a file from one storage path to another in the backend.
	 * Do not call this function from places outside FileBackend and FileOp.
	 * 
	 * $params include:
	 *     src           : source storage path
	 *     dst           : destination storage path
	 *     overwrite     : overwrite any file that exists at the destination
	 * 
	 * @param $params Array
	 * @return Status
	 */",
 "/**
	 * @see FileBackendStore::copyInternal()
	 */",
 "/**
	 * Delete a file at the storage path.
	 * Do not call this function from places outside FileBackend and FileOp.
	 * 
	 * $params include:
	 *     src                 : source storage path
	 *     ignoreMissingSource : do nothing if the source file does not exist
	 * 
	 * @param $params Array
	 * @return Status
	 */",
 "/**
	 * @see FileBackendStore::deleteInternal()
	 */",
 "/**
	 * Move a file from one storage path to another in the backend.
	 * Do not call this function from places outside FileBackend and FileOp.
	 * 
	 * $params include:
	 *     src           : source storage path
	 *     dst           : destination storage path
	 *     overwrite     : overwrite any file that exists at the destination
	 * 
	 * @param $params Array
	 * @return Status
	 */",
 "/**
	 * @see FileBackendStore::moveInternal()
	 */",
 "/**
	 * @see FileBackend::concatenate()
	 */",
 "/**
	 * @see FileBackendStore::concatenate()
	 */",
 "/**
	 * @see FileBackend::doPrepare()
	 */",
 "/**
	 * @see FileBackendStore::doPrepare()
	 */",
 "/**
	 * @see FileBackend::doSecure()
	 */",
 "/**
	 * @see FileBackendStore::doSecure()
	 */",
 "/**
	 * @see FileBackend::doClean()
	 */",
 "/**
	 * @see FileBackendStore::doClean()
	 */",
 "/**
	 * @see FileBackend::fileExists()
	 */",
 "/**
	 * @see FileBackend::getFileTimestamp()
	 */",
 "/**
	 * @see FileBackend::getFileSize()
	 */",
 "/**
	 * @see FileBackend::getFileStat()
	 */",
 "/**
	 * @see FileBackendStore::getFileStat()
	 */",
 "/**
	 * @see FileBackend::getFileContents()
	 */",
 "/**
	 * @see FileBackend::getFileSha1Base36()
	 */",
 "/**
	 * @see FileBackendStore::getFileSha1Base36()
	 */",
 "/**
	 * @see FileBackend::getFileProps()
	 */",
 "/**
	 * @see FileBackend::getLocalReference()
	 */",
 "/**
	 * @see FileBackend::streamFile()
	 */",
 "/**
	 * @see FileBackendStore::streamFile()
	 */",
 "/**
	 * @copydoc FileBackend::getFileList() 
	 */",
 "/**
	 * Do not call this function from places outside FileBackend
	 *
	 * @see FileBackendStore::getFileList()
	 * 
	 * @param $container string Resolved container name
	 * @param $dir string Resolved path relative to container
	 * @param $params Array
	 * @return Traversable|Array|null
	 */",
 "/**
	 * Get the list of supported operations and their corresponding FileOp classes.
	 * 
	 * @return Array
	 */",
 "/**
	 * Return a list of FileOp objects from a list of operations.
	 * Do not call this function from places outside FileBackend.
	 *
	 * The result must have the same number of items as the input.
	 * An exception is thrown if an unsupported operation is requested.
	 * 
	 * @param $ops Array Same format as doOperations()
	 * @return Array List of FileOp objects
	 * @throws MWException
	 */",
 "/**
	 * @see FileBackend::doOperationsInternal()
	 */",
 "/**
	 * @see FileBackend::clearCache()
	 */",
 "/**
	 * Clears any additional stat caches for storage paths
	 * 
	 * @see FileBackend::clearCache()
	 * 
	 * @param $paths Array Storage paths (optional)
	 * @return void
	 */",
 "/**
	 * Prune the inexpensive cache if it is too big to add an item
	 * 
	 * @return void
	 */",
 "/**
	 * Prune the expensive cache if it is too big to add an item
	 * 
	 * @return void
	 */",
 "/**
	 * Check if a container name is valid.
	 * This checks for for length and illegal characters.
	 * 
	 * @param $container string
	 * @return bool
	 */",
 "/**
	 * Splits a storage path into an internal container name,
	 * an internal relative file name, and a container shard suffix.
	 * Any shard suffix is already appended to the internal container name.
	 * This also checks that the storage path is valid and within this backend.
	 *
	 * If the container is sharded but a suffix could not be determined,
	 * this means that the path can only refer to a directory and can only
	 * be scanned by looking in all the container shards.
	 *
	 * @param $storagePath string
	 * @return Array (container, path, container suffix) or (null, null, null) if invalid
	 */",
 "/**
	 * Like resolveStoragePath() except null values are returned if
	 * the container is sharded and the shard could not be determined.
	 *
	 * @see FileBackendStore::resolveStoragePath()
	 *
	 * @param $storagePath string
	 * @return Array (container, path) or (null, null) if invalid
	 */",
 "/**
	 * Get the container name shard suffix for a given path.
	 * Any empty suffix means the container is not sharded.
	 *
	 * @param $container string Container name
	 * @param $relStoragePath string Storage path relative to the container
	 * @return string|null Returns null if shard could not be determined
	 */",
 "/**
	 * Get the sharding config for a container.
	 * If greater than 0, then all file storage paths within
	 * the container are required to be hashed accordingly.
	 *
	 * @param $container string
	 * @return Array (integer levels, integer base, repeat flag) or (0, 0, false)
	 */",
 "/**
	 * Get a list of full container shard suffixes for a container
	 * 
	 * @param $container string
	 * @return Array 
	 */",
 "/**
	 * Get the full container name, including the wiki ID prefix
	 * 
	 * @param $container string
	 * @return string 
	 */",
 "/**
	 * Resolve a container name, checking if it\'s allowed by the backend.
	 * This is intended for internal use, such as encoding illegal chars.
	 * Subclasses can override this to be more restrictive.
	 * 
	 * @param $container string
	 * @return string|null 
	 */",
 "/**
	 * Resolve a relative storage path, checking if it\'s allowed by the backend.
	 * This is intended for internal use, such as encoding illegal chars or perhaps
	 * getting absolute paths (e.g. FS based backends). Note that the relative path
	 * may be the empty string (e.g. the path is simply to the container).
	 *
	 * @param $container string Container name
	 * @param $relStoragePath string Storage path relative to the container
	 * @return string|null Path or null if not valid
	 */",
 "/**
 * @brief Base class for all backends associated with a particular storage medium.
 *
 * This class defines the methods as abstract that subclasses must implement.
 * Outside callers should *not* use functions with \"Internal\" in the name.
 * 
 * The FileBackend operations are implemented using basic functions
 * such as storeInternal(), copyInternal(), deleteInternal() and the like.
 * This class is also responsible for path resolution and sanitization.
 * 
 * @ingroup FileBackend
 * @since 1.19
 */",
 "/**
	 * @param $backend FileBackendStore
	 * @param $container string Full storage container name
	 * @param $dir string Storage directory relative to container
	 * @param $suffixes Array List of container shard suffixes
	 * @param $params Array
	 */",
 "/**
	 * If the iterator for this container shard is out of items,
	 * then move on to the next container that has items.
	 * If there are none, then it advances to the last container.
	 */",
 "/**
 * FileBackendStore helper function to handle file listings that span container shards.
 * Do not use this class from places outside of FileBackendStore.
 *
 * @ingroup FileBackend
 */",
 "/**
	 * Avoid grouping whole numbers between 0 to 9999
	 *
	 * @param $_ string
	 *
	 * @return string
	 */",
 "/** Estonian (Eesti)
 *
 * @ingroup Language
 *
 */",
 "/**
 * Encodes the given data into a query string format
 * @param $data - array of string elements to be encoded
 * @return string - encoded request
 */",
 "/**
 * Submits an HTTP POST to a reCAPTCHA server
 * @param string $host
 * @param string $path
 * @param array $data
 * @param int port
 * @return array response
 */",
 "/**
 * Gets the challenge HTML (javascript and non-javascript version).
 * This is called from the browser, and the resulting reCAPTCHA HTML widget
 * is embedded within the HTML form it was called from.
 * @param string $pubkey A public key for reCAPTCHA
 * @param string $error The error given by reCAPTCHA (optional, default is null)
 * @param boolean $use_ssl Should the request be made over ssl? (optional, default is false)

 * @return string - The HTML to be embedded in the user\'s form.
 */",
 "/**
 * A ReCaptchaResponse is returned from recaptcha_check_answer()
 */",
 "/**
  * Calls an HTTP POST function to verify if the user\'s guess was correct
  * @param string $privkey
  * @param string $remoteip
  * @param string $challenge
  * @param string $response
  * @param array $extra_params an array of extra variables to post to the server
  * @return ReCaptchaResponse
  */",
 "/**
 * gets a URL where the user can sign up for reCAPTCHA. If your application
 * has a configuration page where you enter a key, you should provide a link
 * using this function.
 * @param string $domain The domain where the page is hosted
 * @param string $appname The name of your application
 */",
 "/**
 * gets the parts of the email to expose to the user.
 * eg, given johndoe@example,com return [\"john\", \"example.com\"].
 * the email is then displayed as john...@example.com
 */",
 "/**
 * Gets html to display an email address given a public an private key.
 * to get a key, go to:
 *
 * http://www.google.com/recaptcha/mailhide/apikey
 */",
 "/**
 * ?????????????????? ?????????????????? ?? ???????? ?????????? ?????????? ???????????????? ?????? ???????????????????? MediaWiki.
 *
 * ???????? ???????????????????? ???????????? ?????????????????? ?? ?????????????? ?????????????????? ?????????? ????????????????????,
 * ???????????????? ?????? ?????????????????????? ???????????????????????????? ?????????????? ???????? ??MediaWiki:*??.
 * ???? ???????????? ?????????? ?????????? ???? ???????????????? ??Special:Allmessages??.
 */",
 "/**
					 * @todo FIXME: This can lead to hitting memory limit for very large
					 * categories. Ideally we would do the lookup synchronously
					 * during the export in a single query.
					 */",
 "/**
				 * Same implementation as above, so same @todo
				 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * Do the actual page exporting
	 *
	 * @param $page String: user input on what page(s) to export
	 * @param $history Mixed: one of the WikiExporter history export constants
	 * @param $list_authors Boolean: Whether to add distinct author list (when
	 *                      not returning full history)
	 * @param $exportall Boolean: Whether to export everything
	 */",
 "/**
	 * @param $title Title
	 * @return array
	 */",
 "/**
	 * @param $nsindex int
	 * @return array
	 */",
 "/**
	 * Expand a list of pages to include templates used in those pages.
	 * @param $inputPages array, list of titles to look up
	 * @param $pageSet array, associative array indexed by titles for output
	 * @return array associative array index by titles
	 */",
 "/**
	 * Validate link depth setting, if available.
	 * @param $depth int
	 * @return int
	 */",
 "/**
	 * Expand a list of pages to include pages linked to from that page.
	 * @param $inputPages array
	 * @param $pageSet array
	 * @param $depth int
	 * @return array
	 */",
 "/**
	 * Expand a list of pages to include images used in those pages.
	 *
	 * @param $inputPages array, list of titles to look up
	 * @param $pageSet array, associative array indexed by titles for output
	 *
	 * @return array associative array index by titles
	 */",
 "/**
	 * Expand a list of pages to include items used in those pages.
	 */",
 "/**
 * A special page that allows users to export pages in a XML file
 *
 * @ingroup SpecialPage
 */",
 "/** Fulah (Fulfulde)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Amkoullel
 * @author Guaka (on ff.wikipedia.org)
 */",
 "/** Bashkir (??????????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Assele
 * @author Comp1089
 * @author Haqmar
 * @author Kaganer
 * @author Reedy
 * @author Roustammr
 * @author Timming
 * @author ???????????? ????????????
 */",
 "/** L??v?? k???? (L??v?? k????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Ohpuu
 * @author Warbola
 */",
 "/**
	 * @param $query ApiBase
	 * @param $moduleName string
	 * @param $paramPrefix string
	 */",
 "/**
	 * Get the cache mode for the data generated by this module. Override
	 * this in the module subclass. For possible return values and other
	 * details about cache modes, see ApiMain::setCacheMode()
	 *
	 * Public caching will only be allowed if *all* the modules that supply
	 * data for a given request return a cache mode of public.
	 *
	 * @param $params
	 * @return string
	 */",
 "/**
	 * Blank the internal arrays with query parameters
	 */",
 "/**
	 * Add a set of tables to the internal array
	 * @param $tables mixed Table name or array of table names
	 * @param $alias mixed Table alias, or null for no alias. Cannot be
	 *  used with multiple tables
	 */",
 "/**
	 * Add a set of JOIN conditions to the internal array
	 *
	 * JOIN conditions are formatted as array( tablename => array(jointype,
	 * conditions) e.g. array(\'page\' => array(\'LEFT JOIN\',
	 * \'page_id=rev_page\')) . conditions may be a string or an
	 * addWhere()-style array
	 * @param $join_conds array JOIN conditions
	 */",
 "/**
	 * Add a set of fields to select to the internal array
	 * @param $value array|string Field name or array of field names
	 */",
 "/**
	 * Same as addFields(), but add the fields only if a condition is met
	 * @param $value array|string See addFields()
	 * @param $condition bool If false, do nothing
	 * @return bool $condition
	 */",
 "/**
	 * Add a set of WHERE clauses to the internal array.
	 * Clauses can be formatted as \'foo=bar\' or array(\'foo\' => \'bar\'),
	 * the latter only works if the value is a constant (i.e. not another field)
	 *
	 * If $value is an empty array, this function does nothing.
	 *
	 * For example, array(\'foo=bar\', \'baz\' => 3, \'bla\' => \'foo\') translates
	 * to \"foo=bar AND baz=\'3\' AND bla=\'foo\'\"
	 * @param $value mixed String or array
	 */",
 "/**
	 * Same as addWhere(), but add the WHERE clauses only if a condition is met
	 * @param $value mixed See addWhere()
	 * @param $condition bool If false, do nothing
	 * @return bool $condition
	 */",
 "/**
	 * Equivalent to addWhere(array($field => $value))
	 * @param $field string Field name
	 * @param $value string Value; ignored if null or empty array;
	 */",
 "/**
	 * Add a WHERE clause corresponding to a range, and an ORDER BY
	 * clause to sort in the right direction
	 * @param $field string Field name
	 * @param $dir string If \'newer\', sort in ascending order, otherwise
	 *  sort in descending order
	 * @param $start string Value to start the list at. If $dir == \'newer\'
	 *  this is the lower boundary, otherwise it\'s the upper boundary
	 * @param $end string Value to end the list at. If $dir == \'newer\' this
	 *  is the upper boundary, otherwise it\'s the lower boundary
	 * @param $sort bool If false, don\'t add an ORDER BY clause
	 */",
 "/**
	 * Add a WHERE clause corresponding to a range, similar to addWhereRange,
	 * but converts $start and $end to database timestamps.
	 * @see addWhereRange
	 * @param $field
	 * @param $dir
	 * @param $start
	 * @param $end
	 * @param $sort bool
	 */",
 "/**
	 * Add an option such as LIMIT or USE INDEX. If an option was set
	 * before, the old value will be overwritten
	 * @param $name string Option name
	 * @param $value string Option value
	 */",
 "/**
	 * Execute a SELECT query based on the values in the internal arrays
	 * @param $method string Function the query should be attributed to.
	 *  You should usually use __METHOD__ here
	 * @param $extraQuery array Query data to add but not store in the object
	 *  Format is array( \'tables\' => ..., \'fields\' => ..., \'where\' => ..., \'options\' => ..., \'join_conds\' => ... )
	 * @return ResultWrapper
	 */",
 "/**
	 * Estimate the row count for the SELECT query that would be run if we
	 * called select() right now, and check if it\'s acceptable.
	 * @return bool true if acceptable, false otherwise
	 */",
 "/**
	 * Add information (title and namespace) about a Title object to a
	 * result array
	 * @param $arr array Result array ?? la ApiResult
	 * @param $title Title
	 * @param $prefix string Module prefix
	 */",
 "/**
	 * Override this method to request extra fields from the pageSet
	 * using $pageSet->requestField(\'fieldName\')
	 * @param $pageSet ApiPageSet
	 */",
 "/**
	 * Get the main Query module
	 * @return ApiQuery
	 */",
 "/**
	 * Add a sub-element under the page element with the given page ID
	 * @param $pageId int Page ID
	 * @param $data array Data array ?? la ApiResult
	 * @return bool Whether the element fit in the result
	 */",
 "/**
	 * Same as addPageSubItems(), but one element of $data at a time
	 * @param $pageId int Page ID
	 * @param $item array Data array ?? la ApiResult
	 * @param $elemname string XML element name. If null, getModuleName()
	 *  is used
	 * @return bool Whether the element fit in the result
	 */",
 "/**
	 * Set a query-continue value
	 * @param $paramName string Parameter name
	 * @param $paramValue string Parameter value
	 */",
 "/**
	 * Get the Query database connection (read-only)
	 * @return DatabaseBase
	 */",
 "/**
	 * Selects the query database connection with the given name.
	 * See ApiQuery::getNamedDB() for more information
	 * @param $name string Name to assign to the database connection
	 * @param $db int One of the DB_* constants
	 * @param $groups array Query groups
	 * @return Database
	 */",
 "/**
	 * Get the PageSet object to work on
	 * @return ApiPageSet
	 */",
 "/**
	 * Convert a title to a DB key
	 * @param $title string Page title with spaces
	 * @return string Page title with underscores
	 */",
 "/**
	 * The inverse of titleToKey()
	 * @param $key string Page title with underscores
	 * @return string Page title with spaces
	 */",
 "/**
	 * An alternative to titleToKey() that doesn\'t trim trailing spaces
	 * @param $titlePart string Title part with spaces
	 * @return string Title part with underscores
	 */",
 "/**
	 * An alternative to keyToTitle() that doesn\'t trim trailing spaces
	 * @param $keyPart string Key part with spaces
	 * @return string Key part with underscores
	 */",
 "/**
	 * Gets the personalised direction parameter description
	 *
	 * @param string $p ModulePrefix
	 * @param string $extraDirText Any extra text to be appended on the description
	 * @return array
	 */",
 "/**
	 * @param $query String
	 * @param $protocol String
	 * @return null|string
	 */",
 "/**
	 * Filters hidden users (where the user doesn\'t have the right to view them)
	 * Also adds relevant block information
	 *
	 * @param bool $showBlockInfo
	 * @return void
	 */",
 "/**
	 * @param $hash string
	 * @return bool
	 */",
 "/**
	 * @param $hash string
	 * @return bool
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * Get version string for use in the API help output
	 * @return string
	 */",
 "/**
 * This is a base class for all Query modules.
 * It provides some common functionality such as constructing various SQL
 * queries.
 *
 * @ingroup API
 */",
 "/**
	 * Switch this module to generator mode. By default, generator mode is
	 * switched off and the module acts like a normal query module.
	 */",
 "/**
	 * Overrides base class to prepend \'g\' to every generator parameter
	 * @param $paramName string Parameter name
	 * @return string Prefixed parameter name
	 */",
 "/**
	 * Execute this module as a generator
	 * @param $resultPageSet ApiPageSet: All output should be appended to
	 *  this object
	 */",
 "/**
 * @ingroup API
 */",
 "/**
	 * Make a new temporary file on the file system.
	 * Temporary files may be purged when the file object falls out of scope.
	 * 
	 * @param $prefix string
	 * @param $extension string
	 * @return TempFSFile|null 
	 */",
 "/**
	 * Purge this file off the file system
	 * 
	 * @return bool Success
	 */",
 "/**
	 * Clean up the temporary file only after an object goes out of scope
	 *
	 * @param $object Object
	 * @return void
	 */",
 "/**
	 * Set flag to not clean up after the temporary file
	 *
	 * @return void
	 */",
 "/**
	 * Cleans up after the temporary file by deleting it
	 */",
 "/**
 * This class is used to hold the location and do limited manipulation
 * of files stored temporarily (usually this will be $wgTmpDirectory)
 *
 * @ingroup FileBackend
 */",
 "/**
 * API PHP\'s var_export() output formatter
 * @ingroup API
 */",
 "/** @dataProvider providePluralFourForms */",
 "/** @dataProvider providePluralTwoForms */",
 "/** Tests for MediaWiki languages/classes/LanguageUk.php */",
 "/**
	 * Entry point
	 *
	 * @param $par String or null
	 */",
 "/**
	 * Set up basic search parameters from the request and user settings.
	 *
	 * @see tests/phpunit/includes/specials/SpecialSearchTest.php
	 */",
 "/**
	 * If an exact title match can be found, jump straight ahead to it.
	 *
	 * @param $term String
	 */",
 "/**
	 * @param $term String
	 */",
 "/**
	 * @param $t Title
	 */",
 "/**
	 * @param $term string
	 */",
 "/**
	 * Extract \"power search\" namespace settings from the request object,
	 * returning a list of index numbers to search.
	 *
	 * @param $request WebRequest
	 * @return Array
	 */",
 "/**
	 * Reconstruct the \'power search\' options for links
	 *
	 * @return Array
	 */",
 "/**
	 * Show whole set of results
	 *
	 * @param $matches SearchResultSet
	 *
	 * @return string
	 */",
 "/**
	 * Format a single hit result
	 *
	 * @param $result SearchResult
	 * @param $terms Array: terms to highlight
	 *
	 * @return string
	 */",
 "/**
	 * Show results from other wikis
	 *
	 * @param $matches SearchResultSet
	 * @param $query String
	 *
	 * @return string
	 */",
 "/**
	 * Show single interwiki link
	 *
	 * @param $result SearchResult
	 * @param $lastInterwiki String
	 * @param $terms Array
	 * @param $query String
	 * @param $customCaptions Array: iw prefix -> caption
	 *
	 * @return string
	 */",
 "/**
	 * @param $profile
	 * @param $term
	 * @return String
	 */",
 "/**
	 * Generates the power search box at [[Special:Search]]
	 *
	 * @param $term String: search term
	 * @param $opts array
	 * @return String: HTML form
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * @param $term
	 * @param $resultsShown
	 * @param $totalNum
	 * @return string
	 */",
 "/**
	 * @param $term string
	 * @return string
	 */",
 "/**
	 * Make a search link with some target namespaces
	 *
	 * @param $term String
	 * @param $namespaces Array ignored
	 * @param $label String: link\'s text
	 * @param $tooltip String: link\'s tooltip
	 * @param $params Array: query string parameters
	 * @return String: HTML fragment
	 */",
 "/**
	 * Check if query starts with image: prefix
	 *
	 * @param $term String: the string to check
	 * @return Boolean
	 */",
 "/**
	 * Check if query starts with all: prefix
	 *
	 * @param $term String: the string to check
	 * @return Boolean
	 */",
 "/**
	 * @since 1.18
	 *
	 * @return SearchEngine
	 */",
 "/**
	 * Users of hook SpecialSearchSetupEngine can use this to
	 * add more params to links to not lose selection when
	 * user navigates search results.
	 * @since 1.18
	 *
	 * @param $key
	 * @param $value
	 */",
 "/**
 * implements Special:Search - Run text & title search and display the output
 * @ingroup SpecialPage
 */",
 "/** Hiligaynon (Ilonggo)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Anjoeli9806
 * @author Erythrii
 * @author Jose77
 * @author Kguirnela
 * @author Tagimata
 */",
 "/**
	 * @dataProvider provider_testIsStoragePath
	 */",
 "/**
	 * @dataProvider provider_testSplitStoragePath
	 */",
 "/**
	 * @dataProvider provider_normalizeStoragePath
	 */",
 "/**
	 * @dataProvider provider_testParentStoragePath
	 */",
 "/**
	 * @dataProvider provider_testExtensionFromPath
	 */",
 "/**
	 * @dataProvider provider_testStore
	 */",
 "/**
	 * @dataProvider provider_testCopy
	 */",
 "/**
	 * @dataProvider provider_testMove
	 */",
 "/**
	 * @dataProvider provider_testDelete
	 */",
 "/**
	 * @dataProvider provider_testCreate
	 */",
 "/**
	 * @dataProvider provider_testCreate
	 */",
 "/**
	 * @dataProvider provider_testConcatenate
	 */",
 "/**
	 * @dataProvider provider_testGetFileStat
	 */",
 "/**
	 * @dataProvider provider_testGetFileContents
	 */",
 "/**
	 * @dataProvider provider_testGetLocalCopy
	 */",
 "/**
	 * @dataProvider provider_testGetLocalReference
	 */",
 "/**
	 * @dataProvider provider_testPrepareAndClean
	 */",
 "/**
 * @group FileRepo
 * @group FileBackend
 */",
 "/** Basque (Euskara)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author An13sa
 * @author Bengoa
 * @author Helix84
 * @author Kaganer
 * @author Kaustubh
 * @author Kobazulo
 * @author Malafaya
 * @author Reedy
 * @author Theklan
 * @author Unai Fdz. de Beto??o
 * @author Urhixidur
 * @author Xabier Armendaritz
 * @author ???????? ????????????????
 */",
 "/**
	 * Check if the given file is indeed a valid DjVu image file
	 * @return bool
	 */",
 "/**
	 * Return data in the style of getimagesize()
	 * @return array or false on failure
	 */",
 "/**
	 * For debugging; dump the IFF chunk structure
	 */",
 "/**
	 * Return an XML string describing the DjVu image
	 * @return string
	 */",
 "/**
	 * Hack to temporarily work around djvutoxml bug
	 */",
 "/**
 * Support for detecting/validating DjVu image files and getting
 * some basic file metadata (resolution etc)
 *
 * File format docs are available in source package for DjVuLibre:
 * http://djvulibre.djvuzone.org/
 *
 * @ingroup Media
 */",
 "/**
 * Internationalisation file for extension ParserFunctions.
 *
 * @file
 * @ingroup Extensions
 */",
 "/** Message documentation (Message documentation)
 * @author Jon Harald S??by
 * @author Kghbln
 * @author Meno25
 * @author Siebrand
 * @author The Evil IP address
 */",
 "/** Afrikaans (Afrikaans)
 * @author Naudefj
 */",
 "/** Gheg Albanian (Geg??)
 * @author Mdupont
 */",
 "/** Aragonese (Aragon??s)
 * @author Juanpabl
 */",
 "/** Arabic (??????????????)
 * @author Aiman titi
 * @author Meno25
 */",
 "/** Aramaic (??????????)
 * @author Basharh
 */",
 "/** Egyptian Spoken Arabic (????????)
 * @author Ghaly
 * @author Meno25
 * @author Ramsis II
 */",
 "/** Assamese (??????????????????)
 * @author Rajuonline
 */",
 "/** Asturian (Asturianu)
 * @author Esbardu
 * @author Xuacu
 */",
 "/** Azerbaijani (Az??rbaycanca)
 * @author Cekli829
 */",
 "/** Bashkir (??????????????????)
 * @author Assele
 */",
 "/** Southern Balochi (?????????? ????????????)
 * @author Mostafadaneshvar
 */",
 "/** Belarusian (Tara??kievica orthography) (??????????????????????? (??????????????????????)???)
 * @author EugeneZelenko
 * @author Jim-by
 * @author Red Winged Duck
 */",
 "/** Bulgarian (??????????????????)
 * @author DCLXVI
 * @author Spiritia
 */",
 "/** Bengali (???????????????)
 * @author Bellayet
 * @author Zaheen
 */",
 "/** Breton (Brezhoneg)
 * @author Fulup
 */",
 "/** Bosnian (Bosanski)
 * @author CERminator
 * @author Seha
 */",
 "/** Catalan (Catal??)
 * @author Jordi Roqu??
 * @author Qllach
 * @author SMP
 */",
 "/** Chechen (??????????????)
 * @author Sasan700
 */",
 "/** Czech (??esky)
 * @author Danny B.
 * @author Li-sung
 * @author Mat??j Grabovsk??
 * @author Mormegil
 * @author Sp5uhe
 */",
 "/** Danish (Dansk)
 * @author Byrial
 * @author Morten LJ
 * @author Peter Alberti
 */",
 "/** German (Deutsch)
 * @author Kghbln
 * @author LWChris
 * @author Metalhead64
 * @author Raimond Spekking
 * @author Rentenirer
 * @author Rillke
 */",
 "/** Swiss High German (Schweizer Hochdeutsch)
 * @author MichaelFrey
 */",
 "/** Zazaki (Zazaki)
 * @author Aspar
 */",
 "/** Lower Sorbian (Dolnoserbski)
 * @author Michawiki
 */",
 "/** Greek (????????????????)
 * @author Consta
 * @author Dead3y3
 * @author Omnipaedista
 * @author ??????????????
 */",
 "/** British English (British English)
 * @author Happy-melon
 */",
 "/** Esperanto (Esperanto)
 * @author Yekrats
 */",
 "/** Spanish (Espa??ol)
 * @author Crazymadlover
 * @author Muro de Aguas
 * @author Remember the dot
 * @author Sanbec
 */",
 "/** Estonian (Eesti)
 * @author Pikne
 */",
 "/** Basque (Euskara)
 * @author An13sa
 * @author Kobazulo
 */",
 "/** Persian (??????????)
 * @author Ebraminio
 * @author Huji
 * @author Wayiran
 */",
 "/** Finnish (Suomi)
 * @author Agony
 * @author Cimon Avaro
 * @author Nike
 */",
 "/** French (Fran??ais)
 * @author Crochet.david
 * @author Gomoko
 * @author Grondin
 * @author Hashar
 * @author IAlex
 * @author Od1n
 * @author Sherbrooke
 * @author Urhixidur
 * @author Verdy p
 */",
 "/** Franco-Proven??al (Arpetan)
 * @author ChrisPtDe
 */",
 "/** Galician (Galego)
 * @author Alma
 * @author Elisardojm
 * @author Toli??o
 * @author Xos??
 */",
 "/** Ancient Greek (????????????? ??????????????????)
 * @author Omnipaedista
 */",
 "/** Swiss German (Alemannisch)
 * @author Als-Holder
 */",
 "/** Hebrew (??????????)
 * @author Amire80
 */",
 "/** Hindi (??????????????????)
 * @author Kaustubh
 * @author Shyam
 */",
 "/** Croatian (Hrvatski)
 * @author Dalibor Bosits
 * @author Dnik
 * @author Ex13
 * @author SpeedyGonsales
 */",
 "/** Upper Sorbian (Hornjoserbsce)
 * @author Michawiki
 */",
 "/** Hungarian (Magyar)
 * @author Dani
 */",
 "/** Interlingua (Interlingua)
 * @author McDutchie
 */",
 "/** Indonesian (Bahasa Indonesia)
 * @author IvanLanin
 * @author Meursault2004
 * @author Rex
 */",
 "/** Ido (Ido)
 * @author Malafaya
 */",
 "/** Italian (Italiano)
 * @author Beta16
 * @author BrokenArrow
 * @author Darth Kule
 * @author Pietrodn
 */",
 "/** Japanese (?????????)
 * @author Aotake
 * @author Fryed-peach
 * @author JtFuruhata
 * @author Ohgi
 * @author ????????????
 */",
 "/** Javanese (Basa Jawa)
 * @author Meursault2004
 */",
 "/** Georgian (?????????????????????)
 * @author BRUTE
 * @author Dawid Deutschland
 */",
 "/** Kazakh (Arabic script) (????????????????? (??????????)???) */",
 "/** Kazakh (Cyrillic) (?????????????? (Cyrillic)) */",
 "/** Kazakh (Latin) (?????????????? (Latin)) */",
 "/** Khmer (???????????????????????????)
 * @author Lovekhmer
 * @author Thearith
 * @author ???????????????????????????
 */",
 "/** Korean (?????????)
 * @author Klutzy
 * @author Kwj2772
 * @author ToePeu
 * @author Yknok29
 */",
 "/** Colognian (Ripoarisch)
 * @author Purodha
 * @author Rentenirer
 */",
 "/** Luxembourgish (L??tzebuergesch)
 * @author Robby
 */",
 "/** Limburgish (Limburgs)
 * @author Matthias
 * @author Ooswesthoesbes
 */",
 "/** Lithuanian (Lietuvi??)
 * @author Hugo.arg
 */",
 "/** Latvian (Latvie??u)
 * @author Papuass
 */",
 "/** Macedonian (????????????????????)
 * @author Bjankuloski06
 * @author Brest
 */",
 "/** Malayalam (??????????????????)
 * @author Praveenp
 * @author Shijualex
 */",
 "/** Marathi (???????????????)
 * @author Htt
 * @author Kaustubh
 */",
 "/** Malay (Bahasa Melayu)
 * @author Anakmalaysia
 * @author Aurora
 * @author Aviator
 * @author Kurniasan
 */",
 "/** Erzya (????????????)
 * @author Botuzhaleny-sodamo
 */",
 "/** Nahuatl (N??huatl)
 * @author Fluence
 */",
 "/** Low German (Plattd????tsch)
 * @author Slomox
 */",
 "/** Nepali (??????????????????) */",
 "/** Dutch (Nederlands)
 * @author SPQRobin
 * @author Siebrand
 */",
 "/** Norwegian Nynorsk (???Norsk (nynorsk)???)
 * @author Eirik
 * @author Frokor
 * @author Gunnernett
 * @author Harald Khan
 */",
 "/** Norwegian (bokm??l)??? (???Norsk (bokm??l)???)
 * @author Event
 * @author Jon Harald S??by
 * @author Laaknor
 */",
 "/** Occitan (Occitan)
 * @author Cedric31
 */",
 "/** Polish (Polski)
 * @author Derbeth
 * @author Grzechooo
 * @author Sp5uhe
 * @author Woytecr
 */",
 "/** Piedmontese (Piemont??is)
 * @author B??rto \'d S??ra
 * @author Dragon??t
 */",
 "/** Western Punjabi (????????????)
 * @author Khalid Mahmood
 */",
 "/** Pashto (????????)
 * @author Ahmed-Najib-Biabani-Ibrahimkhel
 */",
 "/** Portuguese (Portugu??s)
 * @author Hamilton Abreu
 * @author Malafaya
 */",
 "/** Brazilian Portuguese (Portugu??s do Brasil)
 * @author Eduardo.mps
 * @author Giro720
 */",
 "/** Quechua (Runa Simi)
 * @author AlimanRuna
 */",
 "/** Romanian (Rom??n??)
 * @author KlaudiuMihaila
 * @author Minisarm
 * @author Stelistcristi
 */",
 "/** Tarand??ne (Tarand??ne)
 * @author Joetaras
 */",
 "/** Russian (??????????????)
 * @author G0rn
 * @author ?????????????????? ??????????????
 */",
 "/** Rusyn (????????????????????)
 * @author Gazeb
 */",
 "/** Sakha (???????? ????????)
 * @author HalanTul
 */",
 "/** Sicilian (Sicilianu)
 * @author Melos
 * @author Santu
 */",
 "/** Sinhala (???????????????)
 * @author Budhajeewa
 * @author ?????????????????????????????????
 */",
 "/** Slovak (Sloven??ina)
 * @author Helix84
 */",
 "/** Slovenian (Sloven????ina)
 * @author Dbc334
 */",
 "/** Albanian (Shqip)
 * @author Olsi
 * @author Vinie007
 */",
 "/** Serbian Cyrillic ekavian (??????????????? (????????????????)???)
 * @author Millosh
 * @author Rancher
 * @author Verlor
 */",
 "/** Serbian Latin ekavian (???Srpski (latinica)???)
 * @author Michaello
 */",
 "/** Seeltersk (Seeltersk)
 * @author Pyt
 */",
 "/** Sundanese (Basa Sunda)
 * @author Irwangatot
 * @author Kandar
 */",
 "/** Swedish (Svenska)
 * @author Ainali
 * @author Lejonel
 * @author Lokal Profil
 * @author M.M.S.
 * @author Najami
 * @author WikiPhoenix
 */",
 "/** Telugu (??????????????????)
 * @author Mpradeep
 * @author Veeven
 */",
 "/** Tajik (Cyrillic) (???????????? (Cyrillic))
 * @author Ibrahim
 */",
 "/** Tajik (Latin) (???????????? (Latin))
 * @author Liangent
 */",
 "/** Thai (?????????)
 * @author Ans
 */",
 "/** Turkmen (T??rkmen??e)
 * @author Hanberke
 */",
 "/** Tagalog (Tagalog)
 * @author AnakngAraw
 */",
 "/** Turkish (T??rk??e)
 * @author Joseph
 */",
 "/** Ukrainian (????????????????????)
 * @author AS
 * @author Ahonc
 */",
 "/** V??neto (V??neto)
 * @author Candalua
 */",
 "/** Veps (Vepsan kel\')
 * @author ?????????? ????????????????
 */",
 "/** Vietnamese (Ti???ng Vi???t)
 * @author Minh Nguyen
 * @author Vinhtantran
 */",
 "/** Volap??k (Volap??k)
 * @author Smeira
 */",
 "/** Yiddish (????????????)
 * @author ????????????????
 */",
 "/** Yoruba (Yor??b??)
 * @author Demmy
 */",
 "/** Cantonese (??????)
 * @author Shinjiman
 */",
 "/** Simplified Chinese (?????????(??????)???)
 * @author Hydra
 * @author Liangent
 * @author PhiLiP
 * @author Philip
 * @author Shinjiman
 * @author ???pp
 */",
 "/** Traditional Chinese (?????????(??????)???)
 * @author Gaoxuewei
 * @author Liangent
 * @author Mark85296341
 * @author Shinjiman
 * @author Waihorace
 */",
 "/**
	 * @param $resultPageSet ApiPageSet
	 * @return void
	 */",
 "/**
 * @ingroup API
 */",
 "/**
 * Selenium server manager
 *
 * @file
 * @ingroup Testing
 * Copyright (C) 2010 Nadeesha Weerasinghe <nadeesha@calcey.com>
 * http://www.calcey.com/ 
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @addtogroup Testing
 *
 */",
 "/** Moldavian (????????????????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Comp1089
 * @author Node ue
 * @author ???????? ????????????????
 */",
 "/** Tajik (Latin script) (tojik??)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Kaganer
 * @author Liangent
 */",
 "/** Ewe (E??egbe)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Cbrown1023
 * @author Natsubee
 */",
 "/**
	 * Encode value and expiry for storage
	 * @param $value
	 * @param $expiry
	 *
	 * @return string
	 */",
 "/**
	 * @return array list containing value first and expiry second
	 */",
 "/**
 * Cache that uses DBA as a backend.
 * Slow due to the need to constantly open and close the file to avoid holding
 * writer locks. Intended for development use only,  as a memcached workalike
 * for systems that don\'t have it.
 *
 * On construction you can pass array( \'dir\' => \'/some/path\' ); as a parameter
 * to override the default DBA files directory (wgTmpDirectory).
 *
 * @ingroup Cache
 */",
 "/** Eastern Canadian (Aboriginal syllabics) (??????????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 */",
 "/**
	* This does the photoshop image resource app13 block
	* of interest, IPTC-IIM metadata is stored here.
	*
	* Mostly just calls doPSIR and doIPTC
	*
	* @param String $app13 String containing app13 block from jpeg file
	*/",
 "/**
	 * Get exif info using exif class.
	 * Basically what used to be in BitmapHandler::getMetadata().
	 * Just calls stuff in the Exif class.
	 *
	 * Parameters are passed to the Exif class.
	 *
	 * @param $filename string
	 * @param $byteOrder string
	 */",
 "/** Add misc metadata. Warning: atm if the metadata category
	* doesn\'t have a priority, it will be silently discarded.
	*
	* @param Array $metaArray array of metadata values
	* @param string $type type. defaults to other. if two things have the same type they\'re merged
	*/",
 "/**
	* Merge together the various types of metadata
	* the different types have different priorites,
	* and are merged in order.
	*
	* This function is generally called by the media handlers\' getMetadata()
	*
	* @return Array metadata array
	*/",
 "/** Main entry point for jpeg\'s.
	 *
	 * @param $filename string filename (with full path)
	 * @return metadata result array.
	 * @throws MWException on invalid file.
	 */",
 "/** Entry point for png
	 * At some point in the future this might
	 * merge the png various tEXt chunks to that
	 * are interesting, but for now it only does XMP
	 *
	 * @param $filename String full path to file
	 * @return Array Array for storage in img_metadata.
	 */",
 "/** function for gif images.
	 *
	 * They don\'t really have native metadata, so just merges together
	 * XMP and image comment.
	 *
	 * @param $filename full path to file
	 * @return Array metadata array
	 */",
 "/**
	 * This doesn\'t do much yet, but eventually I plan to add
	 * XMP support for Tiff. (PHP\'s exif support already extracts
	 * but needs some further processing because PHP\'s exif support
	 * is stupid...)
	 *
	 * @todo Add XMP support, so this function actually makes
	 * sense to put here.
	 *
	 * The various exceptions this throws are caught later.
	 * @param $filename String
	 * @return Array The metadata.
	 */",
 "/**
	 * Read the first 2 bytes of a tiff file to figure out
	 * Little Endian or Big Endian. Needed for exif stuff.
	 *
	 * @param $filename String The filename
	 * @return String \'BE\' or \'LE\' or false
	 */",
 "/**
Class to deal with reconciling and extracting metadata from bitmap images.
This is meant to comply with http://www.metadataworkinggroup.org/pdf/mwg_guidance.pdf

This sort of acts as an intermediary between MediaHandler::getMetadata
and the various metadata extractors.

@todo other image formats.
*/",
 "/**
	 * See @bug 28040
	 * Credits to irc://irc.freenode.net/wikipedia-tr users:
	 *  - berm
	 *  - []LuCkY[]
	 *  - Emperyan
	 * @see http://en.wikipedia.org/wiki/Dotted_and_dotless_I
	 * @dataProvider provideDottedAndDotlessI
	 */",
 "/** Tests for MediaWiki languages/LanguageTr.php */",
 "/**
*Amodulethatallowsforeditingandcreatingpages.
*
*Currently,thiswrapsaroundtheEditPageclassinanuglyway,
*EditPage.phpshouldberewrittentoprovideacleanerinterface
*@ingroupAPI
*/",
 "/**
	 * ResourceLoaderRegisterModules hook
	 */",
 "/**
	 * Ensures that the ResourceLoaderRegisterModules hook is called when a new ResourceLoader object is constructed
	 * @covers ResourceLoader::__construct
	 */",
 "/**
	 * @dataProvider provideValidModules
	 * @depends testCreatingNewResourceLoaderCallsRegistrationHook
	 * @covers ResourceLoader::register
	 * @covers ResourceLoader::getModule
	 */",
 "/**
	 * @dataProvider providePackedModules
	 */",
 "/**
	 * @dataProvider providePackedModules
	 */",
 "/**
 * Unconditional protection for NS_MEDIAWIKI since otherwise it\'s too easy for a
 * sysadmin to set $wgNamespaceProtection incorrectly and leave the wiki insecure.
 *
 * Note that this is the definition of editinterface and it can be granted to
 * all users if desired.
 */",
 "/**
 * The canonical names of namespaces 6 and 7 are, as of v1.14, \"File\"
 * and \"File_talk\".  The old names \"Image\" and \"Image_talk\" are
 * retained as aliases for backwards compatibility.
 */",
 "/**
 * Initialise $wgLockManagers to include basic FS version
 */",
 "/**
 * Definitions of the NS_ constants are in Defines.php
 * @private
 */",
 "/**
 * @var Language
 */",
 "/**
 * @var OutputPage
 */",
 "/**
 * @var Parser
 */",
 "/**
	 * Writes random images with random filenames to disk in the directory you specify, or current working directory
	 *
	 * @param $number Integer: number of filenames to write
	 * @param $format String: optional, must be understood by ImageMagick, such as \'jpg\' or \'gif\'
	 * @param $dir String: directory, optional (will default to current working directory)
	 * @return Array: filenames we just wrote
	 */",
 "/**
	 * Figure out how we write images. This is a factor of both format and the local system
	 * @param $format (a typical extension like \'svg\', \'jpg\', etc.)
	 */",
 "/**
	 * Return a number of randomly-generated filenames
	 * Each filename uses two words randomly drawn from the dictionary, like elephantine_spatula.jpg
	 *
	 * @param $number Integer: of filenames to generate
	 * @param $extension String: optional, defaults to \'jpg\'
	 * @param $dir String: optional, defaults to current working directory
	 * @return Array: of filenames
	 */",
 "/**
	 * Generate data representing an image of random size (within limits),
	 * consisting of randomly colored and sized upward pointing triangles against a random background color
	 * (This data is used in the writeImage* methods).
	 * @return {Mixed}
	 */",
 "/**
	 * Given array( array(\'x\' => 10, \'y\' => 20), array( \'x\' => 30, y=> 5 ) )
	 * returns \"10,20 30,5\"
	 * Useful for SVG and imagemagick command line arguments
	 * @param $shape: Array of arrays, each array containing x & y keys mapped to numeric values
	 * @return string
	 */",
 "/**
	 * Based on image specification, write a very simple SVG file to disk.
	 * Ignores the background spec because transparency is cool. :)
	 * @param $spec: spec describing background and shapes to draw
	 * @param $format: file format to write (which is obviously always svg here)
	 * @param $filename: filename to write to
	 */",
 "/**
		 * If the format is \'jpg\', will also add a random orientation -- the image will be drawn rotated with triangle points
		 * facing in some direction (0, 90, 180 or 270 degrees) and a countering rotation should turn the triangle points upward again
		 */",
 "/**
	 * Based on an image specification, write such an image to disk, using Imagick PHP extension
	 * @param $spec: spec describing background and circles to draw
	 * @param $format: file format to write
	 * @param $filename: filename to write to
	 */",
 "/**
	 * Given an image specification, produce rotated version
	 * This is used when simulating a rotated image capture with EXIF orientation
	 * @param $spec Object returned by getImageSpec
	 * @param $matrix 2x2 transformation matrix
	 * @return transformed Spec
	 */",
 "/**
	 * Given a matrix and a pair of images, return new position
	 * @param $matrix: 2x2 rotation matrix
	 * @param $x: x-coordinate number
	 * @param $y: y-coordinate number
	 * @return Array transformed with properties x, y
	 */",
 "/**
	 * Based on an image specification, write such an image to disk, using the command line ImageMagick program (\'convert\').
	 *
	 * Sample command line:
	 *  $ convert -size 100x60 xc:rgb(90,87,45) \
	 * 	 -draw \'fill rgb(12,34,56)   polygon 41,39 44,57 50,57 41,39\' \
	 *   -draw \'fill rgb(99,123,231) circle 59,39 56,57\' \
	 *   -draw \'fill rgb(240,12,32)  circle 50,21 50,3\'  filename.png
	 *
	 * @param $spec: spec describing background and shapes to draw
	 * @param $format: file format to write (unused by this method but kept so it has the same signature as writeImageWithApi)
	 * @param $filename: filename to write to
	 */",
 "/**
	 * Generate a string of random colors for ImageMagick or SVG, like \"rgb(12, 37, 98)\"
	 *
	 * @return {String}
	 */",
 "/**
	 * Get an array of random pairs of random words, like array( array( \'foo\', \'bar\' ), array( \'quux\', \'baz\' ) );
	 *
	 * @param $number Integer: number of pairs
	 * @return Array: of two-element arrays
	 */",
 "/**
	 * Return N random lines from a file
	 *
	 * Will throw exception if the file could not be read or if it had fewer lines than requested.
	 *
	 * @param $number_desired Integer: number of lines desired
	 * @return Array: of exactly n elements, drawn randomly from lines the file
	 */",
 "/**
 * RandomImageGenerator: does what it says on the tin.
 * Can fetch a random image, or also write a number of them to disk with random filenames.
 */",
 "/** Belarusian (Tara??kievica orthography) (??????????????????????? (??????????????????????)???)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Cesco
 * @author Crt
 * @author EugeneZelenko
 * @author Jim-by
 * @author Kaganer
 * @author Red Winged Duck
 * @author Renessaince
 * @author Wizardist
 * @author Zedlik
 * @author ????????
 */",
 "/**
	 * @covers InstallDocFormatter::format
	 * @dataProvider provideDocFormattingTests
	 */",
 "/**
	 * Provider for testFormat()
	 */",
 "/** Simplified Chinese (?????????(??????)???)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Alebcay
 * @author Anakmalaysia
 * @author Bencmq
 * @author Bi??hai
 * @author Breawycker
 * @author Chenxiaoqino
 * @author Chenzw
 * @author Chinalace
 * @author Dingyuang
 * @author Fantasticfears
 * @author Franklsf95
 * @author Gaoxuewei
 * @author Gzdavidwong
 * @author Happy
 * @author Hercule
 * @author Horacewai2
 * @author Hydra
 * @author Hzy980512
 * @author Jding2010
 * @author Jidanni
 * @author Jimmy xu wrk
 * @author Kaganer
 * @author KaiesTse
 * @author Kuailong
 * @author Liangent
 * @author Mark85296341
 * @author MarkAHershberger
 * @author Mys 721tx
 * @author O
 * @author Onecountry
 * @author PhiLiP
 * @author Shinjiman
 * @author Shizhao
 * @author Tommyang
 * @author Waihorace
 * @author Wilsonmess
 * @author Wmr89502270
 * @author Wong128hk
 * @author Wrightbus
 * @author Xiaomingyan
 * @author Yfdyh000
 * @author ???pp
 */",
 "/** Armenian (??????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Chaojoker
 * @author Pandukht
 * @author Reedy
 * @author Ruben Vardanyan (me@RubenVardanyan.com)
 * @author Teak
 * @author Togaed
 * @author Vacio
 * @author Xelgen
 * @author ???????? ????????????????
 */",
 "/**
	 * Constructor
	 *
	 * @param $db DatabaseBase A database subclass
	 * @param $tablesToClone Array An array of tables to clone, unprefixed
	 * @param $newTablePrefix String Prefix to assign to the tables
	 * @param $oldTablePrefix String Prefix on current tables, if not $wgDBprefix
	 * @param $dropCurrentTables bool
	 */",
 "/**
	 * Set whether to use temporary tables or not
	 * @param $u Bool Use temporary tables when cloning the structure
	 */",
 "/**
	 * Clone the table structure
	 */",
 "/**
	 * Change the prefix back to the original.
	 * @param $dropTables bool Optionally drop the tables we created
	 */",
 "/**
	 * Change the table prefix on all open DB connections/
	 *
	 * @param  $prefix
	 * @return void
	 */",
 "/**
	 * @param  $lb LoadBalancer
	 * @param  $prefix
	 * @return void
	 */",
 "/**
	 * @param  $db DatabaseBase
	 * @param  $prefix
	 * @return void
	 */",
 "/**
 * Helper class for making a copy of the database, mostly for unit testing.
 *
 * Copyright ?? 2010 Chad Horohoe <chad@anyonecanedit.org>
 * http://www.mediawiki.org/
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @ingroup Database
 */",
 "/**
	 * Run a bunch of URLs through SquidUpdate::purge()
	 * to benchmark Squid response times.
	 * @param $urls array A bunch of URLs to purge
	 * @param $trials int How many times to run the test?
	 * @return string
	 */",
 "/**
	 * Get an array of randomUrl()\'s.
	 * @param $length int How many urls to add to the array
	 * @return array
	 */",
 "/**
	 * Return a random URL of the wiki. Not necessarily an actual title in the
	 * database, but at least a URL that looks like one.
	 * @return string
	 */",
 "/**
	 * Create a random title string (not necessarily a Title object).
	 * For use with randomUrl().
	 * @return string
	 */",
 "/** Egyptian Spoken Arabic (????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Alnokta
 * @author Dudi
 * @author Ghaly
 * @author Meno25
 * @author Ouda
 * @author Ramsis II
 */",
 "/**
	 * Get the global Captcha instance
	 *
	 * @return Captcha|SimpleCaptcha
	 */",
 "/**
 * Maintenance script allows creating or editing pages using
 * the contents of a text file
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @file
 * @ingroup Maintenance
 * @author Rob Church <robchur@gmail.com>
 */",
 "/**
 * Convert history stubs that point to an external row to direct
 * external pointers
 */",
 "/**
 * Resolve a history stub
 */",
 "/**
 * Converts Tajiki to latin orthography
 * @ingroup Language
 */",
 "/**
 * Tajik (????????????)
 *
 * @ingroup Language
 */",
 "/**
	 * While we use database connection, this simple lie prevents useless --dbpass and
	 * --dbuser options from appearing in help message for this script.
	 *
	 * @return int DB constant
	 */",
 "/**
 * A special page that lists uncategorized categories
 *
 * @ingroup SpecialPage
 */",
 "/** Central Dusun (Dusun Bundu-liwan)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author FRANCIS5091
 * @author FRANELYA
 */",
 "/**
 * Query module to get information about the currently logged-in user
 *
 * @ingroup API
 */",
 "/**
	 * rules should be defined as -{Tifinagh | Latin-} -or-
	 * -{code:text | code:text | ...}-
	 * update: delete all rule parsing because it\'s not used
	 * currently, and just produces a couple of bugs
	 *
	 * @param $rule string
	 * @param $flags array
	 * @return array
	 */",
 "/**
	 * Do not convert content on talk pages
	 *
	 * @param $text string
	 * @param $parser Parser
	 * @return string
	 */",
 "/**
	 * A function wrapper:
	 *   - if there is no selected variant, leave the link
	 *     names as they were
	 *   - do not try to find variants for usernames
	 *
	 * @param $link string
	 * @param $nt Title
	 * @param $ignoreOtherCond bool
	 */",
 "/**
	 * We want our external link captions to be converted in variants,
	 * so we return the original text instead -{$text}-, except for URLs
	 *
	 * @param $text string
	 * @param $noParse bool
	 *
	 * @return string
	 */",
 "/**
	 * An ugly function wrapper for parsing Image titles
	 * (to prevent image name conversion)
	 *
	 * @param $text string
	 * @param $toVariant bool
	 *
	 * @return string
	 */",
 "/**
	 * It translates text into variant
	 *
	 * @param $text string
	 * @param $toVariant string
	 *
	 * @return string
	 */",
 "/**
 *
 */",
 "/**
 * Tachelhit
 *
 * @ingroup Language
 */",
 "/** Pashto (????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Ahmed-Najib-Biabani-Ibrahimkhel
 * @author Kaganer
 * @author Umherirrender
 */",
 "/** Lingala (Ling??la)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Bombo (on ln.wikipedia.org)
 * @author Eruedin
 * @author Moyogo
 */",
 "/**
	 * Return ANSI terminal escape code for changing text attribs/color
	 *
	 * @param $color String: semicolon-separated list of attribute/color codes
	 * @return String
	 */",
 "/**
	 * Return ANSI terminal escape code for restoring default text attributes
	 *
	 * @return String
	 */",
 "/**
 * @ingroup Testing
 *
 * Set of classes to help with test output and such. Right now pretty specific
 * to the parser tests but could be more useful one day :)
 *
 * @todo Fixme: Make this more generic
 */",
 "/** Hindi (??????????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Abhishrut
 * @author Akansha
 * @author Aksi great
 * @author Alolitas
 * @author Ansumang
 * @author Bhawani Gautam
 * @author Bhawani Gautam Rhk
 * @author Charu
 * @author Dineshjk
 * @author Hemant wikikosh1
 * @author Htt
 * @author Kaganer
 * @author Kamal
 * @author Kannankumar
 * @author Karunakar
 * @author Kaustubh
 * @author Kiranmayee
 * @author Krinkle
 * @author Kumar
 * @author Mayur
 * @author Odisha1
 * @author Omprakash
 * @author Pulkitsingh01
 * @author Purodha
 * @author Rajesh
 * @author Rajivkurjee
 * @author Reedy
 * @author Sajeel.irkal
 * @author Sayak Sarkar
 * @author Shrish
 * @author Shyam
 * @author Shyam123.ckp
 * @author Siddhartha Ghai
 * @author Subhashkataria21.90
 * @author Sunil Mohan
 * @author Taxman
 * @author Vibhijain
 * @author Wikiconference
 * @author ???????? ????????????????
 * @author ????????????
 * @author ??????????????? ????????????
 */",
 "/**
	 * Numbers given by Exif user agents are often magical, that is they
	 * should be replaced by a detailed explanation depending on their
	 * value which most of the time are plain integers. This function
	 * formats Exif (and other metadata) values into human readable form.
	 *
	 * @param $tags Array: the Exif data to format ( as returned by
	 *                    Exif::getFilteredData() or BitmapMetadataHandler )
	 * @return array
	 */",
 "/**
	* A function to collapse multivalued tags into a single value.
	* This turns an array of (for example) authors into a bulleted list.
	*
	* This is public on the basis it might be useful outside of this class.
	* 
	* @param $vals Array array of values
	* @param $type String Type of array (either lang, ul, ol).
	* lang = language assoc array with keys being the lang code
	* ul = unordered list, ol = ordered list
	* type can also come from the \'_type\' member of $vals.
	* @param $noHtml Boolean If to avoid returning anything resembling
	* html. (Ugly hack for backwards compatibility with old mediawiki). 
	* @return String single value (in wiki-syntax).
	*/",
 "/** Helper function for creating lists of translations.
	 *
	 * @param $value String value (this is not escaped)
	 * @param $lang String lang code of item or false
	 * @param $default Boolean if it is default value.
	 * @param $noHtml Boolean If to avoid html (for back-compat)
	 * @return language item (Note: despite how this looks,
	 * 	this is treated as wikitext not html).
	 */",
 "/**
	 * Convenience function for getFormattedData()
	 *
	 * @private
	 *
	 * @param $tag String: the tag name to pass on
	 * @param $val String: the value of the tag
	 * @param $arg String: an argument to pass ($1)
	 * @param $arg2 String: a 2nd argument to pass ($2)
	 * @return string A wfMsg of \"exif-$tag-$val\" in lower case
	 */",
 "/**
	 * Format a number, convert numbers from fractions into floating point
	 * numbers, joins arrays of numbers with commas.
	 *
	 * @private
	 *
	 * @param $num Mixed: the value to format
	 * @param $round digits to round to or false.
	 * @return mixed A floating point number or whatever we were fed
	 */",
 "/**
	 * Format a rational number, reducing fractions
	 *
	 * @private
	 *
	 * @param $num Mixed: the value to format
	 * @return mixed A floating point number or whatever we were fed
	 */",
 "/**
	 * Calculate the greatest common divisor of two integers.
	 *
	 * @param $a Integer: Numerator
	 * @param $b Integer: Denominator
	 * @return int
	 * @private
	 */",
 "/** Fetch the human readable version of a news code.
	 * A news code is an 8 digit code. The first two 
	 * digits are a general classification, so we just
	 * translate that.
	 *
	 * Note, leading 0\'s are significant, so this is
	 * a string, not an int.
	 *
	 * @param $val String: The 8 digit news code.
	 * @return The human readable form
	 */",
 "/**
	 * Format a coordinate value, convert numbers from floating point
	 * into degree minute second representation.
	 *
	 * @param $coord Array: degrees, minutes and seconds
	 * @param $type String: latitude or longitude (for if its a NWS or E)
	 * @return mixed A floating point number or whatever we were fed
	 */",
 "/**
	 * Format the contact info field into a single value.
	 *
	 * @param $vals Array array with fields of the ContactInfo
	 *    struct defined in the IPTC4XMP spec. Or potentially
	 *    an array with one element that is a free form text
	 *    value from the older iptc iim 1:118 prop.
	 *
	 * This function might be called from
	 * JpegHandler::convertMetadataVersion which is why it is
	 * public.
	 *
	 * @return String of html-ish looking wikitext
	 */",
 "/**
 * Format Image metadata values into a human readable form.
 *
 * Note lots of these messages use the prefix \'exif\' even though
 * they may not be exif properties. For example \'exif-ImageDescription\'
 * can be the Exif ImageDescription, or it could be the iptc-iim caption
 * property, or it could be the xmp dc:description property. This
 * is because these messages should be independent of how the data is
 * stored, sine the user doesn\'t care if the description is stored in xmp,
 * exif, etc only that its a description. (Additionally many of these properties
 * are merged together following the MWG standard, such that for example,
 * exif properties override XMP properties that mean the same thing if
 * there is a conflict).
 *
 * It should perhaps use a prefix like \'metadata\' instead, but there
 * is already a large number of messages using the \'exif\' prefix.
 *
 * @ingroup Media
 */",
 "/** For compatability with old FormatExif class
 * which some extensions use.
 *
 * @deprecated since 1.18
 *
**/",
 "/**
 * @author Bachsau
 * @author Niklas Laxstr??m
 */",
 "/**
	 * @param $out OutputPage
	 */",
 "/**
 * Inherit main code from SkinTemplate, set the CSS and template filter.
 * @ingroup Skins
 */",
 "/**
 * File repository with no files, for performance testing
 * @ingroup FileRepo
 */",
 "/** Message documentation (Message documentation)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author *Surak*
 * @author Ahonc
 * @author Aleator
 * @author AlexSm
 * @author Amire80
 * @author AnakngAraw
 * @author Ans
 * @author Antime
 * @author Aotake
 * @author Bangin
 * @author Bennylin
 * @author Beta16
 * @author Boivie
 * @author Brest
 * @author BrokenArrow
 * @author Byrial
 * @author Claudia Hattitten
 * @author Codex Sinaiticus
 * @author Crt
 * @author Dalibor Bosits
 * @author Darth Kule
 * @author Deadelf
 * @author Dsvyas
 * @author Emilkris33
 * @author Erwin
 * @author Erwin85
 * @author EugeneZelenko
 * @author Fitoschido
 * @author Fryed-peach
 * @author Garas
 * @author GerardM
 * @author Guglani
 * @author Gustronico
 * @author Hamilton Abreu
 * @author Helix84
 * @author Holek
 * @author Huji
 * @author IAlex
 * @author INkubusse
 * @author Iniquity
 * @author Iwan Novirion
 * @author Jon Harald S??by
 * @author Karduelis
 * @author Kghbln
 * @author Kizito
 * @author Klenje
 * @author Klutzy
 * @author Krinkle
 * @author Ktkaushik
 * @author Kwj2772
 * @author Leinad
 * @author Lejonel
 * @author Li-sung
 * @author Lloffiwr
 * @author MF-Warburg
 * @author Malafaya
 * @author MarkvA
 * @author MaxSem
 * @author McDutchie
 * @author Meno25
 * @author Metalhead64
 * @author MichaelFrey
 * @author Mihai
 * @author Mormegil
 * @author Mpradeep
 * @author Najami
 * @author Nemo bis
 * @author Niels
 * @author Nike
 * @author Node ue
 * @author Octahedron80
 * @author Od1n
 * @author Onecountry
 * @author OsamaK
 * @author PhiLiP
 * @author Piangpha
 * @author Platonides
 * @author Prima klasy4na
 * @author Prometheus.pyrphoros
 * @author Psubhashish
 * @author Purodha
 * @author Rancher
 * @author Raymond
 * @author Robby
 * @author Ryan Schmidt
 * @author SPQRobin
 * @author Sanbec
 * @author Sborsody
 * @author Seb35
 * @author Sherbrooke
 * @author Shushruth
 * @author Siebrand
 * @author Singularity
 * @author Sionnach
 * @author Slomox
 * @author Sp5uhe
 * @author Srhat
 * @author Subhashkataria21.90
 * @author Tedjuh10
 * @author Tgr
 * @author The Evil IP address
 * @author Toli??o
 * @author UV
 * @author Umherirrender
 * @author Urhixidur
 * @author Usarker
 * @author Verdy p
 * @author Vinhtantran
 * @author Waldir
 * @author Whym
 * @author Yekrats
 * @author Ynwala
 * @author Yuriy Apostol
 * @author Yyy
 * @author ??ek??il71pl
 * @author ????????????????
 */",
 "/** Thai (?????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Akkhaporn
 * @author Ans
 * @author Ariesanywhere
 * @author Harley Hartwell
 * @author Horus
 * @author Kaganer
 * @author Korrawit
 * @author LMNOP at Thai Wikipedia (manop@itshee.com) since July 2007
 * @author Manop
 * @author Mopza
 * @author Octahedron80
 * @author Passawuth
 * @author Woraponboonkerd
 * @author ???????? ????????????????
 * @author ????????????????????? ????????????????????????????????? (Jakkrit Vongsraluang) / PaePae
 * @author ??????????????? ????????????????????????????????? (Varakorn Ungvichian)
 */",
 "/** Czech (??esky)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Danny B.
 * @author Dontlietome7
 * @author Helix84
 * @author Jachym
 * @author Jkjk
 * @author Kaganer
 * @author Kuvaly
 * @author Li-sung
 * @author Martin Koz??k
 * @author Mat??j Grabovsk??
 * @author Mercy
 * @author Michawiki
 * @author Mormegil
 * @author Mr. Richard Bolla
 * @author Ragimiri
 * @author Reaperman
 * @author Urhixidur
 * @author Utar
 * @author ???????? ????????????????
 */",
 "/**
 * Date formats list for Special:Preferences
 * see $dateFormats for definitions
 */",
 "/**
 * Default date format to be used
 */",
 "/**
 * Date formats definitions
 *
 * ??SN - ??esk?? st??tn?? norma 01 6910 / Czech state norm 01 6910; numeral representation, basic = 1-12(31), padded = 01-12(31)
 * P??P - Pravidla ??esk??ho pravopisu / The rules of Czech ortography (ISBN 80-200-0475-0); verbal representation
 * ISO - ISO 8601:2004 - Data elements and interchange formats -- Information interchange -- Representation of dates and times
 * dt - date, time order
 * td - time, date order
 */",
 "/**
 * Default list of book sources
 * Hled??n?? knihy podle ISBN
 */",
 "/**
	 * @param $resultPageSet ApiPageSet
	 * @return void
	 */",
 "/**
	 * @param $resultPageSet ApiPageSet
	 * @return void
	 */",
 "/**
	 * @param $resultPageSet ApiPageSet
	 * @return void
	 */",
 "/**
 * This is a three-in-one module to query:
 *   * backlinks  - links pointing to the given page,
 *   * embeddedin - what pages transclude the given page within themselves,
 *   * imageusage - what pages use the given image
 *
 * @ingroup API
 */",
 "/**
	 * Should the exception use $wgOut to output the error ?
	 * @return bool
	 */",
 "/**
	 * Can the extension use wfMsg() to get i18n messages ?
	 * @return bool
	 */",
 "/**
	 * Run hook to allow extensions to modify the text of the exception
	 *
	 * @param $name String: class name of the exception
	 * @param $args Array: arguments to pass to the callback functions
	 * @return Mixed: string to output or null if any hook has been called
	 */",
 "/**
	 * Get a message from i18n
	 *
	 * @param $key String: message name
	 * @param $fallback String: default message if the message cache can\'t be
	 *                  called by the exception
	 * The function also has other parameters that are arguments for the message
	 * @return String message with arguments replaced
	 */",
 "/**
	 * If $wgShowExceptionDetails is true, return a HTML message with a
	 * backtrace to the error, otherwise show a message to ask to set it to true
	 * to show that information.
	 *
	 * @return String html to output
	 */",
 "/**
	 * If $wgShowExceptionDetails is true, return a text message with a
	 * backtrace to the error.
	 * @return string
	 */",
 "/**
	 * Return titles of this error page
	 * @return String
	 */",
 "/**
	 * Return the requested URL and point to file and line number from which the
	 * exception occured
	 *
	 * @return String
	 */",
 "/** Output the exception report using HTML */",
 "/**
	 * Output a report about the exception and takes care of formatting.
	 * It will be either HTML or plain text based on isCommandLine().
	 */",
 "/**
	 * @static
	 * @return bool
	 */",
 "/**
 * MediaWiki exception
 *
 * @ingroup Exception
 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
 * Exception class which takes an HTML error message, and does not
 * produce a backtrace. Replacement for OutputPage::fatalError().
 * @ingroup Exception
 */",
 "/**
	 * Note: these arguments are keys into wfMsg(), not text!
	 */",
 "/**
 * An error page which can definitely be safely rendered using the OutputPage
 * @ingroup Exception
 */",
 "/**
	 * @param $msg string A message key (default: \'badtitletext\')
	 * @param $params Array parameter to wfMsg()
	 */",
 "/**
	 * Just like ErrorPageError::report() but additionally set
	 * a 400 HTTP status code (bug 33646).
	 */",
 "/**
 * Show an error page on a badtitle.
 * Similar to ErrorPage, but emit a 400 HTTP error code to let mobile
 * browser it is not really a valid content.
 */",
 "/**
 * Show an error when a user tries to do something they do not have the necessary
 * permissions for.
 * @ingroup Exception
 */",
 "/**
 * Show an error when the wiki is locked/read-only and the user tries to do
 * something that requires write access
 * @ingroup Exception
 */",
 "/**
 * Show an error when the user hits a rate limit
 * @ingroup Exception
 */",
 "/**
 * Show an error when the user tries to do something whilst blocked
 * @ingroup Exception
 */",
 "/**
	 * Constructor
	 *
	 * @param $httpCode Integer: HTTP status code to send to the client
	 * @param $content String|Message: content of the message
	 * @param $header String|Message: content of the header (\<title\> and \<h1\>)
	 */",
 "/**
 * Show an error that looks like an HTTP server error.
 * Replacement for wfHttpError().
 *
 * @ingroup Exception
 */",
 "/**
	 * Install an exception handler for MediaWiki exception types.
	 */",
 "/**
	 * Report an exception to the user
	 */",
 "/**
	 * Print a message, if possible to STDERR.
	 * Use this in command line mode only (see isCommandLine)
	 * @param $message String Failure text
	 */",
 "/**
	 * Print a message after escaping it and converting newlines to <br>
	 * Use this for non-command line failures
	 * @param $message String Failure text
	 */",
 "/**
	 * Exception handler which simulates the appropriate catch() handling:
	 *
	 *   try {
	 *       ...
	 *   } catch ( MWException $e ) {
	 *       $e->report();
	 *   } catch ( Exception $e ) {
	 *       echo $e->__toString();
	 *   }
	 */",
 "/**
 * Handler class for MWExceptions
 * @ingroup Exception
 */",
 "/**
	 * Construct an ObjectFileCache from a Title and an action
	 * @param $title Title|string Title object or prefixed DB key string
	 * @param $action string
	 * @return HTMLFileCache
	 */",
 "/**
	 * Cacheable actions
	 * @return array
	 */",
 "/**
	 * Get the base file cache directory
	 * @return string
	 */",
 "/**
	 * Get the cache type subdirectory (with the trailing slash) or the empty string
	 * Alter the type -> directory mapping to put action=view cache at the root.
	 *
	 * @return string
	 */",
 "/**
	 * Check if pages can be cached for this request/user
	 * @param $context IContextSource
	 * @return bool
	 */",
 "/**
	 * Read from cache to context output
	 * @param $context IContextSource
	 * @return void
	 */",
 "/**
	 * Save this cache object with the given text.
	 * Use this as an ob_start() handler.
	 * @param $text string
	 * @return bool Whether $wgUseFileCache is enabled
	 */",
 "/**
	 * Clear the file caches for a page for all actions
	 * @param $title Title
	 * @return bool Whether $wgUseFileCache is enabled
	 */",
 "/**
 * Contain the HTMLFileCache class
 * @file
 * @ingroup Cache
 */",
 "/**
	 * @abstract
	 * @param $context ResourceLoaderContext
	 */",
 "/**
	 * Get the Database object used in getTitleMTimes(). Defaults to the local slave DB
	 * but subclasses may want to override this to return a remote DB object, or to return
	 * null if getTitleMTimes() shouldn\'t access the DB at all.
	 *
	 * NOTE: This ONLY works for getTitleMTimes() and getModifiedTime(), NOT FOR ANYTHING ELSE.
	 * In particular, it doesn\'t work for getting the content of JS and CSS pages. That functionality
	 * will use the local DB irrespective of the return value of this method.
	 *
	 * @return DatabaseBase|null
	 */",
 "/**
	 * @param $title Title
	 * @return null|string
	 */",
 "/**
	 * @param $context ResourceLoaderContext
	 * @return string
	 */",
 "/**
	 * @param $context ResourceLoaderContext
	 * @return array
	 */",
 "/**
	 * @param $context ResourceLoaderContext
	 * @return int|mixed
	 */",
 "/**
	 * @param $context ResourceLoaderContext
	 * @return bool
	 */",
 "/**
	 * Get the modification times of all titles that would be loaded for
	 * a given context.
	 * @param $context ResourceLoaderContext: Context object
	 * @return array( prefixed DB key => UNIX timestamp ), nonexistent titles are dropped
	 */",
 "/**
 * Abstraction for resource loader modules which pull from wiki pages
 *
 * This can only be used for wiki pages in the MediaWiki and User namespaces,
 * because of its dependence on the functionality of
 * Title::isCssJsSubpage.
 */",
 "/**
	 * Loads the current state of protection into the object.
	 */",
 "/**
	 * Get the expiry time for a given action, by combining the relevant inputs.
	 *
	 * @param $action string
	 * 
	 * @return string 14-char timestamp or \"infinity\", or false if the input was invalid
	 */",
 "/**
	 * Main entry point for action=protect and action=unprotect
	 */",
 "/**
	 * Show the input form with optional error message
	 *
	 * @param $err String: error message or null if there\'s no error
	 */",
 "/**
		 * Give extensions a change to handle added form items
		 *
		 * @since 1.19 you can (and you should) return false to abort saving;
		 *             you can also return an array of message name and its parameters
		 */",
 "/**
	 * Save submitted protection form
	 *
	 * @return Boolean: success
	 */",
 "/**
	 * Build the input form
	 *
	 * @return String: HTML form
	 */",
 "/**
	 * Build protection level selector
	 *
	 * @param $action String: action to protect
	 * @param $selected String: current protection level
	 * @return String: HTML fragment
	 */",
 "/**
	 * Prepare the label for a protection selector option
	 *
	 * @param $permission String: permission required
	 * @return String
	 */",
 "/**
	 * Show protection long extracts for this page
	 *
	 * @param $out OutputPage
	 * @access private
	 */",
 "/**
 * Handles the page protection UI and backend
 */",
 "/** Swahili (Kiswahili)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Ikiwaner
 * @author Jagwar
 * @author Kaganer
 * @author Lloffiwr
 * @author Malangali
 * @author Marcos
 * @author Muddyb Blast Producer
 * @author Robert Ullmann
 * @author ???????? ????????????????
 */",
 "/** Oriya (????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Ansumang
 * @author Jayantanth
 * @author Jnanaranjan Sahu
 * @author Jose77
 * @author MKar
 * @author Odisha1
 * @author Psubhashish
 * @author Sambiwiki
 * @author Shijualex
 * @author ??var Arnfj??r?? Bjarmason <avarab@gmail.com>
 */",
 "/** namespace translations from translatewiki.net 
 * @author Shijualex
 * @author Psubhashish
 */",
 "/**
	 * Parameters are $name (false), $id (false), $default (false)
	 * @dataProvider provideConstructionParameters
	 */",
 "/**
	 * Provide parameters for testConstructParameters() which use three
	 * parameters:
	 *  - $name    (default: false)
	 *  - $id      (default: false)
	 *  - $default (default: false)
	 * Provides a fourth parameters representing the expected HTML output
	 *
	 */",
 "/**
	 * Adding default later on should set the correct selection or
	 * raise an exception.
	 * To handle this, we need to render the options in getHtml()
	 */",
 "/**
	 * @param $db DatabaseBase
	 * @param  $table
	 * @param  $field
	 * @return null|PostgresField
	 */",
 "/**
 * This is the Postgres database abstraction layer.
 *
 * @file
 * @ingroup Database
 */",
 "/**
	 * Usually aborts on failure
	 */",
 "/**
	 * Postgres doesn\'t support selectDB in the same way MySQL does. So if the
	 * DB name doesn\'t match the open connection, open a new one
	 * @return
	 */",
 "/**
	 * Closes a database connection, if it is open
	 * Returns success, true if already closed
	 */",
 "/**
	 * This must be called after nextSequenceVal
	 */",
 "/**
	 * Estimate rows in dataset
	 * Returns estimated count, based on EXPLAIN output
	 * This is not necessarily an accurate estimate, so use sparingly
	 * Returns -1 if count cannot be found
	 * Takes same arguments as Database::select()
	 */",
 "/**
	 * Returns information about an index
	 * If errors are explicitly ignored, returns NULL on failure
	 */",
 "/**
	 * INSERT wrapper, inserts an array into a table
	 *
	 * $args may be a single associative array, or an array of these with numeric keys,
	 * for multi-row insert (Postgres version 8.2 and above only).
	 *
	 * @param $table   String: Name of the table to insert to.
	 * @param $args    Array: Items to insert into the table.
	 * @param $fname   String: Name of the function, for profiling
	 * @param $options String or Array. Valid options: IGNORE
	 *
	 * @return bool Success of insert operation. IGNORE always returns true.
	 */",
 "/**
	 * INSERT SELECT wrapper
	 * $varMap must be an associative array of the form array( \'dest1\' => \'source1\', ...)
	 * Source items may be literals rather then field names, but strings should be quoted with Database::addQuotes()
	 * $conds may be \"*\" to copy the whole table
	 * srcTable may be an array of tables.
	 * @todo FIXME: Implement this a little better (seperate select/insert)?
	 */",
 "/**
	 * Return the next in a sequence, save the value for retrieval via insertId()
	 */",
 "/**
	 * Return the current value of a sequence. Assumes it has been nextval\'ed in this session.
	 */",
 "/**
	 * Return aggregated value function call
	 */",
 "/**
	 * @return string wikitext of a link to the server software\'s web site
	 */",
 "/**
	 * @return string Version information from the database
	 */",
 "/**
	 * Query whether a given relation exists (in the given schema, or the
	 * default mw one if not given)
	 */",
 "/**
	 * For backward compatibility, this function checks both tables and
	 * views.
	 */",
 "/**
	 * Query whether a given schema exists. Returns true if it does, false if it doesn\'t.
	 */",
 "/**
	 * Returns true if a given role (i.e. user) exists, false otherwise.
	 */",
 "/**
	 * pg_field_type() wrapper
	 */",
 "/**
	 * @param $b
	 * @return Blob
	 */",
 "/**
	 * @param $s null|bool|Blob
	 * @return int|string
	 */",
 "/**
	 * Postgres specific version of replaceVars.
	 * Calls the parent version in Database.php
	 *
	 * @private
	 *
	 * @param $ins String: SQL string, read from a stream (usually tables.sql)
	 *
	 * @return string SQL string
	 */",
 "/**
	 * Various select options
	 *
	 * @private
	 *
	 * @param $options Array: an associative array of options to be turned into
	 *              an SQL query, valid keys are listed in the function.
	 * @return array
	 */",
 "/**
 * @ingroup Database
 */",
 "/** Khmer (???????????????????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Bunly
 * @author Chhorran
 * @author Kaganer
 * @author Kiensvay
 * @author Lovekhmer
 * @author Sovichet
 * @author T-Rithy
 * @author Thearith
 * @author ??var Arnfj??r?? Bjarmason <avarab@gmail.com>
 * @author ???????????????????????????
 * @author ????????? ??????????????????
 * @author ??????????????????????????????
 */",
 "/** Function to extract metadata segments of interest from jpeg files
	* based on GIFMetadataExtractor.
	*
	* we can almost use getimagesize to do this
	* but gis doesn\'t support having multiple app1 segments
	* and those can\'t extract xmp on files containing both exif and xmp data
	*
	* @param String $filename name of jpeg file
	* @return Array of interesting segments.
	* @throws MWException if given invalid file.
	*/",
 "/**
	* Helper function for jpegSegmentSplitter
	* @param &$fh FileHandle for jpeg file
	* @return data content of segment.
	*/",
 "/**
	* This reads the photoshop image resource.
	* Currently it only compares the iptc/iim hash
	* with the stored hash, which is used to determine the precedence
	* of the iptc data. In future it may extract some other info, like
	* url of copyright license.
	*
	* This should generally be called by BitmapMetadataHandler::doApp13()
	*
	* @param String $app13 photoshop psir app13 block from jpg.
	* @throws MWException (It gets caught next level up though)
	* @return String if the iptc hash is good or not.
	*/",
 "/**
* Class for reading jpegs and extracting metadata.
* see also BitmapMetadataHandler.
*
* Based somewhat on GIFMetadataExtrator.
*/",
 "/**
	 * UI interface for displaying a short message
	 * The parameters are like parameters to wfMsg().
	 * The messages will be in wikitext format, which will be converted to an
	 * output format such as HTML or text before being sent to the user.
	 * @param $msg
	 */",
 "/**
	 * Same as showMessage(), but for displaying errors
	 * @param $msg
	 */",
 "/**
	 * Show a message to the installing user by using a Status object
	 * @param $status Status
	 */",
 "/**
	 * Constructor, always call this from child classes.
	 */",
 "/**
	 * Get a list of known DB types.
	 *
	 * @return array
	 */",
 "/**
	 * Do initial checks of the PHP environment. Set variables according to
	 * the observed environment.
	 *
	 * It\'s possible that this may be called under the CLI SAPI, not the SAPI
	 * that the wiki will primarily run under. In that case, the subclass should
	 * initialise variables such as wgScriptPath, before calling this function.
	 *
	 * Under the web subclass, it can already be assumed that PHP 5+ is in use
	 * and that sessions are working.
	 *
	 * @return Status
	 */",
 "/**
	 * Set a MW configuration variable, or internal installer configuration variable.
	 *
	 * @param $name String
	 * @param $value Mixed
	 */",
 "/**
	 * Get an MW configuration variable, or internal installer configuration variable.
	 * The defaults come from $GLOBALS (ultimately DefaultSettings.php).
	 * Installer variables are typically prefixed by an underscore.
	 *
	 * @param $name String
	 * @param $default Mixed
	 *
	 * @return mixed
	 */",
 "/**
	 * Get an instance of DatabaseInstaller for the specified DB type.
	 *
	 * @param $type Mixed: DB installer for which is needed, false to use default.
	 *
	 * @return DatabaseInstaller
	 */",
 "/**
	 * Determine if LocalSettings.php exists. If it does, return its variables,
	 * merged with those from AdminSettings.php, as an array.
	 *
	 * @return Array
	 */",
 "/**
	 * Get a fake password for sending back to the user in HTML.
	 * This is a security mechanism to avoid compromise of the password in the
	 * event of session ID compromise.
	 *
	 * @param $realPassword String
	 *
	 * @return string
	 */",
 "/**
	 * Set a variable which stores a password, except if the new value is a
	 * fake password in which case leave it as it is.
	 *
	 * @param $name String
	 * @param $value Mixed
	 */",
 "/**
	 * On POSIX systems return the primary group of the webserver we\'re running under.
	 * On other systems just returns null.
	 *
	 * This is used to advice the user that he should chgrp his mw-config/data/images directory as the
	 * webserver user before he can install.
	 *
	 * Public because SqliteInstaller needs it, and doesn\'t subclass Installer.
	 *
	 * @return mixed
	 */",
 "/**
	 * Convert wikitext $text to HTML.
	 *
	 * This is potentially error prone since many parser features require a complete
	 * installed MW database. The solution is to just not use those features when you
	 * write your messages. This appears to work well enough. Basic formatting and
	 * external links work just fine.
	 *
	 * But in case a translator decides to throw in a #ifexist or internal link or
	 * whatever, this function is guarded to catch the attempted DB access and to present
	 * some fallback text.
	 *
	 * @param $text String
	 * @param $lineStart Boolean
	 * @return String
	 */",
 "/**
	 * @return ParserOptions
	 */",
 "/**
	 * Install step which adds a row to the site_stats table with appropriate
	 * initial values.
	 *
	 * @param $installer DatabaseInstaller
	 *
	 * @return Status
	 */",
 "/**
	 * Exports all wg* variables stored by the installer into global scope.
	 */",
 "/**
	 * Environment check for DB types.
	 * @return bool
	 */",
 "/**
	 * Environment check for register_globals.
	 */",
 "/**
	 * Some versions of libxml+PHP break < and > encoding horribly
	 */",
 "/**
	 * Test PHP (probably 5.3.1, but it could regress again) to make sure that
	 * reference parameters to __call() are not converted to null
	 */",
 "/**
	 * Environment check for magic_quotes_runtime.
	 */",
 "/**
	 * Environment check for magic_quotes_sybase.
	 */",
 "/**
	 * Environment check for mbstring.func_overload.
	 */",
 "/**
	 * Environment check for zend.ze1_compatibility_mode.
	 */",
 "/**
	 * Environment check for safe_mode.
	 */",
 "/**
	 * Environment check for the XML module.
	 */",
 "/**
	 * Environment check for the PCRE module.
	 */",
 "/**
	 * Environment check for available memory.
	 */",
 "/**
	 * Environment check for compiled object cache types.
	 */",
 "/**
	 * Scare user to death if they have mod_security
	 */",
 "/**
	 * Search for GNU diff3.
	 */",
 "/**
	 * Environment check for ImageMagick and GD.
	 */",
 "/**
	 * Environment check for the server hostname.
	 */",
 "/**
	 * Helper function to be called from envCheckServer()
	 * @return String
	 */",
 "/**
	 * Environment check for setting $IP and $wgScriptPath.
	 * @return bool
	 */",
 "/**
	 * Environment check for setting the preferred PHP file extension.
	 */",
 "/**
	 * TODO: document
	 * @return bool
	 */",
 "/**
	 * TODO: document
	 */",
 "/**
	 * Checks if suhosin.get.max_value_length is set, and if so, sets
	 * $wgResourceLoaderMaxQueryLength to that value in the generated
	 * LocalSettings file
	 */",
 "/**
	 * Convert a hex string representing a Unicode code point to that code point.
	 * @param $c String
	 * @return string
	 */",
 "/**
		 * This needs to be updated something that the latest libicu
		 * will properly normalize.  This normalization was found at
		 * http://www.unicode.org/versions/Unicode5.2.0/#Character_Additions
		 * Note that we use the hex representation to create the code
		 * points in order to avoid any Unicode-destroying during transit.
		 */",
 "/**
	 * Check the libicu version
	 */",
 "/**
	 * Get an array of likely places we can find executables. Check a bunch
	 * of known Unix-like defaults, as well as the PATH environment variable
	 * (which should maybe make it work for Windows?)
	 *
	 * @return Array
	 */",
 "/**
	 * Search a path for any of the given executable names. Returns the
	 * executable name if found. Also checks the version string returned
	 * by each executable.
	 *
	 * Used only by environment checks.
	 *
	 * @param $path String: path to search
	 * @param $names Array of executable names
	 * @param $versionInfo Boolean false or array with two members:
	 *		 0 => Command to run for version check, with $1 for the full executable name
	 *		 1 => String to compare the output with
	 *
	 * If $versionInfo is not false, only executables with a version
	 * matching $versionInfo[1] will be returned.
	 */",
 "/**
	 * Same as locateExecutable(), but checks in getPossibleBinPaths() by default
	 * @see locateExecutable()
	 * @param $names
	 * @param $versionInfo bool
	 * @return bool|string
	 */",
 "/**
	 * Checks if scripts located in the given directory can be executed via the given URL.
	 *
	 * Used only by environment checks.
	 */",
 "/**
	 * Checks for presence of an Apache module. Works only if PHP is running as an Apache module, too.
	 *
	 * @param $moduleName String: Name of module to check.
	 * @return bool
	 */",
 "/**
	 * ParserOptions are constructed before we determined the language, so fix it
	 *
	 * @param $lang Language
	 */",
 "/**
	 * Overridden by WebInstaller to provide lastPage parameters.
	 * @param $page string
	 * @return string
	 */",
 "/**
	 * Finds extensions that follow the format /extensions/Name/Name.php,
	 * and returns an array containing the value for \'Name\' for each found extension.
	 *
	 * @return array
	 */",
 "/**
	 * Installs the auto-detected extensions.
	 *
	 * @return Status
	 */",
 "/**
	 * Get an array of install steps. Should always be in the format of
	 * array(
	 *   \'name\'     => \'someuniquename\',
	 *   \'callback\' => array( $obj, \'method\' ),
	 * )
	 * There must be a config-install-$name message defined per step, which will
	 * be shown on install.
	 *
	 * @param $installer DatabaseInstaller so we can make callbacks
	 * @return array
	 */",
 "/**
	 * Actually perform the installation.
	 *
	 * @param $startCB Array A callback array for the beginning of each step
	 * @param $endCB Array A callback array for the end of each step
	 *
	 * @return Array of Status objects
	 */",
 "/**
	 * Generate $wgSecretKey. Will warn if we had to use an insecure random source.
	 *
	 * @return Status
	 */",
 "/**
	 * Generate a secret value for variables using our CryptRand generator.
	 * Produce a warning if the random source was insecure.
	 *
	 * @param $keys Array
	 * @return Status
	 */",
 "/**
	 * Create the first user account, grant it sysop and bureaucrat rights
	 *
	 * @return Status
	 */",
 "/**
	 * @param $s Status
	 */",
 "/**
	 * Insert Main Page with default content.
	 *
	 * @param $installer DatabaseInstaller
	 * @return Status
	 */",
 "/**
	 * Override the necessary bits of the config to run an installation.
	 */",
 "/**
	 * Add an installation step following the given step.
	 *
	 * @param $callback Array A valid installation callback array, in this form:
	 *    array( \'name\' => \'some-unique-name\', \'callback\' => array( $obj, \'function\' ) );
	 * @param $findStep String the step to find. Omit to put the step at the beginning
	 */",
 "/**
	 * Disable the time limit for execution.
	 * Some long-running pages (Install, Upgrade) will want to do this
	 */",
 "/**
 * Base installer class.
 *
 * This class provides the base for installation and update functionality
 * for both MediaWiki core and extensions.
 *
 * @ingroup Deployment
 * @since 1.17
 */",
 "/**
 * A special page that lists unused images
 *
 * @ingroup SpecialPage
 */",
 "/**
	 * Convert from the nominative form of a noun to some other case
	 * Invoked with {{grammar:case|word}}
	 *
	 * @param $word string
	 * @param $case string
	 * @return string
	 */",
 "/**
	 * Plural form transformations
	 *
	 * $forms[0] - singular form (for 1, 21, 31, 41...)
	 * $forms[1] - paucal form (for 2, 3, 4, 22, 23, 24, 32, 33, 34...)
	 * $forms[2] - plural form (for 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26...)
	 *
	 * Examples:
	 *   message with number
	 *     \"?????????????? $1 {{PLURAL:$1|??????????????????|??????????????????|??????????????????}}\"
	 *     (\"$1 change[s] were made)
	 *   message without number
	 *     \"???????????????? ???? ?????????? ???????? ?????????????????? ???? {{PLURAL:$1|?????????????????? ??????????????|?????????????????? ????????????????}}:\"
	 *     (\"The action cannot be performed for the following reason[s]\")
	 * @param $count int
	 * @param $forms array
	 *
	 * @return string
	 */",
 "/**
	 * Four-digit number should be without group commas (spaces)
	 * See manual of style at http://ru.wikipedia.org/wiki/??????????????????:????????????????????_????????????
	 * So \"1 234 567\", \"12 345\" but \"1234\"
	 *
	 * @param $_ string
	 *
	 * @return string
	 */",
 "/** Russian (?????????????? ????????)
  *
  * You can contact Alexander Sigachov (alexander.sigachov at Googgle Mail)
  *
  * @ingroup Language
  */",
 "/**
	 * Per docs in FileRepo, this needs to return false if we don\'t support versioned
	 * files. Well, we don\'t.
	 *
	 * @return File
	 */",
 "/**
	 * No-ops
	 */",
 "/**
	 * Return the imageurl from cache if possible
	 *
	 * If the url has been requested today, get it from cache
	 * Otherwise retrieve remote thumb url, check for local file.
	 *
	 * @param $name String is a dbkey form of a title
	 * @param $width
	 * @param $height
	 * @param String $param Other rendering parameters (page number, etc) from handler\'s makeParamString.
	 */",
 "/**
	 * @see FileRepo::getZoneUrl()
	 */",
 "/**
	 * Get the local directory corresponding to one of the basic zones
	 */",
 "/**
	 * Are we locally caching the thumbnails?
	 * @return bool
	 */",
 "/**
	 * The user agent the ForeignAPIRepo will use.
	 */",
 "/**
	 * Like a Http:get request, but with custom User-Agent.
	 * @see Http:get
	 */",
 "/**
 * A foreign repository with a remote MediaWiki with an API thingy
 *
 * Example config:
 *
 * $wgForeignFileRepos[] = array(
 *   \'class\'                  => \'ForeignAPIRepo\',
 *   \'name\'                   => \'shared\',
 *   \'apibase\'                => \'http://en.wikipedia.org/w/api.php\',
 *   \'fetchDescription\'       => true, // Optional
 *   \'descriptionCacheExpiry\' => 3600,
 * );
 *
 * @ingroup FileRepo
 */",
 "/**
	 * Constructor.
	 *
	 * @param $installer Installer subclass
	 */",
 "/**
	 * For $wgGroupPermissions, set a given [\'group\'][\'permission\'] value.
	 * @param $group String Group name
	 * @param $rightsArr Array An array of permissions, in the form of:
	 *   array( \'right\' => true, \'right2\' => false )
	 */",
 "/**
	 * Returns the escaped version of a string of php code.
	 *
	 * @param $string String
	 *
	 * @return String
	 */",
 "/**
	 * Return the full text of the generated LocalSettings.php file,
	 * including the extensions
	 *
	 * @return String
	 */",
 "/**
	 * Write the generated LocalSettings to a file
	 *
	 * @param $fileName String Full path to filename to write to
	 */",
 "/**
	 * @return String
	 */",
 "/**
	 * @return String
	 */",
 "/**
 * Class for generating LocalSettings.php file.
 *
 * @ingroup Deployment
 * @since 1.17
 */",
 "/**
 * Special page lists all uncategorised pages in the
 * template namespace
 *
 * @ingroup SpecialPage
 */",
 "/**
	 * Constructor. Parameters are:
	 *   - server:   A server info structure in the format required by each
	 *               element in $wgDBServers.
	 *
	 *   - purgePeriod: The average number of object cache requests in between
	 *                  garbage collection operations, where expired entries
	 *                  are removed from the database. Or in other words, the
	 *                  reciprocal of the probability of purging on any given
	 *                  request. If this is set to zero, purging will never be
	 *                  done.
	 *
	 *   - tableName:   The table name to use, default is \"objectcache\".
	 *
	 *   - shards:      The number of tables to use for data storage. If this is
	 *                  more than 1, table names will be formed in the style
	 *                  objectcacheNNN where NNN is the shard index, between 0 and
	 *                  shards-1. The number of digits will be the minimum number
	 *                  required to hold the largest shard index. Data will be
	 *                  distributed across all tables by key hash. This is for
	 *                  MySQL bugs 61735 and 61736.
	 *
	 * @param $params array
	 */",
 "/**
	 * @return DatabaseBase
	 */",
 "/**
	 * Get the table name for a given key
	 */",
 "/**
	 * Get the table name for a given shard index
	 */",
 "/**
	 * Delete objects from the database which expire before a certain date.
	 */",
 "/**
	 * Serialize an object and, if possible, compress the representation.
	 * On typical message and page data, this can provide a 3X decrease
	 * in storage requirements.
	 *
	 * @param $data mixed
	 * @return string
	 */",
 "/**
	 * Unserialize and, if necessary, decompress an object.
	 * @param $serial string
	 * @return mixed
	 */",
 "/**
	 * Handle a DBQueryError which occurred during a write operation.
	 * Ignore errors which are due to a read-only database, rethrow others.
	 */",
 "/**
	 * Create shard tables. For use from eval.php.
	 */",
 "/**
 * Class to store objects in the database
 *
 * @ingroup Cache
 */",
 "/**
 * Backwards compatibility alias
 */",
 "/** Sango (S??ng??)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Ice201 (on sg.wikipedia.org)
 * @author Mdkidiri
 */",
 "/**
	 * Get the appropriate HTML attributes to add to the \"a\" element of an ex-
	 * ternal link, as created by [wikisyntax].
	 *
	 * @param $class String: the contents of the class attribute; if an empty
	 *   string is passed, which is the default value, defaults to \'external\'.
	 * @deprecated since 1.18 Just pass the external class directly to something using Html::expandAttributes
	 */",
 "/**
	 * Get the appropriate HTML attributes to add to the \"a\" element of an in-
	 * terwiki link.
	 *
	 * @param $title String: the title text for the link, URL-encoded (???) but
	 *   not HTML-escaped
	 * @param $unused String: unused
	 * @param $class String: the contents of the class attribute; if an empty
	 *   string is passed, which is the default value, defaults to \'external\'.
	 */",
 "/**
	 * Get the appropriate HTML attributes to add to the \"a\" element of an in-
	 * ternal link.
	 *
	 * @param $title String: the title text for the link, URL-encoded (???) but
	 *   not HTML-escaped
	 * @param $unused String: unused
	 * @param $class String: the contents of the class attribute, default none
	 */",
 "/**
	 * Get the appropriate HTML attributes to add to the \"a\" element of an in-
	 * ternal link, given the Title object for the page we want to link to.
	 *
	 * @param $nt Title
	 * @param $unused String: unused
	 * @param $class String: the contents of the class attribute, default none
	 * @param $title Mixed: optional (unescaped) string to use in the title
	 *   attribute; if false, default to the name of the page we\'re linking to
	 */",
 "/**
	 * Common code for getLinkAttributesX functions
	 *
	 * @param $title string
	 * @param $class string
	 *
	 * @return string
	 */",
 "/**
	 * Return the CSS colour of a known link
	 *
	 * @param $t Title object
	 * @param $threshold Integer: user defined threshold
	 * @return String: CSS class
	 */",
 "/**
	 * This function returns an HTML link to the given target.  It serves a few
	 * purposes:
	 *   1) If $target is a Title, the correct URL to link to will be figured
	 *      out automatically.
	 *   2) It automatically adds the usual classes for various types of link
	 *      targets: \"new\" for red links, \"stub\" for short articles, etc.
	 *   3) It escapes all attribute values safely so there\'s no risk of XSS.
	 *   4) It provides a default tooltip if the target is a Title (the page
	 *      name of the target).
	 * link() replaces the old functions in the makeLink() family.
	 *
	 * @since 1.18 Method exists since 1.16 as non-static, made static in 1.18.
	 * You can call it using this if you want to keep compat with these:
	 * $linker = class_exists( \'DummyLinker\' ) ? new DummyLinker() : new Linker();
	 * $linker->link( ... );
	 *
	 * @param $target        Title  Can currently only be a Title, but this may
	 *   change to support Images, literal URLs, etc.
	 * @param $html          string The HTML contents of the <a> element, i.e.,
	 *   the link text.  This is raw HTML and will not be escaped.  If null,
	 *   defaults to the prefixed text of the Title; or if the Title is just a
	 *   fragment, the contents of the fragment.
	 * @param $customAttribs array  A key => value array of extra HTML attri-
	 *   butes, such as title and class.  (href is ignored.)  Classes will be
	 *   merged with the default classes, while other attributes will replace
	 *   default attributes.  All passed attribute values will be HTML-escaped.
	 *   A false attribute value means to suppress that attribute.
	 * @param $query         array  The query string to append to the URL
	 *   you\'re linking to, in key => value array form.  Query keys and values
	 *   will be URL-encoded.
	 * @param $options string|array  String or array of strings:
	 *     \'known\': Page is known to exist, so don\'t check if it does.
	 *     \'broken\': Page is known not to exist, so don\'t check if it does.
	 *     \'noclasses\': Don\'t add any classes automatically (includes \"new\",
	 *       \"stub\", \"mw-redirect\", \"extiw\").  Only use the class attribute
	 *       provided, if any, so you get a simple blue link with no funny i-
	 *       cons.
	 *     \'forcearticlepath\': Use the article path always, even with a querystring.
	 *       Has compatibility issues on some setups, so avoid wherever possible.
	 * @return string HTML <a> attribute
	 */",
 "/**
	 * Identical to link(), except $options defaults to \'known\'.
	 */",
 "/**
	 * Returns the Url used to link to a Title
	 *
	 * @param $target Title
	 * @param $query Array: query parameters
	 * @param $options Array
	 */",
 "/**
	 * Returns the array of attributes used when linking to the Title $target
	 *
	 * @param $target Title
	 * @param $attribs
	 * @param $options
	 *
	 * @return array
	 */",
 "/**
	 * Default text of the links to the Title $target
	 *
	 * @param $target Title
	 *
	 * @return string
	 */",
 "/**
	 * Generate either a normal exists-style link or a stub link, depending
	 * on the given page size.
	 *
	 * @param $size Integer
	 * @param $nt Title object.
	 * @param $text String
	 * @param $query String
	 * @param $trail String
	 * @param $prefix String
	 * @return string HTML of link
	 * @deprecated since 1.17
	 */",
 "/**
	 * Make appropriate markup for a link to the current article. This is currently rendered
	 * as the bold link text. The calling sequence is the same as the other make*LinkObj static functions,
	 * despite $query not being used.
	 *
	 * @param $nt Title
	 *
	 * @return string
	 */",
 "/**
	 * @param $title Title
	 * @return Title
	 */",
 "/**
	 * Returns the filename part of an url.
	 * Used as alternative text for external images.
	 *
	 * @param $url string
	 *
	 * @return string
	 */",
 "/**
	 * Return the code for images which were added via external links,
	 * via Parser::maybeMakeExternalImage().
	 *
	 * @param $url
	 * @param $alt
	 *
	 * @return string
	 */",
 "/**
	 * Given parameters derived from [[Image:Foo|options...]], generate the
	 * HTML that that syntax inserts in the page.
	 *
	 * @param $title Title object
	 * @param $file File object, or false if it doesn\'t exist
	 * @param $frameParams Array: associative array of parameters external to the media handler.
	 *     Boolean parameters are indicated by presence or absence, the value is arbitrary and
	 *     will often be false.
	 *          thumbnail       If present, downscale and frame
	 *          manualthumb     Image name to use as a thumbnail, instead of automatic scaling
	 *          framed          Shows image in original size in a frame
	 *          frameless       Downscale but don\'t frame
	 *          upright         If present, tweak default sizes for portrait orientation
	 *          upright_factor  Fudge factor for \"upright\" tweak (default 0.75)
	 *          border          If present, show a border around the image
	 *          align           Horizontal alignment (left, right, center, none)
	 *          valign          Vertical alignment (baseline, sub, super, top, text-top, middle,
	 *                          bottom, text-bottom)
	 *          alt             Alternate text for image (i.e. alt attribute). Plain text.
	 *          caption         HTML for image caption.
	 *          link-url        URL to link to
	 *          link-title      Title object to link to
	 *          link-target     Value for the target attribue, only with link-url
	 *          no-link         Boolean, suppress description link
	 *
	 * @param $handlerParams Array: associative array of media handler parameters, to be passed
	 *       to transform(). Typical keys are \"width\" and \"page\".
	 * @param $time String: timestamp of the file, set as false for current
	 * @param $query String: query params for desc url
	 * @param $widthOption: Used by the parser to remember the user preference thumbnailsize
	 * @return String: HTML for an image, with links, wrappers, etc.
	 */",
 "/**
	 * Get the link parameters for MediaTransformOutput::toHtml() from given
	 * frame parameters supplied by the Parser.
	 * @param $frameParams The frame parameters
	 * @param $query An optional query string to add to description page links
	 */",
 "/**
	 * Make HTML for a thumbnail including image, border and caption
	 * @param $title Title object
	 * @param $file File object or false if it doesn\'t exist
	 * @param $label String
	 * @param $alt String
	 * @param $align String
	 * @param $params Array
	 * @param $framed Boolean
	 * @param $manualthumb String
	 */",
 "/**
	 * @param $title Title
	 * @param  $file File
	 * @param array $frameParams
	 * @param array $handlerParams
	 * @param bool $time
	 * @param string $query
	 * @return mixed
	 */",
 "/**
	 * Make a \"broken\" link to an image
	 *
	 * @param $title Title object
	 * @param $html String: link label in htmlescaped text form
	 * @param $query String: query string
	 * @param $trail String: link trail (HTML fragment)
	 * @param $prefix String: link prefix (HTML fragment)
	 * @param $time Boolean: a file of a certain timestamp was requested
	 * @return String
	 */",
 "/**
	 * Get the URL to upload a certain file
	 *
	 * @param $destFile Title object of the file to upload
	 * @param $query String: urlencoded query string to prepend
	 * @return String: urlencoded URL
	 */",
 "/**
	 * Create a direct link to a given uploaded file.
	 *
	 * @param $title Title object.
	 * @param $html String: pre-sanitized HTML
	 * @param $time string: MW timestamp of file creation time
	 * @return String: HTML
	 */",
 "/**
	 * Create a direct link to a given uploaded file.
	 * This will make a broken link if $file is false.
	 *
	 * @param $title Title object.
	 * @param $file File|false mixed File object or false
	 * @param $html String: pre-sanitized HTML
	 * @return String: HTML
	 *
	 * @todo Handle invalid or missing images better.
	 */",
 "/**
	 * Make a link to a special page given its name and, optionally,
	 * a message key from the link text.
	 * Usage example: Linker::specialLink( \'Recentchanges\' )
	 *
	 * @return string
	 */",
 "/**
	 * Make an external link
	 * @param $url String: URL to link to
	 * @param $text String: text of link
	 * @param $escape Boolean: do we escape the link text?
	 * @param $linktype String: type of external link. Gets added to the classes
	 * @param $attribs Array of extra attributes to <a>
	 */",
 "/**
	 * Make user link (or user contributions for unregistered users)
	 * @param $userId   Integer: user id in database.
	 * @param $userName String: user name in database.
	 * @param $altUserName String: text to display instead of the user name (optional)
	 * @return String: HTML fragment
	 * @since 1.19 Method exists for a long time. $displayText was added in 1.19.
	 */",
 "/**
	 * Generate standard user tool links (talk, contributions, block link, etc.)
	 *
	 * @param $userId Integer: user identifier
	 * @param $userText String: user name or IP address
	 * @param $redContribsWhenNoEdits Boolean: should the contributions link be
	 *        red if the user has no edits?
	 * @param $flags Integer: customisation flags (e.g. Linker::TOOL_LINKS_NOBLOCK and Linker::TOOL_LINKS_EMAIL)
	 * @param $edits Integer: user edit count (optional, for performance)
	 * @return String: HTML fragment
	 */",
 "/**
	 * Alias for userToolLinks( $userId, $userText, true );
	 * @param $userId Integer: user identifier
	 * @param $userText String: user name or IP address
	 * @param $edits Integer: user edit count (optional, for performance)
	 */",
 "/**
	 * @param $userId Integer: user id in database.
	 * @param $userText String: user name in database.
	 * @return String: HTML fragment with user talk link
	 */",
 "/**
	 * @param $userId Integer: userid
	 * @param $userText String: user name in database.
	 * @return String: HTML fragment with block link
	 */",
 "/**
	 * @param $userId Integer: userid
	 * @param $userText String: user name in database.
	 * @return String: HTML fragment with e-mail user link
	 */",
 "/**
	 * Generate a user link if the current user is allowed to view it
	 * @param $rev Revision object.
	 * @param $isPublic Boolean: show only if all users can see it
	 * @return String: HTML fragment
	 */",
 "/**
	 * Generate a user tool link cluster if the current user is allowed to view it
	 * @param $rev Revision object.
	 * @param $isPublic Boolean: show only if all users can see it
	 * @return string HTML
	 */",
 "/**
	 * This function is called by all recent changes variants, by the page history,
	 * and by the user contributions list. It is responsible for formatting edit
	 * comments. It escapes any HTML in the comment, but adds some CSS to format
	 * auto-generated comments (from section editing) and formats [[wikilinks]].
	 *
	 * @author Erik Moeller <moeller@scireview.de>
	 *
	 * Note: there\'s not always a title to pass to this function.
	 * Since you can\'t set a default parameter for a reference, I\'ve turned it
	 * temporarily to a value pass. Should be adjusted further. --brion
	 *
	 * @param $comment String
	 * @param $title Mixed: Title object (to generate link to the section in autocomment) or null
	 * @param $local Boolean: whether section links should refer to local page
	 */",
 "/**
	 * The pattern for autogen comments is / * foo * /, which makes for
	 * some nasty regex.
	 * We look for all comments, match any text before and after the comment,
	 * add a separator where needed and format the comment itself with CSS
	 * Called by Linker::formatComment.
	 *
	 * @param $comment String: comment text
	 * @param $title An optional title object used to links to sections
	 * @param $local Boolean: whether section links should refer to local page
	 * @return String: formatted comment
	 */",
 "/**
	 * @param $match
	 * @return string
	 */",
 "/**
	 * Formats wiki links and media links in text; all other wiki formatting
	 * is ignored
	 *
	 * @todo FIXME: Doesn\'t handle sub-links as in image thumb texts like the main parser
	 * @param $comment String: text to format links in
	 * @param $title An optional title object used to links to sections
	 * @param $local Boolean: whether section links should refer to local page
	 * @return String
	 */",
 "/**
	 * @param $match
	 * @return mixed
	 */",
 "/**
	 * @param $contextTitle Title
	 * @param  $target
	 * @param  $text
	 * @return string
	 */",
 "/**
	 * Wrap a comment in standard punctuation and formatting if
	 * it\'s non-empty, otherwise return empty string.
	 *
	 * @param $comment String
	 * @param $title Mixed: Title object (to generate link to section in autocomment) or null
	 * @param $local Boolean: whether section links should refer to local page
	 *
	 * @return string
	 */",
 "/**
	 * Wrap and format the given revision\'s comment block, if the current
	 * user is allowed to view it.
	 *
	 * @param $rev Revision object
	 * @param $local Boolean: whether section links should refer to local page
	 * @param $isPublic Boolean: show only if all users can see it
	 * @return String: HTML fragment
	 */",
 "/**
	 * @param $size
	 * @return string
	 */",
 "/**
	 * Add another level to the Table of Contents
	 *
	 * @return string
	 */",
 "/**
	 * Finish one or more sublevels on the Table of Contents
	 *
	 * @return string
	 */",
 "/**
	 * parameter level defines if we are on an indentation level
	 *
	 * @return string
	 */",
 "/**
	 * End a Table Of Contents line.
	 * tocUnindent() will be used instead if we\'re ending a line below
	 * the new level.
	 */",
 "/**
	 * Wraps the TOC in a table and provides the hide/collapse javascript.
	 *
	 * @param $toc String: html of the Table Of Contents
	 * @param $lang mixed: Language code for the toc title
	 * @return String: full html of the TOC
	 */",
 "/**
	 * Generate a table of contents from a section tree
	 * Currently unused.
	 *
	 * @param $tree Return value of ParserOutput::getSections()
	 * @return String: HTML fragment
	 */",
 "/**
	 * Create a headline for content
	 *
	 * @param $level Integer: the level of the headline (1-6)
	 * @param $attribs String: any attributes for the headline, starting with
	 *                 a space and ending with \'>\'
	 *                 This *must* be at least \'>\' for no attribs
	 * @param $anchor String: the anchor to give the headline (the bit after the #)
	 * @param $html String: html for the text of the header
	 * @param $link String: HTML to add for the section edit link
	 * @param $legacyAnchor Mixed: a second, optional anchor to give for
	 *   backward compatibility (false to omit)
	 *
	 * @return String: HTML headline
	 */",
 "/**
	 * Split a link trail, return the \"inside\" portion and the remainder of the trail
	 * as a two-element array
	 */",
 "/**
	 * Generate a rollback link for a given revision.  Currently it\'s the
	 * caller\'s responsibility to ensure that the revision is the top one. If
	 * it\'s not, of course, the user will get an error message.
	 *
	 * If the calling page is called with the parameter &bot=1, all rollback
	 * links also get that parameter. It causes the edit itself and the rollback
	 * to be marked as \"bot\" edits. Bot edits are hidden by default from recent
	 * changes, so this allows sysops to combat a busy vandal without bothering
	 * other users.
	 *
	 * @param $rev Revision object
	 */",
 "/**
	 * Build a raw rollback link, useful for collections of \"tool\" links
	 *
	 * @param $rev Revision object
	 * @return String: HTML fragment
	 */",
 "/**
	 * Returns HTML for the \"templates used on this page\" list.
	 *
	 * @param $templates Array of templates from Article::getUsedTemplate
	 * or similar
	 * @param $preview Boolean: whether this is for a preview
	 * @param $section Boolean: whether this is for a section edit
	 * @return String: HTML output
	 */",
 "/**
	 * Returns HTML for the \"hidden categories on this page\" list.
	 *
	 * @param $hiddencats Array of hidden categories from Article::getHiddenCategories
	 * or similar
	 * @return String: HTML output
	 */",
 "/**
	 * Format a size in bytes for output, using an appropriate
	 * unit (B, KB, MB or GB) according to the magnitude in question
	 *
	 * @param $size Size to format
	 * @return String
	 */",
 "/**
	 * Given the id of an interface element, constructs the appropriate title
	 * attribute from the system messages.  (Note, this is usually the id but
	 * isn\'t always, because sometimes the accesskey needs to go on a different
	 * element than the id, for reverse-compatibility, etc.)
	 *
	 * @param $name String: id of the element, minus prefixes.
	 * @param $options Mixed: null or the string \'withaccess\' to add an access-
	 *   key hint
	 * @return String: contents of the title attribute (which you must HTML-
	 *   escape), or false for no title attribute
	 */",
 "/**
	 * Given the id of an interface element, constructs the appropriate
	 * accesskey attribute from the system messages.  (Note, this is usually
	 * the id but isn\'t always, because sometimes the accesskey needs to go on
	 * a different element than the id, for reverse-compatibility, etc.)
	 *
	 * @param $name String: id of the element, minus prefixes.
	 * @return String: contents of the accesskey attribute (which you must HTML-
	 *   escape), or false for no accesskey attribute
	 */",
 "/**
	 * Get a revision-deletion link, or disabled link, or nothing, depending
	 * on user permissions & the settings on the revision.
	 *
	 * Will use forward-compatible revision ID in the Special:RevDelete link
	 * if possible, otherwise the timestamp-based ID which may break after
	 * undeletion.
	 *
	 * @param User $user
	 * @param Revision $rev
	 * @param Revision $title
	 * @return string HTML fragment
	 */",
 "/**
	 * Creates a (show/hide) link for deleting revisions/log entries
	 *
	 * @param $query Array: query parameters to be passed to link()
	 * @param $restricted Boolean: set to true to use a <strong> instead of a <span>
	 * @param $delete Boolean: set to true to use (show/hide) rather than (show)
	 *
	 * @return String: HTML <a> link to Special:Revisiondelete, wrapped in a
	 * span to allow for customization of appearance with CSS
	 */",
 "/**
	 * Creates a dead (show/hide) link for deleting revisions/log entries
	 *
	 * @param $delete Boolean: set to true to use (show/hide) rather than (show)
	 *
	 * @return string HTML text wrapped in a span to allow for customization
	 * of appearance with CSS
	 */",
 "/**
	 * @deprecated since 1.16 Use link()
	 *
	 * This function is a shortcut to makeBrokenLinkObj(Title::newFromText($title),...). Do not call
	 * it if you already have a title object handy. See makeBrokenLinkObj for further documentation.
	 *
	 * @param $title String: The text of the title
	 * @param $text String: Link text
	 * @param $query String: Optional query part
	 * @param $trail String: Optional trail. Alphabetic characters at the start of this string will
	 *               be included in the link text. Other characters will be appended after
	 *               the end of the link.
	 */",
 "/**
	 * @deprecated since 1.16 Use link()
	 *
	 * Make a link for a title which may or may not be in the database. If you need to
	 * call this lots of times, pre-fill the link cache with a LinkBatch, otherwise each
	 * call to this will result in a DB query.
	 *
	 * @param $nt     Title: the title object to make the link from, e.g. from
	 *                      Title::newFromText.
	 * @param $text  String: link text
	 * @param $query String: optional query part
	 * @param $trail String: optional trail. Alphabetic characters at the start of this string will
	 *                      be included in the link text. Other characters will be appended after
	 *                      the end of the link.
	 * @param $prefix String: optional prefix. As trail, only before instead of after.
	 */",
 "/**
	 * @deprecated since 1.16 Use link()
	 *
	 * Make a link for a title which definitely exists. This is faster than makeLinkObj because
	 * it doesn\'t have to do a database query. It\'s also valid for interwiki titles and special
	 * pages.
	 *
	 * @param $title  Title object of target page
	 * @param $text   String: text to replace the title
	 * @param $query  String: link target
	 * @param $trail  String: text after link
	 * @param $prefix String: text before link text
	 * @param $aprops String: extra attributes to the a-element
	 * @param $style  String: style to apply - if empty, use getInternalLinkAttributesObj instead
	 * @return the a-element
	 */",
 "/**
	 * @deprecated since 1.16 Use link()
	 *
	 * Make a red link to the edit page of a given title.
	 *
	 * @param $title Title object of the target page
	 * @param $text  String: Link text
	 * @param $query String: Optional query part
	 * @param $trail String: Optional trail. Alphabetic characters at the start of this string will
	 *                      be included in the link text. Other characters will be appended after
	 *                      the end of the link.
	 * @param $prefix String: Optional prefix
	 */",
 "/**
	 * @deprecated since 1.16 Use link()
	 *
	 * Make a coloured link.
	 *
	 * @param $nt Title object of the target page
	 * @param $colour Integer: colour of the link
	 * @param $text   String:  link text
	 * @param $query  String:  optional query part
	 * @param $trail  String:  optional trail. Alphabetic characters at the start of this string will
	 *                      be included in the link text. Other characters will be appended after
	 *                      the end of the link.
	 * @param $prefix String: Optional prefix
	 */",
 "/**
	 * Returns the attributes for the tooltip and access key.
	 */",
 "/**
	 * Returns raw bits of HTML, use titleAttrib()
	 */",
 "/**
 * Some internal bits split of from Skin.php. These functions are used
 * for primarily page content: links, embedded images, table of contents. Links
 * are also used in the skin.
 *
 * @ingroup Skins
 */",
 "/**
	 * Use PHP\'s magic __call handler to transform instance calls to a dummy instance
	 * into static calls to the new Linker for backwards compatibility.
	 *
	 * @param $fname String Name of called method
	 * @param $args Array Arguments to the method
	 */",
 "/**
 * @since 1.18
 */",
 "/** Breton (Brezhoneg)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Als-Holder
 * @author Candalua
 * @author Fohanno
 * @author Fulup
 * @author Gwendal
 * @author Gwenn-Ael
 * @author Kaganer
 * @author Malafaya
 * @author VIGNERON
 * @author Y-M D
 * @author ???????? ????????????????
 */",
 "/** Alemannisch
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 * @comment Deprecated code. Falls back to \'gsw\'.
 */",
 "/**
	 * Just get an empty form with a single submit button
	 * @return array
	 */",
 "/**
	 * purge is slightly weird because it can be either formed or formless depending
	 * on user permissions
	 */",
 "/**
 * Formats credits for articles
 *
 * Copyright 2004, Evan Prodromou <evan@wikitravel.org>.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA
 *
 * @file
 * @ingroup Actions
 * @author <evan@wikitravel.org>
 */",
 "/** @dataProvider providePlural */",
 "/** Tests for MediaWiki languages/LanguageAm.php */",
 "/**
 * Description of WikiNewPageDialogs
 *
 * @author bhagyag, pdhanda
 *
 * This test case is part of the WikiEditorTestSuite.
 * Configuration for these tests are dosumented as part of extensions/WikiEditor/tests/selenium/WikiEditorTestSuite.php
 *
 */",
 "/**
	 * Regular expression to match HTML/XML attribute pairs within a tag.
	 * Allows some... latitude.
	 * Used in Sanitizer::fixTagAttributes and Sanitizer::decodeTagAttributes
	 */",
 "/**
	 * Cleans up HTML, removes dangerous tags and attributes, and
	 * removes HTML comments
	 * @private
	 * @param $text String
	 * @param $processCallback Callback to do any variable or parameter replacements in HTML attribute values
	 * @param $args Array for the processing callback
	 * @param $extratags Array for any extra tags to include
	 * @param $removetags Array for any tags (default or extra) to exclude
	 * @return string
	 */",
 "/**
	 * Remove \'<!--\', \'-->\', and everything between.
	 * To avoid leaving blank lines, when a comment is both preceded
	 * and followed by a newline (ignoring spaces), trim leading and
	 * trailing spaces and one of the newlines.
	 *
	 * @private
	 * @param $text String
	 * @return string
	 */",
 "/**
	 * Take an array of attribute names and values and fix some deprecated values
	 * for the given element type.
	 * This does not validate properties, so you should ensure that you call
	 * validateTagAttributes AFTER this to ensure that the resulting style rule
	 * this may add is safe.
	 *
	 * - Converts most presentational attributes like align into inline css
	 *
	 * @param $attribs Array
	 * @param $element String
	 * @return Array
	 */",
 "/**
	 * Take an array of attribute names and values and normalize or discard
	 * illegal values for the given element type.
	 *
	 * - Discards attributes not on a whitelist for the given element
	 * - Unsafe style attributes are discarded
	 * - Invalid id attributes are reencoded
	 *
	 * @param $attribs Array
	 * @param $element String
	 * @return Array
	 *
	 * @todo Check for legal values where the DTD limits things.
	 * @todo Check for unique id attribute :P
	 */",
 "/**
	 * Take an array of attribute names and values and normalize or discard
	 * illegal values for the given whitelist.
	 *
	 * - Discards attributes not the given whitelist
	 * - Unsafe style attributes are discarded
	 * - Invalid id attributes are reencoded
	 *
	 * @param $attribs Array
	 * @param $whitelist Array: list of allowed attribute names
	 * @return Array
	 *
	 * @todo Check for legal values where the DTD limits things.
	 * @todo Check for unique id attribute :P
	 */",
 "/**
	 * Merge two sets of HTML attributes.  Conflicting items in the second set
	 * will override those in the first, except for \'class\' attributes which
	 * will be combined (if they\'re both strings).
	 *
	 * @todo implement merging for other attributes such as style
	 * @param $a Array
	 * @param $b Array
	 * @return array
	 */",
 "/**
	*PickapartsomeCSSandcheckitforforbiddenorunsafestructures.
	*Returnsasanitizedstring.Thissanitizedstringwillhave
	*characterreferencesandescapesequencesdecoded,andcomments
	*stripped.Iftheinputisjusttooevil,onlyacommentcomplaining
	*aboutevilnesswillbereturned.
	*
	*CurrentlyURLreferences,\'expression\',\'tps\'areforbidden.
	*
	*NOTE:Despitethefactthatcharacterreferencesaredecoded,the
	*returnedstringmaycontaincharacterreferencesgivencertain
	*cleverinputstrings.Thesecharacterreferencesmust
	*beescapedbeforethereturnvalueisembeddedinHTML.
	*
	*@param$valueString
	*@returnString
	*/",
 "/**
	*@param$matchesarray
	*@returnString
	*/",
 "/**
	 * Take a tag soup fragment listing an HTML element\'s attributes
	 * and normalize it to well-formed XML, discarding unwanted attributes.
	 * Output is safe for further wikitext processing, with escaping of
	 * values that could trigger problems.
	 *
	 * - Normalizes attribute names to lowercase
	 * - Discards attributes not on a whitelist for the given element
	 * - Turns broken or invalid entities into plaintext
	 * - Double-quotes all attribute values
	 * - Attributes without values are given the name as attribute
	 * - Double attributes are discarded
	 * - Unsafe style attributes are discarded
	 * - Prepends space if there are attributes.
	 *
	 * @param $text String
	 * @param $element String
	 * @return String
	 */",
 "/**
	 * Encode an attribute value for HTML output.
	 * @param $text String
	 * @return HTML-encoded text fragment
	 */",
 "/**
	 * Encode an attribute value for HTML tags, with extra armoring
	 * against further wiki processing.
	 * @param $text String
	 * @return HTML-encoded text fragment
	 */",
 "/**
	 * Given a value, escape it so that it can be used in an id attribute and
	 * return it.  This will use HTML5 validation if $wgExperimentalHtmlIds is
	 * true, allowing anything but ASCII whitespace.  Otherwise it will use
	 * HTML 4 rules, which means a narrow subset of ASCII, with bad characters
	 * escaped with lots of dots.
	 *
	 * To ensure we don\'t have to bother escaping anything, we also strip \', \",
	 * & even if $wgExperimentalIds is true.  TODO: Is this the best tactic?
	 * We also strip # because it upsets IE, and % because it could be
	 * ambiguous if it\'s part of something that looks like a percent escape
	 * (which don\'t work reliably in fragments cross-browser).
	 *
	 * @see http://www.w3.org/TR/html401/types.html#type-name Valid characters
	 *                                                          in the id and
	 *                                                          name attributes
	 * @see http://www.w3.org/TR/html401/struct/links.html#h-12.2.3 Anchors with the id attribute
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/elements.html#the-id-attribute
	 *   HTML5 definition of id attribute
	 *
	 * @param $id String: id to escape
	 * @param $options Mixed: string or array of strings (default is array()):
	 *   \'noninitial\': This is a non-initial fragment of an id, not a full id,
	 *       so don\'t pay attention if the first character isn\'t valid at the
	 *       beginning of an id.  Only matters if $wgExperimentalHtmlIds is
	 *       false.
	 *   \'legacy\': Behave the way the old HTML 4-based ID escaping worked even
	 *       if $wgExperimentalHtmlIds is used, so we can generate extra
	 *       anchors and links won\'t break.
	 * @return String
	 */",
 "/**
	 * Given a value, escape it so that it can be used as a CSS class and
	 * return it.
	 *
	 * @todo For extra validity, input should be validated UTF-8.
	 *
	 * @see http://www.w3.org/TR/CSS21/syndata.html Valid characters/format
	 *
	 * @param $class String
	 * @return String
	 */",
 "/**
	 * Given HTML input, escape with htmlspecialchars but un-escape entites.
	 * This allows (generally harmless) entities like &#160; to survive.
	 *
	 * @param $html String to escape
	 * @return String: escaped input
	 */",
 "/**
	 * Regex replace callback for armoring links against further processing.
	 * @param $matches Array
	 * @return string
	 */",
 "/**
	 * Return an associative array of attribute names and values from
	 * a partial tag string. Attribute names are forces to lowercase,
	 * character references are decoded to UTF-8 text.
	 *
	 * @param $text String
	 * @return Array
	 */",
 "/**
	 * Pick the appropriate attribute value from a match set from the
	 * attribs regex matches.
	 *
	 * @param $set Array
	 * @return String
	 */",
 "/**
	 * Normalize whitespace and character references in an XML source-
	 * encoded text for an attribute value.
	 *
	 * See http://www.w3.org/TR/REC-xml/#AVNormalize for background,
	 * but note that we\'re not returning the value, but are returning
	 * XML source fragments that will be slapped into output.
	 *
	 * @param $text String
	 * @return String
	 */",
 "/**
	 * @param $text string
	 * @return mixed
	 */",
 "/**
	 * Normalizes whitespace in a section name, such as might be returned
	 * by Parser::stripSectionName(), for use in the id\'s that are used for
	 * section links.
	 *
	 * @param $section String
	 * @return String
	 */",
 "/**
	 * Ensure that any entities and character references are legal
	 * for XML and XHTML specifically. Any stray bits will be
	 * &amp;-escaped to result in a valid text fragment.
	 *
	 * a. named char refs can only be &lt; &gt; &amp; &quot;, others are
	 *   numericized (this way we\'re well-formed even without a DTD)
	 * b. any numeric char refs must be legal chars, not invalid or forbidden
	 * c. use &#x, not &#X
	 * d. fix or reject non-valid attributes
	 *
	 * @param $text String
	 * @return String
	 * @private
	 */",
 "/**
	 * @param $matches String
	 * @return String
	 */",
 "/**
	 * If the named entity is defined in the HTML 4.0/XHTML 1.0 DTD,
	 * return the equivalent numeric entity reference (except for the core &lt;
	 * &gt; &amp; &quot;). If the entity is a MediaWiki-specific alias, returns
	 * the HTML equivalent. Otherwise, returns HTML-escaped text of
	 * pseudo-entity source (eg &amp;foo;)
	 *
	 * @param $name String
	 * @return String
	 */",
 "/**
	 * @param $codepoint
	 * @return null|string
	 */",
 "/**
	 * @param $codepoint
	 * @return null|string
	 */",
 "/**
	 * Returns true if a given Unicode codepoint is a valid character in XML.
	 * @param $codepoint Integer
	 * @return Boolean
	 */",
 "/**
	 * Decode any character references, numeric or named entities,
	 * in the text and return a UTF-8 string.
	 *
	 * @param $text String
	 * @return String
	 */",
 "/**
	 * Decode any character references, numeric or named entities,
	 * in the next and normalize the resulting string. (bug 14952)
	 *
	 * This is useful for page titles, not for text to be displayed,
	 * MediaWiki allows HTML entities to escape normalization as a feature.
	 *
	 * @param $text String (already normalized, containing entities)
	 * @return String (still normalized, without entities)
	 */",
 "/**
	 * @param $matches String
	 * @return String
	 */",
 "/**
	 * Return UTF-8 string for a codepoint if that is a valid
	 * character reference, otherwise U+FFFD REPLACEMENT CHARACTER.
	 * @param $codepoint Integer
	 * @return String
	 * @private
	 */",
 "/**
	 * If the named entity is defined in the HTML 4.0/XHTML 1.0 DTD,
	 * return the UTF-8 encoding of that character. Otherwise, returns
	 * pseudo-entity source (eg &foo;)
	 *
	 * @param $name String
	 * @return String
	 */",
 "/**
	 * Fetch the whitelist of acceptable attributes for a given element name.
	 *
	 * @param $element String
	 * @return Array
	 */",
 "/**
	 * Foreach array key (an allowed HTML element), return an array
	 * of allowed attributes
	 * @return Array
	 */",
 "/**
	 * Take a fragment of (potentially invalid) HTML and return
	 * a version with any tags removed, encoded as plain text.
	 *
	 * Warning: this return value must be further escaped for literal
	 * inclusion in HTML output as of 1.10!
	 *
	 * @param $text String: HTML fragment
	 * @return String
	 */",
 "/**
	 * Hack up a private DOCTYPE with HTML\'s standard entity declarations.
	 * PHP 4 seemed to know these if you gave it an HTML doctype, but
	 * PHP 5.1 doesn\'t.
	 *
	 * Use for passing XHTML fragments to PHP\'s XML parsing functions
	 *
	 * @return String
	 */",
 "/**
	 * @param $url string
	 * @return mixed|string
	 */",
 "/**
	 * @param $matches array
	 * @return string
	 */",
 "/**
	 * Does a string look like an e-mail address?
	 *
	 * This validates an email address using an HTML5 specification found at:
	 * http://www.whatwg.org/specs/web-apps/current-work/multipage/states-of-the-type-attribute.html#valid-e-mail-address
	 * Which as of 2011-01-24 says:
	 *
	 *   A valid e-mail address is a string that matches the ABNF production
	 *   1*( atext / \".\" ) \"@\" ldh-str *( \".\" ldh-str ) where atext is defined
	 *   in RFC 5322 section 3.2.3, and ldh-str is defined in RFC 1034 section
	 *   3.5.
	 *
	 * This function is an implementation of the specification as requested in
	 * bug 22449.
	 *
	 * Client-side forms will use the same standard validation rules via JS or
	 * HTML 5 validation; additional restrictions can be enforced server-side
	 * by extensions via the \'isValidEmailAddr\' hook.
	 *
	 * Note that this validation doesn\'t 100% match RFC 2822, but is believed
	 * to be liberal enough for wide use. Some invalid addresses will still
	 * pass validation here.
	 *
	 * @since 1.18
	 *
	 * @param $addr String E-mail address
	 * @return Bool
	 */",
 "/**
 * XHTML sanitizer for MediaWiki
 * @ingroup Parser
 */",
 "/**
	 * Fixture -- run before every test
	 */",
 "/**
	 * Helper function -- remove files and associated articles by Title
	 * @param $title Title: title to be removed
	 */",
 "/**
	 * Helper function -- remove files and associated articles with a particular filename
	 * @param $fileName String: filename to be removed
	 */",
 "/**
	 * Helper function -- given a file on the filesystem, find matching content in the db (and associated articles) and remove them.
	 * @param $filePath String: path to file on the filesystem
	 */",
 "/**
	 * Fake an upload by dumping the file into temp space, and adding info to $_FILES.
	 * (This is what PHP would normally do).
	 * @param $fieldName String: name this would have in the upload form
	 * @param $fileName String: name to title this
	 * @param $type String: mime type
	 * @param $filePath String: path where to find file contents
	 */",
 "/**
	 * Remove traces of previous fake uploads
	 */",
 "/**
 *  * Abstract class to support upload tests
 */",
 "/**
	 * Format the result as a simple link to the page
	 *
	 * @param $skin Skin
	 * @param $row Object: result row
	 * @return string
	 */",
 "/**
 * Variant of QueryPage which formats the result as a simple link to the page
 *
 * @ingroup SpecialPage
 */",
 "/**
	 * @param $revision int
	 * @param $titleText string
	 * @return int
	 */",
 "/**
 *
 * Created on May 1, 2011
 *
 * Copyright ?? 2011 Sam Reed
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @file
 */",
 "/**
	 * Get the hook documentation, either locally or from MediaWiki.org
	 * @return array of documented hooks
	 */",
 "/**
	 * Get hooks from a local file (for example docs/hooks.txt)
	 * @param $doc string: filename to look in
	 * @return array of documented hooks
	 */",
 "/**
	 * Get hooks from www.mediawiki.org using the API
	 * @return array of documented hooks
	 */",
 "/**
	 * Get hooks from a PHP file
	 * @param $file Full filename to the PHP file.
	 * @return array of hooks found.
	 */",
 "/**
	 * Get hooks from the source code.
	 * @param $path Directory where the include files can be found
	 * @return array of hooks found.
	 */",
 "/**
	 * Get bad hooks (where the hook name could not be determined) from a PHP file
	 * @param $file Full filename to the PHP file.
	 * @return array of bad wfRunHooks() lines
	 */",
 "/**
	 * Get bad hooks from the source code.
	 * @param $path Directory where the include files can be found
	 * @return array of bad wfRunHooks() lines
	 */",
 "/**
	 * Nicely output the array
	 * @param $msg String: a message to show before the value
	 * @param $arr Array: an array
	 * @param $sort Boolean: whether to sort the array (Default: true)
	 */",
 "/**
	 * @param $resultPageSet ApiPageSet
	 * @return void
	 */",
 "/**
 * This gives links pointing to the given interwiki
 * @ingroup API
 */",
 "/** Pangasinan (Pangasinan)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Arikasikis
 * @author Spacebirdy
 */",
 "/**
	 * @return FileRepo
	 */",
 "/**
	 * Attempts to fetch the text of a particular page revision
	 * from the dump stream. May return null if the page is
	 * unavailable.
	 *
	 * @param $page Integer: ID number of page to read
	 * @param $rev Integer: ID number of revision to read
	 * @return string or null
	 */",
 "/**
	 * @access private
	 */",
 "/**
	 * @access private
	 */",
 "/**
	 * @access private
	 * @return string
	 */",
 "/**
	 * @access private
	 * @param $name string
	 * @param $parent string
	 * @return bool|null
	 */",
 "/**
	 * Shouldn\'t something like this be built-in to XMLReader?
	 * Fetches text contents of the current element, assuming
	 * no sub-elements or such scary things.
	 *
	 * @return String
	 * @access private
	 */",
 "/**
	 * @access private
	 * @return null
	 */",
 "/**
 * Readahead helper for making large MediaWiki data dumps;
 * reads in a previous XML dump to sequentially prefetch text
 * records already normalized and decompressed.
 *
 * This can save load on the external database servers, hopefully.
 *
 * Assumes that dumps will be recorded in the canonical order:
 * - ascending by page_id
 * - ascending by rev_id within each page
 * - text contents are immutable and should not change once
 *   recorded, so the previous dump is a reliable source
 *
 * @ingroup Maintenance
 */",
 "/** V??neto (V??neto)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author BrokenArrow
 * @author Candalua
 * @author Frigotoni
 * @author Kaganer
 * @author Nick1915
 * @author Omnipaedista
 * @author OrbiliusMagister
 * @author Reedy
 * @author Urhixidur
 * @author Vajotwo
 * @author ???????? ????????????????
 */",
 "/**
	 * @param $count int
	 * @param $forms array
	 * @return string
	 */",
 "/**
 * Moldavian (????????????????????????)
 *
 * @ingroup Language
 */",
 "/**
 * ?????? ?????????????? ?????????????????????? ???????????????????? ??????????
 *
 * ?????????? ????????????????????????????: ?????? ???????????? ?????????????? ??????????????????!
 *
 * ?????? ???????????????? ???????????????????? ?????????????????????????? ?????????????????? ?????????????? ?????????????????????????? ??????????????????????.
 * ???????????????? ?????? ?????????????????????????????????? ?????????? ????????????.
 * ???????????? ?????? ????????????????????????, [[????????????:???????????? ????????????????]] ?????????? ?????????? ?????????????? ????
 * ?????????? ?????????????????????????? ????????????????????????:* ?????????????? ?????? ???????????????? ??????????????.
 */",
 "/**
 * Magic words
 * Customisable syntax for wikitext and elsewhere.
 *
 * IDs must be valid identifiers, they can\'t contain hyphens.
 *
 * Note to translators:
 *   Please include the English words as synonyms.  This allows people
 *   from other wikis to contribute more easily.
 *   Please don\'t remove deprecated values, them should be keeped for backward compatibility.
 *
 * This array can be modified at runtime with the LanguageGetMagic hook
 */",
 "/**
	 * @param $out OutputPage
	 */",
 "/**
 * @todo document
 * @ingroup Skins
 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
 * Extracts the XFF string from the request header
 * Note: headers are spoofable
 *
 * @deprecated in 1.19; use $wgRequest->getHeader( \'X-Forwarded-For\' ) instead.
 * @return string
 */",
 "/**
 * Returns the browser/OS data from the request header
 * Note: headers are spoofable
 *
 * @deprecated in 1.18; use $wgRequest->getHeader( \'User-Agent\' ) instead.
 * @return string
 */",
 "/**
 * Work out the IP address based on various globals
 * For trusted proxies, use the XFF client IP (first of the chain)
 *
 * @deprecated in 1.19; call $wgRequest->getIP() directly.
 * @return string
 */",
 "/**
 * Checks if an IP is a trusted proxy providor.
 * Useful to tell if X-Fowarded-For data is possibly bogus.
 * Squid cache servers for the site are whitelisted.
 *
 * @param $ip String
 * @return bool
 */",
 "/**
 * Forks processes to scan the originating IP for an open proxy server
 * MemCached can be used to skip IPs that have already been scanned
 */",
 "/**
	 * @param Title $fromTitle
	 * @param Title $toTitle
	 * @param  $reason
	 * @param  $noredirect
	 * @return array
	 */",
 "/**
 * API Module to move pages
 * @ingroup API
 */",
 "/** Nauru (Dorerin Naoero)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Belgian man
 * @author CdaMVvWgS
 * @author Node ue
 */",
 "/** setup a basic parser object */",
 "/** destroy parser (TODO: is it really neded?)*/",
 "/** @dataProvider MediaWikiProvide::Days */",
 "/** @dataProvider MediaWikiProvide::Days */",
 "/** @dataProvider MediaWikiProvide::Days */",
 "/** @dataProvider MediaWikiProvide::Days */",
 "/** @dataProvider MediaWikiProvide::Months */",
 "/** @dataProvider MediaWikiProvide::Months */",
 "/** @dataProvider MediaWikiProvide::Months */",
 "/** @dataProvider MediaWikiProvide::Months */",
 "/** @dataProvider MediaWikiProvide::Days */",
 "/** @dataProvider MediaWikiProvide::Days */",
 "/** @dataProvider MediaWikiProvide::Months */",
 "/** @dataProvider MediaWikiProvide::Months */",
 "/**
	 * Rough tests for {{SERVERNAME}} magic word
	 * Bug 31176
	 */",
 "/** assertion helper expecting a magic output which is zero padded */",
 "/** assertion helper expecting a magic output which is unpadded */",
 "/**
	 * Main assertion helper for magic variables padding
	 * @param $magic string Magic variable name 
	 * @param $value mixed Month or day
	 * @param $format string sprintf format for $value 
	 */",
 "/** helper to set the parser timestamp and revision timestamp */",
 "/**
	 * Assertion helper to test a magic variable output
	 */",
 "/** */",
 "/**
	 * Constructor
	 */",
 "/**
	 * Execute
	 */",
 "/**
	 * Do the actual import
	 */",
 "/**
 * MediaWiki page data importer
 *
 * @ingroup SpecialPage
 */",
 "/**
	 * @param Title $title
	 * @param Title $origTitle
	 * @param int $revisionCount
	 * @param  $successCount
	 * @param  $pageInfo
	 * @return void
	 */",
 "/**
 * Reporting callback
 * @ingroup SpecialPage
 */",
 "/**
	 * @param  $dbw DatabaseBase
	 * @return void
	 */",
 "/**
	 * @param  $dbw DatabaseBase
	 * @return void
	 */",
 "/**
	 * @param  $dbw DatabaseBase
	 * @return void
	 */",
 "/**
	 * Get XML preprocessor tree from the preprocessor (which may not be the
	 * native XML-based one).
	 *
	 * @param string $wikiText
	 * @return string
	 */",
 "/**
	 * Normalize XML string to the form that a DOMDocument saves out.
	 *
	 * @param string $xml
	 * @return string
	 */",
 "/**
	 * @dataProvider provideCases
	 */",
 "/**
	 * These are more complex test cases taken out of wiki articles.
	 */",
 "/**
	 * @dataProvider provideFiles
	 */",
 "/**
	 * Tests from Bug 28642 ?? https://bugzilla.wikimedia.org/28642
	 */",
 "/**
	 * @dataProvider provideHeadings
	 */",
 "/**
 * Internationalisation file for the QuestyCaptcha module of the ConfirmEdit
 * extension.
 *
 * @file
 * @ingroup Extensions
 */",
 "/** English */",
 "/** Message documentation (Message documentation)
 * @author Fryed-peach
 * @author Hamilton Abreu
 */",
 "/** Gheg Albanian (Geg??)
 * @author Mdupont
 */",
 "/** Arabic (??????????????)
 * @author Ciphers
 * @author Meno25
 * @author OsamaK
 */",
 "/** Bashkir (??????????????????)
 * @author Assele
 */",
 "/** Belarusian (Tara??kievica orthography) (??????????????????????? (??????????????????????)???)
 * @author EugeneZelenko
 * @author Jim-by
 */",
 "/** Breton (Brezhoneg)
 * @author Fulup
 */",
 "/** Bosnian (Bosanski)
 * @author CERminator
 */",
 "/** Catalan (Catal??)
 * @author Paucabot
 * @author Toniher
 */",
 "/** Czech (??esky)
 * @author Mormegil
 */",
 "/** German (Deutsch)
 * @author Kghbln
 * @author Pill
 * @author Umherirrender
 */",
 "/** German (formal address) (???Deutsch (Sie-Form)???)
 * @author Imre
 * @author Umherirrender
 */",
 "/** Lower Sorbian (Dolnoserbski)
 * @author Michawiki
 */",
 "/** Greek (????????????????)
 * @author Omnipaedista
 */",
 "/** Esperanto (Esperanto)
 * @author Castelobranco
 */",
 "/** Spanish (Espa??ol)
 * @author Crazymadlover
 * @author Pertile
 */",
 "/** Estonian (Eesti)
 * @author Pikne
 */",
 "/** Basque (Euskara)
 * @author Kobazulo
 */",
 "/** Finnish (Suomi)
 * @author Crt
 * @author Nike
 */",
 "/** French (Fran??ais)
 * @author IAlex
 * @author Verdy p
 */",
 "/** Galician (Galego)
 * @author Toli??o
 */",
 "/** Swiss German (Alemannisch)
 * @author Als-Chl??mens
 * @author Als-Holder
 */",
 "/** Hebrew (??????????)
 * @author Rotemliss
 * @author YaronSh
 */",
 "/** Upper Sorbian (Hornjoserbsce)
 * @author Michawiki
 */",
 "/** Hungarian (Magyar)
 * @author Glanthor Reviol
 */",
 "/** Interlingua (Interlingua)
 * @author McDutchie
 */",
 "/** Indonesian (Bahasa Indonesia)
 * @author Bennylin
 * @author Irwangatot
 * @author IvanLanin
 * @author Iwan Novirion
 */",
 "/** Iloko (Ilokano)
 * @author Lam-ang
 */",
 "/** Italian (Italiano)
 * @author Beta16
 * @author Darth Kule
 */",
 "/** Japanese (?????????)
 * @author Aotake
 * @author Fryed-peach
 * @author Shirayuki
 */",
 "/** Korean (?????????)
 * @author Kwj2772
 * @author ??????
 */",
 "/** Colognian (Ripoarisch)
 * @author Purodha
 */",
 "/** Luxembourgish (L??tzebuergesch)
 * @author Les Meloures
 * @author Robby
 */",
 "/** Macedonian (????????????????????)
 * @author Bjankuloski06
 */",
 "/** Malayalam (??????????????????)
 * @author Junaidpv
 */",
 "/** Malay (Bahasa Melayu)
 * @author Anakmalaysia
 */",
 "/** Norwegian (bokm??l)??? (???Norsk (bokm??l)???)
 * @author Nghtwlkr
 * @author Simny
 */",
 "/** Dutch (Nederlands)
 * @author Siebrand
 */",
 "/** Norwegian Nynorsk (???Norsk (nynorsk)???)
 * @author Gunnernett
 */",
 "/** Occitan (Occitan)
 * @author Cedric31
 */",
 "/** Polish (Polski)
 * @author Sp5uhe
 */",
 "/** Piedmontese (Piemont??is)
 * @author Borich??t
 * @author Dragon??t
 */",
 "/** Portuguese (Portugu??s)
 * @author Crazymadlover
 * @author Giro720
 * @author Hamilton Abreu
 */",
 "/** Brazilian Portuguese (Portugu??s do Brasil)
 * @author 555
 * @author Eduardo.mps
 * @author Giro720
 */",
 "/** Tarand??ne (Tarand??ne)
 * @author Joetaras
 */",
 "/** Russian (??????????????)
 * @author ?????????????????? ??????????????
 */",
 "/** Slovak (Sloven??ina)
 * @author Helix84
 */",
 "/** Slovenian (Sloven????ina)
 * @author Dbc334
 */",
 "/** Serbian (Cyrillic script) (??????????????? (????????????????)???)
 * @author Rancher
 */",
 "/** Serbian (Latin script) (???Srpski (latinica)???) */",
 "/** Swedish (Svenska)
 * @author Boivie
 */",
 "/** Telugu (??????????????????)
 * @author Kiranmayee
 * @author Veeven
 */",
 "/** Thai (?????????)
 * @author Harley Hartwell
 */",
 "/** Tagalog (Tagalog)
 * @author AnakngAraw
 */",
 "/** Turkish (T??rk??e)
 * @author Joseph
 * @author Vito Genovese
 */",
 "/** Ukrainian (????????????????????)
 * @author Diemon.ukr
 */",
 "/** Walloon (walon)
 * @author Srtxg
 */",
 "/** Yiddish (????????????)
 * @author ????????????????
 */",
 "/** Simplified Chinese (?????????(??????)???) */",
 "/** Traditional Chinese (?????????(??????)???)
 * @author Horacewai2
 * @author Waihorace
 */",
 "/**
	 * @param $title Title
	 *
	 * @return SquidUpdate
	 */",
 "/**
	 * Create a SquidUpdate from an array of Title objects, or a TitleArray object
	 *
	 * @param $titles array
	 * @param $urlArr array
	 *
	 * @return SquidUpdate
	 */",
 "/**
	 * @param $title Title
	 *
	 * @return SquidUpdate
	 */",
 "/**
	 * Purges the list of URLs passed to the constructor
	 */",
 "/**
	 * Purges a list of Squids defined in $wgSquidServers.
	 * $urlArr should contain the full URLs to purge as values
	 * (example: $urlArr[] = \'http://my.host/something\')
	 * XXX report broken Squids per mail or log
	 *
	 * @param $urlArr array
	 * @return void
	 */",
 "/**
	 * @throws MWException
	 * @param $urlArr array
	 */",
 "/**
	 * Expand local URLs to fully-qualified URLs using the internal protocol
	 * and host defined in $wgInternalServer. Input that\'s already fully-
	 * qualified will be passed through unchanged.
	 *
	 * This is used to generate purge URLs that may be either local to the
	 * main wiki or include a non-native host, such as images hosted on a
	 * second internal server.
	 *
	 * Client functions should not need to call this.
	 *
	 * @param $url string
	 *
	 * @return string
	 */",
 "/**
 * Handles purging appropriate Squid URLs given a title (or titles)
 * @ingroup Cache
 */",
 "/**
	 * @param $key string
	 * @return string
	 */",
 "/**
 * For all translated messages, this returns the name of the message bracketed.
 * This does not affect untranslated messages.
 *
 * NOTE: It returns a valid title, because there are some poorly written
 * extentions that assume the contents of some messages are valid.
 *
 * @ingroup Language
 */",
 "/**
	 * Test basic path parsing
	 */",
 "/**
	 * Test loose path auto-$1
	 */",
 "/**
	 * Test to ensure that path is based on specifity, not order
	 */",
 "/**
	 * Test the handling of key based arrays with a url parameter
	 */",
 "/**
	 * Test the handling of $2 inside paths
	 */",
 "/**
	 * Test additional restricted value parameter
	 */",
 "/**
	 * Test to ensure that matches are not made if a parameter expects nonexistent input
	 */",
 "/**
	 * Test to ensure weight of paths is handled correctly
	 */",
 "/**
	 * Make sure the router handles titles like Special:Recentchanges correctly
	 */",
 "/**
	 * Make sure the router decodes urlencoding properly
	 */",
 "/**
	*Makesuretherouterdoesn\'tbreakonspecialcharacterslike$usedinregexpreplacements
	*@dataProviderdataRegexpChars
	*/",
 "/**
	*Makesuretherouterhandlescharacterslike+&()properly
	*/",
 "/**
	*Makesuretherouterhandlesunicodecharacterscorrectly
	*@dependstestSpecial
	*@dependstestUrlencoding
	*@dependstestCharacters
	*/",
 "/**
	*Ensuretherouterdoesn\'tchokeonlongpaths.
	*/",
 "/**
	*Ensurethatthephppassedsiteofparametervaluesarenoturldecoded
	*/",
 "/**
	*Ensurethatrawparametervaluesdonothaveanyvariablereplacementsorurldecoding
	*/",
 "/**
*TestsforthePathRouterparsing
*/",
 "/**
	 * Convert from the nominative form of a noun to some other case
	 * Invoked with {{grammar:case|word}}
	 *
	 * @param $word string
	 * @param $case string
	 * @return string
	 */",
 "/**
	 * @param $count int
	 * @param $forms array
	 *
	 * @return string
	 */",
 "/**
	 * Armenian numeric format is \"12??345,67\" but \"1234,56\"
	 *
	 * @param $_ string
	 *
	 * @return string
	 */",
 "/** Armenian (??????????????)
 *
 * @ingroup Language
 * @author Ruben Vardanyan (Me@RubenVardanyan.com)
 */",
 "/**
	 * Don\'t return a 404 for categories in use.
	 * In use defined as: either the actual page exists
	 * or the category currently has members.
	 *
	 * @return bool
	 */",
 "/**
 * Special handling for category pages
 */",
 "/** Uzbek (O\'zbek)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Abdulla
 * @author Behzod Saidov <behzodsaidov@gmail.com>
 * @author Urhixidur
 */",
 "/**
	 * Add an edit token to the API request
	 * This is cheating a bit -- we grab a token in the correct format and then add it to the pseudo-session and to the
	 * request, without actually requesting a \"real\" edit token
	 * @param $params: key-value API params
	 * @param $session: session array
	 * @param $user String|null A User object for the context 
	 */",
 "/**
	 * Returns a DerivativeContext with the request variables in place
	 *
	 * @param $params Array key-value API params
	 * @param $session Array session data
	 * @param $user User or null
	 * @return DerivativeContext
	 */",
 "/**
	 * Check whether there exists a user account with the given name.
	 * The name will be normalized to MediaWiki\'s requirements, so
	 * you might need to munge it (for instance, for lowercase initial
	 * letters).
	 *
	 * @param $username String: username.
	 * @return bool
	 */",
 "/**
	 * Check if a username+password pair is a valid login.
	 * The name will be normalized to MediaWiki\'s requirements, so
	 * you might need to munge it (for instance, for lowercase initial
	 * letters).
	 *
	 * @param $username String: username.
	 * @param $password String: user password.
	 * @return bool
	 */",
 "/**
	 * Modify options in the login template.
	 *
	 * @param $template UserLoginTemplate object.
	 * @param $type String \'signup\' or \'login\'. Added in 1.16.
	 */",
 "/**
	 * Set the domain this plugin is supposed to use when authenticating.
	 *
	 * @param $domain String: authentication domain.
	 */",
 "/**
	 * Check to see if the specific domain is a valid domain.
	 *
	 * @param $domain String: authentication domain.
	 * @return bool
	 */",
 "/**
	 * When a user logs in, optionally fill in preferences and such.
	 * For instance, you might pull the email address or real name from the
	 * external user database.
	 *
	 * The User object is passed by reference so it can be modified; don\'t
	 * forget the & on your function declaration.
	 *
	 * @param $user User object
	 */",
 "/**
	 * Return true if the wiki should create a new local account automatically
	 * when asked to login a user who doesn\'t exist locally but does in the
	 * external auth database.
	 *
	 * If you don\'t automatically create accounts, you must still create
	 * accounts in some way. It\'s not possible to authenticate without
	 * a local account.
	 *
	 * This is just a question, and shouldn\'t perform any actions.
	 *
	 * @return Boolean
	 */",
 "/**
	 * Allow a property change? Properties are the same as preferences
	 * and use the same keys. \'Realname\' \'Emailaddress\' and \'Nickname\'
	 * all reference this.
	 *
	 * @param $prop string
	 *
	 * @return Boolean
	 */",
 "/**
	 * Can users change their passwords?
	 *
	 * @return bool
	 */",
 "/**
	 * Set the given password in the authentication database.
	 * As a special case, the password may be set to null to request
	 * locking the password to an unusable value, with the expectation
	 * that it will be set later through a mail reset or other method.
	 *
	 * Return true if successful.
	 *
	 * @param $user User object.
	 * @param $password String: password.
	 * @return bool
	 */",
 "/**
	 * Update user information in the external authentication database.
	 * Return true if successful.
	 *
	 * @param $user User object.
	 * @return Boolean
	 */",
 "/**
	 * Check to see if external accounts can be created.
	 * Return true if external accounts can be created.
	 * @return Boolean
	 */",
 "/**
	 * Add a user to the external authentication database.
	 * Return true if successful.
	 *
	 * @param $user User: only the name should be assumed valid at this point
	 * @param $password String
	 * @param $email String
	 * @param $realname String
	 * @return Boolean
	 */",
 "/**
	 * Return true to prevent logins that don\'t authenticate here from being
	 * checked against the local database\'s password fields.
	 *
	 * This is just a question, and shouldn\'t perform any actions.
	 *
	 * @return Boolean
	 */",
 "/**
	 * Check if a user should authenticate locally if the global authentication fails.
	 * If either this or strict() returns true, local authentication is not used.
	 *
	 * @param $username String: username.
	 * @return Boolean
	 */",
 "/**
	 * When creating a user account, optionally fill in preferences and such.
	 * For instance, you might pull the email address or real name from the
	 * external user database.
	 *
	 * The User object is passed by reference so it can be modified; don\'t
	 * forget the & on your function declaration.
	 *
	 * @param $user User object.
	 * @param $autocreate Boolean: True if user is being autocreated on login
	 */",
 "/**
	 * If you want to munge the case of an account name before the final
	 * check, now is your chance.
	 */",
 "/**
	 * Get an instance of a User object
	 *
	 * @param $user User
	 *
	 * @return AuthPluginUser
	 */",
 "/**
	 * Get a list of domains (in HTMLForm options format) used.
	 *
	 * @return array
	 */",
 "/**
 * Authentication plugin interface. Instantiate a subclass of AuthPlugin
 * and set $wgAuth to it to authenticate against some external tool.
 *
 * The default behavior is not to do anything, and use the local user
 * database for all authentication. A subclass can require that all
 * accounts authenticate externally, or use it only as a fallback; also
 * you can transparently create internal wiki accounts the first time
 * someone logs in who can be authenticated externally.
 */",
 "/** Quechua (Runa Simi)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author AlimanRuna
 * @author Diego Grez
 * @author Kaganer
 * @author Omnipaedista
 * @author Reedy
 * @author The Evil IP address
 * @author ???????? ????????????????
 */",
 "/**
	 * Checks that the user has permissions to perform this revert.
	 * Dies with usage message on inadequate permissions.
	 * @param $user User The user to check.
	 */",
 "/**
	 * Validate the user parameters and set $this->archiveName and $this->file.
	 * Throws an error if validation fails
	 */",
 "/**
*@ingroupAPI
*/",
 "/** Inupiaq (I??upiak)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Hercule
 * @author Zanimum (on ik.wikipedia.org)
 */",
 "/** @dataProvider providerPluralDual */",
 "/** @dataProvider providerPlural */",
 "/** Tests for MediaWiki languages/classes/LanguageHe.php */",
 "/**
	 * @param $pageSet ApiPageSet
	 * @return void
	 */",
 "/**
	 * Get an array mapping token names to their handler functions.
	 * The prototype for a token function is func($pageid, $title)
	 * it should return a token or false (permission denied)
	 * @return array array(tokenname => function)
	 */",
 "/**
	 * Get a result array with information about a title
	 * @param $pageid int Page ID (negative for missing titles)
	 * @param $title Title object
	 * @return array
	 */",
 "/**
	 * Get information about protections and put it in $protections
	 */",
 "/**
	 * Get talk page IDs (if requested) and subject page IDs (if requested)
	 * and put them in $talkids and $subjectids
	 */",
 "/**
	 * Get information about watched status and put it in $this->watched
	 */",
 "/**
 * A query module to show basic page information.
 *
 * @ingroup API
 */",
 "/**
	 * Use singular form for zero
	 * http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html#ln
	 *
	 * @param $count int
	 * @param $forms array
	 *
	 * @return string
	 */",
 "/**
 * Lingala (Ling??la)
 *
 * @ingroup Language
 */",
 "/**
	 * BeforePageDisplay hook
	 * 
	 * Adds the modules to the page
	 * 
	 * @param $out OutputPage output page
	 * @param $skin Skin current skin
	 */",
 "/**
	 * GetPreferences hook
	 * 
	 * Adds Vector-releated items to the preferences
	 * 
	 * @param $user User current user
	 * @param $defaultPreferences array list of default user preference controls
	 */",
 "/**
	 * ResourceLoaderGetConfigVars hook
	 * 
	 * Adds enabled/disabled switches for Vector modules
	 */",
 "/**
	 * @param $vars array
	 * @return bool
	 */",
 "/**
 * Hooks for Vector extension
 * 
 * @file
 * @ingroup Extensions
 */",
 "/**
	 * Use singular form for zero
	 *
	 * @param $count int
	 * @param $forms array
	 *
	 * @return string
	 */",
 "/**
 * Hindi (??????????????????)
 *
 * @ingroup Language
 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return Bool
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * @return string
	 */",
 "/**
		 * @var $conn DatabaseBase
		 */",
 "/**
	 * @return Status
	 */",
 "/**
		 * @var $conn DatabaseBase
		 */",
 "/**
		 * @var $conn DatabaseBase
		 */",
 "/**
	 * Get a list of storage engines that are available and supported
	 *
	 * @return array
	 */",
 "/**
	 * Get a list of character sets that are available and supported
	 *
	 * @return array
	 */",
 "/**
		 * @var $conn DatabaseBase
		 */",
 "/**
	 * Return true if the install user can create accounts
	 *
	 * @return bool
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return Status
	 */",
 "/**
	 * @return Status
	 */",
 "/**
	 * @return Status
	 */",
 "/**
	 * Return a formal \'User\'@\'Host\' username for use in queries
	 * @param $name String Username, quotes will be added
	 * @param $host String Hostname, quotes will be added
	 * @return String
	 */",
 "/**
	 * Try to see if the user account exists. Our \"superuser\" may not have
	 * access to mysql.user, so false means \"no\" or \"maybe\"
	 * @param $host String Hostname to check
	 * @param $user String Username to check
	 * @return boolean
	 */",
 "/**
	 * Return any table options to be applied to all tables that don\'t
	 * override them.
	 *
	 * @return String
	 */",
 "/**
	 * Get variables to substitute into tables.sql and the SQL patch files.
	 *
	 * @return array
	 */",
 "/**
 * Class for setting up the MediaWiki database using MySQL.
 *
 * @ingroup Deployment
 * @since 1.17
 */",
 "/** Yoruba (Yor??b??)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Demmy
 * @author Kaganer
 * @author Meno25
 * @author Urhixidur
 */",
 "/** Traditional Chinese (?????????(??????)???)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Alexsh
 * @author Anakmalaysia
 * @author Andrew971218
 * @author Bencmq
 * @author Breawycker
 * @author FireJackey
 * @author Frankou
 * @author Gaoxuewei
 * @author Hakka
 * @author Horacewai2
 * @author Hydra
 * @author Hzy980512
 * @author Jidanni
 * @author Jimmy xu wrk
 * @author Kaganer
 * @author KaiesTse
 * @author Kuailong
 * @author Lauhenry
 * @author Liangent
 * @author Mark85296341
 * @author Oapbtommy
 * @author Pbdragonwang
 * @author PhiLiP
 * @author Philip
 * @author Shinjiman
 * @author Shizhao
 * @author Skjackey tse
 * @author Waihorace
 * @author Wmr89502270
 * @author Wong128hk
 * @author Wrightbus
 * @author Xiaomingyan
 * @author Yuyu
 */",
 "/** helper to test SpecialRecentchanges::buildMainQueryConds() */",
 "/** return false if condition begin with \'rc_timestamp \' */",
 "/**
	 * @bug 2429
	 * @dataProvider provideNamespacesAssociations
	 */",
 "/**
	 * @bug 2429
	 * @dataProvider provideNamespacesAssociations
	 */",
 "/**
	 * Provides associated namespaces to test recent changes
	 * namespaces association filtering.
	 */",
 "/**
 * Test class for SpecialRecentchanges class
 *
 * Copyright ?? 2011, Antoine Musso
 *
 * @author Antoine Musso
 * @group Database
 */",
 "/**
	 * Constructor and clear the article
	 * @param $title Title Reference to a Title object.
	 * @param $oldId Integer revision ID, null to fetch from request, zero for current
	 */",
 "/**
	 * @param $title Title
	 * @return WikiPage
	 */",
 "/**
	 * Constructor from a page id
	 * @param $id Int article ID to load
	 * @return Article|null
	 */",
 "/**
	 * Create an Article object of the appropriate class for the given page.
	 *
	 * @param $title Title
	 * @param $context IContextSource
	 * @return Article object
	 */",
 "/**
	 * Create an Article object of the appropriate class for the given page.
	 *
	 * @param $page WikiPage
	 * @param $context IContextSource
	 * @return Article object
	 */",
 "/**
	 * Tell the page view functions that this view was redirected
	 * from another page on the wiki.
	 * @param $from Title object.
	 */",
 "/**
	 * Get the title object of the article
	 *
	 * @return Title object of this page
	 */",
 "/**
	 * Get the WikiPage object of this instance
	 *
	 * @since 1.19
	 * @return WikiPage
	 */",
 "/**
	 * Clear the object
	 */",
 "/**
	 * Note that getContent/loadContent do not follow redirects anymore.
	 * If you need to fetch redirectable content easily, try
	 * the shortcut in WikiPage::getRedirectTarget()
	 *
	 * This function has side effects! Do not use this function if you
	 * only want the real revision text if any.
	 *
	 * @return Return the text of this revision
	 */",
 "/**
	 * @return int The oldid of the article that is to be shown, 0 for the
	 *             current revision
	 */",
 "/**
	 * Sets $this->mRedirectUrl to a correct URL if the query parameters are incorrect
	 *
	 * @return int The old id for the request
	 */",
 "/**
	 * Load the revision (including text) into this object
	 *
	 * @deprecated in 1.19; use fetchContent()
	 */",
 "/**
	 * Get text of an article from database
	 * Does *NOT* follow redirects.
	 *
	 * @return mixed string containing article contents, or false if null
	 */",
 "/**
	 * No-op
	 * @deprecated since 1.18
	 */",
 "/**
	 * Returns true if the currently-referenced revision is the current edit
	 * to this page (and it exists).
	 * @return bool
	 */",
 "/**
	 * Get the fetched Revision object depending on request parameters or null
	 * on failure.
	 *
	 * @since 1.19
	 * @return Revision|null
	 */",
 "/**
	 * Use this to fetch the rev ID used on page views
	 *
	 * @return int revision ID of last article revision
	 */",
 "/**
	 * This is the default action of the index.php entry point: just view the
	 * page of the given title.
	 */",
 "/**
	 * Adjust title for pages with displaytitle, -{T|}- or language conversion
	 * @param $pOutput ParserOutput
	 */",
 "/**
	 * Show a diff page according to current request variables. For use within
	 * Article::view() only, other callers should use the DifferenceEngine class.
	 */",
 "/**
	 * Show a page view for a page formatted as CSS or JavaScript. To be called by
	 * Article::view() only.
	 *
	 * This is hooked by SyntaxHighlight_GeSHi to do syntax highlighting of these
	 * page views.
	 */",
 "/**
	 * Get the robot policy to be used for the current view
	 * @param $action String the action= GET parameter
	 * @param $pOutput ParserOutput
	 * @return Array the policy that should be set
	 * TODO: actions other than \'view\'
	 */",
 "/**
	 * Converts a String robot policy into an associative array, to allow
	 * merging of several policies using array_merge().
	 * @param $policy Mixed, returns empty array on null/false/\'\', transparent
	 *            to already-converted arrays, converts String.
	 * @return Array: \'index\' => <indexpolicy>, \'follow\' => <followpolicy>
	 */",
 "/**
	 * If this request is a redirect view, send \"redirected from\" subtitle to
	 * $wgOut. Returns true if the header was needed, false if this is not a
	 * redirect view. Handles both local and remote redirects.
	 *
	 * @return boolean
	 */",
 "/**
	 * Show a header specific to the namespace currently being viewed, like
	 * [[MediaWiki:Talkpagetext]]. For Article::view().
	 */",
 "/**
	 * Show the footer section of an ordinary page view
	 */",
 "/**
	 * If patrol is possible, output a patrol UI box. This is called from the
	 * footer section of ordinary page views. If patrol is not possible or not
	 * desired, does nothing.
	 */",
 "/**
	 * Show the error text for a missing article. For articles in the MediaWiki
	 * namespace, show the default message text. To be called from Article::view().
	 */",
 "/**
	 * If the revision requested for view is deleted, check permissions.
	 * Send either an error message or a warning header to $wgOut.
	 *
	 * @return boolean true if the view is allowed, false if not.
	 */",
 "/**
	 * Generate the navigation links when browsing through an article revisions
	 * It shows the information as:
	 *   Revision as of \<date\>; view current revision
	 *   \<- Previous version | Next Version -\>
	 *
	 * @param $oldid String: revision ID of this article revision
	 */",
 "/**
		 * @var $title Title
		 */",
 "/**
	 * View redirect
	 *
	 * @param $target Title|Array of destination(s) to redirect
	 * @param $appendSubtitle Boolean [optional]
	 * @param $forceKnown Boolean: should the image be shown as a bluelink regardless of existence?
	 * @return string containing HMTL with redirect link
	 */",
 "/**
	 * Handle action=render
	 */",
 "/**
	 * action=protect handler
	 */",
 "/**
	 * action=unprotect handler (alias)
	 */",
 "/**
	 * UI entry point for page deletion
	 */",
 "/**
	 * Output deletion confirmation dialog
	 * @todo FIXME: Move to another file?
	 * @param $reason String: prefilled reason
	 */",
 "/**
	 * Perform a deletion and output success or failure messages
	 * @param $reason
	 * @param $suppress bool
	 */",
 "/**
	 * checkLastModified returns true if it has taken care of all
	 * output to the client that is necessary for this request.
	 * (that is, it has sent a cached version of the page)
	 *
	 * @return boolean true if cached version send, false otherwise
	 */",
 "/**
	 * Check if the page can be cached
	 * @return bool
	 */",
 "/**
	 * Lightweight method to get the parser output for a page, checking the parser cache
	 * and so on. Doesn\'t consider most of the stuff that WikiPage::view is forced to
	 * consider, so it\'s not appropriate to use there.
	 *
	 * @since 1.16 (r52326) for LiquidThreads
	 *
	 * @param $oldid mixed integer Revision ID or null
	 * @param $user User The relevant user
	 * @return ParserOutput or false if the given revsion ID is not found
	 */",
 "/**
	 * Get parser options suitable for rendering the primary article wikitext
	 * @return ParserOptions|false
	 */",
 "/**
	 * Sets the context this Article is executed in
	 *
	 * @param $context IContextSource
	 * @since 1.18
	 */",
 "/**
	 * Gets the context this Article is executed in
	 *
	 * @return IContextSource
	 * @since 1.18
	 */",
 "/**
	 * Info about this page
	 * @deprecated since 1.19
	 */",
 "/**
	 * Mark this particular edit/page as patrolled
	 * @deprecated since 1.18
	 */",
 "/**
	 * Handle action=purge
	 * @deprecated since 1.19
	 */",
 "/**
	 * Handle action=revert
	 * @deprecated since 1.19
	 */",
 "/**
	 * Handle action=rollback
	 * @deprecated since 1.19
	 */",
 "/**
	 * User-interface handler for the \"watch\" action.
	 * Requires Request to pass a token as of 1.18.
	 * @deprecated since 1.18
	 */",
 "/**
	 * Add this page to $wgUser\'s watchlist
	 *
	 * This is safe to be called multiple times
	 *
	 * @return bool true on successful watch operation
	 * @deprecated since 1.18
	 */",
 "/**
	 * User interface handler for the \"unwatch\" action.
	 * Requires Request to pass a token as of 1.18.
	 * @deprecated since 1.18
	 */",
 "/**
	 * Stop watching a page
	 * @return bool true on successful unwatch
	 * @deprecated since 1.18
	 */",
 "/**
	 * Output a redirect back to the article.
	 * This is typically used after an edit.
	 *
	 * @deprecated in 1.18; call $wgOut->redirect() directly
	 * @param $noRedir Boolean: add redirect=no
	 * @param $sectionAnchor String: section to redirect to, including \"#\"
	 * @param $extraQuery String: extra query params
	 */",
 "/**
	 * Use PHP\'s magic __get handler to handle accessing of
	 * raw WikiPage fields for backwards compatibility.
	 *
	 * @param $fname String Field name
	 */",
 "/**
	 * Use PHP\'s magic __set handler to handle setting of
	 * raw WikiPage fields for backwards compatibility.
	 *
	 * @param $fname String Field name
	 * @param $fvalue mixed New value
	 */",
 "/**
	 * Use PHP\'s magic __call handler to transform instance calls to
	 * WikiPage functions for backwards compatibility.
	 *
	 * @param $fname String Name of called method
	 * @param $args Array Arguments to the method
	 */",
 "/**
	 * @param $limit array
	 * @param $expiry array
	 * @param $cascade bool
	 * @param $reason string
	 * @param $user User
	 * @return Status
	 */",
 "/**
	 * @param $limit array
	 * @param $reason string
	 * @param $cascade int
	 * @param $expiry array
	 * @return bool
	 */",
 "/**
	 * @param $reason string
	 * @param $suppress bool
	 * @param $id int
	 * @param $commit bool
	 * @param $error string
	 * @return bool
	 */",
 "/**
	 * @param $fromP
	 * @param $summary
	 * @param $token
	 * @param $bot
	 * @param $resultDetails
	 * @param $user User
	 * @return array
	 */",
 "/**
	 * @param $fromP
	 * @param $summary
	 * @param $bot
	 * @param $resultDetails
	 * @param $guser User
	 * @return array
	 */",
 "/**
	 * @param $hasHistory bool
	 * @return mixed
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * @param $title Title
	 */",
 "/**
	 * @param $title Title
	 */",
 "/**
	 * @param $title Title
	 */",
 "/**
	 * @param $oldtext
	 * @param $newtext
	 * @param $flags
	 * @return string
	 */",
 "/**
 * Class for viewing MediaWiki article and history.
 *
 * This maintains WikiPage functions for backwards compatibility.
 *
 * @TODO: move and rewrite code to an Action class
 *
 * See design.txt for an overview.
 * Note: edit user interface and cache support functions have been
 * moved to separate EditPage and HTMLFileCache classes.
 *
 * @internal documentation reviewed 15 Mar 2010
 */",
 "/**
	 * List all deleted pages recorded in the archive table. Returns result
	 * wrapper with (ar_namespace, ar_title, count) fields, ordered by page
	 * namespace/title.
	 *
	 * @return ResultWrapper
	 */",
 "/**
	 * List deleted pages recorded in the archive table matching the
	 * given title prefix.
	 * Returns result wrapper with (ar_namespace, ar_title, count) fields.
	 *
	 * @param $prefix String: title prefix
	 * @return ResultWrapper
	 */",
 "/**
	 * @param $dbr DatabaseBase
	 * @param $condition
	 * @return bool|ResultWrapper
	 */",
 "/**
	 * List the revisions of the given page. Returns result wrapper with
	 * (ar_minor_edit, ar_timestamp, ar_user, ar_user_text, ar_comment) fields.
	 *
	 * @return ResultWrapper
	 */",
 "/**
	 * List the deleted file revisions for this page, if it\'s a file page.
	 * Returns a result wrapper with various filearchive fields, or null
	 * if not a file page.
	 *
	 * @return ResultWrapper
	 * @todo Does this belong in Image for fuller encapsulation?
	 */",
 "/**
	 * Return a Revision object containing data for the deleted revision.
	 * Note that the result *may* or *may not* have a null page ID.
	 *
	 * @param $timestamp String
	 * @return Revision
	 */",
 "/**
	 * Return the most-previous revision, either live or deleted, against
	 * the deleted revision given by timestamp.
	 *
	 * May produce unexpected results in case of history merges or other
	 * unusual time issues.
	 *
	 * @param $timestamp String
	 * @return Revision or null
	 */",
 "/**
	 * Get the text from an archive row containing ar_text, ar_flags and ar_text_id
	 *
	 * @param $row Object: database row
	 * @return Revision
	 */",
 "/**
	 * Fetch (and decompress if necessary) the stored text of the most
	 * recently edited deleted revision of the page.
	 *
	 * If there are no archived revisions for the page, returns NULL.
	 *
	 * @return String
	 */",
 "/**
	 * Quick check if any archived revisions are present for the page.
	 *
	 * @return Boolean
	 */",
 "/**
	 * Restore the given (or all) text and file revisions for the page.
	 * Once restored, the items will be removed from the archive tables.
	 * The deletion log will be updated with an undeletion notice.
	 *
	 * @param $timestamps Array: pass an empty array to restore all revisions, otherwise list the ones to undelete.
	 * @param $comment String
	 * @param $fileVersions Array
	 * @param $unsuppress Boolean
	 *
	 * @return array(number of file revisions restored, number of image revisions restored, log message)
	 * on success, false on failure
	 */",
 "/**
		 * Select each archived revision...
		 */",
 "/**
	 * This is the meaty bit -- restores archived revisions of the given page
	 * to the cur/old tables. If the page currently exists, all revisions will
	 * be stuffed into old, otherwise the most recent will go into cur.
	 *
	 * @param $timestamps Array: pass an empty array to restore all revisions, otherwise list the ones to undelete.
	 * @param $comment String
	 * @param $unsuppress Boolean: remove all ar_deleted/fa_deleted restrictions of seletected revs
	 *
	 * @return Mixed: number of revisions restored or false on failure
	 */",
 "/**
	 * @return Status
	 */",
 "/**
 * Used to show archived pages and eventually restore them.
 *
 * @ingroup SpecialPage
 */",
 "/**
	 * Generic list of deleted pages
	 *
	 * @param $result ResultWrapper
	 * @return bool
	 */",
 "/**
	 * Build a diff display between this and the previous either deleted
	 * or non-deleted edit.
	 *
	 * @param $previousRev Revision
	 * @param $currentRev Revision
	 * @return String: HTML
	 */",
 "/**
	 * @param $rev Revision
	 * @param $prefix
	 * @return string
	 */",
 "/**
	 * Show a form confirming whether a tokenless user really wants to see a file
	 */",
 "/**
	 * Show a deleted file version requested by the visitor.
	 */",
 "/**
	 * Fetch revision text link if it\'s available to all users
	 *
	 * @param $rev Revision
	 * @param $titleObj Title
	 * @param $ts Timestamp
	 * @return string
	 */",
 "/**
	 * Fetch image view link if it\'s available to all users
	 *
	 * @param $file File
	 * @param $titleObj Title
	 * @param $ts A timestamp
	 * @param $key String: a storage key
	 *
	 * @return String: HTML fragment
	 */",
 "/**
	 * Fetch file\'s user id if it\'s available to this user
	 *
	 * @param $file File
	 * @return String: HTML fragment
	 */",
 "/**
	 * Fetch file upload comment if it\'s available to this user
	 *
	 * @param $file File
	 * @return String: HTML fragment
	 */",
 "/**
 * Special page allowing users with the appropriate permissions to view
 * and restore deleted content.
 *
 * @ingroup SpecialPage
 */",
 "/**
	 * Check if the specified database has a job of the specified type in it.
	 * The type may be false to indicate \"all\".
	 * @param $type string
	 * @param $dbName string
	 * @return bool
	 */",
 "/**
	 * Get all databases that have a pending job
	 * @return array
	 */",
 "/**
	 * @param $dbw DatabaseBase
	 * @return array
	 */",
 "/**
	 * @param $force bool
	 * @param $brokenOnly bool
	 */",
 "/**
	 * Open a connection to the master server with the admin rights.
	 * @return Database
	 * @access private
	 */",
 "/**
	 * Commit transactions and close the connections when we\'re done...
	 */",
 "/**
	 * Open a second connection to the master server, with buffering off.
	 * This will let us stream large datasets in and write in chunks on the
	 * other end.
	 * @return Database
	 * @access private
	 */",
 "/**
	 * Prepare a conversion array for converting Windows Code Page 1252 to
	 * UTF-8. This should provide proper conversion of text that was miscoded
	 * as Windows-1252 by naughty user-agents, and doesn\'t rely on an outside
	 * iconv library.
	 *
	 * @return array
	 * @access private
	 */",
 "/**
	 * Convert from 8-bit Windows-1252 to UTF-8 if necessary.
	 * @param string $text
	 * @return string
	 * @access private
	 */",
 "/**
	 * Dump timestamp and message to output
	 * @param $message String
	 * @access private
	 */",
 "/**
	 * Initialize the chunked-insert system.
	 * Rows will be inserted in chunks of the given number, rather
	 * than in a giant INSERT...SELECT query, to keep the serialized
	 * MySQL database replication from getting hung up. This way other
	 * things can be going on during conversion without waiting for
	 * slaves to catch up as badly.
	 *
	 * @param int $chunksize Number of rows to insert at once
	 * @param int $final Total expected number of rows / id of last row,
	 *                   used for progress reports.
	 * @param string $table to insert on
	 * @param string $fname function name to report in SQL
	 * @access private
	 */",
 "/**
	 * Chunked inserts: perform an insert if we\'ve reached the chunk limit.
	 * Prints a progress report with estimated completion time.
	 * @param array &$chunk -- This will be emptied if an insert is done.
	 * @param int $key A key identifier to use in progress estimation in
	 *                 place of the number of rows inserted. Use this if
	 *                 you provided a max key number instead of a count
	 *                 as the final chunk number in setChunkScale()
	 * @access private
	 */",
 "/**
	 * Chunked inserts: perform an insert unconditionally, at the end, and log.
	 * @param array &$chunk -- This will be emptied if an insert is done.
	 * @access private
	 */",
 "/**
	 * Chunked inserts: perform an insert.
	 * @param array &$chunk -- This will be emptied if an insert is done.
	 * @access private
	 */",
 "/**
	 * Helper function for copyTable array_filter
	 * @param $x
	 * @return bool
	 */",
 "/**
	 * Copy and transcode a table to table_temp.
	 * @param string $name Base name of the source table
	 * @param string $tabledef CREATE TABLE definition, w/ $1 for the name
	 * @param array $fields set of destination fields to these constants:
	 *              MW_UPGRADE_COPY   - straight copy
	 *              MW_UPGRADE_ENCODE - for old Latin1 wikis, conv to UTF-8
	 *              MW_UPGRADE_NULL   - just put NULL
	 * @param callable $callback An optional callback to modify the data
	 *                           or perform other processing. Func should be
	 *                           ( object $row, array $copy ) and return $copy
	 * @access private
	 */",
 "/**
	 * Truncate a table.
	 * @param string $table The table name to be truncated
	 */",
 "/**
	 * Rename a given image or archived image file to the converted filename,
	 * leaving a symlink for URL compatibility.
	 *
	 * @param $oldname string pre-conversion filename
	 * @param $subdirCallback string
	 * @param $basename string pre-conversion base filename for dir hashing, if an archive
	 * @return bool|string
	 * @access private
	 */",
 "/**
	 * Check for duplicate rows in \"cur\" table and move duplicates entries in
	 * \"old\" table.
	 *
	 * This was in cleanupDupes.inc before.
	 */",
 "/**
	 * Rename all our temporary tables into final place.
	 * We\'ve left things in place so a read-only wiki can continue running
	 * on the old code during all this.
	 */",
 "/**
 * @ingroup Maintenance
 */",
 "/** Korean (?????????(??????))
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 */",
 "/**
	 * Plural transformations
	 * Invoked by putting
	 * {{plural:count|form1|form2-4|form0,5+}} for two forms plurals
	 * {{plural:count|form1|form0,2+}} for single form plurals
	 * in a message
	 * @param $count int
	 * @param $forms array
	 * @return string
	 */",
 "/** Czech (??e??tina [subst.], ??esk?? [adj.], ??esky [adv.])
 *
 * @ingroup Language
 */",
 "/**
	 * Initialise the special page list
	 * This must be called before accessing SpecialPage::$mList
	 * @deprecated since 1.18
	 */",
 "/**
	 * @deprecated since 1.18
	 */",
 "/**
	 * Given a special page alias, return the special page name.
	 * Returns false if there is no such alias.
	 *
	 * @param $alias String
	 * @return String or false
	 * @deprecated since 1.18 call SpecialPageFactory method directly
	 */",
 "/**
	 * Given a special page name with a possible subpage, return an array
	 * where the first element is the special page name and the second is the
	 * subpage.
	 *
	 * @param $alias String
	 * @return Array
	 * @deprecated since 1.18 call SpecialPageFactory method directly
	 */",
 "/**
	 * Add a page to the list of valid special pages. This used to be the preferred
	 * method for adding special pages in extensions. It\'s now suggested that you add
	 * an associative record to $wgSpecialPages. This avoids autoloading SpecialPage.
	 *
	 * @param $page SpecialPage
	 * @deprecated since 1.7, warnings in 1.17, might be removed in 1.20
	 */",
 "/**
	 * Add a page to a certain display group for Special:SpecialPages
	 *
	 * @param $page Mixed: SpecialPage or string
	 * @param $group String
	 * @return null
	 * @deprecated since 1.18 call SpecialPageFactory method directly
	 */",
 "/**
	 * Get the group that the special page belongs in on Special:SpecialPage
	 *
	 * @param $page SpecialPage
	 * @return null
	 * @deprecated since 1.18 call SpecialPageFactory method directly
	 */",
 "/**
	 * Remove a special page from the list
	 * Formerly used to disable expensive or dangerous special pages. The
	 * preferred method is now to add a SpecialPage_initList hook.
	 * @deprecated since 1.18
	 *
	 * @param $name String the page to remove
	 */",
 "/**
	 * Check if a given name exist as a special page or as a special page alias
	 *
	 * @param $name String: name of a special page
	 * @return Boolean: true if a special page exists with this name
	 * @deprecated since 1.18 call SpecialPageFactory method directly
	 */",
 "/**
	 * Find the object with a given name and return it (or NULL)
	 *
	 * @param $name String
	 * @return SpecialPage object or null if the page doesn\'t exist
	 * @deprecated since 1.18 call SpecialPageFactory method directly
	 */",
 "/**
	 * Get a special page with a given localised name, or NULL if there
	 * is no such special page.
	 *
	 * @param $alias String
	 * @return SpecialPage object or null if the page doesn\'t exist
	 * @deprecated since 1.18 call SpecialPageFactory method directly
	 */",
 "/**
	 * Return categorised listable special pages which are available
	 * for the current user, and everyone.
	 *
	 * @param $user User object to check permissions, $wgUser will be used
	 *              if not provided
	 * @return Associative array mapping page\'s name to its SpecialPage object
	 * @deprecated since 1.18 call SpecialPageFactory method directly
	 */",
 "/**
	 * Return categorised listable special pages for all users
	 *
	 * @return Associative array mapping page\'s name to its SpecialPage object
	 * @deprecated since 1.18 call SpecialPageFactory method directly
	 */",
 "/**
	 * Return categorised listable special pages which are available
	 * for the current user, but not for everyone
	 *
	 * @return Associative array mapping page\'s name to its SpecialPage object
	 * @deprecated since 1.18 call SpecialPageFactory method directly
	 */",
 "/**
	 * Execute a special page path.
	 * The path may contain parameters, e.g. Special:Name/Params
	 * Extracts the special page name and call the execute method, passing the parameters
	 *
	 * Returns a title object if the page is redirected, false if there was no such special
	 * page, and true if it was successful.
	 *
	 * @param $title          Title object
	 * @param $context        IContextSource
	 * @param $including      Bool output is being captured for use in {{special:whatever}}
	 * @return Bool
	 * @deprecated since 1.18 call SpecialPageFactory method directly
	 */",
 "/**
	 * Get the local name for a specified canonical name
	 *
	 * @param $name String
	 * @param $subpage Mixed: boolean false, or string
	 *
	 * @return String
	 * @deprecated since 1.18 call SpecialPageFactory method directly
	 */",
 "/**
	 * Get a localised Title object for a specified special page name
	 *
	 * @param $name String
	 * @param $subpage String|Bool subpage string, or false to not use a subpage
	 * @return Title object
	 */",
 "/**
	 * Get a localised Title object for a page name with a possibly unvalidated subpage
	 *
	 * @param $name String
	 * @param $subpage String|Bool subpage string, or false to not use a subpage
	 * @return Title object or null if the page doesn\'t exist
	 */",
 "/**
	 * Get a title for a given alias
	 *
	 * @param $alias String
	 * @return Title or null if there is no such alias
	 * @deprecated since 1.18 call SpecialPageFactory method directly
	 */",
 "/**
	 * Default constructor for special pages
	 * Derivative classes should call this from their constructor
	 *     Note that if the user does not have the required level, an error message will
	 *     be displayed by the default execute() method, without the global function ever
	 *     being called.
	 *
	 *     If you override execute(), you can recover the default behaviour with userCanExecute()
	 *     and displayRestrictionError()
	 *
	 * @param $name String: name of the special page, as seen in links and URLs
	 * @param $restriction String: user right required, e.g. \"block\" or \"delete\"
	 * @param $listed Bool: whether the page is listed in Special:Specialpages
	 * @param $function Callback|Bool: function called by execute(). By default it is constructed from $name
	 * @param $file String: file which is included by execute(). It is also constructed from $name by default
	 * @param $includable Bool: whether the page can be included in normal pages
	 */",
 "/**
	 * Do the real work for the constructor, mainly so __call() can intercept
	 * calls to SpecialPage()
	 * @param $name String: name of the special page, as seen in links and URLs
	 * @param $restriction String: user right required, e.g. \"block\" or \"delete\"
	 * @param $listed Bool: whether the page is listed in Special:Specialpages
	 * @param $function Callback|Bool: function called by execute(). By default it is constructed from $name
	 * @param $file String: file which is included by execute(). It is also constructed from $name by default
	 * @param $includable Bool: whether the page can be included in normal pages
	 */",
 "/**
	 * Use PHP\'s magic __call handler to get calls to the old PHP4 constructor
	 * because PHP E_STRICT yells at you for having __construct() and SpecialPage()
	 *
	 * @param $fName String Name of called method
	 * @param $a Array Arguments to the method
	 * @deprecated since 1.17, call parent::__construct()
	 */",
 "/**
	 * Get the name of this Special Page.
	 * @return String
	 */",
 "/**
	 * Get the permission that a user must have to execute this page
	 * @return String
	 */",
 "/**
	 * Get the file which will be included by SpecialPage::execute() if your extension is
	 * still stuck in the past and hasn\'t overridden the execute() method.  No modern code
	 * should want or need to know this.
	 * @return String
	 * @deprecated since 1.18
	 */",
 "/**
	 * Whether this special page is listed in Special:SpecialPages
	 * @since r3583 (v1.3)
	 * @return Bool
	 */",
 "/**
	 * Set whether this page is listed in Special:Specialpages, at run-time
	 * @since r3583 (v1.3)
	 * @param $listed Bool
	 * @return Bool
	 */",
 "/**
	 * Get or set whether this special page is listed in Special:SpecialPages
	 * @since r11308 (v1.6)
	 * @param $x Bool
	 * @return Bool
	 */",
 "/**
	 * Whether it\'s allowed to transclude the special page via {{Special:Foo/params}}
	 * @return Bool
	 */",
 "/**
	 * These mutators are very evil, as the relevant variables should not mutate.  So
	 * don\'t use them.
	 * @param $x Mixed
	 * @return Mixed
	 * @deprecated since 1.18
	 */",
 "/**
	 * These mutators are very evil, as the relevant variables should not mutate.  So
	 * don\'t use them.
	 * @param $x Mixed
	 * @return Mixed
	 * @deprecated since 1.18
	 */",
 "/**
	 * These mutators are very evil, as the relevant variables should not mutate.  So
	 * don\'t use them.
	 * @param $x Mixed
	 * @return Mixed
	 * @deprecated since 1.18
	 */",
 "/**
	 * These mutators are very evil, as the relevant variables should not mutate.  So
	 * don\'t use them.
	 * @param $x Mixed
	 * @return Mixed
	 * @deprecated since 1.18
	 */",
 "/**
	 * These mutators are very evil, as the relevant variables should not mutate.  So
	 * don\'t use them.
	 * @param $x Mixed
	 * @return Mixed
	 * @deprecated since 1.18
	 */",
 "/**
	 * Whether the special page is being evaluated via transclusion
	 * @param $x Bool
	 * @return Bool
	 */",
 "/**
	 * Get the localised name of the special page
	 */",
 "/**
	 * Is this page expensive (for some definition of expensive)?
	 * Expensive pages are disabled or cached in miser mode.  Originally used
	 * (and still overridden) by QueryPage and subclasses, moved here so that
	 * Special:SpecialPages can safely call it for all special pages.
	 *
	 * @return Boolean
	 */",
 "/**
	 * Can be overridden by subclasses with more complicated permissions
	 * schemes.
	 *
	 * @return Boolean: should the page be displayed with the restricted-access
	 *   pages?
	 */",
 "/**
	 * Checks if the given user (identified by an object) can execute this
	 * special page (as defined by $mRestriction).  Can be overridden by sub-
	 * classes with more complicated permissions schemes.
	 *
	 * @param $user User: the user to check
	 * @return Boolean: does the user have permission to view the page?
	 */",
 "/**
	 * Output an error message telling the user what access level they have to have
	 */",
 "/**
	 * Checks if userCanExecute, and if not throws a PermissionsError
	 *
	 * @since 1.19
	 */",
 "/**
	 * If the wiki is currently in readonly mode, throws a ReadOnlyError
	 *
	 * @since 1.19
	 * @throws ReadOnlyError
	 */",
 "/**
	 * Sets headers - this should be called from the execute() method of all derived classes!
	 */",
 "/**
	 * Default execute method
	 * Checks user permissions, calls the function given in mFunction
	 *
	 * This must be overridden by subclasses; it will be made abstract in a future version
	 *
	 * @param $par String subpage string, if one was specified
	 */",
 "/**
	 * Outputs a summary message on top of special pages
	 * Per default the message key is the canonical name of the special page
	 * May be overriden, i.e. by extensions to stick with the naming conventions
	 * for message keys: \'extensionname-xxx\'
	 *
	 * @param $summaryMessageKey String: message key of the summary
	 */",
 "/**
	 * Returns the name that goes in the \<h1\> in the special page itself, and
	 * also the name that will be listed in Special:Specialpages
	 *
	 * Derived classes can override this, but usually it is easier to keep the
	 * default behaviour. Messages can be added at run-time, see
	 * MessageCache.php.
	 *
	 * @return String
	 */",
 "/**
	 * Get a self-referential title object
	 *
	 * @param $subpage String|Bool
	 * @return Title object
	 */",
 "/**
	 * Sets the context this SpecialPage is executed in
	 *
	 * @param $context IContextSource
	 * @since 1.18
	 */",
 "/**
	 * Gets the context this SpecialPage is executed in
	 *
	 * @return IContextSource|RequestContext
	 * @since 1.18
	 */",
 "/**
	 * Get the WebRequest being used for this instance
	 *
	 * @return WebRequest
	 * @since 1.18
	 */",
 "/**
	 * Get the OutputPage being used for this instance
	 *
	 * @return OutputPage
	 * @since 1.18
	 */",
 "/**
	 * Shortcut to get the User executing this instance
	 *
	 * @return User
	 * @since 1.18
	 */",
 "/**
	 * Shortcut to get the skin being used for this instance
	 *
	 * @return Skin
	 * @since 1.18
	 */",
 "/**
	 * Shortcut to get user\'s language
	 *
	 * @deprecated 1.19 Use getLanguage instead
	 * @return Language
	 * @since 1.18
	 */",
 "/**
	 * Shortcut to get user\'s language
	 *
	 * @return Language
	 * @since 1.19
	 */",
 "/**
	 * Return the full title, including $par
	 *
	 * @return Title
	 * @since 1.18
	 */",
 "/**
	 * Wrapper around wfMessage that sets the current context.
	 *
	 * @return Message
	 * @see wfMessage
	 */",
 "/**
	 * Adds RSS/atom links
	 *
	 * @param $params array
	 */",
 "/**
 * Parent special page class, also static functions for handling the special
 * page list.
 * @ingroup SpecialPage
 */",
 "/**
	 * Get an HTMLForm descriptor array
	 * @return Array
	 */",
 "/**
	 * Add pre- or post-text to the form
	 * @return String HTML which will be sent to $form->addPreText()
	 */",
 "/**
	 * Play with the HTMLForm if you need to more substantially
	 * @param $form HTMLForm
	 */",
 "/**
	 * Get the HTMLForm to control behaviour
	 * @return HTMLForm|null
	 */",
 "/**
	 * Process the form on POST submission.
	 * @param  $data Array
	 * @return Bool|Array true for success, false for didn\'t-try, array of errors on failure
	 */",
 "/**
	 * Do something exciting on successful processing of the form, most likely to show a
	 * confirmation message
	 */",
 "/**
	 * Basic SpecialPage workflow: get a form, send it to the user; get some data back,
	 *
	 * @param $par String Subpage string if one was specified
	 */",
 "/**
	 * Maybe do something interesting with the subpage parameter
	 * @param $par String
	 */",
 "/**
	 * Called from execute() to check if the given user can perform this action.
	 * Failures here must throw subclasses of ErrorPageError.
	 * @param $user User
	 * @return Bool true
	 * @throws ErrorPageError
	 */",
 "/**
	 * Whether this action requires the wiki not to be locked
	 * @return Bool
	 */",
 "/**
	 * Whether this action cannot be executed by a blocked user
	 * @return Bool
	 */",
 "/**
 * Special page which uses an HTMLForm to handle processing.  This is mostly a
 * clone of FormAction.  More special pages should be built this way; maybe this could be
 * a new structure for SpecialPages
 */",
 "/**
 * Shortcut to construct a special page which is unlisted by default
 * @ingroup SpecialPage
 */",
 "/**
 * Shortcut to construct an includable special  page
 * @ingroup SpecialPage
 */",
 "/**
	 * If the special page is a redirect, then get the Title object it redirects to.
	 * False otherwise.
	 *
	 * @param $par String Subpage string
	 * @return Title|false
	 */",
 "/**
	 * Return part of the request string for a special redirect page
	 * This allows passing, e.g. action=history to Special:Mypage, etc.
	 *
	 * @return String
	 */",
 "/**
 * Shortcut to construct a special page alias.
 * @ingroup SpecialPage
 */",
 "/**
 * ListAdmins --> ListUsers/sysop
 */",
 "/**
 * ListBots --> ListUsers/bot
 */",
 "/**
 * CreateAccount --> UserLogin/signup
 * @todo FIXME: This (and the rest of the login frontend) needs to die a horrible painful death
 */",
 "/**
 * Shortcut to construct a special page pointing to current user user\'s page.
 * @ingroup SpecialPage
 */",
 "/**
 * Shortcut to construct a special page pointing to current user talk page.
 * @ingroup SpecialPage
 */",
 "/**
 * Shortcut to construct a special page pointing to current user contributions.
 * @ingroup SpecialPage
 */",
 "/**
 * Redirect to Special:Listfiles?user=$wgUser
 */",
 "/**
 * Redirect from Special:PermanentLink/### to index.php?oldid=###
 */",
 "/**
	 * Fetch user page links and cache their existence
	 *
	 * @param $db DatabaseBase
	 * @param $res DatabaseResult
	 */",
 "/**
	 * @param $skin Skin
	 * @param  $result
	 * @return string
	 */",
 "/**
 * A querypage to show categories ordered in descending order by the pages in them
 *
 * @ingroup SpecialPage
 */",
 "/** Tahitian (Reo M??`ohi)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Sab
 * @author Sainte-Rose (on ty.wikipedia.org)
 * @author Tahitoa (on ty.wikipedia.org)
 */",
 "/** Portuguese (Portugu??s)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Alchimista
 * @author Andresilvazito
 * @author Capmo
 * @author Crazymadlover
 * @author Daemorris
 * @author Francisco Leandro
 * @author Giro720
 * @author GoEThe
 * @author Hamilton Abreu
 * @author Helder.wiki
 * @author Indech
 * @author Jens Liebenau
 * @author Jorge Morais
 * @author Kaganer
 * @author Leonardo.stabile
 * @author Lijealso
 * @author Luckas Blade
 * @author Lugusto
 * @author MCruz
 * @author MF-Warburg
 * @author Malafaya
 * @author Manuel Menezes de Sequeira
 * @author Masked Rogue
 * @author McDutchie
 * @author MetalBrasil
 * @author Minh Nguyen
 * @author Nuno Tavares
 * @author Paulo Juntas
 * @author Pedroca cerebral
 * @author Rafael Vargas
 * @author Rei-artur
 * @author Remember the dot
 * @author RmSilva
 * @author Rodrigo Calanca Nishino
 * @author SandroHc
 * @author Sir Lestaty de Lioncourt
 * @author S??rgio Ribeiro
 * @author Urhixidur
 * @author Villate
 * @author Waldir
 * @author Yves Marques Junqueira
 * @author ???????? ????????????????
 * @author 555
 */",
 "/** Lao (?????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Passawuth
 * @author Tuinui
 */",
 "/**
	 * This test has probably always been broken and use an invalid token
	 * Bug tracking brokenness is https://bugzilla.wikimedia.org/35646
	 *
	 * Root cause is https://gerrit.wikimedia.org/r/3434
	 * Which made the Block/Unblock API to actually verify the token
	 * previously always considered valid (bug 34212).
	 *
	 * @group Broken
	 */",
 "/**
 * @group Database
 */",
 "/** German (Deutsch)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author *Surak*
 * @author Als-Holder
 * @author ChrisiPK
 * @author Church of emacs
 * @author DaSch
 * @author Duesentrieb
 * @author Geitost
 * @author Giftpflanze
 * @author Imre
 * @author Inkowik
 * @author Jan Luca
 * @author Jens Liebenau
 * @author Jimmy Collins <jimmy.collins@web.de>
 * @author Kaganer
 * @author Kebap
 * @author Kghbln
 * @author Khaledelmansoury
 * @author Krinkle
 * @author Kwin
 * @author LWChris
 * @author Li-sung
 * @author Locos epraix
 * @author Lyzzy
 * @author MF-Warburg
 * @author Man77
 * @author Melancholie
 * @author Meno25
 * @author Merlissimo
 * @author Metalhead64
 * @author MichaelFrey
 * @author Mta??
 * @author Omnipaedista
 * @author Pill
 * @author Purodha
 * @author Raimond Spekking (Raymond) <raimond.spekking@gmail.com> since January 2007
 * @author Red Baron
 * @author Remember the dot
 * @author Revolus
 * @author Rillke
 * @author SVG
 * @author Saibo
 * @author Spacebirdy
 * @author Srhat
 * @author TMg
 * @author Tbleher
 * @author The Evil IP address
 * @author Tim Bartel (avatar) <wikipedistik@computerkultur.org> small changes
 * @author Tischbeinahe
 * @author UV
 * @author Umherirrender
 * @author W (aka Wuzur)
 * @author Wikifan
 * @author Xqt
 * @author Ziko
 * @author Zylbath
 * @author ???????? ????????????????
 * @author ???
 */",
 "/**
	 * Checks for database type & version.
	 * Will skip current test if DB does not support search.
	 */",
 "/**
	 * Insert a new page
	 *
	 * @param $pageName String: page name
	 * @param $text String: page\'s content
	 * @param $n Integer: unused
	 */",
 "/**
 * This class is not directly tested. Instead it is extended by SearchDbTest.
 * @group Search
 * @group Database
 */",
 "/** Crimean Turkish (Q??r??mtatarca)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Alessandro
 */",
 "/** @dataProvider providerPlural */",
 "/** Tests for MediaWiki languages/classes/LanguageGd.php */",
 "/**
	 * @param $context IContextSource
	 * @param $group null Unused
	 * @param $par string Parameter passed to the page
	 */",
 "/**
 * This class is used to get a list of active users. The ones with specials
 * rights (sysop, bureaucrat, developer) will have them displayed
 * next to their names.
 *
 * @ingroup SpecialPage
 */",
 "/**
	 * Constructor
	 */",
 "/**
	 * Show the special page
	 *
	 * @param $par Mixed: parameter passed to the page or null
	 */",
 "/**
 * @ingroup SpecialPage
 */",
 "/**
 * Core functions for deleteArchivedFiles.php
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @ingroup Maintenance
 */",
 "/**
	 * @param $_ string
	 * @return string
	 */",
 "/** Khmer (???????????????????????????)
 *
 * @ingroup Language
 *
 * @author Niklas Laxstr??m
 */",
 "/** Minangkabau (Baso Minangkabau)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Bennylin
 * @author Luthfi94
 * @author Naval Scene
 * @author Rahmatdenas
 * @author VoteITP
 */",
 "/**
	 * @dataProvider provideWfIsBadImageList
	 */",
 "/**
 * @group Database
 */",
 "/** Tigrinya (????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Blake
 * @author Node ue
 * @author Teak
 */",
 "/**
 * Class for handling updates to Sqlite databases.
 *
 * @ingroup Deployment
 * @since 1.17
 */",
 "/**
	 * Instanciates a FormOptions object to play with.	 
	 * FormOptions::add() is tested by the class FormOptionsInitializationTest
	 * so we assume the function is well tested already an use it to create
	 * the fixture.
	 */",
 "/** Generic helper */",
 "/**
	 * Reuse helpers above assertGuessBoolean assertGuessInt assertGuessString
	 */",
 "/**
	 * @expectedException MWException 
	 */",
 "/**
	 * @expectedException MWException 
	 */",
 "/**
 * Test class for FormOptions methods.
 * Generated by PHPUnit on 2011-02-28 at 20:46:27.
 *
 * Copyright ?? 2011, Antoine Musso
 *
 * @author Antoine Musso
 */",
 "/** Runa shimi (Runa shimi)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author AlimanRuna
 * @author Ebe123
 * @author Sylvain2803
 */",
 "/**
 * Sets the theme for ReCaptcha
 *
 * See http://code.google.com/apis/recaptcha/docs/customization.html
 */",
 "/**
 * Make sure the keys are defined.
 */",
 "/**
 * A query action to return messages from site message cache
 *
 * @ingroup API
 */",
 "/**
	 * @covers SpecialSearch::load
	 * @dataProvider provideSearchOptionsTests
	 * @param $requested Array Request parameters. For example array( \'ns5\' => true, \'ns6\' => true). NULL to use default options.
	 * @param $userOptions Array User options to test with. For example array(\'searchNs5\' => 1 );. NULL to use default options.
	 * @param $expectedProfile An expected search profile name
	 * @param $expectedNs Array Expected namespaces
	 */",
 "/**
	 * Helper to create a new User object with given options
	 * User remains anonymous though
	 */",
 "/**
 * Test class for SpecialSearch class
 * Copyright ?? 2012, Antoine Musso
 *
 * @author Antoine Musso
 * @group Database
 */",
 "/**
	 * Construct a new instance from configuration.
	 * 
	 * $config paramaters include:
	 *     \'dbServers\'   : Associative array of DB names to server configuration.
	 *                     Configuration is an associative array that includes:
	 *                     \'host\'        - DB server name
	 *                     \'dbname\'      - DB name
	 *                     \'type\'        - DB type (mysql,postgres,...)
	 *                     \'user\'        - DB user
	 *                     \'password\'    - DB user password
	 *                     \'tablePrefix\' - DB table prefix
	 *                     \'flags\'       - DB flags (see DatabaseBase)
	 *     \'dbsByBucket\' : Array of 1-16 consecutive integer keys, starting from 0,
	 *                     each having an odd-numbered list of DB names (peers) as values.
	 *                     Any DB named \'localDBMaster\' will automatically use the DB master
	 *                     settings for this wiki (without the need for a dbServers entry).
	 *     \'lockExpiry\'  : Lock timeout (seconds) for dropped connections. [optional]
	 *                     This tells the DB server how long to wait before assuming
	 *                     connection failure and releasing all the locks for a session.
	 *
	 * @param Array $config 
	 */",
 "/**
	 * @see LockManager::doLock()
	 */",
 "/**
	 * @see LockManager::doUnlock()
	 */",
 "/**
	 * Get a connection to a lock DB and acquire locks on $paths.
	 * This does not use GET_LOCK() per http://bugs.mysql.com/bug.php?id=1118.
	 *
	 * @param $lockDb string
	 * @param $paths Array
	 * @param $type integer LockManager::LOCK_EX or LockManager::LOCK_SH
	 * @return bool Resources able to be locked
	 * @throws DBError
	 */",
 "/**
	 * Attempt to acquire locks with the peers for a bucket.
	 * This should avoid throwing any exceptions.
	 *
	 * @param $bucket integer
	 * @param $paths Array List of resource keys to lock
	 * @param $type integer LockManager::LOCK_EX or LockManager::LOCK_SH
	 * @return bool|string One of (true, \'cantacquire\', \'dberrors\')
	 */",
 "/**
	 * Get (or reuse) a connection to a lock DB
	 *
	 * @param $lockDb string
	 * @return Database
	 * @throws DBError
	 */",
 "/**
	 * Do additional initialization for new lock DB connection
	 *
	 * @param $lockDb string
	 * @param $db DatabaseBase
	 * @return void
	 * @throws DBError
	 */",
 "/**
	 * Commit all changes to lock-active databases.
	 * This should avoid throwing any exceptions.
	 *
	 * @return Status
	 */",
 "/**
	 * Check if the last DB error for $lockDb indicates
	 * that a requested resource was locked by another process.
	 * This should avoid throwing any exceptions.
	 * 
	 * @param $lockDb string
	 * @return bool
	 */",
 "/**
	 * Checks if the DB has not recently had connection/query errors.
	 * This just avoids wasting time on doomed connection attempts.
	 * 
	 * @param $lockDb string
	 * @return bool
	 */",
 "/**
	 * Log a lock request failure to the cache
	 *
	 * @param $lockDb string
	 * @return bool Success
	 */",
 "/**
	 * Get a cache key for recent query misses for a DB
	 *
	 * @param $lockDb string
	 * @return string
	 */",
 "/**
	 * Get the bucket for resource path.
	 * This should avoid throwing any exceptions.
	 *
	 * @param $path string
	 * @return integer
	 */",
 "/**
	 * Make sure remaining locks get cleared for sanity
	 */",
 "/**
 * Version of LockManager based on using DB table locks.
 * This is meant for multi-wiki systems that may share files.
 * All locks are blocking, so it might be useful to set a small
 * lock-wait timeout via server config to curtail deadlocks.
 *
 * All lock requests for a resource, identified by a hash string, will map
 * to one bucket. Each bucket maps to one or several peer DBs, each on their
 * own server, all having the filelocks.sql tables (with row-level locking).
 * A majority of peer DBs must agree for a lock to be acquired.
 *
 * Caching is used to avoid hitting servers that are down.
 *
 * @ingroup LockManager
 * @since 1.19
 */",
 "/**
 * MySQL version of DBLockManager that supports shared locks.
 * All locks are non-blocking, which avoids deadlocks.
 *
 * @ingroup LockManager
 */",
 "/** Ossetic (????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Amikeco
 * @author Amire80
 * @author Bouron
 * @author HalanTul
 * @author ???????? ????????????????
 */",
 "/** Kannada (???????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Ashwath Mattur <ashwatham@gmail.com> http://en.wikipedia.org/wiki/User:Ashwatham
 * @author Dipin
 * @author HPN
 * @author Hari Prasad Nadig <hpnadig@gmail.com> http://en.wikipedia.org/wiki/User:Hpnadig
 * @author Kaganer
 * @author Ktkaushik
 * @author M G Harish
 * @author Mana
 * @author NamwikiTL
 * @author Nayvik
 * @author Nk rahul14
 * @author Omshivaprakash
 * @author Shankar
 * @author Shushruth
 * @author The Evil IP address
 * @author VASANTH S.N.
 * @author ???????? ????????????????
 */",
 "/**
	 * Grammatical transformations, needed for inflected languages
	 * Invoked by putting {{grammar:case|word}} in a message
	 *
	 * @param $word string
	 * @param $case string
	 * @return string
	 */",
 "/** Tyvan localization (???????? ??????)
 * From friends at tyvawiki.org
 *
 * @ingroup Language
 */",
 "/** Tests for MediaWiki languages/LanguageNl.php */",
 "/**
	 * @param $skin Skin
	 * @param $result
	 * @return string
	 */",
 "/**
 * A special page that lists unused templates
 *
 * @ingroup SpecialPage
 */",
 "/**
	 * @expectedException MWException
	 */",
 "/**
	 * @expectedException MWException
	 */",
 "/**
	 * @param $opts FormOptions
	 * @return array
	 */",
 "/**
	 * @return Title
	 */",
 "/**
 * This is to display changes made to all articles linked in an article.
 *
 * @ingroup SpecialPage
 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * @param $file
	 * @return bool
	 */",
 "/**
	 * @param $file
	 * @return bool
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * @param $name
	 * @param $value
	 * @return bool
	 */",
 "/**
	 * @param $params
	 * @return bool|string
	 */",
 "/**
	 * @param $str
	 * @return array|bool
	 */",
 "/**
	 * @param $params
	 * @return array
	 */",
 "/**
	 * @param $image File
	 * @param  $dstPath
	 * @param  $dstUrl
	 * @param  $params
	 * @param int $flags
	 * @return MediaTransformError|ThumbnailImage|TransformParameterError
	 */",
 "/**
	 * Cache an instance of DjVuImage in an Image object, return that instance
	 *
	 * @return DjVuImage
	 */",
 "/**
	 * Cache a document tree for the DjVu XML metadata
	 * @param $image File
	 * @param $gettext Boolean: DOCUMENT (Default: false)
	 */",
 "/**
 * Handler for DjVu images
 *
 * @ingroup Media
 */",
 "/**
	 * @param $context ResourceLoaderContext
	 * @return array|int|Mixed
	 */",
 "/**
	 * @param $context ResourceLoaderContext
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
 * Module for user preference customizations
 */",
 "/**
	 * Constructor
	 * @param $article Article object
	 */",
 "/**
	 * @param $name string
	 * @param $title Title
	 */",
 "/**
	 * Takes an arg, for future enhancement with different rights for
	 * different pages.
	 */",
 "/**
 *
 * Copyright 2004, Evan Prodromou <evan@wikitravel.org>.
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA
 *
 * @author Evan Prodromou <evan@wikitravel.org>
 * @file
 */",
 "/** Lower Silesian (Schl??sch)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Als-Holder
 * @author Jens Liebenau
 * @author Jonny84
 * @author Kaganer
 * @author Piotron
 * @author Przemub
 * @author Purodha
 * @author Schl??singer
 * @author Teutonius
 * @author The Evil IP address
 * @author Timpul
 * @author ??berlausitzer
 */",
 "/** Serbo-Croatian (Srpskohrvatski)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Kaganer
 * @author OC Ripper
 * @author ???????? ????????????????
 */",
 "/** Occitan (Occitan)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Boulaur
 * @author Cedric31
 * @author ChrisPtDe
 * @author Fryed-peach
 * @author Jfblanc
 * @author Kaganer
 * @author Spacebirdy
 * @author ?????????? ????????????????????
 * @author ???????? ????????????????
 */",
 "/** Bosnian (Bosanski)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Bugoslav
 * @author CERminator
 * @author Demicx
 * @author DzWiki
 * @author Edinwiki
 * @author Fulup
 * @author Kaganer
 * @author Kal-El
 * @author Malafaya
 * @author Palapa
 * @author Seha
 * @author Smooth O
 * @author ???????? ????????????????
 */",
 "/**
	 * Get the groups for the given user based on $wgAutopromote.
	 *
	 * @param $user User The user to get the groups for
	 * @return array Array of groups to promote to.
	 */",
 "/**
	 * Get the groups for the given user based on the given criteria.
	 *
	 * Does not return groups the user already belongs to or has once belonged.
	 *
	 * @param $user The user to get the groups for
	 * @param $event String key in $wgAutopromoteOnce (each one has groups/criteria)
	 *
	 * @return array Groups the user should be promoted to.
	 *
	 * @see $wgAutopromoteOnce
	 */",
 "/**
	 * Recursively check a condition.  Conditions are in the form
	 *   array( \'&\' or \'|\' or \'^\' or \'!\', cond1, cond2, ... )
	 * where cond1, cond2, ... are themselves conditions; *OR*
	 *   APCOND_EMAILCONFIRMED, *OR*
	 *   array( APCOND_EMAILCONFIRMED ), *OR*
	 *   array( APCOND_EDITCOUNT, number of edits ), *OR*
	 *   array( APCOND_AGE, seconds since registration ), *OR*
	 *   similar constructs defined by extensions.
	 * This function evaluates the former type recursively, and passes off to
	 * self::checkCondition for evaluation of the latter type.
	 *
	 * @param $cond Mixed: a condition, possibly containing other conditions
	 * @param $user User The user to check the conditions against
	 * @return bool Whether the condition is true
	 */",
 "/**
	 * As recCheckCondition, but *not* recursive.  The only valid conditions
	 * are those whose first element is APCOND_EMAILCONFIRMED/APCOND_EDITCOUNT/
	 * APCOND_AGE.  Other types will throw an exception if no extension evalu-
	 * ates them.
	 *
	 * @param $cond Array: A condition, which must not contain other conditions
	 * @param $user User The user to check the condition against
	 * @return bool Whether the condition is true for the user
	 */",
 "/**
 * This class checks if user can get extra rights
 * because of conditions specified in $wgAutopromote
 */",
 "/** Gilaki (??????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author AminSanaei
 * @author Varg
 * @author ??????
 */",
 "/** Kalmyk (????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Huuchin
 * @author ??????
 * @author ???????? ????????????????
 */",
 "/**
	 * @param $resultPageSet ApiPageSet
	 * @return
	 */",
 "/**
 * A query module to enumerate categories the set of pages belong to.
 *
 * @ingroup API
 */",
 "/**
	 * Runs upgrades of older databases and compares results with current schema
	 * @todo: currently only checks list of tables
	 */",
 "/**
 * @group sqlite
 * @group Database
 */",
 "/**
 * External Store tests
 */",
 "/** Samogitian (??emait????ka)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Hugo.arg
 * @author Kaganer
 * @author Reedy
 * @author Urhixidur
 * @author Zordsdavini
 * @author ???????? ????????????????
 */",
 "/**
  * Aliases from the fallback language \'lt\' to avoid breakage of links
  */",
 "/** Sicilian (Sicilianu)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Aushulz
 * @author Gmelfi
 * @author Kaganer
 * @author Melos
 * @author Omnipaedista
 * @author Santu
 * @author Sarvaturi
 * @author Tonyfroio
 * @author Urhixidur
 * @author ???????? ????????????????
 */",
 "/**
 * Query module to enumerate all deleted revisions.
 *
 * @ingroup API
 */",
 "/** Niuean (ko e vagahau Niu??)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Jose77
 * @author Rotemliss
 * @author Sioneholof
 */",
 "/** @dataProvider providerPlural */",
 "/** Tests for MediaWiki languages/classes/LanguageMk.php */",
 "/**
	 * Entry point : initialise variables and call subfunctions.
	 * @param $par String: becomes \"FOO\" when called like Special:Prefixindex/FOO (default null)
	 */",
 "/**
	* HTML for the top form
	* @param $namespace Integer: a namespace constant (default NS_MAIN).
	* @param $from String: dbKey we are starting listing at.
	*/",
 "/**
	 * @param $namespace Integer, default NS_MAIN
	 * @param $prefix String
	 * @param $from String: list all pages from this name (default FALSE)
	 */",
 "/**
 * Implements Special:Prefixindex
 *
 * @ingroup SpecialPage
 */",
 "/**
	 * Construct a new instance from configuration.
	 * 
	 * $config includes:
	 *     \'lockDirectory\' : Directory containing the lock files
	 *
	 * @param array $config
	 */",
 "/**
	 * Lock a single resource key
	 *
	 * @param $path string
	 * @param $type integer
	 * @return Status 
	 */",
 "/**
	 * Unlock a single resource key
	 * 
	 * @param $path string
	 * @param $type integer
	 * @return Status 
	 */",
 "/**
	 * Get the path to the lock file for a key
	 * @param $path string
	 * @return string
	 */",
 "/**
 * Simple version of LockManager based on using FS lock files.
 * All locks are non-blocking, which avoids deadlocks.
 *
 * This should work fine for small sites running off one server.
 * Do not use this with \'lockDirectory\' set to an NFS mount unless the
 * NFS client is at least version 2.6.12. Otherwise, the BSD flock()
 * locks will be ignored; see http://nfs.sourceforge.net/#section_d.
 *
 * @ingroup LockManager
 * @since 1.19
 */",
 "/**
	 * Format an XML element with given attributes and, optionally, text content.
	 * Element and attribute names are assumed to be ready for literal inclusion.
	 * Strings are assumed to not contain XML-illegal characters; special
	 * characters (<, >, &) are escaped but illegals are not touched.
	 *
	 * @param $element String: element name
	 * @param $attribs Array: Name=>value pairs. Values will be escaped.
	 * @param $contents String: NULL to make an open tag only; \'\' for a contentless closed tag (default)
	 * @param $allowShortTag Bool: whether \'\' in $contents will result in a contentless closed tag
	 * @return string
	 */",
 "/**
	 * Given an array of (\'attributename\' => \'value\'), it generates the code
	 * to set the XML attributes : attributename=\"value\".
	 * The values are passed to Sanitizer::encodeAttribute.
	 * Return null if no attributes given.
	 * @param $attribs Array of attributes for an XML element
	 */",
 "/**
	 * Format an XML element as with self::element(), but run text through the
	 * $wgContLang->normalize() validator first to ensure that no invalid UTF-8
	 * is passed.
	 *
	 * @param $element String:
	 * @param $attribs Array: Name=>value pairs. Values will be escaped.
	 * @param $contents String: NULL to make an open tag only; \'\' for a contentless closed tag (default)
	 * @return string
	 */",
 "/**
	 * This opens an XML element
	 *
	 * @param $element String name of the element
	 * @param $attribs array of attributes, see Xml::expandAttributes()
	 * @return string
	 */",
 "/**
	 * Shortcut to close an XML element
	 * @param $element String element name
	 * @return string
	 */",
 "/**
	 * Same as Xml::element(), but does not escape contents. Handy when the
	 * content you have is already valid xml.
	 *
	 * @param $element String element name
	 * @param $attribs array of attributes
	 * @param $contents String content of the element
	 * @return string
	 */",
 "/**
	 * Build a drop-down box for selecting a namespace
	 *
	 * @param $selected Mixed: Namespace which should be pre-selected
	 * @param $all Mixed: Value of an item denoting all namespaces, or null to omit
	 * @param $element_name String: value of the \"name\" attribute of the select tag
	 * @param $label String: optional label to add to the field
	 * @return string
	 * @deprecated since 1.19
	 */",
 "/**
	 * Create a date selector
	 *
	 * @param $selected Mixed: the month which should be selected, default \'\'
	 * @param $allmonths String: value of a special item denoting all month. Null to not include (default)
	 * @param $id String: Element identifier
	 * @return String: Html string containing the month selector
	 */",
 "/**
	 * @param $year Integer
	 * @param $month Integer
	 * @return string Formatted HTML
	 */",
 "/**
		 * If a bogus value is set, default to the content language.
		 * Otherwise, no default is selected and the user ends up
		 * with an Afrikaans interface since it\'s first in the list.
		 */",
 "/**
	 * Construct a language selector appropriate for use in a form or preferences
	 * 
	 * @param string $selected The language code of the selected language
	 * @param boolean $customisedOnly If true only languages which have some content are listed
	 * @param string $language The ISO code of the language to display the select list in (optional)
	 * @return array containing 2 items: label HTML and select list HTML
	 */",
 "/**
	 * Shortcut to make a span element
	 * @param $text String content of the element, will be escaped
	 * @param $class String class name of the span element
	 * @param $attribs array other attributes
	 * @return string
	 */",
 "/**
	 * Shortcut to make a specific element with a class attribute
	 * @param $text content of the element, will be escaped
	 * @param $class class name of the span element
	 * @param $tag string element name
	 * @param $attribs array other attributes
	 * @return string
	 */",
 "/**
	 * Convenience function to build an HTML text input field
	 * @param $name String value of the name attribute
	 * @param $size int value of the size attribute
	 * @param $value mixed value of the value attribute
	 * @param $attribs array other attributes
	 * @return string HTML
	 */",
 "/**
	 * Convenience function to build an HTML password input field
	 * @param $name string value of the name attribute
	 * @param $size int value of the size attribute
	 * @param $value mixed value of the value attribute
	 * @param $attribs array other attributes
	 * @return string HTML
	 */",
 "/**
	 * Internal function for use in checkboxes and radio buttons and such.
	 *
	 * @param $name string
	 * @param $present bool
	 *
	 * @return array
	 */",
 "/**
	 * Convenience function to build an HTML checkbox
	 * @param $name String value of the name attribute
	 * @param $checked Bool Whether the checkbox is checked or not
	 * @param $attribs Array other attributes
	 * @return string HTML
	 */",
 "/**
	 * Convenience function to build an HTML radio button
	 * @param $name String value of the name attribute
	 * @param $value String value of the value attribute
	 * @param $checked Bool Whether the checkbox is checked or not
	 * @param $attribs Array other attributes
	 * @return string HTML
	 */",
 "/**
	 * Convenience function to build an HTML form label
	 * @param $label String text of the label
	 * @param $id
	 * @param $attribs Array an attribute array.  This will usuall be
	 *     the same array as is passed to the corresponding input element,
	 *     so this function will cherry-pick appropriate attributes to
	 *     apply to the label as well; only class and title are applied.
	 * @return string HTML
	 */",
 "/**
	 * Convenience function to build an HTML text input field with a label
	 * @param $label String text of the label
	 * @param $name String value of the name attribute
	 * @param $id String id of the input
	 * @param $size Int|Bool value of the size attribute
	 * @param $value String|Bool value of the value attribute
	 * @param $attribs array other attributes
	 * @return string HTML
	 */",
 "/**
	 * Same as Xml::inputLabel() but return input and label in an array
	 *
	 * @param $label String
	 * @param $name String
	 * @param $id String
	 * @param $size Int|Bool
	 * @param $value String|Bool
	 * @param $attribs array
	 *
	 * @return array
	 */",
 "/**
	 * Convenience function to build an HTML checkbox with a label
	 *
	 * @param $label
	 * @param $name
	 * @param $id
	 * @param $checked bool
	 * @param $attribs array
	 *
	 * @return string HTML
	 */",
 "/**
	 * Convenience function to build an HTML radio button with a label
	 *
	 * @param $label
	 * @param $name
	 * @param $value
	 * @param $id
	 * @param $checked bool
	 * @param $attribs array
	 *
	 * @return string HTML
	 */",
 "/**
	 * Convenience function to build an HTML submit button
	 * @param $value String: label text for the button
	 * @param $attribs Array: optional custom attributes
	 * @return string HTML
	 */",
 "/**
	 * Convenience function to build an HTML drop-down list item.
	 * @param $text String: text for this item
	 * @param $value String: form submission value; if empty, use text
	 * @param $selected boolean: if true, will be the default selected item
	 * @param $attribs array: optional additional HTML attributes
	 * @return string HTML
	 */",
 "/**
	 * Build a drop-down box from a textual list.
	 *
	 * @param $name Mixed: Name and id for the drop-down
	 * @param $list Mixed: Correctly formatted text (newline delimited) to be used to generate the options
	 * @param $other Mixed: Text for the \"Other reasons\" option
	 * @param $selected Mixed: Option which should be pre-selected
	 * @param $class Mixed: CSS classes for the drop-down
	 * @param $tabindex Mixed: Value of the tabindex attribute
	 * @return string
	 */",
 "/**
	 * Shortcut for creating fieldsets.
	 *
	 * @param $legend Legend of the fieldset. If evaluates to false, legend is not added.
	 * @param $content Pre-escaped content for the fieldset. If false, only open fieldset is returned.
	 * @param $attribs array Any attributes to fieldset-element.
	 *
	 * @return string
	 */",
 "/**
	 * Shortcut for creating textareas.
	 *
	 * @param $name string The \'name\' for the textarea
	 * @param $content string Content for the textarea
	 * @param $cols int The number of columns for the textarea
	 * @param $rows int The number of rows for the textarea
	 * @param $attribs array Any other attributes for the textarea
	 *
	 * @return string
	 */",
 "/**
	 * Returns an escaped string suitable for inclusion in a string literal
	 * for JavaScript source code.
	 * Illegal control characters are assumed not to be present.
	 *
	 * @param $string String to escape
	 * @return String
	 */",
 "/**
	 * Encode a variable of unknown type to JavaScript.
	 * Arrays are converted to JS arrays, objects are converted to JS associative
	 * arrays (objects). So cast your PHP associative arrays to objects before
	 * passing them to here.
	 *
	 * @param $value
	 *
	 * @return string
	 */",
 "/**
	 * Create a call to a JavaScript function. The supplied arguments will be
	 * encoded using Xml::encodeJsVar().
	 *
	 * @param $name String The name of the function to call, or a JavaScript expression
	 *    which evaluates to a function object which is called.
	 * @param $args Array of arguments to pass to the function.
	 *
	 * @since 1.17
	 *
	 * @return string
	 */",
 "/**
	 * Check if a string is well-formed XML.
	 * Must include the surrounding tag.
	 *
	 * @param $text String: string to test.
	 * @return bool
	 *
	 * @todo Error position reporting return
	 */",
 "/**
	 * Check if a string is a well-formed XML fragment.
	 * Wraps fragment in an \<html\> bit and doctype, so it can be a fragment
	 * and can use HTML named entities.
	 *
	 * @param $text String:
	 * @return bool
	 */",
 "/**
	 * Replace \" > and < with their respective HTML entities ( &quot;,
	 * &gt;, &lt;)
	 *
	 * @param $in String: text that might contain HTML tags.
	 * @return string Escaped string
	 */",
 "/**
	* Generate a form (without the opening form element).
	* Output optionally includes a submit button.
	* @param $fields Array Associative array, key is message corresponding to a description for the field (colon is in the message), value is appropriate input.
	* @param $submitLabel String A message containing a label for the submit button.
	* @return string HTML form.
	*/",
 "/**
	 * Build a table of data
	 * @param $rows array An array of arrays of strings, each to be a row in a table
	 * @param $attribs array An array of attributes to apply to the table tag [optional]
	 * @param $headers array An array of strings to use as table headers [optional]
	 * @return string
	 */",
 "/**
	 * Build a row for a table
	 * @param $attribs array An array of attributes to apply to the tr tag
	 * @param $cells array An array of strings to put in <td>
	 * @return string
	 */",
 "/**
 * Module of static functions for generating XML
 */",
 "/**
	 * @param $default
	 */",
 "/**
	 * @param $name string
	 * @param $value
	 */",
 "/**
	 * @param $name
	 * @return array|null
	 */",
 "/**
	 * @param $name
	 * @param $value bool
	 */",
 "/**
	 * This accepts an array of form
	 * label => value
	 * label => ( label => value, label => value )
	 *
	 * @param  $options
	 */",
 "/**
	 * This accepts an array of form
	 * label => value
	 * label => ( label => value, label => value )
	 *
	 * @param  $options
	 * @param bool $default
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
 * A wrapper class which causes Xml::encodeJsVar() and Xml::encodeJsCall() to
 * interpret a given string as being a JavaScript expression, instead of string
 * data.
 *
 * Example:
 *
 *    Xml::encodeJsVar( new XmlJsCode( \'a + b\' ) );
 *
 * Returns \"a + b\".
 * @since 1.17
 */",
 "/** Norwegian Bokm??l (???Norsk (bokm??l)???)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Audun
 * @author Boivie
 * @author Brik
 * @author Byrial
 * @author Eirik
 * @author EivindJ
 * @author Event
 * @author Finnrind
 * @author Guaca
 * @author H92
 * @author Harald Khan
 * @author J??na ????runn
 * @author Kph
 * @author Kph-no
 * @author Laaknor
 * @author Najami
 * @author Nghtwlkr
 * @author Njardarlogar
 * @author Nsaa
 * @author Purodha
 * @author Qaqqalik
 * @author Samuelsen
 * @author Simny
 * @author Sjurhamre
 * @author Stigmj
 * @author Teak
 * @author ???????? ????????????????
 */",
 "/** Arabic (??????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author ;Hiba;1
 * @author Abanima
 * @author AhmadSherif
 * @author Aiman titi
 * @author Alexknight12
 * @author Ali1
 * @author Alnokta
 * @author Antime
 * @author Bassem JARKAS
 * @author Chaos
 * @author Ciphers
 * @author DrFO.Tn
 * @author Elmondo21st
 * @author Elmoro
 * @author Gharbeia
 * @author Hakeem
 * @author Histolo2
 * @author Houcinee1
 * @author Jak
 * @author Khaledhosny
 * @author Lord Anubis
 * @author MK
 * @author Majid Al-Dharrab
 * @author Malhargan
 * @author Menasim
 * @author Meno25
 * @author Mido
 * @author Mimouni
 * @author Mo7amedsalim
 * @author Obayd
 * @author OsamaK
 * @author Ouda
 * @author Oxydo
 * @author Rami.Awad
 * @author Riadismet
 * @author Samer
 * @author Sami Lab
 * @author Tarawneh
 * @author TheEgyptian
 * @author Uwe a
 * @author Zack wadghiri
 * @author Zanatos
 * @author ????????????05
 * @author ???????? ????????
 * @author ????????
 * @author ??????????
 * @author ???????? ??????????????
 * @author ????????
 * @author ???????? ??????????????
 * @author ????????
 * @author ????????????
 */",
 "/**
 * A list of date format preference keys which can be selected in user
 * preferences. New preference keys can be added, provided they are supported
 * by the language class\'s timeanddate(). Only the 5 keys listed below are
 * supported by the wikitext converter (DateFormatter.php).
 *
 * The special key \"default\" is an alias for either dmy or mdy depending on
 * $wgAmericanDates
 */",
 "/**
 * The date format to use for generated dates in the user interface.
 * This may be one of the above date preferences, or the special value
 * \"dmy or mdy\", which uses mdy if $wgAmericanDates is true, and dmy
 * if $wgAmericanDates is false.
 */",
 "/**
 * Associative array mapping old numeric date formats, which may still be
 * stored in user preferences, to the new string formats.
 */",
 "/**
 * These are formats for dates generated by MediaWiki (as opposed to the wikitext
 * DateFormatter). Documentation for the format string can be found in
 * Language.php, search for sprintfDate.
 *
 * This array is automatically inherited by all subclasses. Individual keys can be
 * overridden.
 */",
 "/**
 * Regular expression matching the \"link trail\", e.g. \"ed\" in [[Toast]]ed, as
 * the first group, and the remainder of the string as the second group. Modified to match
 * Arabic trails too.
 */",
 "/**
	 * Use ->setCaller( __METHOD__ ) to indicate which code is using this
	 * class. Only used in debugging output.
	 * @since 1.17
	 *
	 * @param $caller
	 */",
 "/**
	 * @param $title Title
	 */",
 "/**
	 * Set the link list to a given 2-d array
	 * First key is the namespace, second is the DB key, value arbitrary
	 *
	 * @param $array array
	 */",
 "/**
	 * Returns true if no pages have been added, false otherwise.
	 *
	 * @return bool
	 */",
 "/**
	 * Returns the size of the batch.
	 *
	 * @return int
	 */",
 "/**
	 * Do the query and add the results to the LinkCache object
	 *
	 * @return Array mapping PDBK to ID
	 */",
 "/**
	 * Do the query and add the results to a given LinkCache object
	 * Return an array mapping PDBK to ID
	 *
	 * @param $cache LinkCache
	 * @return Array remaining IDs
	 */",
 "/**
	 * Add a ResultWrapper containing IDs and titles to a LinkCache object.
	 * As normal, titles will go into the static Title cache field.
	 * This function *also* stores extra fields of the title used for link
	 * parsing to avoid extra DB queries.
	 *
	 * @param $cache LinkCache
	 * @param $res
	 * @return Array of remaining titles
	 */",
 "/**
	 * Perform the existence test query, return a ResultWrapper with page_id fields
	 * @return Bool|ResultWrapper
	 */",
 "/**
	 * Do (and cache) {{GENDER:...}} information for userpages in this LinkBatch
	 *
	 * @return bool whether the query was successful
	 */",
 "/**
	 * Construct a WHERE clause which will match all the given titles.
	 *
	 * @param $prefix String: the appropriate table\'s field name prefix (\'page\', \'pl\', etc)
	 * @param $db DatabaseBase object to use
	 * @return mixed string with SQL where clause fragment, or false if no items.
	 */",
 "/**
 * Class representing a list of titles
 * The execute() method checks them all for existence and adds them to a LinkCache object
 *
 * @ingroup Cache
 */",
 "/**
	 * @param $title Title
	 */",
 "/**
 * A special page that redirects to the URL of a given file
 *
 * @ingroup SpecialPage
 */",
 "/** Komi-Permyak (?????????? ????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Enye Lav
 * @author Yufereff
 */",
 "/**
	 * Get a WikiReference object for $wikiID
	 *
	 * @param $wikiID String: wiki\'d id (generally database name)
	 * @return WikiReference object or null if the wiki was not found
	 */",
 "/**
	 * Convenience to get the wiki\'s display name
	 *
	 * @todo We can give more info than just the wiki id!
	 * @param $wikiID String: wiki\'d id (generally database name)
	 * @return Wiki\'s name or $wiki_id if the wiki was not found
	 */",
 "/**
	 * Convenience to get a link to a user page on a foreign wiki
	 *
	 * @param $wikiID String: wiki\'d id (generally database name)
	 * @param $user String: user name (must be normalised before calling this function!)
	 * @param $text String: link\'s text; optional, default to \"User:$user\"
	 * @return String: HTML link or false if the wiki was not found
	 */",
 "/**
	 * Convenience to get a link to a page on a foreign wiki
	 *
	 * @param $wikiID String: wiki\'d id (generally database name)
	 * @param $page String: page name (must be normalised before calling this function!)
	 * @param $text String: link\'s text; optional, default to $page
	 * @return String: HTML link or false if the wiki was not found
	 */",
 "/**
	 * Convenience to get a url to a page on a foreign wiki
	 *
	 * @param $wikiID String: wiki\'d id (generally database name)
	 * @param $page String: page name (must be normalised before calling this function!)
	 * @return String: URL or false if the wiki was not found
	 */",
 "/**
 * Helper tools for dealing with other locally-hosted wikis
 */",
 "/**
	 * @return string
	 * @throws MWException
	 */",
 "/**
	 * Get the the URL in a way to de displayed to the user
	 * More or less Wikimedia specific
	 *
	 * @return String
	 */",
 "/**
	 * Helper function for getUrl()
	 *
	 * @todo FIXME: This may be generalized...
	 * @param $page String: page name (must be normalised before calling this function!)
	 * @return String: Url fragment
	 */",
 "/**
	 * Get a canonical (i.e. based on $wgCanonicalServer) URL to a page on this foreign wiki
	 *
	 * @param $page String: page name (must be normalised before calling this function!)
	 * @return String: Url
	 */",
 "/**
	 * Alias for getCanonicalUrl(), for backwards compatibility.
	 * @return String
	 */",
 "/**
	 * Get a URL based on $wgServer, like Title::getFullUrl() would produce
	 * when called locally on the wiki.
	 *
	 * @param $page String: page name (must be normalized before calling this function!)
	 * @return String: URL
	 */",
 "/**
 * Reference to a locally-hosted wiki
 */",
 "/**
 * Base class that store and restore the Language objects
 */",
 "/** Zhuang (Vahcuengh)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Bi??hai
 * @author Hakka
 */",
 "/**
 * API JSON output formatter
 * @ingroup API
 */",
 "/** MediaWiki version number */",
 "/** Name of the site. It must be changed in LocalSettings.php */",
 "/**
 * URL of the server.
 *
 * Example:
 * <code>
 * $wgServer = \'http://example.com\';
 * </code>
 *
 * This is usually detected correctly by MediaWiki. If MediaWiki detects the
 * wrong server, it will redirect incorrectly after you save a page. In that
 * case, set this variable to fix it.
 *
 * If you want to use protocol-relative URLs on your wiki, set this to a
 * protocol-relative URL like \'//example.com\' and set $wgCanonicalServer
 * to a fully qualified URL.
 */",
 "/**
 * Canonical URL of the server, to use in IRC feeds and notification e-mails.
 * Must be fully qualified, even if $wgServer is protocol-relative.
 *
 * Defaults to $wgServer, expanded to a fully qualified http:// URL if needed.
 */",
 "/**
 * The path we should point to.
 * It might be a virtual path in case with use apache mod_rewrite for example.
 *
 * This *needs* to be set correctly.
 *
 * Other paths will be set to defaults based on it unless they are directly
 * set in LocalSettings.php
 */",
 "/**
 * Whether to support URLs like index.php/Page_title These often break when PHP
 * is set up in CGI mode. PATH_INFO *may* be correct if cgi.fix_pathinfo is set,
 * but then again it may not; lighttpd converts incoming path data to lowercase
 * on systems with case-insensitive filesystems, and there have been reports of
 * problems on Apache as well.
 *
 * To be safe we\'ll continue to keep it off by default.
 *
 * Override this to false if $_SERVER[\'PATH_INFO\'] contains unexpectedly
 * incorrect garbage, or to true if it is really correct.
 *
 * The default $wgArticlePath will be set based on this value at runtime, but if
 * you have customized it, having this incorrectly set to true can cause
 * redirect loops when \"pretty URLs\" are used.
 */",
 "/**
 * The extension to append to script names by default. This can either be .php
 * or .php5.
 *
 * Some hosting providers use PHP 4 for *.php files, and PHP 5 for *.php5. This
 * variable is provided to support those providers.
 */",
 "/**
 * The URL path to index.php.
 *
 * Will default to \"{$wgScriptPath}/index{$wgScriptExtension}\" in Setup.php
 */",
 "/**
 * The URL path to redirect.php. This is a script that is used by the Nostalgia
 * skin.
 *
 * Will default to \"{$wgScriptPath}/redirect{$wgScriptExtension}\" in Setup.php
 */",
 "/**
 * The URL path to load.php.
 *
 * Defaults to \"{$wgScriptPath}/load{$wgScriptExtension}\".
 */",
 "/**
 * The URL path of the skins directory. Will default to \"{$wgScriptPath}/skins\" in Setup.php
 */",
 "/**
 * The URL path of the skins directory. Should not point to an external domain.
 * Defaults to \"{$wgScriptPath}/skins\".
 */",
 "/**
 * The URL path of the extensions directory.
 * Defaults to \"{$wgScriptPath}/extensions\".
 * @since 1.16
 */",
 "/**
 * Filesystem stylesheets directory. Will default to \"{$IP}/skins\" in Setup.php
 */",
 "/**
 * The URL path for primary article page views. This path should contain $1,
 * which is replaced by the article title.
 *
 * Will default to \"{$wgScript}/$1\" or \"{$wgScript}?title=$1\" in Setup.php,
 * depending on $wgUsePathInfo.
 */",
 "/**
 * The URL path for the images directory. Will default to \"{$wgScriptPath}/images\" in Setup.php
 */",
 "/**
 * The maximum age of temporary (incomplete) uploaded files
 */",
 "/**
 * The filesystem path of the images directory. Defaults to \"{$IP}/images\".
 */",
 "/**
 * The URL path of the wiki logo. The logo size should be 135x135 pixels.
 * Will default to \"{$wgStylePath}/common/images/wiki.png\" in Setup.php
 */",
 "/**
 * The URL path of the shortcut icon.
 */",
 "/**
 * The URL path of the icon for iPhone and iPod Touch web app bookmarks.
 * Defaults to no icon.
 */",
 "/**
 * The local filesystem path to a temporary directory. This is not required to
 * be web accessible.
 *
 * Will default to \"{$wgUploadDirectory}/tmp\" in Setup.php
 */",
 "/**
 * If set, this URL is added to the start of $wgUploadPath to form a complete
 * upload URL.
 */",
 "/**
 * To enable remote on-demand scaling, set this to the thumbnail base URL.
 * Full thumbnail URL will be like $wgUploadStashScalerBaseUrl/e/e6/Foo.jpg/123px-Foo.jpg
 * where \'e6\' are the first two characters of the MD5 hash of the file name.
 * If $wgUploadStashScalerBaseUrl is set to false, thumbs are rendered locally as needed.
 */",
 "/**
 * To set \'pretty\' URL paths for actions other than
 * plain page views, add to this array. For instance:
 *   \'edit\' => \"$wgScriptPath/edit/$1\"
 *
 * There must be an appropriate script or rewrite rule
 * in place to handle these URLs.
 */",
 "/** Uploads have to be specially set up to be secure */",
 "/** Allows to move images and other media files */",
 "/**
 * These are additional characters that should be replaced with \'-\' in file names
 */",
 "/**
 * @deprecated since 1.17 use $wgDeletedDirectory
 */",
 "/**
 * What directory to place deleted uploads in
 */",
 "/**
 * Set this to true if you use img_auth and want the user to see details on why access failed.
 */",
 "/**
 * If this is enabled, img_auth.php will not allow image access unless the wiki
 * is private. This improves security when image uploads are hosted on a
 * separate domain.
 */",
 "/**
 * File repository structures
 *
 * $wgLocalFileRepo is a single repository structure, and $wgForeignFileRepos is
 * an array of such structures. Each repository structure is an associative
 * array of properties configuring the repository.
 *
 * Properties required for all repos:
 *   - class            The class name for the repository. May come from the core or an extension.
 *                      The core repository classes are FileRepo, LocalRepo, ForeignDBRepo.
 *                      FSRepo is also supported for backwards compatibility.
 *
 *   - name             A unique name for the repository (but $wgLocalFileRepo should be \'local\').
 *                      The name should consist of alpha-numberic characters.
 *   - backend          A file backend name (see $wgFileBackends).
 *
 * For most core repos:
 *   - zones            Associative array of zone names that each map to an array with:
 *                          container : backend container name the zone is in
 *                          directory : root path within container for the zone
 *                      Zones default to using <repo name>-<zone> as the
 *                      container name and the container root as the zone directory.
 *   - url              Base public URL
 *   - hashLevels       The number of directory levels for hash-based division of files
 *   - thumbScriptUrl   The URL for thumb.php (optional, not recommended)
 *   - transformVia404  Whether to skip media file transformation on parse and rely on a 404
 *                      handler instead.
 *   - initialCapital   Equivalent to $wgCapitalLinks (or $wgCapitalLinkOverrides[NS_FILE],
 *                      determines whether filenames implicitly start with a capital letter.
 *                      The current implementation may give incorrect description page links
 *                      when the local $wgCapitalLinks and initialCapital are mismatched.
 *   - pathDisclosureProtection
 *                      May be \'paranoid\' to remove all parameters from error messages, \'none\' to
 *                      leave the paths in unchanged, or \'simple\' to replace paths with
 *                      placeholders. Default for LocalRepo is \'simple\'.
 *   - fileMode         This allows wikis to set the file mode when uploading/moving files. Default
 *                      is 0644.
 *   - directory        The local filesystem directory where public files are stored. Not used for
 *                      some remote repos.
 *   - thumbDir         The base thumbnail directory. Defaults to <directory>/thumb.
 *   - thumbUrl         The base thumbnail URL. Defaults to <url>/thumb.
 *
 *
 * These settings describe a foreign MediaWiki installation. They are optional, and will be ignored
 * for local repositories:
 *   - descBaseUrl       URL of image description pages, e.g. http://en.wikipedia.org/wiki/File:
 *   - scriptDirUrl      URL of the MediaWiki installation, equivalent to $wgScriptPath, e.g.
 *                       http://en.wikipedia.org/w
 *   - scriptExtension   Script extension of the MediaWiki installation, equivalent to
 *                       $wgScriptExtension, e.g. .php5 defaults to .php
 *
 *   - articleUrl        Equivalent to $wgArticlePath, e.g. http://en.wikipedia.org/wiki/$1
 *   - fetchDescription  Fetch the text of the remote file description page. Equivalent to
 *                      $wgFetchCommonsDescriptions.
 *
 * ForeignDBRepo:
 *   - dbType, dbServer, dbUser, dbPassword, dbName, dbFlags
 *                      equivalent to the corresponding member of $wgDBservers
 *   - tablePrefix       Table prefix, the foreign wiki\'s $wgDBprefix
 *   - hasSharedCache    True if the wiki\'s shared cache is accessible via the local $wgMemc
 *
 * ForeignAPIRepo:
 *   - apibase              Use for the foreign API\'s URL
 *   - apiThumbCacheExpiry  How long to locally cache thumbs for
 *
 * If you leave $wgLocalFileRepo set to false, Setup will fill in appropriate values.
 * Otherwise, set $wgLocalFileRepo to a repository structure as described above.
 * If you set $wgUseInstantCommons to true, it will add an entry for Commons.
 * If you set $wgForeignFileRepos to an array of repostory structures, those will
 * be searched after the local file repo.
 * Otherwise, you will only have access to local media files.
 *
 * @see Setup.php for an example usage and default initialization.
 */",
 "/** @see $wgLocalFileRepo */",
 "/**
 * Use Commons as a remote file repository. Essentially a wrapper, when this
 * is enabled $wgForeignFileRepos will point at Commons with a set of default
 * settings
 */",
 "/**
 * File backend structure configuration.
 * This is an array of file backend configuration arrays.
 * Each backend configuration has the following parameters:
 *     \'name\'        : A unique name for the backend
 *     \'class\'       : The file backend class to use
 *     \'wikiId\'      : A unique string that identifies the wiki (container prefix)
 *     \'lockManager\' : The name of a lock manager (see $wgLockManagers)
 * Additional parameters are specific to the class used.
 */",
 "/**
 * Array of configuration arrays for each lock manager.
 * Each backend configuration has the following parameters:
 *     \'name\'        : A unique name for the lock manger
 *     \'class\'       : The lock manger class to use
 * Additional parameters are specific to the class used.
 */",
 "/**
 * Show EXIF data, on by default if available.
 * Requires PHP\'s EXIF extension: http://www.php.net/manual/en/ref.exif.php
 *
 * NOTE FOR WINDOWS USERS:
 * To enable EXIF functions, add the following lines to the
 * \"Windows extensions\" section of php.ini:
 *
 * extension=extensions/php_mbstring.dll
 * extension=extensions/php_exif.dll
 */",
 "/**
 * If to automatically update the img_metadata field
 * if the metadata field is outdated but compatible with the current version.
 * Defaults to false.
 */",
 "/**
 * If you operate multiple wikis, you can define a shared upload path here.
 * Uploads to this wiki will NOT be put there - they will be put into
 * $wgUploadDirectory.
 * If $wgUseSharedUploads is set, the wiki will look in the shared repository if
 * no file of the given name is found in the local repository (for [[File:..]],
 * [[Media:..]] links). Thumbnails will also be looked for and generated in this
 * directory.
 *
 * Note that these configuration settings can now be defined on a per-
 * repository basis for an arbitrary number of file repositories, using the
 * $wgForeignFileRepos variable.
 */",
 "/** Full path on the web server where shared uploads can be found */",
 "/** Fetch commons image description pages and display them on the local wiki? */",
 "/** Path on the file system where shared uploads can be found. */",
 "/** DB name with metadata about shared directory. Set this to false if the uploads do not come from a wiki. */",
 "/** Optional table prefix used in database. */",
 "/** Cache shared metadata in memcached. Don\'t do this if the commons wiki is in a different memcached domain */",
 "/**
* Allow for upload to be copied from an URL. Requires Special:Upload?source=web
* The timeout for copy uploads is set by $wgHTTPTimeout.
*/",
 "/**
 * Allow asynchronous copy uploads.
 * This feature is experimental and broken as of r81612.
 */",
 "/**
 * Max size for uploads, in bytes. If not set to an array, applies to all
 * uploads. If set to an array, per upload type maximums can be set, using the
 * file and url keys. If the * key is set this value will be used as maximum
 * for non-specified types.
 *
 * For example:
 * $wgMaxUploadSize = array(
 *     \'*\' => 250 * 1024,
 *     \'url\' => 500 * 1024,
 * );
 * Sets the maximum for all uploads to 250 kB except for upload-by-url, which
 * will have a maximum of 500 kB.
 *
 */",
 "/**
 * Point the upload navigation link to an external URL
 * Useful if you want to use a shared repository by default
 * without disabling local uploads (use $wgEnableUploads = false for that)
 * e.g. $wgUploadNavigationUrl = \'http://commons.wikimedia.org/wiki/Special:Upload\';
 */",
 "/**
 * Point the upload link for missing files to an external URL, as with
 * $wgUploadNavigationUrl. The URL will get (?|&)wpDestFile=<filename>
 * appended to it as appropriate.
 */",
 "/**
 * Give a path here to use thumb.php for thumbnail generation on client request, instead of
 * generating them on render and outputting a static URL. This is necessary if some of your
 * apache servers don\'t have read/write access to the thumbnail path.
 *
 * Example:
 *   $wgThumbnailScriptPath = \"{$wgScriptPath}/thumb{$wgScriptExtension}\";
 */",
 "/**
 * Set this to false if you do not want MediaWiki to divide your images
 * directory into many subdirectories, for improved performance.
 *
 * It\'s almost always good to leave this enabled. In previous versions of
 * MediaWiki, some users set this to false to allow images to be added to the
 * wiki by simply copying them into $wgUploadDirectory and then running
 * maintenance/rebuildImages.php to register them in the database. This is no
 * longer recommended, use maintenance/importImages.php instead.
 *
 * Note that this variable may be ignored if $wgLocalFileRepo is set.
 */",
 "/**
 * Set the following to false especially if you have a set of files that need to
 * be accessible by all wikis, and you do not want to use the hash (path/a/aa/)
 * directory layout.
 */",
 "/**
 * Base URL for a repository wiki. Leave this blank if uploads are just stored
 * in a shared directory and not meant to be accessible through a separate wiki.
 * Otherwise the image description pages on the local wiki will link to the
 * image description page on this wiki.
 *
 * Please specify the namespace, as in the example below.
 */",
 "/**
 * This is the list of preferred extensions for uploading files. Uploading files
 * with extensions not in this list will trigger a warning.
 *
 * WARNING: If you add any OpenOffice or Microsoft Office file formats here,
 * such as odt or doc, and untrusted users are allowed to upload files, then
 * your wiki will be vulnerable to cross-site request forgery (CSRF).
 */",
 "/** Files with these extensions will never be allowed as uploads. */",
 "/**
 * Files with these mime types will never be allowed as uploads
 * if $wgVerifyMimeType is enabled.
 */",
 "/**
 * Allow Java archive uploads.
 * This is not recommended for public wikis since a maliciously-constructed
 * applet running on the same domain as the wiki can steal the user\'s cookies.
 */",
 "/**
 * This is a flag to determine whether or not to check file extensions on upload.
 *
 * WARNING: setting this to false is insecure for public wikis.
 */",
 "/**
 * If this is turned off, users may override the warning for files not covered
 * by $wgFileExtensions.
 *
 * WARNING: setting this to false is insecure for public wikis.
 */",
 "/**
 * Setting this to true will disable the upload system\'s checks for HTML/JavaScript.
 * THIS IS VERY DANGEROUS on a publicly editable site, so USE wgGroupPermissions
 * TO RESTRICT UPLOADING to only those that you trust
 */",
 "/** Warn if uploaded files are larger than this (in bytes), or false to disable*/",
 "/**
 * list of trusted media-types and mime types.
 * Use the MEDIATYPE_xxx constants to represent media types.
 * This list is used by File::isSafeFile
 *
 * Types not listed here will have a warning about unsafe content
 * displayed on the images description page. It would also be possible
 * to use this for further restrictions, like disabling direct
 * [[media:...]] links for non-trusted formats.
 */",
 "/**
 * Plugins for media file type handling.
 * Each entry in the array maps a MIME type to a class name
 */",
 "/**
 * Resizing can be done using PHP\'s internal image libraries or using
 * ImageMagick or another third-party converter, e.g. GraphicMagick.
 * These support more file formats than PHP, which only supports PNG,
 * GIF, JPG, XBM and WBMP.
 *
 * Use Image Magick instead of PHP builtin functions.
 */",
 "/** The convert command shipped with ImageMagick */",
 "/** The identify command shipped with ImageMagick */",
 "/** Sharpening parameter to ImageMagick */",
 "/** Reduction in linear dimensions below which sharpening will be enabled */",
 "/**
 * Temporary directory used for ImageMagick. The directory must exist. Leave
 * this set to false to let ImageMagick decide for itself.
 */",
 "/**
 * Use another resizing converter, e.g. GraphicMagick
 * %s will be replaced with the source path, %d with the destination
 * %w and %h will be replaced with the width and height.
 *
 * Example for GraphicMagick:
 * <code>
 * $wgCustomConvertCommand = \"gm convert %s -resize %wx%h %d\"
 * </code>
 *
 * Leave as false to skip this.
 */",
 "/**
 * Some tests and extensions use exiv2 to manipulate the EXIF metadata in some image formats.
 */",
 "/**
 * Scalable Vector Graphics (SVG) may be uploaded as images.
 * Since SVG support is not yet standard in browsers, it is
 * necessary to rasterize SVGs to PNG as a fallback format.
 *
 * An external program is required to perform this conversion.
 * If set to an array, the first item is a PHP callable and any further items
 * are passed as parameters after $srcPath, $dstPath, $width, $height
 */",
 "/** Pick a converter defined in $wgSVGConverters */",
 "/** If not in the executable PATH, specify the SVG converter path. */",
 "/** Don\'t scale a SVG larger than this */",
 "/** Don\'t read SVG metadata beyond this point.
 * Default is 1024*256 bytes */",
 "/**
 * MediaWiki will reject HTMLesque tags in uploaded files due to idiotic browsers which can\'t
 * perform basic stuff like MIME detection and which are vulnerable to further idiots uploading
 * crap files as images. When this directive is on, <title> will be allowed in files with
 * an \"image/svg+xml\" MIME type. You should leave this disabled if your web server is misconfigured
 * and doesn\'t send appropriate MIME types for SVG images.
 */",
 "/**
 * The maximum number of pixels a source image can have if it is to be scaled
 * down by a scaler that requires the full source image to be decompressed
 * and stored in decompressed form, before the thumbnail is generated.
 *
 * This provides a limit on memory usage for the decompression side of the
 * image scaler. The limit is used when scaling PNGs with any of the
 * built-in image scalers, such as ImageMagick or GD. It is ignored for
 * JPEGs with ImageMagick, and when using the VipsScaler extension.
 *
 * The default is 50 MB if decompressed to RGBA form, which corresponds to
 * 12.5 million pixels or 3500x3500.
 */",
 "/**
 * Force thumbnailing of animated GIFs above this size to a single
 * frame instead of an animated thumbnail.  As of MW 1.17 this limit
 * is checked against the total size of all frames in the animation.
 * It probably makes sense to keep this equal to $wgMaxImageArea.
 */",
 "/**
 * Browsers don\'t support TIFF inline generally...
 * For inline display, we need to convert to PNG or JPEG.
 * Note scaling should work with ImageMagick, but may not with GD scaling.
 *
 * Example:
 * <code>
 *  // PNG is lossless, but inefficient for photos
 *  $wgTiffThumbnailType = array( \'png\', \'image/png\' );
 *  // JPEG is good for photos, but has no transparency support. Bad for diagrams.
 *  $wgTiffThumbnailType = array( \'jpg\', \'image/jpeg\' );
 * </code>
 */",
 "/**
 * If rendered thumbnail files are older than this timestamp, they
 * will be rerendered on demand as if the file didn\'t already exist.
 * Update if there is some need to force thumbs and SVG rasterizations
 * to rerender, such as fixes to rendering bugs.
 */",
 "/**
 * If set, inline scaled images will still produce <img> tags ready for
 * output instead of showing an error message.
 *
 * This may be useful if errors are transitory, especially if the site
 * is configured to automatically render thumbnails on request.
 *
 * On the other hand, it may obscure error conditions from debugging.
 * Enable the debug log or the \'thumbnail\' log group to make sure errors
 * are logged to a file for review.
 */",
 "/**
 * Allow thumbnail rendering on page view. If this is false, a valid
 * thumbnail URL is still output, but no file will be created at
 * the target location. This may save some time if you have a
 * thumb.php or 404 handler set up which is faster than the regular
 * webserver(s).
 */",
 "/**
* Show thumbnails for old images on the image description page
*/",
 "/** Obsolete, always true, kept for compatibility with extensions */",
 "/**
 * If set to true, images that contain certain the exif orientation tag will
 * be rotated accordingly. If set to null, try to auto-detect whether a scaler
 * is available that can rotate.
 */",
 "/**
 * Internal name of virus scanner. This servers as a key to the
 * $wgAntivirusSetup array. Set this to NULL to disable virus scanning. If not
 * null, every file uploaded will be scanned for viruses.
 */",
 "/**
 * Configuration for different virus scanners. This an associative array of
 * associative arrays. It contains one setup array per known scanner type.
 * The entry is selected by $wgAntivirus, i.e.
 * valid values for $wgAntivirus are the keys defined in this array.
 *
 * The configuration array for each scanner contains the following keys:
 * \"command\", \"codemap\", \"messagepattern\":
 *
 * \"command\" is the full command to call the virus scanner - %f will be
 * replaced with the name of the file to scan. If not present, the filename
 * will be appended to the command. Note that this must be overwritten if the
 * scanner is not in the system path; in that case, plase set
 * $wgAntivirusSetup[$wgAntivirus][\'command\'] to the desired command with full
 * path.
 *
 * \"codemap\" is a mapping of exit code to return codes of the detectVirus
 * function in SpecialUpload.
 *   - An exit code mapped to AV_SCAN_FAILED causes the function to consider
 *     the scan to be failed. This will pass the file if $wgAntivirusRequired
 *     is not set.
 *   - An exit code mapped to AV_SCAN_ABORTED causes the function to consider
 *     the file to have an usupported format, which is probably imune to
 *     virusses. This causes the file to pass.
 *   - An exit code mapped to AV_NO_VIRUS will cause the file to pass, meaning
 *     no virus was found.
 *   - All other codes (like AV_VIRUS_FOUND) will cause the function to report
 *     a virus.
 *   - You may use \"*\" as a key in the array to catch all exit codes not mapped otherwise.
 *
 * \"messagepattern\" is a perl regular expression to extract the meaningful part of the scanners
 * output. The relevant part should be matched as group one (\1).
 * If not defined or the pattern does not match, the full message is shown to the user.
 */",
 "/** Determines if a failed virus scan (AV_SCAN_FAILED) will cause the file to be rejected. */",
 "/** Determines if the mime type of uploaded files should be checked */",
 "/** Sets the mime type definition file to use by MimeMagic.php. */",
 "/** Sets the mime type info file to use by MimeMagic.php. */",
 "/**
 * Switch for loading the FileInfo extension by PECL at runtime.
 * This should be used only if fileinfo is installed as a shared object
 * or a dynamic library.
 */",
 "/** Sets an external mime detector program. The command must print only
 * the mime type to standard output.
 * The name of the file to process will be appended to the command given here.
 * If not set or NULL, mime_content_type will be used if available.
 * Example:
 * <code>
 * #$wgMimeDetectorCommand = \"file -bi\"; # use external mime detector (Linux)
 * </code>
 */",
 "/**
 * Switch for trivial mime detection. Used by thumb.php to disable all fancy
 * things, because only a few types of images are needed and file extensions
 * can be trusted.
 */",
 "/**
 * Additional XML types we can allow via mime-detection.
 * array = ( \'rootElement\' => \'associatedMimeType\' )
 */",
 "/**
 * Limit images on image description pages to a user-selectable limit. In order
 * to reduce disk usage, limits can only be selected from a list.
 * The user preference is saved as an array offset in the database, by default
 * the offset is set with $wgDefaultUserOptions[\'imagesize\']. Make sure you
 * change it if you alter the array (see bug 8858).
 * This is the list of settings the user can choose from:
 */",
 "/**
 * Adjust thumbnails on image pages according to a user setting. In order to
 * reduce disk usage, the values can only be selected from a list. This is the
 * list of settings the user can choose from:
 */",
 "/**
 * Default parameters for the <gallery> tag
 */",
 "/**
 * Adjust width of upright images when parameter \'upright\' is used
 * This allows a nicer look for upright images without the need to fix the width
 * by hardcoded px in wiki sourcecode.
 */",
 "/**
 * Default value for chmoding of new directories.
 */",
 "/**
 * Shell command for the DJVU post processor
 * Default: pnmtopng, since ddjvu generates ppm output
 * Set this to false to output the ppm file directly.
 */",
 "/**
 * File extension for the DJVU post processor output
 */",
 "/**
 * @name   Email settings
 * @{
 */",
 "/**
 * Site admin email address.
 */",
 "/**
 * Password reminder email address.
 *
 * The address we should use as sender when a user is requesting his password.
 */",
 "/**
 * Password reminder name
 */",
 "/**
 * Dummy address which should be accepted during mail send action.
 * It might be necessary to adapt the address or to set it equal
 * to the $wgEmergencyContact address.
 */",
 "/**
 * Set to true to enable the e-mail basic features:
 * Password reminders, etc. If sending e-mail on your
 * server doesn\'t work, you might want to disable this.
 */",
 "/**
 * Set to true to enable user-to-user e-mail.
 * This can potentially be abused, as it\'s hard to track.
 */",
 "/**
 * Set to true to put the sending user\'s email in a Reply-To header
 * instead of From. ($wgEmergencyContact will be used as From.)
 *
 * Some mailers (eg sSMTP) set the SMTP envelope sender to the From value,
 * which can cause problems with SPF validation and leak recipient addressses
 * when bounces are sent to the sender.
 */",
 "/**
 * Minimum time, in hours, which must elapse between password reminder
 * emails for a given account. This is to prevent abuse by mail flooding.
 */",
 "/**
 * The time, in seconds, when an emailed temporary password expires.
 */",
 "/**
 * The time, in seconds, when an email confirmation email expires
 */",
 "/**
 * SMTP Mode
 * For using a direct (authenticated) SMTP server connection.
 * Default to false or fill an array :
 * <code>
 * \"host\" => \'SMTP domain\',
 * \"IDHost\" => \'domain for MessageID\',
 * \"port\" => \"25\",
 * \"auth\" => true/false,
 * \"username\" => user,
 * \"password\" => password
 * </code>
 */",
 "/**
 * Additional email parameters, will be passed as the last argument to mail() call.
 * If using safe_mode this has no effect
 */",
 "/**
 * True: from page editor if s/he opted-in. False: Enotif mails appear to come
 * from $wgEmergencyContact
 */",
 "/**
 * Require email authentication before sending mail to an email addres. This is
 * highly recommended. It prevents MediaWiki from being used as an open spam
 * relay.
 */",
 "/**
 * Allow users to enable email notification (\"enotif\") on watchlist changes.
 */",
 "/**
 * Allow users to enable email notification (\"enotif\") when someone edits their
 * user talk page.
 */",
 "/**
 * Set the Reply-to address in notifications to the editor\'s address, if user
 * allowed this in the preferences.
 */",
 "/**
 * Send notification mails on minor edits to watchlist pages. This is enabled
 * by default. Does not affect user talk notifications.
 */",
 "/**
 * Send a generic mail instead of a personalised mail for each user.  This
 * always uses UTC as the time zone, and doesn\'t include the username.
 *
 * For pages with many users watching, this can significantly reduce mail load.
 * Has no effect when using sendmail rather than SMTP.
 */",
 "/**
 * Maximum number of users to mail at once when using impersonal mail. Should
 * match the limit on your mail server.
 */",
 "/**
 * Send mails via the job queue. This can be useful to reduce the time it
 * takes to save a page that a lot of people are watching.
 */",
 "/**
 * Use real name instead of username in e-mail \"from\" field.
 */",
 "/**
 * Array of usernames who will be sent a notification email for every change
 * which occurs on a wiki. Users will not be notified of their own changes.
 */",
 "/** Database host name or IP address */",
 "/** Database port number (for PostgreSQL) */",
 "/** Name of the database */",
 "/** Database username */",
 "/** Database user\'s password */",
 "/** Database type */",
 "/** Separate username for maintenance tasks. Leave as null to use the default. */",
 "/** Separate password for maintenance tasks. Leave as null to use the default. */",
 "/**
 * Search type.
 * Leave as null to select the default search engine for the
 * selected database type (eg SearchMySQL), or set to a class
 * name to override to a custom search engine.
 */",
 "/** Table name prefix */",
 "/** MySQL table options to use during installation or update */",
 "/**
 * SQL Mode - default is turning off all modes, including strict, if set.
 * null can be used to skip the setting for performance reasons and assume
 * DBA has done his best job.
 * String override can be used for some additional fun :-)
 */",
 "/** Mediawiki schema */",
 "/** To override default SQLite data directory ($docroot/../data) */",
 "/**
 * Make all database connections secretly go to localhost. Fool the load balancer
 * thinking there is an arbitrarily large cluster of servers to connect to.
 * Useful for debugging.
 */",
 "/**
 * Shared database for multiple wikis. Commonly used for storing a user table
 * for single sign-on. The server for this database must be the same as for the
 * main database.
 *
 * For backwards compatibility the shared prefix is set to the same as the local
 * prefix, and the user table is listed in the default list of shared tables.
 * The user_properties table is also added so that users will continue to have their
 * preferences shared (preferences were stored in the user table prior to 1.16)
 *
 * $wgSharedTables may be customized with a list of tables to share in the shared
 * datbase. However it is advised to limit what tables you do share as many of
 * MediaWiki\'s tables may have side effects if you try to share them.
 * EXPERIMENTAL
 *
 * $wgSharedPrefix is the table prefix for the shared database. It defaults to
 * $wgDBprefix.
 */",
 "/** @see $wgSharedDB */",
 "/** @see $wgSharedDB */",
 "/**
 * Database load balancer
 * This is a two-dimensional array, an array of server info structures
 * Fields are:
 *   - host:        Host name
 *   - dbname:      Default database name
 *   - user:        DB user
 *   - password:    DB password
 *   - type:        \"mysql\" or \"postgres\"
 *   - load:        ratio of DB_SLAVE load, must be >=0, the sum of all loads must be >0
 *   - groupLoads:  array of load ratios, the key is the query group name. A query may belong
 *                  to several groups, the most specific group defined here is used.
 *
 *   - flags:       bit field
 *                  - DBO_DEFAULT -- turns on DBO_TRX only if !$wgCommandLineMode (recommended)
 *                  - DBO_DEBUG -- equivalent of $wgDebugDumpSql
 *                  - DBO_TRX -- wrap entire request in a transaction
 *                  - DBO_IGNORE -- ignore errors (not useful in LocalSettings.php)
 *                  - DBO_NOBUFFER -- turn off buffering (not useful in LocalSettings.php)
 *
 *   - max lag:     (optional) Maximum replication lag before a slave will taken out of rotation
 *   - max threads: (optional) Maximum number of running threads
 *
 *   These and any other user-defined properties will be assigned to the mLBInfo member
 *   variable of the Database object.
 *
 * Leave at false to use the single-server variables above. If you set this
 * variable, the single-server variables will generally be ignored (except
 * perhaps in some command-line scripts).
 *
 * The first server listed in this array (with key 0) will be the master. The
 * rest of the servers will be slaves. To prevent writes to your slaves due to
 * accidental misconfiguration or MediaWiki bugs, set read_only=1 on all your
 * slaves in my.cnf. You can set read_only mode at runtime using:
 *
 * <code>
 *     SET @@read_only=1;
 * </code>
 *
 * Since the effect of writing to a slave is so damaging and difficult to clean
 * up, we at Wikimedia set read_only=1 in my.cnf on all our DB servers, even
 * our masters, and then set read_only=0 on masters at runtime.
 */",
 "/**
 * Load balancer factory configuration
 * To set up a multi-master wiki farm, set the class here to something that
 * can return a LoadBalancer with an appropriate master on a call to getMainLB().
 * The class identified here is responsible for reading $wgDBservers,
 * $wgDBserver, etc., so overriding it may cause those globals to be ignored.
 *
 * The LBFactory_Multi class is provided for this purpose, please see
 * includes/db/LBFactory_Multi.php for configuration information.
 */",
 "/** How long to wait for a slave to catch up to the master */",
 "/** File to log database errors to */",
 "/** When to give an error message */",
 "/**
 * Scale load balancer polling time so that under overload conditions, the database server
 * receives a SHOW STATUS query at an average interval of this many microseconds
 */",
 "/** Set to true if using InnoDB tables */",
 "/**
 * Set to true to engage MySQL 4.1/5.0 charset-related features;
 * for now will just cause sending of \'SET NAMES=utf8\' on connect.
 *
 * WARNING: THIS IS EXPERIMENTAL!
 *
 * May break if you\'re not using the table defs from mysql5/tables.sql.
 * May break if you\'re upgrading an existing wiki if set differently.
 * Broken symptoms likely to include incorrect behavior with page titles,
 * usernames, comments etc containing non-ASCII characters.
 * Might also cause failures on the object cache and other things.
 *
 * Even correct usage may cause failures with Unicode supplementary
 * characters (those not in the Basic Multilingual Plane) unless MySQL
 * has enhanced their Unicode support.
 */",
 "/**
 * Other wikis on this site, can be administered from a single developer
 * account.
 * Array numeric key => database name
 */",
 "/**
 * If lag is higher than $wgSlaveLagWarning, show a warning in some special
 * pages (like watchlist).  If the lag is higher than $wgSlaveLagCritical,
 * show a more obvious warning.
 */",
 "/** @see $wgSlaveLagWarning */",
 "/**
 * Use old names for change_tags indices.
 */",
 "/**
 * We can also compress text stored in the \'text\' table. If this is set on, new
 * revisions will be compressed on page save if zlib support is available. Any
 * compressed revisions will be decompressed on load regardless of this setting
 * *but will not be readable at all* if zlib support is not available.
 */",
 "/**
 * External stores allow including content
 * from non database sources following URL links
 *
 * Short names of ExternalStore classes may be specified in an array here:
 * $wgExternalStores = array(\"http\",\"file\",\"custom\")...
 *
 * CAUTION: Access to database might lead to code execution
 */",
 "/**
 * An array of external mysql servers, e.g.
 * $wgExternalServers = array( \'cluster1\' => array( \'srv28\', \'srv29\', \'srv30\' ) );
 * Used by LBFactory_Simple, may be ignored if $wgLBFactoryConf is set to another class.
 */",
 "/**
 * The place to put new revisions, false to put them in the local text table.
 * Part of a URL, e.g. DB://cluster1
 *
 * Can be an array instead of a single string, to enable data distribution. Keys
 * must be consecutive integers, starting at zero. Example:
 *
 * $wgDefaultExternalStore = array( \'DB://cluster1\', \'DB://cluster2\' );
 *
 * @var array
 */",
 "/**
 * Revision text may be cached in $wgMemc to reduce load on external storage
 * servers and object extraction overhead for frequently-loaded revisions.
 *
 * Set to 0 to disable, or number of seconds before cache expiry.
 */",
 "/** Disable database-intensive features */",
 "/** Disable all query pages if miser mode is on, not just some */",
 "/** Number of rows to cache in \'querycache\' table when miser mode is on */",
 "/** Number of links to a page required before it is deemed \"wanted\" */",
 "/** Enable slow parser functions */",
 "/** Allow schema updates */",
 "/**
 * Do DELETE/INSERT for link updates instead of incremental
 */",
 "/**
 * Anti-lock flags - bitfield
 *   - ALF_PRELOAD_LINKS:
 *       Preload links during link update for save
 *   - ALF_PRELOAD_EXISTENCE:
 *       Preload cur_id during replaceLinkHolders
 *   - ALF_NO_LINK_LOCK:
 *       Don\'t use locking reads when updating the link table. This is
 *       necessary for wikis with a high edit rate for performance
 *       reasons, but may cause link table inconsistency
 *   - ALF_NO_BLOCK_LOCK:
 *       As for ALF_LINK_LOCK, this flag is a necessity for high-traffic
 *       wikis.
 */",
 "/**
 * Maximum article size in kilobytes
 */",
 "/**
 * The minimum amount of memory that MediaWiki \"needs\"; MediaWiki will try to
 * raise PHP\'s memory limit if it\'s below this amount.
 */",
 "/**
 * Directory for caching data in the local filesystem. Should not be accessible
 * from the web. Set this to false to not use any local caches.
 *
 * Note: if multiple wikis share the same localisation cache directory, they
 * must all have the same set of extensions. You can set a directory just for
 * the localisation cache using $wgLocalisationCacheConf[\'storeDirectory\'].
 */",
 "/**
 * Main cache type. This should be a cache with fast access, but it may have
 * limited space. By default, it is disabled, since the database is not fast
 * enough to make it worthwhile.
 *
 * The options are:
 *
 *   - CACHE_ANYTHING:   Use anything, as long as it works
 *   - CACHE_NONE:       Do not cache
 *   - CACHE_DB:         Store cache objects in the DB
 *   - CACHE_MEMCACHED:  MemCached, must specify servers in $wgMemCachedServers
 *   - CACHE_ACCEL:      APC, XCache or WinCache
 *   - CACHE_DBA:        Use PHP\'s DBA extension to store in a DBM-style
 *                       database. This is slow, and is not recommended for
 *                       anything other than debugging.
 *   - (other):          A string may be used which identifies a cache
 *                       configuration in $wgObjectCaches.
 *
 * @see $wgMessageCacheType, $wgParserCacheType
 */",
 "/**
 * The cache type for storing the contents of the MediaWiki namespace. This
 * cache is used for a small amount of data which is expensive to regenerate.
 *
 * For available types see $wgMainCacheType.
 */",
 "/**
 * The cache type for storing article HTML. This is used to store data which
 * is expensive to regenerate, and benefits from having plenty of storage space.
 *
 * For available types see $wgMainCacheType.
 */",
 "/**
 * Advanced object cache configuration.
 *
 * Use this to define the class names and constructor parameters which are used
 * for the various cache types. Custom cache types may be defined here and
 * referenced from $wgMainCacheType, $wgMessageCacheType or $wgParserCacheType.
 *
 * The format is an associative array where the key is a cache identifier, and
 * the value is an associative array of parameters. The \"class\" parameter is the
 * class name which will be used. Alternatively, a \"factory\" parameter may be
 * given, giving a callable function which will generate a suitable cache object.
 *
 * The other parameters are dependent on the class used.
 * - CACHE_DBA uses $wgTmpDirectory by default. The \'dir\' parameter let you
 *   overrides that.
 */",
 "/**
 * The expiry time for the parser cache, in seconds. The default is 86.4k
 * seconds, otherwise known as a day.
 */",
 "/**
 * Select which DBA handler <http://www.php.net/manual/en/dba.requirements.php> to use as CACHE_DBA backend
 */",
 "/**
 * Store sessions in MemCached. This can be useful to improve performance, or to
 * avoid the locking behaviour of PHP\'s default session handler, which tends to
 * prevent multiple requests for the same user from acting concurrently.
 */",
 "/**
 * This is used for setting php\'s session.save_handler. In practice, you will
 * almost never need to change this ever. Other options might be \'user\' or
 * \'session_mysql.\' Setting to null skips setting this entirely (which might be
 * useful if you\'re doing cross-application sessions, see bug 11381)
 */",
 "/** If enabled, will send MemCached debugging information to $wgDebugLogFile */",
 "/** The list of MemCached servers and port numbers */",
 "/**
 * Use persistent connections to MemCached, which are shared across multiple
 * requests.
 */",
 "/**
 * Read/write timeout for MemCached server communication, in microseconds.
 */",
 "/**
 * Set this to true to make a local copy of the message cache, for use in
 * addition to memcached. The files will be put in $wgCacheDirectory.
 */",
 "/**
 * Defines format of local cache
 * true - Serialized object
 * false - PHP source file (Warning - security risk)
 */",
 "/**
 * Instead of caching everything, keep track which messages are requested and
 * load only most used messages. This only makes sense if there is lots of
 * interface messages customised in the wiki (like hundreds in many languages).
 */",
 "/**
 * Localisation cache configuration. Associative array with keys:
 *     class:       The class to use. May be overridden by extensions.
 *
 *     store:       The location to store cache data. May be \'files\', \'db\' or
 *                  \'detect\'. If set to \"files\", data will be in CDB files. If set
 *                  to \"db\", data will be stored to the database. If set to
 *                  \"detect\", files will be used if $wgCacheDirectory is set,
 *                  otherwise the database will be used.
 *
 *     storeClass:  The class name for the underlying storage. If set to a class
 *                  name, it overrides the \"store\" setting.
 *
 *     storeDirectory:  If the store class puts its data in files, this is the
 *                      directory it will use. If this is false, $wgCacheDirectory
 *                      will be used.
 *
 *     manualRecache:   Set this to true to disable cache updates on web requests.
 *                      Use maintenance/rebuildLocalisationCache.php instead.
 */",
 "/** Allow client-side caching of pages */",
 "/**
 * Set this to current time to invalidate all prior cached pages. Affects both
 * client- and server-side caching.
 * You can get the current date on your server by using the command:
 *   date +%Y%m%d%H%M%S
 */",
 "/**
 * Bump this number when changing the global style sheets and JavaScript.
 * It should be appended in the query string of static CSS and JS includes,
 * to ensure that client-side caches do not keep obsolete copies of global
 * styles.
 */",
 "/**
 * This will cache static pages for non-logged-in users to reduce
 * database traffic on public sites.
 * Must set $wgShowIPinHeader = false
 * ResourceLoader requests to default language and skins are cached
 * as well as single module requests.
 */",
 "/**
 * Directory where the cached page will be saved.
 * Will default to \"{$wgUploadDirectory}/cache\" in Setup.php
 */",
 "/**
 * Depth of the subdirectory hierarchy to be created under
 * $wgFileCacheDirectory.  The subdirectories will be named based on
 * the MD5 hash of the title.  A value of 0 means all cache files will
 * be put directly into the main file cache directory.
 */",
 "/**
 * Keep parsed pages in a cache (objectcache table or memcached)
 * to speed up output of the same page viewed by another user with the
 * same options.
 *
 * This can provide a significant speedup for medium to large pages,
 * so you probably want to keep it on. Extensions that conflict with the
 * parser cache should disable the cache on a per-page basis instead.
 */",
 "/**
 * Append a configured value to the parser cache and the sitenotice key so
 * that they can be kept separate for some class of activity.
 */",
 "/**
 * If on, the sidebar navigation links are cached for users with the
 * current language set. This can save a touch of load on a busy site
 * by shaving off extra message lookups.
 *
 * However it is also fragile: changing the site configuration, or
 * having a variable $wgArticlePath, can produce broken links that
 * don\'t update as expected.
 */",
 "/**
 * Expiry time for the sidebar cache, in seconds
 */",
 "/**
 * When using the file cache, we can store the cached HTML gzipped to save disk
 * space. Pages will then also be served compressed to clients that support it.
 * THIS IS NOT COMPATIBLE with ob_gzhandler which is now enabled if supported in
 * the default LocalSettings.php! If you enable this, remove that setting first.
 *
 * Requires zlib support enabled in PHP.
 */",
 "/**
 * Whether MediaWiki should send an ETag header. Seems to cause
 * broken behavior with Squid 2.6, see bug 7098.
 */",
 "/** Clock skew or the one-second resolution of time() can occasionally cause cache
 * problems when the user requests two pages within a short period of time. This
 * variable adds a given number of seconds to vulnerable timestamps, thereby giving
 * a grace period.
 */",
 "/**
 * Invalidate various caches when LocalSettings.php changes. This is equivalent
 * to setting $wgCacheEpoch to the modification time of LocalSettings.php, as
 * was previously done in the default LocalSettings.php file.
 *
 * On high-traffic wikis, this should be set to false, to avoid the need to
 * check the file modification time, and to avoid the performance impact of
 * unnecessary cache invalidations.
 */",
 "/**
 * Enable/disable Squid.
 * See http://www.mediawiki.org/wiki/Manual:Squid_caching
 */",
 "/** If you run Squid3 with ESI support, enable this (default:false): */",
 "/** Send X-Vary-Options header for better caching (requires patched Squid) */",
 "/** Add X-Forwarded-Proto to the Vary and X-Vary-Options headers for API
 * requests and RSS/Atom feeds. Use this if you have an SSL termination setup
 * and need to split the cache between HTTP and HTTPS for API requests,
 * feed requests and HTTP redirect responses in order to prevent cache
 * pollution. This does not affect \'normal\' requests to index.php other than
 * HTTP redirects.
 */",
 "/**
 * Internal server name as known to Squid, if different. Example:
 * <code>
 * $wgInternalServer = \'http://yourinternal.tld:8000\';
 * </code>
 */",
 "/**
 * Cache timeout for the squid, will be sent as s-maxage (without ESI) or
 * Surrogate-Control (with ESI). Without ESI, you should strip out s-maxage in
 * the Squid config. 18000 seconds = 5 hours, more cache hits with 2678400 = 31
 * days
 */",
 "/**
 * Default maximum age for raw CSS/JS accesses
 */",
 "/**
 * List of proxy servers to purge on changes; default port is 80. Use IP addresses.
 *
 * When MediaWiki is running behind a proxy, it will trust X-Forwarded-For
 * headers sent/modified from these proxies when obtaining the remote IP address
 *
 * For a list of trusted servers which *aren\'t* purged, see $wgSquidServersNoPurge.
 */",
 "/**
 * As above, except these servers aren\'t purged on page changes; use to set a
 * list of trusted proxies, etc.
 */",
 "/** Maximum number of titles to purge in any one client operation */",
 "/**
 * HTCP multicast address. Set this to a multicast IP address to enable HTCP.
 *
 * Note that MediaWiki uses the old non-RFC compliant HTCP format, which was
 * present in the earliest Squid implementations of the protocol.
 */",
 "/**
 * HTCP multicast port.
 * @see $wgHTCPMulticastAddress
 */",
 "/**
 * HTCP multicast TTL.
 * @see $wgHTCPMulticastAddress
 */",
 "/** Should forwarded Private IPs be accepted? */",
 "/** Site language code, should be one of ./languages/Language(.*).php */",
 "/**
 * Some languages need different word forms, usually for different cases.
 * Used in Language::convertGrammar(). Example:
 *
 * <code>
 * $wgGrammarForms[\'en\'][\'genitive\'][\'car\'] = \'car\\\'s\';
 * </code>
 */",
 "/** Treat language links as magic connectors, not inline links */",
 "/** Hide interlanguage links from the sidebar */",
 "/** List of language names or overrides for default names in Names.php */",
 "/**
 * List of language codes that don\'t correspond to an actual language.
 * These codes are mostly leftoffs from renames, or other legacy things.
 * This array makes them not appear as a selectable language on the installer,
 * and excludes them when running the transstat.php script.
 */",
 "/**
 * Character set for use in the article edit box. Language-specific encodings
 * may be defined.
 *
 * This historic feature is one of the first that was added by former MediaWiki
 * team leader Brion Vibber, and is used to support the Esperanto x-system.
 */",
 "/**
 * Set this to true to replace Arabic presentation forms with their standard
 * forms in the U+0600-U+06FF block. This only works if $wgLanguageCode is
 * set to \"ar\".
 *
 * Note that pages with titles containing presentation forms will become
 * inaccessible, run maintenance/cleanupTitles.php to fix this.
 */",
 "/**
 * Set this to true to replace ZWJ-based chillu sequences in Malayalam text
 * with their Unicode 5.1 equivalents. This only works if $wgLanguageCode is
 * set to \"ml\". Note that some clients (even new clients as of 2010) do not
 * support these characters.
 *
 * If you enable this on an existing wiki, run maintenance/cleanupTitles.php to
 * fix any ZWJ sequences in existing page titles.
 */",
 "/**
 * Set this to always convert certain Unicode sequences to modern ones
 * regardless of the content language. This has a small performance
 * impact.
 *
 * See $wgFixArabicUnicode and $wgFixMalayalamUnicode for conversion
 * details.
 *
 * @since 1.17
 */",
 "/**
 * Set this to eg \'ISO-8859-1\' to perform character set conversion when
 * loading old revisions not marked with \"utf-8\" flag. Use this when
 * converting a wiki from MediaWiki 1.4 or earlier to UTF-8 without the
 * burdensome mass conversion of old text data.
 *
 * NOTE! This DOES NOT touch any fields other than old_text.Titles, comments,
 * user names, etc still must be converted en masse in the database before
 * continuing as a UTF-8 wiki.
 */",
 "/**
 * Browser Blacklist for unicode non compliant browsers. Contains a list of
 * regexps : \"/regexp/\"  matching problematic browsers. These browsers will
 * be served encoded unicode in the edit box instead of real unicode.
 */",
 "/**
 * If set to true, the MediaWiki 1.4 to 1.5 schema conversion will
 * create stub reference rows in the text table instead of copying
 * the full text of all current entries from \'cur\' to \'text\'.
 *
 * This will speed up the conversion step for large sites, but
 * requires that the cur table be kept around for those revisions
 * to remain viewable.
 *
 * maintenance/migrateCurStubs.php can be used to complete the
 * migration in the background once the wiki is back online.
 *
 * This option affects the updaters *only*. Any present cur stub
 * revisions will be readable at runtime regardless of this setting.
 */",
 "/**
 * Enable to allow rewriting dates in page text.
 * DOES NOT FORMAT CORRECTLY FOR MOST LANGUAGES.
 */",
 "/**
 * Enable dates like \'May 12\' instead of \'12 May\', this only takes effect if
 * the interface is set to English.
 */",
 "/**
 * For Hindi and Arabic use local numerals instead of Western style (0-9)
 * numerals in interface.
 */",
 "/**
 * Translation using MediaWiki: namespace.
 * Interface messages will be loaded from the database.
 */",
 "/**
 * Expiry time for the message cache key
 */",
 "/**
 * Maximum entry size in the message cache, in bytes
 */",
 "/** Whether to enable language variant conversion. */",
 "/** Whether to enable language variant conversion for links. */",
 "/** Whether to enable cononical language links in meta data. */",
 "/** Default variant code, if false, the default will be the language code */",
 "/**
 * Disabled variants array of language variant conversion. Example:
 * <code>
 *  $wgDisabledVariants[] = \'zh-mo\';
 *  $wgDisabledVariants[] = \'zh-my\';
 * </code>
 *
 * or:
 *
 * <code>
 *  $wgDisabledVariants = array(\'zh-mo\', \'zh-my\');
 * </code>
 */",
 "/**
 * Like $wgArticlePath, but on multi-variant wikis, this provides a
 * path format that describes which parts of the URL contain the
 * language variant.  For Example:
 *
 *   $wgLanguageCode = \'sr\';
 *   $wgVariantArticlePath = \'/$2/$1\';
 *   $wgArticlePath = \'/wiki/$1\';
 *
 * A link to /wiki/ would be redirected to /sr/????????????_????????????
 *
 * It is important that $wgArticlePath not overlap with possible values
 * of $wgVariantArticlePath.
 */",
 "/**
 * Show a bar of language selection links in the user login and user
 * registration forms; edit the \"loginlanguagelinks\" message to
 * customise these.
 */",
 "/**
 * When translating messages with wfMsg(), it is not always clear what should
 * be considered UI messages and what should be content messages.
 *
 * For example, for the English Wikipedia, there should be only one \'mainpage\',
 * so when getting the link for \'mainpage\', we should treat it as site content
 * and call wfMsgForContent(), but for rendering the text of the link, we call
 * wfMsg(). The code behaves this way by default. However, sites like the
 * Wikimedia Commons do offer different versions of \'mainpage\' and the like for
 * different languages. This array provides a way to override the default
 * behavior. For example, to allow language-specific main page and community
 * portal, set
 *
 * $wgForceUIMsgAsContentMsg = array( \'mainpage\', \'portal-url\' );
 */",
 "/**
 * Fake out the timezone that the server thinks it\'s in. This will be used for
 * date display and not for what\'s stored in the DB. Leave to null to retain
 * your server\'s OS-based timezone value.
 *
 * This variable is currently used only for signature formatting and for local
 * time/date parser variables ({{LOCALTIME}} etc.)
 *
 * Timezones can be translated by editing MediaWiki messages of type
 * timezone-nameinlowercase like timezone-utc.
 *
 * Examples:
 * <code>
 * $wgLocaltimezone = \'GMT\';
 * $wgLocaltimezone = \'PST8PDT\';
 * $wgLocaltimezone = \'Europe/Sweden\';
 * $wgLocaltimezone = \'CET\';
 * </code>
 */",
 "/**
 * Set an offset from UTC in minutes to use for the default timezone setting
 * for anonymous users and new user accounts.
 *
 * This setting is used for most date/time displays in the software, and is
 * overrideable in user preferences. It is *not* used for signature timestamps.
 *
 * By default, this will be set to match $wgLocaltimezone.
 */",
 "/**
 * If set to true, this will roll back a few bug fixes introduced in 1.19,
 * emulating the 1.18 behaviour, to avoid introducing bug 34832. In 1.19,
 * language variant conversion is disabled in interface messages. Setting this
 * to true re-enables it.
 *
 * This variable should be removed (implicitly false) in 1.20 or earlier.
 */",
 "/** The default Content-Type header. */",
 "/**
 * The content type used in script tags.  This is mostly going to be ignored if
 * $wgHtml5 is true, at least for actual HTML output, since HTML5 doesn\'t
 * require a MIME type for JavaScript or CSS (those are the default script and
 * style languages).
 */",
 "/**
 * The HTML document type.  Ignored if $wgHtml5 is true, since <!DOCTYPE html>
 * doesn\'t actually have a doctype part to put this variable\'s contents in.
 */",
 "/**
 * The URL of the document type declaration.  Ignored if $wgHtml5 is true,
 * since HTML5 has no DTD, and <!DOCTYPE html> doesn\'t actually have a DTD part
 * to put this variable\'s contents in.
 */",
 "/**
 * The default xmlns attribute.  Ignored if $wgHtml5 is true (or it\'s supposed
 * to be), since we don\'t currently support XHTML5, and in HTML5 (i.e., served
 * as text/html) the attribute has no effect, so why bother?
 */",
 "/**
 * Should we output an HTML5 doctype?  If false, use XHTML 1.0 Transitional
 * instead, and disable HTML5 features.  This may eventually be removed and set
 * to always true.  If it\'s true, a number of other settings will be irrelevant
 * and have no effect.
 */",
 "/**
 * Defines the value of the version attribute in the &lt;html&gt; tag, if any.
 * This is ignored if $wgHtml5 is false.  If $wgAllowRdfaAttributes and
 * $wgHtml5 are both true, and this evaluates to boolean false (like if it\'s
 * left at the default null value), it will be auto-initialized to the correct
 * value for RDFa+HTML5.  As such, you should have no reason to ever actually
 * set this to anything.
 */",
 "/**
 * Enabled RDFa attributes for use in wikitext.
 * NOTE: Interaction with HTML5 is somewhat underspecified.
 */",
 "/**
 * Enabled HTML5 microdata attributes for use in wikitext, if $wgHtml5 is also true.
 */",
 "/**
 * Cleanup as much presentational html like valign -> css vertical-align as we can
 */",
 "/**
 * Should we try to make our HTML output well-formed XML?  If set to false,
 * output will be a few bytes shorter, and the HTML will arguably be more
 * readable.  If set to true, life will be much easier for the authors of
 * screen-scraping bots, and the HTML will arguably be more readable.
 *
 * Setting this to false may omit quotation marks on some attributes, omit
 * slashes from some self-closing tags, omit some ending tags, etc., where
 * permitted by HTML5.  Setting it to true will not guarantee that all pages
 * will be well-formed, although non-well-formed pages should be rare and it\'s
 * a bug if you find one.  Conversely, setting it to false doesn\'t mean that
 * all XML-y constructs will be omitted, just that they might be.
 *
 * Because of compatibility with screen-scraping bots, and because it\'s
 * controversial, this is currently left to true by default.
 */",
 "/**
 * Permit other namespaces in addition to the w3.org default.
 * Use the prefix for the key and the namespace for the value. For
 * example:
 * $wgXhtmlNamespaces[\'svg\'] = \'http://www.w3.org/2000/svg\';
 * Normally we wouldn\'t have to define this in the root <html>
 * element, but IE needs it there in some circumstances.
 *
 * This is ignored if $wgHtml5 is true, for the same reason as
 * $wgXhtmlDefaultNamespace.
 */",
 "/**
 * Show IP address, for non-logged in users. It\'s necessary to switch this off
 * for some forms of caching.
 * Will disable file cache.
 */",
 "/**
 * Site notice shown at the top of each page
 *
 * MediaWiki:Sitenotice page, which will override this. You can also
 * provide a separate message for logged-out users using the
 * MediaWiki:Anonnotice page.
 */",
 "/**
 * A subtitle to add to the tagline, for skins that have it/
 */",
 "/**
 * If this is set, a \"donate\" link will appear in the sidebar. Set it to a URL.
 */",
 "/**
 * Validate the overall output using tidy and refuse
 * to display the page if it\'s not valid.
 */",
 "/**
 * Default skin, for new users and anonymous visitors. Registered users may
 * change this to any one of the other available skins in their preferences.
 * This has to be completely lowercase; see the \"skins\" directory for the list
 * of available skins.
 */",
 "/**
 * Specify the name of a skin that should not be presented in the list of
 * available skins.  Use for blacklisting a skin which you do not want to
 * remove from the .../skins/ directory
 */",
 "/** Array for more like $wgSkipSkin. */",
 "/**
 * Optionally, we can specify a stylesheet to use for media=\"handheld\".
 * This is recognized by some, but not all, handheld/mobile/PDA browsers.
 * If left empty, compliant handheld browsers won\'t pick up the skin
 * stylesheet, which is specified for \'screen\' media.
 *
 * Can be a complete URL, base-relative path, or $wgStylePath-relative path.
 * Try \'chick/main.css\' to apply the Chick styles to the MonoBook HTML.
 *
 * Will also be switched in when \'handheld=yes\' is added to the URL, like
 * the \'printable=yes\' mode for print media.
 */",
 "/**
 * If set, \'screen\' and \'handheld\' media specifiers for stylesheets are
 * transformed such that they apply to the iPhone/iPod Touch Mobile Safari,
 * which doesn\'t recognize \'handheld\' but does support media queries on its
 * screen size.
 *
 * Consider only using this if you have a *really good* handheld stylesheet,
 * as iPhone users won\'t have any way to disable it and use the \"grown-up\"
 * styles instead.
 */",
 "/**
 * Allow user Javascript page?
 * This enables a lot of neat customizations, but may
 * increase security risk to users and server load.
 */",
 "/**
 * Allow user Cascading Style Sheets (CSS)?
 * This enables a lot of neat customizations, but may
 * increase security risk to users and server load.
 */",
 "/**
 * Allow user-preferences implemented in CSS?
 * This allows users to customise the site appearance to a greater
 * degree; disabling it will improve page load times.
 */",
 "/** Use the site\'s Javascript page? */",
 "/** Use the site\'s Cascading Style Sheets (CSS)? */",
 "/**
 * Break out of framesets. This can be used to prevent clickjacking attacks,
 * or to prevent external sites from framing your site with ads.
 */",
 "/**
 * The X-Frame-Options header to send on pages sensitive to clickjacking
 * attacks, such as edit pages. This prevents those pages from being displayed
 * in a frame or iframe. The options are:
 *
 *   - \'DENY\': Do not allow framing. This is recommended for most wikis.
 *
 *   - \'SAMEORIGIN\': Allow framing by pages on the same domain. This can be used
 *         to allow framing within a trusted domain. This is insecure if there
 *         is a page on the same domain which allows framing of arbitrary URLs.
 *
 *   - false: Allow all framing. This opens up the wiki to XSS attacks and thus
 *         full compromise of local user accounts. Private wikis behind a
 *         corporate firewall are especially vulnerable. This is not
 *         recommended.
 *
 * For extra safety, set $wgBreakFrames = true, to prevent framing on all pages,
 * not just edit pages.
 */",
 "/**
 * Disable output compression (enabled by default if zlib is available)
 */",
 "/**
 * Should we allow a broader set of characters in id attributes, per HTML5?  If
 * not, use only HTML 4-compatible IDs.  This option is for testing -- when the
 * functionality is ready, it will be on by default with no option.
 *
 * Currently this appears to work fine in all browsers, but it\'s disabled by
 * default because it normalizes id\'s a bit too aggressively, breaking preexisting
 * content (particularly Cite).  See bug 27733, bug 27694, bug 27474.
 */",
 "/**
 * Abstract list of footer icons for skins in place of old copyrightico and poweredbyico code
 * You can add new icons to the built in copyright or poweredby, or you can create
 * a new block. Though note that you may need to add some custom css to get good styling
 * of new blocks in monobook. vector and modern should work without any special css.
 *
 * $wgFooterIcons itself is a key/value array.
 * The key is the name of a block that the icons will be wrapped in. The final id varies
 * by skin; Monobook and Vector will turn poweredby into f-poweredbyico while Modern
 * turns it into mw_poweredby.
 * The value is either key/value array of icons or a string.
 * In the key/value array the key may or may not be used by the skin but it can
 * be used to find the icon and unset it or change the icon if needed.
 * This is useful for disabling icons that are set by extensions.
 * The value should be either a string or an array. If it is a string it will be output
 * directly as html, however some skins may choose to ignore it. An array is the preferred format
 * for the icon, the following keys are used:
 *   src: An absolute url to the image to use for the icon, this is recommended
 *        but not required, however some skins will ignore icons without an image
 *   url: The url to use in the <a> arround the text or icon, if not set an <a> will not be outputted
 *   alt: This is the text form of the icon, it will be displayed without an image in
 *        skins like Modern or if src is not set, and will otherwise be used as
 *        the alt=\"\" for the image. This key is required.
 *   width and height: If the icon specified by src is not of the standard size
 *                     you can specify the size of image to use with these keys.
 *                     Otherwise they will default to the standard 88x31.
 */",
 "/**
 * Login / create account link behavior when it\'s possible for anonymous users to create an account
 * true = use a combined login / create account link
 * false = split login and create account into two separate links
 */",
 "/**
 * Search form behavior for Vector skin only
 * true = use an icon search button
 * false = use Go & Search buttons
 */",
 "/**
 * Watch and unwatch as an icon rather than a link for Vector skin only
 * true = use an icon watch/unwatch button
 * false = use watch/unwatch text link
 */",
 "/**
 * Display user edit counts in various prominent places.
 */",
 "/**
 * Better directionality support (bug 6100 and related).
 * Removed in 1.18, still kept here for LiquidThreads backwards compatibility.
 *
 * @deprecated since 1.18
 */",
 "/**
 * Some web hosts attempt to rewrite all responses with a 404 (not found)
 * status code, mangling or hiding MediaWiki\'s output. If you are using such a
 * host, you should start looking for a better one. While you\'re doing that,
 * set this to false to convert some of MediaWiki\'s 404 responses to 200 so
 * that the generated error pages can be seen.
 *
 * In cases where for technical reasons it is more important for MediaWiki to
 * send the correct status code than for the body to be transmitted intact,
 * this configuration variable is ignored.
 */",
 "/**
 * Client-side resource modules. Extensions should add their module definitions
 * here.
 *
 * Example:
 *   $wgResourceModules[\'ext.myExtension\'] = array(
 *      \'scripts\' => \'myExtension.js\',
 *      \'styles\' => \'myExtension.css\',
 *      \'dependencies\' => array( \'jquery.cookie\', \'jquery.tabIndex\' ),
 *      \'localBasePath\' => dirname( __FILE__ ),
 *      \'remoteExtPath\' => \'MyExtension\',
 *   );
 */",
 "/**
 * Extensions should register foreign module sources here. \'local\' is a
 * built-in source that is not in this array, but defined by
 * ResourceLoader::__construct() so that it cannot be unset.
 *
 * Example:
 *   $wgResourceLoaderSources[\'foo\'] = array(
 *       \'loadScript\' => \'http://example.org/w/load.php\',
 *       \'apiScript\' => \'http://example.org/w/api.php\'
 *   );
 */",
 "/**
 * Default \'remoteBasePath\' value for resource loader modules.
 * If not set, then $wgScriptPath will be used as a fallback.
 */",
 "/**
 * Maximum time in seconds to cache resources served by the resource loader
 */",
 "/**
 * The default debug mode (on/off) for of ResourceLoader requests. This will still
 * be overridden when the debug URL parameter is used.
 */",
 "/**
 * Enable embedding of certain resources using Edge Side Includes. This will
 * improve performance but only works if there is something in front of the
 * web server (e..g a Squid or Varnish server) configured to process the ESI.
 */",
 "/**
 * Put each statement on its own line when minifying JavaScript. This makes
 * debugging in non-debug mode a bit easier.
 */",
 "/**
 * Maximum line length when minifying JavaScript. This is not a hard maximum:
 * the minifier will try not to produce lines longer than this, but may be
 * forced to do so in certain cases.
 */",
 "/**
 * Whether to include the mediawiki.legacy JS library (old wikibits.js), and its
 * dependencies
 */",
 "/**
 * Whether to preload the mediawiki.util module as blocking module in the top queue.
 * Before MediaWiki 1.19, modules used to load slower/less asynchronous which allowed
 * modules to lack dependencies on \'popular\' modules that were likely loaded already.
 * This setting is to aid scripts during migration by providing mediawiki.util
 * unconditionally (which was the most commonly missed dependency).
 * It doesn\'t cover all missing dependencies obviously but should fix most of them.
 * This should be removed at some point after site/user scripts have been fixed.
 * Enable this if your wiki has a large amount of user/site scripts that are lacking
 * dependencies.
 */",
 "/**
 * Whether or not to assing configuration variables to the global window object.
 * If this is set to false, old code using deprecated variables like:
 * \" if ( window.wgRestrictionEdit ) ...\"
 * or:
 * \" if ( wgIsArticle ) ...\"
 * will no longer work and needs to use mw.config instead. For example:
 * \" if ( mw.config.exists(\'wgRestrictionEdit\') )\"
 * or
 * \" if ( mw.config.get(\'wgIsArticle\') )\".
 */",
 "/**
 * If set to a positive number, ResourceLoader will not generate URLs whose
 * query string is more than this many characters long, and will instead use
 * multiple requests with shorter query strings. This degrades performance,
 * but may be needed if your web server has a low (less than, say 1024)
 * query string length limit or a low value for suhosin.get.max_value_length
 * that you can\'t increase.
 *
 * If set to a negative number, ResourceLoader will assume there is no query
 * string length limit.
 */",
 "/**
 * If set to true, JavaScript modules loaded from wiki pages will be parsed prior
 * to minification to validate it.
 *
 * Parse errors will result in a JS exception being thrown during module load,
 * which avoids breaking other modules loaded in the same request.
 */",
 "/**
 * If set to true, statically-sourced (file-backed) JavaScript resources will
 * be parsed for validity before being bundled up into ResourceLoader modules.
 *
 * This can be helpful for development by providing better error messages in
 * default (non-debug) mode, but JavaScript parsing is slow and memory hungry
 * and may fail on large pre-bundled frameworks.
 */",
 "/**
 * If set to true, asynchronous loading of bottom-queue scripts in the <head>
 * will be enabled. This is an experimental feature that\'s supposed to make
 * JavaScript load faster.
 */",
 "/**
 * Name of the project namespace. If left set to false, $wgSitename will be
 * used instead.
 */",
 "/**
 * Name of the project talk namespace.
 *
 * Normally you can ignore this and it will be something like
 * $wgMetaNamespace . \"_talk\". In some languages, you may want to set this
 * manually for grammatical reasons.
 */",
 "/**
 * Same as above, but for namespaces with gender distinction.
 * Note: the default form for the namespace should also be set
 * using $wgExtraNamespaces for the same index.
 * @since 1.18
 */",
 "/**
 * Namespace aliases
 * These are alternate names for the primary localised namespace names, which
 * are defined by $wgExtraNamespaces and the language file. If a page is
 * requested with such a prefix, the request will be redirected to the primary
 * name.
 *
 * Set this to a map from namespace names to IDs.
 * Example:
 *    $wgNamespaceAliases = array(
 *        \'Wikipedian\' => NS_USER,
 *        \'Help\' => 100,
 *    );
 */",
 "/**
 * Allowed title characters -- regex character class
 * Don\'t change this unless you know what you\'re doing
 *
 * Problematic punctuation:
 *   -  []{}|#    Are needed for link syntax, never enable these
 *   -  <>        Causes problems with HTML escaping, don\'t use
 *   -  %         Enabled by default, minor problems with path to query rewrite rules, see below
 *   -  +         Enabled by default, but doesn\'t work with path to query rewrite rules, corrupted by apache
 *   -  ?         Enabled by default, but doesn\'t work with path to PATH_INFO rewrites
 *
 * All three of these punctuation problems can be avoided by using an alias, instead of a
 * rewrite rule of either variety.
 *
 * The problem with % is that when using a path to query rewrite rule, URLs are
 * double-unescaped: once by Apache\'s path conversion code, and again by PHP. So
 * %253F, for example, becomes \"?\". Our code does not double-escape to compensate
 * for this, indeed double escaping would break if the double-escaped title was
 * passed in the query string rather than the path. This is a minor security issue
 * because articles can be created such that they are hard to view or edit.
 *
 * In some rare cases you may wish to remove + for compatibility with old links.
 *
 * Theoretically 0x80-0x9F of ISO 8859-1 should be disallowed, but
 * this breaks interlanguage links
 */",
 "/**
 * The interwiki prefix of the current wiki, or false if it doesn\'t have one.
 */",
 "/**
 * Expiry time for cache of interwiki table
 */",
 "/** Interwiki caching settings.
	$wgInterwikiCache specifies path to constant database file
		This cdb database is generated by dumpInterwiki from maintenance
		and has such key formats:
			dbname:key - a simple key (e.g. enwiki:meta)
			_sitename:key - site-scope key (e.g. wiktionary:meta)
			__global:key - global-scope key (e.g. __global:meta)
			__sites:dbname - site mapping (e.g. __sites:enwiki)
		Sites mapping just specifies site name, other keys provide
			\"local url\" data layout.
	$wgInterwikiScopes specify number of domains to check for messages:
		1 - Just wiki(db)-level
		2 - wiki and global levels
		3 - site levels
	$wgInterwikiFallbackSite - if unable to resolve from cache
 */",
 "/**
 * If local interwikis are set up which allow redirects,
 * set this regexp to restrict URLs which will be displayed
 * as \'redirected from\' links.
 *
 * It might look something like this:
 * $wgRedirectSources = \'!^https?://[a-z-]+\.wikipedia\.org/!\';
 *
 * Leave at false to avoid displaying any incoming redirect markers.
 * This does not affect intra-wiki redirects, which don\'t change
 * the URL.
 */",
 "/**
 * Set this to false to avoid forcing the first letter of links to capitals.
 * WARNING: may break links! This makes links COMPLETELY case-sensitive. Links
 * appearing with a capital at the beginning of a sentence will *not* go to the
 * same place as links in the middle of a sentence using a lowercase initial.
 */",
 "/**
 * @since 1.16 - This can now be set per-namespace. Some special namespaces (such
 * as Special, see MWNamespace::$alwaysCapitalizedNamespaces for the full list) must be
 * true by default (and setting them has no effect), due to various things that
 * require them to be so. Also, since Talk namespaces need to directly mirror their
 * associated content namespaces, the values for those are ignored in favor of the
 * subject namespace\'s setting. Setting for NS_MEDIA is taken automatically from
 * NS_FILE.
 * EX: $wgCapitalLinkOverrides[ NS_FILE ] = false;
 */",
 "/** Which namespaces should support subpages?
 * See Language.php for a list of namespaces.
 */",
 "/**
 * Array of namespaces which can be deemed to contain valid \"content\", as far
 * as the site statistics are concerned. Useful if additional namespaces also
 * contain \"content\" which should be considered when generating a count of the
 * number of articles in the wiki.
 */",
 "/**
 * Max number of redirects to follow when resolving redirects.
 * 1 means only the first redirect is followed (default behavior).
 * 0 or less means no redirects are followed.
 */",
 "/**
 * Array of invalid page redirect targets.
 * Attempting to create a redirect to any of the pages in this array
 * will make the redirect fail.
 * Userlogout is hard-coded, so it does not need to be listed here.
 * (bug 10569) Disallow Mypage and Mytalk as well.
 *
 * As of now, this only checks special pages. Redirects to pages in
 * other namespaces cannot be invalidated by this variable.
 */",
 "/**
 * Parser configuration. Associative array with the following members:
 *
 *  class             The class name
 *
 *  preprocessorClass The preprocessor class. Two classes are currently available:
 *                    Preprocessor_Hash, which uses plain PHP arrays for tempoarary
 *                    storage, and Preprocessor_DOM, which uses the DOM module for
 *                    temporary storage. Preprocessor_DOM generally uses less memory;
 *                    the speed of the two is roughly the same.
 *
 *                    If this parameter is not given, it uses Preprocessor_DOM if the
 *                    DOM module is available, otherwise it uses Preprocessor_Hash.
 *
 * The entire associative array will be passed through to the constructor as
 * the first parameter. Note that only Setup.php can use this variable --
 * the configuration will change at runtime via $wgParser member functions, so
 * the contents of this variable will be out-of-date. The variable can only be
 * changed during LocalSettings.php, in particular, it can\'t be changed during
 * an extension setup function.
 */",
 "/** Maximum indent level of toc. */",
 "/**
 * A complexity limit on template expansion
 */",
 "/**
 * Maximum recursion depth for templates within templates.
 * The current parser adds two levels to the PHP call stack for each template,
 * and xdebug limits the call stack to 100 by default. So this should hopefully
 * stop the parser before it hits the xdebug limit.
 */",
 "/** @see $wgMaxTemplateDepth */",
 "/** The external URL protocols */",
 "/**
 * If true, removes (substitutes) templates in \"~~~~\" signatures.
 */",
 "/**  Whether to allow inline image pointing to other websites */",
 "/**
 * If the above is false, you can specify an exception here. Image URLs
 * that start with this string are then rendered, while all others are not.
 * You can use this to set up a trusted, simple repository of images.
 * You may also specify an array of strings to allow multiple sites
 *
 * Examples:
 * <code>
 * $wgAllowExternalImagesFrom = \'http://127.0.0.1/\';
 * $wgAllowExternalImagesFrom = array( \'http://127.0.0.1/\', \'http://example.com\' );
 * </code>
 */",
 "/** If $wgAllowExternalImages is false, you can allow an on-wiki
 * whitelist of regular expression fragments to match the image URL
 * against. If the image matches one of the regular expression fragments,
 * The image will be displayed.
 *
 * Set this to true to enable the on-wiki whitelist (MediaWiki:External image whitelist)
 * Or false to disable it
 */",
 "/**
 * A different approach to the above: simply allow the <img> tag to be used.
 * This allows you to specify alt text and other attributes, copy-paste HTML to
 * your wiki more easily, etc.  However, allowing external images in any manner
 * will allow anyone with editing rights to snoop on your visitors\' IP
 * addresses and so forth, if they wanted to, by inserting links to images on
 * sites they control.
 */",
 "/**
 * $wgUseTidy: use tidy to make sure HTML output is sane.
 * Tidy is a free tool that fixes broken HTML.
 * See http://www.w3.org/People/Raggett/tidy/
 *
 * - $wgTidyBin should be set to the path of the binary and
 * - $wgTidyConf to the path of the configuration file.
 * - $wgTidyOpts can include any number of parameters.
 * - $wgTidyInternal controls the use of the PECL extension or the
 *   libtidy (PHP >= 5) extension to use an in-process tidy library instead
 *   of spawning a separate program.
 *   Normally you shouldn\'t need to override the setting except for
 *   debugging. To install, use \'pear install tidy\' and add a line
 *   \'extension=tidy.so\' to php.ini.
 */",
 "/** @see $wgUseTidy */",
 "/** @see $wgUseTidy */",
 "/** @see $wgUseTidy */",
 "/** @see $wgUseTidy */",
 "/** @see $wgUseTidy */",
 "/**
 * Put tidy warnings in HTML comments
 * Only works for internal tidy.
 */",
 "/** Allow raw, unchecked HTML in <html>...</html> sections.
 * THIS IS VERY DANGEROUS on a publicly editable site, so USE wgGroupPermissions
 * TO RESTRICT EDITING to only those that you trust
 */",
 "/**
 * Set a default target for external links, e.g. _blank to pop up a new window
 */",
 "/**
 * If true, external URL links in wiki text will be given the
 * rel=\"nofollow\" attribute as a hint to search engines that
 * they should not be followed for ranking purposes as they
 * are user-supplied and thus subject to spamming.
 */",
 "/**
 * Namespaces in which $wgNoFollowLinks doesn\'t apply.
 * See Language.php for a list of namespaces.
 */",
 "/**
 * If this is set to an array of domains, external links to these domain names
 * (or any subdomains) will not be set to rel=\"nofollow\" regardless of the
 * value of $wgNoFollowLinks.  For instance:
 *
 * $wgNoFollowDomainExceptions = array( \'en.wikipedia.org\', \'wiktionary.org\' );
 *
 * This would add rel=\"nofollow\" to links to de.wikipedia.org, but not
 * en.wikipedia.org, wiktionary.org, en.wiktionary.org, us.en.wikipedia.org,
 * etc.
 */",
 "/**
 * Allow DISPLAYTITLE to change title display
 */",
 "/**
 * For consistency, restrict DISPLAYTITLE to titles that normalize to the same
 * canonical DB key.
 */",
 "/**
 * Maximum number of calls per parse to expensive parser functions such as
 * PAGESINCATEGORY.
 */",
 "/**
 * Preprocessor caching threshold
 * Setting it to \'false\' will disable the preprocessor cache.
 */",
 "/**
 * Enable interwiki transcluding.  Only when iw_trans=1.
 */",
 "/**
 * (see next option $wgGlobalDatabase).
 */",
 "/**
 * Method used to determine if a page in a content namespace should be counted
 * as a valid article.
 *
 * Redirect pages will never be counted as valid articles.
 *
 * This variable can have the following values:
 * - \'any\': all pages as considered as valid articles
 * - \'comma\': the page must contain a comma to be considered valid
 * - \'link\': the page must contain a [[wiki link]] to be considered valid
 * - null: the value will be set at run time depending on $wgUseCommaCount:
 *         if $wgUseCommaCount is false, it will be \'link\', if it is true
 *         it will be \'comma\'
 *
 * See also See http://www.mediawiki.org/wiki/Manual:Article_count
 *
 * Retroactively changing this variable will not affect the existing count,
 * to update it, you will need to run the maintenance/updateArticleCount.php
 * script.
 */",
 "/**
 * Backward compatibility setting, will set $wgArticleCountMethod if it is null.
 * @deprecated since 1.18; use $wgArticleCountMethod instead
 */",
 "/**
 * wgHitcounterUpdateFreq sets how often page counters should be updated, higher
 * values are easier on the database. A value of 1 causes the counters to be
 * updated on every hit, any higher value n cause them to update *on average*
 * every n hits. Should be set to either 1 or something largish, eg 1000, for
 * maximum efficiency.
 */",
 "/**
 * How many days user must be idle before he is considered inactive. Will affect
 * the number shown on Special:Statistics and Special:ActiveUsers special page.
 * You might want to leave this as the default value, to provide comparable
 * numbers between different wikis.
 */",
 "/** For compatibility with old installations set to false */",
 "/**
 * Specifies the minimal length of a user password. If set to 0, empty pass-
 * words are allowed.
 */",
 "/**
 * Whether to allow password resets (\"enter some identifying data, and we\'ll send an email
 * with a temporary password you can use to get back into the account\") identified by
 * various bits of data.  Setting all of these to false (or the whole variable to false)
 * has the effect of disabling password resets entirely
 */",
 "/**
 * Maximum number of Unicode characters in signature
 */",
 "/**
 * Maximum number of bytes in username. You want to run the maintenance
 * script ./maintenance/checkUsernames.php once you have changed this value.
 */",
 "/**
 * Array of usernames which may not be registered or logged in from
 * Maintenance scripts can still use these
 */",
 "/**
 * Settings added to this array will override the default globals for the user
 * preferences used by anonymous visitors and newly created accounts.
 * For instance, to disable section editing links:
 * $wgDefaultUserOptions [\'editsection\'] = 0;
 *
 */",
 "/**
 * Whether or not to allow and use real name fields.
 * @deprecated since 1.16, use $wgHiddenPrefs[] = \'realname\' below to disable real
 * names
 */",
 "/** An array of preferences to not show for the user */",
 "/**
 * Characters to prevent during new account creations.
 * This is used in a regular expression character class during
 * registration (regex metacharacters like / are escaped).
 */",
 "/**
 * Character used as a delimiter when testing for interwiki userrights
 * (In Special:UserRights, it is possible to modify users on different
 * databases if the delimiter is used, e.g. Someuser@enwiki).
 *
 * It is recommended that you have this delimiter in
 * $wgInvalidUsernameCharacters above, or you will not be able to
 * modify the user rights of those users via Special:UserRights
 */",
 "/**
 * Use some particular type of external authentication.  The specific
 * authentication module you use will normally require some extra settings to
 * be specified.
 *
 * null indicates no external authentication is to be used.  Otherwise,
 * $wgExternalAuthType must be the name of a non-abstract class that extends
 * ExternalUser.
 *
 * Core authentication modules can be found in includes/extauth/.
 */",
 "/**
 * Configuration for the external authentication.  This may include arbitrary
 * keys that depend on the authentication mechanism.  For instance,
 * authentication against another web app might require that the database login
 * info be provided.  Check the file where your auth mechanism is defined for
 * info on what to put here.
 */",
 "/**
 * When should we automatically create local accounts when external accounts
 * already exist, if using ExternalAuth?  Can have three values: \'never\',
 * \'login\', \'view\'.  \'view\' requires the external database to support cookies,
 * and implies \'login\'.
 *
 * TODO: Implement \'view\' (currently behaves like \'login\').
 */",
 "/**
 * Policies for how each preference is allowed to be changed, in the presence
 * of external authentication.  The keys are preference keys, e.g., \'password\'
 * or \'emailaddress\' (see Preferences.php et al.).  The value can be one of the
 * following:
 *
 * - local: Allow changes to this pref through the wiki interface but only
 * apply them locally (default).
 * - semiglobal: Allow changes through the wiki interface and try to apply them
 * to the foreign database, but continue on anyway if that fails.
 * - global: Allow changes through the wiki interface, but only let them go
 * through if they successfully update the foreign database.
 * - message: Allow no local changes for linked accounts; replace the change
 * form with a message provided by the auth plugin, telling the user how to
 * change the setting externally (maybe providing a link, etc.).  If the auth
 * plugin provides no message for this preference, hide it entirely.
 *
 * Accounts that are not linked to an external account are never affected by
 * this setting.  You may want to look at $wgHiddenPrefs instead.
 * $wgHiddenPrefs supersedes this option.
 *
 * TODO: Implement message, global.
 */",
 "/**
 * This is to let user authenticate using https when they come from http.
 * Based on an idea by George Herbert on wikitech-l:
 * http://lists.wikimedia.org/pipermail/wikitech-l/2010-October/050065.html
 * @since 1.17
 */",
 "/**
 * Number of seconds before autoblock entries expire. Default 86400 = 1 day.
 */",
 "/**
 * Set this to true to allow blocked users to edit their own user talk page.
 */",
 "/** Allow sysops to ban users from accessing Emailuser */",
 "/**
 * Limits on the possible sizes of range blocks.
 *
 * CIDR notation is hard to understand, it\'s easy to mistakenly assume that a
 * /1 is a small range and a /31 is a large range. Setting this to half the
 * number of bits avoids such errors.
 */",
 "/**
 * If true, blocked users will not be allowed to login. When using this with
 * a public wiki, the effect of logging out blocked users may actually be
 * avers: unless the user\'s address is also blocked (e.g. auto-block),
 * logging the user out will again allow reading and editing, just as for
 * anonymous visitors.
 */",
 "/**
 * Pages anonymous user may see as an array, e.g.
 *
 * <code>
 * $wgWhitelistRead = array ( \"Main Page\", \"Wikipedia:Help\");
 * </code>
 *
 * Special:Userlogin and Special:ChangePassword are always whitelisted.
 *
 * NOTE: This will only work if $wgGroupPermissions[\'*\'][\'read\'] is false --
 * see below. Otherwise, ALL pages are accessible, regardless of this setting.
 *
 * Also note that this will only protect _pages in the wiki_. Uploaded files
 * will remain readable. You can use img_auth.php to protect uploaded files,
 * see http://www.mediawiki.org/wiki/Manual:Image_Authorization
 */",
 "/**
 * Should editors be required to have a validated e-mail
 * address before being allowed to edit?
 */",
 "/**
 * Permission keys given to users in each group.
 * This is an array where the keys are all groups and each value is an
 * array of the format (right => boolean).
 *
 * The second format is used to support per-namespace permissions.
 * Note that this feature does not fully work for all permission types.
 *
 * All users are implicitly in the \'*\' group including anonymous visitors;
 * logged-in users are all implicitly in the \'user\' group. These will be
 * combined with the permissions of all groups that a given user is listed
 * in in the user_groups table.
 *
 * Note: Don\'t set $wgGroupPermissions = array(); unless you know what you\'re
 * doing! This will wipe all permissions, and may mean that your users are
 * unable to perform certain essential tasks or access new functionality
 * when new permissions are introduced and default grants established.
 *
 * Functionality to make pages inaccessible has not been extensively tested
 * for security. Use at your own risk!
 *
 * This replaces $wgWhitelistAccount and $wgWhitelistEdit
 */",
 "/**
 * Permission keys revoked from users in each group.
 * This acts the same way as wgGroupPermissions above, except that
 * if the user is in a group here, the permission will be removed from them.
 *
 * Improperly setting this could mean that your users will be unable to perform
 * certain essential tasks, so use at your own risk!
 */",
 "/**
 * Implicit groups, aren\'t shown on Special:Listusers or somewhere else
 */",
 "/**
 * A map of group names that the user is in, to group names that those users
 * are allowed to add or revoke.
 *
 * Setting the list of groups to add or revoke to true is equivalent to \"any group\".
 *
 * For example, to allow sysops to add themselves to the \"bot\" group:
 *
 *    $wgGroupsAddToSelf = array( \'sysop\' => array( \'bot\' ) );
 *
 * Implicit groups may be used for the source group, for instance:
 *
 *    $wgGroupsRemoveFromSelf = array( \'*\' => true );
 *
 * This allows users in the \'*\' group (i.e. any user) to remove themselves from
 * any group that they happen to be in.
 *
 */",
 "/** @see $wgGroupsAddToSelf */",
 "/**
 * Set of available actions that can be restricted via action=protect
 * You probably shouldn\'t change this.
 * Translated through restriction-* messages.
 * Title::getRestrictionTypes() will remove restrictions that are not
 * applicable to a specific title (create and upload)
 */",
 "/**
 * Rights which can be required for each protection level (via action=protect)
 *
 * You can add a new protection level that requires a specific
 * permission by manipulating this array. The ordering of elements
 * dictates the order on the protection form\'s lists.
 *
 *   - \'\' will be ignored (i.e. unprotected)
 *   - \'sysop\' is quietly rewritten to \'protect\' for backwards compatibility
 */",
 "/**
 * Set the minimum permissions required to edit pages in each
 * namespace.  If you list more than one permission, a user must
 * have all of them to edit pages in that namespace.
 *
 * Note: NS_MEDIAWIKI is implicitly restricted to editinterface.
 */",
 "/**
 * Pages in namespaces in this array can not be used as templates.
 * Elements must be numeric namespace ids.
 * Among other things, this may be useful to enforce read-restrictions
 * which may otherwise be bypassed by using the template machanism.
 */",
 "/**
 * Number of seconds an account is required to age before it\'s given the
 * implicit \'autoconfirm\' group membership. This can be used to limit
 * privileges of new accounts.
 *
 * Accounts created by earlier versions of the software may not have a
 * recorded creation date, and will always be considered to pass the age test.
 *
 * When left at 0, all registered accounts will pass.
 *
 * Example:
 * <code>
 *  $wgAutoConfirmAge = 600;     // ten minutes
 *  $wgAutoConfirmAge = 3600*24; // one day
 * </code>
 */",
 "/**
 * Number of edits an account requires before it is autoconfirmed.
 * Passing both this AND the time requirement is needed. Example:
 *
 * <code>
 * $wgAutoConfirmCount = 50;
 * </code>
 */",
 "/**
 * Automatically add a usergroup to any user who matches certain conditions.
 * The format is
 *   array( \'&\' or \'|\' or \'^\' or \'!\', cond1, cond2, ... )
 * where cond1, cond2, ... are themselves conditions; *OR*
 *   APCOND_EMAILCONFIRMED, *OR*
 *   array( APCOND_EMAILCONFIRMED ), *OR*
 *   array( APCOND_EDITCOUNT, number of edits ), *OR*
 *   array( APCOND_AGE, seconds since registration ), *OR*
 *   array( APCOND_INGROUPS, group1, group2, ... ), *OR*
 *   array( APCOND_ISIP, ip ), *OR*
 *   array( APCOND_IPINRANGE, range ), *OR*
 *   array( APCOND_AGE_FROM_EDIT, seconds since first edit ), *OR*
 *   array( APCOND_BLOCKED ), *OR*
 *   array( APCOND_ISBOT ), *OR*
 *   similar constructs defined by extensions.
 *
 * If $wgEmailAuthentication is off, APCOND_EMAILCONFIRMED will be true for any
 * user who has provided an e-mail address.
 */",
 "/**
 * Automatically add a usergroup to any user who matches certain conditions.
 * Does not add the user to the group again if it has been removed.
 * Also, does not remove the group if the user no longer meets the criteria.
 *
 * The format is
 *	array( event => criteria, ... )
 * where event is
 *	\'onEdit\' (when user edits) or \'onView\' (when user views the wiki)
 * and criteria has the same format as $wgAutopromote
 *
 * @see $wgAutopromote
 * @since 1.18
 */",
 "/**
 * Put user rights log entries for autopromotion in recent changes?
 * @since 1.18
 */",
 "/**
 * $wgAddGroups and $wgRemoveGroups can be used to give finer control over who
 * can assign which groups at Special:Userrights.  Example configuration:
 *
 * @code
 * // Bureaucrat can add any group
 * $wgAddGroups[\'bureaucrat\'] = true;
 * // Bureaucrats can only remove bots and sysops
 * $wgRemoveGroups[\'bureaucrat\'] = array( \'bot\', \'sysop\' );
 * // Sysops can make bots
 * $wgAddGroups[\'sysop\'] = array( \'bot\' );
 * // Sysops can disable other sysops in an emergency, and disable bots
 * $wgRemoveGroups[\'sysop\'] = array( \'sysop\', \'bot\' );
 * @endcode
 */",
 "/** @see $wgAddGroups */",
 "/**
 * A list of available rights, in addition to the ones defined by the core.
 * For extensions only.
 */",
 "/**
 * Optional to restrict deletion of pages with higher revision counts
 * to users with the \'bigdelete\' permission. (Default given to sysops.)
 */",
 "/** Number of accounts each IP address may create, 0 to disable.
 * Requires memcached */",
 "/**
 * Edits matching these regular expressions in body text
 * will be recognised as spam and rejected automatically.
 *
 * There\'s no administrator override on-wiki, so be careful what you set. :)
 * May be an array of regexes or a single string for backwards compatibility.
 *
 * See http://en.wikipedia.org/wiki/Regular_expression
 * Note that each regex needs a beginning/end delimiter, eg: # or /
 */",
 "/** Same as the above except for edit summaries */",
 "/**
 * Similarly you can get a function to do the job. The function will be given
 * the following args:
 *   - a Title object for the article the edit is made on
 *   - the text submitted in the textarea (wpTextbox1)
 *   - the section number.
 * The return should be boolean indicating whether the edit matched some evilness:
 *  - true : block it
 *  - false : let it through
 *
 * @deprecated since 1.17 Use hooks. See SpamBlacklist extension.
 * @var $wgFilterCallback bool|string|Closure
 */",
 "/**
 * Whether to use DNS blacklists in $wgDnsBlacklistUrls to check for open proxies
 * @since 1.16
 */",
 "/**
 * @deprecated since 1.17 Use $wgEnableDnsBlacklist instead, only kept for backward
 *  compatibility
 */",
 "/**
 * List of DNS blacklists to use, if $wgEnableDnsBlacklist is true. This is an
 * array of either a URL or an array with the URL and a key (should the blacklist
 * require a key). For example:
 * @code
 * $wgDnsBlacklistUrls = array(
 *   // String containing URL
 *   \'http.dnsbl.sorbs.net\',
 *   // Array with URL and key, for services that require a key
 *   array( \'dnsbl.httpbl.net\', \'mykey\' ),
 *   // Array with just the URL. While this works, it is recommended that you
 *   // just use a string as shown above
 *   array( \'opm.tornevall.org\' )
 * );
 * @endcode
 * @since 1.16
 */",
 "/**
 * @deprecated since 1.17 Use $wgDnsBlacklistUrls instead, only kept for backward
 *  compatibility
 */",
 "/**
 * Proxy whitelist, list of addresses that are assumed to be non-proxy despite
 * what the other methods might say.
 */",
 "/**
 * Simple rate limiter options to brake edit floods.  Maximum number actions
 * allowed in the given number of seconds; after that the violating client re-
 * ceives HTTP 500 error pages until the period elapses.
 *
 * array( 4, 60 ) for a maximum of 4 hits in 60 seconds.
 *
 * This option set is experimental and likely to change. Requires memcached.
 */",
 "/**
 * Set to a filename to log rate limiter hits.
 */",
 "/**
 * Array of IPs which should be excluded from rate limits.
 * This may be useful for whitelisting NAT gateways for conferences, etc.
 */",
 "/**
 * Log IP addresses in the recentchanges table; can be accessed only by
 * extensions (e.g. CheckUser) or a DB admin
 */",
 "/**
 * Integer defining default number of entries to show on
 * special pages which are query-pages such as Special:Whatlinkshere.
 */",
 "/**
 * Limit password attempts to X attempts per Y seconds per IP per account.
 * Requires memcached.
 */",
 "/**
 * If you enable this, every editor\'s IP address will be scanned for open HTTP
 * proxies.
 *
 * Don\'t enable this. Many sysops will report \"hostile TCP port scans\" to your
 * ISP and ask for your server to be shut down.
 *
 * You have been warned.
 */",
 "/** Port we want to scan for a proxy */",
 "/** Script used to scan */",
 "/** */",
 "/** This should always be customised in LocalSettings.php */",
 "/** big list of banned IP addresses, in the keys not the values */",
 "/** deprecated */",
 "/**
 * Default cookie expiration time. Setting to 0 makes all cookies session-only.
 */",
 "/**
 * Set to set an explicit domain on the login cookies eg, \"justthis.domain.org\"
 * or \".any.subdomain.net\"
 */",
 "/**
 * Set this variable if you want to restrict cookies to a certain path within
 * the domain specified by $wgCookieDomain.
 */",
 "/**
 * Whether the \"secure\" flag should be set on the cookie. This can be:
 *   - true:      Set secure flag
 *   - false:     Don\'t set secure flag
 *   - \"detect\":  Set the secure flag if $wgServer is set to an HTTPS URL
 */",
 "/**
 * By default, MediaWiki checks if the client supports cookies during the
 * login process, so that it can display an informative error message if
 * cookies are disabled. Set this to true if you want to disable this cookie
 * check.
 */",
 "/**
 * Cookies generated by MediaWiki have names starting with this prefix. Set it
 * to a string to use a custom prefix. Setting it to false causes the database
 * name to be used as a prefix.
 */",
 "/**
 * Set authentication cookies to HttpOnly to prevent access by JavaScript,
 * in browsers that support this feature. This can mitigates some classes of
 * XSS attack.
 */",
 "/**
 * If the requesting browser matches a regex in this blacklist, we won\'t
 * send it cookies with HttpOnly mode, even if $wgCookieHttpOnly is on.
 */",
 "/** A list of cookies that vary the cache (for use by extensions) */",
 "/** Override to customise the session name */",
 "/**
 * To use inline TeX, you need to compile \'texvc\' (in the \'math\' subdirectory of
 * the MediaWiki package and have latex, dvips, gs (ghostscript), andconvert
 * (ImageMagick) installed and available in the PATH.
 * Please see math/README for more information.
 */",
 "/**
 * Filename for debug logging. See http://www.mediawiki.org/wiki/How_to_debug
 * The debug log file should be not be publicly accessible if it is used, as it
 * may contain private data.
 */",
 "/**
 * Prefix for debug log lines
 */",
 "/**
 * If true, instead of redirecting, show a page with a link to the redirect
 * destination. This allows for the inspection of PHP error messages, and easy
 * resubmission of form data. For developer use only.
 */",
 "/**
 * If true, log debugging data from action=raw and load.php.
 * This is normally false to avoid overlapping debug entries due to gen=css and
 * gen=js requests.
 */",
 "/**
 * Send debug data to an HTML comment in the output.
 *
 * This may occasionally be useful when supporting a non-technical end-user. It\'s
 * more secure than exposing the debug log file to the web, since the output only
 * contains private data for the current user. But it\'s not ideal for development
 * use since data is lost on fatal errors and redirects.
 */",
 "/**
 * Write SQL queries to the debug log
 */",
 "/**
 * Set to an array of log group keys to filenames.
 * If set, wfDebugLog() output for that group will go to that file instead
 * of the regular $wgDebugLogFile. Useful for enabling selective logging
 * in production.
 */",
 "/**
 * Display debug data at the bottom of the main content area.
 *
 * Useful for developers and technical users trying to working on a closed wiki.
 */",
 "/**
 * Prefix debug messages with relative timestamp. Very-poor man\'s profiler.
 * Since 1.19 also includes memory usage.
 */",
 "/**
 * Print HTTP headers for every request in the debug information.
 */",
 "/**
 * Show the contents of $wgHooks in Special:Version
 */",
 "/**
 * Whether to show \"we\'re sorry, but there has been a database error\" pages.
 * Displaying errors aids in debugging, but may display information useful
 * to an attacker.
 */",
 "/**
 * If set to true, uncaught exceptions will print a complete stack trace
 * to output. This should only be used for debugging, as it may reveal
 * private information in function parameters due to PHP\'s backtrace
 * formatting.
 */",
 "/**
 * If true, show a backtrace for database errors
 */",
 "/**
 * Expose backend server host names through the API and various HTML comments
 */",
 "/**
 * If set to true MediaWiki will throw notices for some possible error
 * conditions and for deprecated functions.
 */",
 "/**
 * Release limitation to wfDeprecated warnings, if set to a release number
 * development warnings will not be generated for deprecations added in releases
 * after the limit.
 */",
 "/** Only record profiling info for pages that took longer than this */",
 "/** Don\'t put non-profiling info into log file */",
 "/**
 * Log sums from profiling into \"profiling\" table in db.
 *
 * You have to create a \'profiling\' table in your database before using
 * this feature, see maintenance/archives/patch-profiling.sql
 *
 * To enable profiling, edit StartProfiler.php
 */",
 "/** If true, print a raw call tree instead of per-function report */",
 "/** Should application server host be put into profiling table */",
 "/**
 * Host for UDP profiler.
 *
 * The host should be running a daemon which can be obtained from MediaWiki
 * Subversion at: http://svn.wikimedia.org/svnroot/mediawiki/trunk/udpprofile
 */",
 "/**
 * Port for UDP profiler.
 * @see $wgUDPProfilerHost
 */",
 "/** Detects non-matching wfProfileIn/wfProfileOut calls */",
 "/** Output debug message on every wfProfileIn/wfProfileOut */",
 "/**
 * Destination for wfIncrStats() data...
 * \'cache\' to go into the system cache, if enabled (memcached)
 * \'udp\' to be sent to the UDP profiler (see $wgUDPProfilerHost)
 * false to disable
 */",
 "/**
 * When $wgStatsMethod is \'udp\', setting this to a string allows statistics to
 * be aggregated over more than one wiki. The string will be used in place of
 * the DB name in outgoing UDP packets. If this is set to false, the DB name
 * will be used.
 */",
 "/** Whereas to count the number of time an article is viewed.
 * Does not work if pages are cached (for example with squid).
 */",
 "/**
 * Parser test suite files to be run by parserTests.php when no specific
 * filename is passed to it.
 *
 * Extensions may add their own tests to this array, or site-local tests
 * may be added via LocalSettings.php
 *
 * Use full paths.
 */",
 "/**
 * If configured, specifies target CodeReview installation to send test
 * result data from \'parserTests.php --upload\'
 *
 * Something like this:
 * $wgParserTestRemote = array(
 *     \'api-url\' => \'http://www.mediawiki.org/w/api.php\',
 *     \'repo\'    => \'MediaWiki\',
 *     \'suite\'   => \'ParserTests\',
 *     \'path\'    => \'/trunk/phase3\', // not used client-side; for reference
 *     \'secret\'  => \'qmoicj3mc4mcklmqw\', // Shared secret used in HMAC validation
 * );
 */",
 "/**
 * Allow running of javascript test suites via [[Special:JavaScriptTest]] (such as QUnit).
 */",
 "/**
 * Configuration for javascript testing.
 */",
 "/**
 * Overwrite the caching key prefix with custom value.
 * @since 1.19
 */",
 "/**
 * Display the new debugging toolbar. This also enables profiling on database
 * queries and other useful output.
 * Will disable file cache.
 *
 * @since 1.19
 */",
 "/**
 * Set this to true to disable the full text search feature.
 */",
 "/**
 * Set to true to have nicer highligted text in search results,
 * by default off due to execution overhead
 */",
 "/**
 * Regexp to match word boundaries, defaults for non-CJK languages
 * should be empty for CJK since the words are not separate
 */",
 "/**
 * Set to true to have the search engine count total
 * search matches to present in the Special:Search UI.
 * Not supported by every search engine shipped with MW.
 *
 * This could however be slow on larger wikis, and is pretty flaky
 * with the current title vs content split. Recommend avoiding until
 * that\'s been worked out cleanly; but this may aid in testing the
 * search UI and API to confirm that the result count works.
 */",
 "/**
 * Template for OpenSearch suggestions, defaults to API action=opensearch
 *
 * Sites with heavy load would tipically have these point to a custom
 * PHP wrapper to avoid firing up mediawiki for every keystroke
 *
 * Placeholders: {searchTerms}
 *
 */",
 "/**
 * Enable suggestions while typing in search boxes
 * (results are passed around in OpenSearch format)
 * Requires $wgEnableOpenSearchSuggest = true;
 */",
 "/**
 * Enable OpenSearch suggestions requested by MediaWiki. Set this to
 * false if you\'ve disabled MWSuggest or another suggestion script and
 * want reduce load caused by cached scripts pulling suggestions.
 */",
 "/**
 * Expiry time for search suggestion responses
 */",
 "/**
 *  Template for internal MediaWiki suggestion engine, defaults to API action=opensearch
 *
 *  Placeholders: {searchTerms}, {namespaces}, {dbname}
 *
 */",
 "/**
 * If you\'ve disabled search semi-permanently, this also disables updates to the
 * table. If you ever re-enable, be sure to rebuild the search table.
 */",
 "/**
 * List of namespaces which are searched by default. Example:
 *
 * <code>
 * $wgNamespacesToBeSearchedDefault[NS_MAIN] = true;
 * $wgNamespacesToBeSearchedDefault[NS_PROJECT] = true;
 * </code>
 */",
 "/**
 * Namespaces to be searched when user clicks the \"Help\" tab
 * on Special:Search
 *
 * Same format as $wgNamespacesToBeSearchedDefault
 */",
 "/**
 * If set to true the \'searcheverything\' preference will be effective only for logged-in users.
 * Useful for big wikis to maintain different search profiles for anonymous and logged-in users.
 *
 */",
 "/**
 * Disable the internal MySQL-based search, to allow it to be
 * implemented by an extension instead.
 */",
 "/**
 * Set this to a URL to forward search requests to some external location.
 * If the URL includes \'$1\', this will be replaced with the URL-encoded
 * search term.
 *
 * For example, to forward to Google you\'d have something like:
 * $wgSearchForwardUrl = \'http://www.google.com/search?q=$1\' .
 *                       \'&domains=http://example.com\' .
 *                       \'&sitesearch=http://example.com\' .
 *                       \'&ie=utf-8&oe=utf-8\';
 */",
 "/**
 * Search form behavior
 * true = use Go & Search buttons
 * false = use Go button & Advanced search link
 */",
 "/**
 * Array of namespaces to generate a Google sitemap for when the
 * maintenance/generateSitemap.php script is run, or false if one is to be ge-
 * nerated for all namespaces.
 */",
 "/**
 * Custom namespace priorities for sitemaps. Setting this will allow you to
 * set custom priorities to namsepaces when sitemaps are generated using the
 * maintenance/generateSitemap.php script.
 *
 * This should be a map of namespace IDs to priority
 * Example:
 *  $wgSitemapNamespacesPriorities = array(
 *      NS_USER => \'0.9\',
 *      NS_HELP => \'0.0\',
 *  );
 */",
 "/**
 * If true, searches for IP addresses will be redirected to that IP\'s
 * contributions page. E.g. searching for \"1.2.3.4\" will redirect to
 * [[Special:Contributions/1.2.3.4]]
 */",
 "/**
 * Path to the GNU diff3 utility. If the file doesn\'t exist, edit conflicts will
 * fall back to the old behaviour (no merging).
 */",
 "/**
 * Path to the GNU diff utility.
 */",
 "/**
 * Which namespaces have special treatment where they should be preview-on-open
 * Internaly only Category: pages apply, but using this extensions (e.g. Semantic MediaWiki)
 * can specify namespaces of pages they have special treatment for
 */",
 "/**
 * Activate external editor interface for files and pages
 * See http://www.mediawiki.org/wiki/Manual:External_editors
 */",
 "/** Go button goes straight to the edit screen if the article doesn\'t exist. */",
 "/**
 * Enable the UniversalEditButton for browsers that support it
 * (currently only Firefox with an extension)
 * See http://universaleditbutton.org for more background information
 */",
 "/**
 * If user doesn\'t specify any edit summary when making a an edit, MediaWiki
 * will try to automatically create one. This feature can be disabled by set-
 * ting this variable false.
 */",
 "/** For colorized maintenance script output, is your terminal background dark ? */",
 "/**
 * Array for extensions to register their maintenance scripts with the
 * system. The key is the name of the class and the value is the full
 * path to the file
 */",
 "/**
 * Set this to a string to put the wiki into read-only mode. The text will be
 * used as an explanation to users.
 *
 * This prevents most write operations via the web interface. Cache updates may
 * still be possible. To prevent database writes completely, use the read_only
 * option in MySQL.
 */",
 "/**
 * If this lock file exists (size > 0), the wiki will be forced into read-only mode.
 * Its contents will be shown to users as part of the read-only warning
 * message.
 *
 * Will default to \"{$wgUploadDirectory}/lock_yBgMBwiR\" in Setup.php
 */",
 "/**
 * When you run the web-based upgrade utility, it will tell you what to set
 * this to in order to authorize the upgrade process. It will subsequently be
 * used as a password, to authorize further upgrades.
 *
 * For security, do not set this to a guessable string. Use the value supplied
 * by the install/upgrade process. To cause the upgrader to generate a new key,
 * delete the old key from LocalSettings.php.
 */",
 "/**
 * Recentchanges items are periodically purged; entries older than this many
 * seconds will go.
 * Default: 13 weeks = about three months
 */",
 "/**
 * Filter $wgRCLinkDays by $wgRCMaxAge to avoid showing links for numbers
 * higher than what will be stored. Note that this is disabled by default
 * because we sometimes do have RC data which is beyond the limit for some
 * reason, and some users may use the high numbers to display that data which
 * is still there.
 */",
 "/**
 * List of Days and Limits options to list in the Special:Recentchanges and
 * Special:Recentchangeslinked pages.
 */",
 "/**
 * Send recent changes updates via UDP. The updates will be formatted for IRC.
 * Set this to the IP address of the receiver.
 */",
 "/**
 * Port number for RC updates
 */",
 "/**
 * Prefix to prepend to each UDP packet.
 * This can be used to identify the wiki. A script is available called
 * mxircecho.py which listens on a UDP port, and uses a prefix ending in a
 * tab to identify the IRC channel to send the log line to.
 */",
 "/**
 * If this is set to true, $wgLocalInterwiki will be prepended to links in the
 * IRC feed. If this is set to a string, that string will be used as the prefix.
 */",
 "/**
 * Set to true to omit \"bot\" edits (by users with the bot permission) from the
 * UDP feed.
 */",
 "/**
 * Enable user search in Special:Newpages
 * This is really a temporary hack around an index install bug on some Wikipedias.
 * Kill it once fixed.
 */",
 "/** Use RC Patrolling to check for vandalism */",
 "/** Use new page patrolling to check new pages on Special:Newpages */",
 "/** Provide syndication feeds (RSS, Atom) for, e.g., Recentchanges, Newpages */",
 "/** Set maximum number of results to return in syndication feeds (RSS, Atom) for
 * eg Recentchanges, Newpages. */",
 "/** _Minimum_ timeout for cached Recentchanges feed, in seconds.
 * A cached version will continue to be served out even if changes
 * are made, until this many seconds runs out since the last render.
 *
 * If set to 0, feed caching is disabled. Use this for debugging only;
 * feed generation can be pretty slow with diffs.
 */",
 "/** When generating Recentchanges RSS/Atom feed, diffs will not be generated for
 * pages larger than this size. */",
 "/** Override the site\'s default RSS/ATOM feed for recentchanges that appears on
 * every page. Some sites might have a different feed they\'d like to promote
 * instead of the RC feed (maybe like a \"Recent New Articles\" or \"Breaking news\" one).
 * Ex: $wgSiteFeed[\'format\'] = \"http://example.com/somefeed.xml\"; Format can be one
 * of either \'rss\' or \'atom\'.
 */",
 "/**
 * Available feeds objects
 * Should probably only be defined when a page is syndicated ie when
 * $wgOut->isSyndicated() is true
 */",
 "/**
 * Which feed types should we provide by default?  This can include \'rss\',
 * \'atom\', neither, or both.
 */",
 "/** Show watching users in recent changes, watchlist and page history views */",
 "/** Show watching users in Page views */",
 "/** Show the amount of changed characters in recent changes */",
 "/**
 * If the difference between the character counts of the text
 * before and after the edit is below that value, the value will be
 * highlighted on the RC page.
 */",
 "/**
 * Show \"Updated (since my last visit)\" marker in RC view, watchlist and history
 * view for watched pages with new changes */",
 "/**
 * Disable links to talk pages of anonymous users (IPs) in listings on special
 * pages like page history, Special:Recentchanges, etc.
 */",
 "/**
 * Enable filtering of categories in Recentchanges
 */",
 "/**
 * Allow filtering by change tag in recentchanges, history, etc
 * Has no effect if no tags are defined in valid_tag.
 */",
 "/**
 * Override for copyright metadata.
 *
 * This is the name of the page containing information about the wiki\'s copyright status,
 * which will be added as a link in the footer if it is specified. It overrides
 * $wgRightsUrl if both are specified.
 */",
 "/**
 * Set this to specify an external URL containing details about the content license used on your wiki.
 * If $wgRightsPage is set then this setting is ignored.
 */",
 "/**
 * If either $wgRightsUrl or $wgRightsPage is specified then this variable gives the text for the link.
 * If using $wgRightsUrl then this value must be specified. If using $wgRightsPage then the name of the
 * page will also be used as the link if this variable is not set.
 */",
 "/**
 * Override for copyright metadata.
 */",
 "/**
 * Set to an array of metadata terms. Else they will be loaded based on $wgRightsUrl
 */",
 "/**
 * Set this to some HTML to override the rights icon with an arbitrary logo
 * @deprecated since 1.18 Use $wgFooterIcons[\'copyright\'][\'copyright\']
 */",
 "/** Set this to true if you want detailed copyright information forms on Upload. */",
 "/**
 * Set this to the number of authors that you want to be credited below an
 * article text. Set it to zero to hide the attribution block, and a negative
 * number (like -1) to show all authors. Note that this will require 2-3 extra
 * database hits, which can have a not insignificant impact on performance for
 * large wikis.
 */",
 "/** If there are more than $wgMaxCredits authors, show $wgMaxCredits of them.
 * Otherwise, link to a separate credits page. */",
 "/**
 * List of interwiki prefixes for wikis we\'ll accept as sources for
 * Special:Import (for sysops). Since complete page history can be imported,
 * these should be \'trusted\'.
 *
 * If a user has the \'import\' permission but not the \'importupload\' permission,
 * they will only be able to run imports through this transwiki interface.
 */",
 "/**
 * Optional default target namespace for interwiki imports.
 * Can use this to create an incoming \"transwiki\"-style queue.
 * Set to numeric key, not the name.
 *
 * Users may override this in the Special:Import dialog.
 */",
 "/**
 * If set to false, disables the full-history option on Special:Export.
 * This is currently poorly optimized for long edit histories, so is
 * disabled on Wikimedia\'s sites.
 */",
 "/**
 * If set nonzero, Special:Export requests for history of pages with
 * more revisions than this will be rejected. On some big sites things
 * could get bogged down by very very long pages.
 */",
 "/**
* Return distinct author list (when not returning full history)
*/",
 "/**
 * If non-zero, Special:Export accepts a \"pagelink-depth\" parameter
 * up to this specified level, which will cause it to include all
 * pages linked to from the pages you specify. Since this number
 * can become *insanely large* and could easily break your wiki,
 * it\'s disabled by default for now.
 *
 * There\'s a HARD CODED limit of 5 levels of recursion to prevent a
 * crazy-big export from being done by someone setting the depth
 * number too high. In other words, last resort safety net.
 */",
 "/**
* Whether to allow the \"export all pages in namespace\" option
*/",
 "/**
* Whether to allow exporting the entire wiki into a single file
*/",
 "/**
 * A list of callback functions which are called once MediaWiki is fully initialised
 */",
 "/**
 * Extension messages files.
 *
 * Associative array mapping extension name to the filename where messages can be
 * found. The file should contain variable assignments. Any of the variables
 * present in languages/messages/MessagesEn.php may be defined, but $messages
 * is the most common.
 *
 * Variables defined in extensions will override conflicting variables defined
 * in the core.
 *
 * Example:
 *    $wgExtensionMessagesFiles[\'ConfirmEdit\'] = dirname(__FILE__).\'/ConfirmEdit.i18n.php\';
 *
 */",
 "/**
 * Parser output hooks.
 * This is an associative array where the key is an extension-defined tag
 * (typically the extension name), and the value is a PHP callback.
 * These will be called as an OutputPageParserOutput hook, if the relevant
 * tag has been registered with the parser output object.
 *
 * Registration is done with $pout->addOutputHook( $tag, $data ).
 *
 * The callback has the form:
 *    function outputHook( $outputPage, $parserOutput, $data ) { ... }
 */",
 "/**
 * List of valid skin names.
 * The key should be the name in all lower case, the value should be a properly
 * cased name for the skin. This value will be prefixed with \"Skin\" to create the
 * class name of the skin to load, and if the skin\'s class cannot be found through
 * the autoloader it will be used to load a .php file by that name in the skins directory.
 * The default skins will be added later, by Skin::getSkinNames(). Use
 * Skin::getSkinNames() as an accessor if you wish to have access to the full list.
 */",
 "/**
 * Special page list.
 * See the top of SpecialPage.php for documentation.
 */",
 "/**
 * Array mapping class names to filenames, for autoloading.
 */",
 "/**
 * An array of extension types and inside that their names, versions, authors,
 * urls, descriptions and pointers to localized description msgs. Note that
 * the version, url, description and descriptionmsg key can be omitted.
 *
 * <code>
 * $wgExtensionCredits[$type][] = array(
 *     \'name\' => \'Example extension\',
 *     \'version\' => 1.9,
 *     \'path\' => __FILE__,
 *     \'author\' => \'Foo Barstein\',
 *     \'url\' => \'http://wwww.example.com/Example%20Extension/\',
 *     \'description\' => \'An example extension\',
 *     \'descriptionmsg\' => \'exampleextension-desc\',
 * );
 * </code>
 *
 * Where $type is \'specialpage\', \'parserhook\', \'variable\', \'media\' or \'other\'.
 * Where \'descriptionmsg\' can be an array with message key and parameters:
 * \'descriptionmsg\' => array( \'exampleextension-desc\', param1, param2, ... ),
 */",
 "/**
 * Authentication plugin.
 * @var $wgAuth AuthPlugin
 */",
 "/**
 * Global list of hooks.
 * Add a hook by doing:
 *     $wgHooks[\'event_name\'][] = $function;
 * or:
 *     $wgHooks[\'event_name\'][] = array($function, $data);
 * or:
 *     $wgHooks[\'event_name\'][] = array($object, \'method\');
 */",
 "/**
 * Maps jobs to their handling classes; extensions
 * can add to this to provide custom jobs
 */",
 "/**

 * Jobs that must be explicitly requested, i.e. aren\'t run by job runners unless special flags are set.
 *
 * These can be:
 * - Very long-running jobs.
 * - Jobs that you would never want to run as part of a page rendering request.
 * - Jobs that you want to run on specialized machines ( like transcoding, or a particular
 *   machine on your cluster has \'outside\' web access you could restrict uploadFromUrl )
 */",
 "/**
 * Additional functions to be performed with updateSpecialPages.
 * Expensive Querypages are already updated.
 */",
 "/**
 * Hooks that are used for outputting exceptions.  Format is:
 *   $wgExceptionHooks[] = $funcname
 * or:
 *   $wgExceptionHooks[] = array( $class, $funcname )
 * Hooks should return strings or false
 */",
 "/**
 * Page property link table invalidation lists. When a page property
 * changes, this may require other link tables to be updated (eg
 * adding __HIDDENCAT__ means the hiddencat tracking category will
 * have been added, so the categorylinks table needs to be rebuilt).
 * This array can be added to by extensions.
 */",
 "/**
 * Use experimental, DMOZ-like category browser
 */",
 "/**
 *  On  category pages, show thumbnail gallery for images belonging to that
 * category instead of listing them as articles.
 */",
 "/**
 * Paging limit for categories
 */",
 "/**
 * Specify how category names should be sorted, when listed on a category page.
 * A sorting scheme is also known as a collation.
 *
 * Available values are:
 *
 *   - uppercase: Converts the category name to upper case, and sorts by that.
 *
 *   - identity: Does no conversion. Sorts by binary value of the string.
 *
 *   - uca-default: Provides access to the Unicode Collation Algorithm with
 *     the default element table. This is a compromise collation which sorts
 *     all languages in a mediocre way. However, it is better than \"uppercase\".
 *
 * To use the uca-default collation, you must have PHP\'s intl extension
 * installed. See http://php.net/manual/en/intl.setup.php . The details of the
 * resulting collation will depend on the version of ICU installed on the
 * server.
 *
 * After you change this, you must run maintenance/updateCollation.php to fix
 * the sort keys in the database.
 *
 * Extensions can define there own collations by subclassing Collation
 * and using the Collation::factory hook.
 */",
 "/**
 * The logging system has two levels: an event type, which describes the
 * general category and can be viewed as a named subset of all logs; and
 * an action, which is a specific kind of event that can exist in that
 * log type.
 */",
 "/**
 * This restricts log access to those who have a certain right
 * Users without this will not see it in the option menu and can not view it
 * Restricted logs are not added to recent changes
 * Logs should remain non-transcludable
 * Format: logtype => permissiontype
 */",
 "/**
 * Show/hide links on Special:Log will be shown for these log types.
 *
 * This is associative array of log type => boolean \"hide by default\"
 *
 * See $wgLogTypes for a list of available log types.
 *
 * For example:
 *   $wgFilterLogTypes => array(
 *      \'move\' => true,
 *      \'import\' => false,
 *   );
 *
 * Will display show/hide links for the move and import logs. Move logs will be
 * hidden by default unless the link is clicked. Import logs will be shown by
 * default, and hidden when the link is clicked.
 *
 * A message of the form log-show-hide-<type> should be added, and will be used
 * for the link text.
 */",
 "/**
 * Lists the message key string for each log type. The localized messages
 * will be listed in the user interface.
 *
 * Extensions with custom log types may add to this array.
 *
 * Since 1.19, if you follow the naming convention log-name-TYPE,
 * where TYPE is your log type, yoy don\'t need to use this array.
 */",
 "/**
 * Lists the message key string for descriptive text to be shown at the
 * top of each log type.
 *
 * Extensions with custom log types may add to this array.
 *
 * Since 1.19, if you follow the naming convention log-description-TYPE,
 * where TYPE is your log type, yoy don\'t need to use this array.
 */",
 "/**
 * Lists the message key string for formatting individual events of each
 * type and action when listed in the logs.
 *
 * Extensions with custom log types may add to this array.
 */",
 "/**
 * The same as above, but here values are names of functions,
 * not messages.
 * @see LogPage::actionText
 * @see LogFormatter
 */",
 "/**
 * Maintain a log of newusers at Log/newusers?
 */",
 "/**
 * Allow special page inclusions such as {{Special:Allpages}}
 */",
 "/**
 * Set this to an array of special page names to prevent
 * maintenance/updateSpecialPages.php from updating those pages.
 */",
 "/**
 * List of special pages, followed by what subtitle they should go under
 * at Special:SpecialPages
 */",
 "/** Whether or not to sort special pages in Special:Specialpages */",
 "/**
 * On Special:Unusedimages, consider images \"used\", if they are put
 * into a category. Default (false) is not to count those as used.
 */",
 "/**
 * Maximum number of links to a redirect page listed on
 * Special:Whatlinkshere/RedirectDestination
 */",
 "/**
 * Array of allowed values for the title=foo&action=<action> parameter. Syntax is:
 *     \'foo\' => \'ClassName\'    Load the specified class which subclasses Action
 *     \'foo\' => true           Load the class FooAction which subclasses Action
 *                             If something is specified in the getActionOverrides()
 *                             of the relevant Page object it will be used
 *                             instead of the default class.
 *     \'foo\' => false          The action is disabled; show an error message
 * Unsetting core actions will probably cause things to complain loudly.
 */",
 "/**
 * Array of disabled article actions, e.g. view, edit, delete, etc.
 * @deprecated since 1.18; just set $wgActions[\'action\'] = false instead
 */",
 "/**
 * Allow the \"info\" action, very inefficient at the moment
 */",
 "/**
 * Default robot policy.  The default policy is to encourage indexing and fol-
 * lowing of links.  It may be overridden on a per-namespace and/or per-page
 * basis.
 */",
 "/**
 * Robot policies per namespaces. The default policy is given above, the array
 * is made of namespace constants as defined in includes/Defines.php.  You can-
 * not specify a different default policy for NS_SPECIAL: it is always noindex,
 * nofollow.  This is because a number of special pages (e.g., ListPages) have
 * many permutations of options that display the same data under redundant
 * URLs, so search engine spiders risk getting lost in a maze of twisty special
 * pages, all alike, and never reaching your actual content.
 *
 * Example:
 *   $wgNamespaceRobotPolicies = array( NS_TALK => \'noindex\' );
 */",
 "/**
 * Robot policies per article. These override the per-namespace robot policies.
 * Must be in the form of an array where the key part is a properly canonical-
 * ised text form title and the value is a robot policy.
 * Example:
 *   $wgArticleRobotPolicies = array( \'Main Page\' => \'noindex,follow\',
 *     \'User:Bob\' => \'index,follow\' );
 * Example that DOES NOT WORK because the names are not canonical text forms:
 *   $wgArticleRobotPolicies = array(
 *     # Underscore, not space!
 *     \'Main_Page\' => \'noindex,follow\',
 *     # \"Project\", not the actual project name!
 *     \'Project:X\' => \'index,follow\',
 *     # Needs to be \"Abc\", not \"abc\" (unless $wgCapitalLinks is false for that namespace)!
 *     \'abc\' => \'noindex,nofollow\'
 *   );
 */",
 "/**
 * An array of namespace keys in which the __INDEX__/__NOINDEX__ magic words
 * will not function, so users can\'t decide whether pages in that namespace are
 * indexed by search engines.  If set to null, default to $wgContentNamespaces.
 * Example:
 *   $wgExemptFromUserRobotsControl = array( NS_MAIN, NS_TALK, NS_PROJECT );
 */",
 "/**
 * Enable the MediaWiki API for convenient access to
 * machine-readable data via api.php
 *
 * See http://www.mediawiki.org/wiki/API
 */",
 "/**
 * Allow the API to be used to perform write operations
 * (page edits, rollback, etc.) when an authorised user
 * accesses it
 */",
 "/**
 * API module extensions
 * Associative array mapping module name to class name.
 * Extension modules may override the core modules.
 */",
 "/**
 * Maximum amount of rows to scan in a DB query in the API
 * The default value is generally fine
 */",
 "/**
 * The maximum size (in bytes) of an API result.
 * Don\'t set this lower than $wgMaxArticleSize*1024
 */",
 "/**
 * The maximum number of uncached diffs that can be retrieved in one API
 * request. Set this to 0 to disable API diffs altogether
 */",
 "/**
 * Log file or URL (TCP or UDP) to log API requests to, or false to disable
 * API request logging
 */",
 "/**
 * Set the timeout for the API help text cache. If set to 0, caching disabled
 */",
 "/**
 * Enable AJAX framework
 */",
 "/**
 * List of Ajax-callable functions.
 * Extensions acting as Ajax callbacks must register here
 */",
 "/**
 * Enable watching/unwatching pages using AJAX.
 * Requires $wgUseAjax to be true too.
 */",
 "/**
 * Enable AJAX check for file overwrite, pre-upload
 */",
 "/**
 * Enable previewing licences via AJAX. Also requires $wgEnableAPI to be true.
 */",
 "/**
 * Settings for incoming cross-site AJAX requests:
 * Newer browsers support cross-site AJAX when the target resource allows requests
 * from the origin domain by the Access-Control-Allow-Origin header.
 * This is currently only used by the API (requests to api.php)
 * $wgCrossSiteAJAXdomains can be set using a wildcard syntax:
 *
 * \'*\' matches any number of characters
 * \'?\' matches any 1 character
 *
 * Example:
 $wgCrossSiteAJAXdomains = array(
  \'www.mediawiki.org\',
  \'*.wikipedia.org\',
  \'*.wikimedia.org\',
  \'*.wiktionary.org\',
 );
 *
 */",
 "/**
 * Domains that should not be allowed to make AJAX requests,
 * even if they match one of the domains allowed by $wgCrossSiteAJAXdomains
 * Uses the same syntax as $wgCrossSiteAJAXdomains
 */",
 "/**
 * Maximum amount of virtual memory available to shell processes under linux, in KB.
 */",
 "/**
 * Maximum file size created by shell processes under linux, in KB
 * ImageMagick convert for example can be fairly hungry for scratch space
 */",
 "/**
 * Maximum CPU time in seconds for shell processes under linux
 */",
 "/**
 * Executable path of the PHP cli binary (php/php5). Should be set up on install.
 */",
 "/**
 * Locale for LC_CTYPE, to work around http://bugs.php.net/bug.php?id=45132
 * For Unix-like operating systems, set this to to a locale that has a UTF-8
 * character set. Only the character set is relevant.
 */",
 "/**
 * Timeout for HTTP requests done internally
 */",
 "/**
 * Timeout for Asynchronous (background) HTTP requests
 */",
 "/**
 * Proxy to use for CURL requests.
 */",
 "/**
 * Number of jobs to perform per request. May be less than one in which case
 * jobs are performed probabalistically. If this is zero, jobs will not be done
 * during ordinary apache requests. In this case, maintenance/runJobs.php should
 * be run periodically.
 */",
 "/**
 * Number of rows to update per job
 */",
 "/**
 * Number of rows to update per query
 */",
 "/**
 * The build directory for HipHop compilation.
 * Defaults to $IP/maintenance/hiphop/build.
 */",
 "/**
 * The HipHop build type. Can be either \"Debug\" or \"Release\".
 */",
 "/**
 * Number of parallel processes to use during HipHop compilation, or \"detect\"
 * to guess from system properties.
 */",
 "/**
 * Filesystem extensions directory. Defaults to $IP/../extensions.
 *
 * To compile extensions with HipHop, set $wgExtensionsDirectory correctly,
 * and use code like:
 *
 *    require( MWInit::extensionSetupPath( \'Extension/Extension.php\' ) );
 *
 * to include the extension setup file from LocalSettings.php. It is not
 * necessary to set this variable unless you use MWInit::extensionSetupPath().
 */",
 "/**
 * A list of files that should be compiled into a HipHop build, in addition to
 * those listed in $wgAutoloadClasses. Add to this array in an extension setup
 * file in order to add files to the build.
 *
 * The files listed here must either be either absolute paths under $IP or
 * under $wgExtensionsDirectory, or paths relative to the virtual source root
 * \"$IP/..\", i.e. starting with \"phase3\" for core files, and \"extensions\" for
 * extension files.
 */",
 "/** Name of the external diff engine to use */",
 "/**
 * Disable redirects to special pages and interwiki redirects, which use a 302
 * and have no \"redirected from\" link. Note this is only for articles with #Redirect
 * in them. URL\'s containing a local interwiki prefix (or a non-canonical special
 * page name) are still hard redirected regardless of this setting.
 */",
 "/**
 * LinkHolderArray batch size
 * For debugging
 */",
 "/**
 * By default MediaWiki does not register links pointing to same server in externallinks dataset,
 * use this value to override:
 */",
 "/**
 * Maximum number of pages to move at once when moving subpages with a page.
 */",
 "/**
 * Fix double redirects after a page move.
 * Tends to conflict with page move vandalism, use only on a private wiki.
 */",
 "/**
 * Allow redirection to another page when a user logs in.
 * To enable, set to a string like \'Main Page\'
 */",
 "/**
 * Configuration for processing pool control, for use in high-traffic wikis.
 * An implementation is provided in the PoolCounter extension.
 *
 * This configuration array maps pool types to an associative array. The only
 * defined key in the associative array is \"class\", which gives the class name.
 * The remaining elements are passed through to the class as constructor
 * parameters. Example:
 *
 *   $wgPoolCounterConf = array( \'ArticleView\' => array(
 *     \'class\' => \'PoolCounter_Client\',
 *     \'timeout\' => 15, // wait timeout in seconds
 *     \'workers\' => 5, // maximum number of active threads in each pool
 *     \'maxqueue\' => 50, // maximum number of total threads in each pool
 *     ... any extension-specific options...
 *   );
 */",
 "/**
 * To disable file delete/restore temporarily
 */",
 "/**
 * Allows running of selenium tests via maintenance/tests/RunSeleniumTests.php
 */",
 "/** Abkhazian (??????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Comp1089
 * @author Mzhiba
 * @author Temuri rajavi
 * @author ??????
 */",
 "/**
	 * Get an instance of this object
	 *
	 * @return ParserCache
	 */",
 "/**
	 * Setup a cache pathway with a given back-end storage mechanism.
	 * May be a memcached client or a BagOStuff derivative.
	 *
	 * @param $memCached Object
	 */",
 "/**
	 * @param $article Article
	 * @param $hash string
	 * @return mixed|string
	 */",
 "/**
	 * @param $article Article
	 * @return mixed|string
	 */",
 "/**
	 * Provides an E-Tag suitable for the whole page. Note that $article
	 * is just the main wikitext. The E-Tag has to be unique to the whole
	 * page, even if the article itself is the same, so it uses the
	 * complete set of user options. We don\'t want to use the preference
	 * of a different user on a message just because it wasn\'t used in
	 * $article. For example give a Chinese interface to a user with
	 * English preferences. That\'s why we take into account *all* user
	 * options. (r70809 CR)
	 *
	 * @param $article Article
	 * @param $popts ParserOptions
	 */",
 "/**
	 * Retrieve the ParserOutput from ParserCache, even if it\'s outdated.
	 * @param $article Article
	 * @param $popts ParserOptions
	 * @return ParserOutput|false
	 */",
 "/**
	 * Used to provide a unique id for the PoolCounter.
	 * It would be preferable to have this code in get()
	 * instead of having Article looking in our internals.
	 *
	 * @todo Document parameter $useOutdated
	 *
	 * @param $article Article
	 * @param $popts ParserOptions
	 */",
 "/**
	 * Retrieve the ParserOutput from ParserCache.
	 * false if not found or outdated.
	 *
	 * @param $article Article
	 * @param $popts ParserOptions
	 * @param $useOutdated
	 *
	 * @return ParserOutput|false
	 */",
 "/**
	 * @param $parserOutput ParserOutput
	 * @param $article Article
	 * @param $popts ParserOptions
	 */",
 "/**
 * @ingroup Cache Parser
 * @todo document
 */",
 "/** Chinese (Hong Kong) (?????????(??????)???)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Horacewai2
 * @author Kayau
 * @author Mark85296341
 * @author PhiLiP
 * @author Shizhao
 * @author Waihorace
 * @author Wong128hk
 * @author Yukiseaside
 * @author Yuyu
 */",
 "/**
 * PHP lacks an interactive mode, but this can be very helpful when debugging.
 * This script lets a command-line user start up the wiki engine and then poke
 * about by issuing PHP commands directly.
 *
 * Unlike eg Python, you need to use a \'return\' statement explicitly for the
 * interactive shell to print out the value of the expression. Multiple lines
 * are evaluated separately, so blocks need to be input without a line break.
 * Fatal errors such as use of undeclared functions can kill the shell.
 *
 * To get decent line editing behavior, you should compile PHP with support
 * for GNU readline (pass --with-readline to configure).
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @file
 * @ingroup Maintenance
 */",
 "/**
 * Test Case ID   : 30 (http://www.mediawiki.org/wiki/New_installer/Test_plan)
 * Test Case Name :\'Back\' and \'Continue\' button availability
 * Version        : MediaWiki 1.18alpha
*/",
 "/**
	 * Get the message associed with the HTTP response code $code
	 *
	 * Replace OutputPage::getStatusMessage( $code )
	 *
	 * @param $code Integer: status code
	 * @return String or null: message or null if $code is not in the list of
	 *         messages
	 */",
 "/**
 * @todo document
 */",
 "/**
	 * 1.4 betas were missing the \'binary\' marker from logging.log_title,
	 * which causes a collation mismatch error on joins in MySQL 4.1.
	 *
	 * @param $table String: table name
	 * @param $field String: field name to check
	 * @param $patchFile String: path to the patch to correct the field
	 */",
 "/**
	 * Check whether an index contain a field
	 *
	 * @param $table String: table name
	 * @param $index String: index name to check
	 * @param $field String: field that should be in the index
	 * @return Boolean
	 */",
 "/**
	 * Check that interwiki table exists; if it doesn\'t source it
	 */",
 "/**
	 * Check that proper indexes are in place
	 */",
 "/**
	 * Check if we need to add talk page rows to the watchlist
	 */",
 "/**
	 * Make sure wl_notificationtimestamp can be NULL,
	 * and update old broken items.
	 */",
 "/**
	 * Set page_random field to a random value where it is equals to 0.
	 *
	 * @see bug 3946
	 */",
 "/**
	 * Adding page_restrictions table, obsoleting page.page_restrictions.
	 * Migrating old restrictions to new table
	 * -- Andrew Garrett, January 2007.
	 */",
 "/**
 * Mysql update list and mysql-specific update functions.
 *
 * @ingroup Deployment
 * @since 1.17
 */",
 "/**
	 * @param $count int
	 * @param $forms array
	 * @return string
	 */",
 "/**
 * Southern Sami (??arjelsaemien)
 *
 * @ingroup Language
 */",
 "/**
 * ??????????! ???? ?????????????????? ?????? ????????!
 *
 * ???????? ?????????????????? ?????????????? ???????????????? ?????????????? ???????????? ????????????????????,
 * ???? ???? ?????????? ?????????????? ?????????????????? ???????????????? ???????? ??MediaWiki:*??.
 * ???? ???????????? ?????????? ???????????? ???? ???????????????? ??Special:Allmessages??.
 */",
 "/**
	 * A mutator for $this->listoutput;
	 *
	 * @param $bool Boolean
	 */",
 "/**
	 * Subclasses return an SQL query here, formatted as an array with the
	 * following keys:
	 *    tables => Table(s) for passing to Database::select()
	 *    fields => Field(s) for passing to Database::select(), may be *
	 *    conds => WHERE conditions
	 *    options => options
	 *    join_conds => JOIN conditions
	 *
	 * Note that the query itself should return the following three columns:
	 * \'namespace\', \'title\', and \'value\'. \'value\' is used for sorting.
	 *
	 * These may be stored in the querycache table for expensive queries,
	 * and that cached data will be returned sometimes, so the presence of
	 * extra fields can\'t be relied upon. The cached \'value\' column will be
	 * an integer; non-numeric values are useful only for sorting the
	 * initial query (except if they\'re timestamps, see usesTimestamps()).
	 *
	 * Don\'t include an ORDER or LIMIT clause, they will be added.
	 *
	 * If this function is not overridden or returns something other than
	 * an array, getSQL() will be used instead. This is for backwards
	 * compatibility only and is strongly deprecated.
	 * @return array
	 * @since 1.18
	 */",
 "/**
	 * For back-compat, subclasses may return a raw SQL query here, as a string.
	 * This is stronly deprecated; getQueryInfo() should be overridden instead.
	 * @return string
	 */",
 "/**
	 * Subclasses return an array of fields to order by here. Don\'t append
	 * DESC to the field names, that\'ll be done automatically if
	 * sortDescending() returns true.
	 * @return array
	 * @since 1.18
	 */",
 "/**
	 * Does this query return timestamps rather than integers in its
	 * \'value\' field? If true, this class will convert \'value\' to a
	 * UNIX timestamp for caching.
	 * NOTE: formatRow() may get timestamps in TS_MW (mysql), TS_DB (pgsql)
	 *       or TS_UNIX (querycache) format, so be sure to always run them
	 *       through wfTimestamp()
	 * @return bool
	 * @since 1.18
	 */",
 "/**
	 * Override to sort by increasing values
	 *
	 * @return Boolean
	 */",
 "/**
	 * Is this query expensive (for some definition of expensive)? Then we
	 * don\'t let it run in miser mode. $wgDisableQueryPages causes all query
	 * pages to be declared expensive. Some query pages are always expensive.
	 *
	 * @return Boolean
	 */",
 "/**
	 * Is the output of this query cacheable? Non-cacheable expensive pages
	 * will be disabled in miser mode and will not have their results written
	 * to the querycache table.
	 * @return Boolean
	 * @since 1.18
	 */",
 "/**
	 * Whether or not the output of the page in question is retrieved from
	 * the database cache.
	 *
	 * @return Boolean
	 */",
 "/**
	 * Sometime we dont want to build rss / atom feeds.
	 *
	 * @return Boolean
	 */",
 "/**
	 * Formats the results of the query for display. The skin is the current
	 * skin; you can use it for making links. The result is a single row of
	 * result data. You should be able to grab SQL results off of it.
	 * If the function returns false, the line output will be skipped.
	 * @param $skin Skin
	 * @param $result object Result row
	 * @return mixed String or false to skip
	 *
	 * @param $skin Skin object
	 * @param $result Object: database row
	 */",
 "/**
	 * The content returned by this function will be output before any result
	 *
	 * @return String
	 */",
 "/**
	 * If using extra form wheely-dealies, return a set of parameters here
	 * as an associative array. They will be encoded and added to the paging
	 * links (prev/next/lengths).
	 *
	 * @return Array
	 */",
 "/**
	 * Some special pages (for example SpecialListusers) might not return the
	 * current object formatted, but return the previous one instead.
	 * Setting this to return true will ensure formatResult() is called
	 * one more time to make sure that the very last result is formatted
	 * as well.
	 */",
 "/**
	 * Clear the cache and save new results
	 *
	 * @param $limit Integer: limit for SQL statement
	 * @param $ignoreErrors Boolean: whether to ignore database errors
	 */",
 "/**
	 * Run the query and return the result
	 * @param $limit mixed Numerical limit or false for no limit
	 * @param $offset mixed Numerical offset or false for no offset
	 * @return ResultWrapper
	 * @since 1.18
	 */",
 "/**
	 * Somewhat deprecated, you probably want to be using execute()
	 */",
 "/**
	 * Fetch the query results from the query cache
	 * @param $limit mixed Numerical limit or false for no limit
	 * @param $offset mixed Numerical offset or false for no offset
	 * @return ResultWrapper
	 * @since 1.18
	 */",
 "/**
	 * This is the actual workhorse. It does everything needed to make a
	 * real, honest-to-gosh query page.
	 */",
 "/**
	 * Format and output report results using the given information plus
	 * OutputPage
	 *
	 * @param $out OutputPage to print to
	 * @param $skin Skin: user skin to use
	 * @param $dbr Database (read) connection to use
	 * @param $res Integer: result pointer
	 * @param $num Integer: number of available result rows
	 * @param $offset Integer: paging offset
	 */",
 "/**
	 * @param $offset
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * Do any necessary preprocessing of the result object.
	 */",
 "/**
	 * Similar to above, but packaging in a syndicated feed instead of a web page
	 */",
 "/**
	 * Override for custom handling. If the titles/links are ok, just do
	 * feedItemDesc()
	 */",
 "/**
 * This is a class for doing query pages; since they\'re almost all the same,
 * we factor out some of the functionality into a superclass, and let
 * subclasses derive from it.
 * @ingroup SpecialPage
 */",
 "/**
	 * Cache page existence for performance
	 */",
 "/**
	 * Should formatResult() always check page existence, even if
	 * the results are fresh?  This is a (hopefully temporary)
	 * kluge for Special:WantedFiles, which may contain false
	 * positives for files that exist e.g. in a shared repo (bug
	 * 6220).
	 */",
 "/**
	 * Format an individual result
	 *
	 * @param $skin Skin to use for UI elements
	 * @param $result Result row
	 * @return string
	 */",
 "/**
	 * Make a \"what links here\" link for a given title
	 *
	 * @param $title Title to make the link for
	 * @param $result Object: result row
	 * @return string
	 */",
 "/**
 * Class definition for a wanted query page like
 * WantedPages, WantedTemplates, etc
 */",
 "/**
	 * Write a messages array as a PHP text and write it to the messages file.
	 *
	 * @param $messages Array: the messages array.
	 * @param $code String: the language code.
	 * @param $write Boolean: write to the messages file?
	 * @param $listUnknown Boolean: list the unknown messages?
	 * @param $removeUnknown Boolean: whether to remove unkown messages
	 */",
 "/**
	 * Write a messages array as a PHP text.
	 *
	 * @param $messages Array: the messages array.
	 * @param $ignoredComments Boolean: show comments about ignored and optional
	 *                         messages? (For English.)
	 * @param $prefix String: base path for messages.inc and messageTypes.inc files
	 *                or false for default path (this directory)
	 * @param $removeUnknown Boolean: whether to remove unkown messages
	 *
	 * @return Array of the PHP text and the sorted messages array.
	 */",
 "/**
	 * Generates an array of comments for messages.
	 *
	 * @param $messages Array: key of messages.
	 * @param $ignored Array: list of ingored message keys.
	 * @param $optional Array: list of optional message keys.
	 */",
 "/**
	 * Write a block of messages to PHP.
	 *
	 * @param $blockComment String: the comment of whole block.
	 * @param $messages Array: the block messages.
	 * @param $messageComments Array: optional comments for messages in this block.
	 * @param $prefix String: prefix for every line, for indenting purposes.
	 *
	 * @return The block, formatted in PHP.
	 */",
 "/**
 * @ingroup MaintenanceLanguage
 */",
 "/**
	 * Create a LocalFile from a title
	 * Do not call this except from inside a repo class.
	 *
	 * Note: $unused param is only here to avoid an E_STRICT
	 *
	 * @param $title
	 * @param $repo
	 * @param $unused
	 *
	 * @return LocalFile
	 */",
 "/**
	 * Create a LocalFile from a title
	 * Do not call this except from inside a repo class.
	 *
	 * @param $row
	 * @param $repo
	 *
	 * @return LocalFile
	 */",
 "/**
	 * Create a LocalFile from a SHA-1 key
	 * Do not call this except from inside a repo class.
	 *
	 * @param $sha1 string base-36 SHA-1
	 * @param $repo LocalRepo
	 * @param string|bool $timestamp MW_timestamp (optional)
	 *
	 * @return bool|LocalFile
	 */",
 "/**
	 * Fields in the image table
	 */",
 "/**
	 * Constructor.
	 * Do not call this except from inside a repo class.
	 */",
 "/**
	 * Get the memcached key for the main data for this file, or false if
	 * there is no access to the shared cache.
	 */",
 "/**
	 * Try to load file metadata from memcached. Returns true on success.
	 */",
 "/**
	 * Save the file metadata to memcached
	 */",
 "/**
	 * Load metadata from the file itself
	 */",
 "/**
	 * Load file metadata from the DB
	 */",
 "/**
	 * Decode a row from the database (either object or array) to an array
	 * with timestamps and MIME types decoded, and the field prefix removed.
	 */",
 "/**
	 * Load file metadata from a DB result row
	 */",
 "/**
	 * Load file metadata from cache or DB, unless already loaded
	 */",
 "/**
	 * Upgrade a row if it needs it
	 */",
 "/**
	 * Fix assorted version-related problems with the image row by reloading it from the file
	 */",
 "/**
	 * Set properties in this object to be equal to those given in the
	 * associative array $info. Only cacheable fields can be set.
	 *
	 * If \'mime\' is given, it will be split into major_mime/minor_mime.
	 * If major_mime/minor_mime are given, $this->mime will also be set.
	 */",
 "/** isVisible inhereted */",
 "/**
	 * Return the width of the image
	 *
	 * Returns false on error
	 */",
 "/**
	 * Return the height of the image
	 *
	 * Returns false on error
	 */",
 "/**
	 * Returns ID or name of user who uploaded the file
	 *
	 * @param $type string \'text\' or \'id\'
	 */",
 "/**
	 * Get handler-specific metadata
	 */",
 "/**
	 * Return the size of the image file, in bytes
	 */",
 "/**
	 * Returns the mime type of the file.
	 */",
 "/**
	 * Return the type of the media in the file.
	 * Use the value returned by this function with the MEDIATYPE_xxx constants.
	 */",
 "/**
	 * Returns true if the file exists on disk.
	 * @return boolean Whether file exist on disk.
	 */",
 "/**
	 * Fix thumbnail files from 1.4 or before, with extreme prejudice
	 */",
 "/**
	 * Get all thumbnail names previously generated for this file
	 * @param $archiveName string|false Name of an archive file
	 * @return array first element is the base dir, then files in that base dir.
	 */",
 "/**
	 * Refresh metadata in memcached, but don\'t touch thumbnails or squid
	 */",
 "/**
	 * Purge the shared history (OldLocalFile) cache
	 */",
 "/**
	 * Delete all previously generated thumbnails, refresh metadata in memcached and purge the squid
	 */",
 "/**
	 * Delete cached transformed files for an archived version only.
	 * @param $archiveName string name of the archived file
	 */",
 "/**
	 * Delete cached transformed files for the current version only.
	 */",
 "/**
	 * Delete a list of thumbnails visible at urls
	 * @param $dir string base dir of the files.
	 * @param $files array of strings: relative filenames (to $dir)
	 */",
 "/** purgeEverything inherited */",
 "/**
	 * Return the history of this file, line by line.
	 * starts with current version, then old versions.
	 * uses $this->historyLine to check which line to return:
	 *  0      return line for current version
	 *  1      query for old versions, return first one
	 *  2, ... return next old version from above query
	 */",
 "/**
	 * Reset the history pointer to the first element of the history
	 */",
 "/**
	 * Upload a file and record it in the DB
	 * @param $srcPath String: source storage path or virtual URL
	 * @param $comment String: upload description
	 * @param $pageText String: text to use for the new description page,
	 *                  if a new description page is created
	 * @param $flags Integer: flags for publish()
	 * @param $props Array: File properties, if known. This can be used to reduce the
	 *               upload time when uploading virtual URLs for which the file info
	 *               is already known
	 * @param $timestamp String: timestamp for img_timestamp, or false to use the current time
	 * @param $user Mixed: User object or null to use $wgUser
	 *
	 * @return FileRepoStatus object. On success, the value member contains the
	 *     archive name, or an empty string if it was a new file.
	 */",
 "/**
	 * Record a file upload in the upload log and the image table
	 */",
 "/**
	 * Record a file upload in the upload log and the image table
	 */",
 "/**
	 * Move or copy a file to its public location. If a file exists at the
	 * destination, move it to an archive. Returns a FileRepoStatus object with
	 * the archive name in the \"value\" member on success.
	 *
	 * The archive name should be passed through to recordUpload for database
	 * registration.
	 *
	 * @param $srcPath String: local filesystem path to the source image
	 * @param $flags Integer: a bitwise combination of:
	 *     File::DELETE_SOURCE	Delete the source file, i.e. move rather than copy
	 * @return FileRepoStatus object. On success, the value member contains the
	 *     archive name, or an empty string if it was a new file.
	 */",
 "/**
	 * Move or copy a file to a specified location. Returns a FileRepoStatus
	 * object with the archive name in the \"value\" member on success.
	 *
	 * The archive name should be passed through to recordUpload for database
	 * registration.
	 *
	 * @param $srcPath String: local filesystem path to the source image
	 * @param $dstRel String: target relative path
	 * @param $flags Integer: a bitwise combination of:
	 *     File::DELETE_SOURCE	Delete the source file, i.e. move rather than copy
	 * @return FileRepoStatus object. On success, the value member contains the
	 *     archive name, or an empty string if it was a new file.
	 */",
 "/**
	 * Move file to the new title
	 *
	 * Move current, old version and all thumbnails
	 * to the new filename. Old file is deleted.
	 *
	 * Cache purging is done; checks for validity
	 * and logging are caller\'s responsibility
	 *
	 * @param $target Title New file name
	 * @return FileRepoStatus object.
	 */",
 "/**
	 * Delete all versions of the file.
	 *
	 * Moves the files into an archive directory (or deletes them)
	 * and removes the database rows.
	 *
	 * Cache purging is done; logging is caller\'s responsibility.
	 *
	 * @param $reason
	 * @param $suppress
	 * @return FileRepoStatus object.
	 */",
 "/**
	 * Delete an old version of the file.
	 *
	 * Moves the file into an archive directory (or deletes it)
	 * and removes the database row.
	 *
	 * Cache purging is done; logging is caller\'s responsibility.
	 *
	 * @param $archiveName String
	 * @param $reason String
	 * @param $suppress Boolean
	 * @throws MWException or FSException on database or file store failure
	 * @return FileRepoStatus object.
	 */",
 "/**
	 * Restore all or specified deleted revisions to the given file.
	 * Permissions and logging are left to the caller.
	 *
	 * May throw database exceptions on error.
	 *
	 * @param $versions set of record ids of deleted items to restore,
	 *                    or empty to restore all revisions.
	 * @param $unsuppress Boolean
	 * @return FileRepoStatus
	 */",
 "/**
	 * Get the URL of the file description page.
	 */",
 "/**
	 * Get the HTML text of the description page
	 * This is not used by ImagePage for local files, since (among other things)
	 * it skips the parser cache.
	 */",
 "/**
	 * Start a transaction and lock the image for update
	 * Increments a reference counter if the lock is already held
	 * @return boolean True if the image exists, false otherwise
	 */",
 "/**
	 * Decrement the lock reference count. If the reference count is reduced to zero, commits
	 * the transaction and thereby releases the image lock.
	 */",
 "/**
	 * Roll back the DB transaction and mark the image unlocked
	 */",
 "/**
 * Class to represent a local file in the wiki\'s own database
 *
 * Provides methods to retrieve paths (physical, logical, URL),
 * to generate image thumbnails or for uploading.
 *
 * Note that only the repo object knows what its file class is called. You should
 * never name a file class explictly outside of the repo class. Instead use the
 * repo\'s factory functions to generate file objects, for example:
 *
 * RepoGroup::singleton()->getLocalRepo()->newFile($title);
 *
 * The convenience functions wfLocalFile() and wfFindFile() should be sufficient
 * in most cases.
 *
 * @ingroup FileAbstraction
 */",
 "/**
	 * Run the transaction
	 */",
 "/**
	 * Removes non-existent files from a deletion batch.
	 */",
 "/**
 * Helper class for file deletion
 * @ingroup FileAbstraction
 */",
 "/**
	 * Add a file by ID
	 */",
 "/**
	 * Add a whole lot of files by ID
	 */",
 "/**
	 * Add all revisions of the file
	 */",
 "/**
	 * Run the transaction, except the cleanup batch.
	 * The cleanup batch should be run in a separate transaction, because it locks different
	 * rows and there\'s no need to keep the image row locked while it\'s acquiring those locks
	 * The caller may have its own transaction open.
	 * So we save the batch and let the caller call cleanup()
	 */",
 "/**
	 * Removes non-existent files from a store batch.
	 */",
 "/**
	 * Removes non-existent files from a cleanup batch.
	 */",
 "/**
	 * Delete unused files in the deleted zone.
	 * This should be called from outside the transaction in which execute() was called.
	 */",
 "/**
	 * Cleanup a failed batch. The batch was only partially successful, so
	 * rollback by removing all items that were succesfully copied.
	 *
	 * @param Status $storeStatus
	 * @param array $storeBatch
	 */",
 "/**
 * Helper class for file undeletion
 * @ingroup FileAbstraction
 */",
 "/**
	 * Add the current image to the batch
	 */",
 "/**
	 * Add the old versions of the image to the batch
	 */",
 "/**
	 * Perform the move.
	 */",
 "/**
	 * Do the database updates and return a new FileRepoStatus indicating how
	 * many rows where updated.
	 *
	 * @return FileRepoStatus
	 */",
 "/**
	 * Generate triplets for FileRepo::storeBatch().
	 */",
 "/**
	 * Removes non-existent files from move batch.
	 */",
 "/**
	 * Cleanup a partially moved array of triplets by deleting the target
	 * files. Called if something went wrong half way.
	 */",
 "/**
	 * Cleanup a fully moved array of triplets by deleting the source files.
	 * Called at the end of the move process if everything else went ok.
	 */",
 "/**
 * Helper class for file movement
 * @ingroup FileAbstraction
 */",
 "/**
	 * Validate the \'user\' parameter and set the value to compare
	 * against `revision`.`rev_user_text`
	 *
	 * @param $user string
	 */",
 "/**
	 * Prepares the query and returns the limit of rows requested
	 */",
 "/**
	 * Extract fields from the database row and append them to a result array
	 *
	 * @param $row
	 * @return array
	 */",
 "/**
 * This query action adds a list of a specified user\'s contributions to the output.
 *
 * @ingroup API
 */",
 "/** Divehi (????????????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Deviathan (on dv.wikipedia.org)
 * @author Glacious
 * @author MF-Warburg
 * @author ???????? ????????????????
 */",
 "/**
 * API Module to facilitate sending of emails to users
 * @ingroup API
 */",
 "/** Hill Mari (?????????? ????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Amdf
 * @author Andrijko Z.
 */",
 "/**
	 * Use singular form for zero
	 *
	 * @param $count int
	 * @param $forms array
	 *
	 * @return string
	 */",
 "/**
 * Tigrinya (????????????)
 *
 * @ingroup Language
 */",
 "/**
	 * Run a refreshLinks job
	 * @return boolean success
	 */",
 "/**
 * Background job to update links for a given title.
 *
 * @ingroup JobQueue
 */",
 "/**
	 * Run a refreshLinks2 job
	 * @return boolean success
	 */",
 "/**
 * Background job to update links for a given title.
 * Newer version for high use templates.
 *
 * @ingroup JobQueue
 */",
 "/** Kurdish (Latin script) (???Kurd?? (lat??n??)???)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Asoxor
 * @author Bangin
 * @author Erdal Ronahi
 * @author Ferhengvan
 * @author George Animal
 * @author Gomada
 * @author Kaganer
 * @author Krinkle
 * @author Liangent
 * @author The Evil IP address
 * @author Welath??ja
 */",
 "/**
 * @group Search
 */",
 "/**
	 * @param $name string
	 */",
 "/** Old English (??nglisc)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Gott wisst
 * @author JJohnson
 * @author Omnipaedista
 * @author Spacebirdy
 * @author Tsepelcory
 * @author W??denhelm
 */",
 "/**
	 * @return PPFrame_DOM
	 */",
 "/**
	 * @param $args
	 * @return PPCustomFrame_DOM
	 */",
 "/**
	 * @param $values
	 * @return PPNode_DOM
	 */",
 "/**
	 * @throws MWException
	 * @return bool
	 */",
 "/**
	 * Preprocess some wikitext and return the document tree.
	 * This is the ghost of Parser::replace_variables().
	 *
	 * @param $text String: the text to parse
	 * @param $flags Integer: bitwise combination of:
	 *          Parser::PTD_FOR_INCLUSION    Handle <noinclude>/<includeonly> as if the text is being
	 *                                     included. Default is to assume a direct page view.
	 *
	 * The generated DOM tree must depend only on the input text and the flags.
	 * The DOM tree must be the same in OT_HTML and OT_WIKI mode, to avoid a regression of bug 4899.
	 *
	 * Any flag added to the $flags parameter here, or any other parameter liable to cause a
	 * change in the DOM tree for a given text, must be passed through the section identifier
	 * in the section edit link and thus back to extractSections().
	 *
	 * The output of this function is currently only cached in process memory, but a persistent
	 * cache may be implemented at a later date which takes further advantage of these strict
	 * dependency requirements.
	 *
	 * @return PPNode_DOM
	 */",
 "/**
	 * @param $text string
	 * @param $flags int
	 * @return string
	 */",
 "/**
 * @ingroup Parser
 */",
 "/**
	 * @return int
	 */",
 "/**
	 * @return array
	 */",
 "/**
 * Stack class to help Preprocessor::preprocessToObj()
 * @ingroup Parser
 */",
 "/**
	 * @return array
	 */",
 "/**
	 * Get the output string that would result if the close is not found.
	 *
	 * @return string
	 */",
 "/**
 * @ingroup Parser
 */",
 "/**
 * @ingroup Parser
 */",
 "/**
	 * Construct a new preprocessor frame.
	 * @param $preprocessor Preprocessor The parent preprocessor
	 */",
 "/**
	 * Create a new child frame
	 * $args is optionally a multi-root PPNode or array containing the template arguments
	 *
	 * @return PPTemplateFrame_DOM
	 */",
 "/**
	 * @throws MWException
	 * @param $root
	 * @param $flags int
	 * @return string
	 */",
 "/**
	 * @param $sep
	 * @param $flags
	 * @return string
	 */",
 "/**
	 * Implode with no flags specified
	 * This previously called implodeWithFlags but has now been inlined to reduce stack depth
	 *
	 * @return string
	 */",
 "/**
	 * Makes an object that, when expand()ed, will be the same as one obtained
	 * with implode()
	 *
	 * @return array
	 */",
 "/**
	 * Virtual implode with brackets
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * Returns true if there are no arguments in this frame
	 *
	 * @return bool
	 */",
 "/**
	 * Returns true if the infinite loop check is OK, false if a loop is detected
	 *
	 * @return bool
	 */",
 "/**
	 * Return true if the frame is a template frame
	 *
	 * @return bool
	 */",
 "/**
	 * Get a title of frame
	 *
	 * @return Title
	 */",
 "/**
 * An expansion frame, used as a context to expand the result of preprocessToObj()
 * @ingroup Parser
 */",
 "/**
	 * @param $preprocessor
	 * @param $parent PPFrame_DOM
	 * @param $numberedArgs array
	 * @param $namedArgs array
	 * @param $title Title
	 */",
 "/**
	 * Returns true if there are no arguments in this frame
	 *
	 * @return bool
	 */",
 "/**
	 * Return true if the frame is a template frame
	 *
	 * @return bool
	 */",
 "/**
 * Expansion frame with template arguments
 * @ingroup Parser
 */",
 "/**
	 * @return bool
	 */",
 "/**
 * Expansion frame with custom arguments
 * @ingroup Parser
 */",
 "/**
	 * @return DOMXPath
	 */",
 "/**
	 * @return bool|PPNode_DOM
	 */",
 "/**
	 * @return bool|PPNode_DOM
	 */",
 "/**
	 * @return bool|PPNode_DOM
	 */",
 "/**
	 * @param $type
	 *
	 * @return bool|PPNode_DOM
	 */",
 "/**
	 * @return int
	 */",
 "/**
	 * @param $i
	 * @return bool|PPNode_DOM
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * Split a <part> node into an associative array containing:
	 *    name          PPNode name
	 *    index         String index
	 *    value         PPNode value
	 *
	 * @return array
	 */",
 "/**
	 * Split an <ext> node into an associative array containing name, attr, inner and close
	 * All values in the resulting array are PPNodes. Inner and close are optional.
	 *
	 * @return array
	 */",
 "/**
	 * Split a <h> node
	 */",
 "/**
 * @ingroup Parser
 */",
 "/**
	 * @author Nikola Smolenski
	 */",
 "/** @dataProvider providePluralFourForms */",
 "/** @dataProvider providePluralTwoForms */",
 "/**
	 *Wrapper to verify text stay the same after applying conversion
	 * @param $text string Text to convert
	 * @param $variant string Language variant \'sr-ec\' or \'sr-el\'
	 * @param $msg string Optional message
	 */",
 "/**
	 * Wrapper to verify a text is different once converted to a variant.
	 * @param $text string Text to convert
	 * @param $variant string Language variant \'sr-ec\' or \'sr-el\'
	 * @param $msg string Optional message
	 */",
 "/**
	 * Verifiy the given Cyrillic text is not converted when using
	 * using the cyrillic variant and converted to Latin when using
	 * the Latin variant.
	 */",
 "/**
	 * Verifiy the given Latin text is not converted when using
	 * using the Latin variant and converted to Cyrillic when using
	 * the Cyrillic variant.
	 */",
 "/** Wrapper for converter::convertTo() method*/",
 "/** Tests for MediaWiki languages/LanguageTr.php */",
 "/** Ancient Greek (????????????? ??????????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author AndreasJS
 * @author Crazymadlover
 * @author Kaganer
 * @author Lefcant
 * @author LeighvsOptimvsMaximvs
 * @author Neachili
 * @author Nychus
 * @author Omnipaedista
 * @author Reedy
 * @author SPQRobin
 * @author Trixt
 * @author Yannos
 * @author ZaDiak
 */",
 "/**
	 * Constructor
	 *
	 * @param $params array
	 */",
 "/**
	 * @private
	 */",
 "/**
	 * @param $str
	 * @return array
	 */",
 "/**
	 * @param $list
	 * @param $path
	 * @param $item
	 */",
 "/**
	 * @param $tagset
	 * @param $depth int
	 */",
 "/**
	 * @param $text
	 * @param $value
	 * @param $attribs null
	 * @param $depth int
	 * @return string
	 */",
 "/**
	 * @param $str string
	 * @return String
	 */",
 "/**
	 *  Accessor for $this->licenses
	 *
	 * @return array
	 */",
 "/**
	 * Accessor for $this->html
	 *
	 * @param $value bool
	 *
	 * @return string
	 */",
 "/**
 * A License class for use on Special:Upload
 *
 * @ingroup SpecialPage
 *
 * @author ??var Arnfj??r?? Bjarmason <avarab@gmail.com>
 * @copyright Copyright ?? 2005, ??var Arnfj??r?? Bjarmason
 * @license http://www.gnu.org/copyleft/gpl.html GNU General Public License 2.0 or later
 */",
 "/**
	 * Constructor
	 *
	 * @param $str String: license name??
	 */",
 "/**
 * A License class for use on Special:Upload (represents a single type of license).
 */",
 "/** Gan (??????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Philip <philip.npc@gmail.com>
 * @author Symane
 * @author Vipuser
 */",
 "/**
	 * Convert from the nominative form of a noun to other cases
	 * Invoked with {{grammar:case|word}}
	 *
	 * Depending on word there are four different ways of converting to other cases.
	 * 1) Word consist of not cyrillic letters or is an abbreviation.
	 * 		Then result word is: word + hyphen + case ending.
	 *
	 * 2) Word consist of cyrillic letters.
	 * 2.1) Word is in plural.
	 * 		Then result word is: word - last letter + case ending. Ending of allative case here is \'????\'.
	 *
	 * 2.2) Word is in singular.
	 * 2.2.1) Word ends on consonant.
	 * 		Then result word is: word + case ending.
	 *
	 * 2.2.2) Word ends on vowel.
	 * 		Then result word is: word + \'??\' + case ending for cases != allative or comitative
	 * 		and word + case ending for allative or comitative. Ending of allative case here is \'??\'.
	 *
	 * @param $word string
	 * @param $case string
	 * @return string
	 */",
 "/** Ossetian (????????)
 *
 * @author Soslan Khubulov
 *
 * @ingroup Language
 */",
 "/**
	 * @param $address string|User string with an email address, or a User object
	 * @param $name String: human-readable name if a string address is given
	 * @param $realName String: human-readable real name if a string address is given
	 */",
 "/**
	 * Return formatted and quoted address to insert into SMTP headers
	 * @return string
	 */",
 "/**
 * Stores a single person\'s name and email address.
 * These are passed in via the constructor, and will be returned in SMTP
 * header format when requested.
 */",
 "/**
	 * Send mail using a PEAR mailer
	 *
	 * @param $mailer
	 * @param $dest
	 * @param $headers
	 * @param $body
	 *
	 * @return Status
	 */",
 "/**
	 * Creates a single string from an associative array
	 *
	 * @param $headers Associative Array: keys are header field names,
	 *                 values are ... values.
	 * @param $endl String: The end of line character.  Defaults to \"\n\"
	 * @return String
	 */",
 "/**
	 * Create a value suitable for the MessageId Header
	 *
	 * @return String
	 */",
 "/**
	 * This function will perform a direct (authenticated) login to
	 * a SMTP Server to use for mail relaying if \'wgSMTP\' specifies an
	 * array of parameters. It requires PEAR:Mail to do that.
	 * Otherwise it just uses the standard PHP \'mail\' function.
	 *
	 * @param $to MailAddress: recipient\'s email (or an array of them)
	 * @param $from MailAddress: sender\'s email
	 * @param $subject String: email\'s subject.
	 * @param $body String: email\'s text.
	 * @param $replyto MailAddress: optional reply-to email (default: null).
	 * @param $contentType String: optional custom Content-Type (default: text/plain; charset=UTF-8)
	 * @return Status object
	 */",
 "/**
	 * Set the mail error message in self::$mErrorString
	 *
	 * @param $code Integer: error number
	 * @param $string String: error message
	 */",
 "/**
	 * Converts a string into a valid RFC 822 \"phrase\", such as is used for the sender name
	 * @param $phrase string
	 * @return string
	 */",
 "/**
	 * Converts a string into quoted-printable format
	 * @since 1.17
	 */",
 "/**
 * Collection of static functions for sending mail
 */",
 "/**
	 * Send emails corresponding to the user $editor editing the page $title.
	 * Also updates wl_notificationtimestamp.
	 *
	 * May be deferred via the job queue.
	 *
	 * @param $editor User object
	 * @param $title Title object
	 * @param $timestamp
	 * @param $summary
	 * @param $minorEdit
	 * @param $oldid (default: false)
	 */",
 "/**
	 * Immediate version of notifyOnPageChange().
	 *
	 * Send emails corresponding to the user $editor editing the page $title.
	 * Also updates wl_notificationtimestamp.
	 *
	 * @param $editor User object
	 * @param $title Title object
	 * @param $timestamp string Edit timestamp
	 * @param $summary string Edit summary
	 * @param $minorEdit bool
	 * @param $oldid int Revision ID
	 * @param $watchers array of user IDs
	 */",
 "/**
	 * @param $editor User
	 * @param $title Title bool
	 * @param $minorEdit
	 * @return bool
	 */",
 "/**
	 * Generate the generic \"this page has been changed\" e-mail text.
	 */",
 "/**
	 * Compose a mail to a given user and either queue it for sending, or send it now,
	 * depending on settings.
	 *
	 * Call sendMails() to send any mails that were queued.
	 * @param $user User
	 */",
 "/**
	 * Send any queued mails
	 */",
 "/**
	 * Does the per-user customizations to a notification e-mail (name,
	 * timestamp in proper timezone, etc) and sends it out.
	 * Returns true if the mail was sent successfully.
	 *
	 * @param $watchingUser User object
	 * @return Boolean
	 * @private
	 */",
 "/**
	 * Same as sendPersonalised but does impersonal mail suitable for bulk
	 * mailing.  Takes an array of MailAddress objects.
	 */",
 "/**
 * This module processes the email notifications when the current page is
 * changed. It looks up the table watchlist to find out which users are watching
 * that page.
 *
 * The current implementation sends independent emails to each watching user for
 * the following reason:
 *
 * - Each watching user will be notified about the page edit time expressed in
 * his/her local time (UTC is shown additionally). To achieve this, we need to
 * find the individual timeoffset of each watching user from the preferences..
 *
 * Suggested improvement to slack down the number of sent emails: We could think
 * of sending out bulk mails (bcc:user1,user2...) for all these users having the
 * same timeoffset in their preferences.
 *
 * Visit the documentation pages under http://meta.wikipedia.com/Enotif
 *
 *
 */",
 "/**
	 * Throw an exception when trying to get the subject or talk page
	 * for a given namespace where it does not make sense.
	 * Special namespaces are defined in includes/Defines.php and have
	 * a value below 0 (ex: NS_SPECIAL = -1 , NS_MEDIA = -2)
	 *
	 * @param $index
	 * @param $method
	 *
	 * @return true
	 */",
 "/**
	 * Can pages in the given namespace be moved?
	 *
	 * @param $index Int: namespace index
	 * @return bool
	 */",
 "/**
	 * Is the given namespace is a subject (non-talk) namespace?
	 *
	 * @param $index Int: namespace index
	 * @return bool
	 * @since 1.19
	 */",
 "/**
	 * @see self::isSubject
	 * @deprecated Please use the more consistently named isSubject (since 1.19)
	 */",
 "/**
	 * Is the given namespace a talk namespace?
	 *
	 * @param $index Int: namespace index
	 * @return bool
	 */",
 "/**
	 * Get the talk namespace index for a given namespace
	 *
	 * @param $index Int: namespace index
	 * @return int
	 */",
 "/**
	 * Get the subject namespace index for a given namespace
	 * Special namespaces (NS_MEDIA, NS_SPECIAL) are always the subject.
	 *
	 * @param $index Int: Namespace index
	 * @return int
	 */",
 "/**
	 * Get the associated namespace.
	 * For talk namespaces, returns the subject (non-talk) namespace
	 * For subject (non-talk) namespaces, returns the talk namespace
	 *
	 * @param $index Int: namespace index
	 * @return int or null if no associated namespace could be found
	 */",
 "/**
	 * Returns whether the specified namespace exists
	 *
	 * @param $index
	 *
	 * @return bool
	 * @since 1.19
	 */",
 "/**
	 * Returns whether the specified namespaces are the same namespace
	 *
	 * @note It\'s possible that in the future we may start using something
	 * other than just namespace indexes. Under that circumstance making use
	 * of this function rather than directly doing comparison will make
	 * sure that code will not potentially break.
	 *
	 * @param $ns1 int The first namespace index
	 * @param $ns2 int The second namespae index
	 *
	 * @return bool
	 * @since 1.19
	 */",
 "/**
	 * Returns whether the specified namespaces share the same subject.
	 * eg: NS_USER and NS_USER wil return true, as well
	 *     NS_USER and NS_USER_TALK will return true.
	 *
	 * @param $ns1 int The first namespace index
	 * @param $ns2 int The second namespae index
	 *
	 * @return bool
	 * @since 1.19
	 */",
 "/**
	 * Returns array of all defined namespaces with their canonical
	 * (English) names.
	 *
	 * @return \\array
	 * @since 1.17
	 */",
 "/**
	 * Returns the canonical (English) name for a given index
	 *
	 * @param $index Int: namespace index
	 * @return string or false if no canonical definition.
	 */",
 "/**
	 * Returns the index for a given canonical name, or NULL
	 * The input *must* be converted to lower case first
	 *
	 * @param $name String: namespace name
	 * @return int
	 */",
 "/**
	 * Returns an array of the namespaces (by integer id) that exist on the
	 * wiki. Used primarily by the api in help documentation.
	 * @return array
	 */",
 "/**
	 * Can this namespace ever have a talk namespace?
	 *
	 * @param $index Int: namespace index
	 * @return bool
	 */",
 "/**
	 * Does this namespace contain content, for the purposes of calculating
	 * statistics, etc?
	 *
	 * @param $index Int: index to check
	 * @return bool
	 */",
 "/**
	 * Can pages in a namespace be watched?
	 *
	 * @param $index Int
	 * @return bool
	 */",
 "/**
	 * Does the namespace allow subpages?
	 *
	 * @param $index int Index to check
	 * @return bool
	 */",
 "/**
	 * Get a list of all namespace indices which are considered to contain content
	 * @return array of namespace indices
	 */",
 "/**
	 * Is the namespace first-letter capitalized?
	 *
	 * @param $index int Index to check
	 * @return bool
	 */",
 "/**
	 * Does the namespace (potentially) have different aliases for different
	 * genders. Not all languages make a distinction here.
	 *
	 * @since 1.18
	 * @param $index int Index to check
	 * @return bool
	 */",
 "/**
 * This is a utility class with only static functions
 * for dealing with namespaces that encodes all the
 * \"magic\" behaviors of them based on index.  The textual
 * names of the namespaces are handled by Language.php.
 *
 * These are synonyms for the names given in the language file
 * Users and translators should not change them
 *
 */",
 "/**
	 * @param $file
	 * @return bool
	 */",
 "/**
	 * Render files as PNG
	 *
	 * @param $text
	 * @param $mime
	 * @param $params
	 * @return array
	 */",
 "/**
	 * Get width and height from the bmp header.
	 *
	 * @param $image
	 * @param $filename
	 * @return array
	 */",
 "/**
 * Handler for Microsoft\'s bitmap format; getimagesize() doesn\'t
 * support these files
 *
 * @ingroup Media
 */",
 "/**
	 * This module uses a custom feed wrapper printer.
	 *
	 * @return ApiFormatFeedWrapper
	 */",
 "/**
	 * Make a nested call to the API to request watchlist items in the last $hours.
	 * Wrap the result as an RSS/Atom feed.
	 */",
 "/**
	 * @param $info array
	 * @return FeedItem
	 */",
 "/**
 * This action allows users to get their watchlist items in RSS/Atom formats.
 * When executed, it performs a nested call to the API to get the needed data,
 * and formats it in a proper format.
 *
 * @ingroup API
 */",
 "/** Church Slavic (?????????????????????? / ??????????????????????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Krinkle
 * @author Omnipaedista
 * @author Svetko
 * @author Wolliger Mensch
 * @author ??????
 */",
 "/**
	 * Just get an empty form with a single submit button
	 * @return array
	 */",
 "/**
	 * This can be either formed or formless depending on the session token given
	 */",
 "/**
	 * Get token to watch (or unwatch) a page for a user
	 *
	 * @param Title $title Title object of page to watch
	 * @param User $user User for whom the action is going to be performed
	 * @param string $action Optionally override the action to \'unwatch\'
	 * @return string Token
	 * @since 1.18
	 */",
 "/**
	 * Get token to unwatch (or watch) a page for a user
	 *
	 * @param Title $title Title object of page to unwatch
	 * @param User $user User for whom the action is going to be performed
	 * @param string $action Optionally override the action to \'watch\'
	 * @return string Token
	 * @since 1.18
	 */",
 "/**
 * Performs the watch and unwatch actions on a page
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA
 *
 * @file
 * @ingroup Actions
 */",
 "/**
 * action=protect handler
 *
 * Copyright ?? 2012 Timo Tijhof
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA
 *
 * @file
 * @ingroup Actions
 * @author Timo Tijhof
 */",
 "/**
	 * Get the changes in the DB2 database scheme since MediaWiki 1.14
	 * @return array
	 */",
 "/**
 * Class for handling updates to IBM_DB2 databases.
 *
 * @ingroup Deployment
 * @since 1.17
 */",
 "/**
	 * @param  $randstr
	 * @param  $limit
	 * @param  $namespace
	 * @param $resultPageSet ApiPageSet
	 * @param  $redirect
	 * @return void
	 */",
 "/**
	 * @param $resultPageSet ApiPageSet
	 * @return int
	 */",
 "/**
	 * @param $resultPageSet ApiPageSet
	 * @return void
	 */",
 "/**
 * Query module to get list of random pages
 *
 * @ingroup API
 */",
 "/**
	 * Constructor
	 *
	 * @param $conf array
	 */",
 "/**
	 * Reduce memory usage to reduce the impact of circular references
	 */",
 "/**
	 * Do various kinds of initialisation on the first call of the parser
	 */",
 "/**
	 * Clear Parser state
	 *
	 * @private
	 */",
 "/**
	 * Convert wikitext to HTML
	 * Do not call this function recursively.
	 *
	 * @param $text String: text we want to parse
	 * @param $title Title object
	 * @param $options ParserOptions
	 * @param $linestart boolean
	 * @param $clearState boolean
	 * @param $revid Int: number to pass in {{REVISIONID}}
	 * @return ParserOutput a ParserOutput
	 */",
 "/**
	 * Recursive parser entry point that can be called from an extension tag
	 * hook.
	 *
	 * If $frame is not provided, then template variables (e.g., {{{1}}}) within $text are not expanded
	 *
	 * @param $text String: text extension wants to have parsed
	 * @param $frame PPFrame: The frame to use for expanding any template variables
	 *
	 * @return string
	 */",
 "/**
	 * Expand templates and variables in the text, producing valid, static wikitext.
	 * Also removes comments.
	 */",
 "/**
	 * Recursive parser entry point that can be called from an extension tag
	 * hook.
	 *
	 * @param $text String: text to be expanded
	 * @param $frame PPFrame: The frame to use for expanding any template variables
	 * @return String
	 * @since 1.19
	 */",
 "/**
	 * Process the wikitext for the ?preload= feature. (bug 5210)
	 *
	 * <noinclude>, <includeonly> etc. are parsed as for template transclusion,
	 * comments, templates, arguments, tags hooks and parser functions are untouched.
	 *
	 * @param $text String
	 * @param $title Title
	 * @param $options ParserOptions
	 * @return String
	 */",
 "/**
	 * Get a random string
	 *
	 * @return string
	 */",
 "/**
	 * Set the current user.
	 * Should only be used when doing pre-save transform.
	 *
	 * @param $user Mixed: User object or null (to reset)
	 */",
 "/**
	 * Accessor for mUniqPrefix.
	 *
	 * @return String
	 */",
 "/**
	 * Set the context title
	 *
	 * @param $t Title
	 */",
 "/**
	 * Accessor for the Title object
	 *
	 * @return Title object
	 */",
 "/**
	 * Accessor/mutator for the Title object
	 *
	 * @param $x New Title object or null to just get the current one
	 * @return Title object
	 */",
 "/**
	 * Set the output type
	 *
	 * @param $ot Integer: new value
	 */",
 "/**
	 * Accessor/mutator for the output type
	 *
	 * @param $x New value or null to just get the current one
	 * @return Integer
	 */",
 "/**
	 * Get the ParserOutput object
	 *
	 * @return ParserOutput object
	 */",
 "/**
	 * Get the ParserOptions object
	 *
	 * @return ParserOptions object
	 */",
 "/**
	 * Accessor/mutator for the ParserOptions object
	 *
	 * @param $x New value or null to just get the current one
	 * @return Current ParserOptions object
	 */",
 "/**
	 * @return int
	 */",
 "/**
	 * @param $id int
	 */",
 "/**
	 * Get a language object for use in parser functions such as {{FORMATNUM:}}
	 * @return Language
	 */",
 "/**
	 * Get the target language for the content being parsed. This is usually the 
	 * language that the content is in. 
	 */",
 "/**
	 * Get the language object for language conversion
	 */",
 "/**
	 * Get a User object either from $this->mUser, if set, or from the
	 * ParserOptions object otherwise
	 *
	 * @return User object
	 */",
 "/**
	 * Get a preprocessor object
	 *
	 * @return Preprocessor instance
	 */",
 "/**
	 * Replaces all occurrences of HTML-style comments and the given tags
	 * in the text with a random marker and returns the next text. The output
	 * parameter $matches will be an associative array filled with data in
	 * the form:
	 *   \'UNIQ-xxxxx\' => array(
	 *     \'element\',
	 *     \'tag content\',
	 *     array( \'param\' => \'x\' ),
	 *     \'<element param=\"x\">tag content</element>\' ) )
	 *
	 * @param $elements array list of element names. Comments are always extracted.
	 * @param $text string Source text string.
	 * @param $matches array Out parameter, Array: extracted tags
	 * @param $uniq_prefix string
	 * @return String: stripped text
	 */",
 "/**
	 * Get a list of strippable XML-like elements
	 *
	 * @return array
	 */",
 "/**
	 * Add an item to the strip state
	 * Returns the unique tag which must be inserted into the stripped text
	 * The tag will be replaced with the original text in unstrip()
	 *
	 * @param $text string
	 *
	 * @return string
	 */",
 "/**
	 * parse the wiki syntax used to render tables
	 *
	 * @private
	 */",
 "/**
	 * Helper function for parse() that transforms wiki markup into
	 * HTML. Only called for $mOutputType == self::OT_HTML.
	 *
	 * @private
	 *
	 * @param $text string
	 * @param $isMain bool
	 * @param $frame bool
	 *
	 * @return string
	 */",
 "/**
	 * Replace special strings like \"ISBN xxx\" and \"RFC xxx\" with
	 * magic external links.
	 *
	 * DML
	 * @private
	 *
	 * @param $text string
	 *
	 * @return string
	 */",
 "/**
	 * @throws MWException
	 * @param $m array
	 * @return HTML|string
	 */",
 "/**
	 * Make a free external link, given a user-supplied URL
	 *
	 * @param $url string
	 *
	 * @return string HTML
	 * @private
	 */",
 "/**
	 * Parse headers and return html
	 *
	 * @private
	 *
	 * @param $text string
	 *
	 * @return string
	 */",
 "/**
	 * Replace single quotes with HTML markup
	 * @private
	 *
	 * @param $text string
	 *
	 * @return string the altered text
	 */",
 "/**
	 * Helper function for doAllQuotes()
	 *
	 * @param $text string
	 *
	 * @return string
	 */",
 "/**
	 * Replace external links (REL)
	 *
	 * Note: this is all very hackish and the order of execution matters a lot.
	 * Make sure to run maintenance/parserTests.php if you change this code.
	 *
	 * @private
	 *
	 * @param $text string
	 *
	 * @return string
	 */",
 "/**
	 * Get an associative array of additional HTML attributes appropriate for a
	 * particular external link.  This currently may include rel => nofollow
	 * (depending on configuration, namespace, and the URL\'s domain) and/or a
	 * target attribute (depending on configuration).
	 *
	 * @param $url String|bool optional URL, to extract the domain from for rel =>
	 *   nofollow if appropriate
	 * @return Array associative array of HTML attributes
	 */",
 "/**
	 * Replace unusual URL escape codes with their equivalent characters
	 *
	 * @param $url String
	 * @return String
	 *
	 * @todo  This can merge genuinely required bits in the path or query string,
	 *        breaking legit URLs. A proper fix would treat the various parts of
	 *        the URL differently; as a workaround, just use the output for
	 *        statistical records, not for actual linking/output.
	 */",
 "/**
	 * Callback function used in replaceUnusualEscapes().
	 * Replaces unusual URL escape codes with their equivalent character
	 *
	 * @param $matches array
	 *
	 * @return string
	 */",
 "/**
	 * make an image if it\'s allowed, either through the global
	 * option, through the exception, or through the on-wiki whitelist
	 * @private
	 *
	 * $param $url string
	 *
	 * @return string
	 */",
 "/**
	 * Process [[ ]] wikilinks
	 *
	 * @param $s string
	 *
	 * @return String: processed text
	 *
	 * @private
	 */",
 "/**
					 * Strip the whitespace Category links produce, see bug 87
					 * @todo We might want to use trim($tmp, \"\n\") here.
					 */",
 "/**
	 * Process [[ ]] wikilinks (RIL)
	 * @return LinkHolderArray
	 *
	 * @private
	 */",
 "/**
	 * Render a forced-blue link inline; protect against double expansion of
	 * URLs if we\'re in a mode that prepends full URL prefixes to internal links.
	 * Since this little disaster has to split off the trail text to avoid
	 * breaking URLs in the following text without breaking trails on the
	 * wiki links, it\'s been made into a horrible function.
	 *
	 * @param $nt Title
	 * @param $text String
	 * @param $query Array or String
	 * @param $trail String
	 * @param $prefix String
	 * @return String: HTML-wikitext mix oh yuck
	 */",
 "/**
	 * Insert a NOPARSE hacky thing into any inline links in a chunk that\'s
	 * going to go through further parsing steps before inline URL expansion.
	 *
	 * Not needed quite as much as it used to be since free links are a bit
	 * more sensible these days. But bracketed links are still an issue.
	 *
	 * @param $text String: more-or-less HTML
	 * @return String: less-or-more HTML with NOPARSE bits
	 */",
 "/**
	 * Return true if subpage links should be expanded on this page.
	 * @return Boolean
	 */",
 "/**
	 * Handle link to subpage if necessary
	 *
	 * @param $target String: the source of the link
	 * @param &$text String: the link text, modified as necessary
	 * @return string the full name of the link
	 * @private
	 */",
 "/**
	 * getCommon() returns the length of the longest common substring
	 * of both arguments, starting at the beginning of both.
	 * @private
	 *
	 * @param $st1 string
	 * @param $st2 string
	 *
	 * @return int
	 */",
 "/**
	 * These next three functions open, continue, and close the list
	 * element appropriate to the prefix character passed into them.
	 * @private
	 *
	 * @param $char char
	 *
	 * @return string
	 */",
 "/**
	 * TODO: document
	 * @param $char String
	 * @private
	 *
	 * @return string
	 */",
 "/**
	 * TODO: document
	 * @param $char String
	 * @private
	 *
	 * @return string
	 */",
 "/**
	 * Make lists from lines starting with \':\', \'*\', \'#\', etc. (DBL)
	 *
	 * @param $text String
	 * @param $linestart Boolean: whether or not this is at the start of a line.
	 * @private
	 * @return string the lists rendered as HTML
	 */",
 "/**
	 * Split up a string on \':\', ignoring any occurences inside tags
	 * to prevent illegal overlapping.
	 *
	 * @param $str String the string to split
	 * @param &$before String set to everything before the \':\'
	 * @param &$after String set to everything after the \':\'
	 * @return String the position of the \':\', or false if none found
	 */",
 "/**
	 * Return value of a magic variable (like PAGENAME)
	 *
	 * @private
	 *
	 * @param $index integer
	 * @param $frame PPFrame
	 *
	 * @return string
	 */",
 "/**
	 * initialise the magic variables (like CURRENTMONTHNAME) and substitution modifiers
	 *
	 * @private
	 */",
 "/**
	 * Preprocess some wikitext and return the document tree.
	 * This is the ghost of replace_variables().
	 *
	 * @param $text String: The text to parse
	 * @param $flags Integer: bitwise combination of:
	 *          self::PTD_FOR_INCLUSION    Handle <noinclude>/<includeonly> as if the text is being
	 *                                     included. Default is to assume a direct page view.
	 *
	 * The generated DOM tree must depend only on the input text and the flags.
	 * The DOM tree must be the same in OT_HTML and OT_WIKI mode, to avoid a regression of bug 4899.
	 *
	 * Any flag added to the $flags parameter here, or any other parameter liable to cause a
	 * change in the DOM tree for a given text, must be passed through the section identifier
	 * in the section edit link and thus back to extractSections().
	 *
	 * The output of this function is currently only cached in process memory, but a persistent
	 * cache may be implemented at a later date which takes further advantage of these strict
	 * dependency requirements.
	 *
	 * @private
	 *
	 * @return PPNode
	 */",
 "/**
	 * Return a three-element array: leading whitespace, string contents, trailing whitespace
	 *
	 * @param $s string
	 *
	 * @return array
	 */",
 "/**
	 * Replace magic variables, templates, and template arguments
	 * with the appropriate text. Templates are substituted recursively,
	 * taking care to avoid infinite loops.
	 *
	 * Note that the substitution depends on value of $mOutputType:
	 *  self::OT_WIKI: only {{subst:}} templates
	 *  self::OT_PREPROCESS: templates but not extension tags
	 *  self::OT_HTML: all templates and extension tags
	 *
	 * @param $text String the text to transform
	 * @param $frame PPFrame Object describing the arguments passed to the template.
	 *        Arguments may also be provided as an associative array, as was the usual case before MW1.12.
	 *        Providing arguments this way may be useful for extensions wishing to perform variable replacement explicitly.
	 * @param $argsOnly Boolean only do argument (triple-brace) expansion, not double-brace expansion
	 * @private
	 *
	 * @return string
	 */",
 "/**
	 * Clean up argument array - refactored in 1.9 so parserfunctions can use it, too.
	 *
	 * @param $args array
	 *
	 * @return array
	 */",
 "/**
	 * Warn the user when a parser limitation is reached
	 * Will warn at most once the user per limitation type
	 *
	 * @param $limitationType String: should be one of:
	 *   \'expensive-parserfunction\' (corresponding messages:
	 *       \'expensive-parserfunction-warning\',
	 *       \'expensive-parserfunction-category\')
	 *   \'post-expand-template-argument\' (corresponding messages:
	 *       \'post-expand-template-argument-warning\',
	 *       \'post-expand-template-argument-category\')
	 *   \'post-expand-template-inclusion\' (corresponding messages:
	 *       \'post-expand-template-inclusion-warning\',
	 *       \'post-expand-template-inclusion-category\')
	 * @param $current Current value
	 * @param $max Maximum allowed, when an explicit limit has been
	 *	 exceeded, provide the values (optional)
	 */",
 "/**
	 * Return the text of a template, after recursively
	 * replacing any variables or templates within the template.
	 *
	 * @param $piece Array: the parts of the template
	 *  $piece[\'title\']: the title, i.e. the part before the |
	 *  $piece[\'parts\']: the parameter array
	 *  $piece[\'lineStart\']: whether the brace was at the start of a line
	 * @param $frame PPFrame The current frame, contains template arguments
	 * @return String: the text of the template
	 * @private
	 */",
 "/**
	 * Get the semi-parsed DOM representation of a template with a given title,
	 * and its redirect destination title. Cached.
	 *
	 * @param $title Title
	 *
	 * @return array
	 */",
 "/**
	 * Fetch the unparsed text of a template and register a reference to it.
	 * @param Title $title
	 * @return Array ( string or false, Title )
	 */",
 "/**
	 * Fetch the unparsed text of a template and register a reference to it.
	 * @param Title $title
	 * @return mixed string or false
	 */",
 "/**
	 * Static function to get a template
	 * Can be overridden via ParserOptions::setTemplateCallback().
	 *
	 * @parma $title Title
	 * @param $parser Parser
	 *
	 * @return array
	 */",
 "/**
	 * Fetch a file and its title and register a reference to it.
	 * If \'broken\' is a key in $options then the file will appear as a broken thumbnail.
	 * @param Title $title
	 * @param Array $options Array of options to RepoGroup::findFile
	 * @return File|false
	 */",
 "/**
	 * Fetch a file and its title and register a reference to it.
	 * If \'broken\' is a key in $options then the file will appear as a broken thumbnail.
	 * @param Title $title
	 * @param Array $options Array of options to RepoGroup::findFile
	 * @return Array ( File or false, Title of file )
	 */",
 "/**
	 * Transclude an interwiki link.
	 *
	 * @param $title Title
	 * @param $action
	 *
	 * @return string
	 */",
 "/**
	 * @param $url string
	 * @return Mixed|String
	 */",
 "/**
	 * Triple brace replacement -- used for template arguments
	 * @private
	 *
	 * @param $peice array
	 * @param $frame PPFrame
	 *
	 * @return array
	 */",
 "/**
	 * Return the text to be used for a given extension tag.
	 * This is the ghost of strip().
	 *
	 * @param $params Associative array of parameters:
	 *     name       PPNode for the tag name
	 *     attr       PPNode for unparsed text where tag attributes are thought to be
	 *     attributes Optional associative array of parsed attributes
	 *     inner      Contents of extension element
	 *     noClose    Original text did not have a close tag
	 * @param $frame PPFrame
	 *
	 * @return string
	 */",
 "/**
	 * Increment an include size counter
	 *
	 * @param $type String: the type of expansion
	 * @param $size Integer: the size of the text
	 * @return Boolean: false if this inclusion would take it over the maximum, true otherwise
	 */",
 "/**
	 * Increment the expensive function count
	 *
	 * @return Boolean: false if the limit has been exceeded
	 */",
 "/**
	 * Strip double-underscore items like __NOGALLERY__ and __NOTOC__
	 * Fills $this->mDoubleUnderscores, returns the modified text
	 *
	 * @param $text string
	 *
	 * @return string
	 */",
 "/**
	 * Add a tracking category, getting the title from a system message,
	 * or print a debug message if the title is invalid.
	 *
	 * @param $msg String: message key
	 * @return Boolean: whether the addition was successful
	 */",
 "/**
	 * This function accomplishes several tasks:
	 * 1) Auto-number headings if that option is enabled
	 * 2) Add an [edit] link to sections for users who have enabled the option and can edit the page
	 * 3) Add a Table of contents on the top for users who have enabled the option
	 * 4) Auto-anchor headings
	 *
	 * It loops through all headlines, collects the necessary data, then splits up the
	 * string and re-inserts the newly formatted headlines.
	 *
	 * @param $text String
	 * @param $origText String: original, untouched wikitext
	 * @param $isMain Boolean
	 * @private
	 */",
 "/**
	 * Transform wiki markup when saving a page by doing \r\n -> \n
	 * conversion, substitting signatures, {{subst:}} templates, etc.
	 *
	 * @param $text String: the text to transform
	 * @param $title Title: the Title object for the current article
	 * @param $user User: the User object describing the current user
	 * @param $options ParserOptions: parsing options
	 * @param $clearState Boolean: whether to clear the parser state first
	 * @return String: the altered wiki markup
	 */",
 "/**
	 * Pre-save transform helper function
	 * @private
	 *
	 * @param $text string
	 * @param $user User
	 *
	 * @return string
	 */",
 "/**
	 * Fetch the user\'s signature text, if any, and normalize to
	 * validated, ready-to-insert wikitext.
	 * If you have pre-fetched the nickname or the fancySig option, you can
	 * specify them here to save a database query.
	 * Do not reuse this parser instance after calling getUserSig(),
	 * as it may have changed if it\'s the $wgParser.
	 *
	 * @param $user User
	 * @param $nickname String|bool nickname to use or false to use user\'s default nickname
	 * @param $fancySig Boolean|null whether the nicknname is the complete signature
	 *                  or null to use default value
	 * @return string
	 */",
 "/**
	 * Check that the user\'s signature contains no bad XML
	 *
	 * @param $text String
	 * @return mixed An expanded string, or false if invalid.
	 */",
 "/**
	 * Clean up signature text
	 *
	 * 1) Strip ~~~, ~~~~ and ~~~~~ out of signatures @see cleanSigInSig
	 * 2) Substitute all transclusions
	 *
	 * @param $text String
	 * @param $parsing bool Whether we\'re cleaning (preferences save) or parsing
	 * @return String: signature text
	 */",
 "/**
	 * Strip ~~~, ~~~~ and ~~~~~ out of signatures
	 *
	 * @param $text String
	 * @return String: signature text with /~{3,5}/ removed
	 */",
 "/**
	 * Set up some variables which are usually set up in parse()
	 * so that an external function can call some class members with confidence
	 *
	 * @param $title Title|null
	 * @param $options ParserOptions
	 * @param $outputType
	 * @param $clearState bool
	 */",
 "/**
	 * @param $title Title|null
	 * @param $options ParserOptions
	 * @param $outputType
	 * @param $clearState bool
	 */",
 "/**
	 * Wrapper for preprocess()
	 *
	 * @param $text String: the text to preprocess
	 * @param $options ParserOptions: options
	 * @param $title Title object or null to use $wgTitle
	 * @return String
	 */",
 "/**
	 * Create an HTML-style tag, e.g. <yourtag>special text</yourtag>
	 * The callback should have the following form:
	 *    function myParserHook( $text, $params, $parser, $frame ) { ... }
	 *
	 * Transform and return $text. Use $parser for any required context, e.g. use
	 * $parser->getTitle() and $parser->getOptions() not $wgTitle or $wgOut->mParserOptions
	 *
	 * Hooks may return extended information by returning an array, of which the
	 * first numbered element (index 0) must be the return string, and all other
	 * entries are extracted into local variables within an internal function
	 * in the Parser class.
	 *
	 * This interface (introduced r61913) appears to be undocumented, but
	 * \'markerName\' is used by some core tag hooks to override which strip
	 * array their results are placed in. **Use great caution if attempting
	 * this interface, as it is not documented and injudicious use could smash
	 * private variables.**
	 *
	 * @param $tag Mixed: the tag to use, e.g. \'hook\' for <hook>
	 * @param $callback Mixed: the callback function (and object) to use for the tag
	 * @return The old value of the mTagHooks array associated with the hook
	 */",
 "/**
	 * As setHook(), but letting the contents be parsed.
	 *
	 * Transparent tag hooks are like regular XML-style tag hooks, except they
	 * operate late in the transformation sequence, on HTML instead of wikitext.
	 *
	 * This is probably obsoleted by things dealing with parser frames?
	 * The only extension currently using it is geoserver.
	 *
	 * @since 1.10
	 * @todo better document or deprecate this
	 *
	 * @param $tag Mixed: the tag to use, e.g. \'hook\' for <hook>
	 * @param $callback Mixed: the callback function (and object) to use for the tag
	 * @return The old value of the mTagHooks array associated with the hook
	 */",
 "/**
	 * Remove all tag hooks
	 */",
 "/**
	 * Create a function, e.g. {{sum:1|2|3}}
	 * The callback function should have the form:
	 *    function myParserFunction( &$parser, $arg1, $arg2, $arg3 ) { ... }
	 *
	 * Or with SFH_OBJECT_ARGS:
	 *    function myParserFunction( $parser, $frame, $args ) { ... }
	 *
	 * The callback may either return the text result of the function, or an array with the text
	 * in element 0, and a number of flags in the other elements. The names of the flags are
	 * specified in the keys. Valid flags are:
	 *   found                     The text returned is valid, stop processing the template. This
	 *                             is on by default.
	 *   nowiki                    Wiki markup in the return value should be escaped
	 *   isHTML                    The returned text is HTML, armour it against wikitext transformation
	 *
	 * @param $id String: The magic word ID
	 * @param $callback Mixed: the callback function (and object) to use
	 * @param $flags Integer: a combination of the following flags:
	 *     SFH_NO_HASH   No leading hash, i.e. {{plural:...}} instead of {{#if:...}}
	 *
	 *     SFH_OBJECT_ARGS   Pass the template arguments as PPNode objects instead of text. This
	 *     allows for conditional expansion of the parse tree, allowing you to eliminate dead
	 *     branches and thus speed up parsing. It is also possible to analyse the parse tree of
	 *     the arguments, and to control the way they are expanded.
	 *
	 *     The $frame parameter is a PPFrame. This can be used to produce expanded text from the
	 *     arguments, for instance:
	 *         $text = isset( $args[0] ) ? $frame->expand( $args[0] ) : \'\';
	 *
	 *     For technical reasons, $args[0] is pre-expanded and will be a string. This may change in
	 *     future versions. Please call $frame->expand() on it anyway so that your code keeps
	 *     working if/when this is changed.
	 *
	 *     If you want whitespace to be trimmed from $args, you need to do it yourself, post-
	 *     expansion.
	 *
	 *     Please read the documentation in includes/parser/Preprocessor.php for more information
	 *     about the methods available in PPFrame and PPNode.
	 *
	 * @return The old callback function for this name, if any
	 */",
 "/**
	 * Get all registered function hook identifiers
	 *
	 * @return Array
	 */",
 "/**
	 * Create a tag function, e.g. <test>some stuff</test>.
	 * Unlike tag hooks, tag functions are parsed at preprocessor level.
	 * Unlike parser functions, their content is not preprocessed.
	 */",
 "/**
	 * @todo FIXME: Update documentation. makeLinkObj() is deprecated.
	 * Replace <!--LINK--> link placeholders with actual links, in the buffer
	 * Placeholders created in Skin::makeLinkObj()
	 *
	 * @param $text string
	 * @param $options int
	 *
	 * @return array of link CSS classes, indexed by PDBK.
	 */",
 "/**
	 * Replace <!--LINK--> link placeholders with plain text of links
	 * (not HTML-formatted).
	 *
	 * @param $text String
	 * @return String
	 */",
 "/**
	 * Renders an image gallery from a text with one line per image.
	 * text labels may be given by using |-style alternative text. E.g.
	 *   Image:one.jpg|The number \"1\"
	 *   Image:tree.jpg|A tree
	 * given as text will return the HTML of a gallery with two images,
	 * labeled \'The number \"1\"\' and
	 * \'A tree\'.
	 *
	 * @param string $text
	 * @param array $params
	 * @return string HTML
	 */",
 "/**
	 * @param $handler
	 * @return array
	 */",
 "/**
	 * Parse image options text and use it to make an image
	 *
	 * @param $title Title
	 * @param $options String
	 * @param $holders LinkHolderArray|false
	 * @return string HTML
	 */",
 "/**
	 * @param $caption
	 * @param $holders LinkHolderArray
	 * @return mixed|String
	 */",
 "/**
	 * Set a flag in the output object indicating that the content is dynamic and
	 * shouldn\'t be cached.
	 */",
 "/**
	 * Callback from the Sanitizer for expanding items found in HTML attribute
	 * values, so they can be safely tested and escaped.
	 *
	 * @param $text String
	 * @param $frame PPFrame
	 * @return String
	 */",
 "/**
	 * Accessor
	 *
	 * @return array
	 */",
 "/**
	 * Replace transparent tags in $text with the values given by the callbacks.
	 *
	 * Transparent tag hooks are like regular XML-style tag hooks, except they
	 * operate late in the transformation sequence, on HTML instead of wikitext.
	 *
	 * @param $text string
	 *
	 * @return string
	 */",
 "/**
	 * Break wikitext input into sections, and either pull or replace
	 * some particular section\'s text.
	 *
	 * External callers should use the getSection and replaceSection methods.
	 *
	 * @param $text String: Page wikitext
	 * @param $section String: a section identifier string of the form:
	 *   <flag1> - <flag2> - ... - <section number>
	 *
	 * Currently the only recognised flag is \"T\", which means the target section number
	 * was derived during a template inclusion parse, in other words this is a template
	 * section edit link. If no flags are given, it was an ordinary section edit link.
	 * This flag is required to avoid a section numbering mismatch when a section is
	 * enclosed by <includeonly> (bug 6563).
	 *
	 * The section number 0 pulls the text before the first heading; other numbers will
	 * pull the given section along with its lower-level subsections. If the section is
	 * not found, $mode=get will return $newtext, and $mode=replace will return $text.
	 *
	 * Section 0 is always considered to exist, even if it only contains the empty
	 * string. If $text is the empty string and section 0 is replaced, $newText is
	 * returned.
	 *
	 * @param $mode String: one of \"get\" or \"replace\"
	 * @param $newText String: replacement text for section data.
	 * @return String: for \"get\", the extracted section text.
	 *                 for \"replace\", the whole page with the section replaced.
	 */",
 "/**
	 * This function returns the text of a section, specified by a number ($section).
	 * A section is text under a heading like == Heading == or \<h1\>Heading\</h1\>, or
	 * the first section before any such heading (section 0).
	 *
	 * If a section contains subsections, these are also returned.
	 *
	 * @param $text String: text to look in
	 * @param $section String: section identifier
	 * @param $deftext String: default to return if section is not found
	 * @return string text of the requested section
	 */",
 "/**
	 * This function returns $oldtext after the content of the section
	 * specified by $section has been replaced with $text. If the target
	 * section does not exist, $oldtext is returned unchanged.
	 *
	 * @param $oldtext String: former text of the article
	 * @param $section Numeric: section identifier
	 * @param $text String: replacing text
	 * @return String: modified text
	 */",
 "/**
	 * Get the ID of the revision we are parsing
	 *
	 * @return Mixed: integer or null
	 */",
 "/**
	 * Get the revision object for $this->mRevisionId
	 *
	 * @return Revision|null either a Revision object or null
	 */",
 "/**
	 * Get the timestamp associated with the current revision, adjusted for
	 * the default server-local timestamp
	 */",
 "/**
	 * Get the name of the user that edited the last revision
	 *
	 * @return String: user name
	 */",
 "/**
	 * Mutator for $mDefaultSort
	 *
	 * @param $sort New value
	 */",
 "/**
	 * Accessor for $mDefaultSort
	 * Will use the empty string if none is set.
	 *
	 * This value is treated as a prefix, so the
	 * empty string is equivalent to sorting by
	 * page name.
	 *
	 * @return string
	 */",
 "/**
	 * Accessor for $mDefaultSort
	 * Unlike getDefaultSort(), will return false if none is set
	 *
	 * @return string or false
	 */",
 "/**
	 * Try to guess the section anchor name based on a wikitext fragment
	 * presumably extracted from a heading, for example \"Header\" from
	 * \"== Header ==\".
	 *
	 * @param $text string
	 *
	 * @return string
	 */",
 "/**
	 * Same as guessSectionNameFromWikiText(), but produces legacy anchors
	 * instead.  For use in redirects, since IE6 interprets Redirect: headers
	 * as something other than UTF-8 (apparently?), resulting in breakage.
	 *
	 * @param $text String: The section name
	 * @return string An anchor
	 */",
 "/**
	 * Strips a text string of wikitext for use in a section anchor
	 *
	 * Accepts a text string and then removes all wikitext from the
	 * string and leaves only the resultant text (i.e. the result of
	 * [[User:WikiSysop|Sysop]] would be \"Sysop\" and the result of
	 * [[User:WikiSysop]] would be \"User:WikiSysop\") - this is intended
	 * to create valid section anchors by mimicing the output of the
	 * parser when headings are parsed.
	 *
	 * @param $text String: text string to be stripped of wikitext
	 * for use in a Section anchor
	 * @return Filtered text string
	 */",
 "/**
	 * strip/replaceVariables/unstrip for preprocessor regression testing
	 *
	 * @param $text string
	 * @param $title Title
	 * @param $options ParserOptions
	 * @param $outputType int
	 *
	 * @return string
	 */",
 "/**
	 * @param $text string
	 * @param $title Title
	 * @param $options ParserOptions
	 * @return string
	 */",
 "/**
	 * @param $text
	 * @param $title Title
	 * @param $options ParserOptions
	 * @return string
	 */",
 "/**
	 * Call a callback function on all regions of the given text that are not
	 * inside strip markers, and replace those regions with the return value
	 * of the callback. For example, with input:
	 *
	 *  aaa<MARKER>bbb
	 *
	 * This will call the callback function twice, with \'aaa\' and \'bbb\'. Those
	 * two strings will be replaced with the value returned by the callback in
	 * each case.
	 *
	 * @param $s string
	 * @param $callback
	 *
	 * @return string
	 */",
 "/**
	 * Remove any strip markers found in the given text.
	 *
	 * @param $text Input string
	 * @return string
	 */",
 "/**
	 * Save the parser state required to convert the given half-parsed text to
	 * HTML. \"Half-parsed\" in this context means the output of
	 * recursiveTagParse() or internalParse(). This output has strip markers
	 * from replaceVariables (extensionSubstitution() etc.), and link
	 * placeholders from replaceLinkHolders().
	 *
	 * Returns an array which can be serialized and stored persistently. This
	 * array can later be loaded into another parser instance with
	 * unserializeHalfParsedText(). The text can then be safely incorporated into
	 * the return value of a parser hook.
	 *
	 * @param $text string
	 *
	 * @return array
	 */",
 "/**
	 * Load the parser state given in the $data array, which is assumed to
	 * have been generated by serializeHalfParsedText(). The text contents is
	 * extracted from the array, and its markers are transformed into markers
	 * appropriate for the current Parser instance. This transformed text is
	 * returned, and can be safely included in the return value of a parser
	 * hook.
	 *
	 * If the $data array has been stored persistently, the caller should first
	 * check whether it is still valid, by calling isValidHalfParsedText().
	 *
	 * @param $data Serialized data
	 * @return String
	 */",
 "/**
	 * Returns true if the given array, presumed to be generated by
	 * serializeHalfParsedText(), is compatible with the current version of the
	 * parser.
	 *
	 * @param $data Array
	 *
	 * @return bool
	 */",
 "/**
 * PHP Parser - Processes wiki markup (which uses a more user-friendly
 * syntax, such as \"[[link]]\" for making links), and provides a one-way
 * transformation of that wiki markup it into XHTML output / markup
 * (which in turn the browser understands, and can display).
 *
 * <pre>
 * There are five main entry points into the Parser class:
 * parse()
 *     produces HTML output
 * preSaveTransform().
 *     produces altered wiki markup.
 * preprocess()
 *     removes HTML comments and expands templates
 * cleanSig() / cleanSigInSig()
 *     Cleans a signature before saving it to preferences
 * getSection()
 *     Return the content of a section from an article for section editing
 * replaceSection()
 *     Replaces a section by number inside an article
 * getPreloadText()
 *     Removes <noinclude> sections, and <includeonly> tags.
 *
 * Globals used:
 *    object: $wgContLang
 *
 * NOT $wgUser or $wgTitle or $wgRequest or $wgLang. Keep them away!
 *
 * settings:
 *  $wgUseDynamicDates*, $wgInterwikiMagic*,
 *  $wgNamespacesWithSubpages, $wgAllowExternalImages*,
 *  $wgLocaltimezone, $wgAllowSpecialInclusion*,
 *  $wgMaxArticleSize*
 *
 *  * only within ParserOptions
 * </pre>
 *
 * @ingroup Parser
 */",
 "/**
	 * @param $skin Skin
	 * @param $result
	 * @return string
	 */",
 "/**
 * A special page that list pages that have highest category count
 *
 * @ingroup SpecialPage
 */",
 "/**
	 * Construct a new LoadMonitor with a given LoadBalancer parent
	 *
	 * @param LoadBalancer $parent
	 */",
 "/**
	 * Perform pre-connection load ratio adjustment.
	 * @param $loads array
	 * @param $group String: the selected query group
	 * @param $wiki String
	 */",
 "/**
	 * Perform post-connection backoff.
	 *
	 * If the connection is in overload, this should return a backoff factor
	 * which will be used to control polling time. The number of threads
	 * connected is a good measure.
	 *
	 * If there is no overload, zero can be returned.
	 *
	 * A threshold thread count is given, the concrete class may compare this
	 * to the running thread count. The threshold may be false, which indicates
	 * that the sysadmin has not configured this feature.
	 *
	 * @param $conn DatabaseBase
	 * @param $threshold Float
	 */",
 "/**
	 * Return an estimate of replication lag for each server
	 *
	 * @param $serverIndexes
	 * @param $wiki
	 *
	 * @return array
	 */",
 "/**
 * An interface for database load monitoring
 *
 * @ingroup Database
 */",
 "/**
	 * @param $serverIndexes
	 * @param $wiki
	 * @return array
	 */",
 "/**
	 * @param LoadBalancer $parent
	 */",
 "/**
	 * @param $loads
	 * @param $group bool
	 * @param $wiki bool
	 */",
 "/**
	 * @param $serverIndexes
	 * @param $wiki
	 * @return array
	 */",
 "/**
	 * @param $conn DatabaseBase
	 * @param $threshold
	 * @return int
	 */",
 "/**
 * Basic MySQL load monitor with no external dependencies
 * Uses memcached to cache the replication lag for a short time
 *
 * @ingroup Database
 */",
 "/**
	 * @param $count string
	 * @param $forms array
	 * @return string
	 */",
 "/**
 * Serbo-Croatian (Srpskohrvatski / ????????????????????????????)
 *
 * @ingroup Language
 */",
 "/**
	 * Pre-fill the link cache
	 *
	 * @param $db DatabaseBase
	 * @param $res
	 */",
 "/**
	 * Make a link to \"what links here\" for the specified title
	 *
	 * @param $title Title being queried
	 * @param $caption String: text to display on the link
	 * @return String
	 */",
 "/**
	 * Make links to the page corresponding to the item, and the \"what links here\" page for it
	 *
	 * @param $skin Skin to be used
	 * @param $result Result row
	 * @return string
	 */",
 "/**
 * A special page to show pages ordered by the number of pages linking to them.
 *
 * @ingroup SpecialPage
 */",
 "/**
	 * Constructor
	 */",
 "/**
	 * Show the special page
	 *
	 * @param $isbn ISBN passed as a subpage parameter
	 */",
 "/**
	 * Returns whether a given ISBN (10 or 13) is valid.  True indicates validity.
	 * @param isbn ISBN passed for check
	 */",
 "/**
	 * Trim ISBN and remove characters which aren\'t required
	 *
	 * @param $isbn Unclean ISBN
	 * @return string
	 */",
 "/**
	 * Generate a form to allow users to enter an ISBN
	 *
	 * @return string
	 */",
 "/**
	 * Determine where to get the list of book sources from,
	 * format and output them
	 *
	 * @return string
	 */",
 "/**
	 * Format a book source list item
	 *
	 * @param $label Book source label
	 * @param $url Book source URL
	 * @return string
	 */",
 "/**
 * Special page outputs information on sourcing a book with a particular ISBN
 * The parser creates links to this page when dealing with ISBNs in wikitext
 *
 * @author Rob Church <robchur@gmail.com>
 * @todo Validate ISBNs using the standard check-digit method
 * @ingroup SpecialPage
 */",
 "/**
	 * The main log type.
	 * @return string
	 */",
 "/**
	 * The log subtype.
	 * @return string
	 */",
 "/**
	 * The full logtype in format maintype/subtype.
	 * @return string
	 */",
 "/**
	 * Get the extra parameters stored for this message.
	 * @return array
	 */",
 "/**
	 * Get the user for performed this action.
	 * @return User
	 */",
 "/**
	 * Get the target page of this action.
	 * @return Title
	 */",
 "/**
	 * Get the timestamp when the action was executed.
	 * @return string
	 */",
 "/**
	 * Get the user provided comment.
	 * @return string
	 */",
 "/**
	 * Get the access restriction.
	 * @return string
	 */",
 "/**
	 * @param $field Integer: one of LogPage::DELETED_* bitfield constants
	 * @return Boolean
	 */",
 "/**
 * Interface for log entries. Every log entry has these methods.
 * @since 1.19
 */",
 "/**
	 * Whether the parameters for this log are stored in new or
	 * old format.
	 */",
 "/**
 * Extends the LogEntryInterface with some basic functionality
 * @since 1.19
 */",
 "/**
	 * Returns array of information that is needed for querying
	 * log entries. Array contains the following keys:
	 * tables, fields, conds, options and join_conds
	 * @return array
	 */",
 "/**
	 * Constructs new LogEntry from database result row.
	 * Supports rows from both logging and recentchanges table.
	 * @param $row
	 * @return DatabaseLogEntry
	 */",
 "/**
	 * Returns the unique database id.
	 * @return int
	 */",
 "/**
	 * Returns whatever is stored in the database field.
	 * @return string
	 */",
 "/**
 * This class wraps around database result row.
 * @since 1.19
 */",
 "/**
	 * Constructor.
	 * 
	 * @since 1.19
	 * 
	 * @param string $type
	 * @param string $subtype
	 */",
 "/**
	 * Set extra log parameters.
	 * You can pass params to the log action message
	 * by prefixing the keys with a number and colon.
	 * The numbering should start with number 4, the
	 * first three parameters are hardcoded for every
	 * message. Example:
	 * $entry->setParameters(
	 *   \'4:color\' => \'blue\',
	 *   \'animal\' => \'dog\'
	 * );
	 * 
	 * @since 1.19
	 * 
	 * @param $parameters Associative array
	 */",
 "/**
	 * Set the user that performed the action being logged.
	 * 
	 * @since 1.19
	 * 
	 * @param User $performer
	 */",
 "/**
	 * Set the title of the object changed.
	 * 
	 * @since 1.19
	 * 
	 * @param Title $target
	 */",
 "/**
	 * Set the timestamp of when the logged action took place.
	 * 
	 * @since 1.19
	 * 
	 * @param string $timestamp
	 */",
 "/**
	 * Set a comment associated with the action being logged.
	 * 
	 * @since 1.19
	 * 
	 * @param string $comment
	 */",
 "/**
	 * TODO: document
	 * 
	 * @since 1.19
	 * 
	 * @param integer $deleted
	 */",
 "/**
	 * Inserts the entry into the logging table.
	 * @return int If of the log entry
	 */",
 "/**
	 * Publishes the log entry.
	 * @param $newId int id of the log entry.
	 * @param $to string: rcandudp (default), rc, udp
	 */",
 "/**
 * Class for creating log entries manually, for
 * example to inject them into the database.
 * @since 1.19
 */",
 "/**
	 * @param $count int
	 * @param $forms array
	 * @return string
	 */",
 "/**
	 * Convert from the nominative form of a noun to some other case
	 * Invoked with {{GRAMMAR:case|word}}
	 *
	 * Cases: genitiv, dativ, akuzativ, vokativ, instrumental, lokativ
	 *
	 * @param $word string
	 * @param $case string
	 *
	 * @return string
	 */",
 "/** Bosnian (bosanski)
 *
 * @ingroup Language
 */",
 "/** Korean (?????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Albamhandae
 * @author Chanhee
 * @author Cwt96
 * @author Devunt
 * @author Ficell
 * @author Freebiekr
 * @author Gapo
 * @author Gjue
 * @author IRTC1015
 * @author ITurtle
 * @author Idh0854
 * @author Kaganer
 * @author Klutzy
 * @author Kwj2772
 * @author Pi.C.Noizecehx
 * @author PuzzletChung
 * @author TheAlpha for knowledge
 * @author ToePeu
 * @author Yknok29
 * @author ???????? ????????????????
 * @author ????????????
 */",
 "/** Udmurt (????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Andrewboltachev
 * @author Kaganer
 * @author Udmwiki
 * @author ??????
 * @author ???????? ????????????????
 */",
 "/**
 * Internationalisation file for the Asirra module of the ConfirmEdit
 * extension.
 *
 * @file
 * @ingroup Extensions
 */",
 "/** Belarusian (Tara??kievica orthography) (??????????????????????? (??????????????????????)???)
 * @author EugeneZelenko
 * @author Jim-by
 * @author Wizardist
 */",
 "/** German (Deutsch)
 * @author Kghbln
 */",
 "/** German (formal address) (???Deutsch (Sie-Form)???)
 * @author Kghbln
 */",
 "/** Spanish (Espa??ol)
 * @author Armando-Martin
 */",
 "/** French (Fran??ais)
 * @author Gomoko
 * @author Seb35
 */",
 "/** Galician (Galego)
 * @author Toli??o
 */",
 "/** Upper Sorbian (Hornjoserbsce)
 * @author Michawiki
 */",
 "/** Interlingua (Interlingua)
 * @author McDutchie
 */",
 "/** Japanese (?????????)
 * @author Shirayuki
 */",
 "/** Luxembourgish (L??tzebuergesch)
 * @author Robby
 */",
 "/** Macedonian (????????????????????)
 * @author Bjankuloski06
 */",
 "/** Norwegian (bokm??l)??? (???Norsk (bokm??l)???)
 * @author Event
 */",
 "/** Dutch (Nederlands)
 * @author SPQRobin
 * @author Siebrand
 */",
 "/** Polish (Polski)
 * @author BeginaFelicysym
 */",
 "/** Piedmontese (Piemont??is)
 * @author Borich??t
 * @author Dragon??t
 */",
 "/** Portuguese (Portugu??s)
 * @author Hamilton Abreu
 */",
 "/** Walloon (walon)
 * @author Srtxg
 */",
 "/** Simplified Chinese (?????????(??????)???)
 * @author Hzy980512
 */",
 "/** Chechen (??????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Chechenka
 * @author Comp1089
 * @author Girdi
 * @author Mega programmer
 * @author Sasan700
 */",
 "/**
	 * @param $article Article
	 */",
 "/**
	 * @return Article
	 */",
 "/**
	 * @since 1.19
	 * @return Title
	 */",
 "/**
	 * Set the context Title object
	 *
	 * @param $title Title object or null
	 */",
 "/**
	 * Get the context title object.
	 * If not set, $wgTitle will be returned. This behavior might changed in
	 * the future to return $this->mTitle instead.
	 *
	 * @return Title object
	 */",
 "/**
	 * This is the function that gets called for \"action=edit\". It
	 * sets up various member variables, then passes execution to
	 * another function, usually showEditForm()
	 *
	 * The edit form is self-submitting, so that when things like
	 * preview and edit conflicts occur, we get the same form back
	 * with the extra stuff added.  Only when the final submission
	 * is made and all is well do we actually save and redirect to
	 * the newly-edited page.
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * Display a permissions error page, like OutputPage::showPermissionsErrorPage(),
	 * but with the following differences:
	 * - If redlink=1, the user will be redirected to the page
	 * - If there is content to display or the error occurs while either saving,
	 *   previewing or showing the difference, it will be a
	 *   \"View source for ...\" page displaying the source code after the error message.
	 *
	 * @since 1.19
	 * @param $permErrors Array of permissions errors, as returned by
	 *                    Title::getUserPermissionsErrors().
	 */",
 "/**
	 * Show a read-only error
	 * Parameters are the same as OutputPage:readOnlyPage()
	 * Redirect to the article page if redlink=1
	 * @deprecated in 1.19; use displayPermissionsError() instead
	 */",
 "/**
	 * Should we show a preview when the edit form is first shown?
	 *
	 * @return bool
	 */",
 "/**
	 * Checks whether the user entered a skin name in uppercase,
	 * e.g. \"User:Example/Monobook.css\" instead of \"monobook.css\"
	 *
	 * @return bool
	 */",
 "/**
	 * Does this EditPage class support section editing?
	 * This is used by EditPage subclasses to indicate their ui cannot handle section edits
	 *
	 * @return bool
	 */",
 "/**
	 * This function collects the form data and uses it to populate various member variables.
	 * @param $request WebRequest
	 */",
 "/**
	 * Subpage overridable method for extracting the page content data from the
	 * posted form to be placed in $this->textbox1, if using customized input
	 * this method should be overrided and return the page text that will be used
	 * for saving, preview parsing and so on...
	 *
	 * @param $request WebRequest
	 */",
 "/**
	 * Initialise form fields in the object
	 * Called on the first invocation, e.g. when a user clicks an edit link
	 * @return bool -- if the requested section is valid
	 */",
 "/**
	 * Fetch initial editing page content.
	 *
	 * @param $def_text string
	 * @return mixed string on success, $def_text for invalid sections
	 * @private
	 */",
 "/**
	 * Get the content of the wanted revision, without section extraction.
	 *
	 * The result of this function can be used to compare user\'s input with
	 * section replaced in its context (using WikiPage::replaceSection())
	 * to the original text of the edit.
	 *
	 * This difers from Article::getContent() that when a missing revision is
	 * encountered the result will be an empty string and not the
	 * \'missing-article\' message.
	 *
	 * @since 1.19
	 * @return string
	 */",
 "/**
	 * Get the actual text of the page. This is basically similar to
	 * WikiPage::getRawText() except that when the page doesn\'t exist an empty
	 * string is returned instead of false.
	 *
	 * @since 1.19
	 * @return string
	 */",
 "/**
	 * Use this method before edit() to preload some text into the edit box
	 *
	 * @param $text string
	 */",
 "/**
	 * Get the contents to be preloaded into the box, either set by
	 * an earlier setPreloadText() or by loading the given page.
	 *
	 * @param $preload String: representing the title to preload from.
	 * @return String
	 */",
 "/**
	 * Make sure the form isn\'t faking a user\'s credentials.
	 *
	 * @param $request WebRequest
	 * @return bool
	 * @private
	 */",
 "/**
	 * Attempt submission
	 * @return bool false if output is done, true if the rest of the form should be displayed
	 */",
 "/**
	 * Attempt submission (no UI)
	 *
	 * @param $result
	 * @param $bot bool
	 *
	 * @return Status object, possibly with a message, but always with one of the AS_* constants in $status->value,
	 *
	 * FIXME: This interface is TERRIBLE, but hard to get rid of due to various error display idiosyncrasies. There are
	 * also lots of cases where error metadata is set in the object and retrieved later instead of being returned, e.g.
	 * AS_CONTENT_TOO_BIG and AS_BLOCKED_PAGE_FOR_USER. All that stuff needs to be cleaned up some time.
	 */",
 "/**
	 * Commit the change of watch status
	 */",
 "/**
	 * Check if no edits were made by other users since
	 * the time a user started editing the page. Limit to
	 * 50 revisions for the sake of performance.
	 *
	 * @param $id int
	 * @param $edittime string
	 *
	 * @return bool
	 */",
 "/**
	 * @private
	 * @todo document
	 *
	 * @parma $editText string
	 *
	 * @return bool
	 */",
 "/**
	 * @return Revision
	 */",
 "/**
	 * Check given input text against $wgSpamRegex, and return the text of the first match.
	 *
	 * @param $text string
	 *
	 * @return string|false matching string or false
	 */",
 "/**
	 * Check given input text against $wgSpamRegex, and return the text of the first match.
	 *
	 * @parma $text string
	 *
	 * @return string|false  matching string or false
	 */",
 "/**
	 * @param $text string
	 * @param $regexes array
	 * @return bool|string
	 */",
 "/**
	 * Show all applicable editing introductions
	 */",
 "/**
	 * Attempt to show a custom editing introduction, if supplied
	 *
	 * @return bool
	 */",
 "/**
	 * Send the edit form and related headers to $wgOut
	 * @param $formCallback Callback that takes an OutputPage parameter; will be called
	 *     during form output near the top, for captchas and the like.
	 */",
 "/**
	 * Extract the section title from current section text, if any.
	 *
	 * @param string $text
	 * @return Mixed|string or false
	 */",
 "/**
	 * Standard summary input and label (wgSummary), abstracted so EditPage
	 * subclasses may reorganize the form.
	 * Note that you do not need to worry about the label\'s for=, it will be
	 * inferred by the id given to the input. You can remove them both by
	 * passing array( \'id\' => false ) to $userInputAttrs.
	 *
	 * @param $summary string The value of the summary input
	 * @param $labelText string The html to place inside the label
	 * @param $inputAttrs array of attrs to use on the input
	 * @param $spanLabelAttrs array of attrs to use on the span inside the label
	 *
	 * @return array An array in the format array( $label, $input )
	 */",
 "/**
	 * @param $isSubjectPreview Boolean: true if this is the section subject/title
	 *                          up top, or false if this is the comment summary
	 *                          down below the textarea
	 * @param $summary String: The text of the summary to display
	 * @return String
	 */",
 "/**
	 * @param $isSubjectPreview Boolean: true if this is the section subject/title
	 *                          up top, or false if this is the comment summary
	 *                          down below the textarea
	 * @param $summary String: the text of the summary to display
	 * @return String
	 */",
 "/**
	 * Subpage overridable method for printing the form for page content editing
	 * By default this simply outputs wpTextbox1
	 * Subclasses can override this to provide a custom UI for editing;
	 * be it a form, or simply wpTextbox1 with a modified content that will be
	 * reverse modified when extracted from the post data.
	 * Note that this is basically the inverse for importContentFormData
	 */",
 "/**
	 * Method to output wpTextbox1
	 * The $textoverride method can be used by subclasses overriding showContentForm
	 * to pass back to this method.
	 *
	 * @param $customAttribs An array of html attributes to use in the textarea
	 * @param $textoverride String: optional text to override $this->textarea1 with
	 */",
 "/**
	 * Append preview output to $wgOut.
	 * Includes category rendering if this is a category page.
	 *
	 * @param $text String: the HTML to be output for the preview.
	 */",
 "/**
	 * Get a diff between the current contents of the edit box and the
	 * version of the page we\'re editing from.
	 *
	 * If this is a section edit, we\'ll replace the section as for final
	 * save and then make a comparison.
	 */",
 "/**
	 * Give a chance for site and per-namespace customizations of
	 * terms of service summary link that might exist separately
	 * from the copyright notice.
	 *
	 * This will display between the save button and the edit tools,
	 * so should remain short!
	 */",
 "/**
	 * Show an edit conflict. textbox1 is already shown in showEditForm().
	 * If you want to use another entry point to this function, be careful.
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * Returns the URL to use in the form\'s action attribute.
	 * This is used by EditPage subclasses when simply customizing the action
	 * variable in the constructor is not enough. This can be used when the
	 * EditPage lives inside of a Special page rather than a custom page action.
	 *
	 * @param $title Title object for which is being edited (where we go to for &action= links)
	 * @return string
	 */",
 "/**
	 * Check if a page was deleted while the user was editing it, before submit.
	 * Note that we rely on the logging table, which hasn\'t been always there,
	 * but that doesn\'t matter, because this only applies to brand new
	 * deletes.
	 */",
 "/**
	 * Get the rendered text for previewing.
	 * @return string
	 */",
 "/**
	 * @return Array
	 */",
 "/**
		 * $toolarray is an array of arrays each of which includes the
		 * filename of the button image (without path), the opening
		 * tag, the closing tag, optionally a sample text that is
		 * inserted between the two when no selection is highlighted
		 * and.  The tip text is shown when the user moves the mouse
		 * over the button.
		 *
		 * Also here: accesskeys (key), which are not used yet until
		 * someone can figure out a way to make them work in
		 * IE. However, we should make sure these keys are not defined
		 * on the edit page.
		 */",
 "/**
	 * Shows a bulletin board style toolbar for common editing functions.
	 * It can be disabled in the user preferences.
	 * The necessary JavaScript code can be found in skins/common/edit.js.
	 *
	 * @return string
	 */",
 "/**
	 * Returns an array of html code of the following checkboxes:
	 * minor and watch
	 *
	 * @param $tabindex Current tabindex
	 * @param $checked Array of checkbox => bool, where bool indicates the checked
	 *                 status of the checkbox
	 *
	 * @return array
	 */",
 "/**
	 * Returns an array of html code of the following buttons:
	 * save, diff, preview and live
	 *
	 * @param $tabindex Current tabindex
	 *
	 * @return array
	 */",
 "/**
	 * Output preview text only. This can be sucked into the edit page
	 * via JavaScript, and saves the server time rendering the skin as
	 * well as theoretically being more robust on the client (doesn\'t
	 * disturb the edit box\'s undo history, won\'t eat your text on
	 * failure, etc).
	 *
	 * @todo This doesn\'t include category or interlanguage links.
	 *       Would need to enhance it a bit, <s>maybe wrap them in XML
	 *       or something...</s> that might also require more skin
	 *       initialization, so check whether that\'s a problem.
	 */",
 "/**
	 * Call the stock \"user is blocked\" page
	 *
	 * @deprecated in 1.19; throw an exception directly instead
	 */",
 "/**
	 * Produce the stock \"please login to edit pages\" page
	 *
	 * @deprecated in 1.19; throw an exception directly instead
	 */",
 "/**
	 * Show an error page saying to the user that he has insufficient permissions
	 * to create a new page
	 *
	 * @deprecated in 1.19; throw an exception directly instead
	 */",
 "/**
	 * Creates a basic error page which informs the user that
	 * they have attempted to edit a nonexistent section.
	 */",
 "/**
	 * Produce the stock \"your edit contains spam\" page
	 *
	 * @param $match Text which triggered one or more filters
	 * @deprecated since 1.17 Use method spamPageWithContent() instead
	 */",
 "/**
	 * Show \"your edit contains spam\" page with your diff and text
	 *
	 * @param $match Text which triggered one or more filters
	 */",
 "/**
	 * Format an anchor fragment as it would appear for a given section name
	 * @param $text String
	 * @return String
	 * @private
	 */",
 "/**
	 * Check if the browser is on a blacklist of user-agents known to
	 * mangle UTF-8 data on form submission. Returns true if Unicode
	 * should make it through, false if it\'s known to be a problem.
	 * @return bool
	 * @private
	 */",
 "/**
	 * Filter an input field through a Unicode de-armoring process if it
	 * came from an old browser with known broken Unicode editing issues.
	 *
	 * @param $request WebRequest
	 * @param $field String
	 * @return String
	 * @private
	 */",
 "/**
	 * @param $request WebRequest
	 * @param $text string
	 * @return string
	 */",
 "/**
	 * Filter an output field through a Unicode armoring process if it is
	 * going to an old browser with known broken Unicode editing issues.
	 *
	 * @param $text String
	 * @return String
	 * @private
	 */",
 "/**
	 * A number of web browsers are known to corrupt non-ASCII characters
	 * in a UTF-8 text editing environment. To protect against this,
	 * detected browsers will be served an armored version of the text,
	 * with non-ASCII chars converted to numeric HTML character references.
	 *
	 * Preexisting such character references will have a 0 added to them
	 * to ensure that round-trips do not alter the original data.
	 *
	 * @param $invalue String
	 * @return String
	 * @private
	 */",
 "/**
	 * Reverse the previously applied transliteration of non-ASCII characters
	 * back to UTF-8. Used to protect data from corruption by broken web browsers
	 * as listed in $wgBrowserBlackList.
	 *
	 * @param $invalue String
	 * @return String
	 * @private
	 */",
 "/**
 * The edit page/HTML interface (split from Article)
 * The actual database and text munging is still in Article,
 * but it should get easier to call those from alternate
 * interfaces.
 *
 * EditPage cares about two distinct titles:
 * $this->mContextTitle is the page that forms submit to, links point to,
 * redirects go to, etc. $this->mTitle (as well as $mArticle) is the
 * page in the database that is actually being edited. These are
 * usually the same, but they are now allowed to be different.
 *
 * Surgeon General\'s Warning: prolonged exposure to this class is known to cause
 * headaches, which may be fatal.
 */",
 "/**
	 * Construct a new instance from configuration
	 *
	 * @param $config Array
	 */",
 "/**
	 * Lock the resources at the given abstract paths
	 * 
	 * @param $paths Array List of resource names
	 * @param $type integer LockManager::LOCK_* constant
	 * @return Status 
	 */",
 "/**
	 * Unlock the resources at the given abstract paths
	 * 
	 * @param $paths Array List of storage paths
	 * @param $type integer LockManager::LOCK_* constant
	 * @return Status 
	 */",
 "/**
	 * Get the base 36 SHA-1 of a string, padded to 31 digits
	 * 
	 * @param $path string
	 * @return string
	 */",
 "/**
	 * Lock resources with the given keys and lock type
	 * 
	 * @param $paths Array List of storage paths
	 * @param $type integer LockManager::LOCK_* constant
	 * @return string
	 */",
 "/**
	 * Unlock resources with the given keys and lock type
	 * 
	 * @param $paths Array List of storage paths
	 * @param $type integer LockManager::LOCK_* constant
	 * @return string
	 */",
 "/**
 * Class for handling resource locking.
 *
 * Locks on resource keys can either be shared or exclusive.
 *
 * Implementations must keep track of what is locked by this proccess
 * in-memory and support nested locking calls (using reference counting).
 * At least LOCK_UW and LOCK_EX must be implemented. LOCK_SH can be a no-op.
 * Locks should either be non-blocking or have low wait timeouts.
 *
 * Subclasses should avoid throwing exceptions at all costs.
 *
 * @ingroup LockManager
 * @since 1.19
 */",
 "/**
	 * @param $manager LockManager
	 * @param $paths Array List of storage paths
	 * @param $type integer LockManager::LOCK_* constant
	 * @param $status Status
	 */",
 "/**
	 * Get a ScopedLock object representing a lock on resource paths.
	 * Any locks are released once this object goes out of scope.
	 * The status object is updated with any errors or warnings.
	 * 
	 * @param $manager LockManager
	 * @param $paths Array List of storage paths
	 * @param $type integer LockManager::LOCK_* constant
	 * @param $status Status
	 * @return ScopedLock|null Returns null on failure
	 */",
 "/**
 * Self releasing locks
 *
 * LockManager helper class to handle scoped locks, which
 * release when an object is destroyed or goes out of scope.
 *
 * @ingroup LockManager
 * @since 1.19
 */",
 "/**
 * Simple version of LockManager that does nothing
 * @since 1.19
 */",
 "/**
 * English
 */",
 "/** English (English) */",
 "/** Arabic (??????????????) */",
 "/** Aramaic (??????????) */",
 "/** Egyptian Spoken Arabic (????????) */",
 "/** Breton (Brezhoneg) */",
 "/** Bosnian (Bosanski) */",
 "/** Chechen (??????????????) */",
 "/** Czech (??esky) */",
 "/** Esperanto (Esperanto) */",
 "/** Spanish (Espa??ol) */",
 "/** Estonian (Eesti) */",
 "/** Persian (??????????) */",
 "/** Finnish (Suomi) */",
 "/** Galician (Galego) */",
 "/** Hebrew (??????????) */",
 "/** Hungarian (Magyar) */",
 "/** Indonesian (Bahasa Indonesia) */",
 "/** Igbo (Igbo) */",
 "/** Italian (Italiano) */",
 "/** Japanese (?????????) */",
 "/** Khmer (???????????????????????????) */",
 "/** Korean (?????????) */",
 "/** ???Kurd?? (lat??n??)??? (???Kurd?? (lat??n??)???) */",
 "/** Ladino (Ladino) */",
 "/** Malagasy (Malagasy) */",
 "/** Macedonian (????????????????????) */",
 "/** Malayalam (??????????????????) */",
 "/** Marathi (???????????????) */",
 "/** Erzya (????????????) */",
 "/** Nedersaksisch (Nedersaksisch) */",
 "/** Dutch (Nederlands) */",
 "/** Norwegian Nynorsk (???Norsk (nynorsk)???) */",
 "/** Oriya (????????????) */",
 "/** Polish (Polski) */",
 "/** Pashto (????????) */",
 "/** Portuguese (Portugu??s) */",
 "/** Russian (??????????????) */",
 "/** Albanian (Shqip) */",
 "/** Serbian Cyrillic ekavian (??????????????? (????????????????)???) */",
 "/** Swedish (Svenska) */",
 "/** Tamil (???????????????) */",
 "/** Turkish (T??rk??e) */",
 "/** ?????????????? (??????????????) */",
 "/** Ukrainian (????????????????????) */",
 "/** Vietnamese (Ti???ng Vi???t) */",
 "/** Yiddish (????????????) */",
 "/**
	 * KLUGE: The results may contain false positives for files
	 * that exist e.g. in a shared repo.  Setting this at least
	 * keeps them from showing up as redlinks in the output, even
	 * if it doesn\'t fix the real problem (bug 6220).
	 */",
 "/**
 * Querypage that lists the most wanted files
 *
 * @ingroup SpecialPage
 */",
 "/**
	 * I want to do this task and I need to do it myself.
	 *
	 * @return Locked/Error
	 */",
 "/**
	 * I want to do this task, but if anyone else does it
	 * instead, it\'s also fine for me. I will read its cached data.
	 *
	 * @return Locked/Done/Error
	 */",
 "/**
	 * I have successfully finished my task.
	 * Lets another one grab the lock, and returns the workers
	 * waiting on acquireForAnyone()
	 *
	 * @return Released/NotLocked/Error
	 */",
 "/**
	 * Create a Pool counter. This should only be called from the PoolWorks.
	 *
	 * @param $type
	 * @param $key
	 *
	 * @return PoolCounter
	 */",
 "/**
 *  When you have many workers (threads/servers) giving service, and a
 * cached item expensive to produce expires, you may get several workers
 * doing the job at the same time.
 *
 *  Given enough requests and the item expiring fast (non-cacheable,
 * lots of edits...) that single work can end up unfairly using most (all)
 * of the cpu of the pool. This is also known as \'Michael Jackson effect\'
 * since this effect triggered on the english wikipedia on the day Michael
 * Jackson died, the biographical article got hit with several edits per
 * minutes and hundreds of read hits.
 *
 *  The PoolCounter provides semaphore semantics for restricting the number
 * of workers that may be concurrently performing such single task.
 *
 *  By default PoolCounter_Stub is used, which provides no locking. You
 * can get a useful one in the PoolCounter extension.
 */",
 "/**
	 * @return Status
	 */",
 "/**
	 * @return Status
	 */",
 "/**
	 * @return Status
	 */",
 "/**
	 * Actually perform the work, caching it if needed.
	 */",
 "/**
	 * Retrieve the work from cache
	 * @return mixed work result or false
	 */",
 "/**
	 * A work not so good (eg. expired one) but better than an error
	 * message.
	 * @return mixed work result or false
	 */",
 "/**
	 * Do something with the error, like showing it to the user.
	 */",
 "/**
	 * Log an error
	 *
	 * @param $status Status
	 */",
 "/**
	 * Get the result of the work (whatever it is), or false.
	 * @param $skipcache bool
	 * @return bool|mixed
	 */",
 "/**
 * Handy class for dealing with PoolCounters using class members instead of callbacks.
 */",
 "/**
	 * If using WikiExporter::STREAM to stream a large amount of data,
	 * provide a database connection which is not managed by
	 * LoadBalancer to read from: some history blob types will
	 * make additional queries to pull source data while the
	 * main query is still running.
	 *
	 * @param $db DatabaseBase
	 * @param $history Mixed: one of WikiExporter::FULL, WikiExporter::CURRENT,
	 *                 WikiExporter::RANGE or WikiExporter::STABLE,
	 *                 or an associative array:
	 *                   offset: non-inclusive offset at which to start the query
	 *                   limit: maximum number of rows to return
	 *                   dir: \"asc\" or \"desc\" timestamp order
	 * @param $buffer Int: one of WikiExporter::BUFFER or WikiExporter::STREAM
	 * @param $text Int: one of WikiExporter::TEXT or WikiExporter::STUB
	 */",
 "/**
	 * Set the DumpOutput or DumpFilter object which will receive
	 * various row objects and XML output for filtering. Filters
	 * can be chained or used as callbacks.
	 *
	 * @param $sink mixed
	 */",
 "/**
	 * Dumps a series of page and revision records for all pages
	 * in the database, either including complete history or only
	 * the most recent version.
	 */",
 "/**
	 * Dumps a series of page and revision records for those pages
	 * in the database falling within the page_id range given.
	 * @param $start Int: inclusive lower limit (this id is included)
	 * @param $end   Int: Exclusive upper limit (this id is not included)
	 *                   If 0, no upper limit.
	 */",
 "/**
	 * Dumps a series of page and revision records for those pages
	 * in the database with revisions falling within the rev_id range given.
	 * @param $start Int: inclusive lower limit (this id is included)
	 * @param $end   Int: Exclusive upper limit (this id is not included)
	 *                   If 0, no upper limit.
	 */",
 "/**
	 * @param $title Title
	 */",
 "/**
	 * Runs through a query result set dumping page and revision records.
	 * The result set should be sorted/grouped by page to avoid duplicate
	 * page records in the output.
	 *
	 * The result set will be freed once complete. Should be safe for
	 * streaming (non-buffered) queries, as long as it was made on a
	 * separate database connection not managed by LoadBalancer; some
	 * blob storage types will make queries to pull source data.
	 *
	 * @param $resultset ResultWrapper
	 */",
 "/**
 * @ingroup SpecialPage Dump
 */",
 "/**
	 * Returns the export schema version.
	 * @return string
	 */",
 "/**
	 * Opens the XML output stream\'s root <mediawiki> element.
	 * This does not include an xml directive, so is safe to include
	 * as a subelement in a larger XML stream. Namespace and XML Schema
	 * references are included.
	 *
	 * Output will be encoded in UTF-8.
	 *
	 * @return string
	 */",
 "/**
	 * Closes the output stream with the closing root element.
	 * Call when finished dumping things.
	 *
	 * @return string
	 */",
 "/**
	 * Opens a <page> section on the output stream, with data
	 * from the given database row.
	 *
	 * @param $row object
	 * @return string
	 * @access private
	 */",
 "/**
	 * Closes a <page> section on the output stream.
	 *
	 * @access private
	 */",
 "/**
	 * Dumps a <revision> section on the output stream, with
	 * data filled in from the given database row.
	 *
	 * @param $row object
	 * @return string
	 * @access private
	 */",
 "/**
	 * Dumps a <logitem> section on the output stream, with
	 * data filled in from the given database row.
	 *
	 * @param $row object
	 * @return string
	 * @access private
	 */",
 "/**
	 * Warning! This data is potentially inconsistent. :(
	 */",
 "/**
	 * @param $file File
	 * @param $dumpContents bool
	 * @return string
	 */",
 "/**
	 * Return prefixed text form of title, but using the content language\'s
	 * canonical namespace. This skips any special-casing such as gendered
	 * user namespaces -- which while useful, are not yet listed in the
	 * XML <siteinfo> data so are unsafe in export.
	 *
	 * @param Title $title
	 * @return string
	 * @since 1.18
	 */",
 "/**
 * @ingroup Dump
 */",
 "/**
	 * Override to write to a different stream type.
	 * @return bool
	 */",
 "/**
	 * Close the old file, move it to a specified name,
	 * and reopen new file with the old name. Use this
	 * for writing out a file in multiple pieces
	 * at specified checkpoints (e.g. every n hours).
	 * @param $newname mixed File name. May be a string or an array with one element
	 */",
 "/**
	 * Close the old file, and move it to a specified name.
	 * Use this for the last piece of a file written out
	 * at specified checkpoints (e.g. every n hours).
	 * @param $newname mixed File name. May be a string or an array with one element
	 * @param $open bool If true, a new file with the old filename will be opened again for writing (default: false)
	 */",
 "/**
	 * Returns the name of the file or files which are
	 * being written to, if there are any.
	 */",
 "/**
 * Base class for output stream; prints to stdout or buffer or whereever.
 * @ingroup Dump
 */",
 "/**
 * Stream outputter to send data to a file.
 * @ingroup Dump
 */",
 "/**
 * Stream outputter to send data to a file via some filter program.
 * Even if compression is available in a library, using a separate
 * program can allow us to make use of a multi-processor system.
 * @ingroup Dump
 */",
 "/**
 * Sends dump output via the gzip compressor.
 * @ingroup Dump
 */",
 "/**
 * Sends dump output via the bgzip2 compressor.
 * @ingroup Dump
 */",
 "/**
 * Sends dump output via the p7zip compressor.
 * @ingroup Dump
 */",
 "/**
	 * Override for page-based filter types.
	 * @return bool
	 */",
 "/**
 * Dump output filter class.
 * This just does output filtering and streaming; XML formatting is done
 * higher up, so be careful in what you do.
 * @ingroup Dump
 */",
 "/**
 * Simple dump output filter to exclude all talk pages.
 * @ingroup Dump
 */",
 "/**
 * Dump output filter to include or exclude pages in a given set of namespaces.
 * @ingroup Dump
 */",
 "/**
 * Dump output filter to include only the last revision in each page sequence.
 * @ingroup Dump
 */",
 "/**
 * Base class for output stream; prints to stdout or buffer or whereever.
 * @ingroup Dump
 */",
 "/**
	 * The page may contain old data which has not been properly normalized.
	 * Invalid UTF-8 sequences or forbidden control characters will make our
	 * XML output invalid, so be sure to strip them out.
	 */",
 "/**
	 * @dataProvider provideABunchOfShorthands
	 */",
 "/**
	 * Generates each row in the contributions list.
	 *
	 * Contributions which are marked \"top\" are currently on top of the history.
	 * For these contributions, a [rollback] link is shown for users with sysop
	 * privileges. The rollback link restores the most recent version that was not
	 * written by the target user.
	 *
	 * @todo This would probably look a lot nicer in a table.
	 */",
 "/**
	 * Get the Database object in use
	 *
	 * @return Database
	 */",
 "/**
 * Implements Special:DeletedContributions to display archived revisions
 * @ingroup SpecialPage
 */",
 "/**
	 * Special page \"deleted user contributions\".
	 * Shows a list of the deleted contributions of a user.
	 *
	 * @return	none
	 * @param	$par	String: (optional) user name of the user for which to show the contributions
	 */",
 "/**
	 * Generates the subheading with links
	 * @param $userObj User object for the target
	 * @return String: appropriately-escaped HTML to be output literally
	 * @todo FIXME: Almost the same as contributionsSub in SpecialContributions.php. Could be combined.
	 */",
 "/**
	 * Generates the namespace selector form with hidden attributes.
	 * @param $options Array: the options to be included.
	 */",
 "/** Sinhala (???????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Asiri wiki
 * @author Budhajeewa
 * @author Calcey
 * @author Chandana
 * @author Jiro Ono
 * @author Kaganer
 * @author Meno25
 * @author Pasanbhathiya2
 * @author Romaine
 * @author Singhalawap
 * @author ??????????????? ??????????????????????????????
 * @author ???????????? ????????????????????????
 * @author ????????????????????????
 * @author ?????????????????????????????????
 * @author ??????????????? ?????????????????????
 * @author ??????????????????
 * @author ???????????????????????? ????????????????????????
 * @author ???????????????
 * @author ?????????????????????
 */",
 "/**
	 * @param $title Title
	 * @return WikiCategoryPage
	 */",
 "/**
	 * Constructor from a page id
	 * @param $id Int article ID to load
	 */",
 "/**
 * Special handling for category description pages, showing pages,
 * subcategories and file that belong to the category
 */",
 "/**
 * Job for email notification mails
 *
 * @ingroup JobQueue
 */",
 "/** Western Frisian (Frysk)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Maartenvdbent
 * @author Purodha
 * @author Pyt
 * @author SK-luuut
 * @author Snakesteuben
 * @author Urhixidur
 * @author ???????? ????????????????
 */",
 "/**
	 * Show some useful links in the subtitle
	 */",
 "/**
	 * Get the condition used for fetching log snippets
	 */",
 "/**
	 * Show a deleted file version requested by the visitor.
	 * TODO Mostly copied from Special:Undelete. Refactor.
	 */",
 "/**
	 * Get the list object for this request
	 */",
 "/**
	 * Show a list of items that we will operate on, and show a form with checkboxes
	 * which will allow the user to choose new visibility settings.
	 */",
 "/**
	 * Show some introductory text
	 * @todo FIXME: Wikimedia-specific policy text
	 */",
 "/**
	* @return String: HTML
	*/",
 "/**
	 * UI entry point for form submission.
	 */",
 "/**
	 * Report that the submit operation succeeded
	 */",
 "/**
	 * Report that the submit operation failed
	 */",
 "/**
	 * Put together an array that contains -1, 0, or the *_deleted const for each bit
	 *
	 * @return array
	 */",
 "/**
	 * Put together a rev_deleted bitfield
	 * @param $bitPars array extractBitParams() params
	 * @param $oldfield int current bitfield
	 * @return array
	 */",
 "/**
	 * Do the write operations. Simple wrapper for RevDel_*List::setVisibility().
	 */",
 "/**
 * Special page allowing users with the appropriate permissions to view
 * and hide revisions. Log items can also be hidden.
 *
 * @ingroup SpecialPage
 */",
 "/** The structure of the messages, divided to blocks */",
 "/** Comments for each block */",
 "/**
 * Special page lists pages without language links
 *
 * @ingroup SpecialPage
 */",
 "/**
	 * TODO: generalize this test to be reusable for different skins
	 */",
 "/**
	 * TODO: generalize this test to be reusable for different skins
	 */",
 "/**
	 * TODO: generalize this test to be reusable for different skins
	 */",
 "/**
	 * TODO: generalize this test to be reusable for different skins
	 */",
 "/**
	 * Disable RSS/Atom feeds
	 */",
 "/**
	 * Return an appropriately formatted LIKE query and the clause
	 *
	 * @return array
	 */",
 "/**
	 * Override to check query validity.
	 */",
 "/**
	 * Override to squash the ORDER BY.
	 * We do a truncated index search, so the optimizer won\'t trust
	 * it as good enough for optimizing sort. The implicit ordering
	 * from the scan will usually do well enough for our needs.
	 */",
 "/**
 * Special:LinkSearch to search the external-links table.
 * @ingroup SpecialPage
 */",
 "/**
	 * Get a MediaHandler for a given MIME type from the instance cache
	 *
	 * @param $type string
	 *
	 * @return MediaHandler
	 */",
 "/**
	 * Get an associative array mapping magic word IDs to parameter names.
	 * Will be used by the parser to identify parameters.
	 */",
 "/**
	 * Validate a thumbnail parameter at parse time.
	 * Return true to accept the parameter, and false to reject it.
	 * If you return false, the parser will do something quiet and forgiving.
	 *
	 * @param $name
	 * @param $value
	 */",
 "/**
	 * Merge a parameter array into a string appropriate for inclusion in filenames
	 *
	 * @param $params array
	 */",
 "/**
	 * Parse a param string made with makeParamString back into an array
	 *
	 * @param $str string
	 */",
 "/**
	 * Changes the parameter array as necessary, ready for transformation.
	 * Should be idempotent.
	 * Returns false if the parameters are unacceptable and the transform should fail
	 * @param $image
	 * @param $params
	 */",
 "/**
	 * Get an image size array like that returned by getimagesize(), or false if it
	 * can\'t be determined.
	 *
	 * @param $image File: the image object, or false if there isn\'t one
	 * @param $path String: the filename
	 * @return Array Follow the format of PHP getimagesize() internal function. See http://www.php.net/getimagesize
	 */",
 "/**
	 * Get handler-specific metadata which will be saved in the img_metadata field.
	 *
	 * @param $image File: the image object, or false if there isn\'t one.
	 *   Warning, FSFile::getPropsFromPath might pass an (object)array() instead (!)
	 * @param $path String: the filename
	 * @return String
	 */",
 "/**
	* Get metadata version.
	*
	* This is not used for validating metadata, this is used for the api when returning
	* metadata, since api content formats should stay the same over time, and so things
	* using ForiegnApiRepo can keep backwards compatibility
	*
	* All core media handlers share a common version number, and extensions can
	* use the GetMetadataVersion hook to append to the array (they should append a unique
	* string so not to get confusing). If there was a media handler named \'foo\' with metadata
	* version 3 it might add to the end of the array the element \'foo=3\'. if the core metadata
	* version is 2, the end version string would look like \'2;foo=3\'.
	*
	* @return string version string
	*/",
 "/**
	* Convert metadata version.
	*
	* By default just returns $metadata, but can be used to allow
	* media handlers to convert between metadata versions.
	*
	* @param $metadata Mixed String or Array metadata array (serialized if string)
	* @param $version Integer target version
	* @return Array serialized metadata in specified version, or $metadata on fail.
	*/",
 "/**
	 * Get a string describing the type of metadata, for display purposes.
	 *
	 * @return string
	 */",
 "/**
	 * Check if the metadata string is valid for this handler.
	 * If it returns MediaHandler::METADATA_BAD (or false), Image
	 * will reload the metadata from the file and update the database.
	 * MediaHandler::METADATA_GOOD for if the metadata is a-ok,
	 * MediaHanlder::METADATA_COMPATIBLE if metadata is old but backwards
	 * compatible (which may or may not trigger a metadata reload).
	 */",
 "/**
	 * Get a MediaTransformOutput object representing an alternate of the transformed
	 * output which will call an intermediary thumbnail assist script.
	 *
	 * Used when the repository has a thumbnailScriptUrl option configured.
	 *
	 * Return false to fall back to the regular getTransform().
	 */",
 "/**
	 * Get a MediaTransformOutput object representing the transformed output. Does not
	 * actually do the transform.
	 *
	 * @param $image File: the image object
	 * @param $dstPath String: filesystem destination path
	 * @param $dstUrl String: Destination URL to use in output HTML
	 * @param $params Array: Arbitrary set of parameters validated by $this->validateParam()
	 */",
 "/**
	 * Get a MediaTransformOutput object representing the transformed output. Does the
	 * transform unless $flags contains self::TRANSFORM_LATER.
	 *
	 * @param $image File: the image object
	 * @param $dstPath String: filesystem destination path
	 * @param $dstUrl String: destination URL to use in output HTML
	 * @param $params Array: arbitrary set of parameters validated by $this->validateParam()
	 * @param $flags Integer: a bitfield, may contain self::TRANSFORM_LATER
	 *
	 * @return MediaTransformOutput
	 */",
 "/**
	 * Get the thumbnail extension and MIME type for a given source MIME type
	 * @return array thumbnail extension and MIME type
	 */",
 "/**
	 * True if the handled types can be transformed
	 */",
 "/**
	 * True if handled types cannot be displayed directly in a browser
	 * but can be rendered
	 */",
 "/**
	 * True if the type has multi-page capabilities
	 */",
 "/**
	 * Page count for a multi-page document, false if unsupported or unknown
	 */",
 "/**
	 * The material is vectorized and thus scaling is lossless
	 */",
 "/**
	 * False if the handler is disabled for all files
	 */",
 "/**
	 * Get an associative array of page dimensions
	 * Currently \"width\" and \"height\" are understood, but this might be
	 * expanded in the future.
	 * Returns false if unknown or if the document is not multi-page.
	 *
	 * @param $image File
	 */",
 "/**
	 * Generic getter for text layer.
	 * Currently overloaded by PDF and DjVu handlers
	 */",
 "/**
	 * @todo FIXME: I don\'t really like this interface, it\'s not very flexible
	 * I think the media handler should generate HTML instead. It can do
	 * all the formatting according to some standard. That makes it possible
	 * to do things like visual indication of grouped and chained streams
	 * in ogg container files.
	 */",
 "/** sorts the visible/invisible field.
	 * Split off from ImageHandler::formatMetadata, as used by more than
	 * one type of handler.
	 *
	 * This is used by the media handlers that use the FormatMetadata class
	 *
	 * @param $metadataArray Array metadata array
	 * @return array for use displaying metadata.
	 */",
 "/**
	 * Get a list of metadata items which should be displayed when
	 * the metadata table is collapsed.
	 *
	 * @return array of strings
	 * @access protected
	 */",
 "/**
	 * This is used to generate an array element for each metadata value
	 * That array is then used to generate the table of metadata values
	 * on the image page
	 *
	 * @param &$array Array An array containing elements for each type of visibility
	 * and each of those elements being an array of metadata items. This function adds
	 * a value to that array.
	 * @param $visibility string (\'visible\' or \'collapsed\') if this value is hidden
	 * by default.
	 * @param $type String type of metadata tag (currently always \'exif\')
	 * @param $id String the name of the metadata tag (like \'artist\' for example).
	 * its name in the table displayed is the message \"$type-$id\" (Ex exif-artist ).
	 * @param $value String thingy goes into a wikitext table; it used to be escaped but
	 * that was incompatible with previous practise of customized display
	 * with wikitext formatting via messages such as \'exif-model-value\'.
	 * So the escaping is taken back out, but generally this seems a confusing
	 * interface.
	 * @param $param String value to pass to the message for the name of the field
	 * as $1. Currently this parameter doesn\'t seem to ever be used.
	 *
	 * Note, everything here is passed through the parser later on (!)
	 */",
 "/**
	 * @param $file File
	 * @return string
	 */",
 "/**
	 * @param $file File
	 * @return string
	 */",
 "/**
	 * @param $file File
	 * @return string
	 */",
 "/**
	 * @param $file File
	 * @return string
	 */",
 "/**
	 * Calculate the largest thumbnail width for a given original file size
	 * such that the thumbnail\'s height is at most $maxHeight.
	 * @param $boxWidth Integer Width of the thumbnail box.
	 * @param $boxHeight Integer Height of the thumbnail box.
	 * @param $maxHeight Integer Maximum height expected for the thumbnail.
	 * @return Integer.
	 */",
 "/**
	 * Modify the parser object post-transform
	 */",
 "/**
	 * File validation hook called on upload.
	 *
	 * If the file at the given local path is not valid, or its MIME type does not
	 * match the handler class, a Status object should be returned containing
	 * relevant errors.
	 *
	 * @param $fileName The local path to the file.
	 * @return Status object
	 */",
 "/**
	 * Check for zero-sized thumbnails. These can be generated when
	 * no disk space is available or some other error occurs
	 *
	 * @param $dstPath The location of the suspect file
	 * @param $retval Return value of some shell process, file will be deleted if this is non-zero
	 * @return true if removed, false otherwise
	 */",
 "/**
	 * Remove files from the purge list
	 * 
	 * @param array $files
	 * @param array $options
	 */",
 "/**
 * Base media handler class
 *
 * @ingroup Media
 */",
 "/**
	 * @param $file File
	 * @return bool
	 */",
 "/**
	 * @param $image File
	 * @param  $params
	 * @return bool
	 */",
 "/**
	 * Validate thumbnail parameters and fill in the correct height
	 *
	 * @param $width Integer: specified width (input/output)
	 * @param $height Integer: height (output only)
	 * @param $srcWidth Integer: width of the source image
	 * @param $srcHeight Integer: height of the source image
	 * @param $mimeType Unused
	 * @return false to indicate that an error should be returned to the user.
	 */",
 "/**
	 * @param $image File
	 * @param  $script
	 * @param  $params
	 * @return bool|ThumbnailImage
	 */",
 "/**
	 * @param $file File
	 * @return string
	 */",
 "/**
	 * @param $file File
	 * @return string
	 */",
 "/**
	 * @param $file File
	 * @return string
	 */",
 "/**
 * Media handler abstract base class for images
 *
 * @ingroup Media
 */",
 "/**
	 * @dataProvider dataBug31100
	 */",
 "/**
	 * Auth-less test of Title::isValidMoveOperation
	 * 
	 * @group Database
	 * @param string $source
	 * @param string $target
	 * @param array|string|true $expected Required error
	 * @dataProvider dataTestIsValidMoveOperation
	 */",
 "/**
	 * @param $count int
	 * @param $forms array
	 * @return string
	 */",
 "/**
	 * Temporary hack for bug 9413: replace Arabic presentation forms with their
	 * standard equivalents.
	 *
	 * @todo FIXME: This is language-specific for now only to avoid the negative
	 * performance impact of enabling it for all languages.
	 *
	 * @param $s string
	 *
	 * @return string
	 */",
 "/** Arabic (??????????????)
 *
 * @ingroup Language
 *
 * @author Niklas Laxstr??m
 */",
 "/** Uyghur (Arabic script) (????????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Alfredie
 * @author Kaganer
 * @author Reedy
 * @author Sahran
 */",
 "/** Scots (Scots)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author (vinny)
 * @author Avicennasis
 * @author Derek Ross
 * @author Malafaya
 * @author OchAyeTheNoo
 * @author Omnipaedista
 * @author Purodha
 * @author The Evil IP address
 * @author Urhixidur
 * @author Ushanka
 * @author sco.wikipedia.org editors
 * @author ???????? ????????????????
 */",
 "/**
	* function to validate boolean properties ( True or False )
	*
	* @param $info Array information about current property
	* @param &$val Mixed current value to validate
	* @param $standalone Boolean if this is a simple property or array
	*/",
 "/**
	* function to validate rational properties ( 12/10 )
	*
	* @param $info Array information about current property
	* @param &$val Mixed current value to validate
	* @param $standalone Boolean if this is a simple property or array
	*/",
 "/**
	* function to validate rating properties -1, 0-5
	*
	* if its outside of range put it into range.
	*
	* @see MWG spec
	* @param $info Array information about current property
	* @param &$val Mixed current value to validate
	* @param $standalone Boolean if this is a simple property or array
	*/",
 "/**
	* function to validate integers
	*
	* @param $info Array information about current property
	* @param &$val Mixed current value to validate
	* @param $standalone Boolean if this is a simple property or array
	*/",
 "/**
	* function to validate properties with a fixed number of allowed
	* choices. (closed choice)
	*
	* @param $info Array information about current property
	* @param &$val Mixed current value to validate
	* @param $standalone Boolean if this is a simple property or array
	*/",
 "/**
	* function to validate and modify flash structure
	*
	* @param $info Array information about current property
	* @param &$val Mixed current value to validate
	* @param $standalone Boolean if this is a simple property or array
	*/",
 "/**
	* function to validate LangCode properties ( en-GB, etc )
	*
	* This is just a naive check to make sure it somewhat looks like a lang code.
	*
	* @see rfc 3066
	* @see http://www.adobe.com/devnet/xmp/pdfs/XMPSpecificationPart1.pdf page 30 (section 8.2.2.5)
	*
	* @param $info Array information about current property
	* @param &$val Mixed current value to validate
	* @param $standalone Boolean if this is a simple property or array
	*/",
 "/**
	* function to validate date properties, and convert to (partial) Exif format.
	*
	* Dates can be one of the following formats:
	* YYYY
	* YYYY-MM
	* YYYY-MM-DD
	* YYYY-MM-DDThh:mmTZD
	* YYYY-MM-DDThh:mm:ssTZD
	* YYYY-MM-DDThh:mm:ss.sTZD
	*
	* @param $info Array information about current property
	* @param &$val Mixed current value to validate. Converts to TS_EXIF as a side-effect.
	*	in cases where there\'s only a partial date, it will give things like
	*	2011:04.
	* @param $standalone Boolean if this is a simple property or array
	*/",
 "/** function to validate, and more importantly
	 * translate the XMP DMS form of gps coords to
	 * the decimal form we use.
	 *
	 * @see http://www.adobe.com/devnet/xmp/pdfs/XMPSpecificationPart2.pdf
	 *        section 1.2.7.4 on page 23
	 *
	 * @param $info Array unused (info about prop)
	 * @param &$val String GPS string in either DDD,MM,SSk or
	 *           or DDD,MM.mmk form
	 * @param $standalone Boolean if its a simple prop (should always be true)
	 */",
 "/**
* This contains some static methods for
* validating XMP properties. See XMPInfo and XMPReader classes.
*
* Each of these functions take the same parameters
* * an info array which is a subset of the XMPInfo::items array
* * A value (passed as reference) to validate. This can be either a
*	simple value or an array
* * A boolean to determine if this is validating a simple or complex values
*
* It should be noted that when an array is being validated, typically the validation
* function is called once for each value, and then once at the end for the entire array.
*
* These validation functions can also be used to modify the data. See the gps and flash one\'s
* for example.
*
* @see http://www.adobe.com/devnet/xmp/pdfs/XMPSpecificationPart1.pdf starting at pg 28
* @see http://www.adobe.com/devnet/xmp/pdfs/XMPSpecificationPart2.pdf starting at pg 11
*/",
 "/** Finnish (Suomi)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Agony
 * @author Centerlink
 * @author Cimon Avaro
 * @author Crt
 * @author Harriv
 * @author Jaakonam
 * @author Jack Phoenix
 * @author Kaganer
 * @author Mobe
 * @author Nedergard
 * @author Nike
 * @author Ochs
 * @author Olli
 * @author Pxos
 * @author Silvonen
 * @author Str4nd
 * @author Tarmo
 * @author Tofu II
 * @author Veikk0.ma
 * @author Wix
 * @author Yaamboo
 * @author ZeiP
 * @author ???????? ????????????????
 */",
 "/**
	 * ArticleSaveComplete hook handler.
	 *
	 * @param $article Article
	 * @param $user User
	 * @param $text String: New page text
	 * @return bool
	 */",
 "/**
	 * UserGetDefaultOptions hook handler
	 * @param $defaultOptions Array of default preference keys and values
	 * @return bool
	 */",
 "/**
	 * GetPreferences hook handler.
	 * @param $user User
	 * @param $preferences Array: Preference descriptions
	 * @return bool
	 */",
 "/**
	 * ResourceLoaderRegisterModules hook handler.
	 * @param $resourceLoader ResourceLoader
	 * @return bool
	 */",
 "/**
	 * BeforePageDisplay hook handler.
	 * @param $out OutputPage
	 * @return bool
	 */",
 "/**
	 * Adds one legacy script to output.
	 *
	 * @param $page String: Unprefixed page title
	 * @param $out OutputPage
	 */",
 "/**
	 * UnitTestsList hook handler
	 * @param $files Array: List of extension test files
	 * @return bool
	 */",
 "/**
 * Gadgets extension - lets users select custom javascript gadgets
 *
 * For more info see http://mediawiki.org/wiki/Extension:Gadgets
 *
 * @file
 * @ingroup Extensions
 * @author Daniel Kinzler, brightbyte.de
 * @copyright ?? 2007 Daniel Kinzler
 * @license GNU General Public Licence 2.0 or later
 */",
 "/**
	 * Creates an instance of this class from definition in MediaWiki:Gadgets-definition
	 * @param $definition String: Gadget definition
	 * @return Gadget|bool Instance of Gadget class or false if $definition is invalid
	 */",
 "/**
	 * @return String: Gadget name
	 */",
 "/**
	 * @return String: Gadget description parsed into HTML
	 */",
 "/**
	 * @return String: Wikitext of gadget description
	 */",
 "/**
	 * @return String: Name of category (aka section) our gadget belongs to. Empty string if none.
	 */",
 "/**
	 * @return String: Name of ResourceLoader module for this gadget
	 */",
 "/**
	 * Checks whether this is an instance of an older version of this class deserialized from cache
	 * @return Boolean
	 */",
 "/**
	 * Checks whether this gadget is enabled for given user
	 *
	 * @param $user User: user to check against
	 * @return Boolean
	 */",
 "/**
	 * Checks whether given user has permissions to use this gadget
	 *
	 * @param $user User: user to check against
	 * @return Boolean
	 */",
 "/**
	 * @return Boolean: Whether this gadget is on by default for everyone (but can be disabled in preferences)
	 */",
 "/**
	 * @return Boolean: Whether all of this gadget\'s JS components support ResourceLoader
	 */",
 "/**
	 * @return Boolean: Whether this gadget has resources that can be loaded via ResourceLoader
	 */",
 "/**
	 * @return String: Definition for this gadget from MediaWiki:gadgets-definition
	 */",
 "/**
	 * @return Array: Array of pages with JS not prefixed with namespace
	 */",
 "/**
	 * @return Array: Array of pages with CSS not prefixed with namespace
	 */",
 "/**
	 * @return Array: Array of all of this gadget\'s resources
	 */",
 "/**
	 * Returns module for ResourceLoader, see getModuleName() for its name.
	 * If our gadget has no scripts or styles suitable for RL, false will be returned.
	 * @return Mixed: GadgetResourceLoaderModule or false
	 */",
 "/**
	 * Returns list of scripts that don\'t support ResourceLoader
	 * @return Array
	 */",
 "/**
	 * Returns names of resources this gadget depends on
	 * @return Array
	 */",
 "/**
	 * Returns array of permissions required by this gadget
	 * @return Array
	 */",
 "/**
	 * Returns array of skins where this gadget works
	 * @return Array
	 */",
 "/**
	 * Loads and returns a list of all gadgets
	 * @return Mixed: Array of gadgets or false
	 */",
 "/**
	 * Checks whether gadget list from cache can be used.
	 * @param $gadgets array
	 * @return Boolean
	 */",
 "/**
	 * Loads list of gadgets and returns it as associative array of sections with gadgets
	 * e.g. array( \'sectionnname1\' => array( $gadget1, $gadget2),
	 *             \'sectionnname2\' => array( $gadget3 ) );
	 * @param $forceNewText String: New text of MediaWiki:gadgets-sdefinition. If specified, will
	 * 	      force a purge of cache and recreation of the gadget list.
	 * @return Mixed: Array or false
	 */",
 "/**
 * Wrapper for one gadget.
 */",
 "/**
	 * Creates an instance of this class
	 * @param $pages Array: Associative array of pages in ResourceLoaderWikiModule-compatible
	 * format, for example:
	 * array(
	 * 		\'MediaWiki:Gadget-foo.js\'  => array( \'type\' => \'script\' ),
	 * 		\'MediaWiki:Gadget-foo.css\' => array( \'type\' => \'style\' ),
	 * )
	 * @param $dependencies Array: Names of resources this module depends on
	 */",
 "/**
	 * Overrides the abstract function from ResourceLoaderWikiModule class
	 * @param $context ResourceLoaderContext
	 * @return Array: $pages passed to __construct()
	 */",
 "/**
	 * Overrides ResourceLoaderModule::getDependencies()
	 * @return Array: Names of resources this module depends on
	 */",
 "/**
 * Class representing a list of resources for one gadget
 */",
 "/**
	 * MySQL uses datatype defaults for NULL inserted into NOT NULL fields
	 * In namespace case that results into insert of 0 which is default namespace
	 * Oracle inserts NULL, so namespace fields should have a default value
	 */",
 "/**
	 * Uniform FK names + deferrable state
	 */",
 "/**
	 * Recreate functions to 17 schema layout
	 */",
 "/**
	 * Schema upgrade 16->17
	 * there are no incremental patches prior to this
	 */",
 "/**
	 * Insert page (page_id = 0) to prevent FK constraint violation
	 */",
 "/**
	 * Remove DEFAULT \'\' NOT NULL constraints from fields as \'\' is internally
	 * converted to NULL in Oracle
	 */",
 "/**
	 * Removed forcing of invalid state on recentchanges_fk2.
	 * cascading taken in account in the deleting function
	 */",
 "/**
	 * rebuilding of the function that duplicates tables for tests
	 */",
 "/**
	 * Overload: after this action field info table has to be rebuilt
	 *
	 * @param $what array
	 */",
 "/**
	 * Overload: because of the DDL_MODE tablename escaping is a bit dodgy
	 */",
 "/**
 * Class for handling updates to Oracle databases.
 *
 * @ingroup Deployment
 * @since 1.17
 */",
 "/**
	 * Gets list of pages used by this module
	 *
	 * @param $context ResourceLoaderContext
	 *
	 * @return Array: List of pages
	 */",
 "/**
	 * Gets group name
	 * 
	 * @return String: Name of group
	 */",
 "/**
 * Module for site customizations
 */",
 "/**
 * Test for PHP+libxml2 bug which breaks XML input subtly with certain versions.
 * Known fixed with PHP 5.2.9 + libxml2-2.7.3
 * @see http://bugs.php.net/bug.php?id=45996
 * @ingroup PHPBugTests
 */",
 "/**
 * Test for PHP bug #50394 (PHP 5.3.x conversion to null only, not 5.2.x)
 * @see http://bugs.php.net/bug.php?id=50394
 * @ingroup PHPBugTests
 */",
 "/**
	 * @param WebRequest $request
	 */",
 "/**
	 * Loader
	 */",
 "/**
	 * @private
	 */",
 "/**
	 * @private
	 */",
 "/**
	 * @private
	 */",
 "/**
	 * Actually add a user to the database.
	 * Give it a User object that has been initialised with a name.
	 *
	 * @param $u User object.
	 * @param $autocreate boolean -- true if this is an autocreation via auth plugin
	 * @return User object.
	 * @private
	 */",
 "/**
	 * Internally authenticate the login request.
	 *
	 * This may create a local account as a side effect if the
	 * authentication plugin allows transparent local account
	 * creation.
	 */",
 "/**
	 * Increment the login attempt throttle hit count for the (username,current IP)
	 * tuple unless the throttle was already reached.
	 * @param $username string The user name
	 * @return Bool|Integer The integer hit count or True if it is already at the limit
	 */",
 "/**
	 * Clear the login attempt throttle hit count for the (username,current IP) tuple.
	 * @param $username string The user name
	 * @return void
	 */",
 "/**
	 * Attempt to automatically create a user on login. Only succeeds if there
	 * is an external authentication method which allows it.
	 *
	 * @param $user User
	 *
	 * @return integer Status code
	 */",
 "/**
	 * @param $u User object
	 * @param $throttle Boolean
	 * @param $emailTitle String: message name of email title
	 * @param $emailText String: message name of email text
	 * @return Status object
	 */",
 "/**
	 * Run any hooks registered for logins, then HTTP redirect to
	 * $this->mReturnTo (or Main Page if that\'s undefined).  Formerly we had a
	 * nice message here, but that\'s really not as useful as just being sent to
	 * wherever you logged in from.  It should be clear that the action was
	 * successful, given the lack of error messages plus the appearance of your
	 * name in the upper right.
	 *
	 * @private
	 */",
 "/**
	 * Run any hooks registered for logins, then display a message welcoming
	 * the user.
	 *
	 * @private
	 */",
 "/**
	 * Display a \"login successful\" page.
	 */",
 "/**
	 * Output a message that informs the user that they cannot create an account because
	 * there is a block on them or their IP which prevents account creation.  Note that
	 * User::isBlockedFromCreateAccount(), which gets this block, ignores the \'hardblock\'
	 * setting on blocks (bug 13611).
	 * @param $block Block the block causing this error
	 */",
 "/**
	 * @private
	 */",
 "/**
	 * @private
	 *
	 * @param $user User
	 *
	 * @return Boolean
	 */",
 "/**
	 * Check if a session cookie is present.
	 *
	 * This will not pick up a cookie set during _this_ request, but is meant
	 * to ensure that the client is returning the cookie which was set on a
	 * previous pass through the system.
	 *
	 * @private
	 */",
 "/**
	 * Get the login token from the current session
	 */",
 "/**
	 * Randomly generate a new login token and attach it to the current session
	 */",
 "/**
	 * Remove any login token attached to the current session
	 */",
 "/**
	 * Get the createaccount token from the current session
	 */",
 "/**
	 * Randomly generate a new createaccount token and attach it to the current session
	 */",
 "/**
	 * Remove any createaccount token attached to the current session
	 */",
 "/**
	 * @private
	 */",
 "/**
	 * @private
	 */",
 "/**
	 * @private
	 */",
 "/**
	 * Produce a bar of links which allow the user to select another language
	 * during login/registration but retain \"returnto\"
	 *
	 * @return string
	 */",
 "/**
	 * Create a language selector link for a particular language
	 * Links back to this page preserving type and returnto
	 *
	 * @param $text Link text
	 * @param $lang Language code
	 */",
 "/**
 * Implements Special:UserLogin
 *
 * @ingroup SpecialPage
 */",
 "/**
	 * @param $titleObj Title
	 * @param $popts ParserOptions
	 * @param $pageId Int
	 * @param $getWikitext Bool
	 * @return ParserOutput
	 */",
 "/**
	 * @deprecated since 1.18 No modern skin generates language links this way, please use language links
	 *                        data to generate your own HTML.
	 * @param $languages array
	 * @return string
	 */",
 "/**
 * @ingroup API
 */",
 "/**
	 * @param $out OutputPage
	 */",
 "/**
 * @todo document
 * @ingroup Skins
 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * Compute the sidebar
	 * @access private
	 *
	 * @return string
	 */",
 "/**
	 * @param $key string
	 * @return string
	 */",
 "/**
	 * @param $label string
	 * @return string
	 */",
 "/** Tatar (Latin script) (Tatar??a)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Albert Fazl??
 * @author Don Alessandro
 * @author KhayR
 * @author Reedy
 * @author Urhixidur
 * @author ???????? ????????????????
 */",
 "/**
	 * Constructs a new module from an options array.
	 *
	 * @param $options Array: List of options; if not given or empty, an empty module will be
	 *     constructed
	 * @param $localBasePath String: Base path to prepend to all local paths in $options. Defaults
	 *     to $IP
	 * @param $remoteBasePath String: Base path to prepend to all remote paths in $options. Defaults
	 *     to $wgScriptPath
	 *
	 * Below is a description for the $options array:
	 * @par Construction options:
	 * @code
	 * 	array(
	 * 		// Base path to prepend to all local paths in $options. Defaults to $IP
	 * 		\'localBasePath\' => [base path],
	 * 		// Base path to prepend to all remote paths in $options. Defaults to $wgScriptPath
	 * 		\'remoteBasePath\' => [base path],
	 * 		// Equivalent of remoteBasePath, but relative to $wgExtensionAssetsPath
	 * 		\'remoteExtPath\' => [base path],
	 * 		// Scripts to always include
	 * 		\'scripts\' => [file path string or array of file path strings],
	 * 		// Scripts to include in specific language contexts
	 * 		\'languageScripts\' => array(
	 * 			[language code] => [file path string or array of file path strings],
	 * 		),
	 * 		// Scripts to include in specific skin contexts
	 * 		\'skinScripts\' => array(
	 * 			[skin name] => [file path string or array of file path strings],
	 * 		),
	 * 		// Scripts to include in debug contexts
	 * 		\'debugScripts\' => [file path string or array of file path strings],
	 * 		// Scripts to include in the startup module
	 * 		\'loaderScripts\' => [file path string or array of file path strings],
	 * 		// Modules which must be loaded before this module
	 * 		\'dependencies\' => [modile name string or array of module name strings],
	 * 		// Styles to always load
	 * 		\'styles\' => [file path string or array of file path strings],
	 * 		// Styles to include in specific skin contexts
	 * 		\'skinStyles\' => array(
	 * 			[skin name] => [file path string or array of file path strings],
	 * 		),
	 * 		// Messages to always load
	 * 		\'messages\' => [array of message key strings],
	 * 		// Group which this module should be loaded together with
	 * 		\'group\' => [group name string],
	 * 		// Position on the page to load this module at
	 * 		\'position\' => [\'bottom\' (default) or \'top\']
	 * 	)
	 * @endcode
	 */",
 "/**
	 * Gets all scripts for a given context concatenated together.
	 *
	 * @param $context ResourceLoaderContext: Context in which to generate script
	 * @return String: JavaScript code for $context
	 */",
 "/**
	 * @param $context ResourceLoaderContext
	 * @return array
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * Gets loader script.
	 *
	 * @return String: JavaScript code to be added to startup module
	 */",
 "/**
	 * Gets all styles for a given context concatenated together.
	 *
	 * @param $context ResourceLoaderContext: Context in which to generate styles
	 * @return String: CSS code for $context
	 */",
 "/**
	 * @param $context ResourceLoaderContext
	 * @return array
	 */",
 "/**
	 * Gets list of message keys used by this module.
	 *
	 * @return Array: List of message keys
	 */",
 "/**
	 * Gets the name of the group this module should be loaded in.
	 *
	 * @return String: Group name
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * Gets list of names of modules this module depends on.
	 *
	 * @return Array: List of module names
	 */",
 "/**
	 * Get the last modified timestamp of this module.
	 *
	 * Last modified timestamps are calculated from the highest last modified
	 * timestamp of this module\'s constituent files as well as the files it
	 * depends on. This function is context-sensitive, only performing
	 * calculations on files relevant to the given language, skin and debug
	 * mode.
	 *
	 * @param $context ResourceLoaderContext: Context in which to calculate
	 *     the modified time
	 * @return Integer: UNIX timestamp
	 * @see ResourceLoaderModule::getFileDependencies
	 */",
 "/**
	 * @param $path string
	 * @return string
	 */",
 "/**
	 * @param $path string
	 * @return string
	 */",
 "/**
	 * Collates file paths by option (where provided).
	 *
	 * @param $list Array: List of file paths in any combination of index/path
	 *     or path/options pairs
	 * @param $option String: option name
	 * @param $default Mixed: default value if the option isn\'t set
	 * @return Array: List of file paths, collated by $option
	 */",
 "/**
	 * Gets a list of element that match a key, optionally using a fallback key.
	 *
	 * @param $list Array: List of lists to select from
	 * @param $key String: Key to look for in $map
	 * @param $fallback String: Key to look for in $list if $key doesn\'t exist
	 * @return Array: List of elements from $map which matched $key or $fallback,
	 *     or an empty list in case of no match
	 */",
 "/**
	 * Gets a list of file paths for all scripts in this module, in order of propper execution.
	 *
	 * @param $context ResourceLoaderContext: Context
	 * @return Array: List of file paths
	 */",
 "/**
	 * Gets a list of file paths for all styles in this module, in order of propper inclusion.
	 *
	 * @param $context ResourceLoaderContext: Context
	 * @return Array: List of file paths
	 */",
 "/**
	 * Gets the contents of a list of JavaScript files.
	 *
	 * @param $scripts Array: List of file paths to scripts to read, remap and concetenate
	 * @return String: Concatenated and remapped JavaScript data from $scripts
	 */",
 "/**
	 * Gets the contents of a list of CSS files.
	 *
	 * @param $styles Array: List of media type/list of file paths pairs, to read, remap and
	 * concetenate
	 *
	 * @param $flip bool
	 *
	 * @return Array: List of concatenated and remapped CSS data from $styles,
	 *     keyed by media type
	 */",
 "/**
	 * Reads a style file.
	 *
	 * This method can be used as a callback for array_map()
	 *
	 * @param $path String: File path of style file to read
	 * @param $flip bool
	 *
	 * @return String: CSS data in script file
	 * @throws MWException if the file doesn\'t exist
	 */",
 "/**
	 * Safe version of filemtime(), which doesn\'t throw a PHP warning if the file doesn\'t exist
	 * but returns 1 instead.
	 * @param $filename string File name
	 * @return int UNIX timestamp, or 1 if the file doesn\'t exist
	 */",
 "/**
	 * Get whether CSS for this module should be flipped
	 * @param $context ResourceLoaderContext
	 * @return bool
	 */",
 "/**
 * ResourceLoader module based on local JavaScript/CSS files.
 */",
 "/** Assamese (??????????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Chaipau
 * @author Gahori
 * @author Gitartha.bordoloi
 * @author Jaminianurag
 * @author Nilamdyuti
 * @author Priyankoo
 * @author Psneog
 * @author Rajuonline
 * @author Reedy
 * @author Simbu123
 * @author Urhixidur
 */",
 "/**
	 * Tests zTXt tag (compressed textual metadata) 
	 */",
 "/**
	 * Test tEXt tag (Uncompressed textual metadata)
	 */",
 "/**
	 * tEXt tags must be encoded iso-8859-1 (vs iTXt which are utf-8)
	 * Make sure non-ascii characters get converted properly
	 */",
 "/**
	 * Test extraction of pHYs tags, which can tell what the
	 * actual resolution of the image is (aka in dots per meter).
	function testPngPhysTag () {
		$meta = PNGMetadataExtractor::getMetadata( $this->filePath .
			\'Png-native-test.png\' );

		$this->assertArrayHasKey( \'text\', $meta );
		$meta = $meta[\'text\'];

		$this->assertEquals( \'2835/100\', $meta[\'XResolution\'] );
		$this->assertEquals( \'2835/100\', $meta[\'YResolution\'] );
		$this->assertEquals( 3, $meta[\'ResolutionUnit\'] ); // 3 = cm
	}

	/**
	 * Given a normal static PNG, check the animation metadata returned.
	 */",
 "/**
	 * Given an animated APNG image file
	 * check it gets animated metadata right.
	 */",
 "/**
	 * @param $resultPageSet ApiPageSet
	 * @return void
	 */",
 "/**
	 * @param $resultPageSet ApiPageSet
	 * @return void
	 */",
 "/**
 * Query module to enumerate all available pages.
 *
 * @ingroup API
 */",
 "/**
 * Defines the maximum length of a string that string functions are allowed to operate on
 * Prevention against denial of service by string function abuses.
 */",
 "/**
 * Enable string functions.
 *
 * Set this to true if you want your users to be able to implement their own
 * parsers in the ugliest, most inefficient programming language known to man:
 * MediaWiki wikitext with ParserFunctions.
 *
 * WARNING: enabling this may have an adverse impact on the sanity of your users.
 * An alternative, saner solution for embedding complex text processing in
 * MediaWiki templates can be found at: http://www.mediawiki.org/wiki/Extension:Lua
 */",
 "/**
 * Enable Convert parser for converting between units of measurement
 */",
 "/**
 * The language for \'en\' is actually \'en-us\', which insists on using non-canonical translations
 * of the SI base units (\"meter\" rather than \"metre\" and \"liter\" rather than \"litre\").  We
 * can avoid contaminatng dialects by internally mapping languages by default; this is
 * configurable so you can remove it if you like, or add other maps if that\'s useful.
 * Essentially, if your wiki\'s $wgContLang appears as a key in this array, the value is
 * what is used as the default language for {{#convert}} output.
 */",
 "/** REGISTRATION */",
 "/**
 * @param $parser Parser
 * @return bool
 */",
 "/**
	 * Convert from the nominative form of a noun to some other case
	 * Invoked with {{grammar:case|word}}
	 *
	 * @param $word string
	 * @param $case string
	 * @return string
	 */",
 "/**
	 * @param $count int
	 * @param $forms array
	 * @return string
	 */",
 "/**
	 * Ukrainian numeric format is \"12??345,67\" but \"1234,56\"
	 *
	 * @param $_ string
	 *
	 * @return string
	 */",
 "/** Ukrainian (???????????????????? ????????)
 *
 * @ingroup Language
 */",
 "/**
 * Special page to direct the user to a random redirect page (minus the second redirect)
 *
 * @ingroup SpecialPage
 */",
 "/** Marathi (???????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Aan
 * @author Angela
 * @author Ankitgadgil
 * @author Balaji
 * @author Chandu
 * @author Dnyanesh325
 * @author Harshalhayat
 * @author Hemanshu
 * @author Hemant wikikosh1
 * @author Htt
 * @author Kaajawa
 * @author Kaganer
 * @author Kaustubh
 * @author Mahitgar
 * @author Marathipremi101
 * @author Mohanpurkar
 * @author Mvkulkarni23
 * @author Prabodh1987
 * @author Rahuldeshmukh101
 * @author Rdeshmuk
 * @author Sankalpdravid
 * @author Shantanoo
 * @author Shreewiki
 * @author Shreyas19
 * @author Sudhanwa
 * @author Tusharpawar1982
 * @author V.narsikar
 * @author Vpnagarkar
 * @author Ynwala
 * @author ????????? ????????????
 * @author ??????????????????????????????
 * @author ??????????????????????????????
 * @author ??????????????? ????????????????????????
 * @author ?????????????????????
 */",
 "/**
	 * Create a new image gallery object.
	 */",
 "/**
	 * Register a parser object
	 *
	 * @param $parser Parser
	 */",
 "/**
	 * Set bad image flag
	 */",
 "/**
	 * Set the caption (as plain text)
	 *
	 * @param $caption Caption
	 */",
 "/**
	 * Set the caption (as HTML)
	 *
	 * @param $caption String: Caption
	 */",
 "/**
	 * Set how many images will be displayed per row.
	 *
	 * @param $num Integer >= 0; If perrow=0 the gallery layout will adapt to screensize
	 * invalid numbers will be rejected
	 */",
 "/**
	 * Set how wide each image will be, in pixels.
	 *
	 * @param $num Integer > 0; invalid numbers will be ignored
	 */",
 "/**
	 * Set how high each image will be, in pixels.
	 *
	 * @param $num Integer > 0; invalid numbers will be ignored
	 */",
 "/**
	 * Instruct the class to use a specific skin for rendering
	 *
	 * @param $skin Skin object
	 * @deprecated since 1.18 Not used anymore
	 */",
 "/**
	 * Add an image to the gallery.
	 *
	 * @param $title Title object of the image that is added to the gallery
	 * @param $html  String: Additional HTML text to be shown. The name and size of the image are always shown.
	 * @param $alt   String: Alt text for the image
	 */",
 "/**
	* Add an image at the beginning of the gallery.
	*
	* @param $title Title object of the image that is added to the gallery
	* @param $html  String: Additional HTML text to be shown. The name and size of the image are always shown.
	* @param $alt   String: Alt text for the image
	*/",
 "/**
	 * isEmpty() returns true if the gallery contains no images
	 */",
 "/**
	 * Enable/Disable showing of the file size of an image in the gallery.
	 * Enabled by default.
	 *
	 * @param $f Boolean: set to false to disable.
	 */",
 "/**
	 * Enable/Disable showing of the filename of an image in the gallery.
	 * Enabled by default.
	 *
	 * @param $f Boolean: set to false to disable.
	 */",
 "/**
	 * Set arbitrary attributes to go on the HTML gallery output element.
	 * Should be suitable for a <ul> element.
	 *
	 * Note -- if taking from user input, you should probably run through
	 * Sanitizer::validateAttributes() first.
	 *
	 * @param $attribs Array of HTML attribute pairs
	 */",
 "/**
	 * Return a HTML representation of the image gallery
	 *
	 * For each image in the gallery, display
	 * - a thumbnail
	 * - the image name
	 * - the additional text provided when adding the image
	 * - the size of the image
	 *
	 */",
 "/**
	 * @return Integer: number of images in the gallery
	 */",
 "/**
	 * Set the contextual title
	 *
	 * @param $title Title: contextual title
	 */",
 "/**
	 * Get the contextual title, if applicable
	 *
	 * @return mixed Title or false
	 */",
 "/**
 * Image gallery
 *
 * Add images to the gallery using add(), then render that list to HTML using toHTML().
 *
 * @ingroup Media
 */",
 "/**
	 * Constructor
	 * @param $context IContextSource context to use
	 * @param $urls array
	 */",
 "/**
	 * Check whether external edit or diff should be used.
	 *
	 * @param $context IContextSource context to use
	 * @param $type String can be either \'edit\' or \'diff\'
	 * @return Bool
	 */",
 "/**
	 * Output the information for the external editor
	 */",
 "/**
 * Support for external editors to modify both text and files
 * in external applications. It works as follows: MediaWiki
 * sends a meta-file with the MIME type \'application/x-external-editor\'
 * to the client. The user has to associate that MIME type with
 * a helper application (a reference implementation in Perl
 * can be found in extensions/ee), which will launch the editor,
 * and save the modified data back to the server.
 *
 */",
 "/**
 * Handle a thumbnail request via query parameters
 *
 * @return void
 */",
 "/**
 * Handle a thumbnail request via thumbnail file URL
 *
 * @return void
 */",
 "/**
 * Stream a thumbnail specified by parameters
 *
 * @param $params Array
 * @return void
 */",
 "/**
 * Extract the required params for thumb.php from the thumbnail request URI.
 * At least \'width\' and \'f\' should be set if the result is an array.
 *
 * @param $uri String Thumbnail request URI path
 * @return Array|null associative params array or null
 */",
 "/**
 * Output a thumbnail generation error message
 *
 * @param $status integer
 * @param $msg string
 * @return void
 */",
 "/** Buginese (?????? ????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Ezagren
 * @author Kurniasan
 * @author Zaidpjd (on bug.wikipedia.org)
 */",
 "/**
	 * @param $skin Skin
	 * @param $result
	 * @return string
	 */",
 "/**
 * A querypage to list the most wanted categories - implements Special:Wantedcategories
 *
 * @ingroup SpecialPage
 */",
 "/**
 * This set of functions is only useful if youve added a param to the
 * following functions to force pure PHP usage.  I decided not to
 * commit that code since might produce a slowdown in the UTF
 * normalization code just for the sake of these tests. -- hexmode
 */",
 "/**
	* Constructor.
	*
	* Primary job is to initialize the XMLParser
	*/",
 "/**
	* Main use is if a single item has multiple xmp documents describing it.
	* For example in jpeg\'s with extendedXMP
	*/",
 "/** Destroy the xml parser
	*
	* Not sure if this is actually needed.
	*/",
 "/** Get the result array. Do some post-processing before returning
	* the array, and transform any metadata that is special-cased.
	*
	* @return Array array of results as an array of arrays suitable for
	*	FormatMetadata::getFormattedData().
	*/",
 "/**
	* Main function to call to parse XMP. Use getResults to
	* get results.
	*
	* Also catches any errors during processing, writes them to
	* debug log, blanks result array and returns false.
	*
	* @param $content String: XMP data
	* @param $allOfIt Boolean: If this is all the data (true) or if its split up (false). Default true
	* @param $reset Boolean: does xml parser need to be reset. Default false
	* @return Boolean success.
	*/",
 "/** Entry point for XMPExtended blocks in jpeg files
	 *
	 * @todo In serious need of testing
	 * @see http://www.adobe.ge/devnet/xmp/pdfs/XMPSpecificationPart3.pdf XMP spec part 3 page 20
	 * @param String $content XMPExtended block minus the namespace signature
	 * @return Boolean If it succeeded.
	 */",
 "/**
	* Character data handler
	* Called whenever character data is found in the xmp document.
	*
	* does nothing if we\'re in MODE_IGNORE or if the data is whitespace
	* throws an error if we\'re not in MODE_SIMPLE (as we\'re not allowed to have character
	* data in the other modes).
	*
	* As an example, this happens when we encounter XMP like:
	* <exif:DigitalZoomRatio>0/10</exif:DigitalZoomRatio>
	* and are processing the 0/10 bit.
	*
	* @param $parser XMLParser reference to the xml parser
	* @param $data String Character data
	* @throws MWException on invalid data
	*/",
 "/** When we hit a closing element in MODE_IGNORE
	* Check to see if this is the element we started to ignore,
	* in which case we get out of MODE_IGNORE
	*
	* @param $elm String Namespace of element followed by a space and then tag name of element.
	*/",
 "/**
	* Hit a closing element when in MODE_SIMPLE.
	* This generally means that we finished processing a
	* property value, and now have to save the result to the
	* results array
	*
	* For example, when processing:
	* <exif:DigitalZoomRatio>0/10</exif:DigitalZoomRatio>
	* this deals with when we hit </exif:DigitalZoomRatio>.
	*
	* Or it could be if we hit the end element of a property
	* of a compound data structure (like a member of an array).
	*
	* @param $elm String namespace, space, and tag name.
	*/",
 "/**
	* Hit a closing element in MODE_STRUCT, MODE_SEQ, MODE_BAG
	* generally means we\'ve finished processing a nested structure.
	* resets some internal variables to indicate that.
	*
	* Note this means we hit the </closing element> not the </rdf:Seq>.
	*
	* For example, when processing:
	* <exif:ISOSpeedRatings> <rdf:Seq> <rdf:li>64</rdf:li>
	*   </rdf:Seq> </exif:ISOSpeedRatings>
	*
	* This method is called when we hit the </exif:ISOSpeedRatings> tag.
	*
	* @param $elm String namespace . space . tag name.
	*/",
 "/**
	* Hit a closing element in MODE_LI (either rdf:Seq, or rdf:Bag )
	* Add information about what type of element this is.
	*
	* Note we still have to hit the outer </property>
	*
	* For example, when processing:
	* <exif:ISOSpeedRatings> <rdf:Seq> <rdf:li>64</rdf:li>
	*   </rdf:Seq> </exif:ISOSpeedRatings>
	*
	* This method is called when we hit the </rdf:Seq>.
	* (For comparison, we call endElementModeSimple when we
	* hit the </rdf:li>)
	*
	* @param $elm String namespace . \' \' . element name
	*/",
 "/**
	* End element while in MODE_QDESC
	* mostly when ending an element when we have a simple value
	* that has qualifiers.
	*
	* Qualifiers aren\'t all that common, and we don\'t do anything
	* with them.
	*
	* @param $elm String namespace and element
	*/",
 "/**
	* Handler for hitting a closing element.
	*
	* generally just calls a helper function depending on what
	* mode we\'re in.
	*
	* Ignores the outer wrapping elements that are optional in
	* xmp and have no meaning.
	*
	* @param $parser XMLParser
	* @param $elm String namespace . \' \' . element name
	*/",
 "/**
	* Hit an opening element while in MODE_IGNORE
	*
	* XMP is extensible, so ignore any tag we don\'t understand.
	*
	* Mostly ignores, unless we encounter the element that we are ignoring.
	* in which case we add it to the item stack, so we can ignore things
	* that are nested, correctly.
	*
	* @param $elm String namespace . \' \' . tag name
	*/",
 "/**
	*  Start element in MODE_BAG (unordered array)
	* this should always be <rdf:Bag>
	*
	* @param $elm String namespace . \' \' . tag
	* @throws MWException if we have an element that\'s not <rdf:Bag>
	*/",
 "/**
	* Start element in MODE_SEQ (ordered array)
	* this should always be <rdf:Seq>
	*
	* @param $elm String namespace . \' \' . tag
	* @throws MWException if we have an element that\'s not <rdf:Seq>
	*/",
 "/**
	* Start element in MODE_LANG (language alternative)
	* this should always be <rdf:Alt>
	*
	* This tag tends to be used for metadata like describe this
	* picture, which can be translated into multiple languages.
	*
	* XMP supports non-linguistic alternative selections,
	* which are really only used for thumbnails, which
	* we don\'t care about.
	*
	* @param $elm String namespace . \' \' . tag
	* @throws MWException if we have an element that\'s not <rdf:Alt>
	*/",
 "/**
	* Handle an opening element when in MODE_SIMPLE
	*
	* This should not happen often. This is for if a simple element
	* already opened has a child element. Could happen for a
	* qualified element.
	*
	* For example:
	* <exif:DigitalZoomRatio><rdf:Description><rdf:value>0/10</rdf:value>
	*   <foo:someQualifier>Bar</foo:someQualifier> </rdf:Description>
	*   </exif:DigitalZoomRatio>
	*
	* This method is called when processing the <rdf:Description> element
	*
	* @param $elm String namespace and tag names separated by space.
	* @param $attribs Array Attributes of the element.
	*/",
 "/**
	* Start an element when in MODE_QDESC.
	* This generally happens when a simple element has an inner
	* rdf:Description to hold qualifier elements.
	*
	* For example in:
	* <exif:DigitalZoomRatio><rdf:Description><rdf:value>0/10</rdf:value>
	*   <foo:someQualifier>Bar</foo:someQualifier> </rdf:Description>
	*   </exif:DigitalZoomRatio>
	* Called when processing the <rdf:value> or <foo:someQualifier>.
	*
	* @param $elm String namespace and tag name separated by a space.
	*
	*/",
 "/**
	* Starting an element when in MODE_INITIAL
	* This usually happens when we hit an element inside
	* the outer rdf:Description
	*
	* This is generally where most properties start.
	*
	* @param $ns String Namespace
	* @param $tag String tag name (without namespace prefix)
	* @param $attribs Array array of attributes
	*/",
 "/**
	* Hit an opening element when in a Struct (MODE_STRUCT)
	* This is generally for fields of a compound property.
	*
	* Example of a struct (abbreviated; flash has more properties):
	*
	* <exif:Flash> <rdf:Description> <exif:Fired>True</exif:Fired>
	*  <exif:Mode>1</exif:Mode></rdf:Description></exif:Flash>
	*
	* or:
	*
	* <exif:Flash rdf:parseType=\'Resource\'> <exif:Fired>True</exif:Fired>
	*  <exif:Mode>1</exif:Mode></exif:Flash>
	*
	* @param $ns String namespace
	* @param $tag String tag name (no ns)
	* @param $attribs Array array of attribs w/ values.
	*/",
 "/**
	* opening element in MODE_LI
	* process elements of arrays.
	*
	* Example:
	* <exif:ISOSpeedRatings> <rdf:Seq> <rdf:li>64</rdf:li>
	*   </rdf:Seq> </exif:ISOSpeedRatings>
	* This method is called when we hit the <rdf:li> element.
	*
	* @param $elm String: namespace . \' \' . tagname
	* @param $attribs Array: Attributes. (needed for BAGSTRUCTS)
	* @throws MWException if gets a tag other than <rdf:li>
	*/",
 "/**
	* Opening element in MODE_LI_LANG.
	* process elements of language alternatives
	*
	* Example:
	* <dc:title> <rdf:Alt> <rdf:li xml:lang=\"x-default\">My house
	*  </rdf:li> </rdf:Alt> </dc:title>
	*
	* This method is called when we hit the <rdf:li> element.
	*
	* @param $elm String namespace . \' \' . tag
	* @param $attribs array array of elements (most importantly xml:lang)
	* @throws MWException if gets a tag other than <rdf:li> or if no xml:lang
	*/",
 "/**
	* Hits an opening element.
	* Generally just calls a helper based on what MODE we\'re in.
	* Also does some initial set up for the wrapper element
	*
	* @param $parser XMLParser
	* @param $elm String namespace <space> element
	* @param $attribs Array attribute name => value
	*/",
 "/**
	* Process attributes.
	* Simple values can be stored as either a tag or attribute
	*
	* Often the initial <rdf:Description> tag just has all the simple
	* properties as attributes.
	*
	* Example:
	* <rdf:Description rdf:about=\"\" xmlns:exif=\"http://ns.adobe.com/exif/1.0/\" exif:DigitalZoomRatio=\"0/10\">
	*
	* @param $attribs Array attribute=>value array.
	*/",
 "/**
	* Given an extracted value, save it to results array
	*
	* note also uses $this->ancestorStruct and
	* $this->processingArray to determine what name to
	* save the value under. (in addition to $tag).
	*
	* @param $ns String namespace of tag this is for
	* @param $tag String tag name
	* @param $val String value to save
	*/",
 "/**
* Class for reading xmp data containing properties relevant to
* images, and spitting out an array that FormatExif accepts.
*
* Note, this is not meant to recognize every possible thing you can
* encode in XMP. It should recognize all the properties we want.
* For example it doesn\'t have support for structures with multiple
* nesting levels, as none of the properties we\'re supporting use that
* feature. If it comes across properties it doesn\'t recognize, it should
* ignore them.
*
* The public methods one would call in this class are
* - parse( $content )
*	Reads in xmp content.
*	Can potentially be called multiple times with partial data each time.
* - parseExtended( $content )
*	Reads XMPExtended blocks (jpeg files only).
* - getResults
*	Outputs a results array.
*
* Note XMP kind of looks like rdf. They are not the same thing - XMP is
* encoded as a specific subset of rdf. This class can read XMP. It cannot
* read rdf.
*
*/",
 "/**
	 * Retrieves a configuration setting for a given wiki.
	 * @param $settingName String ID of the setting name to retrieve
	 * @param $wiki String Wiki ID of the wiki in question.
	 * @param $suffix String The suffix of the wiki in question.
	 * @param $params Array List of parameters. $.\'key\' is replaced by $value in all returned data.
	 * @param $wikiTags Array The tags assigned to the wiki.
	 * @return Mixed the value of the setting requested.
	 */",
 "/**
	 * Really retrieves a configuration setting for a given wiki.
	 *
	 * @param $settingName String ID of the setting name to retrieve.
	 * @param $wiki String Wiki ID of the wiki in question.
	 * @param $params Array: array of parameters.
	 * @return Mixed the value of the setting requested.
	 */",
 "/**
	 * Type-safe string replace; won\'t do replacements on non-strings
	 * private?
	 *
	 * @param $from
	 * @param $to
	 * @param $in
	 * @return string
	 */",
 "/**
	 * Gets all settings for a wiki
	 * @param $wiki String Wiki ID of the wiki in question.
	 * @param $suffix String The suffix of the wiki in question.
	 * @param $params Array List of parameters. $.\'key\' is replaced by $value in all returned data.
	 * @param $wikiTags Array The tags assigned to the wiki.
	 * @return Array Array of settings requested.
	 */",
 "/**
	 * Retrieves a configuration setting for a given wiki, forced to a boolean.
	 * @param $setting String ID of the setting name to retrieve
	 * @param $wiki String Wiki ID of the wiki in question.
	 * @param $suffix String The suffix of the wiki in question.
	 * @param $wikiTags Array The tags assigned to the wiki.
	 * @return bool The value of the setting requested.
	 */",
 "/**
	 * Retrieves an array of local databases
	 *
	 * @return array
	 */",
 "/**
	 * Retrieves the value of a given setting, and places it in a variable passed by reference.
	 * @param $setting String ID of the setting name to retrieve
	 * @param $wiki String Wiki ID of the wiki in question.
	 * @param $suffix String The suffix of the wiki in question.
	 * @param $var Reference The variable to insert the value into.
	 * @param $params Array List of parameters. $.\'key\' is replaced by $value in all returned data.
	 * @param $wikiTags Array The tags assigned to the wiki.
	 */",
 "/**
	 * Retrieves the value of a given setting, and places it in its corresponding global variable.
	 * @param $setting String ID of the setting name to retrieve
	 * @param $wiki String Wiki ID of the wiki in question.
	 * @param $suffix String The suffix of the wiki in question.
	 * @param $params Array List of parameters. $.\'key\' is replaced by $value in all returned data.
	 * @param $wikiTags Array The tags assigned to the wiki.
	 */",
 "/**
	 * @param $setting string
	 * @param $wiki string
	 * @param $params array
	 */",
 "/**
	 * Retrieves the values of all settings, and places them in their corresponding global variables.
	 * @param $wiki String Wiki ID of the wiki in question.
	 * @param $suffix String The suffix of the wiki in question.
	 * @param $params Array List of parameters. $.\'key\' is replaced by $value in all returned data.
	 * @param $wikiTags Array The tags assigned to the wiki.
	 */",
 "/**
	 * Return specific settings for $wiki
	 * See the documentation of self::$siteParamsCallback for more in-depth
	 * documentation about this function
	 *
	 * @param $wiki String
	 * @return array
	 */",
 "/**
	 * Merge params between the ones passed to the function and the ones given
	 * by self::$siteParamsCallback for backward compatibility
	 * Values returned by self::getWikiParams() have the priority.
	 *
	 * @param $wiki String Wiki ID of the wiki in question.
	 * @param $suffix String The suffix of the wiki in question.
	 * @param $params Array List of parameters. $.\'key\' is replaced by $value in
	 *                all returned data.
	 * @param $wikiTags Array The tags assigned to the wiki.
	 * @return array
	 */",
 "/**
	 * Work out the site and language name from a database name
	 * @param $db
	 *
	 * @return array
	 */",
 "/**
	 * Returns true if the given vhost is handled locally.
	 * @param $vhost String
	 * @return bool
	 */",
 "/**
	 * Merge multiple arrays together.
	 * On encountering duplicate keys, merge the two, but ONLY if they\'re arrays.
	 * PHP\'s array_merge_recursive() merges ANY duplicate values into arrays,
	 * which is not fun
	 *
	 * @param $array1 array
	 *
	 * @return array
	 */",
 "/**
 * This is a class used to hold configuration settings, particularly for multi-wiki sites.
 */",
 "/** Silesian (??l??nski)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Britscher
 * @author Danny B.
 * @author Djpalar
 * @author Gaj777
 * @author Herr Kriss
 * @author Kaganer
 * @author Lajsikonik
 * @author Leinad
 * @author Lwh
 * @author Ozi64
 * @author Pimke
 * @author Przemub
 * @author Tcho??
 * @author Timpul
 */",
 "/**
	 * Convert from the nominative form of a noun to some other case
	 * Invoked with {{grammar:case|word}}
	 *
	 * @param $word string
	 * @param $case string
	 * @return string
	 */",
 "/**
	 * @param $count int
	 * @param $forms array
	 * @return string
	 */",
 "/** Old Church Slavonic (?????????? ????????????????????)
 *
 * @ingroup Language
 */",
 "/**
	 * Populates the search index with content from all pages
	 */",
 "/**
	 * (MySQL only) Drops fulltext index before populating the table.
	 */",
 "/**
	 * (MySQL only) Adds back fulltext index after populating the table.
	 */",
 "/**
	 * Deletes everything from search index.
	 */",
 "/**
	 * Convert from the nominative form of a noun to some other case
	 * Invoked with {{grammar:case|word}}
	 *
	 * @param $word string
	 * @param $case string
	 * @return string
	 */",
 "/**
	 * @param $count int
	 * @param $forms array
	 * @return string
	 */",
 "/** Upper Sorbian (Hornjoserbsce)
 *
 * @ingroup Language
 */",
 "/**
 * API Serialized PHP output formatter
 * @ingroup API
 */",
 "/** Latgalian (Latga??u)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Dark Eagle
 * @author Gleb Borisov
 * @author Jureits
 * @author Reedy
 */",
 "/**
	 * @param $skin Skin object
	 * @param $result Object: database row
	 */",
 "/**
 * Special page for listing the articles with the fewest revisions.
 *
 * @ingroup SpecialPage
 * @author Martin Drashkov
 */",
 "/**
	 * Get a key on the primary cache for this repository.
	 * Returns false if the repository\'s cache is not accessible at this site. 
	 * The parameters are the parts of the key, as for wfMemcKey().
	 */",
 "/**
 * A foreign repository with a MediaWiki database accessible via the configured LBFactory
 *
 * @ingroup FileRepo
 */",
 "/**
 * @group Database
 */",
 "/** Romagnol (Rumagn??l)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Reedy
 * @author Sentruper
 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @param $sql string
	 * @return resource
	 */",
 "/**
	 * @param $server string
	 * @param $user string
	 * @param $password string
	 * @param $dbName string
	 * @return bool
	 * @throws DBConnectionError
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * @param $res ResultWrapper
	 * @throws DBUnexpectedError
	 */",
 "/**
	 * @param $res ResultWrapper
	 * @return object|stdClass
	 * @throws DBUnexpectedError
	 */",
 "/**
	 * @param $res ResultWrapper
	 * @return array
	 * @throws DBUnexpectedError
	 */",
 "/**
	 * @throws DBUnexpectedError
	 * @param $res ResultWrapper
	 * @return int
	 */",
 "/**
	 * @param $res ResultWrapper
	 * @return int
	 */",
 "/**
	 * @param $res ResultWrapper
	 * @param $n string
	 * @return string
	 */",
 "/**
	 * @return int
	 */",
 "/**
	 * @param $res ResultWrapper
	 * @param $row
	 * @return bool
	 */",
 "/**
	 * @return int
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return int
	 */",
 "/**
	 * @param $table string
	 * @param $uniqueIndexes
	 * @param $rows array
	 * @param $fname string
	 * @return ResultWrapper
	 */",
 "/**
	 * Estimate rows in dataset
	 * Returns estimated count, based on EXPLAIN output
	 * Takes same arguments as Database::select()
	 *
	 * @param $table string|array
	 * @param $vars string|array
	 * @param $conds string|array
	 * @param $fname string
	 * @param $options string|array
	 * @return int
	 */",
 "/**
	 * @param $table string
	 * @param $field string
	 * @return bool|MySQLField
	 */",
 "/**
	 * Get information about an index into an object
	 * Returns false if the index does not exist
	 *
	 * @param $table string
	 * @param $index string
	 * @param $fname string
	 * @return false|array
	 */",
 "/**
	 * @param $db
	 * @return bool
	 */",
 "/**
	 * @param $s string
	 *
	 * @return string
	 */",
 "/**
	 * MySQL uses `backticks` for identifier quoting instead of the sql standard \"double quotes\".
	 *
	 * @param $s string
	 *
	 * @return string
	 */",
 "/**
	 * @param $name string
	 * @return bool
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * Returns slave lag.
	 *
	 * This will do a SHOW SLAVE STATUS
	 *
	 * @return int
	 */",
 "/**
	 * @return bool|int
	 */",
 "/**
	 * @deprecated in 1.19, use getLagFromSlaveStatus
	 *
	 * @return bool|int
	 */",
 "/**
	 * Wait for the slave to catch up to a given master position.
	 *
	 * @param $pos DBMasterPos object
	 * @param $timeout Integer: the maximum number of seconds to wait for synchronisation
	 * @return bool|string
	 */",
 "/**
	 * Get the position of the master from SHOW SLAVE STATUS
	 *
	 * @return MySQLMasterPos|false
	 */",
 "/**
	 * Get the position of the master from SHOW MASTER STATUS
	 *
	 * @return MySQLMasterPos|false
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @param $index
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * @param $options array
	 */",
 "/**
	 * @param $lockName string
	 * @param $method string
	 * @param $timeout int
	 * @return bool
	 */",
 "/**
	 * FROM MYSQL DOCS: http://dev.mysql.com/doc/refman/5.0/en/miscellaneous-functions.html#function_release-lock
	 * @param $lockName string
	 * @param $method string
	 * @return bool
	 */",
 "/**
	 * @param $read array
	 * @param $write array
	 * @param $method string
	 * @param $lowPriority bool
	 */",
 "/**
	 * @param $method string
	 */",
 "/**
	 * Get search engine class. All subclasses of this
	 * need to implement this if they wish to use searching.
	 *
	 * @return String
	 */",
 "/**
	 * @param bool $value
	 * @return mixed
	 */",
 "/**
	 * DELETE where the condition is a join. MySql uses multi-table deletes.
	 * @param $delTable string
	 * @param $joinTable string
	 * @param $delVar string
	 * @param $joinVar string
	 * @param $conds array|string
	 * @param $fname bool
	 * @return bool|ResultWrapper
	 */",
 "/**
	 * Determines how long the server has been up
	 *
	 * @return int
	 */",
 "/**
	 * Determines if the last failure was due to a deadlock
	 *
	 * @return bool
	 */",
 "/**
	 * Determines if the last failure was due to a lock timeout
	 *
	 * @return bool
	 */",
 "/**
	 * Determines if the last query error was something that should be dealt
	 * with by pinging the connection and reissuing the query
	 *
	 * @return bool
	 */",
 "/**
	 * Determines if the last failure was due to the database being read-only.
	 *
	 * @return bool
	 */",
 "/**
	 * @param $oldName
	 * @param $newName
	 * @param $temporary bool
	 * @param $fname string
	 */",
 "/**
	 * List all tables on the database
	 *
	 * @param $prefix Only show tables with this prefix, e.g. mw_
	 * @param $fname String: calling function name
	 * @return array
	 */",
 "/**
	 * @param $tableName
	 * @param $fName string
	 * @return bool|ResultWrapper
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * Get status information from SHOW STATUS in an associative array
	 *
	 * @param $which string
	 * @return array
	 */",
 "/**
 * Database abstraction object for mySQL
 * Inherit all methods and properties of Database::Database()
 *
 * @ingroup Database
 * @see Database
 */",
 "/**
 * Legacy support: Database == DatabaseMysql
 *
 * @deprecated in 1.16
 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * @return bool
	 */",
 "/**
 * Utility class.
 * @ingroup Database
 */",
 "/**
 * Maintenance script to import one or more images from the local file system into
 * the wiki without using the web-based interface.
 *
 * \"Smart import\" additions:
 * - aim: preserve the essential metadata (user, description) when importing medias from an existing wiki
 * - process:
 *      - interface with the source wiki, don\'t use bare files only (see --source-wiki-url).
 *      - fetch metadata from source wiki for each file to import.
 *      - commit the fetched metadata to the destination wiki while submitting.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @file
 * @ingroup Maintenance
 * @author Rob Church <robchur@gmail.com>
 * @author Mij <mij@bitchx.it>
 */",
 "/** Chavacano de Zamboanga (Chavacano de Zamboanga)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Weekeejames
 */",
 "/**
	 * @param $title Title
	 * @return Skin
	 * @deprecated since 1.18 Use Linker::* instead
	 */",
 "/**
	 * You shouldn\'t use this. Really. $parser->getFunctionLang() is all you need.
	 * Using this fragments the cache and is discouraged. Yes, {{int: }} uses this,
	 * producing inconsistent tables (Bug 14404).
	 *
	 * @return Language object
	 * @since 1.19
	 */",
 "/**
	 * Same as getUserLangObj() but returns a string instead.
	 *
	 * @return String   Language code
	 * @since 1.17
	 */",
 "/** @deprecated in 1.19; will be removed in 1.20 */",
 "/**
	 * Extra key that should be present in the parser cache key.
	 */",
 "/**
	 * Constructor
	 * @param $user User object
	 * @param $lang Language object
	 */",
 "/**
	 * Get a ParserOptions object from a given user.
	 * Language will be taken from $wgLang.
	 *
	 * @param $user User object
	 * @return ParserOptions object
	 */",
 "/**
	 * Get a ParserOptions object from a given user and language
	 *
	 * @param $user User object
	 * @param $lang Language object
	 * @return ParserOptions object
	 */",
 "/**
	 * Get a ParserOptions object from a IContextSource object
	 *
	 * @param $context IContextSource object
	 * @return ParserOptions object
	 */",
 "/** 
	 * Get user options 
	 *
	 * @param $user User object
	 * @param $lang Language object
	 */",
 "/**
	 * Registers a callback for tracking which ParserOptions which are used.
	 * This is a private API with the parser.
	 */",
 "/**
	 * Called when an option is accessed.
	 */",
 "/**
	 * Returns the full array of options that would have been used by
	 * in 1.16.
	 * Used to get the old parser cache entries when available.
	 */",
 "/**
	 * Generate a hash string with the values set on these ParserOptions
	 * for the keys given in the array.
	 * This will be used as part of the hash key for the parser cache,
	 * so users sharign the options with vary for the same page share
	 * the same cached data safely.
	 *
	 * Replaces User::getPageRenderingHash()
	 *
	 * Extensions which require it should install \'PageRenderingHash\' hook,
	 * which will give them a chance to modify this key based on their own
	 * settings.
	 *
	 * @since 1.17
	 * @param $forOptions Array
	 * @param $title Title: used to get the content language of the page (since r97636)
	 * @return string Page rendering hash
	 */",
 "/**
 * \brief Set options of the Parser
 *
 * All member variables are supposed to be private in theory, although in practise this is not the case.
 *
 * @ingroup Parser
 */",
 "/** Turkmen (T??rkmen??e)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Cekli829
 * @author Flrn
 * @author Hanberke
 * @author Kaganer
 * @author Runningfridgesrule
 * @author The Evil IP address
 */",
 "/** Latin (Latina)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Andrew Dalby
 * @author Dferg
 * @author Esteban97
 * @author Kaganer
 * @author LeighvsOptimvsMaximvs
 * @author McDutchie
 * @author MissPetticoats
 * @author Omnipaedista
 * @author OrbiliusMagister
 * @author Ornil
 * @author Rafaelgarcia
 * @author SPQRobin
 * @author UV
 * @author ??ek??il71pl
 * @author ???????? ????????????????
 */",
 "/** Chuvash (??????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Amire80
 * @author Chavash
 * @author FLAGELLVM DEI
 * @author PCode
 * @author ?????????????????? ??????????????
 */",
 "/**
 * Mark a revision as patrolled on a page
 *
 * Copyright ?? 2011 Alexandre Emsenhuber
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA
 *
 * @file
 * @ingroup Actions
 */",
 "/**
	 * Get the captcha body.  Don\'t include any of the surrounding table cells/rows
	 *
	 * @param  $value String
	 * @return String
	 */",
 "/**
	 * @param  $request WebRequest
	 * @return void
	 */",
 "/**
 * HTMLFormField for inserting Captchas into a form.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @class
 */",
 "/**
	 * Checks whether PHP has SQLite support
	 * @return bool
	 */",
 "/**
	 * Checks given files for correctness of SQL syntax. MySQL DDL will be converted to
	 * SQLite-compatible during processing.
	 * Will throw exceptions on SQL errors
	 * @return mixed true if no error or error string in case of errors
	 */",
 "/**
 * This class contains code common to different SQLite-related maintenance scripts
 */",
 "/**
	 * Adds an item of text, returns a stub object which points to the item.
	 * You must call setLocation() on the stub object before storing it to the
	 * database
	 *
	 * @param $text string
	 *
	 * @return String: the key for getItem()
	 */",
 "/**
	 * Get item by key, or false if the key is not present
	 *
	 * @param $key string
	 *
	 * @return String or false
	 */",
 "/**
	 * Set the \"default text\"
	 * This concept is an odd property of the current DB schema, whereby each text item has a revision
	 * associated with it. The default text is the text of the associated revision. There may, however,
	 * be other revisions in the same object.
	 *
	 * Default text is not required for two-part external storage URLs.
	 *
	 * @param $text string
	 */",
 "/**
	 * Get default text. This is called from Revision::getRevisionText()
	 *
	 * @return String
	 */",
 "/**
 * Base class for general text storage via the \"object\" flag in old_flags, or 
 * two-part external storage URLs. Used for represent efficient concatenated 
 * storage, and migration-related pointer objects.
 */",
 "/** Constructor */",
 "/**
	 * @param $text string
	 * @return string
	 */",
 "/**
	 * @param $hash string
	 * @return array|bool
	 */",
 "/**
	 * @param $text string
	 * @return void
	 */",
 "/**
	 * @return array|bool
	 */",
 "/**
	 * Remove an item
	 *
	 * @param $hash string
	 */",
 "/**
	 * Compress the bulk data in the object
	 */",
 "/**
	 * Uncompress bulk data
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * Helper function for compression jobs
	 * Returns true until the object is \"full\" and ready to be committed
	 *
	 * @return bool
	 */",
 "/**
 * Concatenated gzip (CGZ) storage
 * Improves compression ratio by concatenating like objects before gzipping
 */",
 "/**
	 * @param $hash Strng: the content hash of the text
	 * @param $oldid Integer: the old_id for the CGZ object
	 */",
 "/**
	 * Sets the location (old_id) of the main object to which this object
	 * points
	 */",
 "/**
	 * Sets the location (old_id) of the referring object
	 */",
 "/**
	 * Gets the location of the referring object
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * Get the content hash
	 *
	 * @return string
	 */",
 "/**
 * Pointer object for an item within a CGZ blob stored in the text table.
 */",
 "/**
	 * @param $curid Integer: the cur_id pointed to
	 */",
 "/**
	 * Sets the location (cur_id) of the main object to which this object
	 * points
	 *
	 * @param $id int
	 */",
 "/**
	 * @return string|false
	 */",
 "/**
 * To speed up conversion from 1.4 to 1.5 schema, text rows can refer to the
 * leftover cur table as the backend. This avoids expensively copying hundreds
 * of megabytes of data during the conversion downtime.
 *
 * Serialized HistoryBlobCurStub objects will be inserted into the text table
 * on conversion if $wgFastSchemaUpgrades is set to true.
 */",
 "/**
	 * @throws MWException
	 * @param $text string
	 * @return int
	 */",
 "/**
	 * @param $key string
	 * @return string
	 */",
 "/**
	 * @param $text string
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @throws MWException
	 */",
 "/**
	 * @param $t1
	 * @param $t2
	 * @return string
	 */",
 "/**
	 * @param $base
	 * @param $diff
	 * @return bool|string
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * Helper function for compression jobs
	 * Returns true until the object is \"full\" and ready to be committed
	 *
	 * @return bool
	 */",
 "/**
 * Diff-based history compression
 * Requires xdiff 1.5+ and zlib
 */",
 "/**
 * Aliases for special pages
 *
 * @file
 * @ingroup Extensions
 */",
 "/** English (English) */",
 "/** Arabic (??????????????) */",
 "/** Egyptian Spoken Arabic (????????) */",
 "/** Esperanto (Esperanto) */",
 "/** Estonian (eesti) */",
 "/** Persian (??????????) */",
 "/** Finnish (suomi) */",
 "/** Galician (Galego) */",
 "/** Hindi (??????????????????) */",
 "/** Japanese (?????????) */",
 "/** Korean (?????????) */",
 "/** Colognian (Ripoarisch) */",
 "/** Cornish (kernowek) */",
 "/** Macedonian (????????????????????) */",
 "/** Malayalam (??????????????????) */",
 "/** Serbian (Cyrillic script) (??????????????? (????????????????)???) */",
 "/** Cantonese (??????) */",
 "/** Simplified Chinese (????????????????????????) */",
 "/** Traditional Chinese (????????????????????????) */",
 "/**
	 * Checks for a change in the bitfield for a certain option and updates the
	 * provided array accordingly.
	 *
	 * @param $desc String: description to add to the array if the option was
	 * enabled / disabled.
	 * @param $field Integer: the bitmask describing the single option.
	 * @param $diff Integer: the xor of the old and new bitfields.
	 * @param $new Integer: the new bitfield
	 * @param $arr Array: the array to update.
	 */",
 "/**
	 * Gets an array of message keys describing the changes made to the
	 * visibility of the revision.
	 *
	 * If the resulting array is $arr, then $arr[0] will contain an array of
	 * keys describing the items that were hidden, $arr[1] will contain
	 * an array of keys describing the items that were unhidden, and $arr[2]
	 * will contain an array with a single message key, which can be one of
	 * \"revdelete-restricted\", \"revdelete-unrestricted\" indicating (un)suppression
	 * or null to indicate nothing in particular.
	 * You can turn the keys in $arr[0] and $arr[1] into message keys by
	 * appending -hid and and -unhid to the keys respectively.
	 *
	 * @param $n Integer: the new bitfield.
	 * @param $o Integer: the old bitfield.
	 * @return An array as described above.
	 * @since 1.19 public
	 */",
 "/** Get DB field name for URL param...
	 * Future code for other things may also track
	 * other types of revision-specific changes.
	 * @return string One of log_id/rev_id/fa_id/ar_timestamp/oi_archive_name
	 */",
 "/**
	 * Checks if a revision still exists in the revision table.
	 * If it doesn\'t, returns the corresponding ar_timestamp field
	 * so that this key can be used instead.
	 *
	 * @param $title Title
	 * @param  $revid
	 * @return bool|mixed
	 */",
 "/**
	 * Creates utility links for log entries.
	 *
	 * @param $title Title
	 * @param $paramArray Array
	 * @param $messages
	 * @return String
	 */",
 "/**
 * Temporary b/c interface, collection of static functions.
 * @ingroup SpecialPage
 */",
 "/**
	 * @dataProvider provideGetGroupsWithPermission
	 */",
 "/**
	 * @dataProvider provideUserNames
	 */",
 "/**
 * @group Database
 */",
 "/**
	 * Get a list of all explicit groups
	 * @return array
	 */",
 "/**
	 * Preserve group and username offset parameters when paging
	 * @return array
	 */",
 "/**
	 * Get a list of groups the specified user belongs to
	 *
	 * @param $uid Integer: user id
	 * @return array
	 */",
 "/**
	 * Format a link to a group description page
	 *
	 * @param $group String: group name
	 * @param $username String Username
	 * @return string
	 */",
 "/**
 * This class is used to get a list of user. The ones with specials
 * rights (sysop, bureaucrat, developer) will have them displayed
 * next to their names.
 *
 * @ingroup SpecialPage
 */",
 "/**
	 * Constructor
	 */",
 "/**
	 * Show the special page
	 *
	 * @param $par string (optional) A group to list users from
	 */",
 "/**
 * @ingroup SpecialPage
 */",
 "/**
	 * Put XMP in, compare what comes out...
	 *
	 * @param $xmp String the actual xml data.
	 * @param $expected Array expected result of parsing the xmp.
	 * @param $info String Short sentence on what\'s being tested.
	 *
	 * @dataProvider dataXMPParse
	 */",
 "/** Test ExtendedXMP block support. (Used when the XMP has to be split
	 * over multiple jpeg segments, due to 64k size limit on jpeg segments.
	 *
	 * @todo This is based on what the standard says. Need to find a real
	 * world example file to double check the support for this is right.
	 */",
 "/**
	 * This test has an extended XMP block with a wrong guid (md5sum)
	 * and thus should only return the StandardXMP, not the ExtendedXMP.
	 */",
 "/**
	 * Have a high offset to simulate a missing packet,
	 * which should cause it to ignore the ExtendedXMP packet.
	 */",
 "/**
	 * Get a comma-delimited list of namespaces we don\'t have
	 * any pages in
	 * @return String
	 */",
 "/**
	 * Choose a random title.
	 * @return Title object (or null if nothing to choose from)
	 */",
 "/**
 * Special page to direct the user to a random page
 *
 * @ingroup SpecialPage
 */",
 "/**
	 * Convert from the nominative form of a noun to some other case
	 * Invoked with {{grammar:case|word}}
	 *
	 * @param $word string
	 * @param $case string
	 * @return string
	 */",
 "/**
	 * @param $str string
	 * @param $forContent bool
	 * @return string
	 */",
 "/** Finnish (Suomi)
 *
 * @ingroup Language
 *
 * @author Niklas Laxstr??m
 */",
 "/** Lower Sorbian (Dolnoserbski)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Derbeth
 * @author Dunak
 * @author Dundak
 * @author Kaganer
 * @author Michawiki
 * @author Murjarik
 * @author Nepl1
 * @author Pe7er
 * @author Qualia
 * @author Tlustulimu
 * @author Tlustulimu Nepl1
 */",
 "/**
	 * @param $x null|WebRequest
	 * @return WebRequest
	 */",
 "/**
	 * @param $x null|OutputPage
	 * @return OutputPage
	 */",
 "/**
	 * @param IContextSource|null $context
	 */",
 "/**
	 * Parse the request to get the Title object
	 *
	 * @return Title object to be $wgTitle
	 */",
 "/**
	 * Get the Title object that we\'ll be acting on, as specified in the WebRequest
	 * @return Title
	 */",
 "/**
	 * Performs the request.
	 * - bad titles
	 * - read restriction
	 * - local interwiki redirects
	 * - redirect loop
	 * - special pages
	 * - normal pages
	 *
	 * @return void
	 */",
 "/**
	 * Create an Article object of the appropriate class for the given page.
	 *
	 * @deprecated in 1.18; use Article::newFromTitle() instead
	 * @param $title Title
	 * @param $context IContextSource
	 * @return Article object
	 */",
 "/**
	 * Returns the name of the action that will be executed.
	 *
	 * @return string: action
	 */",
 "/**
	 * Initialize the main Article object for \"standard\" actions (view, etc)
	 * Create an Article object for the page, following redirects if needed.
	 *
	 * @return mixed an Article, or a string to redirect to another URL
	 */",
 "/**
	 * Cleaning up request by doing deferred updates, DB transaction, and the output
	 */",
 "/**
	 * Do a job from the job queue
	 */",
 "/**
	 * Ends this task peacefully
	 */",
 "/**
	 * Perform one of the \"standard\" actions
	 *
	 * @param $page Page
	 */",
 "/**
	 * Run the current MediaWiki instance
	 * index.php just calls this
	 */",
 "/**
	 * Checks if the request should abort due to a lagged server,
	 * for given maxlag parameter.
	 * @return bool
	 */",
 "/**
 * The MediaWiki class is the helper class for the index.php entry point.
 *
 * @internal documentation reviewed 15 Mar 2010
 */",
 "/** Wolof (Wolof)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Ahloubadar
 * @author Ibou
 * @author Maax
 * @author Reedy
 * @author SF-Language
 * @author Urhixidur
 */",
 "/**
	 * Checks if a certain option is enabled
	 *
	 * This method is public to allow other extensions that use WikiEditor to use the
	 * same configuration as WikiEditor itself
	 *
	 * @param $name string Name of the feature, should be a key of $features
	 * @return bool
	 */",
 "/**
	 * EditPage::showEditForm:initial hook
	 *
	 * Adds the modules to the edit form
	 *
	 * @param $toolbar array list of toolbar items
	 * @return bool
	 */",
 "/**
	 * EditPageBeforeEditToolbar hook
	 *
	 * Disable the old toolbar if the new one is enabled
	 *
	 * @param $toolbar html
	 * @return bool
	 */",
 "/**
	 * GetPreferences hook
	 *
	 * Adds WikiEditor-releated items to the preferences
	 *
	 * @param $user User current user
	 * @param $defaultPreferences array list of default user preference controls
	 * @return bool
	 */",
 "/**
	 * MakeGlobalVariablesScript hook
	 *
	 * Adds enabled/disabled switches for WikiEditor modules
	 * @param $vars array
	 * @return bool
	 */",
 "/**
	 * @param $vars array
	 * @return bool
	 */",
 "/**
 * Hooks for WikiEditor extension
 *
 * @file
 * @ingroup Extensions
 */",
 "/**
	 * @param $db DatabaseBase
	 * @param $res
	 * @return void
	 */",
 "/**
 * SpecialShortpages extends QueryPage. It is used to return the shortest
 * pages in the database.
 *
 * @ingroup SpecialPage
 */",
 "/**
 * Test the CDB reader/writer
 */",
 "/**
	 * Creates an ImportXMLReader drawing from the source provided
	 * @param $source
	 */",
 "/**
	 * Set debug mode...
	 * @param $debug bool
	 */",
 "/**
	 * Set \'no updates\' mode. In this mode, the link tables will not be updated by the importer
	 * @param $noupdates bool
	 */",
 "/**
	 * Set a callback that displays notice messages
	 *
	 * @param $callback callback
	 * @return callback
	 */",
 "/**
	 * Sets the action to perform as each new page in the stream is reached.
	 * @param $callback callback
	 * @return callback
	 */",
 "/**
	 * Sets the action to perform as each page in the stream is completed.
	 * Callback accepts the page title (as a Title object), a second object
	 * with the original title form (in case it\'s been overridden into a
	 * local namespace), and a count of revisions.
	 *
	 * @param $callback callback
	 * @return callback
	 */",
 "/**
	 * Sets the action to perform as each page revision is reached.
	 * @param $callback callback
	 * @return callback
	 */",
 "/**
	 * Sets the action to perform as each file upload version is reached.
	 * @param $callback callback
	 * @return callback
	 */",
 "/**
	 * Sets the action to perform as each log item reached.
	 * @param $callback callback
	 * @return callback
	 */",
 "/**
	 * Sets the action to perform when site info is encountered
	 * @param $callback callback
	 * @return callback
	 */",
 "/**
	 * Set a target namespace to override the defaults
	 * @param $namespace
	 * @return bool
	 */",
 "/**
	 * @param $dir
	 */",
 "/**
	 * @param $import
	 */",
 "/**
	 * Default per-revision callback, performs the import.
	 * @param $revision WikiRevision
	 * @return bool
	 */",
 "/**
	 * Default per-revision callback, performs the import.
	 * @param $rev WikiRevision
	 * @return bool
	 */",
 "/**
	 * Dummy for now...
	 * @param $revision
	 * @return bool
	 */",
 "/**
	 * Mostly for hook use
	 * @param $title
	 * @param $origTitle
	 * @param $revCount
	 * @param $sRevCount
	 * @param $pageInfo
	 * @return
	 */",
 "/**
	 * Alternate per-revision callback, for debugging.
	 * @param $revision WikiRevision
	 */",
 "/**
	 * Notify the callback function when a new <page> is reached.
	 * @param $title Title
	 */",
 "/**
	 * Notify the callback function when a </page> is closed.
	 * @param $title Title
	 * @param $origTitle Title
	 * @param $revCount Integer
	 * @param $sucCount Int: number of revisions for which callback returned true
	 * @param $pageInfo Array: associative array of page information
	 */",
 "/**
	 * Notify the callback function of a revision
	 * @param $revision A WikiRevision object
	 */",
 "/**
	 * Notify the callback function of a new log item
	 * @param $revision A WikiRevision object
	 */",
 "/**
	 * Shouldn\'t something like this be built-in to XMLReader?
	 * Fetches text contents of the current element, assuming
	 * no sub-elements or such scary things.
	 * @return string
	 * @access private
	 */",
 "/** Left in for debugging */",
 "/**
	 * Primary entry point
	 */",
 "/**
	 * @return bool
	 * @throws MWException
	 */",
 "/**
	 * @param $logInfo
	 * @return bool|mixed
	 */",
 "/**
	 * @param $pageInfo array
	 */",
 "/**
	 * @param $pageInfo
	 * @param $revisionInfo
	 * @return bool|mixed
	 */",
 "/**
	 * @param $pageInfo
	 * @return mixed
	 */",
 "/**
	 * @param $contents
	 * @return string
	 */",
 "/**
	 * @param $pageInfo
	 * @param $uploadInfo
	 * @return mixed
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * @param $text string
	 * @return Array or false
	 */",
 "/**
 * XML file reader for the page data importer
 *
 * implements Special:Import
 * @ingroup SpecialPage
 */",
 "/**
	 * @param $source
	 * @return string
	 */",
 "/**
	 * @param $path
	 * @param $mode
	 * @param $options
	 * @param $opened_path
	 * @return bool
	 */",
 "/**
	 * @param $count
	 * @return string
	 */",
 "/**
	 * @param $data
	 * @return bool
	 */",
 "/**
	 * @return mixed
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * @return array
	 */",
 "/** This is a horrible hack used to keep source compatibility */",
 "/**
	 * @return bool|string
	 */",
 "/**
	 * @param $title
	 * @throws MWException
	 */",
 "/**
	 * @param $id
	 */",
 "/**
	 * @param $ts
	 */",
 "/**
	 * @param $user
	 */",
 "/**
	 * @param $ip
	 */",
 "/**
	 * @param $text
	 */",
 "/**
	 * @param $text
	 */",
 "/**
	 * @param $minor
	 */",
 "/**
	 * @param $src
	 */",
 "/**
	 * @param $src
	 * @param $isTemp
	 */",
 "/**
	 * @param $sha1base36
	 */",
 "/**
	 * @param $filename
	 */",
 "/**
	 * @param $archiveName
	 */",
 "/**
	 * @param $size
	 */",
 "/**
	 * @param $type
	 */",
 "/**
	 * @param $action
	 */",
 "/**
	 * @param $params
	 */",
 "/**
	 * @param $noupdates
	 */",
 "/**
	 * @return Title
	 */",
 "/**
	 * @return int
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * @return mixed
	 */",
 "/**
	 * @return bool|String
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * @return mixed
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return mixed
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * @return mixed
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * @return bool|string
	 */",
 "/**
 * @todo document (e.g. one-sentence class description).
 * @ingroup SpecialPage
 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * @return bool|string
	 */",
 "/**
 * @todo document (e.g. one-sentence class description).
 * @ingroup SpecialPage
 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @param $filename string
	 * @return Status
	 */",
 "/**
	 * @param $fieldname string
	 * @return Status
	 */",
 "/**
	 * @param $url
	 * @param $method string
	 * @return Status
	 */",
 "/**
	 * @param $interwiki
	 * @param $page
	 * @param $history bool
	 * @param $templates bool
	 * @param $pageLinkDepth int
	 * @return Status
	 */",
 "/**
 * @todo document (e.g. one-sentence class description).
 * @ingroup SpecialPage
 */",
 "/**
 * Execution trace
 * @todo document methods (?)
 * @ingroup Profiler
 */",
 "/** constructor */",
 "/**
	 * Get the MIME types from getMimesFromData(), but convert the result from IE\'s
	 * idiosyncratic private types into something other apps will understand.
	 *
	 * @param $fileName String: the file name (unused at present)
	 * @param $chunk String: the first 256 bytes of the file
	 * @param $proposed String: the MIME type proposed by the server
	 *
	 * @return Array: map of IE version to detected mime type
	 */",
 "/**
	 * Translate a MIME type from IE\'s idiosyncratic private types into
	 * more commonly understood type strings
	 * @param $type
	 * @return string
	 */",
 "/**
	 * Get the untranslated MIME types for all known versions
	 *
	 * @param $fileName String: the file name (unused at present)
	 * @param $chunk String: the first 256 bytes of the file
	 * @param $proposed String: the MIME type proposed by the server
	 *
	 * @return Array: map of IE version to detected mime type
	 */",
 "/**
	 * Get the MIME type for a given named version
	 * @param $version
	 * @param $fileName
	 * @param $chunk
	 * @param $proposed
	 * @return bool|string
	 */",
 "/**
	 * Check for text headers at the start of the chunk
	 * Confirmed same in 5 and 7.
	 * @param $version
	 * @param $chunk
	 * @return bool|string
	 */",
 "/**
	 * Check for binary headers at the start of the chunk
	 * Confirmed same in 5 and 7.
	 * @param $version
	 * @param $chunk
	 * @return bool|string
	 */",
 "/**
	 * Do heuristic checks on the bulk of the data sample.
	 * Search for HTML tags.
	 * @param $version
	 * @param $chunk
	 * @return array
	 */",
 "/**
	 * @param $version
	 * @param $type
	 * @return int|string
	 */",
 "/**
 * This class simulates Microsoft Internet Explorer\'s terribly broken and
 * insecure MIME type detection algorithm. It can be used to check web uploads
 * with an apparently safe type, to see if IE will reinterpret them to produce
 * something dangerous.
 *
 * It is full of bugs and strange design choices should not under any
 * circumstances be used to determine a MIME type to present to a user or
 * client. (Apple Safari developers, this means you too.)
 *
 * This class is based on a disassembly of IE 5.0, 6.0 and 7.0. Although I have
 * attempted to ensure that this code works in exactly the same way as Internet
 * Explorer, it does not share any source code, or creative choices such as
 * variable names, thus I (Tim Starling) claim copyright on it.
 *
 * It may be redistributed without restriction. To aid reuse, this class does
 * not depend on any MediaWiki module.
 */",
 "/**
	 * Copy all rows from $srcTable to $dstTable
	 */",
 "/** @dataProvider providerPluralAllForms */",
 "/** @dataProvider providerPluralTwoForms */",
 "/** Tests for MediaWiki languages/classes/LanguageMt.php */",
 "/**
	 * Helper function to rebuild list of languages codes. Prints the code
	 * for each language which is rebuilt.
	 * @param $codes  list  List of language codes to rebuild.
	 * @param $lc LocalisationCache Instance of LocalisationCache_BulkLoad (?)
	 * @param $force bool Rebuild up-to-date languages
	 * @return int Number of rebuilt languages
	 */",
 "/**
	 * Sets whether a run of this maintenance script has the force parameter set
	 *
	 * @param bool $forced
	 */",
 "/** Fijian (Na Vosa Vakaviti)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Jose77 (on fj.wikipedia.org)
 */",
 "/**
	 * @param $context ResourceLoaderContext
	 * @return array
	 */",
 "/**
	 * @return string
	 */",
 "/**
 * Module for user customizations
 */",
 "/** Belarusian (????????????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Cesco
 * @author Jim-by
 * @author Kaganer
 * @author LexArt
 * @author Maksim L.
 * @author Mienski
 * @author Prima klasy4na
 * @author Riwnodennyk
 * @author Urhixidur
 * @author Wizardist
 * @author Yury Tarasievich
 * @author ????????
 * @author ??????????????
 * @author ?????????????? ????????????????????
 * @author ???????? ????????????????
 */",
 "/**
 * Wrapper object for MediaWiki\'s localization functions,
 * to be passed to the template engine.
 *
 * @private
 * @ingroup Skins
 */",
 "/**
	 * Add specific styles for this skin
	 *
	 * @param $out OutputPage
	 */",
 "/**
	 * Create the template engine object; we feed it a bunch of data
	 * and eventually it spits out some HTML. Should have interface
	 * roughly equivalent to PHPTAL 0.7.
	 *
	 * @param $classname String
	 * @param $repository string: subdirectory where we keep template files
	 * @param $cache_dir string
	 * @return QuickTemplate
	 * @private
	 */",
 "/**
	 * initialize various variables and generate the template
	 *
	 * @param $out OutputPage
	 */",
 "/**
	 * Output the string, or print error message if it\'s
	 * an error object of the appropriate type.
	 * For the base class, assume strings all around.
	 *
	 * @param $str Mixed
	 * @private
	 */",
 "/**
	 * Output a boolean indiciating if buildPersonalUrls should output separate
	 * login and create account links or output a combined link
	 * By default we simply return a global config setting that affects most skins
	 * This is setup as a method so that like with $wgLogo and getLogo() a skin
	 * can override this setting and always output one or the other if it has
	 * a reason it can\'t output one of the two modes.
	 */",
 "/**
	 * build array of urls for personal toolbar
	 * @return array
	 */",
 "/**
	 * TODO document
	 * @param  $title Title
	 * @param  $message String message key
	 * @param  $selected Bool
	 * @param  $query String
	 * @param  $checkEdit Bool
	 * @return array
	 */",
 "/**
					 * The following actions use messages which, if made particular to
					 * the any specific skins, would break the Ajax code which makes this
					 * action happen entirely inline. Skin::makeGlobalVariablesScript
					 * defines a set of messages in a javascript object - and these
					 * messages are assumed to be global for all skins. Without making
					 * a change to that procedure these messages will have to remain as
					 * the global versions.
					 */",
 "/**
	 * a structured array of links usually used for the tabs in a skin
	 *
	 * There are 4 standard sections
	 * namespaces: Used for namespace tabs like special, page, and talk namespaces
	 * views: Used for primary page views like read, edit, history
	 * actions: Used for most extra page actions like deletion, protection, etc...
	 * variants: Used to list the language variants for the page
	 *
	 * Each section\'s value is a key/value array of links for that section.
	 * The links themseves have these common keys:
	 * - class: The css classes to apply to the tab
	 * - text: The text to display on the tab
	 * - href: The href for the tab to point to
	 * - rel: An optional rel= for the tab\'s link
	 * - redundant: If true the tab will be dropped in skins using content_actions
	 *   this is useful for tabs like \"Read\" which only have meaning in skins that
	 *   take special meaning from the grouped structure of content_navigation
	 *
	 * Views also have an extra key which can be used:
	 * - primary: If this is not true skins like vector may try to hide the tab
	 *            when the user has limited space in their browser window
	 *
	 * content_navigation using code also expects these ids to be present on the
	 * links, however these are usually automatically generated by SkinTemplate
	 * itself and are not necessary when using a hook. The only things these may
	 * matter to are people modifying content_navigation after it\'s initial creation:
	 * - id: A \"preferred\" id, most skins are best off outputting this preferred id for best compatibility
	 * - tooltiponly: This is set to true for some tabs in cases where the system
	 *                believes that the accesskey should not be added to the tab.
	 *
	 * @return array
	 */",
 "/**
	 * an array of edit links by default used for the tabs
	 * @return array
	 * @private
	 */",
 "/**
	 * build array of common navigation links
	 * @return array
	 * @private
	 */",
 "/**
	 * Generate strings used for xml \'id\' names
	 * @return string
	 * @private
	 */",
 "/**
 * Template-filler skin base class
 * Formerly generic PHPTal (http://phptal.sourceforge.net/) skin
 * Based on Brion\'s smarty skin
 * @copyright Copyright ?? Gabriel Wicke -- http://www.aulinx.de/
 *
 * @todo Needs some serious refactoring into functions that correspond
 * to the computations individual esi snippets need. Most importantly no body
 * parsing for most of those of course.
 *
 * @ingroup Skins
 */",
 "/**
	 * Constructor
	 */",
 "/**
	 * Sets the value $value to $name
	 * @param $name
	 * @param $value
	 */",
 "/**
	 * @param $name
	 * @param $value
	 */",
 "/**
	 * @param $t
	 */",
 "/**
	 * Main function, used by classes that subclass QuickTemplate
	 * to show the actual HTML output
	 */",
 "/**
	 * @private
	 */",
 "/**
	 * @private
	 */",
 "/**
	 * @private
	 */",
 "/**
	 * @private
	 */",
 "/**
	 * @private
	 */",
 "/**
	 * An ugly, ugly hack.
	 * @private
	 */",
 "/**
	 * @private
	 */",
 "/**
	 * @private
	 *
	 * @return bool
	 */",
 "/**
	 * Get the Skin object related to this object
	 *
	 * @return Skin object
	 */",
 "/**
 * Generic wrapper for template functions, with interface
 * compatible with what we use of PHPTAL 0.7.
 * @ingroup Skins
 */",
 "/**
	 * Get a Message object with its context set
	 *
	 * @param $name Str message name
	 * @return Message
	 */",
 "/**
	 * Create an array of common toolbox items from the data in the quicktemplate
	 * stored by SkinTemplate.
	 * The resulting array is built acording to a format intended to be passed
	 * through makeListItem to generate the html.
	 */",
 "/**
	 * Create an array of personal tools items from the data in the quicktemplate
	 * stored by SkinTemplate.
	 * The resulting array is built acording to a format intended to be passed
	 * through makeListItem to generate the html.
	 * This is in reality the same list as already stored in personal_urls
	 * however it is reformatted so that you can just pass the individual items
	 * to makeListItem instead of hardcoding the element creation boilerplate.
	 */",
 "/**
	 * Makes a link, usually used by makeListItem to generate a link for an item
	 * in a list used in navigation lists, portlets, portals, sidebars, etc...
	 *
	 * $key is a string, usually a key from the list you are generating this link from
	 * $item is an array containing some of a specific set of keys.
	 * The text of the link will be generated either from the contents of the \"text\"
	 * key in the $item array, if a \"msg\" key is present a message by that name will
	 * be used, and if neither of those are set the $key will be used as a message name.
	 * If a \"href\" key is not present makeLink will just output htmlescaped text.
	 * The href, id, class, rel, and type keys are used as attributes for the link if present.
	 * If an \"id\" or \"single-id\" (if you don\'t want the actual id to be output on the link)
	 * is present it will be used to generate a tooltip and accesskey for the link.
	 * If you don\'t want an accesskey, set $item[\'tooltiponly\'] = true;
	 * $options can be used to affect the output of a link:
	 *   You can use a text-wrapper key to specify a list of elements to wrap the
	 *     text of a link in. This should be an array of arrays containing a \'tag\' and
	 *     optionally an \'attributes\' key. If you only have one element you don\'t need
	 *     to wrap it in another array. eg: To use <a><span>...</span></a> in all links
	 *     use array( \'text-wrapper\' => array( \'tag\' => \'span\' ) ) for your options.
	 *   A link-class key can be used to specify additional classes to apply to all links.
	 *   A link-fallback can be used to specify a tag to use instead of <a> if there is
	 *   no link. eg: If you specify \'link-fallback\' => \'span\' than any non-link will
	 *   output a <span> instead of just text.
	 */",
 "/**
	 * Generates a list item for a navigation, portlet, portal, sidebar... etc list
	 * $key is a string, usually a key from the list you are generating this link from
	 * $item is an array of list item data containing some of a specific set of keys.
	 * The \"id\" and \"class\" keys will be used as attributes for the list item,
	 * if \"active\" contains a value of true a \"active\" class will also be appended to class.
	 * If you want something other than a <li> you can pass a tag name such as
	 * \"tag\" => \"span\" in the $options array to change the tag used.
	 * link/content data for the list item may come in one of two forms
	 * A \"links\" key may be used, in which case it should contain an array with
	 * a list of links to include inside the list item, see makeLink for the format
	 * of individual links array items.
	 * Otherwise the relevant keys from the list item $item array will be passed
	 * to makeLink instead. Note however that \"id\" and \"class\" are used by the
	 * list item directly so they will not be passed to makeLink
	 * (however the link will still support a tooltip and accesskey from it)
	 * If you need an id or class on a single link you should include a \"links\"
	 * array with just one link item inside of it.
	 * $options is also passed on to makeLink calls
	 */",
 "/**
	 * Returns an array of footerlinks trimmed down to only those footer links that
	 * are valid.
	 * If you pass \"flat\" as an option then the returned array will be a flat array
	 * of footer icons instead of a key/value array of footerlinks arrays broken
	 * up into categories.
	 */",
 "/**
	 * Returns an array of footer icons filtered down by options relevant to how
	 * the skin wishes to display them.
	 * If you pass \"icononly\" as the option all footer icons which do not have an
	 * image icon set will be filtered out.
	 * If you pass \"nocopyright\" then MediaWiki\'s copyright icon will not be included
	 * in the list of footer icons. This is mostly useful for skins which only
	 * display the text from footericons instead of the images and don\'t want a
	 * duplicate copyright statement because footerlinks already rendered one.
	 */",
 "/**
	 * Output the basic end-page trail including bottomscripts, reporttime, and
	 * debug stuff. This should be called right before outputting the closing
	 * body and html tags.
	 */",
 "/**
 * New base template for a skin\'s template extended from QuickTemplate
 * this class features helper methods that provide common ways of interacting
 * with the data stored in the QuickTemplate
 */",
 "/** @dataProvider providerFormatNum*/",
 "/** Tests for MediaWiki languages/LanguageMl.php */",
 "/**
	 * @return bool
	 */",
 "/**
	 * Eventually this should be a word segmentation;
	 * for now just treat each character as a word.
	 * @todo FIXME: Only do this for Han characters...
	 *
	 * @param $string string
	 *
	 * @return string
	 */",
 "/**
	 * @param $s
	 * @return string
	 */",
 "/**
 * Simplified Chinese
 *
 * @ingroup Language
 */",
 "/**
	 * @param $title
	 * @param $repo ForeignApiRepo
	 * @param $info
	 * @param bool $exists
	 */",
 "/**
	 * @param $title Title
	 * @param $repo ForeignApiRepo
	 * @return ForeignAPIFile|null
	 */",
 "/**
	 * Get the property string for iiprop and aiprop
	 */",
 "/**
	 * @param $page int
	 * @return int
	 */",
 "/**
	 * Only useful if we\'re locally caching thumbs anyway...
	 */",
 "/**
	 * @see File::purgeCache()
	 */",
 "/**
 * Foreign file accessible through api.php requests.
 * Very hacky and inefficient, do not use :D
 *
 * @ingroup FileAbstraction
 */",
 "/**
	 * Creates an instance of this class
	 * @param $db DatabaseSqlite: database object
	 */",
 "/**
	 * Whether fulltext search is supported by current schema
	 * @return Boolean
	 */",
 "/**
	 * Parse the user\'s query and transform it into an SQL fragment which will
	 * become part of a WHERE clause
	 *
	 * @return string
	 */",
 "/**
	 * Perform a full text search query and return a result set.
	 *
	 * @param $term String: raw search term
	 * @return SqliteSearchResultSet
	 */",
 "/**
	 * Perform a title-only search query and return a result set.
	 *
	 * @param $term String: raw search term
	 * @return SqliteSearchResultSet
	 */",
 "/**
	 * Return a partial WHERE clause to exclude redirects, if so set
	 * @return String
	 */",
 "/**
	 * Return a partial WHERE clause to limit the search to the given namespaces
	 * @return String
	 */",
 "/**
	 * Returns a query with limit for number of results set.
	 * @param $sql String:
	 * @return String
	 */",
 "/**
	 * Construct the full SQL query to do the search.
	 * The guts shoulds be constructed in queryMain()
	 * @param $filteredTerm String
	 * @param $fulltext Boolean
	 */",
 "/**
	 * Picks which field to index on, depending on what type of query.
	 * @param $fulltext Boolean
	 * @return String
	 */",
 "/**
	 * Get the base part of the search query.
	 *
	 * @param $filteredTerm String
	 * @param $fulltext Boolean
	 * @return String
	 */",
 "/**
	 * Create or update the search index record for the given page.
	 * Title and text should be pre-processed.
	 *
	 * @param $id Integer
	 * @param $title String
	 * @param $text String
	 */",
 "/**
	 * Update a search index record\'s title only.
	 * Title should be pre-processed.
	 *
	 * @param $id Integer
	 * @param $title String
	 */",
 "/**
 * Search engine hook for SQLite
 * @ingroup Search
 */",
 "/**
 * @ingroup Search
 */",
 "/** Lumbaart (Lumbaart)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Amgine
 * @author Clamengh
 * @author Dakrismeno
 * @author DracoRoboter
 * @author Flavio05
 * @author Ins??brich
 * @author Kemm??tar
 * @author Malafaya
 * @author Reedy
 * @author Remulazz
 * @author SabineCretella
 * @author Snowdog
 * @author Spr??ngli
 */",
 "/** Ligure (Ligure)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Dario vet
 * @author Dedee
 * @author Gastaz
 * @author Malafaya
 * @author Urhixidur
 * @author ZeneizeForesto
 */",
 "/** Aromanian (Arm??neashce)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Dumitrachi T. Fundu
 * @author Hakka
 */",
 "/**
 * Query module to enumerate all user blocks
 *
 * @ingroup API
 */",
 "/**
 * API PHP\'s var_dump() output formatter
 * @ingroup API
 */",
 "/** Friulian (Furlan)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Helix84
 * @author Kaganer
 * @author Klenje
 * @author MF-Warburg
 * @author Urhixidur
 * @author ???????? ????????????????
 */",
 "/**
 * CHANGELOG
 * =========
 * Init - This localisation is based on a file kindly donated by the folks at MIMOS
 * http://www.asiaosc.org/enwiki/page/Knowledgebase_Home.html
 * Sep 2007 - Rewritten by the folks at ms.wikipedia.org
 */",
 "/**
	 * Get an uplaod result based on upload context
	 */",
 "/**
	 * Get Stash Result, throws an expetion if the file could not be stashed. 
	 */",
 "/**
	 * Get Warnings Result
	 * @param $warnings Array of Api upload warnings
	 */",
 "/**
	 * Get the result of a chunk upload. 
	 */",
 "/**
	 * Stash the file and return the file key
	 * Also re-raises exceptions with slightly more informative message strings (useful for API)
	 * @throws MWException
	 * @return String file key
	 */",
 "/**
	 * Throw an error that the user can recover from by providing a better
	 * value for $parameter
	 *
	 * @param $error array Error array suitable for passing to dieUsageMsg()
	 * @param $parameter string Parameter that needs revising
	 * @param $data array Optional extra data to pass to the user
	 * @throws UsageException
	 */",
 "/**
	 * Select an upload module and set it to mUpload. Dies on failure. If the
	 * request was a status request and not a true upload, returns false;
	 * otherwise true
	 *
	 * @return bool
	 */",
 "/**
	 * Checks that the user has permissions to perform this upload.
	 * Dies with usage message on inadequate permissions.
	 * @param $user User The user to check.
	 */",
 "/**
	 * Performs file verification, dies on error.
	 */",
 "/**
	 * Check warnings if ignorewarnings is not set.
	 * Returns a suitable array for inclusion into API results if there were warnings
	 * Returns the empty array if there were no warnings
	 *
	 * @return array
	 */",
 "/**
	 * Perform the actual upload. Returns a suitable result array on success;
	 * dies on failure.
	 *
	 * @return array
	 */",
 "/**
	 * Checks if asynchronous copy uploads are enabled and throws an error if they are not.
	 */",
 "/**
 * @ingroup API
 */",
 "/**
	 * @dataProvider cookieDomains
	 */",
 "/**
	 * Test Http::isValidURI()
	 * @bug 27854 : Http::isValidURI is too lax
	 * @dataProvider provideURI
	 */",
 "/**
	 * Feeds URI to test a long regular expression in Http::isValidURI
	 */",
 "/**
	 * Warning:
	 * 
	 * These tests are for code that makes use of an artifact of how CURL
	 * handles header reporting on redirect pages, and will need to be
	 * rewritten when bug 29232 is taken care of (high-level handling of
	 * HTTP redirects).
	 */",
 "/**
 * @group Broken
 */",
 "/**
 * Class to let us overwrite MWHttpREquest respHeaders variable
 */",
 "/**
	 * Get an array mapping token names to their handler functions.
	 * The prototype for a token function is func($pageid, $title, $rc)
	 * it should return a token or false (permission denied)
	 * @return array array(tokenname => function)
	 */",
 "/**
	 * @param  $pageid
	 * @param  $title
	 * @param $rc RecentChange
	 * @return bool|String
	 */",
 "/**
	 * Sets internal state to include the desired properties in the output.
	 * @param $prop Array associative array of properties, only keys are used here
	 */",
 "/**
	 * Generates and outputs the result of this query based upon the provided parameters.
	 *
	 * @param $resultPageSet ApiPageSet
	 */",
 "/**
	 * Extracts from a single sql row the data needed to describe one recent change.
	 *
	 * @param $row The row from which to extract the data.
	 * @return An array mapping strings (descriptors) to their respective string values.
	 * @access public
	 */",
 "/**
 * A query action to enumerate the recent changes that were done to the wiki.
 * Various filters are supported.
 *
 * @ingroup API
 */",
 "/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */",
 "/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */",
 "/**
	 * @todo Write more texts, handle $wgAllowImageMoving setting
	 */",
 "/**
	 * Please make sure to change testIsTalk() if you change the assertions below
	 */",
 "/**
	 * Reverse of testIsSubject().
	 * Please update testIsSubject() if you change assertions below
	 */",
 "/**
	 */",
 "/**
	 * Regular getTalk() calls
	 * Namespaces without a talk page (NS_MEDIA, NS_SPECIAL) are tested in
	 * the function testGetTalkExceptions()
	 */",
 "/**
	 * Exceptions with getTalk()
	 * NS_MEDIA does not have talk pages. MediaWiki raise an exception for them.
	 * @expectedException MWException
	 */",
 "/**
	 * Exceptions with getTalk()
	 * NS_SPECIAL does not have talk pages. MediaWiki raise an exception for them.
	 * @expectedException MWException
	 */",
 "/**
	 * Regular getAssociated() calls
	 * Namespaces without an associated page (NS_MEDIA, NS_SPECIAL) are tested in
	 * the function testGetAssociatedExceptions()
	 */",
 "/**
	 * @expectedException MWException
	 */",
 "/**
	 * @expectedException MWException
	 */",
 "/**
	 * Test MWNamespace::equals
	 * Note if we add a namespace registration system with keys like \'MAIN\'
	 * we should add tests here for equivilance on things like \'MAIN\' == 0
	 * and \'MAIN\' == NS_MAIN.
	 */",
 "/**
	 * Test MWNamespace::subjectEquals
	 */",
 "/**
	 */",
 "/**
	 */",
 "/**
	 * Similar to testIsContent() but alters the $wgContentNamespaces
	 * global variable.
	 */",
 "/**
	 */",
 "/**
	 * Some namespaces are always capitalized per code definition
	 * in MWNamespace::$alwaysCapitalizedNamespaces
	 */",
 "/**
	 * Follows up for testIsCapitalizedHardcodedAssertions() but alter the
	 * global $wgCapitalLink setting to have extended coverage.
	 *
	 * MWNamespace::isCapitalized() rely on two global settings:
	 *   $wgCapitalLinkOverrides = array(); by default
	 *   $wgCapitalLinks = true; by default
	 * This function test $wgCapitalLinks
 	 *
	 * Global setting correctness is tested against the NS_PROJECT and
	 * NS_PROJECT_TALK namespaces since they are not hardcoded nor specials
	 */",
 "/**
	 * Counter part for MWNamespace::testIsCapitalizedWithWgCapitalLinks() now
	 * testing the $wgCapitalLinkOverrides global.
	 *
	 * @todo split groups of assertions in autonomous testing functions
	 */",
 "/**
 * Test class for MWNamespace.
 * Generated by PHPUnit on 2011-02-20 at 21:01:55.
 *
 */",
 "/** Sorani (??????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Aras Noori
 * @author Arastein
 * @author Asoxor
 * @author Cyrus abdi
 * @author Haval
 * @author Marmzok
 * @author ??????????
 */",
 "/**
	 * @param $rc RecentChange
	 * @return RCCacheEntry
	 */",
 "/**
 * @todo document
 */",
 "/**
	 * Changeslist contructor
	 *
	 * @param $obj Skin or IContextSource
	 */",
 "/**
	 * Fetch an appropriate changes list class for the main context
	 * This first argument used to be an User object.
	 *
	 * @deprecated in 1.18; use newFromContext() instead
	 * @param $unused Unused
	 * @return ChangesList|EnhancedChangesList|OldChangesList derivative
	 */",
 "/**
	 * Fetch an appropriate changes list class for the specified context
	 * Some users might want to use an enhanced list format, for instance
	 *
	 * @param $context IContextSource to use
	 * @return ChangesList|EnhancedChangesList|OldChangesList derivative
	 */",
 "/**
	 * Sets the list to use a <li class=\"watchlist-(namespace)-(page)\"> tag
	 * @param $value Boolean
	 */",
 "/**
	 * As we use the same small set of messages in various methods and that
	 * they are called often, we call them once and save them in $this->message
	 */",
 "/**
	 * Returns the appropriate flags for new page, minor change and patrolling
	 * @param $flags Array Associative array of \'flag\' => Bool
	 * @param $nothing String to use for empty space
	 * @return String
	 */",
 "/**
	 * Provide the <abbr> element appropriate to a given abbreviated flag,
	 * namely the flag indicating a new page, a minor edit, a bot edit, or an
	 * unpatrolled edit.  By default in English it will contain \"N\", \"m\", \"b\",
	 * \"!\" respectively, plus it will have an appropriate title and class.
	 *
	 * @param $flag String: \'newpage\', \'unpatrolled\', \'minor\', or \'bot\'
	 * @return String: Raw HTML
	 */",
 "/**
	 * Returns text for the start of the tabular part of RC
	 * @return String
	 */",
 "/**
	 * Show formatted char difference
	 * @param $old Integer: bytes
	 * @param $new Integer: bytes
	 * @return String
	 */",
 "/**
	 * Returns text for the end of RC
	 * @return String
	 */",
 "/**
	 * @param $s
	 * @param $rc RecentChange
	 * @param $unpatrolled
	 */",
 "/**
	 * @param $s
	 * @param $rc RecentChange
	 * @param $unpatrolled
	 * @param $watched
	 */",
 "/**
	 * @param $s
	 * @param $rc RecentChange
	 */",
 "/**
	 * Insert links to user page, user talk page and eventually a blocking link
	 *
	 * @param &$s String HTML to update
	 * @param &$rc RecentChange
	 */",
 "/**
	 * Insert a formatted action
	 *
	 * @param $rc RecentChange
	 */",
 "/** 
	 * Insert a formatted comment
	 * @param $rc RecentChange
	 */",
 "/**
	 * Check whether to enable recent changes patrol features
	 * @return Boolean
	 */",
 "/**
	 * Returns the string which indicates the number of watching users
	 */",
 "/**
	 * Determine if said field of a revision is hidden
	 * @param $rc RCCacheEntry
	 * @param $field Integer: one of DELETED_* bitfield constants
	 * @return Boolean
	 */",
 "/**
	 * Determine if the current user is allowed to view a particular
	 * field of this revision, if it\'s marked as deleted.
	 * @param $rc RCCacheEntry
	 * @param $field Integer
	 * @param $user User object to check, or null to use $wgUser
	 * @return Boolean
	 */",
 "/**
	 * @param $link string
	 * @param $watched bool
	 * @return string
	 */",
 "/** Inserts a rollback link
	 *
	 * @param $s string
	 * @param $rc RecentChange
	 */",
 "/**
	 * @param $s string
	 * @param $rc RecentChange
	 * @param $classes
	 */",
 "/**
 * Base class for all changes lists
 */",
 "/**
	 * Format a line using the old system (aka without any javascript).
	 *
	 * @param $rc RecentChange
	 */",
 "/**
 * Generate a list of changes using the good old system (no javascript)
 */",
 "/**
	 * Add the JavaScript file for enhanced changeslist
	 * @return String
	 */",
 "/**
	 * Format a line for enhanced recentchange (aka with javascript and block of lines).
	 *
	 * @param $baseRC RecentChange
	 * @param $watched bool
	 *
	 * @return string
	 */",
 "/**
	 * Enhanced RC group
	 */",
 "/**
	 * Generate HTML for an arrow or placeholder graphic
	 * @param $dir String: one of \'\', \'d\', \'l\', \'r\'
	 * @param $alt String: text
	 * @param $title String: text
	 * @return String: HTML <img> tag
	 */",
 "/**
	 * Generate HTML for a right- or left-facing arrow,
	 * depending on language direction.
	 * @return String: HTML <img> tag
	 */",
 "/**
	 * Generate HTML for a down-facing arrow
	 * depending on language direction.
	 * @return String: HTML <img> tag
	 */",
 "/**
	 * Generate HTML for a spacer image
	 * @return String: HTML <img> tag
	 */",
 "/**
	 * Enhanced RC ungrouped line.
	 *
	 * @param $rcObj RecentChange
	 * @return String: a HTML formatted line (generated using $r)
	 */",
 "/**
	 * If enhanced RC is in use, this function takes the previously cached
	 * RC lines, arranges them, and outputs the HTML
	 *
	 * @return string
	 */",
 "/**
	 * Returns text for the end of RC
	 * If enhanced RC is in use, returns pretty much all the text
	 * @return string
	 */",
 "/**
 * Generate a list of changes using an Enhanced system (uses javascript).
 */",
 "/**
	 * @param $skin Skin
	 * @param $result
	 * @return string
	 */",
 "/**
 * A special page that list most viewed pages
 *
 * @ingroup SpecialPage
 */",
 "/** @dataProvider providerPlural */",
 "/** Tests for MediaWiki languages/classes/LanguageTl.php */",
 "/** @dataProvider providerPlural */",
 "/** Tests for MediaWiki languages/classes/LanguageCy.php */",
 "/**
	 * @param $image File
	 * @return array|bool
	 */",
 "/**
	 * Wrapper for base classes ImageHandler::getImageSize() that checks for
	 * rotation reported from metadata and swaps the sizes to match.
	 *
	 * @param File $image
	 * @param string $path
	 * @return array
	 */",
 "/**
	 * On supporting image formats, try to read out the low-level orientation
	 * of the file and return the angle that the file needs to be rotated to
	 * be viewed.
	 *
	 * This information is only useful when manipulating the original file;
	 * the width and height we normally work with is logical, and will match
	 * any produced output views.
	 *
	 * @param $file File
	 * @return int 0, 90, 180 or 270
	 */",
 "/**
	 * Given a chunk of serialized Exif metadata, return the orientation as
	 * degrees of rotation.
	 *
	 * @param string $data
	 * @return int 0, 90, 180 or 270
	 * @fixme orientation can include flipping as well; see if this is an issue!
	 */",
 "/**
 * Stuff specific to JPEG and (built-in) TIFF handler.
 * All metadata related, since both JPEG and TIFF support Exif.
 *
 * @ingroup Media
 */",
 "/**
	 * Convert from the nominative form of a noun to some other case
	 *
	 * Just used in a couple places for sitenames; special-case as necessary.
	 * Rules are far from complete.
	 *
	 * Cases: genitive, accusative, ablative
	 *
	 * @param $word string
	 * @param $case string
	 *
	 * @return string
	 */",
 "/** Latin (lingua Latina)
 *
 * @ingroup Language
 */",
 "/**
	 * Perform the actual work
	 */",
 "/**
 * Interface that deferrable updates should implement. Basically required so we
 * can validate input on DeferredUpdates::addUpdate()
 *
 * @since 1.19
 */",
 "/**
	 * Add an update to the deferred list
	 * @param $update DeferrableUpdate Some object that implements doUpdate()
	 */",
 "/**
	 * HTMLCacheUpdates are the most common deferred update people use. This
	 * is a shortcut method for that.
	 * @see HTMLCacheUpdate::__construct()
	 * @param $title
	 * @param $table
	 */",
 "/**
	 * Do any deferred updates and clear the list
	 *
	 * @param $commit String: set to \'commit\' to commit after every update to
	 *                prevent lock contention
	 */",
 "/**
	 * Clear all pending updates without performing them. Generally, you don\'t
	 * want or need to call this. Unit tests need it though.
	 */",
 "/**
 * Class for mananging the deferred updates.
 *
 * @since 1.19
 */",
 "/**
 * Test Case ID   : 11, 12 (http://www.mediawiki.org/wiki/New_installer/Test_plan)
 * Test Case Name : Install mediawiki on a already installed Mediawiki.
 * Version        : MediaWiki 1.18alpha
*/",
 "/**
	 * Load a page revision from a given revision ID number.
	 * Returns null if no such revision can be found.
	 *
	 * @param $id Integer
	 * @return Revision or null
	 */",
 "/**
	 * Load either the current, or a specified, revision
	 * that\'s attached to a given title. If not attached
	 * to that title, will return null.
	 *
	 * @param $title Title
	 * @param $id Integer (optional)
	 * @return Revision or null
	 */",
 "/**
	 * Load either the current, or a specified, revision
	 * that\'s attached to a given page ID.
	 * Returns null if no such revision can be found.
	 *
	 * @param $revId Integer
	 * @param $pageId Integer (optional)
	 * @return Revision or null
	 */",
 "/**
	 * Make a fake revision object from an archive table row. This is queried
	 * for permissions or even inserted (as in Special:Undelete)
	 * @todo FIXME: Should be a subclass for RevisionDelete. [TS]
	 *
	 * @param $row
	 * @param $overrides array
	 *
	 * @return Revision
	 */",
 "/**
	 * @since 1.19
	 *
	 * @param $row
	 * @return Revision
	 */",
 "/**
	 * Load a page revision from a given revision ID number.
	 * Returns null if no such revision can be found.
	 *
	 * @param $db DatabaseBase
	 * @param $id Integer
	 * @return Revision or null
	 */",
 "/**
	 * Load either the current, or a specified, revision
	 * that\'s attached to a given page. If not attached
	 * to that page, will return null.
	 *
	 * @param $db DatabaseBase
	 * @param $pageid Integer
	 * @param $id Integer
	 * @return Revision or null
	 */",
 "/**
	 * Load either the current, or a specified, revision
	 * that\'s attached to a given page. If not attached
	 * to that page, will return null.
	 *
	 * @param $db DatabaseBase
	 * @param $title Title
	 * @param $id Integer
	 * @return Revision or null
	 */",
 "/**
	 * Load the revision for the given title with the given timestamp.
	 * WARNING: Timestamps may in some circumstances not be unique,
	 * so this isn\'t the best key to use.
	 *
	 * @param $db DatabaseBase
	 * @param $title Title
	 * @param $timestamp String
	 * @return Revision or null
	 */",
 "/**
	 * Given a set of conditions, fetch a revision.
	 *
	 * @param $conditions Array
	 * @return Revision or null
	 */",
 "/**
	 * Given a set of conditions, fetch a revision from
	 * the given database connection.
	 *
	 * @param $db DatabaseBase
	 * @param $conditions Array
	 * @return Revision or null
	 */",
 "/**
	 * Return a wrapper for a series of database rows to
	 * fetch all of a given page\'s revisions in turn.
	 * Each row can be fed to the constructor to get objects.
	 *
	 * @param $title Title
	 * @return ResultWrapper
	 */",
 "/**
	 * Given a set of conditions, return a ResultWrapper
	 * which will return matching database rows with the
	 * fields necessary to build Revision objects.
	 *
	 * @param $db DatabaseBase
	 * @param $conditions Array
	 * @return ResultWrapper
	 */",
 "/**
	 * Return the value of a select() JOIN conds array for the user table.
	 * This will get user table rows for logged-in users.
	 * @since 1.19
	 * @return Array
	 */",
 "/**
	 * Return the value of a select() page conds array for the paeg table.
	 * This will assure that the revision(s) are not orphaned from live pages.
	 * @since 1.19
	 * @return Array
	 */",
 "/**
	 * Return the list of revision fields that should be selected to create
	 * a new revision.
	 */",
 "/**
	 * Return the list of text fields that should be selected to read the
	 * revision text
	 */",
 "/**
	 * Return the list of page fields that should be selected from page table
	 */",
 "/**
	 * Return the list of user fields that should be selected from user table
	 */",
 "/**
	 * Constructor
	 *
	 * @param $row Mixed: either a database row or an array
	 * @access private
	 */",
 "/**
	 * Get revision ID
	 *
	 * @return Integer
	 */",
 "/**
	 * Set the revision ID
	 *
	 * @since 1.19
	 * @param $id Integer
	 */",
 "/**
	 * Get text row ID
	 *
	 * @return Integer
	 */",
 "/**
	 * Get parent revision ID (the original previous page revision)
	 *
	 * @return Integer
	 */",
 "/**
	 * Returns the length of the text in this revision, or null if unknown.
	 *
	 * @return Integer
	 */",
 "/**
	 * Returns the base36 sha1 of the text in this revision, or null if unknown.
	 *
	 * @return String
	 */",
 "/**
	 * Returns the title of the page associated with this entry.
	 *
	 * @return Title
	 */",
 "/**
	 * Set the title of the revision
	 *
	 * @param $title Title
	 */",
 "/**
	 * Get the page ID
	 *
	 * @return Integer
	 */",
 "/**
	 * Fetch revision\'s user id if it\'s available to the specified audience.
	 * If the specified audience does not have access to it, zero will be
	 * returned.
	 *
	 * @param $audience Integer: one of:
	 *      Revision::FOR_PUBLIC       to be displayed to all users
	 *      Revision::FOR_THIS_USER    to be displayed to $wgUser
	 *      Revision::RAW              get the ID regardless of permissions
	 * @param $user User object to check for, only if FOR_THIS_USER is passed
	 *              to the $audience parameter
	 * @return Integer
	 */",
 "/**
	 * Fetch revision\'s user id without regard for the current user\'s permissions
	 *
	 * @return String
	 */",
 "/**
	 * Fetch revision\'s username if it\'s available to the specified audience.
	 * If the specified audience does not have access to the username, an
	 * empty string will be returned.
	 *
	 * @param $audience Integer: one of:
	 *      Revision::FOR_PUBLIC       to be displayed to all users
	 *      Revision::FOR_THIS_USER    to be displayed to $wgUser
	 *      Revision::RAW              get the text regardless of permissions
	 * @param $user User object to check for, only if FOR_THIS_USER is passed
	 *              to the $audience parameter
	 * @return string
	 */",
 "/**
	 * Fetch revision\'s username without regard for view restrictions
	 *
	 * @return String
	 */",
 "/**
	 * Fetch revision comment if it\'s available to the specified audience.
	 * If the specified audience does not have access to the comment, an
	 * empty string will be returned.
	 *
	 * @param $audience Integer: one of:
	 *      Revision::FOR_PUBLIC       to be displayed to all users
	 *      Revision::FOR_THIS_USER    to be displayed to $wgUser
	 *      Revision::RAW              get the text regardless of permissions
	 * @param $user User object to check for, only if FOR_THIS_USER is passed
	 *              to the $audience parameter
	 * @return String
	 */",
 "/**
	 * Fetch revision comment without regard for the current user\'s permissions
	 *
	 * @return String
	 */",
 "/**
	 * @return Boolean
	 */",
 "/**
	 * @return Integer rcid of the unpatrolled row, zero if there isn\'t one
	 */",
 "/**
	 * @param $field int one of DELETED_* bitfield constants
	 *
	 * @return Boolean
	 */",
 "/**
	 * Get the deletion bitfield of the revision
	 *
	 * @return int
	 */",
 "/**
	 * Fetch revision text if it\'s available to the specified audience.
	 * If the specified audience does not have the ability to view this
	 * revision, an empty string will be returned.
	 *
	 * @param $audience Integer: one of:
	 *      Revision::FOR_PUBLIC       to be displayed to all users
	 *      Revision::FOR_THIS_USER    to be displayed to $wgUser
	 *      Revision::RAW              get the text regardless of permissions
	 * @param $user User object to check for, only if FOR_THIS_USER is passed
	 *              to the $audience parameter
	 * @return String
	 */",
 "/**
	 * Alias for getText(Revision::FOR_THIS_USER)
	 *
	 * @deprecated since 1.17
	 * @return String
	 */",
 "/**
	 * Fetch revision text without regard for view restrictions
	 *
	 * @return String
	 */",
 "/**
	 * @return String
	 */",
 "/**
	 * @return Boolean
	 */",
 "/**
	 * Get previous revision for this title
	 *
	 * @return Revision or null
	 */",
 "/**
	 * Get next revision for this title
	 *
	 * @return Revision or null
	 */",
 "/**
	 * Get previous revision Id for this page_id
	 * This is used to populate rev_parent_id on save
	 *
	 * @param $db DatabaseBase
	 * @return Integer
	 */",
 "/**
	  * Get revision text associated with an old or archive row
	  * $row is usually an object from wfFetchRow(), both the flags and the text
	  * field must be included
	  *
	  * @param $row Object: the text data
	  * @param $prefix String: table prefix (default \'old_\')
	  * @return String: text the text requested or false on failure
	  */",
 "/**
	 * If $wgCompressRevisions is enabled, we will compress data.
	 * The input string is modified in place.
	 * Return value is the flags field: contains \'gzip\' if the
	 * data is compressed, and \'utf-8\' if we\'re saving in UTF-8
	 * mode.
	 *
	 * @param $text Mixed: reference to a text
	 * @return String
	 */",
 "/**
	 * Insert a new revision into the database, returning the new revision ID
	 * number on success and dies horribly on failure.
	 *
	 * @param $dbw DatabaseBase: (master connection)
	 * @return Integer
	 */",
 "/**
	 * Get the base 36 SHA-1 value for a string of text
	 * @param $text String
	 * @return String
	 */",
 "/**
	 * Lazy-load the revision\'s text.
	 * Currently hardcoded to the \'text\' table storage engine.
	 *
	 * @return String
	 */",
 "/**
	 * Create a new null-revision for insertion into a page\'s
	 * history. This will not re-save the text, but simply refer
	 * to the text from the previous version.
	 *
	 * Such revisions can for instance identify page rename
	 * operations and other such meta-modifications.
	 *
	 * @param $dbw DatabaseBase
	 * @param $pageId Integer: ID number of the page to read from
	 * @param $summary String: revision\'s summary
	 * @param $minor Boolean: whether the revision should be considered as minor
	 * @return Revision|null on error
	 */",
 "/**
	 * Determine if the current user is allowed to view a particular
	 * field of this revision, if it\'s marked as deleted.
	 *
	 * @param $field Integer:one of self::DELETED_TEXT,
	 *                              self::DELETED_COMMENT,
	 *                              self::DELETED_USER
	 * @param $user User object to check, or null to use $wgUser
	 * @return Boolean
	 */",
 "/**
	 * Determine if the current user is allowed to view a particular
	 * field of this revision, if it\'s marked as deleted. This is used
	 * by various classes to avoid duplication.
	 *
	 * @param $bitfield Integer: current field
	 * @param $field Integer: one of self::DELETED_TEXT = File::DELETED_FILE,
	 *                               self::DELETED_COMMENT = File::DELETED_COMMENT,
	 *                               self::DELETED_USER = File::DELETED_USER
	 * @param $user User object to check, or null to use $wgUser
	 * @return Boolean
	 */",
 "/**
	 * Get rev_timestamp from rev_id, without loading the rest of the row
	 *
	 * @param $title Title
	 * @param $id Integer
	 * @return String
	 */",
 "/**
	 * Get count of revisions per page...not very efficient
	 *
	 * @param $db DatabaseBase
	 * @param $id Integer: page id
	 * @return Integer
	 */",
 "/**
	 * Get count of revisions per page...not very efficient
	 *
	 * @param $db DatabaseBase
	 * @param $title Title
	 * @return Integer
	 */",
 "/**
 * @todo document
 */",
 "/** Araucanian (Mapudungun)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Clerc
 * @author Fiestoforo
 * @author Kaniw
 * @author Lin linao
 * @author Poquil
 * @author Remember the dot
 */",
 "/**
 * Inherit main code from SkinTemplate, set the CSS and template filter.
 * @ingroup Skins
 */",
 "/**
 *
 * @ingroup SpecialPage
 */",
 "/**
	 * Return the total number of edits and number of unique editors
	 * on a given page. If page does not exist, returns false.
	 *
	 * @param $title Title object
	 * @return mixed array or boolean false
	 */",
 "/**
 * Display informations about a page.
 * Very inefficient for the moment.
 *
 * Copyright ?? 2011 Alexandre Emsenhuber
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA
 *
 * @file
 * @ingroup Actions
 */",
 "/**
	 * Could the specified user account be deemed inactive?
	 * (No edits, no deleted edits, no log entries, no current/old uploads)
	 *
	 * @param $id User\'s ID
	 * @param $master Perform checking on the master
	 * @return bool
	 */",
 "/**
 * Internationalisation for WikiEditor extension
 *
 * @file
 * @ingroup Extensions
 */",
 "/** English
 * @author Trevor Parscal
 */",
 "/** Message documentation (Message documentation)
 * @author Amire80
 * @author EugeneZelenko
 * @author Hamilton Abreu
 * @author Harald Khan
 * @author Liangent
 * @author Lloffiwr
 * @author Mormegil
 * @author Njardarlogar
 * @author Onecountry
 * @author Prima klasy4na
 * @author Raymond
 * @author Siebrand
 * @author Umherirrender
 * @author Yekrats
 */",
 "/** Abkhazian (????????????)
 * @author Temuri rajavi
 */",
 "/** Afrikaans (Afrikaans)
 * @author Adriaan
 * @author Anrie
 * @author Naudefj
 * @author ??????????????? ?????????????????????
 */",
 "/** Gheg Albanian (Geg??)
 * @author Mdupont
 */",
 "/** Aragonese (Aragon??s)
 * @author Juanpabl
 */",
 "/** Old English (??nglisc)
 * @author W??denhelm
 */",
 "/** Arabic (??????????????)
 * @author Aiman titi
 * @author DRIHEM
 * @author McDutchie
 * @author Meno25
 * @author OsamaK
 * @author Samer
 * @author Zack wadghiri
 * @author ????????????05
 * @author ??????????
 */",
 "/** Aramaic (??????????)
 * @author Basharh
 * @author Michaelovic
 */",
 "/** Egyptian Spoken Arabic (????????)
 * @author Dudi
 * @author Meno25
 */",
 "/** Assamese (??????????????????)
 * @author Bishnu Saikia
 * @author Chaipau
 * @author Gitartha.bordoloi
 */",
 "/** Asturian (Asturianu)
 * @author Xuacu
 */",
 "/** Azerbaijani (Az??rbaycanca)
 * @author Cekli829
 * @author Koc61
 * @author PPerviz
 * @author Vago
 * @author Vugar 1981
 */",
 "/** Bashkir (??????????????????)
 * @author Assele
 * @author Haqmar
 */",
 "/** Bavarian (Boarisch)
 * @author Mucalexx
 */",
 "/** Belarusian (????????????????????)
 * @author Maksim L.
 * @author Yury Tarasievich
 */",
 "/** Belarusian (Tara??kievica orthography) (??????????????????????? (??????????????????????)???)
 * @author EugeneZelenko
 * @author Jim-by
 * @author Renessaince
 * @author Wizardist
 * @author Zedlik
 */",
 "/** Bulgarian (??????????????????)
 * @author DCLXVI
 * @author McDutchie
 * @author Spiritia
 * @author Turin
 * @author Wizardist
 */",
 "/** Banjar (Bahasa Banjar)
 * @author Ezagren
 * @author J Subhi
 */",
 "/** Bengali (???????????????)
 * @author Bellayet
 * @author Wikitanvir
 */",
 "/** Tibetan (?????????????????????)
 * @author Freeyak
 */",
 "/** Bishnupria Manipuri (???????????? ?????????/??????????????????????????????????????? ?????????????????????)
 * @author Usingha
 */",
 "/** Breton (brezhoneg)
 * @author Fohanno
 * @author Fulup
 * @author Gwendal
 * @author Y-M D
 */",
 "/** Bosnian (Bosanski)
 * @author CERminator
 * @author Palapa
 */",
 "/** Catalan (Catal??)
 * @author BroOk
 * @author Martorell
 * @author Paucabot
 * @author SMP
 * @author Solde
 * @author Toniher
 * @author Vriullop
 */",
 "/** Chechen (??????????????)
 * @author Sasan700
 */",
 "/** Sorani (??????????)
 * @author Asoxor
 * @author Marmzok
 * @author McDutchie
 */",
 "/** Corsican (Corsu) */",
 "/** Czech (??esky)
 * @author Kuvaly
 * @author Mormegil
 */",
 "/** Kashubian (Kasz??bsczi)
 * @author Kuvaly
 */",
 "/** Church Slavic (?????????????????????? / ??????????????????????????????)
 * @author ??????
 */",
 "/** Welsh (Cymraeg)
 * @author Lloffiwr
 * @author Xxglennxx
 */",
 "/** Danish (Dansk)
 * @author Christian List
 * @author F. Cosoleto
 * @author Froztbyte
 * @author Peter Alberti
 * @author Sarrus
 * @author Sir48
 */",
 "/** German (Deutsch)
 * @author Als-Holder
 * @author Church of emacs
 * @author DaSch
 * @author Kghbln
 * @author MF-Warburg
 * @author Metalhead64
 * @author Mikullovci11
 * @author Ojay
 * @author Umherirrender
 * @author Ziko
 * @author ???
 */",
 "/** German (formal address) (???Deutsch (Sie-Form)???)
 * @author Imre
 */",
 "/** Zazaki (Zazaki)
 * @author Erdemaslancan
 * @author Mirzali
 * @author Xoser
 */",
 "/** Lower Sorbian (Dolnoserbski)
 * @author Michawiki
 */",
 "/** Greek (????????????????)
 * @author AK
 * @author Dead3y3
 * @author Flyax
 * @author Geraki
 * @author Lou
 * @author ZaDiak
 * @author ??????????????
 * @author ??????????????????
 */",
 "/** Esperanto (Esperanto)
 * @author ArnoLagrange
 * @author Lucas
 * @author Marcos
 * @author Michawiki
 * @author Yekrats
 * @author Ziko
 */",
 "/** Spanish (espa??ol)
 * @author -jem-
 * @author AlimanRuna
 * @author Armando-Martin
 * @author Crazymadlover
 * @author Fitoschido
 * @author Imre
 * @author Locos epraix
 * @author McDutchie
 * @author PerroVerd
 * @author Pertile
 * @author Peter17
 * @author Platonides
 * @author Translationista
 * @author Vivaelcelta
 */",
 "/** Estonian (eesti)
 * @author Avjoska
 * @author Kyng
 * @author Pikne
 * @author WikedKentaur
 */",
 "/** Basque (Euskara)
 * @author An13sa
 * @author Inorbez
 * @author Joxemai
 * @author Xabier Armendaritz
 */",
 "/** Persian (??????????)
 * @author Ebraminio
 * @author Huji
 * @author Ladsgroup
 * @author Mjbmr
 * @author Wayiran
 * @author ZxxZxxZ
 */",
 "/** Finnish (Suomi)
 * @author Crt
 * @author Nedergard
 * @author Nike
 * @author Olli
 * @author Silvonen
 * @author Str4nd
 * @author ZeiP
 */",
 "/** French (Fran??ais)
 * @author Cquoi
 * @author Crochet.david
 * @author DavidL
 * @author Gomoko
 * @author IAlex
 * @author Jean-Fr??d??ric
 * @author McDutchie
 * @author Peter17
 * @author PieRRoMaN
 * @author Urhixidur
 * @author Verdy p
 * @author Zetud
 */",
 "/** Franco-Proven??al (Arpetan)
 * @author ChrisPtDe
 */",
 "/** Friulian (Furlan)
 * @author Klenje
 */",
 "/** Western Frisian (Frysk) */",
 "/** Scottish Gaelic (G??idhlig)
 * @author Akerbeltz
 */",
 "/** Galician (Galego)
 * @author Toli??o
 */",
 "/** Ancient Greek (????????????? ??????????????????)
 * @author Crazymadlover
 */",
 "/** Swiss German (Alemannisch)
 * @author Als-Chl??mens
 * @author Als-Holder
 * @author Kghbln
 */",
 "/** Gujarati (?????????????????????)
 * @author KartikMistry
 * @author Sushant savla
 */",
 "/** Manx (Gaelg)
 * @author MacTire02
 * @author Shimmin Beg
 */",
 "/** Hausa (????????????) */",
 "/** Hebrew (??????????)
 * @author Amire80
 * @author Rotemliss
 * @author YaronSh
 * @author Yonidebest
 */",
 "/** Hindi (??????????????????)
 * @author Ansumang
 * @author Pooja.srivastava
 * @author Siddhartha Ghai
 */",
 "/** Fiji Hindi (Latin script) (Fiji Hindi) */",
 "/** Croatian (Hrvatski)
 * @author Bugoslav
 * @author Ex13
 * @author Excaliboor
 * @author Roberta F.
 * @author SpeedyGonsales
 */",
 "/** Upper Sorbian (Hornjoserbsce)
 * @author Michawiki
 */",
 "/** Hungarian (Magyar)
 * @author Bdamokos
 * @author Dani
 * @author Dj
 * @author Glanthor Reviol
 * @author Hunyadym
 * @author McDutchie
 * @author Misibacsi
 */",
 "/** Armenian (??????????????)
 * @author Chaojoker
 * @author Xelgen
 */",
 "/** Interlingua (Interlingua)
 * @author McDutchie
 */",
 "/** Indonesian (Bahasa Indonesia)
 * @author Bennylin
 * @author Farras
 * @author Irwangatot
 * @author IvanLanin
 * @author Kenrick95
 */",
 "/** Igbo (Igbo)
 * @author Ukabia
 */",
 "/** Iloko (Ilokano)
 * @author Lam-ang
 */",
 "/** Ingush (????????????????)
 * @author Amire80
 * @author Sapral Mikail
 */",
 "/** Ido (Ido)
 * @author Malafaya
 */",
 "/** Icelandic (??slenska)
 * @author Krun
 * @author Max??
 * @author Sn??var
 */",
 "/** Italian (Italiano)
 * @author Aushulz
 * @author Beta16
 * @author F. Cosoleto
 * @author Gianfranco
 * @author Gliu
 * @author McDutchie
 * @author Nemo bis
 * @author PaoloRomano
 * @author Una giornata uggiosa \'94
 * @author Vituzzu
 */",
 "/** Japanese (?????????)
 * @author Aotake
 * @author Fryed-peach
 * @author Hosiryuhosi
 * @author Ohgi
 * @author Schu
 * @author Shirayuki
 * @author Whym
 * @author ????????????
 */",
 "/** Lojban (Lojban)
 * @author Ruzihm
 */",
 "/** Javanese (Basa Jawa)
 * @author Meursault2004
 */",
 "/** Georgian (?????????????????????)
 * @author BRUTE
 * @author David1010
 * @author Dawid Deutschland
 * @author ITshnik
 * @author ??????????????????????????????
 */",
 "/** ???????????????? (????????????????)
 * @author Bogups
 */",
 "/** Kirmanjki (K??rmancki)
 * @author Mirzali
 */",
 "/** Kazakh (Cyrillic script) (????????????????? (??????????)???)
 * @author GaiJin
 * @author Kaztrans
 */",
 "/** Khmer (???????????????????????????)
 * @author ???????????????????????????
 */",
 "/** Kannada (???????????????)
 * @author Nayvik
 */",
 "/** Korean (?????????)
 * @author Devunt
 * @author IRTC1015
 * @author Klutzy
 * @author Kwj2772
 * @author Mintz0223
 * @author ????????????
 * @author ??????
 */",
 "/** Karachay-Balkar (????????????????-??????????????)
 * @author Iltever
 * @author ????????????????????
 */",
 "/** Colognian (Ripoarisch)
 * @author Purodha
 */",
 "/** Kurdish (Latin script) (???Kurd?? (lat??n??)???)
 * @author Erdal Ronahi
 * @author George Animal
 * @author Ghybu
 * @author Gomada
 */",
 "/** Cornish (Kernowek)
 * @author Kw-Moon
 * @author Nrowe
 */",
 "/** Latin (Latina)
 * @author OrbiliusMagister
 * @author UV
 */",
 "/** Luxembourgish (L??tzebuergesch)
 * @author Robby
 */",
 "/** Limburgish (Limburgs)
 * @author Ooswesthoesbes
 * @author Pahles
 */",
 "/** Lithuanian (Lietuvi??)
 * @author Garas
 * @author Hugo.arg
 * @author Matasg
 * @author Vpovilaitis
 */",
 "/** Latgalian (Latga??u)
 * @author Dark Eagle
 */",
 "/** Lushai (Mizo ??awng)
 * @author RMizo
 */",
 "/** Latvian (Latvie??u)
 * @author Gleb Borisov
 * @author GreenZeb
 * @author Marozols
 * @author Papuass
 * @author Xil
 */",
 "/** Lazuri (Lazuri)
 * @author Bombola
 */",
 "/** Minangkabau (Baso Minangkabau)
 * @author VoteITP
 */",
 "/** Macedonian (????????????????????)
 * @author Bjankuloski06
 * @author Brest
 */",
 "/** Malayalam (??????????????????)
 * @author McDutchie
 * @author Praveenp
 */",
 "/** Mongolian (????????????)
 * @author Chinneeb
 */",
 "/** Marathi (???????????????)
 * @author Htt
 * @author Mahitgar
 * @author McDutchie
 * @author Rahuldeshmukh101
 * @author Shantanoo
 * @author V.narsikar
 * @author ????????? ????????????
 */",
 "/** Malay (Bahasa Melayu)
 * @author Anakmalaysia
 * @author Aurora
 * @author Aviator
 * @author CoolCityCat
 * @author Diagramma Della Verita
 * @author Yosri
 */",
 "/** Maltese (Malti)
 * @author Chrisportelli
 */",
 "/** Erzya (????????????)
 * @author Botuzhaleny-sodamo
 */",
 "/** Mazanderani (????????????????)
 * @author Mehdi
 */",
 "/** Nahuatl (N??huatl)
 * @author Ricardo gs
 * @author Te??tlalili
 */",
 "/** Norwegian (bokm??l)??? (???Norsk (bokm??l)???)
 * @author Event
 * @author Jon Harald S??by
 * @author Laaknor
 * @author Nghtwlkr
 */",
 "/** Nedersaksisch (Nedersaksisch)
 * @author Servien
 */",
 "/** Nepali (??????????????????)
 * @author Bhawani Gautam
 */",
 "/** Dutch (Nederlands)
 * @author Hamaryns
 * @author McDutchie
 * @author SPQRobin
 * @author Siebrand
 * @author Tvdm
 * @author Wiki13
 */",
 "/** Norwegian Nynorsk (???Norsk (nynorsk)???)
 * @author Eirik
 * @author Gunnernett
 * @author Harald Khan
 * @author Nghtwlkr
 * @author Njardarlogar
 */",
 "/** Northern Sotho (Sesotho sa Leboa)
 * @author Mohau
 */",
 "/** Occitan (Occitan)
 * @author Boulaur
 * @author Cedric31
 * @author Jfblanc
 * @author McDutchie
 */",
 "/** Oriya (????????????)
 * @author Ansumang
 * @author Odisha1
 * @author Psubhashish
 */",
 "/** Deitsch (Deitsch)
 * @author Xqt
 */",
 "/** P??lzisch (P??lzisch)
 * @author Manuae
 */",
 "/** Polish (Polski)
 * @author BeginaFelicysym
 * @author Leinad
 * @author Marcin ??ukasz Kiejzik
 * @author Nux
 * @author Olgak85
 * @author Sp5uhe
 * @author ToSter
 * @author Wpedzich
 */",
 "/** Piedmontese (Piemont??is)
 * @author Borich??t
 * @author Dragon??t
 */",
 "/** Western Punjabi (????????????)
 * @author Khalid Mahmood
 */",
 "/** Pontic (????????????????) */",
 "/** Pashto (????????)
 * @author Ahmed-Najib-Biabani-Ibrahimkhel
 */",
 "/** Portuguese (Portugu??s)
 * @author 555
 * @author Giro720
 * @author Hamilton Abreu
 * @author Helder.wiki
 * @author Jo??o Sousa
 * @author Luckas Blade
 * @author Malafaya
 * @author MetalBrasil
 */",
 "/** Brazilian Portuguese (Portugu??s do Brasil)
 * @author 555
 * @author Daemorris
 * @author Everton137
 * @author Giro720
 * @author Hamilton Abreu
 * @author Helder.wiki
 * @author Heldergeovane
 * @author Lijealso
 * @author Luckas Blade
 * @author MetalBrasil
 * @author Rafael Vargas
 */",
 "/** Quechua (Runa Simi)
 * @author AlimanRuna
 */",
 "/** Romanian (rom??n??)
 * @author AdiJapan
 * @author Cin
 * @author Firilacroco
 * @author Minisarm
 */",
 "/** Tarand??ne (Tarand??ne)
 * @author Joetaras
 * @author Reder
 */",
 "/** Russian (??????????????)
 * @author Claymore
 * @author Dim Grits
 * @author Eleferen
 * @author G0rn
 * @author KPu3uC B Poccuu
 * @author Kaganer
 * @author Lockal
 * @author Temuri rajavi
 * @author ?????????????????? ??????????????
 */",
 "/** Rusyn (????????????????????)
 * @author Gazeb
 */",
 "/** Sanskrit (???????????????????????????)
 * @author Ansumang
 * @author Bhawani Gautam
 */",
 "/** Sakha (???????? ????????)
 * @author HalanTul
 */",
 "/** Sardinian (Sardu)
 * @author Andria
 */",
 "/** Sicilian (Sicilianu)
 * @author Aushulz
 * @author Gmelfi
 */",
 "/** Scots (Scots) */",
 "/** Sinhala (???????????????)
 * @author Budhajeewa
 * @author Calcey
 * @author Pasanbhathiya2
 * @author Singhalawap
 * @author ??????????????? ??????????????????????????????
 * @author ???????????? ????????????????????????
 * @author ??????????????? ?????????????????????
 * @author ??????????????????
 */",
 "/** Slovak (Sloven??ina)
 * @author Helix84
 * @author Jkjk
 * @author McDutchie
 * @author Teslaton
 */",
 "/** Slovenian (Sloven????ina)
 * @author Dbc334
 */",
 "/** Albanian (Shqip)
 * @author Mikullovci11
 * @author Olsi
 */",
 "/** Serbian (Cyrillic script) (??????????????? (????????????????)???)
 * @author Charmed94
 * @author Helios13
 * @author McDutchie
 * @author Rancher
 * @author Sasa Stefanovic
 * @author ?????????? ??????????????????
 * @author ?????????????? ????????????????????
 */",
 "/** Serbian (Latin script) (???Srpski (latinica)???)
 * @author Liangent
 * @author McDutchie
 * @author Rancher
 * @author ?????????? ??????????????????
 */",
 "/** Seeltersk (Seeltersk)
 * @author Pyt
 */",
 "/** Sundanese (Basa Sunda)
 * @author Kandar
 */",
 "/** Swedish (Svenska)
 * @author Ainali
 * @author Boivie
 * @author Cohan
 * @author Dafer45
 * @author Hannibal
 * @author Lokal Profil
 * @author McDutchie
 * @author Sertion
 * @author Warrakkk
 */",
 "/** Swahili (Kiswahili)
 * @author Lloffiwr
 * @author Muddyb Blast Producer
 */",
 "/** Tamil (???????????????)
 * @author Karthi.dr
 * @author Logicwiki
 * @author Surya Prakash.S.A.
 * @author TRYPPN
 * @author ??????????????????
 */",
 "/** Telugu (??????????????????)
 * @author Veeven
 */",
 "/** Tajik (Cyrillic script) (????????????) */",
 "/** Tajik (Latin script) (Tojik??)
 * @author Liangent
 */",
 "/** Thai (?????????)
 * @author Horus
 * @author Korrawit
 * @author Octahedron80
 * @author Woraponboonkerd
 */",
 "/** Turkmen (T??rkmen??e)
 * @author Hanberke
 */",
 "/** Tagalog (Tagalog)
 * @author AnakngAraw
 * @author McDutchie
 */",
 "/** Tok Pisin (Tok Pisin)
 * @author Iketsi
 */",
 "/** Turkish (T??rk??e)
 * @author Emperyan
 * @author Joseph
 * @author Koc61
 * @author Manco Capac
 * @author Sadrettin
 * @author Srhat
 * @author Vito Genovese
 */",
 "/** Tatar (Cyrillic script) (??????????????)
 * @author Bulatbulat
 * @author Zahidulla
 * @author ????????????
 * @author ?????????? ????????????
 */",
 "/** Ukrainian (????????????????????)
 * @author AS
 * @author Ahonc
 * @author Dim Grits
 * @author Olvin
 * @author Prima klasy4na
 * @author ????????
 */",
 "/** Urdu (????????)
 * @author ?????????? ????????
 */",
 "/** V??neto (V??neto)
 * @author Candalua
 * @author Vajotwo
 */",
 "/** Veps (Veps??n kel???)
 * @author ?????????? ????????????????
 */",
 "/** Vietnamese (Ti???ng Vi???t)
 * @author Minh Nguyen
 * @author Vinhtantran
 */",
 "/** Volap??k (Volap??k)
 * @author Malafaya
 */",
 "/** Wolof (Wolof)
 * @author Ibou
 */",
 "/** Wu (??????) */",
 "/** Mingrelian (???????????????????????????) */",
 "/** Yiddish (????????????)
 * @author ????????????????
 */",
 "/** Yoruba (Yor??b??)
 * @author Demmy
 */",
 "/** Cantonese (??????)
 * @author Horacewai2
 * @author Waihorace
 */",
 "/** Simplified Chinese (?????????(??????)???)
 * @author Anakmalaysia
 * @author Bencmq
 * @author Fantasticfears
 * @author Gaoxuewei
 * @author Hydra
 * @author Liangent
 * @author Onecountry
 * @author PhiLiP
 * @author Shizhao
 * @author Xiaomingyan
 */",
 "/** Traditional Chinese (?????????(??????)???)
 * @author Anakmalaysia
 * @author Frankou
 * @author Gaoxuewei
 * @author Horacewai2
 * @author KaiesTse
 * @author Liangent
 * @author Mark85296341
 * @author Oapbtommy
 * @author PhiLiP
 * @author Waihorace
 * @author Wong128hk
 * @author Wrightbus
 */",
 "/** Zulu (isiZulu)
 * @author Kuvaly
 */",
 "/**
	 * @dataProvider providePaths
	 */",
 "/**
*TestsforwfBaseName()
*/",
 "/** @dataProvider providerPlural */",
 "/** Tests for MediaWiki languages/classes/LanguageSk.php */",
 "/** Tagalog (Tagalog)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author AnakngAraw
 * @author Felipe Aira
 * @author Kaganer
 * @author Sky Harbor
 * @author tl.wikipedia.org sysops
 * @author ???????? ????????????????
 */",
 "/**
 * @group Database
 */",
 "/** Luxembourgish (L??tzebuergesch)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Hercule
 * @author Kaffi
 * @author Kaganer
 * @author Les Meloures
 * @author Purodha
 * @author Reedy
 * @author Robby
 * @author Urhixidur
 * @author Zinneke
 * @author ???????? ????????????????
 */",
 "/**
	 * Constructor.
	 * @param $options Options for script.
	 */",
 "/**
	 * Get the default checks.
	 * @return A list of the default checks.
	 */",
 "/**
	 * Get the checks which check other things than messages.
	 * @return A list of the non-message checks.
	 */",
 "/**
	 * Get the checks that can easily be treated by non-speakers of the language.
	 * @return Array A list of the easy checks.
	 */",
 "/**
	 * Get all checks.
	 * @return An array of all check names mapped to their function names.
	 */",
 "/**
	 * Get total count for each check non-messages check.
	 * @return An array of all check names mapped to a two-element array:
	 * function name to get the total count and language code or null
	 * for checked code.
	 */",
 "/**
	 * Get all check descriptions.
	 * @return An array of all check names mapped to their descriptions.
	 */",
 "/**
	 * Get help.
	 * @return The help string.
	 */",
 "/**
	 * Execute the script.
	 */",
 "/**
	 * Execute the checks.
	 */",
 "/**
	 * Get the check blacklist.
	 * @return The list of checks which should not be executed.
	 */",
 "/**
	 * Check a language.
	 * @param $code string The language code.
	 * @return array The results.
	 */",
 "/**
	 * Format a message key.
	 * @param $key The message key.
	 * @param $code The language code.
	 * @return The formatted message key.
	 */",
 "/**
	 * Output the checks results as plain text.
	 * @return The checks results as plain text.
	 */",
 "/**
	 * Output the checks results as wiki text.
	 * @return The checks results as wiki text.
	 */",
 "/**
	 * Check if there are any results for the checks, in any language.
	 * @return True if there are any results, false if not.
	 */",
 "/**
 * @ingroup MaintenanceLanguage
 */",
 "/**
	 * Constructor.
	 * @param $options Options for script.
	 * @param $extension The extension name (or names).
	 */",
 "/**
	 * Get the default checks.
	 * @return A list of the default checks.
	 */",
 "/**
	 * Get the checks which check other things than messages.
	 * @return A list of the non-message checks.
	 */",
 "/**
	 * Get the checks that can easily be treated by non-speakers of the language.
	 * @return A list of the easy checks.
	 */",
 "/**
	 * Get help.
	 * @return The help string.
	 */",
 "/**
	 * Execute the script.
	 */",
 "/**
	 * Check a language and show the results.
	 * @param $code string The language code.
	 */",
 "/**
 * @ingroup MaintenanceLanguage
 */",
 "/**
	 * Constructor
	 */",
 "/**
	 * Main execution point
	 *
	 * @param $code Confirmation code passed to the page
	 */",
 "/**
	 * Show a nice form for the user to request a confirmation mail
	 */",
 "/**
	 * Attempt to confirm the user\'s email address and show success or failure
	 * as needed; if successful, take the user to log in
	 *
	 * @param $code Confirmation code
	 */",
 "/**
 * Special page allows users to request email confirmation message, and handles
 * processing of the confirmation code when the link in the email is followed
 *
 * @ingroup SpecialPage
 * @author Brion Vibber
 * @author Rob Church <robchur@gmail.com>
 */",
 "/**
	 * Attempt to invalidate the user\'s email address and show success or failure
	 * as needed; if successful, link to main page
	 *
	 * @param $code Confirmation code
	 */",
 "/**
 * Special page allows users to cancel an email confirmation using the e-mail
 * confirmation code
 *
 * @ingroup SpecialPage
 */",
 "/**
 * A query module to list all external URLs found on a given set of pages.
 *
 * @ingroup API
 */",
 "/** @dataProvider providePlural */",
 "/** Tests for MediaWiki languages/LanguageBh.php */",
 "/**
		 * @var $conn DatabaseBase
		 */",
 "/**
	 * Open a PG connection with given parameters
	 * @param $user User name
	 * @param $password Password
	 * @param $dbName Database name
	 * @return Status
	 */",
 "/**
			 * @var $conn DatabaseBase
			 */",
 "/**
	 * Get a special type of connection
	 * @param $type string See openPgConnection() for details.
	 * @return Status
	 */",
 "/**
					 * @var $conn DatabaseBase
					 */",
 "/**
	 * Get a connection of a specific PostgreSQL-specific type. Connections
	 * of a given type are cached.
	 *
	 * PostgreSQL lacks cross-database operations, so after the new database is
	 * created, you need to make a separate connection to connect to that
	 * database and add tables to it.
	 *
	 * New tables are owned by the user that creates them, and MediaWiki\'s
	 * PostgreSQL support has always assumed that the table owner will be
	 * $wgDBuser. So before we create new tables, we either need to either
	 * connect as the other user or to execute a SET ROLE command. Using a
	 * separate connection for this allows us to avoid accidental cross-module
	 * dependencies.
	 *
	 * @param $type The type of connection to get:
	 *    - create-db:     A connection for creating DBs, suitable for pre-
	 *                     installation.
	 *    - create-schema: A connection to the new DB, for creating schemas and
	 *                     other similar objects in the new DB.
	 *    - create-tables: A connection with a role suitable for creating tables.
	 *
	 * @return A Status object. On success, a connection object will be in the
	 *   value member.
	 */",
 "/**
		 * @var $conn DatabaseBase
		 */",
 "/**
	 * Returns true if the install user is able to create objects owned
	 * by the web user, false otherwise.
	 */",
 "/**
	 * Recursive helper for canCreateObjectsForWebUser().
	 * @param $conn Database object
	 * @param $targetMember Role ID of the member to look for
	 * @param $group Role ID of the group to look for
	 * @param $maxDepth Maximum recursive search depth
	 */",
 "/**
		 * @var $conn DatabaseBase
		 */",
 "/**
		 * @var $conn DatabaseBase
		 */",
 "/**
 * Class for setting up the MediaWiki database using Postgres.
 *
 * @ingroup Deployment
 * @since 1.17
 */",
 "/** Galician (Galego)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Alma
 * @author Elisardojm
 * @author Gallaecio
 * @author Gustronico
 * @author Kaganer
 * @author Lameiro
 * @author Prevert
 * @author Toli??o
 * @author Xos??
 * @author ???????? ????????????????
 */",
 "/**
	 * From parameters, construct a \'scale\' array
	 * @param $params Array: Parameters passed to api.
	 * @return Array or Null: key-val array of \'width\' and \'height\', or null
	 */",
 "/** Validate and merge scale parameters with handler thumb parameters, give error if invalid.
	 *
	 * We do this later than getScale, since we need the image
	 * to know which handler, since handlers can make their own parameters.
	 * @param File $image Image that params are for.
	 * @param Array $thumbParams thumbnail parameters from getScale
	 * @param String $otherParams of otherParams (iiurlparam).
	 * @return Array of parameters for transform.
	 */",
 "/**
	 * Get result information for an image revision
	 *
	 * @param $file File object
	 * @param $prop Array of properties to get (in the keys)
	 * @param $result ApiResult object
	 * @param $thumbParams Array containing \'width\' and \'height\' items, or null
	 * @param $version string Version of image metadata (for things like jpeg which have different versions).
	 * @return Array: result array
	 */",
 "/**
	 *
	 * @param $metadata Array
	 * @param $result ApiResult
	 * @return Array
	 */",
 "/**
	 * @param $img File
	 * @return string
	 */",
 "/**
	 * Returns all possible parameters to iiprop
	 *
	 * @param array $filter List of properties to filter out
	 *
	 * @return Array
	 */",
 "/**
	 * Returns array key value pairs of properties and their descriptions
	 *
	 * @return array
	 */",
 "/**
	 * Returns the descriptions for the properties provided by getPropertyNames()
	 *
	 * @param array $filter List of properties to filter out
	 *
	 * @return array
	 */",
 "/**
	 * Return the API documentation for the parameters.
	 * @return Array parameter documentation.
	 */",
 "/**
 * A query action to get image information and upload history.
 *
 * @ingroup API
 */",
 "/**
	 * Returns the JSON representation of a value.
	 *
	 * @param $value Mixed: the value being encoded. Can be any type except a resource.
	 * @param $isHtml Boolean
	 *
	 * @todo FIXME: \"$isHtml\" parameter\'s purpose is not documented. It appears to
	 *        map to a parameter labeled \"pretty-print output with indents and
	 *        newlines\" in Services_JSON::encode(), which has no string relation
	 *        to HTML output.
	 *
	 * @return string
	 */",
 "/**
	 * Decodes a JSON string.
	 *
	 * @param $value String: the json string being decoded.
	 * @param $assoc Boolean: when true, returned objects will be converted into associative arrays.
	 *
	 * @return Mixed: the value encoded in json in appropriate PHP type.
	 * Values true, false and null (case-insensitive) are returned as true, false
	 * and &null; respectively. &null; is returned if the json cannot be
	 * decoded or if the encoded data is deeper than the recursion limit.
	 */",
 "/**
 * JSON formatter wrapper class
 */",
 "/**
	 * @return FileBackendGroup
	 */",
 "/**
	 * Destroy the singleton instance
	 * 
	 * @return void
	 */",
 "/**
	 * Register file backends from the global variables
	 * 
	 * @return void
	 */",
 "/**
	 * Register an array of file backend configurations
	 *
	 * @param $configs Array
	 * @return void
	 * @throws MWException
	 */",
 "/**
	 * Get the backend object with a given name
	 *
	 * @param $name string
	 * @return FileBackend
	 * @throws MWException
	 */",
 "/**
	 * Get an appropriate backend object from a storage path
	 *
	 * @param $storagePath string
	 * @return FileBackend|null Backend or null on failure
	 */",
 "/**
 * Class to handle file backend registration
 *
 * @ingroup FileBackend
 * @since 1.19
 */",
 "/** @dataProvider providePlural */",
 "/** Tests for MediaWiki languages/classes/LanguageDsb.php */",
 "/**
	 * @param $count int
	 * @param $forms array
	 *
	 * @return string
	 */",
 "/** Belarusian normative (???????????????????? ????????)
  *
  * This is still the version from Be-x-old, only duplicated for consistency of
  * plural and grammar functions. If there are errors please send a patch.
  *
  * @ingroup Language
  *
  * @author ??var Arnfj??r?? Bjarmason <avarab@gmail.com>
  * @see http://be.wikipedia.org/wiki/Talk:LanguageBe.php
  * @license http://www.gnu.org/copyleft/gpl.html GNU General Public License
  * @license http://www.gnu.org/copyleft/fdl.html GNU Free Documentation License
  */",
 "/** Slovak (Sloven??ina)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Chiak
 * @author Danny B.
 * @author Helix84
 * @author Kaganer
 * @author Liso
 * @author Maros
 * @author Michawiki
 * @author Mormegil
 * @author Palica
 * @author Pitr2311
 * @author Ragimiri
 * @author Reedy
 * @author Rudko
 * @author Sp5uhe
 * @author Tcho??
 * @author Urhixidur
 * @author Valasek
 * @author Wizzard
 * @author ???????? ????????????????
 */",
 "/**
 * A special page looking for articles with no article linking to them,
 * thus being lonely.
 *
 * @ingroup SpecialPage
 */",
 "/** Georgian (?????????????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Alsandro
 * @author Andrijko Z.
 * @author BRUTE
 * @author Dato deutschland
 * @author David1010
 * @author Dawid Deutschland
 * @author ITshnik
 * @author Kaganer
 * @author Malafaya
 * @author Nodar Kherkheulidze
 * @author Reedy
 * @author Sopho
 * @author Temuri rajavi
 * @author ka.wikipedia.org sysops
 * @author ???????? ????????????????
 * @author ??????????????????????????????
 */",
 "/**
 * ?????? ?????????????? ?????????????????????? ???????????????????? ??????????
 *
 * ?????????? ????????????????????????????: ?????? ???????????? ?????????????? ??????????????????!
 *
 * ?????? ???????????????? ???????????????????? ?????????????????????????? ?????????????????? ?????????????? ?????????????????????????? ??????????????????????.
 * ???????????? ???? ?????????????????????????????????? ?????????? ????????????.
 * ???????????? ?????? ????????????????????????, [[????????????:???????????? ????????????????]] ?????????? ?????????? ???????????? ????
 * ?????????? ?????????????????????????? ??????????????????:* ???????????? ?????? ???????????????? ??????????????.
 */",
 "/**
	 * Build the list of files we\'ll check for syntax errors
	 */",
 "/**
	*Returnstrueif$fileisofatypewecancheck
	*@param$filestring
	*@returnbool
	*/",
 "/**
	*Addgivenpathtofilelist,searchingitinincludepathifneeded
	*@param$pathstring
	*@returnbool
	*/",
 "/**
	*Addgivenfiletofilelist,or,ifit\'sadirectory,additscontent
	*@param$pathstring
	*@returnbool
	*/",
 "/**
	*Addallsuitablefilesingivendirectoryoritssubdirectoriestothefilelist
	*
	*@param$dirString:directorytoprocess
	*/",
 "/**
	*CheckafileforsyntaxerrorsusingParsekit.Shamelesslystolen
	*fromtools/lint.phpbyTimStarling
	*@param$fileStringPathtoafiletocheckforsyntaxerrors
	*@returnboolean
	*/",
 "/**
	*Checkafileforsyntaxerrorsusingphp-l
	*@param$fileStringPathtoafiletocheckforsyntaxerrors
	*@returnboolean
	*/",
 "/**
	*Checkafilefornon-fatalcodingerrors,suchasbyte-ordermarksinthebeginning
	*orpointless?>closingtagsattheend.
	*
	*@param$fileStringStringPathtoafiletocheckforerrors
	*@returnboolean
	*/",
 "/**
	 * Output a HTTP header, wrapper for PHP\'s
	 * header()
	 * @param $string String: header to output
	 * @param $replace Bool: replace current similar header
	 * @param $http_response_code null|int Forces the HTTP response code to the specified value.
	 */",
 "/**
	 * Set the browser cookie
	 * @param $name String: name of cookie
	 * @param $value String: value to give cookie
	 * @param $expire Int: number of seconds til cookie expires
	 * @param $prefix String: Prefix to use, if not $wgCookiePrefix (use \'\' for no prefix)
	 * @param @domain String: Cookie domain to use, if not $wgCookieDomain
	 */",
 "/**
 * Allow programs to request this object from WebRequest::response()
 * and handle all outputting (or lack of outputting) via it.
 * @ingroup HTTP
 */",
 "/**
	 * Stores a HTTP header
	 * @param $string String: header to output
	 * @param $replace Bool: replace current similar header
	 * @param $http_response_code null|int Forces the HTTP response code to the specified value.
	 */",
 "/**
	 * @param $key string
	 * @return string
	 */",
 "/**
	 * Get the HTTP response code, null if not set
	 *
	 * @return Int or null
	 */",
 "/**
	 * @todo document. It just ignore optional parameters.
	 *
	 * @param $name String: name of cookie
	 * @param $value String: value to give cookie
	 * @param $expire Int: number of seconds til cookie expires (Default: 0)
	 * @param $prefix TODO DOCUMENT (Default: null)
	 * @param $domain TODO DOCUMENT (Default: null)
	 *
	 */",
 "/**
	 * @param $name string
	 * @return string
	 */",
 "/**
 * @ingroup HTTP
 */",
 "/**
 * Return UTF-8 sequence for a given Unicode code point.
 * May die if fed out of range data.
 *
 * @param $codepoint Integer:
 * @return String
 * @public
 */",
 "/**
 * Take a series of space-separated hexadecimal numbers representing
 * Unicode code points and return a UTF-8 string composed of those
 * characters. Used by UTF-8 data generation and testing routines.
 *
 * @param $sequence String
 * @return String
 * @private
 */",
 "/**
 * Take a UTF-8 string and return a space-separated series of hex
 * numbers representing Unicode code points. For debugging.
 *
 * @param $str String: UTF-8 string.
 * @return string
 * @private
 */",
 "/**
 * Determine the Unicode codepoint of a single-character UTF-8 sequence.
 * Does not check for invalid input data.
 *
 * @param $char String
 * @return Integer
 * @public
 */",
 "/**
*EscapeastringforinclusioninaPHPsingle-quotedstringliteral.
*
*@param$stringString:stringtobeescaped.
*@returnString:escapedstring.
*@public
*/",
 "/**
 * Implements Special:Unlockdb
 *
 * @ingroup SpecialPage
 */",
 "/**
	 * Get the WebRequest object
	 *
	 * @return WebRequest
	 */",
 "/**
	 * Get the Title object
	 *
	 * @return Title
	 */",
 "/**
	 * Check whether a WikiPage object can be get with getWikiPage().
	 * Callers should expect that an exception is thrown from getWikiPage()
	 * if this method returns false.
	 *
	 * @since 1.19
	 * @return bool
	 */",
 "/**
	 * Get the WikiPage object.
	 * May throw an exception if there\'s no Title object set or the Title object
	 * belongs to a special namespace that doesn\'t have WikiPage, so use first
	 * canUseWikiPage() to check whether this method can be called safely.
	 *
	 * @since 1.19
	 * @return WikiPage
	 */",
 "/**
	 * Get the OutputPage object
	 *
	 * @return OutputPage object
	 */",
 "/**
	 * Get the User object
	 *
	 * @return User
	 */",
 "/**
	 * Get the Language object
	 *
	 * @deprecated 1.19 Use getLanguage instead
	 * @return Language
	 */",
 "/**
	 * Get the Language object
	 *
	 * @return Language
	 * @since 1.19
	 */",
 "/**
	 * Get the Skin object
	 *
	 * @return Skin
	 */",
 "/**
	 * Get a Message object with context set
	 *
	 * @return Message object
	 */",
 "/**
 * Interface for objects which can provide a context on request.
 */",
 "/**
	 * Rebuild pass 1
	 * DOCUMENT ME!
	 */",
 "/**
	 * Rebuild pass 2
	 * DOCUMENT ME!
	 */",
 "/**
	 * Rebuild pass 3
	 * DOCUMENT ME!
	 */",
 "/**
	 * Rebuild pass 4
	 * DOCUMENT ME!
	 */",
 "/**
	 * Purge cached feeds in $messageMemc
	 */",
 "/**
	 * Construct an ResourceFileCache from a context
	 * @param $context ResourceLoaderContext
	 * @return ResourceFileCache
	 */",
 "/**
	 * Check if an RL request can be cached.
	 * Caller is responsible for checking if any modules are private.
	 * @param $context ResourceLoaderContext
	 * @return bool
	 */",
 "/**
	 * Get the base file cache directory
	 * @return string
	 */",
 "/**
	 * Item has many recent cache misses
	 * @return bool
	 */",
 "/**
 * Contain the ResourceFileCache class
 * @file
 * @ingroup Cache
 */",
 "/**
 * Internationalisation file for the ConfirmEdit extension.
 *
 * @file
 * @ingroup Extensions
 */",
 "/** Message documentation (Message documentation)
 * @author Aotake
 * @author Hamilton Abreu
 * @author MF-Warburg
 * @author Meithal
 * @author Meno25
 * @author Purodha
 * @author Siebrand
 * @author The Evil IP address
 * @author Toli??o
 * @author Umherirrender
 */",
 "/** Afrikaans (Afrikaans)
 * @author BrokenArrow
 * @author Naudefj
 * @author ??????????????? ?????????????????????
 */",
 "/** Gheg Albanian (Geg??)
 * @author Mdupont
 */",
 "/** Amharic (????????????)
 * @author Codex Sinaiticus
 */",
 "/** Aragonese (Aragon??s)
 * @author Juanpabl
 */",
 "/** Arabic (??????????????)
 * @author Aiman titi
 * @author Alnokta
 * @author Loya
 * @author Meno25
 * @author Mido
 * @author OsamaK
 * @author Samer
 */",
 "/** Egyptian Spoken Arabic (????????)
 * @author Ghaly
 * @author Meno25
 * @author Ramsis II
 */",
 "/** Assamese (??????????????????)
 * @author Bishnu Saikia
 * @author Chaipau
 * @author Gitartha.bordoloi
 * @author Rajuonline
 */",
 "/** Asturian (Asturianu)
 * @author Esbardu
 * @author Xuacu
 */",
 "/** Azerbaijani (Az??rbaycanca)
 * @author Vugar 1981
 */",
 "/** Bashkir (??????????????????)
 * @author Assele
 */",
 "/** Southern Balochi (?????????? ????????????)
 * @author Mostafadaneshvar
 */",
 "/** Bikol Central (Bikol Central)
 * @author Filipinayzd
 */",
 "/** Belarusian (????????????????????)
 * @author Yury Tarasievich
 * @author ??????????????
 */",
 "/** Belarusian (Tara??kievica orthography) (??????????????????????? (??????????????????????)???)
 * @author EugeneZelenko
 * @author Jim-by
 * @author Red Winged Duck
 * @author Wizardist
 */",
 "/** Bulgarian (??????????????????)
 * @author DCLXVI
 * @author Spiritia
 */",
 "/** Bengali (???????????????)
 * @author Bellayet
 * @author Nasir8891
 * @author Prometheus.pyrphoros
 * @author Usarker
 * @author Zaheen
 */",
 "/** Breton (brezhoneg)
 * @author BrokenArrow
 * @author Fulup
 * @author VIGNERON
 * @author Y-M D
 */",
 "/** Bosnian (Bosanski)
 * @author BrokenArrow
 * @author CERminator
 */",
 "/** Catalan (Catal??)
 * @author El libre
 * @author Paucabot
 * @author SMP
 * @author Ssola
 * @author Toniher
 */",
 "/** Min Dong Chinese (M??ng-d????ng-ng?????) */",
 "/** Czech (??esky)
 * @author Danny B.
 * @author Li-sung
 * @author Mat??j Grabovsk??
 * @author Mormegil
 */",
 "/** Welsh (Cymraeg)
 * @author Lloffiwr
 */",
 "/** Danish (Dansk)
 * @author Aputtu
 * @author Byrial
 * @author Peter Alberti
 */",
 "/** German (Deutsch)
 * @author Imre
 * @author Kghbln
 * @author Metalhead64
 * @author MichaelFrey
 * @author Raimond Spekking
 * @author The Evil IP address
 * @author Umherirrender
 */",
 "/** German (formal address) (???Deutsch (Sie-Form)???)
 * @author Imre
 * @author Raimond Spekking
 * @author The Evil IP address
 */",
 "/** Zazaki (Zazaki)
 * @author Aspar
 * @author Erdemaslancan
 * @author Xoser
 */",
 "/** Lower Sorbian (Dolnoserbski)
 * @author Michawiki
 */",
 "/** Ewe (E??egbe)
 * @author Natsubee
 */",
 "/** Greek (????????????????)
 * @author Badseed
 * @author Consta
 * @author Dada
 * @author Geraki
 * @author Glavkos
 * @author Kiriakos
 * @author Omnipaedista
 * @author ZaDiak
 * @author ??????????????????
 */",
 "/** Canadian English (Canadian English)
 * @author Techman224
 */",
 "/** British English (British English)
 * @author Lcawte
 */",
 "/** Esperanto (Esperanto)
 * @author Castelobranco
 * @author Petrus Adamus
 * @author Yekrats
 */",
 "/** Spanish (espa??ol)
 * @author Armando-Martin
 * @author Crazymadlover
 * @author Drini
 * @author Icvav
 * @author Jatrobat
 * @author Lin linao
 * @author Locos epraix
 * @author Muro de Aguas
 * @author Pertile
 * @author Sanbec
 */",
 "/** Estonian (Eesti)
 * @author BrokenArrow
 * @author Jaan513
 * @author Pikne
 */",
 "/** Basque (Euskara)
 * @author An13sa
 * @author BrokenArrow
 * @author Kobazulo
 * @author Pi
 */",
 "/** Persian (??????????)
 * @author Ebraminio
 * @author Huji
 * @author Mjbmr
 * @author Wayiran
 */",
 "/** Finnish (Suomi)
 * @author Agony
 * @author Centerlink
 * @author Crt
 * @author Nike
 * @author Varusmies
 */",
 "/** Faroese (F??royskt)
 * @author EileenSanda
 * @author Spacebirdy
 */",
 "/** French (fran??ais)
 * @author Crochet.david
 * @author Grondin
 * @author IAlex
 * @author Meithal
 * @author PieRRoMaN
 * @author Seb35
 * @author Sherbrooke
 * @author Urhixidur
 * @author Verdy p
 * @author Wyz
 * @author Zetud
 */",
 "/** Franco-Proven??al (Arpetan)
 * @author ChrisPtDe
 */",
 "/** Friulian (Furlan)
 * @author Klenje
 */",
 "/** Western Frisian (Frysk)
 * @author Snakesteuben
 */",
 "/** Irish (Gaeilge)
 * @author Alison
 */",
 "/** Galician (Galego)
 * @author Alma
 * @author Toli??o
 * @author Xos??
 */",
 "/** Ancient Greek (????????????? ??????????????????)
 * @author Omnipaedista
 */",
 "/** Swiss German (Alemannisch)
 * @author Als-Chl??mens
 * @author Als-Holder
 * @author Melancholie
 */",
 "/** Gujarati (?????????????????????)
 * @author Ashok modhvadia
 * @author Dsvyas
 * @author KartikMistry
 * @author Sushant savla
 */",
 "/** Hebrew (??????????)
 * @author Amire80
 * @author Rotem Liss
 * @author Rotemliss
 * @author YaronSh
 */",
 "/** Hindi (??????????????????)
 * @author Ansumang
 * @author Kaustubh
 * @author Shyam
 * @author ????????????
 */",
 "/** Croatian (Hrvatski)
 * @author Dalibor Bosits
 * @author Dnik
 * @author Ex13
 * @author Herr Mlinka
 * @author SpeedyGonsales
 */",
 "/** Upper Sorbian (Hornjoserbsce)
 * @author Michawiki
 */",
 "/** Haitian (Krey??l ayisyen)
 * @author Boukman
 * @author Masterches
 */",
 "/** Hungarian (Magyar)
 * @author Dani
 * @author Glanthor Reviol
 */",
 "/** Interlingua (interlingua)
 * @author McDutchie
 */",
 "/** Indonesian (Bahasa Indonesia)
 * @author Borgx
 * @author IvanLanin
 * @author Iwan Novirion
 * @author Rex
 */",
 "/** Iloko (Ilokano)
 * @author Lam-ang
 */",
 "/** Icelandic (??slenska)
 * @author S.??rvarr.S
 * @author Sn??var
 */",
 "/** Italian (italiano)
 * @author Beta16
 * @author BrokenArrow
 * @author Darth Kule
 */",
 "/** Japanese (?????????)
 * @author Aotake
 * @author Fryed-peach
 * @author Hosiryuhosi
 * @author JtFuruhata
 * @author Shirayuki
 * @author Whym
 */",
 "/** Jutish (Jysk)
 * @author Husl??ke
 * @author ??ls??n
 */",
 "/** Javanese (Basa Jawa)
 * @author Meursault2004
 * @author Pras
 */",
 "/** Georgian (?????????????????????)
 * @author David1010
 * @author ITshnik
 */",
 "/** Kara-Kalpak (Qaraqalpaqsha)
 * @author Atabek
 */",
 "/** Kazakh (Arabic script) (????????????????? (??????????)???) */",
 "/** Kazakh (Cyrillic script) (????????????????? (??????????)???) */",
 "/** Kazakh (Latin script) (???Qazaq??a (lat??n)???) */",
 "/** Khmer (???????????????????????????)
 * @author Lovekhmer
 * @author Thearith
 * @author ???????????????????????????
 */",
 "/** Korean (?????????)
 * @author IRTC1015
 * @author Klutzy
 * @author Kwj2772
 * @author ToePeu
 * @author ??????
 */",
 "/** Colognian (Ripoarisch)
 * @author Purodha
 */",
 "/** Latin (Latina)
 * @author UV
 */",
 "/** Luxembourgish (L??tzebuergesch)
 * @author Les Meloures
 * @author Robby
 */",
 "/** Limburgish (Limburgs)
 * @author Matthias
 * @author Ooswesthoesbes
 */",
 "/** Lao (?????????) */",
 "/** Lithuanian (Lietuvi??)
 * @author Eitvys200
 * @author Garas
 * @author Homo
 * @author Matasg
 */",
 "/** Latvian (Latvie??u)
 * @author BrokenArrow
 * @author Marozols
 * @author Yyy
 */",
 "/** Malagasy (Malagasy)
 * @author Jagwar
 */",
 "/** Macedonian (????????????????????)
 * @author Bjankuloski06
 * @author Brest
 */",
 "/** Malayalam (??????????????????)
 * @author Praveenp
 * @author Shijualex
 */",
 "/** Mongolian (????????????)
 * @author Chinneeb
 */",
 "/** Marathi (???????????????)
 * @author Kaustubh
 * @author Mahitgar
 * @author V.narsikar
 */",
 "/** Malay (Bahasa Melayu)
 * @author Anakmalaysia
 * @author Aurora
 * @author Aviator
 */",
 "/** Nahuatl (N??huatl)
 * @author Fluence
 */",
 "/** Min Nan Chinese (B??n-l??m-g??) */",
 "/** Norwegian (bokm??l)??? (???Norsk (bokm??l)???)
 * @author Audun
 * @author Jon Harald S??by
 * @author Laaknor
 * @author Nghtwlkr
 */",
 "/** Low German (Plattd????tsch)
 * @author Slomox
 */",
 "/** Nedersaksisch (Nedersaksisch)
 * @author Servien
 */",
 "/** Dutch (Nederlands)
 * @author SPQRobin
 * @author Siebrand
 */",
 "/** Norwegian Nynorsk (???Norsk (nynorsk)???)
 * @author Eirik
 * @author Frokor
 * @author Harald Khan
 * @author Nghtwlkr
 * @author Njardarlogar
 */",
 "/** Occitan (Occitan)
 * @author Cedric31
 */",
 "/** Oriya (????????????)
 * @author Psubhashish
 */",
 "/** Pampanga (Kapampangan) */",
 "/** Deitsch (Deitsch)
 * @author Xqt
 */",
 "/** Polish (polski)
 * @author BeginaFelicysym
 * @author Derbeth
 * @author Leinad
 * @author Sp5uhe
 */",
 "/** Piedmontese (Piemont??is)
 * @author Borich??t
 * @author B??rto \'d S??ra
 * @author Dragon??t
 */",
 "/** Western Punjabi (????????????)
 * @author Khalid Mahmood
 */",
 "/** Pashto (????????)
 * @author Ahmed-Najib-Biabani-Ibrahimkhel
 */",
 "/** Portuguese (Portugu??s)
 * @author 555
 * @author Hamilton Abreu
 * @author Malafaya
 */",
 "/** Brazilian Portuguese (Portugu??s do Brasil)
 * @author Eduardo.mps
 * @author Giro720
 * @author Jesielt
 */",
 "/** Quechua (Runa Simi)
 * @author AlimanRuna
 */",
 "/** Romanian (Rom??n??)
 * @author BrokenArrow
 * @author Firilacroco
 * @author KlaudiuMihaila
 * @author Mihai
 * @author Minisarm
 */",
 "/** Tarand??ne (Tarand??ne)
 * @author Joetaras
 * @author Reder
 */",
 "/** Russian (??????????????)
 * @author Ahonc
 * @author Aleksandrit
 * @author Kalan
 * @author ?????????????????? ??????????????
 */",
 "/** Rusyn (????????????????????)
 * @author Gazeb
 */",
 "/** Sakha (???????? ????????)
 * @author HalanTul
 */",
 "/** Sicilian (Sicilianu)
 * @author Melos
 * @author Santu
 */",
 "/** Scots (Scots)
 * @author OchAyeTheNoo
 */",
 "/** Sinhala (???????????????)
 * @author Budhajeewa
 * @author Singhalawap
 * @author ?????????????????????????????????
 * @author ??????????????? ?????????????????????
 */",
 "/** Slovak (Sloven??ina)
 * @author Helix84
 */",
 "/** Slovenian (Sloven????ina)
 * @author BrokenArrow
 * @author Dbc334
 */",
 "/** Albanian (Shqip)
 * @author BrokenArrow
 * @author Dori
 * @author Mikullovci11
 * @author Olsi
 */",
 "/** Serbian (Cyrillic script) (??????????????? (????????????????)???)
 * @author Millosh
 * @author Rancher
 */",
 "/** Serbian (Latin script) (???Srpski (latinica)???)
 * @author Michaello
 */",
 "/** Seeltersk (Seeltersk)
 * @author Pyt
 */",
 "/** Sundanese (Basa Sunda)
 * @author Irwangatot
 * @author Kandar
 */",
 "/** Swedish (Svenska)
 * @author Ainali
 * @author Boivie
 * @author Lejonel
 * @author M.M.S.
 * @author MagnusA
 * @author Per
 */",
 "/** Tamil (???????????????)
 * @author Shanmugamp7
 * @author ??????????????????
 */",
 "/** Telugu (??????????????????)
 * @author Chaduvari
 * @author Kiranmayee
 * @author Mpradeep
 * @author Veeven
 */",
 "/** Tajik (Cyrillic script) (????????????)
 * @author Ibrahim
 */",
 "/** Tajik (Latin script) (Tojik??)
 * @author Liangent
 */",
 "/** Thai (?????????)
 * @author Passawuth
 */",
 "/** Turkmen (T??rkmen??e)
 * @author Hanberke
 */",
 "/** Tagalog (Tagalog)
 * @author AnakngAraw
 */",
 "/** Turkish (T??rk??e)
 * @author Joseph
 * @author Runningfridgesrule
 */",
 "/** Ukrainian (????????????????????)
 * @author Ahonc
 * @author Alex Khimich
 * @author NickK
 * @author Riwnodennyk
 * @author ????????
 */",
 "/** V??neto (V??neto)
 * @author Candalua
 */",
 "/** Vietnamese (Ti???ng Vi???t)
 * @author Minh Nguyen
 * @author Vinhtantran
 */",
 "/** Volap??k (Volap??k)
 * @author Malafaya
 * @author Smeira
 */",
 "/** Walloon (walon)
 * @author BrokenArrow
 * @author Srtxg
 */",
 "/** Yiddish (????????????)
 * @author ????????????????
 */",
 "/** Yoruba (Yor??b??)
 * @author Demmy
 */",
 "/** Cantonese (??????) */",
 "/** Simplified Chinese (?????????(??????)???)
 * @author Bencmq
 * @author Hzy980512
 * @author Liangent
 * @author PhiLiP
 */",
 "/** Traditional Chinese (?????????(??????)???)
 * @author Horacewai2
 * @author Hydra
 * @author Liangent
 * @author Mark85296341
 * @author Waihorace
 */",
 "/**
	 * @param $conf array
	 */",
 "/**
	 * @param $wiki bool|string
	 * @return string
	 */",
 "/**
	 * @param $wiki bool|string
	 * @return LoadBalancer
	 */",
 "/**
	 * @param $wiki bool|string
	 * @return LoadBalancer
	 */",
 "/**
	 * @param $cluster
	 * @param $wiki
	 * @return LoadBalancer
	 */",
 "/**
	 * @param $cluster
	 * @param $wiki
	 * @return LoadBalancer
	 */",
 "/**
	 * Make a new load balancer object based on template and load array
	 *
	 * @param $template
	 * @param $loads array
	 * @param $groupLoads
	 * @return LoadBalancer
	 */",
 "/**
	 * Make a server array as expected by LoadBalancer::__construct, using a template and load array
	 *
	 * @param $template
	 * @param $loads array
	 * @param $groupLoads
	 * @return array
	 */",
 "/**
	 * Take a group load array indexed by group then server, and reindex it by server then group
	 * @param $groupLoads
	 * @return array
	 */",
 "/**
	 * Get the database name and prefix based on the wiki ID
	 * @param $wiki bool
	 * @return array
	 */",
 "/**
	 * Execute a function for each tracked load balancer
	 * The callback is called with the load balancer as the first parameter,
	 * and $params passed as the subsequent parameters.
	 * @param $callback
	 * @param $params array
	 */",
 "/**
 * A multi-wiki, multi-master factory for Wikimedia and similar installations.
 * Ignores the old configuration globals
 *
 * Configuration:
 *     sectionsByDB                A map of database names to section names
 *
 *     sectionLoads                A 2-d map. For each section, gives a map of server names to load ratios.
 *                                 For example: array( \'section1\' => array( \'db1\' => 100, \'db2\' => 100 ) )
 *
 *     serverTemplate              A server info associative array as documented for $wgDBservers. The host,
 *                                 hostName and load entries will be overridden.
 *
 *     groupLoadsBySection         A 3-d map giving server load ratios for each section and group. For example:
 *                                 array( \'section1\' => array( \'group1\' => array( \'db1\' => 100, \'db2\' => 100 ) ) )
 *
 *     groupLoadsByDB              A 3-d map giving server load ratios by DB name.
 *
 *     hostsByName                 A map of hostname to IP address.
 *
 *     externalLoads               A map of external storage cluster name to server load map
 *
 *     externalTemplateOverrides   A set of server info keys overriding serverTemplate for external storage
 *
 *     templateOverridesByServer   A 2-d map overriding serverTemplate and externalTemplateOverrides on a
 *                                 server-by-server basis. Applies to both core and external storage.
 *
 *     templateOverridesByCluster  A 2-d map overriding the server info by external storage cluster
 *
 *     masterTemplateOverrides     An override array for all master servers.
 *
 *     readOnlyBySection           A map of section name to read-only message. Missing or false for read/write.
 *
 * @ingroup Database
 */",
 "/**
	 * @throws Exception
	 * @param $filename string
	 * @return array
	 */",
 "/**
	 * @param $fh
	 * @param $bpp
	 * @return void
	 */",
 "/**
	 * @param $data
	 * @return int
	 */",
 "/**
	 * @param $fh
	 * @return
	 */",
 "/**
	 * Read a block. In the GIF format, a block is made up of
	 * several sub-blocks. Each sub block starts with one byte
	 * saying how long the sub-block is, followed by the sub-block.
	 * The entire block is terminated by a sub-block of length
	 * 0.
	 * @param $fh FileHandle
	 * @param $includeLengths Boolean Include the length bytes of the
	 *  sub-blocks in the returned value. Normally this is false,
	 *  except XMP is weird and does a hack where you need to keep
	 *  these length bytes.
	 * @return The data.
	 */",
 "/**
 * GIF frame counter.
 *
 * @ingroup Media
 */",
 "/**
 * Get a cache key for the given session id.
 *
 * @param $id String: session id
 * @return String: cache key
 */",
 "/**
 * Callback when opening a session.
 * NOP: $wgMemc should be set up already.
 *
 * @param $save_path String: path used to store session files, unused
 * @param $session_name String: session name
 * @return Boolean: success
 */",
 "/**
 * Callback when closing a session.
 * NOP.
 *
 * @return Boolean: success
 */",
 "/**
 * Callback when reading session data.
 *
 * @param $id String: session id
 * @return Mixed: session data
 */",
 "/**
 * Callback when writing session data.
 *
 * @param $id String: session id
 * @param $data Mixed: session data
 * @return Boolean: success
 */",
 "/**
 * Callback to destroy a session when calling session_destroy().
 *
 * @param $id String: session id
 * @return Boolean: success
 */",
 "/**
 * Callback to execute garbage collection.
 * NOP: Memcached performs garbage collection.
 *
 * @param $maxlifetime Integer: maximum session life time
 * @return Boolean: success
 */",
 "/** Hawaiian (Hawai`i)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Kalani
 * @author Kolonahe
 * @author Node ue
 * @author Singularity
 */",
 "/**
	 * @group Broken
	 */",
 "/**
	 * @depends testWatchEdit
	 * @group Broken
	 */",
 "/**
	 * @group Broken
	 */",
 "/**
	 * @group Broken
	 */",
 "/**
	 * @depends testGetRollbackToken
	 * @group Broken
	 */",
 "/**
	 * @group Broken
	 */",
 "/**
 * @group Database
 * @todo This test suite is severly broken and need a full review 
 */",
 "/** Min Nan Chinese (B??n-l??m-g??)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Ianbu
 */",
 "/**
	 * Default constructor. Children should call this *first* if implementing
	 * their own constructors
	 */",
 "/**
	 * Should we execute the maintenance script, or just allow it to be included
	 * as a standalone class? It checks that the call stack only includes this
	 * function and \"requires\" (meaning was called from the file scope)
	 *
	 * @return Boolean
	 */",
 "/**
	 * Do the actual work. All child classes will need to implement this
	 */",
 "/**
	 * Add a parameter to the script. Will be displayed on --help
	 * with the associated description
	 *
	 * @param $name String: the name of the param (help, version, etc)
	 * @param $description String: the description of the param to show on --help
	 * @param $required Boolean: is the param required?
	 * @param $withArg Boolean: is an argument required with this option?
	 * @param $shortName String: character to use as short name
	 */",
 "/**
	 * Checks to see if a particular param exists.
	 * @param $name String: the name of the param
	 * @return Boolean
	 */",
 "/**
	 * Get an option, or return the default
	 * @param $name String: the name of the param
	 * @param $default Mixed: anything you want, default null
	 * @return Mixed
	 */",
 "/**
	 * Add some args that are needed
	 * @param $arg String: name of the arg, like \'start\'
	 * @param $description String: short description of the arg
	 * @param $required Boolean: is this required?
	 */",
 "/**
	 * Remove an option.  Useful for removing options that won\'t be used in your script.
	 * @param $name String: the option to remove.
	 */",
 "/**
	 * Set the description text.
	 * @param $text String: the text of the description
	 */",
 "/**
	 * Does a given argument exist?
	 * @param $argId Integer: the integer value (from zero) for the arg
	 * @return Boolean
	 */",
 "/**
	 * Get an argument.
	 * @param $argId Integer: the integer value (from zero) for the arg
	 * @param $default Mixed: the default if it doesn\'t exist
	 * @return mixed
	 */",
 "/**
	 * Set the batch size.
	 * @param $s Integer: the number of operations to do in a batch
	 */",
 "/**
	 * Get the script\'s name
	 * @return String
	 */",
 "/**
	 * Return input from stdin.
	 * @param $len Integer: the number of bytes to read. If null,
	 *        just return the handle. Maintenance::STDIN_ALL returns
	 *        the full length
	 * @return Mixed
	 */",
 "/**
	 * Throw some output to the user. Scripts can call this with no fears,
	 * as we handle all --quiet stuff here
	 * @param $out String: the text to show to the user
	 * @param $channel Mixed: unique identifier for the channel. See
	 *     function outputChanneled.
	 */",
 "/**
	 * Throw an error to the user. Doesn\'t respect --quiet, so don\'t use
	 * this for non-error output
	 * @param $err String: the error to display
	 * @param $die Int: if > 0, go ahead and die out using this int as the code
	 */",
 "/**
	 * Clean up channeled output.  Output a newline if necessary.
	 */",
 "/**
	 * Message outputter with channeled message support. Messages on the
	 * same channel are concatenated, but any intervening messages in another
	 * channel start a new line.
	 * @param $msg String: the message without trailing newline
	 * @param $channel Channel identifier or null for no
	 *     channel. Channel comparison uses ===.
	 */",
 "/**
	 * Does the script need different DB access? By default, we give Maintenance
	 * scripts normal rights to the DB. Sometimes, a script needs admin rights
	 * access for a reason and sometimes they want no access. Subclasses should
	 * override and return one of the following values, as needed:
	 *    Maintenance::DB_NONE  -  For no DB access at all
	 *    Maintenance::DB_STD   -  For normal DB access, default
	 *    Maintenance::DB_ADMIN -  For admin DB access
	 * @return Integer
	 */",
 "/**
	 * Add the default parameters to the scripts
	 */",
 "/**
		 * @var $child Maintenance
		 */",
 "/**
	 * Run a child maintenance script. Pass all of the current arguments
	 * to it.
	 * @param $maintClass String: a name of a child maintenance class
	 * @param $classFile String: full path of where the child is
	 * @return Maintenance child
	 */",
 "/**
	 * Do some sanity checking and basic setup
	 */",
 "/**
	 * Normally we disable the memory_limit when running admin scripts.
	 * Some scripts may wish to actually set a limit, however, to avoid
	 * blowing up unexpectedly. We also support a --memory-limit option,
	 * to allow sysadmins to explicitly set one if they\'d prefer to override
	 * defaults (or for people using Suhosin which yells at you for trying
	 * to disable the limits)
	 * @return string
	 */",
 "/**
	 * Adjusts PHP\'s memory limit to better suit our needs, if needed.
	 */",
 "/**
	 * Clear all params and arguments.
	 */",
 "/**
	 * Process command line arguments
	 * $mOptions becomes an array with keys set to the option names
	 * $mArgs becomes a zero-based array containing the non-option arguments
	 *
	 * @param $self String The name of the script, if any
	 * @param $opts Array An array of options, in form of key=>value
	 * @param $args Array An array of command line arguments
	 */",
 "/**
	 * Run some validation checks on the params, etc
	 */",
 "/**
	 * Handle the special variables that are global to all scripts
	 */",
 "/**
	 * Maybe show the help.
	 * @param $force boolean Whether to force the help to show, default false
	 */",
 "/**
	 * Handle some last-minute setup here.
	 */",
 "/**
	 * Execute a callback function at the end of initialisation
	 */",
 "/**
	 * Potentially debug globals. Originally a feature only
	 * for refreshLinks
	 */",
 "/**
	 * Generic setup for most installs. Returns the location of LocalSettings
	 * @return String
	 */",
 "/**
	 * Support function for cleaning up redundant text records
	 * @param $delete Boolean: whether or not to actually delete the records
	 * @author Rob Church <robchur@gmail.com>
	 */",
 "/**
	 * Get the maintenance directory.
	 * @return string
	 */",
 "/**
	 * Get the list of available maintenance scripts. Note
	 * that if you call this _before_ calling doMaintenance
	 * you won\'t have any extensions in it yet
	 * @return Array
	 */",
 "/**
	 * Return all of the core maintenance scripts
	 * @return array
	 */",
 "/**
	 * Returns a database to be used by current maintenance script. It can be set by setDB().
	 * If not set, wfGetDB() will be used.
	 * This function has the same parameters as wfGetDB()
	 *
	 * @return DatabaseBase
	 */",
 "/**
	 * Sets database object to be returned by getDB().
	 *
	 * @param $db DatabaseBase: Database object to be used
	 */",
 "/**
	 * Lock the search index
	 * @param &$db Database object
	 */",
 "/**
	 * Unlock the tables
	 * @param &$db Database object
	 */",
 "/**
	 * Unlock and lock again
	 * Since the lock is low-priority, queued reads will be able to complete
	 * @param &$db Database object
	 */",
 "/**
	 * Perform a search index update with locking
	 * @param $maxLockTime Integer: the maximum time to keep the search index locked.
	 * @param $callback callback String: the function that will update the function.
	 * @param $dbw DatabaseBase object
	 * @param $results
	 */",
 "/**
	 * Update the searchindex table for a given pageid
	 * @param $dbw Database: a database write handle
	 * @param $pageId Integer: the page ID to update.
	 * @return null|string
	 */",
 "/**
	 * Wrapper for posix_isatty()
	 * We default as considering stdin a tty (for nice readline methods)
	 * but treating stout as not a tty to avoid color codes
	 *
	 * @param $fd int File descriptor
	 * @return bool
	 */",
 "/**
	 * Prompt the console for input
	 * @param $prompt String what to begin the line with, like \'> \'
	 * @return String response
	 */",
 "/**
	 * Emulate readline()
	 * @param $prompt String what to begin the line with, like \'> \'
	 * @return String
	 */",
 "/**
 * Abstract maintenance class for quickly writing and churning out
 * maintenance scripts with minimal effort. All that _must_ be defined
 * is the execute() method. See docs/maintenance.txt for more info
 * and a quick demo of how to use it.
 *
 * @author Chad Horohoe <chad@anyonecanedit.org>
 * @since 1.16
 * @ingroup Maintenance
 */",
 "/**
 * Fake maintenance wrapper, mostly used for the web installer/updater
 */",
 "/**
	 * Message to show that the update was done already and was just skipped
	 * @return String
	 */",
 "/**
	 * Message to show the the update log was unable to log the completion of this update
	 * @return String
	 */",
 "/**
	 * Do the actual work. All child classes will need to implement this.
	 * Return true to log the update as done or false (usually on failure).
	 * @return Bool
	 */",
 "/**
	 * Get the update key name to go in the update log table
	 * @return String
	 */",
 "/**
 * Class for scripts that perform database maintenance and want to log the
 * update in `updatelog` so we can later skip it
 */",
 "/** Zeeuws (Ze??uws)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Adnergje
 * @author NJ
 * @author Ooswesthoesbes
 * @author Purodha
 * @author Rob Church <robchur@gmail.com>
 * @author Steinbach
 * @author Troefkaart
 * @author Urhixidur
 */",
 "/**
 * Namespace names
 * (bug 8708)
 */",
 "/** Volap??k (Volap??k)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Kaganer
 * @author Malafaya
 * @author Reedy
 * @author Smeira
 * @author ???????? ????????????????
 */",
 "/**
	 * Constructor
	 *
	 * @param $list LogEventsList
	 * @param $types String or Array: log types to show
	 * @param $performer String: the user who made the log entries
	 * @param $title String|Title: the page title the log entries are for
	 * @param $pattern String: do a prefix search rather than an exact title match
	 * @param $conds Array: extra conditions for the query
	 * @param $year Integer: the year to start from
	 * @param $month Integer: the month to start from
	 * @param $tagFilter String: tag
	 */",
 "/**
	 * Set the log reader to return only entries of the given type.
	 * Type restrictions enforced here
	 *
	 * @param $types String or array: Log types (\'upload\', \'delete\', etc);
	 *   empty string means no restriction
	 */",
 "/**
	 * Set the log reader to return only entries by the given user.
	 *
	 * @param $name String: (In)valid user name
	 */",
 "/**
	 * Set the log reader to return only entries affecting the given page.
	 * (For the block and rights logs, this is a user page.)
	 *
	 * @param $page String or Title object: Title name
	 * @param $pattern String
	 */",
 "/**
	 * Constructs the most part of the query. Extra conditions are sprinkled in
	 * all over this class.
	 * @return array
	 */",
 "/**
	 * Checks if $this->mConds has $field matched to a *single* value
	 * @param $field
	 * @return bool
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
 * @ingroup Pager
 */",
 "/** Nepali (??????????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Bhawani Gautam
 * @author Bhawani Gautam Rhk
 * @author Ganesh
 * @author Indiver
 * @author Kaganer
 * @author Lkhatiwada
 * @author RajeshPandey
 * @author Reedy
 * @author ne.wikipedia.org sysops
 * @author ???????????? ??????????????? ????????????
 */",
 "/** Megleno-Romanian (Vl??he??te)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 * @comment falls back to Megleno-Romanian (Latin)
 *
 */",
 "/**
	 * @param $pageid
	 * @param $title Title
	 * @param $rev Revision
	 * @return bool|String
	 */",
 "/**
 * A query action to enumerate revisions of a given page, or show top revisions of multiple pages.
 * Various pieces of information may be shown - flags, comments, and the actual wiki markup of the rev.
 * In the enumeration mode, ranges of revisions may be requested and filtered.
 *
 * @ingroup API
 */",
 "/** Simple English (Simple English)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Hydra
 */",
 "/**
	 * @param $resultPageSet ApiPageSet
	 */",
 "/**
 * Query module to get the results of a QueryPage-based special page
 *
 * @ingroup API
 */",
 "/** Swiss German (Alemannisch)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Als-Chl??mens
 * @author Als-Holder
 * @author Hendergassler
 * @author J. \'mach\' wust
 * @author Kaganer
 * @author MaxSem
 * @author Melancholie
 * @author MichaelFrey
 * @author Purodha
 * @author Remember the dot
 * @author Spacebirdy
 * @author Strommops
 * @author The Evil IP address
 * @author Urhixidur
 * @author ???????? ????????????????
 * @author 80686
 */",
 "/**
 * A special page that lists most linked pages that does not exist
 *
 * @ingroup SpecialPage
 */",
 "/**
	 * Set the WebRequest object
	 *
	 * @param $r WebRequest object
	 */",
 "/**
	 * Get the WebRequest object
	 *
	 * @return WebRequest
	 */",
 "/**
	 * Set the Title object
	 *
	 * @param $t Title object
	 */",
 "/**
	 * Get the Title object
	 *
	 * @return Title
	 */",
 "/**
	 * Check whether a WikiPage object can be get with getWikiPage().
	 * Callers should expect that an exception is thrown from getWikiPage()
	 * if this method returns false.
	 *
	 * @since 1.19
	 * @return bool
	 */",
 "/**
	 * Set the WikiPage object
	 *
	 * @since 1.19
	 * @param $p WikiPage object
	 */",
 "/**
	 * Get the WikiPage object.
	 * May throw an exception if there\'s no Title object set or the Title object
	 * belongs to a special namespace that doesn\'t have WikiPage, so use first
	 * canUseWikiPage() to check whether this method can be called safely.
	 *
	 * @since 1.19
	 * @return WikiPage
	 */",
 "/**
	 * @param $o OutputPage
	 */",
 "/**
	 * Get the OutputPage object
	 *
	 * @return OutputPage object
	 */",
 "/**
	 * Set the User object
	 *
	 * @param $u User
	 */",
 "/**
	 * Get the User object
	 *
	 * @return User
	 */",
 "/**
	 * Accepts a language code and ensures it\'s sane. Outputs a cleaned up language
	 * code and replaces with $wgLanguageCode if not sane.
	 * @param $code string
	 * @return string
	 */",
 "/**
	 * Set the Language object
	 *
	 * @deprecated 1.19 Use setLanguage instead
	 * @param $l Mixed Language instance or language code
	 */",
 "/**
	 * Set the Language object
	 *
	 * @param $l Mixed Language instance or language code
	 * @since 1.19
	 */",
 "/**
	 * @deprecated 1.19 Use getLanguage instead
	 * @return Language
	 */",
 "/**
	 * Get the Language object
	 *
	 * @return Language
	 * @since 1.19
	 */",
 "/**
	 * Set the Skin object
	 *
	 * @param $s Skin
	 */",
 "/**
	 * Get the Skin object
	 *
	 * @return Skin
	 */",
 "/**
	 * Get a Message object with context set
	 * Parameters are the same as wfMessage()
	 *
	 * @return Message object
	 */",
 "/**
	 * Get the RequestContext object associated with the main request
	 *
	 * @return RequestContext object
	 */",
 "/**
	 * Create a new extraneous context. The context is filled with information
	 * external to the current session.
	 * - Title is specified by argument
	 * - Request is a FauxRequest, or a FauxRequest can be specified by argument
	 * - User is an anonymous user, for separation IPv4 localhost is used
	 * - Language will be based on the anonymous user and request, may be content
	 *   language or a uselang param in the fauxrequest data may change the lang
	 * - Skin will be based on the anonymous user, should be the wiki\'s default skin
	 *
	 * @param $title Title Title to use for the extraneous request
	 * @param $request Mixed A WebRequest or data to use for a FauxRequest
	 * @return RequestContext
	 */",
 "/**
 * Group all the pieces relevant to the context of a request into one instance
 */",
 "/** Maltese (Malti)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Chrisportelli
 * @author Giangian15
 * @author Kaganer
 * @author Malafaya
 * @author Roderick Mallia
 * @author Urhixidur
 */",
 "/**
	 * Fetch the set of available skins.
	 * @return associative array of strings
	 */",
 "/**
	 * Fetch the skinname messages for available skins.
	 * @return array of strings
	 */",
 "/**
	 * Fetch the list of usable skins in regards to $wgSkipSkins.
	 * Useful for Special:Preferences and other places where you
	 * only want to show skins users _can_ use.
	 * @return array of strings
	 */",
 "/**
	 * Normalize a skin preference value to a form that can be loaded.
	 * If a skin can\'t be found, it will fall back to the configured
	 * default (or the old \'Classic\' skin if that\'s broken).
	 * @param $key String: \'monobook\', \'standard\', etc.
	 * @return string
	 */",
 "/**
	 * Factory method for loading a skin of a given type
	 * @param $key String: \'monobook\', \'standard\', etc.
	 * @return Skin
	 */",
 "/** @return string skin name */",
 "/**
	 * @param $out OutputPage
	 */",
 "/**
	 * Preload the existence of three commonly-requested pages in a single query
	 */",
 "/**
	 * Get the current revision ID
	 *
	 * @return Integer
	 */",
 "/**
	 * Whether the revision displayed is the latest revision of the page
	 *
	 * @return Boolean
	 */",
 "/**
	 * Set the \"relevant\" title
	 * @see self::getRelevantTitle()
	 * @param $t Title object to use
	 */",
 "/**
	 * Return the \"relevant\" title.
	 * A \"relevant\" title is not necessarily the actual title of the page.
	 * Special pages like Special:MovePage use set the page they are acting on
	 * as their \"relevant\" title, this allows the skin system to display things
	 * such as content tabs which belong to to that page instead of displaying
	 * a basic special page tab which has almost no meaning.
	 *
	 * @return Title
	 */",
 "/**
	 * Set the \"relevant\" user
	 * @see self::getRelevantUser()
	 * @param $u User object to use
	 */",
 "/**
	 * Return the \"relevant\" user.
	 * A \"relevant\" user is similar to a relevant title. Special pages like
	 * Special:Contributions mark the user which they are relevant to so that
	 * things like the toolbox can display the information they usually are only
	 * able to display on a user\'s userpage and talkpage.
	 * @return User
	 */",
 "/**
	 * Outputs the HTML generated by other functions.
	 * @param $out OutputPage
	 */",
 "/**
	 * @param $data array
	 * @return string
	 */",
 "/**
	 * Make a <script> tag containing global variables
	 *
	 * @deprecated in 1.19
	 * @param $unused Unused
	 * @return string HTML fragment
	 */",
 "/**
	 * Get the query to generate a dynamic stylesheet
	 *
	 * @return array
	 */",
 "/**
	 * Add skin specific stylesheets
	 * Calling this method with an $out of anything but the same OutputPage
	 * inside ->getOutput() is deprecated. The $out arg is kept
	 * for compatibility purposes with skins.
	 * @param $out OutputPage
	 * @delete
	 */",
 "/**
	 * TODO: document
	 * @param $title Title
	 * @return String
	 */",
 "/**
	 * This will be called by OutputPage::headElement when it is creating the
	 * <body> tag, skins can override it if they have a need to add in any
	 * body attributes or classes of their own.
	 * @param $out OutputPage
	 * @param $bodyAttrs Array
	 */",
 "/**
	 * URL to the logo
	 * @return String
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * Render the array as a serie of links.
	 * @param $tree Array: categories tree returned by Title::getParentCategoryTree
	 * @return String separated by &gt;, terminate with \"\n\"
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * This runs a hook to allow extensions placing their stuff after content
	 * and article metadata (e.g. categories).
	 * Note: This function has nothing to do with afterContent().
	 *
	 * This hook is placed here in order to allow using the same hook for all
	 * skins, both the SkinTemplate based ones and the older ones, which directly
	 * use this class to get their data.
	 *
	 * The output of this function gets processed in SkinTemplate::outputPage() for
	 * the SkinTemplate based skins, all other skins should directly echo it.
	 *
	 * @return String, empty by default, if not changed by any hook function.
	 */",
 "/**
	 * Generate debug data HTML for displaying at the bottom of the main content
	 * area.
	 * @return String HTML containing debug data, if enabled (otherwise empty).
	 */",
 "/**
	 * @param $debugText string
	 * @return string
	 */",
 "/**
	 * This gets called shortly before the </body> tag.
	 *
	 * @return String HTML-wrapped JS code to be put before </body>
	 */",
 "/**
	 * Text with the permalink to the source page,
	 * usually shown on the footer of a printed page
	 *
	 * @return string HTML text with an URL
	 */",
 "/**
	 * @return String
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * Returns true if the IP should be shown in the header
	 * @return Bool
	 */",
 "/**
	 * @return String
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @param $type string
	 * @return string
	 */",
 "/**
	 * @return null|string
	 */",
 "/**
	 * Gets the powered by MediaWiki icon.
	 * @return string
	 */",
 "/**
	 * Get the timestamp of the latest revision, formatted in user language
	 *
	 * @return String
	 */",
 "/**
	 * @param $align string
	 * @return string
	 */",
 "/**
	 * Renders a $wgFooterIcons icon acording to the method\'s arguments
	 * @param $icon Array: The icon to build the html for, see $wgFooterIcons for the format of this array
	 * @param $withImage Bool|String: Whether to use the icon\'s image or output a text-only footericon
	 * @return String HTML
	 */",
 "/**
	 * Gets the link to the wiki\'s main page.
	 * @return string
	 */",
 "/**
	 * @param $desc
	 * @param $page
	 * @return string
	 */",
 "/**
	 * Gets the link to the wiki\'s privacy policy page.
	 * @return String HTML
	 */",
 "/**
	 * Gets the link to the wiki\'s about page.
	 * @return String HTML
	 */",
 "/**
	 * Gets the link to the wiki\'s general disclaimers page.
	 * @return String HTML
	 */",
 "/**
	 * Return URL options for the \'edit page\' link.
	 * This may include an \'oldid\' specifier, if the current page view is such.
	 *
	 * @return array
	 * @private
	 */",
 "/**
	 * @param $id User|int
	 * @return bool
	 */",
 "/**
	 * Return a fully resolved style path url to images or styles stored in the common folder.
	 * This method returns a url resolved using the configured skin style path
	 * and includes the style version inside of the url.
	 * @param $name String: The name or path of a skin resource file
	 * @return String The fully resolved style path url including styleversion
	 */",
 "/**
	 * Return a fully resolved style path url to images or styles stored in the curent skins\'s folder.
	 * This method returns a url resolved using the configured skin style path
	 * and includes the style version inside of the url.
	 * @param $name String: The name or path of a skin resource file
	 * @return String The fully resolved style path url including styleversion
	 */",
 "/**
	 * @param $urlaction string
	 * @return String
	 */",
 "/**
	 * @param $name string
	 * @param $urlaction string
	 * @return String
	 */",
 "/**
	 * @param $name string
	 * @param $subpage string
	 * @param $urlaction string
	 * @return String
	 */",
 "/**
	 * @param $name string
	 * @param $urlaction string
	 * @return String
	 */",
 "/**
	 * @param $name string
	 * @param $urlaction string
	 * @return String
	 */",
 "/**
	 * If url string starts with http, consider as external URL, else
	 * internal
	 * @param $name String
	 * @return String URL
	 */",
 "/**
	 * this can be passed the NS number as defined in Language.php
	 * @param $name
	 * @param $urlaction string
	 * @param $namespace int
	 * @return String
	 */",
 "/**
	 * these return an array with the \'href\' and boolean \'exists\'
	 * @param $name
	 * @param $urlaction string
	 * @return array
	 */",
 "/**
	 * Make URL details where the article exists (or at least it\'s convenient to think so)
	 * @param $name String Article name
	 * @param $urlaction String
	 * @return Array
	 */",
 "/**
	 * make sure we have some title to operate on
	 *
	 * @param $title Title
	 * @param $name string
	 */",
 "/**
	 * Build an array that represents the sidebar(s), the navigation bar among them
	 *
	 * @return array
	 */",
 "/**
	 * Add content from a sidebar system message
	 * Currently only used for MediaWiki:Sidebar (but may be used by Extensions)
	 *
	 * This is just a wrapper around addToSidebarPlain() for backwards compatibility
	 *
	 * @param $bar array
	 * @param $message String
	 */",
 "/**
	 * Add content from plain text
	 * @since 1.17
	 * @param $bar array
	 * @param $text string
	 * @return Array
	 */",
 "/**
	 * Should we load mediawiki.legacy.wikiprintable?  Skins that have their own
	 * print stylesheet should override this and return false.  (This is an
	 * ugly hack to get Monobook to play nicely with OutputPage::headElement().)
	 *
	 * @return bool
	 */",
 "/**
	 * Gets new talk page messages for the current user.
	 * @return MediaWiki message or if no new talk page messages, nothing
	 */",
 "/**
	 * Get a cached notice
	 *
	 * @param $name String: message name, or \'default\' for $wgSiteNotice
	 * @return String: HTML fragment
	 */",
 "/**
	 * Get a notice based on page\'s namespace
	 *
	 * @return String: HTML fragment
	 */",
 "/**
	 * Get the site notice
	 *
	 * @return String: HTML fragment
	 */",
 "/**
	 * Create a section edit link.  This supersedes editSectionLink() and
	 * editSectionLinkForOther().
	 *
	 * @param $nt      Title  The title being linked to (may not be the same as
	 *   $wgTitle, if the section is included from a template)
	 * @param $section string The designation of the section being pointed to,
	 *   to be included in the link, like \"&section=$section\"
	 * @param $tooltip string The tooltip to use for the link: will be escaped
	 *   and wrapped in the \'editsectionhint\' message
	 * @param $lang    string Language code
	 * @return         string HTML to use for edit link
	 */",
 "/**
	 * Use PHP\'s magic __call handler to intercept legacy calls to the linker
	 * for backwards compatibility.
	 *
	 * @param $fname String Name of called method
	 * @param $args Array Arguments to the method
	 */",
 "/**
 * The main skin class that provide methods and properties for all other skins.
 * This base class is also the \"Standard\" skin.
 *
 * See docs/skin.txt for more information.
 *
 * @ingroup Skins
 */",
 "/** Ido (Ido)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Albonio
 * @author Artomo
 * @author Kaganer
 * @author Lakaoso
 * @author Malafaya
 * @author Reedy
 * @author Remember the dot
 * @author Wyvernoid
 * @author ???????? ????????????????
 */",
 "/**
 * Issue a standard HTTP 403 Forbidden header ($msg1-a message index, not a message) and an
 * error message ($msg2, also a message index), (both required) then end the script
 * subsequent arguments to $msg2 will be passed as parameters only for replacing in $msg2
 * @param $msg1
 * @param $msg2
 */",
 "/**
	 * This method takes an array and converts it to XML.
	 * There are several noteworthy cases:
	 *
	 *  If array contains a key \'_element\', then the code assumes that ALL other keys are not important and replaces them with the value[\'_element\'].
	 *	Example:	name=\'root\',  value = array( \'_element\'=>\'page\', \'x\', \'y\', \'z\') creates <root>  <page>x</page>  <page>y</page>  <page>z</page> </root>
	 *
	 *  If any of the array\'s element key is \'*\', then the code treats all other key->value pairs as attributes, and the value[\'*\'] as the element\'s content.
	 *	Example:	name=\'root\',  value = array( \'*\'=>\'text\', \'lang\'=>\'en\', \'id\'=>10)   creates  <root lang=\'en\' id=\'10\'>text</root>
	 *
	 * If neither key is found, all keys become element names, and values become element content.
	 * The method is recursive, so the same rules apply to any sub-arrays.
	 *
	 * @param $elemName
	 * @param $elemValue
	 * @param $indent
	 * @param $doublequote bool
	 *
	 * @return string
	 */",
 "/**
 * API XML output formatter
 * @ingroup API
 */",
 "/**
 * Fake title class that triggers an error if any members are called
 */",
 "/**
	 * @group Broken
	 */",
 "/**
 * @group Database
 */",
 "/**
	 * Cases: genitive, dative, accusative, locative, ablative, comitative + possessive forms
	 *
	 * @param $word string
	 * @param $case string
	 *
	 * @return string
	 */",
 "/**
	 * It fixes issue with ucfirst for transforming \'i\' to \'??\'
	 *
	 * @param $string string
	 *
	 * @return string
	 */",
 "/**
	 * It fixes issue with  lcfirst for transforming \'I\' to \'??\'
	 *
	 * @param $string string
	 *
	 * @return string
	 */",
 "/**
	 * Avoid grouping whole numbers between 0 to 9999
	 *
	 * @param $_ string
	 *
	 * @return string
	 */",
 "/** Karakalpak (Qaraqalpaqsha)
 *
 * @ingroup Language
 */",
 "/**
	 * Constructs an instance of ApiMain that utilizes the module and format specified by $request.
	 *
	 * @param $context IContextSource|WebRequest - if this is an instance of FauxRequest, errors are thrown and no printing occurs
	 * @param $enableWrite bool should be set to true if the api may modify data
	 */",
 "/**
	 * Return true if the API was started by other PHP code using FauxRequest
	 * @return bool
	 */",
 "/**
	 * Get the ApiResult object associated with current request
	 *
	 * @return ApiResult
	 */",
 "/**
	 * Get the API module object. Only works after executeAction()
	 *
	 * @return ApiBase
	 */",
 "/**
	 * Get the result formatter object. Only works after setupExecuteAction()
	 *
	 * @return ApiFormatBase
	 */",
 "/**
	 * Set how long the response should be cached.
	 *
	 * @param $maxage
	 */",
 "/**
	 * Set the type of caching headers which will be sent.
	 *
	 * @param $mode String One of:
	 *    - \'public\':     Cache this object in public caches, if the maxage or smaxage
	 *         parameter is set, or if setCacheMaxAge() was called. If a maximum age is
	 *         not provided by any of these means, the object will be private.
	 *    - \'private\':    Cache this object only in private client-side caches.
	 *    - \'anon-public-user-private\': Make this object cacheable for logged-out
	 *         users, but private for logged-in users. IMPORTANT: If this is set, it must be
	 *         set consistently for a given URL, it cannot be set differently depending on
	 *         things like the contents of the database, or whether the user is logged in.
	 *
	 *  If the wiki does not allow anonymous users to read it, the mode set here
	 *  will be ignored, and private caching headers will always be sent. In other words,
	 *  the \"public\" mode is equivalent to saying that the data sent is as public as a page
	 *  view.
	 *
	 *  For user-dependent data, the private mode should generally be used. The
	 *  anon-public-user-private mode should only be used where there is a particularly
	 *  good performance reason for caching the anonymous response, but where the
	 *  response to logged-in users may differ, or may contain private data.
	 *
	 *  If this function is never called, then the default will be the private mode.
	 */",
 "/**
	 * @deprecated since 1.17 Private caching is now the default, so there is usually no
	 * need to call this function. If there is a need, you can use
	 * $this->setCacheMode(\'private\')
	 */",
 "/**
	 * Set directives (key/value pairs) for the Cache-Control header.
	 * Boolean values will be formatted as such, by including or omitting
	 * without an equals sign.
	 *
	 * Cache control values set here will only be used if the cache mode is not
	 * private, see setCacheMode().
	 *
	 * @param $directives array
	 */",
 "/**
	 * Make sure Vary: Cookie and friends are set. Use this when the output of a request
	 * may be cached for anons but may not be cached for logged-in users.
	 *
	 * WARNING: This function must be called CONSISTENTLY for a given URL. This means that a
	 * given URL must either always or never call this function; if it sometimes does and
	 * sometimes doesn\'t, stuff will break.
	 *
	 * @deprecated since 1.17 Use setCacheMode( \'anon-public-user-private\' )
	 */",
 "/**
	 * Create an instance of an output formatter by its name
	 *
	 * @param $format string
	 *
	 * @return ApiFormatBase
	 */",
 "/**
	 * Execute api request. Any errors will be handled if the API was called by the remote client.
	 */",
 "/**
	 * Execute an action, and in case of an error, erase whatever partial results
	 * have been accumulated, and replace it with an error message and a help screen.
	 */",
 "/**
	 * Replace the result data with the information about an exception.
	 * Returns the error code
	 * @param $e Exception
	 * @return string
	 */",
 "/**
	 * Set up for the execution.
	 * @return array
	 */",
 "/**
	 * Set up the module for response
	 * @return ApiBase The module that will handle this action
	 */",
 "/**
	 * Check the max lag if necessary
	 * @param $module ApiBase object: Api module being used
	 * @param $params Array an array containing the request parameters.
	 * @return boolean True on success, false should exit immediately
	 */",
 "/**
	 * Check for sufficient permissions to execute
	 * @param $module ApiBase An Api module
	 */",
 "/**
	 * Check POST for external response and setup result printer
	 * @param $module ApiBase An Api module
	 * @param $params Array an array with the request parameters
	 */",
 "/**
	 * Execute the actual module, without any error handling
	 */",
 "/**
	 * Print results using the current printer
	 *
	 * @param $isError bool
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * See ApiBase for description.
	 *
	 * @return array
	 */",
 "/**
	 * See ApiBase for description.
	 *
	 * @return array
	 */",
 "/**
	 * See ApiBase for description.
	 *
	 * @return array
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * Returns an array of strings with credits for the API
	 * @return array
	 */",
 "/**
	 * Sets whether the pretty-printer should format *bold* and $italics$
	 *
	 * @param $help bool
	 */",
 "/**
	 * Override the parent to generate help messages for all available modules.
	 *
	 * @return string
	 */",
 "/**
	 * @return mixed|string
	 */",
 "/**
	 * @param $module ApiBase
	 * @param $paramName String What type of request is this? e.g. action, query, list, prop, meta, format
	 * @return string
	 */",
 "/**
	 * Check whether the current user is allowed to use high limits
	 * @return bool
	 */",
 "/**
	 * Check whether the user wants us to show version information in the API help
	 * @return bool
	 */",
 "/**
	 * Returns the version information of this file, plus it includes
	 * the versions for all files that are not callable proper API modules
	 *
	 * @return array
	 */",
 "/**
	 * Add or overwrite a module in this ApiMain instance. Intended for use by extending
	 * classes who wish to add their own modules to their lexicon or override the
	 * behavior of inherent ones.
	 *
	 * @param $mdlName String The identifier for this module.
	 * @param $mdlClass String The class where this module is implemented.
	 */",
 "/**
	 * Add or overwrite an output format for this ApiMain. Intended for use by extending
	 * classes who wish to add to or modify current formatters.
	 *
	 * @param $fmtName string The identifier for this format.
	 * @param $fmtClass ApiFormatBase The class implementing this format.
	 */",
 "/**
	 * Get the array mapping module names to class names
	 * @return array
	 */",
 "/**
	 * Returns the list of supported formats in form ( \'format\' => \'ClassName\' )
	 *
	 * @since 1.18
	 * @return array
	 */",
 "/**
 * This is the main API class, used for both external and internal processing.
 * When executed, it will create the requested formatter object,
 * instantiate and execute an object associated with the needed action,
 * and use formatter to print results.
 * In case of an exception, an error message will be printed using the same formatter.
 *
 * To use API from another application, run it using FauxRequest object, in which
 * case any internal exceptions will not be handled but passed up to the caller.
 * After successful execution, use getResult() for the resulting data.
 *
 * @ingroup API
 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * @return string
	 */",
 "/**
 * This exception will be thrown when dieUsage is called to stop module execution.
 * The exception handling code will print a help screen explaining how this API may be used.
 *
 * @ingroup API
 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * Eventually this should be a word segmentation;
	 * for now just treat each character as a word.
	 * @todo FIXME: Only do this for Han characters...
	 *
	 * @param $string string
	 * @return string
	 */",
 "/**
	 * @param $string
	 * @return string
	 */",
 "/**
 * Cantonese (??????)
 *
 * @ingroup Language
 */",
 "/** Austrian German (??sterreichisches Deutsch)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Laximilian scoken
 * @author Mucalexx
 * @author Revolus
 * @author Wdwd
 * @author ???
 */",
 "/** @dataProvider providerPlural */",
 "/** Tests for MediaWiki languages/classes/LanguageGv.php */",
 "/**
	 * Use singular form for zero
	 *
	 * @param $count int
	 * @param $forms array
	 *
	 * @return string
	 */",
 "/**
 * Tagalog (Tagalog)
 *
 * @ingroup Language
 */",
 "/**
	 * Sets a cookie.  Used before a request to set up any individual
	 * cookies.	 Used internally after a request to parse the
	 * Set-Cookie headers.
	 *
	 * @param $value String: the value of the cookie
	 * @param $attr Array: possible key/values:
	 *		expires	 A date string
	 *		path	 The path this cookie is used on
	 *		domain	 Domain this cookie is used on
	 */",
 "/**
	 * Return the true if the cookie is valid is valid.  Otherwise,
	 * false.  The uses a method similar to IE cookie security
	 * described here:
	 * http://kuza55.blogspot.com/2008/02/understanding-cookie-security.html
	 * A better method might be to use a blacklist like
	 * http://publicsuffix.org/
	 *
	 * @fixme fails to detect 3-letter top-level domains
	 * @fixme fails to detect 2-letter top-level domains for single-domain use (probably not a big problem in practice, but there are test cases)
	 *
	 * @param $domain String: the domain to validate
	 * @param $originDomain String: (optional) the domain the cookie originates from
	 * @return Boolean
	 */",
 "/**
	 * Serialize the cookie jar into a format useful for HTTP Request headers.
	 *
	 * @param $path String: the path that will be used. Required.
	 * @param $domain String: the domain that will be used. Required.
	 * @return String
	 */",
 "/**
	 * @param $domain
	 * @return bool
	 */",
 "/**
	 * @param $path
	 * @return bool
	 */",
 "/**
	 * @return bool
	 */",
 "/**
 * @defgroup HTTP HTTP
 */",
 "/**
	 * Set a cookie in the cookie jar.	Make sure only one cookie per-name exists.
	 * @see Cookie::set()
	 */",
 "/**
	 * @see Cookie::serializeToHttpRequest
	 */",
 "/**
	 * Parse the content of an Set-Cookie HTTP Response header.
	 *
	 * @param $cookie String
	 * @param $domain String: cookie\'s domain
	 */",
 "/**
 * Simplified / Traditional Chinese conversion tables
 *
 * Automatically generated using code and data in includes/zhtable/
 * Do not modify directly!
 *
 * @file
 */",
 "/**
 * Moves blobs indexed by trackBlobs.php to a specified list of destination
 * clusters, and recompresses them in the process.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @file
 * @ingroup Maintenance ExternalStorage
 */",
 "/**
	 * Wait until the selected slave has caught up to the master.
	 * This allows us to use the slave for things that were committed in a
	 * previous part of this batch process.
	 */",
 "/**
	 * Execute parent or child depending on the isChild option
	 */",
 "/**
	 * Execute the parent process
	 */",
 "/**
	 * Make sure the tracking table exists and isn\'t empty
	 * @return bool
	 */",
 "/**
	 * Start the worker processes.
	 * These processes will listen on stdin for commands.
	 * This necessary because text recompression is slow: loading, compressing and
	 * writing are all slow.
	 */",
 "/**
	 * Gracefully terminate the child processes
	 */",
 "/**
	 * Dispatch a command to the next available slave.
	 * This may block until a slave finishes its work and becomes available.
	 */",
 "/**
	 * Dispatch a command to a specified slave
	 */",
 "/**
	 * Move all tracked pages to the new clusters
	 */",
 "/**
	 * Display a progress report
	 */",
 "/**
	 * Move all orphan text to the new clusters
	 */",
 "/**
	 * Main entry point for worker processes
	 */",
 "/**
	 * Move tracked text in a given page
	 */",
 "/**
	 * Atomic move operation.
	 *
	 * Write the new URL to the text table and set the bt_moved flag.
	 *
	 * This is done in a single transaction to provide restartable behaviour
	 * without data loss.
	 *
	 * The transaction is kept short to reduce locking.
	 */",
 "/**
	 * Moves are done in two phases: bt_new_url and then bt_moved.
	 *  - bt_new_url indicates that the text has been copied to the new cluster.
	 *  - bt_moved indicates that the text table has been updated.
	 *
	 * This function completes any moves that only have done bt_new_url. This
	 * can happen when the script is interrupted, or when --copy-only is used.
	 */",
 "/**
	 * Returns the name of the next target cluster
	 * @return string
	 */",
 "/**
	 * Gets a DB master connection for the given external cluster name
	 * @param $cluster string
	 * @return DatabaseBase
	 */",
 "/**
	 * Move an orphan text_id to the new cluster
	 */",
 "/**
	 * Wait for slaves (quietly)
	 */",
 "/**
	 * Create a transaction from a RecompressTracked object
	 */",
 "/**
	 * Add text.
	 * Returns false if it\'s ready to commit.
	 * @param $text string
	 * @param $textId
	 * @return bool
	 */",
 "/**
	 * Recompress text after some aberrant modification
	 */",
 "/**
	 * Commit the blob.
	 * Does nothing if no text items have been added.
	 * May skip the move if --copy-only is set.
	 */",
 "/**
 * Class to represent a recompression operation for a single CGZ blob
 */",
 "/**
	 * Retreives the Selenium configuration values from an ini file.
	 * See sample config file in selenium_settings.ini.sample
	 *
	 */",
 "/**
	 * PHP 5.2 parse_ini_file() doesn\'t have support for array keys.
	 * This function parses simple ini files with such syntax using just
	 * 5.2 functions.
	 */",
 "/**
	 * Load the list of languages: all the Messages*.php
	 * files in the languages directory.
	 *
	 * @param $exif Treat the EXIF messages?
	 */",
 "/**
	 * Get the language list.
	 *
	 * @return array The language list.
	 */",
 "/**
	 * Get the ignored messages list.
	 *
	 * @return array The ignored messages list.
	 */",
 "/**
	 * Get the optional messages list.
	 *
	 * @return array The  optional messages list.
	 */",
 "/**
	 * Load the language file.
	 *
	 * @param $code string The language code.
	 */",
 "/**
	 * Load the messages for a specific language (which is not English) and divide them to groups:
	 * all - all the messages.
	 * required - messages which should be translated in order to get a complete translation.
	 * optional - messages which can be translated, the fallback translation is used if not translated.
	 * obsolete - messages which should not be translated, either because they do not exist, or they are ignored messages.
	 * translated - messages which are either required or optional, but translated from English and needed.
	 *
	 * @param $code string The language code.
	 */",
 "/**
	 * Load the messages for English and divide them to groups:
	 * all - all the messages.
	 * required - messages which should be translated to other languages in order to get a complete translation.
	 * optional - messages which can be translated to other languages, but it\'s not required for a complete translation.
	 * ignored - messages which should not be translated to other languages.
	 * translatable - messages which are either required or optional, but can be translated from English.
	 */",
 "/**
	 * Get all the messages for a specific language (not English), without the
	 * fallback language messages, divided to groups:
	 * all - all the messages.
	 * required - messages which should be translated in order to get a complete translation.
	 * optional - messages which can be translated, the fallback translation is used if not translated.
	 * obsolete - messages which should not be translated, either because they do not exist, or they are ignored messages.
	 * translated - messages which are either required or optional, but translated from English and needed.
	 *
	 * @param $code string The language code.
	 *
	 * @return string The messages in this language.
	 */",
 "/**
	 * Get all the general English messages, divided to groups:
	 * all - all the messages.
	 * required - messages which should be translated to other languages in order to get a complete translation.
	 * optional - messages which can be translated to other languages, but it\'s not required for a complete translation.
	 * ignored - messages which should not be translated to other languages.
	 * translatable - messages which are either required or optional, but can be translated from English.
	 *
	 * @return array The general English messages.
	 */",
 "/**
	 * Get fallback language code for a specific language.
	 *
	 * @param $code string The language code.
	 *
	 * @return string Fallback code.
	 */",
 "/**
	 * Get namespace names for a specific language.
	 *
	 * @param $code string The language code.
	 *
	 * @return Namespace names.
	 */",
 "/**
	 * Get namespace aliases for a specific language.
	 *
	 * @param $code string The language code.
	 *
	 * @return Namespace aliases.
	 */",
 "/**
	 * Get magic words for a specific language.
	 *
	 * @param $code string The language code.
	 *
	 * @return Magic words.
	 */",
 "/**
	 * Get special page aliases for a specific language.
	 *
	 * @param $code string The language code.
	 *
	 * @return Special page aliases.
	 */",
 "/**
	 * Get the untranslated messages for a specific language.
	 *
	 * @param $code string The language code.
	 *
	 * @return array The untranslated messages for this language.
	 */",
 "/**
	 * Get the duplicate messages for a specific language.
	 *
	 * @param $code string The language code.
	 *
	 * @return array The duplicate messages for this language.
	 */",
 "/**
	 * Get the obsolete messages for a specific language.
	 *
	 * @param $code string The language code.
	 *
	 * @return array The obsolete messages for this language.
	 */",
 "/**
	 * Get the messages whose variables do not match the original ones.
	 *
	 * @param $code string The language code.
	 *
	 * @return array The messages whose variables do not match the original ones.
	 */",
 "/**
	 * Get the messages which do not use plural.
	 *
	 * @param $code string The language code.
	 *
	 * @return array The messages which do not use plural in this language.
	 */",
 "/**
	 * Get the empty messages.
	 *
	 * @param $code string The language code.
	 *
	 * @return array The empty messages for this language.
	 */",
 "/**
	 * Get the messages with trailing whitespace.
	 *
	 * @param $code string The language code.
	 *
	 * @return array The messages with trailing whitespace in this language.
	 */",
 "/**
	 * Get the non-XHTML messages.
	 *
	 * @param $code string The language code.
	 *
	 * @return array The non-XHTML messages for this language.
	 */",
 "/**
	 * Get the messages which include wrong characters.
	 *
	 * @param $code string The language code.
	 *
	 * @return array The messages which include wrong characters in this language.
	 */",
 "/**
	 * Get the messages which include dubious links.
	 *
	 * @param $code string The language code.
	 *
	 * @return array The messages which include dubious links in this language.
	 */",
 "/**
	 * Get the messages which include unbalanced brackets.
	 *
	 * @param $code string The language code.
	 *
	 * @return array The messages which include unbalanced brackets in this language.
	 */",
 "/**
	 * Get the untranslated namespace names.
	 *
	 * @param $code string The language code.
	 *
	 * @return array The untranslated namespace names in this language.
	 */",
 "/**
	 * Get the project talk namespace names with no $1.
	 *
	 * @param $code string The language code.
	 *
	 * @return array The problematic project talk namespaces in this language.
	 */",
 "/**
	 * Get the untranslated magic words.
	 *
	 * @param $code string The language code.
	 *
	 * @return array The untranslated magic words in this language.
	 */",
 "/**
	 * Get the obsolete magic words.
	 *
	 * @param $code string The language code.
	 *
	 * @return array The obsolete magic words in this language.
	 */",
 "/**
	 * Get the magic words that override the original English magic word.
	 *
	 * @param $code string The language code.
	 *
	 * @return array The overriding magic words in this language.
	 */",
 "/**
	 * Get the magic words which do not match the case-sensitivity of the original words.
	 *
	 * @param $code string The language code.
	 *
	 * @return array The magic words whose case does not match in this language.
	 */",
 "/**
	 * Get the untranslated special page names.
	 *
	 * @param $code string The language code.
	 *
	 * @return array The untranslated special page names in this language.
	 */",
 "/**
	 * Get the obsolete special page names.
	 *
	 * @param $code string The language code.
	 *
	 * @return array The obsolete special page names in this language.
	 */",
 "/**
 * @ingroup MaintenanceLanguage
 */",
 "/**
	 * Load the messages group.
	 * @param $group The messages group.
	 */",
 "/**
	 * Get the extension name.
	 *
	 * @return string The extension name.
	 */",
 "/**
	 * Load the language file.
	 *
	 * @param $code string The language code.
	 */",
 "/**
	 * Main execution point
	 */",
 "/**
	 * @return bool|string true or string on success, false on failure
	 */",
 "/**
 * Let users change their email address.
 *
 * @ingroup SpecialPage
 */",
 "/** Megleno-Romanian (Cyrillic script) (????????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Andrijko Z.
 * @author ?????????????? ????????????
 * @author ??????????
 * @author ?????????????? ??????
 */",
 "/** Votic (Va????a)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author 2Q
 * @author Andrijko Z.
 * @author Comp1089
 * @author Tr???n Nguy???n Minh Huy
 */",
 "/**
	 * Constructor
	 *
	 * @param $title Title of the page we\'re updating
	 * @param $parserOutput ParserOutput: output from a full parse of this page
	 * @param $recursive Boolean: queue jobs for recursive updates?
	 */",
 "/**
	 * Update link tables with outgoing links from an updated article
	 */",
 "/**
	 * Link update which clears the previous entries and inserts new ones
	 * May be slower or faster depending on level of lock contention and write speed of DB
	 * Also useful where link table corruption needs to be repaired, e.g. in refreshLinks.php
	 */",
 "/**
		 * Determine which pages need to be updated
		 * This is necessary to prevent the job queue from smashing the DB with
		 * large numbers of concurrent invalidations of the same page
		 */",
 "/**
	 * Invalidate the cache of a list of pages from a single namespace
	 *
	 * @param $namespace Integer
	 * @param $dbkeys Array
	 */",
 "/**
	 * @param $cats
	 */",
 "/**
	 * Update all the appropriate counts in the category table.
	 * @param $added array associative array of category name => sort key
	 * @param $deleted array associative array of category name => sort key
	 */",
 "/**
	 * @param $images
	 */",
 "/**
	 * @param $table
	 * @param $insertions
	 * @param $fromField
	 */",
 "/**
	 * Update a table by doing a delete query then an insert query
	 * @param $table
	 * @param $prefix
	 * @param $deletions
	 * @param $insertions
	 */",
 "/**
	 * Get an array of pagelinks insertions for passing to the DB
	 * Skips the titles specified by the 2-D array $existing
	 * @param $existing array
	 * @return array
	 */",
 "/**
	 * Get an array of template insertions. Like getLinkInsertions()
	 * @param $existing array
	 * @return array
	 */",
 "/**
	 * Get an array of image insertions
	 * Skips the names specified in $existing
	 * @param $existing array
	 * @return array
	 */",
 "/**
	 * Get an array of externallinks insertions. Skips the names specified in $existing
	 * @param $existing array
	 * @return array
	 */",
 "/**
	 * Get an array of category insertions
	 *
	 * @param $existing array mapping existing category names to sort keys. If both
	 * match a link in $this, the link will be omitted from the output
	 *
	 * @return array
	 */",
 "/**
	 * Get an array of interlanguage link insertions
	 *
	 * @param $existing Array mapping existing language codes to titles
	 *
	 * @return array
	 */",
 "/**
	 * Get an array of page property insertions
	 * @param $existing array
	 * @return array
	 */",
 "/**
	 * Get an array of interwiki insertions for passing to the DB
	 * Skips the titles specified by the 2-D array $existing
	 * @param $existing array
	 * @return array
	 */",
 "/**
	 * Given an array of existing links, returns those links which are not in $this
	 * and thus should be deleted.
	 * @param $existing array
	 * @return array
	 */",
 "/**
	 * Given an array of existing templates, returns those templates which are not in $this
	 * and thus should be deleted.
	 * @param $existing array
	 * @return array
	 */",
 "/**
	 * Given an array of existing images, returns those images which are not in $this
	 * and thus should be deleted.
	 * @param $existing array
	 * @return array
	 */",
 "/**
	 * Given an array of existing external links, returns those links which are not
	 * in $this and thus should be deleted.
	 * @param $existing array
	 * @return array
	 */",
 "/**
	 * Given an array of existing categories, returns those categories which are not in $this
	 * and thus should be deleted.
	 * @param $existing array
	 * @return array
	 */",
 "/**
	 * Given an array of existing interlanguage links, returns those links which are not
	 * in $this and thus should be deleted.
	 * @param $existing array
	 * @return array
	 */",
 "/**
	 * Get array of properties which should be deleted.
	 * @param $existing array
	 * @return array
	 */",
 "/**
	 * Given an array of existing interwiki links, returns those links which are not in $this
	 * and thus should be deleted.
	 * @param $existing array
	 * @return array
	 */",
 "/**
	 * Get an array of existing links, as a 2-D array
	 *
	 * @return array
	 */",
 "/**
	 * Get an array of existing templates, as a 2-D array
	 *
	 * @return array
	 */",
 "/**
	 * Get an array of existing images, image names in the keys
	 *
	 * @return array
	 */",
 "/**
	 * Get an array of existing external links, URLs in the keys
	 *
	 * @return array
	 */",
 "/**
	 * Get an array of existing categories, with the name in the key and sort key in the value.
	 *
	 * @return array
	 */",
 "/**
	 * Get an array of existing interlanguage links, with the language code in the key and the
	 * title in the value.
	 *
	 * @return array
	 */",
 "/**
	 * Get an array of existing inline interwiki links, as a 2-D array
	 * @return array (prefix => array(dbkey => 1))
	 */",
 "/**
	 * Get an array of existing categories, with the name in the key and sort key in the value.
	 *
	 * @return array
	 */",
 "/**
	 * Return the title object of the page being updated
	 * @return Title
	 */",
 "/**
	 * Returns parser output
	 * @since 1.19
	 * @return ParserOutput
	 */",
 "/**
	 * Return the list of images used as generated by the parser
	 * @return array
	 */",
 "/**
	 * Invalidate any necessary link lists related to page property changes
	 * @param $changed
	 */",
 "/**
 * See docs/deferred.txt
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @todo document (e.g. one-sentence top-level class description).
 */",
 "/**
	 * cleanSig() makes all templates substs and removes tildes
	 */",
 "/**
	 * cleanSig() should do nothing if disabled
	 */",
 "/**
	 * cleanSigInSig() just removes tildes
	 * @dataProvider provideStringsForCleanSigInSig
	 */",
 "/**
	 * Templates and comments are not affected, but noinclude/onlyinclude is.
	 */",
 "/**
	 * @group Database
	 */",
 "/**
	 * @group Database
	 */",
 "/**
 * Parser-related tests that don\'t suit for parserTests.txt
 */",
 "/**
 * Internationalisation file for the Nuke extension
 *
 * @file
 * @ingroup Extensions
 * @author Brion Vibber
 */",
 "/** English
 * @author Brion Vibber
 */",
 "/** Message documentation (Message documentation)
 * @author Jeroen De Dauw
 * @author Jon Harald S??by
 * @author Meno25
 * @author Purodha
 * @author SPQRobin
 * @author Siebrand
 * @author The Evil IP address
 * @author Umherirrender
 * @author Yekrats
 */",
 "/** Niuean (ko e vagahau Niu??)
 * @author Jose77
 */",
 "/** Afrikaans (Afrikaans)
 * @author Naudefj
 * @author ??????????????? ?????????????????????
 */",
 "/** Aragonese (Aragon??s)
 * @author Juanpabl
 */",
 "/** Arabic (??????????????)
 * @author Meno25
 * @author ??????????
 */",
 "/** Aramaic (??????????)
 * @author Basharh
 */",
 "/** Egyptian Spoken Arabic (????????)
 * @author Meno25
 * @author Ramsis II
 */",
 "/** Asturian (Asturianu)
 * @author Esbardu
 * @author Xuacu
 */",
 "/** Azerbaijani (Az??rbaycanca)
 * @author Cekli829
 */",
 "/** Bashkir (??????????????????)
 * @author Assele
 */",
 "/** Southern Balochi (?????????? ????????????)
 * @author Mostafadaneshvar
 */",
 "/** Belarusian (????????????????????)
 * @author Yury Tarasievich
 * @author ??????????????
 */",
 "/** Belarusian (Tara??kievica orthography) (??????????????????????? (??????????????????????)???)
 * @author EugeneZelenko
 * @author Jim-by
 * @author Wizardist
 */",
 "/** Bulgarian (??????????????????)
 * @author Borislav
 * @author DCLXVI
 * @author Spiritia
 */",
 "/** Bengali (???????????????)
 * @author Bellayet
 * @author Wikitanvir
 * @author Zaheen
 */",
 "/** Breton (Brezhoneg)
 * @author Fulup
 */",
 "/** Bosnian (Bosanski)
 * @author CERminator
 */",
 "/** Catalan (Catal??)
 * @author Aleator
 * @author Paucabot
 * @author SMP
 * @author Toniher
 */",
 "/** Chechen (??????????????)
 * @author Sasan700
 */",
 "/** Chamorro (Chamoru)
 * @author Jatrobat
 */",
 "/** Czech (??esky)
 * @author Danny B.
 * @author Jkjk
 * @author Li-sung
 * @author Mat??j Grabovsk??
 * @author Mormegil
 */",
 "/** Danish (Dansk)
 * @author Byrial
 * @author Peter Alberti
 */",
 "/** German (Deutsch)
 * @author Kghbln
 * @author Raimond Spekking
 * @author SVG
 */",
 "/** German (formal address) (???Deutsch (Sie-Form)???)
 * @author Kghbln
 * @author Raimond Spekking
 * @author SVG
 */",
 "/** Zazaki (Zazaki)
 * @author Aspar
 */",
 "/** Lower Sorbian (Dolnoserbski)
 * @author Michawiki
 */",
 "/** Ewe (E??egbe) */",
 "/** Greek (????????????????)
 * @author Dead3y3
 * @author ZaDiak
 */",
 "/** Esperanto (Esperanto)
 * @author Blahma
 * @author Yekrats
 */",
 "/** Spanish (Espa??ol)
 * @author Aleator
 * @author Armando-Martin
 * @author Crazymadlover
 * @author DJ Nietzsche
 * @author Dferg
 * @author Imre
 * @author Jatrobat
 * @author Platonides
 * @author Remember the dot
 * @author Sanbec
 */",
 "/** Estonian (Eesti)
 * @author Pikne
 */",
 "/** Basque (Euskara)
 * @author Theklan
 * @author Unai Fdz. de Beto??o
 */",
 "/** Persian (??????????)
 * @author Huji
 * @author Mjbmr
 * @author Reza1615
 * @author ZxxZxxZ
 */",
 "/** Finnish (Suomi)
 * @author Crt
 * @author Jaakonam
 * @author Nike
 * @author Olli
 */",
 "/** French (Fran??ais)
 * @author Crochet.david
 * @author Gomoko
 * @author Grondin
 * @author IAlex
 * @author Jean-Fr??d??ric
 * @author Louperivois
 * @author Peter17
 * @author Seb35
 * @author Sherbrooke
 * @author Wyz
 * @author Zetud
 */",
 "/** Franco-Proven??al (Arpetan)
 * @author ChrisPtDe
 */",
 "/** Friulian (Furlan)
 * @author Klenje
 */",
 "/** Galician (Galego)
 * @author Alma
 * @author Toli??o
 * @author Xos??
 */",
 "/** Ancient Greek (????????????? ??????????????????)
 * @author Omnipaedista
 */",
 "/** Swiss German (Alemannisch)
 * @author Als-Chl??mens
 * @author Als-Holder
 */",
 "/** Manx (Gaelg)
 * @author MacTire02
 */",
 "/** Hebrew (??????????)
 * @author Amire80
 * @author Rotem Liss
 * @author YaronSh
 */",
 "/** Hindi (??????????????????)
 * @author Ansumang
 * @author Kaustubh
 * @author Shyam
 */",
 "/** Hiligaynon (Ilonggo)
 * @author Jose77
 */",
 "/** Croatian (Hrvatski)
 * @author Dalibor Bosits
 * @author Dnik
 * @author SpeedyGonsales
 */",
 "/** Upper Sorbian (Hornjoserbsce)
 * @author Michawiki
 */",
 "/** Hungarian (Magyar)
 * @author Dani
 * @author Dj
 * @author Dorgan
 * @author KossuthRad
 * @author Misibacsi
 */",
 "/** Interlingua (Interlingua)
 * @author McDutchie
 */",
 "/** Indonesian (Bahasa Indonesia)
 * @author Bennylin
 * @author IvanLanin
 * @author Rex
 */",
 "/** Igbo (Igbo)
 * @author Ukabia
 */",
 "/** Iloko (Ilokano)
 * @author Lam-ang
 */",
 "/** Ido (Ido)
 * @author Malafaya
 */",
 "/** Icelandic (??slenska)
 * @author S.??rvarr.S
 * @author Sn??var
 */",
 "/** Italian (Italiano)
 * @author .anaconda
 * @author Beta16
 * @author BrokenArrow
 * @author Darth Kule
 * @author F. Cosoleto
 */",
 "/** Japanese (?????????)
 * @author Aotake
 * @author Fievarsty
 * @author Hosiryuhosi
 * @author JtFuruhata
 * @author Marine-Blue
 * @author Muttley
 * @author Ohgi
 * @author Schu
 * @author Shirayuki
 * @author ????????????
 */",
 "/** Jutish (Jysk)
 * @author Husl??ke
 */",
 "/** Javanese (Basa Jawa)
 * @author Meursault2004
 */",
 "/** Georgian (?????????????????????)
 * @author Alsandro
 * @author BRUTE
 * @author David1010
 * @author Dawid Deutschland
 * @author Sopho
 */",
 "/** Khmer (???????????????????????????)
 * @author Chhorran
 * @author Thearith
 * @author ???????????????????????????
 */",
 "/** Kannada (???????????????)
 * @author Nayvik
 */",
 "/** Korean (?????????)
 * @author Albamhandae
 * @author Klutzy
 * @author Kwj2772
 * @author ToePeu
 * @author ??????
 */",
 "/** Krio (Krio)
 * @author Jose77
 */",
 "/** Kinaray-a (Kinaray-a)
 * @author Jose77
 */",
 "/** Colognian (Ripoarisch)
 * @author Purodha
 */",
 "/** Luxembourgish (L??tzebuergesch)
 * @author Les Meloures
 * @author Robby
 */",
 "/** Limburgish (Limburgs)
 * @author Aelske
 * @author Matthias
 * @author Ooswesthoesbes
 * @author Pahles
 */",
 "/** Lithuanian (Lietuvi??)
 * @author Eitvys200
 * @author Homo
 * @author Matasg
 */",
 "/** Literary Chinese (??????) */",
 "/** Malagasy (Malagasy)
 * @author Jagwar
 */",
 "/** Macedonian (????????????????????)
 * @author Bjankuloski06
 */",
 "/** Malayalam (??????????????????)
 * @author Praveenp
 * @author Shijualex
 */",
 "/** Marathi (???????????????)
 * @author Kaustubh
 */",
 "/** Malay (Bahasa Melayu)
 * @author Anakmalaysia
 * @author Aviator
 */",
 "/** Maltese (Malti)
 * @author Chrisportelli
 */",
 "/** Erzya (????????????)
 * @author Botuzhaleny-sodamo
 */",
 "/** Nahuatl (N??huatl)
 * @author Fluence
 */",
 "/** Norwegian (bokm??l)??? (???Norsk (bokm??l)???)
 * @author Event
 * @author Jon Harald S??by
 * @author Nghtwlkr
 */",
 "/** Low German (Plattd????tsch)
 * @author Slomox
 */",
 "/** Nedersaksisch (Nedersaksisch)
 * @author Servien
 */",
 "/** Nepali (??????????????????)
 * @author RajeshPandey
 */",
 "/** Dutch (Nederlands)
 * @author SPQRobin
 * @author Siebrand
 */",
 "/** Norwegian Nynorsk (???Norsk (nynorsk)???)
 * @author Harald Khan
 * @author Njardarlogar
 */",
 "/** Northern Sotho (Sesotho sa Leboa)
 * @author Mohau
 */",
 "/** Occitan (Occitan)
 * @author Cedric31
 */",
 "/** Oriya (????????????)
 * @author Jnanaranjan Sahu
 * @author Psubhashish
 */",
 "/** Ossetic (????????)
 * @author Amikeco
 */",
 "/** Deitsch (Deitsch)
 * @author Xqt
 */",
 "/** Polish (Polski)
 * @author Beau
 * @author BeginaFelicysym
 * @author Derbeth
 * @author Leinad
 * @author Nux
 * @author Olgak85
 * @author Sp5uhe
 */",
 "/** Piedmontese (Piemont??is)
 * @author Borich??t
 * @author B??rto \'d S??ra
 * @author Dragon??t
 */",
 "/** Pashto (????????)
 * @author Ahmed-Najib-Biabani-Ibrahimkhel
 */",
 "/** Portuguese (Portugu??s)
 * @author 555
 * @author Hamilton Abreu
 * @author Malafaya
 */",
 "/** Brazilian Portuguese (Portugu??s do Brasil)
 * @author 555
 * @author Carla404
 * @author Eduardo.mps
 * @author Giro720
 * @author MetalBrasil
 */",
 "/** Quechua (Runa Simi)
 * @author AlimanRuna
 */",
 "/** Tarifit (Tarifit)
 * @author Jose77
 */",
 "/** Romanian (Rom??n??)
 * @author Cin
 * @author Firilacroco
 * @author KlaudiuMihaila
 * @author Mihai
 * @author Minisarm
 * @author Stelistcristi
 */",
 "/** Tarand??ne (Tarand??ne)
 * @author Joetaras
 */",
 "/** Russian (??????????????)
 * @author DR
 * @author Eugrus
 * @author HalanTul
 * @author KPu3uC B Poccuu
 * @author VasilievVV
 * @author ?????????????????? ??????????????
 */",
 "/** Rusyn (????????????????????)
 * @author Gazeb
 */",
 "/** Sakha (???????? ????????)
 * @author HalanTul
 */",
 "/** Sicilian (Sicilianu)
 * @author Santu
 */",
 "/** Sinhala (???????????????)
 * @author ?????????????????????????????????
 * @author ??????????????? ?????????????????????
 */",
 "/** Slovak (Sloven??ina)
 * @author Helix84
 */",
 "/** Slovenian (Sloven????ina)
 * @author Dbc334
 */",
 "/** Serbian (Cyrillic script) (??????????????? (????????????????)???)
 * @author Millosh
 * @author Rancher
 * @author ?????????? ??????????????????
 */",
 "/** Serbian (Latin script) (???Srpski (latinica)???)
 * @author Michaello
 * @author ?????????? ??????????????????
 */",
 "/** Seeltersk (Seeltersk)
 * @author Pyt
 */",
 "/** Sundanese (Basa Sunda)
 * @author Irwangatot
 * @author Kandar
 */",
 "/** Swedish (Svenska)
 * @author Lejonel
 * @author Tobulos1
 * @author WikiPhoenix
 */",
 "/** Swahili (Kiswahili) */",
 "/** Tamil (???????????????)
 * @author TRYPPN
 */",
 "/** Telugu (??????????????????)
 * @author Veeven
 */",
 "/** Tetum (Tetun)
 * @author MF-Warburg
 */",
 "/** Tajik (Cyrillic script) (????????????)
 * @author Ibrahim
 */",
 "/** Tajik (Latin script) (Tojik??)
 * @author Liangent
 */",
 "/** Turkmen (T??rkmen??e)
 * @author Hanberke
 */",
 "/** Tagalog (Tagalog)
 * @author AnakngAraw
 */",
 "/** Turkish (T??rk??e)
 * @author Erkan Yilmaz
 * @author Joseph
 * @author Srhat
 * @author Suelnur
 * @author Tarikozket
 */",
 "/** Tatar (Cyrillic script) (??????????????)
 * @author ????????????
 */",
 "/** Uyghur (Arabic script) (????????????????)
 * @author Alfredie
 */",
 "/** Uyghur (Latin script) (Uyghurche)
 * @author Jose77
 */",
 "/** Ukrainian (????????????????????)
 * @author AS
 * @author Ahonc
 * @author Base
 * @author Dim Grits
 * @author ????????
 */",
 "/** V??neto (V??neto)
 * @author Candalua
 */",
 "/** Veps (Veps??n kel???)
 * @author ?????????? ????????????????
 */",
 "/** Vietnamese (Ti???ng Vi???t)
 * @author Minh Nguyen
 * @author Vinhtantran
 */",
 "/** Volap??k (Volap??k)
 * @author Smeira
 */",
 "/** Yiddish (????????????)
 * @author Imre
 * @author ????????????????
 */",
 "/** Cantonese (??????)
 * @author Shinjiman
 */",
 "/** Simplified Chinese (?????????(??????)???)
 * @author Anakmalaysia
 * @author Gaoxuewei
 * @author Hydra
 * @author Liangent
 * @author PhiLiP
 * @author Shinjiman
 * @author Xiaomingyan
 * @author Yfdyh000
 * @author ???pp
 */",
 "/** Traditional Chinese (?????????(??????)???)
 * @author Anakmalaysia
 * @author Mark85296341
 * @author Shinjiman
 */",
 "/**
 * Internationalisation file for extension Renameuser.
 *
 * @file
 * @ingroup Extensions
 */",
 "/** Message documentation (Message documentation)
 * @author EugeneZelenko
 * @author Jon Harald S??by
 * @author Meno25
 * @author Nike
 * @author SPQRobin
 * @author Siebrand
 * @author The Evil IP address
 * @author Umherirrender
 */",
 "/** ?????????????????????????????? (??????????????????????????????)
 * @author MooRePrabu
 */",
 "/** Afrikaans (Afrikaans)
 * @author Naudefj
 * @author SPQRobin
 * @author ??????????????? ?????????????????????
 */",
 "/** Aragonese (Aragon??s)
 * @author Juanpabl
 * @author SMP
 */",
 "/** Old English (??nglisc)
 * @author Spacebirdy
 */",
 "/** Arabic (??????????????)
 * @author Aiman titi
 * @author DRIHEM
 * @author Meno25
 * @author Mido
 * @author OsamaK
 */",
 "/** Aramaic (??????????)
 * @author Basharh
 * @author Michaelovic
 */",
 "/** Egyptian Spoken Arabic (????????)
 * @author Ghaly
 * @author Meno25
 * @author Ramsis II
 */",
 "/** Assamese (??????????????????)
 * @author Bishnu Saikia
 * @author Gitartha.bordoloi
 */",
 "/** Asturian (Asturianu)
 * @author Esbardu
 * @author Xuacu
 */",
 "/** Azerbaijani (Az??rbaycanca)
 * @author Cekli829
 * @author Vago
 * @author Vugar 1981
 * @author Wertuose
 */",
 "/** Bashkir (??????????????????)
 * @author Assele
 * @author ????????????????
 */",
 "/** Southern Balochi (?????????? ????????????)
 * @author Mostafadaneshvar
 */",
 "/** Bikol Central (Bikol Central)
 * @author Filipinayzd
 */",
 "/** Belarusian (Tara??kievica orthography) (??????????????????????? (??????????????????????)???)
 * @author EugeneZelenko
 * @author Jim-by
 * @author Red Winged Duck
 * @author Wizardist
 */",
 "/** Bulgarian (??????????????????)
 * @author Borislav
 * @author DCLXVI
 * @author Spiritia
 * @author Turin
 */",
 "/** Bengali (???????????????)
 * @author Bellayet
 */",
 "/** Breton (brezhoneg)
 * @author Fulup
 * @author Gwendal
 * @author Y-M D
 */",
 "/** Bosnian (Bosanski)
 * @author CERminator
 */",
 "/** Catalan (Catal??)
 * @author El libre
 * @author Juanpabl
 * @author Paucabot
 * @author Qllach
 * @author SMP
 * @author Toniher
 * @author Vriullop
 */",
 "/** Chechen (??????????????)
 * @author Sasan700
 */",
 "/** Sorani (??????????) */",
 "/** Crimean Turkish (Latin script) (???Q??r??mtatarca (Latin)???)
 * @author Don Alessandro
 */",
 "/** Crimean Turkish (Cyrillic script) (??????????????????????????????? (????????????)???)
 * @author Don Alessandro
 */",
 "/** Czech (??esky)
 * @author Danny B.
 * @author Li-sung
 * @author Martin Koz??k
 * @author Mat??j Grabovsk??
 * @author Mormegil
 */",
 "/** Church Slavic (?????????????????????? / ??????????????????????????????)
 * @author Svetko
 * @author ??????
 */",
 "/** Chuvash (??????????????)
 * @author FLAGELLVM DEI
 */",
 "/** Welsh (Cymraeg)
 * @author Lloffiwr
 */",
 "/** Danish (Dansk)
 * @author Byrial
 * @author Froztbyte
 * @author Peter Alberti
 */",
 "/** German (Deutsch)
 * @author Kghbln
 * @author Raimond Spekking
 * @author Spacebirdy
 * @author The Evil IP address
 * @author Umherirrender
 */",
 "/** Zazaki (Zazaki)
 * @author Aspar
 * @author Erdemaslancan
 * @author Xoser
 */",
 "/** Lower Sorbian (Dolnoserbski)
 * @author Michawiki
 */",
 "/** Greek (????????????????)
 * @author Badseed
 * @author Consta
 * @author Dead3y3
 * @author Glavkos
 * @author Kiriakos
 * @author MF-Warburg
 * @author Omnipaedista
 * @author ZaDiak
 */",
 "/** Esperanto (Esperanto)
 * @author Tlustulimu
 * @author Yekrats
 */",
 "/** Spanish (espa??ol)
 * @author Alhen
 * @author Armando-Martin
 * @author Dferg
 * @author Diego Grez
 * @author Icvav
 * @author Jatrobat
 * @author Lin linao
 * @author Locos epraix
 * @author Remember the dot
 * @author Sanbec
 * @author Spacebirdy
 * @author Translationista
 * @author Vivaelcelta
 */",
 "/** Estonian (eesti)
 * @author Avjoska
 * @author Jaan513
 * @author Pikne
 * @author Silvar
 * @author WikedKentaur
 */",
 "/** Basque (Euskara)
 * @author An13sa
 * @author Theklan
 */",
 "/** Extremaduran (Estreme??u)
 * @author Better
 */",
 "/** Persian (??????????)
 * @author Ebraminio
 * @author Huji
 * @author Reza1615
 * @author Wayiran
 */",
 "/** Finnish (suomi)
 * @author Agony
 * @author Centerlink
 * @author Crt
 * @author Nike
 * @author Pxos
 * @author Str4nd
 */",
 "/** Faroese (F??royskt)
 * @author EileenSanda
 * @author Spacebirdy
 */",
 "/** French (Fran??ais)
 * @author Cedric31
 * @author Crochet.david
 * @author DavidL
 * @author Gomoko
 * @author Grondin
 * @author H??g??sippe Cormier
 * @author IAlex
 * @author Peter17
 * @author PieRRoMaN
 * @author Urhixidur
 * @author Verdy p
 */",
 "/** Franco-Proven??al (Arpetan)
 * @author ChrisPtDe
 */",
 "/** Friulian (Furlan)
 * @author Klenje
 */",
 "/** Western Frisian (Frysk)
 * @author SK-luuut
 * @author Snakesteuben
 */",
 "/** Irish (Gaeilge)
 * @author Alison
 */",
 "/** Galician (Galego)
 * @author Alma
 * @author Prevert
 * @author Toli??o
 */",
 "/** Ancient Greek (????????????? ??????????????????)
 * @author Omnipaedista
 */",
 "/** Swiss German (Alemannisch)
 * @author Als-Chl??mens
 * @author Als-Holder
 */",
 "/** Gujarati (?????????????????????)
 * @author KartikMistry
 * @author Sushant savla
 */",
 "/** Hebrew (??????????)
 * @author Amire80
 * @author Ofekalef
 * @author Rotem Liss
 * @author Rotemliss
 * @author YaronSh
 */",
 "/** Hindi (??????????????????)
 * @author Ansumang
 * @author Kaustubh
 */",
 "/** Fiji Hindi (Latin script) (Fiji Hindi)
 * @author Thakurji
 */",
 "/** Croatian (Hrvatski)
 * @author Dalibor Bosits
 * @author Dnik
 * @author Ex13
 * @author SpeedyGonsales
 * @author Tivek
 */",
 "/** Upper Sorbian (Hornjoserbsce)
 * @author Dundak
 * @author Michawiki
 */",
 "/** Hungarian (Magyar)
 * @author Adam78
 * @author Dani
 * @author Tgr
 */",
 "/** Interlingua (interlingua)
 * @author McDutchie
 */",
 "/** Indonesian (Bahasa Indonesia)
 * @author Bennylin
 * @author Irwangatot
 * @author IvanLanin
 * @author Rex
 */",
 "/** Igbo (Igbo)
 * @author Ukabia
 */",
 "/** Iloko (Ilokano)
 * @author Lam-ang
 */",
 "/** Ido (Ido)
 * @author Malafaya
 * @author Wyvernoid
 */",
 "/** Icelandic (??slenska)
 * @author Cessator
 * @author S.??rvarr.S
 * @author Sn??var
 * @author Spacebirdy
 * @author ??var Arnfj??r?? Bjarmason
 * @author ???????? ????????????????
 */",
 "/** Italian (italiano)
 * @author .anaconda
 * @author Beta16
 * @author BrokenArrow
 * @author Darth Kule
 * @author Gianfranco
 * @author HalphaZ
 * @author Melos
 * @author Nemo bis
 */",
 "/** Japanese (?????????)
 * @author Aotake
 * @author Broad-Sky
 * @author Fryed-peach
 * @author Hosiryuhosi
 * @author Marine-Blue
 * @author Ohgi
 * @author Shirayuki
 * @author Suisui
 * @author ????????????
 */",
 "/** Jutish (Jysk)
 * @author Husl??ke
 * @author ??ls??n
 */",
 "/** Javanese (Basa Jawa)
 * @author Meursault2004
 * @author Pras
 */",
 "/** Georgian (?????????????????????)
 * @author BRUTE
 * @author David1010
 * @author Dawid Deutschland
 * @author Malafaya
 * @author Nodar Kherkheulidze
 * @author Sopho
 */",
 "/** Kazakh (Arabic script) (????????????????? (??????????)???) */",
 "/** Kazakh (Cyrillic script) (????????????????? (??????????)???) */",
 "/** Kazakh (Latin script) (???Qazaq??a (lat??n)???) */",
 "/** Khmer (???????????????????????????)
 * @author Chhorran
 * @author Lovekhmer
 * @author Thearith
 * @author ???????????????????????????
 */",
 "/** Kannada (???????????????)
 * @author Nayvik
 * @author Shushruth
 */",
 "/** Korean (?????????)
 * @author Albamhandae
 * @author Ficell
 * @author Klutzy
 * @author Kwj2772
 * @author ToePeu
 * @author ??????
 */",
 "/** Colognian (Ripoarisch)
 * @author Purodha
 */",
 "/** Kurdish (Latin script) (???Kurd?? (lat??n??)???)
 * @author George Animal
 * @author Ghybu
 * @author Gomada
 */",
 "/** Latin (Latina)
 * @author MF-Warburg
 * @author SPQRobin
 * @author UV
 */",
 "/** Luxembourgish (L??tzebuergesch)
 * @author Les Meloures
 * @author Robby
 */",
 "/** Limburgish (Limburgs)
 * @author Matthias
 * @author Ooswesthoesbes
 * @author Pahles
 * @author Tibor
 */",
 "/** Lithuanian (Lietuvi??)
 * @author Eitvys200
 * @author Homo
 * @author Hugo.arg
 * @author Matasg
 */",
 "/** Latvian (Latvie??u)
 * @author Papuass
 * @author Xil
 */",
 "/** Malagasy (Malagasy)
 * @author Jagwar
 */",
 "/** Macedonian (????????????????????)
 * @author Bjankuloski06
 * @author Brest
 * @author Misos
 */",
 "/** Malayalam (??????????????????)
 * @author Praveenp
 * @author Shijualex
 */",
 "/** Mongolian (????????????)
 * @author Chinneeb
 */",
 "/** Marathi (???????????????)
 * @author Kaajawa
 * @author Kaustubh
 * @author Rahuldeshmukh101
 * @author V.narsikar
 */",
 "/** Malay (Bahasa Melayu)
 * @author Anakmalaysia
 * @author Aurora
 * @author Aviator
 */",
 "/** Maltese (Malti)
 * @author Chrisportelli
 * @author Roderick Mallia
 */",
 "/** Erzya (????????????)
 * @author Botuzhaleny-sodamo
 */",
 "/** Nahuatl (N??huatl)
 * @author Fluence
 */",
 "/** Min Nan Chinese (B??n-l??m-g??) */",
 "/** Norwegian (bokm??l)??? (???Norsk (bokm??l)???)
 * @author Jon Harald S??by
 * @author Nghtwlkr
 */",
 "/** Low German (Plattd????tsch)
 * @author Slomox
 */",
 "/** Nedersaksisch (Nedersaksisch)
 * @author Servien
 */",
 "/** Nepali (??????????????????) */",
 "/** Dutch (Nederlands)
 * @author Effeietsanders
 * @author SPQRobin
 * @author Siebrand
 */",
 "/** Norwegian Nynorsk (???Norsk (nynorsk)???)
 * @author Dittaeva
 * @author Gunnernett
 * @author Harald Khan
 * @author Njardarlogar
 * @author Ranveig
 */",
 "/** Northern Sotho (Sesotho sa Leboa)
 * @author Mohau
 */",
 "/** Occitan (Occitan)
 * @author Boulaur
 * @author Cedric31
 */",
 "/** Oriya (????????????)
 * @author Odisha1
 * @author Psubhashish
 */",
 "/** Ossetic (????????)
 * @author Amikeco
 */",
 "/** Picard (Picard)
 * @author Geoleplubo
 */",
 "/** Deitsch (Deitsch)
 * @author Xqt
 */",
 "/** P??lzisch (P??lzisch)
 * @author SPS
 */",
 "/** Polish (Polski)
 * @author Derbeth
 * @author Leinad
 * @author Maikking
 * @author Nux
 * @author Sovq
 * @author Sp5uhe
 * @author WarX
 * @author Wpedzich
 */",
 "/** Piedmontese (Piemont??is)
 * @author Borich??t
 * @author B??rto \'d S??ra
 * @author Dragon??t
 */",
 "/** Western Punjabi (????????????)
 * @author Khalid Mahmood
 */",
 "/** Pashto (????????)
 * @author Ahmed-Najib-Biabani-Ibrahimkhel
 */",
 "/** Portuguese (Portugu??s)
 * @author 555
 * @author Giro720
 * @author Hamilton Abreu
 * @author Malafaya
 * @author Waldir
 */",
 "/** Brazilian Portuguese (Portugu??s do Brasil)
 * @author 555
 * @author Giro720
 */",
 "/** Quechua (Runa Simi)
 * @author AlimanRuna
 */",
 "/** Romani (Romani)
 * @author Desiphral
 */",
 "/** Romanian (rom??n??)
 * @author Cin
 * @author Emily
 * @author Firilacroco
 * @author KlaudiuMihaila
 * @author Memo18
 * @author Minisarm
 * @author Stelistcristi
 */",
 "/** Tarand??ne (Tarand??ne)
 * @author Joetaras
 */",
 "/** Russian (??????????????)
 * @author Ahonc
 * @author DR
 * @author EugeneZelenko
 * @author Innv
 * @author KPu3uC B Poccuu
 * @author Kaganer
 * @author ?????????????????? ??????????????
 */",
 "/** Rusyn (????????????????????)
 * @author Gazeb
 */",
 "/** Sanskrit (???????????????????????????)
 * @author Ansumang
 */",
 "/** Sakha (???????? ????????)
 * @author HalanTul
 */",
 "/** Sardinian (Sardu)
 * @author Andria
 * @author Marzedu
 */",
 "/** Sicilian (Sicilianu)
 * @author Gmelfi
 * @author Santu
 */",
 "/** Samogitian (??emait????ka)
 * @author Hugo.arg
 */",
 "/** Serbo-Croatian (Srpskohrvatski)
 * @author OC Ripper
 */",
 "/** Sinhala (???????????????)
 * @author Budhajeewa
 * @author ???????????? ????????????????????????
 * @author ?????????????????????????????????
 * @author ???????????????
 */",
 "/** Slovak (Sloven??ina)
 * @author Helix84
 * @author Jkjk
 */",
 "/** Slovenian (Sloven????ina)
 * @author Dbc334
 */",
 "/** Lower Silesian (Schl??sch)
 * @author Schl??singer
 */",
 "/** Albanian (Shqip)
 * @author Dori
 * @author Mikullovci11
 * @author Olsi
 */",
 "/** Serbian (Cyrillic script) (??????????????? (????????????????)???)
 * @author FriedrickMILBarbarossa
 * @author Millosh
 * @author Rancher
 * @author Sasa Stefanovic
 * @author ?????????? ??????????????????
 * @author ?????????????? ????????????????????
 */",
 "/** Serbian (Latin script) (???Srpski (latinica)???)
 * @author FriedrickMILBarbarossa
 * @author Liangent
 * @author Michaello
 * @author ?????????? ??????????????????
 */",
 "/** Seeltersk (Seeltersk)
 * @author Maartenvdbent
 * @author Pyt
 */",
 "/** Sundanese (Basa Sunda)
 * @author Irwangatot
 * @author Kandar
 */",
 "/** Swedish (Svenska)
 * @author Boivie
 * @author Cohan
 * @author Dafer45
 * @author Habj
 * @author Lejonel
 * @author Lokal Profil
 * @author M.M.S.
 * @author Najami
 * @author Per
 */",
 "/** Swahili (Kiswahili) */",
 "/** Tamil (???????????????)
 * @author Shanmugamp7
 * @author TRYPPN
 */",
 "/** Telugu (??????????????????)
 * @author Chaduvari
 * @author Mpradeep
 * @author Veeven
 */",
 "/** Tetum (Tetun)
 * @author MF-Warburg
 */",
 "/** Tajik (Cyrillic script) (????????????)
 * @author Ibrahim
 */",
 "/** Tajik (Latin script) (Tojik??)
 * @author Liangent
 */",
 "/** Thai (?????????)
 * @author Harley Hartwell
 * @author Mopza
 * @author Passawuth
 */",
 "/** Turkmen (T??rkmen??e)
 * @author Hanberke
 */",
 "/** Tagalog (Tagalog)
 * @author AnakngAraw
 */",
 "/** Tongan (lea faka-Tonga) */",
 "/** Turkish (T??rk??e)
 * @author Joseph
 * @author Karduelis
 * @author Runningfridgesrule
 * @author U??ur Ba??ak
 * @author Vito Genovese
 */",
 "/** Ukrainian (????????????????????)
 * @author AS
 * @author Ahonc
 * @author EugeneZelenko
 * @author Prima klasy4na
 * @author ????????
 */",
 "/** Urdu (????????) */",
 "/** V??neto (V??neto)
 * @author Candalua
 */",
 "/** Veps (Veps??n kel???)
 * @author ?????????? ????????????????
 */",
 "/** Vietnamese (Ti???ng Vi???t)
 * @author Minh Nguyen
 * @author Vinhtantran
 */",
 "/** Volap??k (Volap??k)
 * @author Malafaya
 * @author Smeira
 */",
 "/** Walloon (walon)
 * @author Srtxg
 */",
 "/** Yiddish (????????????)
 * @author ????????????????
 */",
 "/** Yoruba (Yor??b??)
 * @author Demmy
 */",
 "/** Cantonese (??????) */",
 "/** Simplified Chinese (?????????(??????)???)
 * @author Bencmq
 * @author Gaoxuewei
 * @author Gzdavidwong
 * @author Hydra
 * @author Liangent
 * @author PhiLiP
 * @author Xiaomingyan
 * @author Yfdyh000
 */",
 "/** Traditional Chinese (?????????(??????)???)
 * @author Gaoxuewei
 * @author Horacewai2
 * @author Mark85296341
 * @author Simon Shek
 * @author Waihorace
 * @author Wrightbus
 */",
 "/** Zulu (isiZulu) */",
 "/** Kirmanjki (K??rmancki)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Mirzali
 */",
 "/**
	 *  Scan the revision table for rows stored in the specified clusters
	 */",
 "/**
	 * Scan the text table for orphan text
	 * Orphan text here does not imply DB corruption -- deleted text tracked by the
	 * archive table counts as orphan for our purposes.
	 */",
 "/**
	 * Scan the blobs table for rows not registered in blob_tracking (and thus not
	 * registered in the text table).
	 *
	 * Orphan blobs are indicative of DB corruption. They are inaccessible and
	 * should probably be deleted.
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * @param $skin Skin
	 * @param $result
	 * @return String
	 */",
 "/**
 * A special page listing redirects to non existent page. Those should be
 * fixed to point to an existing page.
 *
 * @ingroup SpecialPage
 */",
 "/**
	 * @param $image File
	 * @param  $params
	 * @return bool
	 */",
 "/**
	 * @param $image File
	 * @param  $dstPath
	 * @param  $dstUrl
	 * @param  $params
	 * @param int $flags
	 * @return ThumbnailImage|TransformParameterError
	 */",
 "/**
 * Handler for bitmap images that will be resized by clients.
 *
 * This is not used by default but can be assigned to some image types
 * using $wgMediaHandlers.
 *
 * @ingroup Media
 */",
 "/**
 * Aliases for Special:Renameuser
 *
 * @file
 * @ingroup Extensions
 */",
 "/** English (English) */",
 "/** Arabic (??????????????) */",
 "/** Egyptian Spoken Arabic (????????) */",
 "/** Bulgarian (??????????????????) */",
 "/** Banjar (Bahasa Banjar) */",
 "/** Breton (brezhoneg) */",
 "/** Bosnian (bosanski) */",
 "/** Catalan (catal??) */",
 "/** Czech (??esky) */",
 "/** German (Deutsch) */",
 "/** Zazaki (Zazaki) */",
 "/** Lower Sorbian (Dolnoserbski) */",
 "/** Divehi (????????????????????) */",
 "/** Greek (????????????????) */",
 "/** Esperanto (Esperanto) */",
 "/** Spanish (espa??ol) */",
 "/** Estonian (eesti) */",
 "/** Persian (??????????) */",
 "/** Finnish (suomi) */",
 "/** French (fran??ais) */",
 "/** Franco-Proven??al (arpetan) */",
 "/** Galician (Galego) */",
 "/** Swiss German (Alemannisch) */",
 "/** Hebrew (??????????) */",
 "/** Hindi (??????????????????) */",
 "/** Croatian (hrvatski) */",
 "/** Upper Sorbian (Hornjoserbsce) */",
 "/** Haitian (Krey??l ayisyen) */",
 "/** Hungarian (magyar) */",
 "/** Interlingua (interlingua) */",
 "/** Indonesian (Bahasa Indonesia) */",
 "/** Italian (italiano) */",
 "/** Japanese (?????????) */",
 "/** Khmer (???????????????????????????) */",
 "/** Korean (?????????) */",
 "/** Colognian (Ripoarisch) */",
 "/** Latin (Latina) */",
 "/** Luxembourgish (L??tzebuergesch) */",
 "/** Macedonian (????????????????????) */",
 "/** Malayalam (??????????????????) */",
 "/** Marathi (???????????????) */",
 "/** Malay (Bahasa Melayu) */",
 "/** Maltese (Malti) */",
 "/** Norwegian Bokm??l (???norsk (bokm??l)???) */",
 "/** Nedersaksisch (Nedersaksisch) */",
 "/** Dutch (Nederlands) */",
 "/** Norwegian Nynorsk (???norsk (nynorsk)???) */",
 "/** Occitan (occitan) */",
 "/** Polish (polski) */",
 "/** Pashto (????????) */",
 "/** Portuguese (portugu??s) */",
 "/** Brazilian Portuguese (portugu??s do Brasil) */",
 "/** Romanian (rom??n??) */",
 "/** Russian (??????????????) */",
 "/** Slovak (sloven??ina) */",
 "/** Albanian (shqip) */",
 "/** Serbian (Cyrillic script) (??????????????? (????????????????)???) */",
 "/** Swedish (svenska) */",
 "/** Swahili (Kiswahili) */",
 "/** Thai (?????????) */",
 "/** Tagalog (Tagalog) */",
 "/** Turkish (T??rk??e) */",
 "/** Vietnamese (Ti???ng Vi???t) */",
 "/** Simplified Chinese (????????????????????????) */",
 "/**
 * Aliases for Special:Nuke
 *
 * @file
 * @ingroup Extensions
 */",
 "/** English (English) */",
 "/** Arabic (??????????????) */",
 "/** Egyptian Spoken Arabic (????????) */",
 "/** Belarusian (Tara??kievica orthography) (??????????????????????? (??????????????????????)???) */",
 "/** Banjar (Bahasa Banjar) */",
 "/** German (Deutsch) */",
 "/** Zazaki (Zazaki) */",
 "/** Lower Sorbian (Dolnoserbski) */",
 "/** Spanish (espa??ol) */",
 "/** Estonian (eesti) */",
 "/** Persian (??????????) */",
 "/** Finnish (suomi) */",
 "/** Swiss German (Alemannisch) */",
 "/** Hawaiian (Hawai`i) */",
 "/** Hebrew (??????????) */",
 "/** Hindi (??????????????????) */",
 "/** Upper Sorbian (Hornjoserbsce) */",
 "/** Haitian (Krey??l ayisyen) */",
 "/** Hungarian (magyar) */",
 "/** Interlingua (interlingua) */",
 "/** Indonesian (Bahasa Indonesia) */",
 "/** Italian (italiano) */",
 "/** Japanese (?????????) */",
 "/** Korean (?????????) */",
 "/** Colognian (Ripoarisch) */",
 "/** Ladino (Ladino) */",
 "/** Luxembourgish (L??tzebuergesch) */",
 "/** Literary Chinese (??????) */",
 "/** Macedonian (????????????????????) */",
 "/** Malayalam (??????????????????) */",
 "/** Malay (Bahasa Melayu) */",
 "/** Norwegian Bokm??l (???norsk (bokm??l)???) */",
 "/** Nedersaksisch (Nedersaksisch) */",
 "/** Dutch (Nederlands) */",
 "/** Norwegian Nynorsk (???norsk (nynorsk)???) */",
 "/** Polish (polski) */",
 "/** Portuguese (portugu??s) */",
 "/** Brazilian Portuguese (portugu??s do Brasil) */",
 "/** Russian (??????????????) */",
 "/** Sanskrit (???????????????????????????) */",
 "/** Slovak (sloven??ina) */",
 "/** Swedish (svenska) */",
 "/** Tagalog (Tagalog) */",
 "/** Turkish (T??rk??e) */",
 "/** Vietnamese (Ti???ng Vi???t) */",
 "/** Simplified Chinese (????????????????????????) */",
 "/** Traditional Chinese (????????????????????????) */",
 "/**
	 * Construct an ObjectFileCache from a key and a type
	 * @param $key string
	 * @param $type string
	 * @return ObjectFileCache
	 */",
 "/**
	 * Get the base file cache directory
	 * @return string
	 */",
 "/**
 * Contain the ObjectFileCache class
 * @file
 * @ingroup Cache
 */",
 "/**
	 * Put in a file, and see if the metadata coming out is as expected.
	 * @param $filename String
	 * @param $expected Array The extracted metadata.
	 * @dataProvider dataGetMetadata
	 */",
 "/** Erzya (????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Amdf
 * @author Botuzhaleny-sodamo
 * @author Erzianj jurnalist
 * @author Kaganer
 * @author MF-Warburg
 * @author Spacebirdy
 * @author Sura
 * @author Tupikovs
 * @author Urhixidur
 * @author ?????????? ????????????????
 */",
 "/**
	 * Perform a full text search query and return a result set.
	 * If title searches are not supported or disabled, return null.
	 * STUB
	 *
	 * @param $term String: raw search term
	 * @return SearchResultSet
	 */",
 "/**
	 * Perform a title-only search query and return a result set.
	 * If title searches are not supported or disabled, return null.
	 * STUB
	 *
	 * @param $term String: raw search term
	 * @return SearchResultSet
	 */",
 "/**
	 * If this search backend can list/unlist redirects
	 * @deprecated since 1.18 Call supports( \'list-redirects\' );
	 */",
 "/**
	 * @since 1.18
	 * @param $feature String
	 * @return Boolean
	 */",
 "/**
	 * Way to pass custom data for engines
	 * @since 1.18
	 * @param $feature String
	 * @param $data Mixed
	 * @return Noolean
	 */",
 "/**
	 * When overridden in derived class, performs database-specific conversions
	 * on text to be used for searching or updating search index.
	 * Default implementation does nothing (simply returns $string).
	 *
	 * @param $string string: String to process
	 * @return string
	 */",
 "/**
	 * Transform search term in cases when parts of the query came as different GET params (when supported)
	 * e.g. for prefix queries: search=test&prefix=Main_Page/Archive -> test prefix:Main Page/Archive
	 */",
 "/**
	 * If an exact title match can be found, or a very slightly close match,
	 * return the title. If no match, returns NULL.
	 *
	 * @param $searchterm String
	 * @return Title
	 */",
 "/**
	 * Do a near match (see SearchEngine::getNearMatch) and wrap it into a
	 * SearchResultSet.
	 *
	 * @param $searchterm string
	 * @return SearchResultSet
	 */",
 "/**
	 * Really find the title match.
	 */",
 "/**
	 * Set the maximum number of results to return
	 * and how many to skip before returning the first.
	 *
	 * @param $limit Integer
	 * @param $offset Integer
	 */",
 "/**
	 * Set which namespaces the search should include.
	 * Give an array of namespace index numbers.
	 *
	 * @param $namespaces Array
	 */",
 "/**
	 * Parse some common prefixes: all (search everything)
	 * or namespace names
	 *
	 * @param $query String
	 */",
 "/**
	 * Make a list of searchable namespaces and their canonical names.
	 * @return Array
	 */",
 "/**
	 * Extract default namespaces to search from the given user\'s
	 * settings, returning a list of index numbers.
	 *
	 * @param $user User
	 * @return Array
	 */",
 "/**
	 * Find snippet highlight settings for all users
	 *
	 * @return Array contextlines, contextchars
	 */",
 "/**
	 * An array of namespaces indexes to be searched by default
	 *
	 * @return Array
	 */",
 "/**
	 * Get a list of namespace names useful for showing in tooltips
	 * and preferences
	 *
	 * @param $namespaces Array
	 */",
 "/**
	 * Return the help namespaces to be shown on Special:Search
	 *
	 * @return Array
	 */",
 "/**
	 * Return a \'cleaned up\' search string
	 *
	 * @param $text String
	 * @return String
	 */",
 "/**
	 * Load up the appropriate search engine class for the currently
	 * active database backend, and return a configured instance.
	 *
	 * @return SearchEngine
	 */",
 "/**
	 * Create or update the search index record for the given page.
	 * Title and text should be pre-processed.
	 * STUB
	 *
	 * @param $id Integer
	 * @param $title String
	 * @param $text String
	 */",
 "/**
	 * Update a search index record\'s title only.
	 * Title should be pre-processed.
	 * STUB
	 *
	 * @param $id Integer
	 * @param $title String
	 */",
 "/**
	 * Get OpenSearch suggestion template
	 *
	 * @return String
	 */",
 "/**
	 * Get internal MediaWiki Suggest template
	 *
	 * @return String
	 */",
 "/**
 * Contain a class for special pages
 * @ingroup Search
 */",
 "/**
	 * Fetch an array of regular expression fragments for matching
	 * the search terms as parsed by this engine in a text extract.
	 * STUB
	 *
	 * @return Array
	 */",
 "/**
	 * Return true if results are included in this result set.
	 * STUB
	 *
	 * @return Boolean
	 */",
 "/**
	 * Some search modes return a total hit count for the query
	 * in the entire article database. This may include pages
	 * in namespaces that would not be matched on the given
	 * settings.
	 *
	 * Return null if no total hits number is supported.
	 *
	 * @return Integer
	 */",
 "/**
	 * Some search modes return a suggested alternate term if there are
	 * no exact hits. Returns true if there is one on this set.
	 *
	 * @return Boolean
	 */",
 "/**
	 * @return String: suggested query, null if none
	 */",
 "/**
	 * @return String: HTML highlighted suggested query, \'\' if none
	 */",
 "/**
	 * Return information about how and from where the results were fetched,
	 * should be useful for diagnostics and debugging
	 *
	 * @return String
	 */",
 "/**
	 * Return a result set of hits on other (multiple) wikis associated with this one
	 *
	 * @return SearchResultSet
	 */",
 "/**
	 * Check if there are results on other wikis
	 *
	 * @return Boolean
	 */",
 "/**
	 * Fetches next search result, or false.
	 * STUB
	 *
	 * @return SearchResult
	 */",
 "/**
	 * Frees the result set, if applicable.
	 */",
 "/**
 * @ingroup Search
 */",
 "/**
 * This class is used for different SQL-based search engines shipped with MediaWiki
 */",
 "/**
 * @ingroup Search
 */",
 "/**
	 * Return a new SearchResult and initializes it with a title.
	 *
	 * @param $title Title
	 * @return SearchResult
	 */",
 "/**
	 * Return a new SearchResult and initializes it with a row.
	 *
	 * @param $row object
	 * @return SearchResult
	 */",
 "/**
	 * Initialize from a database row. Makes a Title and passes that to
	 * initFromTitle.
	 *
	 * @param $row object
	 */",
 "/**
	 * Initialize from a Title and if possible initializes a corresponding
	 * Revision and File.
	 *
	 * @param $title Title
	 */",
 "/**
	 * Check if this is result points to an invalid title
	 *
	 * @return Boolean
	 */",
 "/**
	 * Check if target page is missing, happens when index is out of date
	 *
	 * @return Boolean
	 */",
 "/**
	 * @return Title
	 */",
 "/**
	 * @return Double or null if not supported
	 */",
 "/**
	 * Lazy initialization of article text from DB
	 */",
 "/**
	 * @param $terms Array: terms to highlight
	 * @return String: highlighted text snippet, null (and not \'\') if not supported
	 */",
 "/**
	 * @param $terms Array: terms to highlight
	 * @return String: highlighted title, \'\' if not supported
	 */",
 "/**
	 * @param $terms Array: terms to highlight
	 * @return String: highlighted redirect name (redirect to this page), \'\' if none or not supported
	 */",
 "/**
	 * @return Title object for the redirect to this page, null if none or not supported
	 */",
 "/**
	 * @return string highlighted relevant section name, null if none or not supported
	 */",
 "/**
	 * @return Title object (pagename+fragment) for the section, null if none or not supported
	 */",
 "/**
	 * @return String: timestamp
	 */",
 "/**
	 * @return Integer: number of words
	 */",
 "/**
	 * @return Integer: size in bytes
	 */",
 "/**
	 * @return Boolean if hit has related articles
	 */",
 "/**
	 * @return String: interwiki prefix of the title (return iw even if title is broken)
	 */",
 "/**
 * @todo FIXME: This class is horribly factored. It would probably be better to
 * have a useful base class to which you pass some standard information, then
 * let the fancy self-highlighters extend that.
 * @ingroup Search
 */",
 "/**
	 * @param $match mixed Title if matched, else null
	 */",
 "/**
 * A SearchResultSet wrapper for SearchEngine::getNearMatch
 */",
 "/**
	 * Default implementation of wikitext highlighting
	 *
	 * @param $text String
	 * @param $terms Array: terms to highlight (unescaped)
	 * @param $contextlines Integer
	 * @param $contextchars Integer
	 * @return String
	 */",
 "/**
	 * Split text into lines and add it to extracts array
	 *
	 * @param $extracts Array: index -> $line
	 * @param $count Integer
	 * @param $text String
	 */",
 "/**
	 * Do manual case conversion for non-ascii chars
	 *
	 * @param $matches Array
	 */",
 "/**
	 * Extract part of the text from start to end, but by
	 * not chopping up words
	 * @param $text String
	 * @param $start Integer
	 * @param $end Integer
	 * @param $posStart Integer: (out) actual start position
	 * @param $posEnd Integer: (out) actual end position
	 * @return String
	 */",
 "/**
	 * Find a nonletter near a point (index) in the text
	 *
	 * @param $text String
	 * @param $point Integer
	 * @param $offset Integer: offset to found index
	 * @return Integer: nearest nonletter index, or beginning of utf8 char if none
	 */",
 "/**
	 * Search extracts for a pattern, and return snippets
	 *
	 * @param $pattern String: regexp for matching lines
	 * @param $extracts Array: extracts to search
	 * @param $linesleft Integer: number of extracts to make
	 * @param $contextchars Integer: length of snippet
	 * @param $out Array: map for highlighted snippets
	 * @param $offsets Array: map of starting points of snippets
	 * @protected
	 */",
 "/**
	 * Basic wikitext removal
	 * @protected
	 */",
 "/**
	 * callback to replace [[target|caption]] kind of links, if
	 * the target is category or image, leave it
	 *
	 * @param $matches Array
	 */",
 "/**
	 * Simple & fast snippet extraction, but gives completely unrelevant
	 * snippets
	 *
	 * @param $text String
	 * @param $terms Array
	 * @param $contextlines Integer
	 * @param $contextchars Integer
	 * @return String
	 */",
 "/**
 * Highlight bits of wikitext
 *
 * @ingroup Search
 */",
 "/**
 * Dummy class to be used when non-supported Database engine is present.
 * @todo FIXME: Dummy class should probably try something at least mildly useful,
 * such as a LIKE search through titles.
 * @ingroup Search
 */",
 "/**
	 * @param $count int
	 * @param $forms array
	 * @return string
	 */",
 "/**
 * Slovak (Sloven??ina)
 *
 * @ingroup Language
 */",
 "/**
 * Stream wrapper around 7za filter program.
 * Required since we can\'t pass an open file resource to XMLReader->open()
 * which is used for the text prefetch.
 *
 * @ingroup Maintenance
 */",
 "/**
	 * Disables all access to the load balancer, will cause all database access
	 * to throw a DBAccessError
	 */",
 "/**
	 * Get an LBFactory instance
	 *
	 * @return LBFactory
	 */",
 "/**
	 * Shut down, close connections and destroy the cached instance.
	 */",
 "/**
	 * Set the instance to be the given object
	 *
	 * @param $instance LBFactory
	 */",
 "/**
	 * Construct a factory based on a configuration array (typically from $wgLBFactoryConf)
	 * @param $conf
	 */",
 "/**
	 * Create a new load balancer object. The resulting object will be untracked,
	 * not chronology-protected, and the caller is responsible for cleaning it up.
	 *
	 * @param $wiki String: wiki ID, or false for the current wiki
	 * @return LoadBalancer
	 */",
 "/**
	 * Get a cached (tracked) load balancer object.
	 *
	 * @param $wiki String: wiki ID, or false for the current wiki
	 * @return LoadBalancer
	 */",
 "/**
	 * Create a new load balancer for external storage. The resulting object will be
	 * untracked, not chronology-protected, and the caller is responsible for
	 * cleaning it up.
	 *
	 * @param $cluster String: external storage cluster, or false for core
	 * @param $wiki String: wiki ID, or false for the current wiki
	 *
	 * @return LoadBalancer
	 */",
 "/**
	 * Get a cached (tracked) load balancer for external storage
	 *
	 * @param $cluster String: external storage cluster, or false for core
	 * @param $wiki String: wiki ID, or false for the current wiki
	 *
	 * @return LoadBalancer
	 */",
 "/**
	 * Execute a function for each tracked load balancer
	 * The callback is called with the load balancer as the first parameter,
	 * and $params passed as the subsequent parameters.
	 * @param $callback string|array
	 * @param array $params
	 */",
 "/**
	 * Prepare all tracked load balancers for shutdown
	 * STUB
	 */",
 "/**
	 * Call a method of each tracked load balancer
	 * @param $methodName string
	 * @param $args array
	 */",
 "/**
	 * Private helper for forEachLBCallMethod
	 * @param $loadBalancer
	 * @param $methodName string
	 * @param $args
	 */",
 "/**
	 * Commit changes on all master connections
	 */",
 "/**
 * An interface for generating database load balancers
 * @ingroup Database
 */",
 "/**
	 * @param $wiki
	 * @return LoadBalancer
	 */",
 "/**
	 * @param $wiki
	 * @return LoadBalancer
	 */",
 "/**
	 * @throws MWException
	 * @param $cluster
	 * @param $wiki
	 * @return LoadBalancer
	 */",
 "/**
	 * @param $cluster
	 * @param $wiki
	 * @return array
	 */",
 "/**
	 * Execute a function for each tracked load balancer
	 * The callback is called with the load balancer as the first parameter,
	 * and $params passed as the subsequent parameters.
	 * @param $callback
	 * @param $params array
	 */",
 "/**
 * A simple single-master LBFactory that gets its configuration from the b/c globals
 */",
 "/**
 * LBFactory class that throws an error on any attempt to use it.
 * This will typically be done via wfGetDB().
 * Call LBFactory::disableBackend() to start using this, and
 * LBFactory::enableBackend() to return to normal behavior
 */",
 "/**
 * Exception class for attempted DB access
 */",
 "/**
	 * Initialise a LoadBalancer to give it appropriate chronology protection.
	 *
	 * @param $lb LoadBalancer
	 */",
 "/**
	 * Notify the ChronologyProtector that the LoadBalancer is about to shut
	 * down. Saves replication positions.
	 *
	 * @param $lb LoadBalancer
	 */",
 "/**
	 * Notify the ChronologyProtector that the LBFactory is done calling shutdownLB() for now.
	 * May commit chronology data to persistent storage.
	 */",
 "/**
 * Class for ensuring a consistent ordering of events as seen by the user, despite replication.
 * Kind of like Hawking\'s [[Chronology Protection Agency]].
 */",
 "/**
	 * @param $res ResultWrapper
	 * @return UserArrayFromResult
	 */",
 "/**
	 * @param $ids array
	 * @return UserArrayFromResult
	 */",
 "/**
	 * @param $res
	 * @return UserArrayFromResult
	 */",
 "/**
	 * @param $res ResultWrapper
	 */",
 "/**
	 * @param  $row
	 * @return void
	 */",
 "/**
	 * @return int
	 */",
 "/**
	 * @return User
	 */",
 "/**
	 * @return bool
	 */",
 "/**
 * @group Database
 */",
 "/** Southern Balochi (?????????? ????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Huji
 * @author Kaganer
 * @author Mostafadaneshvar
 * @author ZxxZxxZ
 */",
 "/**
	 * Override parent
	 */",
 "/** Chamorro (Chamoru)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Diego Grez
 * @author Gadao01
 * @author Jatrobat
 * @author Magalahi
 * @author MisterWiki
 */",
 "/**
	 * Constructor.
	 *
	 * @param $request WebRequest
	 */",
 "/**
	 * Main entry point.
	 *
	 * @param $session Array: initial session array
	 *
	 * @return Array: new session array
	 */",
 "/**
	 * Find the next page in sequence that hasn\'t been completed
	 * @return int
	 */",
 "/**
	 * Start the PHP session. This may be called before execute() to start the PHP session.
	 *
	 * @return bool
	 */",
 "/**
	 * Get a hash of data identifying this MW installation.
	 *
	 * This is used by mw-config/index.php to prevent multiple installations of MW
	 * on the same cookie domain from interfering with each other.
	 *
	 * @return string
	 */",
 "/**
	 * Show an error message in a box. Parameters are like wfMsg().
	 * @param $msg
	 */",
 "/**
	 * Temporary error handler for session start debugging.
	 * @param $errno
	 * @param $errstr string
	 */",
 "/**
	 * Clean up from execute()
	 *
	 * @return array
	 */",
 "/**
	 * We\'re restarting the installation, reset the session, happyPages, etc
	 */",
 "/**
	 * Get a URL for submission back to the same script.
	 *
	 * @param $query array
	 * @return string
	 */",
 "/**
	 * Get a WebInstallerPage by name.
	 *
	 * @param $pageName String
	 * @return WebInstallerPage
	 */",
 "/**
	 * Get a session variable.
	 *
	 * @param $name String
	 * @param $default
	 */",
 "/**
	 * Set a session variable.
	 * @param $name String key for the variable
	 * @param $value Mixed
	 */",
 "/**
	 * Get the next tabindex attribute value.
	 * @return int
	 */",
 "/**
	 * Initializes language-related variables.
	 */",
 "/**
	 * Retrieves MediaWiki language from Accept-Language HTTP header.
	 *
	 * @return string
	 */",
 "/**
	 * Called by execute() before page output starts, to show a page list.
	 *
	 * @param $currentPageName String
	 */",
 "/**
	 * Get a list item for the page list.
	 *
	 * @param $pageName String
	 * @param $enabled Boolean
	 * @param $currentPageName String
	 *
	 * @return string
	 */",
 "/**
	 * Output some stuff after a page is finished.
	 */",
 "/**
	 * Get HTML for an error box with an icon.
	 *
	 * @param $text String: wikitext, get this with wfMsgNoTrans()
	 *
	 * @return string
	 */",
 "/**
	 * Get HTML for a warning box with an icon.
	 *
	 * @param $text String: wikitext, get this with wfMsgNoTrans()
	 *
	 * @return string
	 */",
 "/**
	 * Get HTML for an info box with an icon.
	 *
	 * @param $text String: wikitext, get this with wfMsgNoTrans()
	 * @param $icon String: icon name, file in skins/common/images
	 * @param $class String: additional class name to add to the wrapper div
	 *
	 * @return string
	 */",
 "/**
	 * Get small text indented help for a preceding form field.
	 * Parameters like wfMsg().
	 *
	 * @param $msg
	 * @return string
	 */",
 "/**
	 * Output a help box.
	 * @param $msg String key for wfMsg()
	 */",
 "/**
	 * Show a short informational message.
	 * Output looks like a list.
	 *
	 * @param $msg string
	 */",
 "/**
	 * @param $status Status
	 */",
 "/**
	 * Label a control by wrapping a config-input div around it and putting a
	 * label before it.
	 *
	 * @param $msg
	 * @param $forId
	 * @param $contents
	 * @param $helpData string
	 * @return string
	 */",
 "/**
	 * Get a labelled text box to configure a variable.
	 *
	 * @param $params Array
	 *    Parameters are:
	 *      var:        The variable to be configured (required)
	 *      label:      The message name for the label (required)
	 *      attribs:    Additional attributes for the input element (optional)
	 *      controlName: The name for the input element (optional)
	 *      value:      The current value of the variable (optional)
	 *      help:		The html for the help text (optional)
	 *
	 * @return string
	 */",
 "/**
	 * Get a labelled textarea to configure a variable
	 *
	 * @param $params Array
	 *    Parameters are:
	 *      var:        The variable to be configured (required)
	 *      label:      The message name for the label (required)
	 *      attribs:    Additional attributes for the input element (optional)
	 *      controlName: The name for the input element (optional)
	 *      value:      The current value of the variable (optional)
	 *      help:		The html for the help text (optional)
	 *
	 * @return string
	 */",
 "/**
	 * Get a labelled password box to configure a variable.
	 *
	 * Implements password hiding
	 * @param $params Array
	 *    Parameters are:
	 *      var:        The variable to be configured (required)
	 *      label:      The message name for the label (required)
	 *      attribs:    Additional attributes for the input element (optional)
	 *      controlName: The name for the input element (optional)
	 *      value:      The current value of the variable (optional)
	 *      help:		The html for the help text (optional)
	 *
	 * @return string
	 */",
 "/**
	 * Get a labelled checkbox to configure a boolean variable.
	 *
	 * @param $params Array
	 *    Parameters are:
	 *      var:        The variable to be configured (required)
	 *      label:      The message name for the label (required)
	 *      attribs:    Additional attributes for the input element (optional)
	 *      controlName: The name for the input element (optional)
	 *      value:      The current value of the variable (optional)
	 *      help:		The html for the help text (optional)
	 *
	 * @return string
	 */",
 "/**
	 * Get a set of labelled radio buttons.
	 *
	 * @param $params Array
	 *    Parameters are:
	 *      var:            The variable to be configured (required)
	 *      label:          The message name for the label (required)
	 *      itemLabelPrefix: The message name prefix for the item labels (required)
	 *      values:         List of allowed values (required)
	 *      itemAttribs     Array of attribute arrays, outer key is the value name (optional)
	 *      commonAttribs   Attribute array applied to all items
	 *      controlName:    The name for the input element (optional)
	 *      value:          The current value of the variable (optional)
	 *      help:		The html for the help text (optional)
	 *
	 * @return string
	 */",
 "/**
	 * Output an error or warning box using a Status object.
	 *
	 * @param $status Status
	 */",
 "/**
	 * Convenience function to set variables based on form data.
	 * Assumes that variables containing \"password\" in the name are (potentially
	 * fake) passwords.
	 *
	 * @param $varNames Array
	 * @param $prefix String: the prefix added to variables to obtain form names
	 *
	 * @return array
	 */",
 "/**
	 * Helper for Installer::docLink()
	 *
	 * @param $page
	 * @return string
	 */",
 "/**
	 * Extension tag hook for a documentation link.
	 *
	 * @param $linkText
	 * @param $attribs
	 * @param $parser
	 * @return string
	 */",
 "/**
	 * Helper for \"Download LocalSettings\" link on WebInstall_Complete
	 *
	 * @param $text
	 * @param $attribs
	 * @param $parser
	 * @return String Html for download link
	 */",
 "/**
	 * @return bool
	 */",
 "/**
 * Class for the core installer web interface.
 *
 * @ingroup Deployment
 * @since 1.17
 */",
 "/**
	 * @param $image File
	 * @param $params array Transform parameters. Entries with the keys \'width\'
	 * and \'height\' are the respective screen width and height, while the keys
	 * \'physicalWidth\' and \'physicalHeight\' indicate the thumbnail dimensions.
	 * @return bool
	 */",
 "/**
	 * Extracts the width/height if the image will be scaled before rotating
	 *
	 * This will match the physical size/aspect ratio of the original image
	 * prior to application of the rotation -- so for a portrait image that\'s
	 * stored as raw landscape with 90-degress rotation, the resulting size
	 * will be wider than it is tall.
	 *
	 * @param $params array Parameters as returned by normaliseParams
	 * @param $rotation int The rotation angle that will be applied
	 * @return array ($width, $height) array
	 */",
 "/**
	 * Function that returns the number of pixels to be thumbnailed.
	 * Intended for animated GIFs to multiply by the number of frames.
	 *
	 * @param File $image
	 * @return int
	 */",
 "/**
	 * @param $image File
	 * @param  $dstPath
	 * @param  $dstUrl
	 * @param  $params
	 * @param int $flags
	 * @return MediaTransformError|ThumbnailImage|TransformParameterError
	 */",
 "/**
	 * Returns which scaler type should be used. Creates parent directories
	 * for $dstPath and returns \'client\' on error
	 *
	 * @return string client,im,custom,gd
	 */",
 "/**
	 * Get a ThumbnailImage that respresents an image that will be scaled
	 * client side
	 *
	 * @param $image File File associated with this thumbnail
	 * @param $params array Array with scaler params
	 * @return ThumbnailImage
	 *
	 * @fixme no rotation support
	 */",
 "/**
	 * Transform an image using ImageMagick
	 *
	 * @param $image File File associated with this thumbnail
	 * @param $params array Array with scaler params
	 *
	 * @return MediaTransformError Error object if error occured, false (=no error) otherwise
	 */",
 "/**
	 * Transform an image using the Imagick PHP extension
	 *
	 * @param $image File File associated with this thumbnail
	 * @param $params array Array with scaler params
	 *
	 * @return MediaTransformError Error object if error occured, false (=no error) otherwise
	 */",
 "/**
	 * Transform an image using a custom command
	 *
	 * @param $image File File associated with this thumbnail
	 * @param $params array Array with scaler params
	 *
	 * @return MediaTransformError Error object if error occured, false (=no error) otherwise
	 */",
 "/**
	 * Log an error that occured in an external process
	 *
	 * @param $retval int
	 * @param $err int
	 * @param $cmd string
	 */",
 "/**
	 * Get a MediaTransformError with error \'thumbnail_error\'
	 *
	 * @param $params array Parameter array as passed to the transform* functions
	 * @param $errMsg string Error message
	 * @return MediaTransformError
	 */",
 "/**
	 * Transform an image using the built in GD library
	 *
	 * @param $image File File associated with this thumbnail
	 * @param $params array Array with scaler params
	 *
	 * @return MediaTransformError Error object if error occured, false (=no error) otherwise
	 */",
 "/**
	*EscapeastringforImageMagick\'spropertyinput(e.g.-set-comment)
	*SeeInterpretImageProperties()inmagick/property.c
	*/",
 "/**
	*EscapeastringforImageMagick\'sinputfilenames.SeeExpandFilenames()
	*andGetPathComponent()inmagick/utility.c.
	*
	*Thiswon\'tworkwithaninitial~or@,soinputfilesshouldbeprefixed
	*withthedirectoryname.
	*
	*GlobcharacterunescapingisbrokeninImageMagickbefore6.6.1-5,but
	*it\'sbrokeninawaythatdoesn\'tinvolvetryingtoconverteveryfile
	*inadirectory,sowe\'rebetteroffescapingandwaitingforthebugfix
	*tofilterdowntousers.
	*
	*@param$pathstringThefilepath
	*@param$scenestringThescenespecification,orfalseifthereisnone
	*/",
 "/**
	*EscapeastringforImageMagick\'soutputfilename.See
	*InterpretImageFilename()inmagick/image.c.
	*/",
 "/**
	*ArmourastringagainstImageMagick\'sGetPathComponent().Thisisa
	*helperfunctionforescapeMagickInput()andescapeMagickOutput().
	*
	*@param$pathstringThefilepath
	*@param$scenestringThescenespecification,orfalseifthereisnone
	*/",
 "/**
	*RetrievetheversionoftheinstalledImageMagick
	*YoucanusePHPsversion_compare()tousethisvalue
	*Valueiscachedforonehour.
	*@returnStringrepresentingtheIMversion.
	*/",
 "/**
	*Onsupportingimageformats,trytoreadoutthelow-levelorientation
	*ofthefileandreturntheanglethatthefileneedstoberotatedto
	*beviewed.
	*
	*Thisinformationisonlyusefulwhenmanipulatingtheoriginalfile;
	*thewidthandheightwenormallyworkwithislogical,andwillmatch
	*anyproducedoutputviews.
	*
	*ThebaseBitmapHandlerdoesn\'tunderstandanymetadataformats,sothis
	*isleftuptochildclassestoimplement.
	*
	*@param$fileFile
	*@returnint0,90,180or270
	*/",
 "/**
	*Returnswhetherthecurrentscalersupportsrotation(imandgddo)
	*
	*@returnbool
	*/",
 "/**
	*Rerurnswhetherthefileneedstoberendered.Returnstrueifthe
	*filerequiresrotationandweareabletorotateit.
	*
	*@param$fileFile
	*@returnbool
	*/",
 "/**
*Generichandlerforbitmapimages
*
*@ingroupMedia
*/",
 "/**
 * Selenium server manager
 *
 * @file
 * @ingroup Testing
 * Copyright (C) 2010 Nadeesha Weerasinghe <nadeesha@calcey.com>
 * http://www.calcey.com/ 
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @addtogroup Testing
 *
 */",
 "/**
 * API YAML output formatter
 * @ingroup API
 */",
 "/**
 * Helper function to convert wildcard string into a regex
 * \'*\' => \'.*?\'
 * \'?\' => \'.\'
 *
 * @param $search string
 * @return string
 */",
 "/**
	 * Add page properties to an ApiResult, adding a continue
	 * parameter if it doesn\'t fit.
	 *
	 * @param $result ApiResult
	 * @param $page int
	 * @param $props array
	 * @return bool True if it fits in the result
	 */",
 "/**
 * A query module to show basic page information.
 *
 * @ingroup API
 */",
 "/** Slovenian (Sloven????ina)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Dbc334
 * @author Freakolowsky
 * @author McDutchie
 * @author Smihael
 * @author XJamRastafire
 * @author Yerpo
 * @author romanm
 * @author sl.wikipedia.org administrators
 */",
 "/**
 * The date format to use for generated dates in the user interface.
 * This may be one of the above date preferences, or the special value
 * \"dmy or mdy\", which uses mdy if $wgAmericanDates is true, and dmy
 * if $wgAmericanDates is false.
 */",
 "/** Sassaresu (Sassaresu)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Antofa
 * @author Cornelia
 * @author Felis
 * @author Kaganer
 */",
 "/**
	 * @param $resultPageSet ApiPageSet
	 * @return void
	 */",
 "/**
 * Query module to perform full text search within wiki titles and content
 *
 * @ingroup API
 */",
 "/**
	 * Entry point : initialise variables and call subfunctions.
	 *
	 * @param $par String: becomes \"FOO\" when called like Special:Allpages/FOO (default NULL)
	 */",
 "/**
	 * HTML for the top form
	 *
	 * @param $namespace Integer: a namespace constant (default NS_MAIN).
	 * @param $from String: dbKey we are starting listing at.
	 * @param $to String: dbKey we are ending listing at.
	 */",
 "/**
	 * @param $namespace Integer (default NS_MAIN)
	 * @param $from String: list all pages from this name
	 * @param $to String: list all pages to this name
	 */",
 "/**
	 * Show a line of \"ABC to DEF\" ranges of articles
	 *
	 * @param $inpoint String: lower limit of pagenames
	 * @param $outpoint String: upper limit of pagenames
	 * @param $namespace Integer (Default NS_MAIN)
	 */",
 "/**
	 * @param $namespace Integer (Default NS_MAIN)
	 * @param $from String: list all pages from this name (default FALSE)
	 * @param $to String: list all pages to this name (default FALSE)
	 */",
 "/**
	 * @param $ns Integer: the namespace of the article
	 * @param $text String: the name of the article
	 * @return array( int namespace, string dbkey, string pagename ) or NULL on error
	 */",
 "/**
 * Implements Special:Allpages
 *
 * @ingroup SpecialPage
 */",
 "/**
	 * Convert from the nominative form of a noun to other cases.
	 * Invoked with {{GRAMMAR:case|word}} inside messages.
	 *
	 * case is a sequence of words, each of which is case insensitive.
	 * Between words, there must be at least one space character.
	 * Only the 1st character of each word is considered.
	 * Word order is irrelevant.
	 *
	 * Possible values specifying the grammatical case are:
	 *	1, Nominative
	 *	2, Genitive
	 *	3, Dative
	 *	4, Accusative, -omitted-
	 *
	 * Possible values specifying the article type are:
	 *	Betoont               focussed or stressed article
	 *	-omitted-             unstressed or unfocussed article
	 *
	 * Possible values for the type of genitive are:
	 *	Sing, Iehr            prepositioned genitive = possessive dative
	 *	Vun, Fon, -omitted-   postpositioned genitive
	 *	                               = preposition \"vun\" with dative
	 *
	 * Values of case overrides & prepositions, in the order of preceedence:
	 *	Sing, Iehr            possessive dative = prepositioned genitive
	 *	Vun, Fon              preposition \"vun\" with dative
	 *	                                     = postpositioned genitive
	 *	En, em                preposition \"en\" with dative
	 *
	 * Values for object gender specifiers of the possessive dative, or
	 * prepositioned genitive, evaluated with \"Sing, Iehr\" of above only:
	 *	Male                  a singular male object follows
	 *	-omitted-             a non-male or plural object follows
	 *
	 * We currently handle definite articles of the singular only.
	 * There is a full set of test cases at:
	 * http://translatewiki.net/wiki/Portal:Ksh#GRAMMAR_Pr%C3%B6%C3%B6fe
	 * Contents of the leftmost table column can be copied and pasted as
	 * \"case\" values.
	 *
	 * @param $word String
	 * @param $case String
	 *
	 * @return string
	 */",
 "/**
	 * Avoid grouping whole numbers between 0 to 9999
	 *
	 * @param $_ string
	 *
	 * @return string
	 */",
 "/**
	 * Handle cases of (1, other, 0) or (1, other)
	 *
	 * @param $count int
	 * @param $forms array
	 *
	 * @return string
	 */",
 "/** Ripuarian (Ripoar??sh)
 *
 * @ingroup Language
 *
 * @author Purodha Blissenbach
 */",
 "/**
	 * returns a string containing the following in order:
	 *	 textid
	 *	 \n
	 *	 length of text (-1 on error = failure to retrieve/unserialize/gunzip/etc)
	 *	 \n
	 *	 text  (may be empty)
	 *
	 * note that that the text string itself is *not* followed by newline
	 */",
 "/**
	 * May throw a database error if, say, the server dies during query.
	 * @param $db DatabaseBase object
	 * @param $id int The old_id
	 * @return String
	 */",
 "/**
	 * @todo Document
	 * @param $fix Boolean: whether or not to fix broken entries
	 * @param $suffix String: suffix to append to renamed articles
	 *
	 * @return bool
	 */",
 "/**
	 * Get the interwiki list
	 *
	 * @todo Needs to respect interwiki cache!
	 * @return Array
	 */",
 "/**
	 * @todo Document
	 * @param $ns Integer: a namespace id
	 * @param $name String
	 * @param $fix Boolean: whether to fix broken entries
	 * @param $suffix String: suffix to append to renamed articles
	 * @return bool
	 */",
 "/**
	 * @todo: do this for reals
	 * @param $key
	 * @param $prefix
	 * @param $fix
	 * @param $suffix string
	 * @return bool
	 */",
 "/**
	 * Find pages in mainspace that have a prefix of the new namespace
	 * so we know titles that will need migrating
	 *
	 * @param $ns Integer: namespace id (id for new namespace?)
	 * @param $name String: prefix that is being made a namespace
	 *
	 * @return array
	 */",
 "/**
	 * Report any conflicts we find
	 *
	 * @return bool
	 */",
 "/**
	 * Resolve any conflicts
	 *
	 * @param $row Object: row from the page table to fix
	 * @param $resolvable Boolean
	 * @param $suffix String: suffix to append to the fixed page
	 * @return bool
	 */",
 "/**
	 * Resolve a given conflict
	 *
	 * @param $row Object: row from the old broken entry
	 * @param $table String: table to update
	 * @param $prefix String: prefix for column name, like page or ar
	 * @return bool
	 */",
 "/**
	 * @param $file
	 * @return bool
	 */",
 "/**
	 * Render files as PNG
	 *
	 * @param $ext
	 * @param $mime
	 * @param $params
	 * @return array
	 */",
 "/**
	 * Get width and height from the XCF header.
	 *
	 * @param $image
	 * @param $filename
	 * @return array
	 */",
 "/**
	 * Metadata for a given XCF file
	 *
	 * Will return false if file magic signature is not recognized
	 * @author Hexmode
	 * @author Hashar
	 *
	 * @param $filename String Full path to a XCF file
	 * @return false|metadata array just like PHP getimagesize()
	 */",
 "/**
	 * Must use \"im\" for XCF
	 *
	 * @return string
	 */",
 "/**
 * Handler for the Gimp\'s native file format; getimagesize() doesn\'t
 * support these files
 *
 * @ingroup Media
 */",
 "/** Franco-Proven??al (Arpetan)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Cedric31
 * @author ChrisPtDe
 * @author Reedy
 * @author ???????? ????????????????
 */",
 "/** Walloon (Walon)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Lucyin
 * @author Srtxg
 * @author Urhixidur
 * @author ???????? ????????????????
 */",
 "/** Samogitian
 *
 * ISO 639-3 code \'sgs\' should be used. This is code is maintained for backward
 * compatilibity.
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 */",
 "/** Navajo (Din?? bizaad)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Reedy
 * @author Seb az86556
 * @author ???????? ????????????????
 */",
 "/**
	 * Constructor
	 *
	 * @param $title String|Title Item\'s title
	 * @param $description String
	 * @param $url String: URL uniquely designating the item.
	 * @param $date String: Item\'s date
	 * @param $author String: Author\'s user name
	 * @param $comments String
	 */",
 "/**
	 * Encode $string so that it can be safely embedded in a XML document
	 *
	 * @param $string String: string to encode
	 * @return String
	 */",
 "/**
	 * Get the unique id of this item
	 *
	 * @return String
	 */",
 "/**
	 * set the unique id of an item
	 *
	 * @param $uniqueId String: unique id for the item
	 * @param $rssIsPermalink Boolean: set to true if the guid (unique id) is a permalink (RSS feeds only)
	 */",
 "/**
	 * Get the title of this item; already xml-encoded
	 *
	 * @return String
	 */",
 "/**
	 * Get the URL of this item; already xml-encoded
	 *
	 * @return String
	 */",
 "/**
	 * Get the description of this item; already xml-encoded
	 *
	 * @return String
	 */",
 "/**
	 * Get the language of this item
	 *
	 * @return String
	 */",
 "/**
	 * Get the title of this item
	 *
	 * @return String
	 */",
 "/**
	 * Get the author of this item; already xml-encoded
	 *
	 * @return String
	 */",
 "/**
	 * Get the comment of this item; already xml-encoded
	 *
	 * @return String
	 */",
 "/**
	 * Quickie hack... strip out wikilinks to more legible form from the comment.
	 *
	 * @param $text String: wikitext
	 * @return String
	 */",
 "/**
 * A base class for basic support for outputting syndication feeds in RSS and other formats.
 *
 * @ingroup Feed
 */",
 "/**
	 * Generate Header of the feed
	 */",
 "/**
	 * Generate an item
	 * @param $item
	 */",
 "/**
	 * Generate Footer of the feed
	 */",
 "/**
	 * Setup and send HTTP headers. Don\'t send any content;
	 * content might end up being cached and re-sent with
	 * these same headers later.
	 *
	 * This should be called from the outHeader() method,
	 * but can also be called separately.
	 */",
 "/**
	 * Return an internet media type to be sent in the headers.
	 *
	 * @return string
	 * @private
	 */",
 "/**
	 * Output the initial XML headers with a stylesheet for legibility
	 * if someone finds it in a browser.
	 * @private
	 */",
 "/**
 * @todo document (needs one-sentence top-level class description).
 * @ingroup Feed
 */",
 "/**
	 * Format a date given a timestamp
	 *
	 * @param $ts Integer: timestamp
	 * @return String: date string
	 */",
 "/**
	 * Ouput an RSS 2.0 header
	 */",
 "/**
	 * Output an RSS 2.0 item
	 * @param $item FeedItem: item to be output
	 */",
 "/**
	 * Ouput an RSS 2.0 footer
	 */",
 "/**
 * Generate a RSS feed
 *
 * @ingroup Feed
 */",
 "/**
	 * @todo document
	 */",
 "/**
	 * Outputs a basic header for Atom 1.0 feeds.
	 */",
 "/**
	 * Atom 1.0 requires a unique, opaque IRI as a unique indentifier
	 * for every feed we create. For now just use the URL, but who
	 * can tell if that\'s right? If we put options on the feed, do we
	 * have to change the id? Maybe? Maybe not.
	 *
	 * @return string
	 * @private
	 */",
 "/**
	 * Atom 1.0 requests a self-reference to the feed.
	 * @return string
	 * @private
	 */",
 "/**
	 * Output a given item.
	 * @param $item
	 */",
 "/**
	 * Outputs the footer for Atom 1.0 feed (basicly \'\</feed\>\').
	 */",
 "/**
 * Generate an Atom feed
 *
 * @ingroup Feed
 */",
 "/**
 * @ingroup Templates
 */",
 "/**
	 * Constructor.
	 *
	 * @param $parent WebInstaller
	 */",
 "/**
	 * Get the raw vector CSS, flipping if needed
	 * @param $dir String \'ltr\' or \'rtl\'
	 * @return String
	 */",
 "/**
	 * <link> to index.php?css=foobar for the <head>
	 * @return String
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * Get whether the header has been output
	 * @return bool
	 */",
 "/**
 * Output class modelled on OutputPage.
 *
 * I\'ve opted to use a distinct class rather than derive from OutputPage here in
 * the interests of separation of concerns: if we used a subclass, there would be
 * quite a lot of things you could do in OutputPage that would break the installer,
 * that wouldn\'t be immediately obvious.
 *
 * @ingroup Deployment
 * @since 1.17
 */",
 "/** Bulgarian (??????????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author BloodIce
 * @author Borislav
 * @author DCLXVI
 * @author Daggerstab
 * @author Kaganer
 * @author Spiritia
 * @author Stanqo
 * @author Turin
 * @author Urhixidur
 * @author Vladimir Penov
 * @author ?????????? ????????????
 * @author ???????? ????????????????
 */",
 "/**
	 * Stream a file to the browser, adding all the headings and fun stuff.
	 * Headers sent include: Content-type, Content-Length, Last-Modified,
	 * and Content-Disposition.
	 * 
	 * @param $fname string Full name and path of the file to stream
	 * @param $headers array Any additional headers to send
	 * @param $sendErrors bool Send error messages if errors occur (like 404)
	 * @return bool Success
	 */",
 "/**
	 * Call this function used in preparation before streaming a file.
	 * This function does the following:
	 * (a) sends Last-Modified, Content-type, and Content-Disposition headers
	 * (b) cancels any PHP output buffering and automatic gzipping of output
	 * (c) sends Content-Length header based on HTTP_IF_MODIFIED_SINCE check
	 *
	 * @param $path string Storage path or file system path
	 * @param $info Array|false File stat info with \'mtime\' and \'size\' fields
	 * @param $headers Array Additional headers to send
	 * @param $sendErrors bool Send error messages if errors occur (like 404)
	 * @return int|false READY_STREAM, NOT_MODIFIED, or false on failure
	 */",
 "/**
	 * Determine the file type of a file based on the path
	 * 
	 * @param $filename string Storage path or file system path
	 * @param $safe bool Whether to do retroactive upload blacklist checks
	 * @return null|string
	 */",
 "/**
 * Functions related to the output of file content
 *
 * @file
 */",
 "/**
 * A query module to list all interwiki links on a page
 *
 * @ingroup API
 */",
 "/**
	 * Extract relevant query arguments from the http request uri\'s path
	 * to be merged with the normal php provided query arguments.
	 * Tries to use the REQUEST_URI data if available and parses it
	 * according to the wiki\'s configuration looking for any known pattern.
	 *
	 * If the REQUEST_URI is not provided we\'ll fall back on the PATH_INFO
	 * provided by the server if any and use that to set a \'title\' parameter.
	 *
	 * @param $want string: If this is not \'all\', then the function
	 * will return an empty array if it determines that the URL is
	 * inside a rewrite path.
	 *
	 * @return Array: Any query arguments found in path matches.
	 */",
 "/**
	 * Work out an appropriate URL prefix containing scheme and host, based on
	 * information detected from $_SERVER
	 *
	 * @return string
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * Check for title, action, and/or variant data in the URL
	 * and interpolate it into the GET variables.
	 * This should only be run after $wgContLang is available,
	 * as we may need the list of language variants to determine
	 * available variant URLs.
	 */",
 "/**
	 * URL rewriting function; tries to extract page title and,
	 * optionally, one other fixed parameter value from a URL path.
	 *
	 * @param $path string: the URL path given from the client
	 * @param $bases array: one or more URLs, optionally with $1 at the end
	 * @param $key string: if provided, the matching key in $bases will be
	 *             passed on as the value of this URL parameter
	 * @return array of URL variables to interpolate; empty if no match
	 */",
 "/**
	 * Recursively strips slashes from the given array;
	 * used for undoing the evil that is magic_quotes_gpc.
	 *
	 * @param $arr array: will be modified
	 * @param $topLevel bool Specifies if the array passed is from the top
	 * level of the source. In PHP5 magic_quotes only escapes the first level
	 * of keys that belong to an array.
	 * @return array the original array
	 * @see http://www.php.net/manual/en/function.get-magic-quotes-gpc.php#49612
	 */",
 "/**
	 * If magic_quotes_gpc option is on, run the global arrays
	 * through fix_magic_quotes to strip out the stupid slashes.
	 * WARNING: This should only be done once! Running a second
	 * time could damage the values.
	 */",
 "/**
	 * Recursively normalizes UTF-8 strings in the given array.
	 *
	 * @param $data string or array
	 * @return cleaned-up version of the given
	 * @private
	 */",
 "/**
	 * Fetch a value from the given array or return $default if it\'s not set.
	 *
	 * @param $arr Array
	 * @param $name String
	 * @param $default Mixed
	 * @return mixed
	 */",
 "/**
	 * Fetch a scalar from the input or return $default if it\'s not set.
	 * Returns a string. Arrays are discarded. Useful for
	 * non-freeform text inputs (e.g. predefined internal text keys
	 * selected by a drop-down menu). For freeform input, see getText().
	 *
	 * @param $name String
	 * @param $default String: optional default (or NULL)
	 * @return String
	 */",
 "/**
	 * Set an arbitrary value into our get/post data.
	 *
	 * @param $key String: key name to use
	 * @param $value Mixed: value to set
	 * @return Mixed: old value if one was present, null otherwise
	 */",
 "/**
	 * Fetch an array from the input or return $default if it\'s not set.
	 * If source was scalar, will return an array with a single element.
	 * If no source and no default, returns NULL.
	 *
	 * @param $name String
	 * @param $default Array: optional default (or NULL)
	 * @return Array
	 */",
 "/**
	 * Fetch an array of integers, or return $default if it\'s not set.
	 * If source was scalar, will return an array with a single element.
	 * If no source and no default, returns NULL.
	 * If an array is returned, contents are guaranteed to be integers.
	 *
	 * @param $name String
	 * @param $default Array: option default (or NULL)
	 * @return Array of ints
	 */",
 "/**
	 * Fetch an integer value from the input or return $default if not set.
	 * Guaranteed to return an integer; non-numeric input will typically
	 * return 0.
	 *
	 * @param $name String
	 * @param $default Integer
	 * @return Integer
	 */",
 "/**
	 * Fetch an integer value from the input or return null if empty.
	 * Guaranteed to return an integer or null; non-numeric input will
	 * typically return null.
	 *
	 * @param $name String
	 * @return Integer
	 */",
 "/**
	 * Fetch a boolean value from the input or return $default if not set.
	 * Guaranteed to return true or false, with normal PHP semantics for
	 * boolean interpretation of strings.
	 *
	 * @param $name String
	 * @param $default Boolean
	 * @return Boolean
	 */",
 "/**
	 * Fetch a boolean value from the input or return $default if not set.
	 * Unlike getBool, the string \"false\" will result in boolean false, which is
	 * useful when interpreting information sent from JavaScript.
	 *
	 * @param $name String
	 * @param $default Boolean
	 * @return Boolean
	 */",
 "/**
	 * Return true if the named value is set in the input, whatever that
	 * value is (even \"0\"). Return false if the named value is not set.
	 * Example use is checking for the presence of check boxes in forms.
	 *
	 * @param $name String
	 * @return Boolean
	 */",
 "/**
	 * Fetch a text string from the given array or return $default if it\'s not
	 * set. Carriage returns are stripped from the text, and with some language
	 * modules there is an input transliteration applied. This should generally
	 * be used for form <textarea> and <input> fields. Used for user-supplied
	 * freeform text input (for which input transformations may be required - e.g.
	 * Esperanto x-coding).
	 *
	 * @param $name String
	 * @param $default String: optional
	 * @return String
	 */",
 "/**
	 * Extracts the given named values into an array.
	 * If no arguments are given, returns all input values.
	 * No transformation is performed on the values.
	 *
	 * @return array
	 */",
 "/**
	 * Returns the names of all input values excluding those in $exclude.
	 *
	 * @param $exclude Array
	 * @return array
	 */",
 "/**
	 * Get the values passed in the query string.
	 * No transformation is performed on the values.
	 *
	 * @return Array
	 */",
 "/**
	 * Returns true if the present request was reached by a POST operation,
	 * false otherwise (GET, HEAD, or command-line).
	 *
	 * Note that values retrieved by the object may come from the
	 * GET URL etc even on a POST request.
	 *
	 * @return Boolean
	 */",
 "/**
	 * Returns true if there is a session cookie set.
	 * This does not necessarily mean that the user is logged in!
	 *
	 * If you want to check for an open session, use session_id()
	 * instead; that will also tell you if the session was opened
	 * during the current request (in which case the cookie will
	 * be sent back to the client at the end of the script run).
	 *
	 * @return Boolean
	 */",
 "/**
	 * Get a cookie from the $_COOKIE jar
	 *
	 * @param $key String: the name of the cookie
	 * @param $prefix String: a prefix to use for the cookie name, if not $wgCookiePrefix
	 * @param $default Mixed: what to return if the value isn\'t found
	 * @return Mixed: cookie value or $default if the cookie not set
	 */",
 "/**
	 * Return the path and query string portion of the request URI.
	 * This will be suitable for use as a relative link in HTML output.
	 *
	 * @return String
	 */",
 "/**
	 * Return the request URI with the canonical service and hostname, path,
	 * and query string. This will be suitable for use as an absolute link
	 * in HTML or other output.
	 *
	 * If $wgServer is protocol-relative, this will return a fully
	 * qualified URL with the protocol that was used for this request.
	 *
	 * @return String
	 */",
 "/**
	 * Take an arbitrary query and rewrite the present URL to include it
	 * @param $query String: query string fragment; do not include initial \'?\'
	 *
	 * @return String
	 */",
 "/**
	 * HTML-safe version of appendQuery().
	 *
	 * @param $query String: query string fragment; do not include initial \'?\'
	 * @return String
	 */",
 "/**
	 * @param $key
	 * @param $value
	 * @param $onlyquery bool
	 * @return String
	 */",
 "/**
	 * Appends or replaces value of query variables.
	 *
	 * @param $array Array of values to replace/add to query
	 * @param $onlyquery Bool: whether to only return the query string and not
	 *                   the complete URL
	 * @return String
	 */",
 "/**
	 * Check for limit and offset parameters on the input, and return sensible
	 * defaults if not given. The limit must be positive and is capped at 5000.
	 * Offset must be positive but is not capped.
	 *
	 * @param $deflimit Integer: limit to use if no input and the user hasn\'t set the option.
	 * @param $optionname String: to specify an option other than rclimit to pull from.
	 * @return array first element is limit, second is offset
	 */",
 "/**
	 * Return the path to the temporary file where PHP has stored the upload.
	 *
	 * @param $key String:
	 * @return string or NULL if no such file.
	 */",
 "/**
	 * Return the size of the upload, or 0.
	 *
	 * @deprecated since 1.17
	 * @param $key String:
	 * @return integer
	 */",
 "/**
	 * Return the upload error or 0
	 *
	 * @param $key String:
	 * @return integer
	 */",
 "/**
	 * Return the original filename of the uploaded file, as reported by
	 * the submitting user agent. HTML-style character entities are
	 * interpreted and normalized to Unicode normalization form C, in part
	 * to deal with weird input from Safari with non-ASCII filenames.
	 *
	 * Other than this the name is not verified for being a safe filename.
	 *
	 * @param $key String:
	 * @return string or NULL if no such file.
	 */",
 "/**
	 * Return a WebRequestUpload object corresponding to the key
	 *
	 * @param $key string
	 * @return WebRequestUpload
	 */",
 "/**
	 * Return a handle to WebResponse style object, for setting cookies,
	 * headers and other stuff, for Request being worked on.
	 *
	 * @return WebResponse
	 */",
 "/**
	 * Initialise the header list
	 */",
 "/**
	 * Get an array containing all request headers
	 *
	 * @return Array mapping header name to its value
	 */",
 "/**
	 * Get a request header, or false if it isn\'t set
	 * @param $name String: case-insensitive header name
	 *
	 * @return string|false
	 */",
 "/**
	 * Get data from $_SESSION
	 *
	 * @param $key String: name of key in $_SESSION
	 * @return Mixed
	 */",
 "/**
	 * Set session data
	 *
	 * @param $key String: name of key in $_SESSION
	 * @param $data Mixed
	 */",
 "/**
	 * Check if Internet Explorer will detect an incorrect cache extension in
	 * PATH_INFO or QUERY_STRING. If the request can\'t be allowed, show an error
	 * message or redirect to a safer URL. Returns true if the URL is OK, and
	 * false if an error message has been shown and the request should be aborted.
	 *
	 * @param $extWhitelist array
	 * @return bool
	 */",
 "/**
	 * Attempt to redirect to a URL with a QUERY_STRING that\'s not dangerous in
	 * IE 6. Returns true if it was successful, false otherwise.
	 *
	 * @param $url string
	 * @return bool
	 */",
 "/**
	 * Returns true if the PATH_INFO ends with an extension other than a script
	 * extension. This could confuse IE for scripts that send arbitrary data which
	 * is not HTML but may be detected as such.
	 *
	 * Various past attempts to use the URL to make this check have generally
	 * run up against the fact that CGI does not provide a standard method to
	 * determine the URL. PATH_INFO may be mangled (e.g. if cgi.fix_pathinfo=0),
	 * but only by prefixing it with the script name and maybe some other stuff,
	 * the extension is not mangled. So this should be a reasonably portable
	 * way to perform this security check.
	 *
	 * Also checks for anything that looks like a file extension at the end of
	 * QUERY_STRING, since IE 6 and earlier will use this to get the file type
	 * if there was no dot before the question mark (bug 28235).
	 *
	 * @deprecated Use checkUrlExtension().
	 *
	 * @param $extWhitelist array
	 *
	 * @return bool
	 */",
 "/**
	 * Parse the Accept-Language header sent by the client into an array
	 * @return array array( languageCode => q-value ) sorted by q-value in descending order
	 * May contain the \"language\" \'*\', which applies to languages other than those explicitly listed.
	 * This is aligned with rfc2616 section 14.4
	 */",
 "/**
	 * Fetch the raw IP from the request
	 *
	 * @since 1.19
	 *
	 * @return String
	 */",
 "/**
	 * Work out the IP address based on various globals
	 * For trusted proxies, use the XFF client IP (first of the chain)
	 * 
	 * @since 1.19
	 *
	 * @return string
	 */",
 "/**
 * The WebRequest class encapsulates getting at data passed in the
 * URL or via a POSTed form, handling remove of \"magic quotes\" slashes,
 * stripping illegal input characters and normalizing Unicode sequences.
 *
 * Usually this is used via a global singleton, $wgRequest. You should
 * not create a second WebRequest object; make a FauxRequest object if
 * you want to pass arbitrary data to some function in place of the web
 * input.
 *
 * @ingroup HTTP
 */",
 "/**
	 * Constructor. Should only be called by WebRequest
	 *
	 * @param $request WebRequest The associated request
	 * @param $key string Key in $_FILES array (name of form field)
	 */",
 "/**
	 * Return whether a file with this name was uploaded.
	 *
	 * @return bool
	 */",
 "/**
	 * Return the original filename of the uploaded file
	 *
	 * @return mixed Filename or null if non-existent
	 */",
 "/**
	 * Return the file size of the uploaded file
	 *
	 * @return int File size or zero if non-existent
	 */",
 "/**
	 * Return the path to the temporary file
	 *
	 * @return mixed Path or null if non-existent
	 */",
 "/**
	 * Return the upload error. See link for explanation
	 * http://www.php.net/manual/en/features.file-upload.errors.php
	 *
	 * @return int One of the UPLOAD_ constants, 0 if non-existent
	 */",
 "/**
	 * Returns whether this upload failed because of overflow of a maximum set
	 * in php.ini
	 *
	 * @return bool
	 */",
 "/**
 * Object to access the $_FILES array
 */",
 "/**
	 * @param $data Array of *non*-urlencoded key => value pairs, the
	 *   fake GET/POST values
	 * @param $wasPosted Bool: whether to treat the data as POST
	 * @param $session Mixed: session array or null
	 */",
 "/**
	 * @param $method string
	 * @throws MWException
	 */",
 "/**
	 * @param $name string
	 * @param $default string
	 * @return string
	 */",
 "/**
	 * @return Array
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * @param $name
	 * @return bool|string
	 */",
 "/**
	 * @param $name string
	 * @param $val string
	 */",
 "/**
	 * @param $key
	 * @return mixed
	 */",
 "/**
	 * @param $key
	 * @param $data
	 */",
 "/**
	 * @return array|Mixed|null
	 */",
 "/**
	 * @param array $extWhitelist
	 * @return bool
	 */",
 "/**
	 * @param array $extWhitelist
	 * @return bool
	 */",
 "/**
	 * @return string
	 */",
 "/**
 * WebRequest clone which takes values from a provided array.
 *
 * @ingroup HTTP
 */",
 "/**
 * Similar to FauxRequest, but only fakes URL parameters and method
 * (POST or GET) and use the base request for the remaining stuff
 * (cookies, session and headers).
 *
 * @ingroup HTTP
 */",
 "/**
	 * @param $parser Parser
	 * @return void
	 */",
 "/**
	 * Core parser tag hook function for \'pre\'.
	 * Text is treated roughly as \'nowiki\' wrapped in an HTML \'pre\' tag;
	 * valid HTML attributes are passed on.
	 *
	 * @param string $text
	 * @param array $attribs
	 * @param Parser $parser
	 * @return string HTML
	 */",
 "/**
	 * Core parser tag hook function for \'html\', used only when
	 * $wgRawHtml is enabled.
	 *
	 * This is potentially unsafe and should be used only in very careful
	 * circumstances, as the contents are emitted as raw HTML.
	 *
	 * Uses undocumented extended tag hook return values, introduced in r61913.
	 *
	 * @param $content string
	 * @param $attributes array
	 * @param $parser Parser
	 * @return array
	 */",
 "/**
	 * Core parser tag hook function for \'nowiki\'. Text within this section
	 * gets interpreted as a string of text with HTML-compatible character
	 * references, and wiki markup within it will not be expanded.
	 *
	 * Uses undocumented extended tag hook return values, introduced in r61913.
	 *
	 * @param $content string
	 * @param $attributes array
	 * @param $parser Parser
	 * @return array
	 */",
 "/**
	 * Core parser tag hook function for \'gallery\'.
	 *
	 * Renders a thumbnail list of the given images, with optional captions.
	 * Full syntax documented on the wiki:
	 *
	 *   http://www.mediawiki.org/wiki/Help:Images#Gallery_syntax
	 *
	 * @todo break Parser::renderImageGallery out here too.
	 *
	 * @param string $content
	 * @param array $attributes
	 * @param Parser $parser
	 * @return string HTML
	 */",
 "/**
 * Various tag hooks, registered in Parser::firstCallInit()
 * @ingroup Parser
 */",
 "/**
 * Test Case ID   : 09 (http://www.mediawiki.org/wiki/New_installer/Test_plan)
 * Test Case Name : Invalid/ blank values for fields in \'Connect to database\' page.
 * Version        : MediaWiki 1.18alpha
*/",
 "/** @dataProvider provideExpandableUrls */",
 "/**
	 * Provider of URL examples for testing wfExpandUrl()
	 *
	 * @return array
	 */",
 "/**
 * Unit tests for wfExpandUrl()
 */",
 "/**
	 * @param $count int
	 * @param $forms array
	 * @return string
	 */",
 "/** Maltese (Malti)
 *
 * @ingroup Language
 *
 * @author Niklas Laxstr??m
 */",
 "/**
	 * Check whether $text contains a link to $filterEntry
	 *
	 * @param $text String: text to check
	 * @param $filterEntry String: domainparts, see makeRegex() for more details
	 * @return Integer: 0 if no match or 1 if there\'s at least one match
	 */",
 "/**
	 * Builds a regex pattern for $filterEntry.
	 *
	 * @param $filterEntry String: URL, if it begins with \"*.\", it\'ll be
	 *        replaced to match any subdomain
	 * @return String: regex pattern, for preg_match()
	 */",
 "/**
	 * Make an array to be used for calls to DatabaseBase::buildLike(), which
	 * will match the specified string. There are several kinds of filter entry:
	 *     *.domain.com    -  Produces http://com.domain.%, matches domain.com
	 *                        and www.domain.com
	 *     domain.com      -  Produces http://com.domain./%, matches domain.com
	 *                        or domain.com/ but not www.domain.com
	 *     *.domain.com/x  -  Produces http://com.domain.%/x%, matches
	 *                        www.domain.com/xy
	 *     domain.com/x    -  Produces http://com.domain./x%, matches
	 *                        domain.com/xy but not www.domain.com/xy
	 *
	 * Asterisks in any other location are considered invalid.
	 *
	 * @param $filterEntry String: domainparts
	 * @param $prot        String: protocol
	 * @return Array to be passed to DatabaseBase::buildLike() or false on error
	 */",
 "/**
	 * Filters an array returned by makeLikeArray(), removing everything past first pattern placeholder.
	 *
	 * @param $arr array: array to filter
	 * @return filtered array
	 */",
 "/**
 * Some functions to help implement an external link filter for spam control.
 * 
 * @todo implement the filter. Currently these are just some functions to help
 * maintenance/cleanupSpam.php remove links to a single specified domain. The
 * next thing is to implement functions for checking a given page against a big
 * list of domains.
 *
 * Another cool thing to do would be a web interface for fast spam removal.
 */",
 "/** Zulu (isiZulu)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Jose77 (on zu.wikipedia.org)
 * @author Joziboy (on zu.wikipedia.org)
 * @author ???????? ????????????????
 */",
 "/** Japanese (?????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Akaniji
 * @author Alexsh
 * @author Aotake
 * @author Aphaia
 * @author Broad-Sky
 * @author Chatama
 * @author Chinneeb
 * @author Emk
 * @author Fievarsty
 * @author Fryed-peach
 * @author Hatukanezumi
 * @author Hijiri
 * @author Hisagi
 * @author Hosiryuhosi
 * @author Iwai.masaharu
 * @author Joe Elkins
 * @author JtFuruhata
 * @author Kahusi
 * @author Kanon und wikipedia
 * @author Kkkdc
 * @author Klutzy
 * @author Koba-chan
 * @author Likibp
 * @author Lovekhmer
 * @author Marine-Blue
 * @author Miya
 * @author Mizusumashi
 * @author Muttley
 * @author Mzm5zbC3
 * @author Ohgi
 * @author Penn Station
 * @author Reedy
 * @author Schu
 * @author Suisui
 * @author VZP10224
 * @author Vigorous action
 * @author W.CC
 * @author Web comic
 * @author Whym
 * @author Yanajin66
 * @author ???????? ????????????????
 * @author ???
 * @author ????????
 * @author ????????????
 */",
 "/** Tarand??ne (Tarand??ne)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Joetaras
 * @author Kaganer
 * @author McDutchie
 */",
 "/** Avaric (????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Amikeco
 * @author Amire80
 * @author MF-Warburg
 * @author MONARCH79
 * @author Phoebe
 */",
 "/**
	 * @param $resultPageSet ApiPageSet
	 * @return void
	 */",
 "/**
 * A query module to enumerate pages that belong to a category.
 *
 * @ingroup API
 */",
 "/**
	 * Constructor
	 * @param $main ApiMain object
	 * @param $errorFallback ApiFormatBase object to fall back on for errors
	 */",
 "/**
 * Formatter that spits out anything you like with any desired MIME type
 * @ingroup API
 */",
 "/**
	 * Get a cached instance of the specified type of cache object.
	 *
	 * @param $id
	 *
	 * @return object
	 */",
 "/**
	 * Clear all the cached instances.
	 */",
 "/**
	 * Create a new cache object of the specified type.
	 *
	 * @param $id
	 *
	 * @return ObjectCache
	 */",
 "/**
	 * Create a new cache object from parameters
	 *
	 * @param $params array
	 *
	 * @return ObjectCache
	 */",
 "/**
	 * Factory function referenced from DefaultSettings.php for CACHE_ANYTHING
	 */",
 "/**
	 * Factory function referenced from DefaultSettings.php for CACHE_ACCEL.
	 *
	 * @return ObjectCache
	 */",
 "/**
	 * Factory function that creates a memcached client object.
	 * The idea of this is that it might eventually detect and automatically
	 * support the PECL extension, assuming someone can get it to compile.
	 *
	 * @param $params array
	 *
	 * @return MemcachedPhpBagOStuff
	 */",
 "/**
 * Functions to get cache objects
 *
 * @file
 * @ingroup Cache
 */",
 "/**
	 * Get the DB2 database extension name
	 * @return string
	 */",
 "/**
	 * Determine whether the DB2 database extension is currently available in PHP
	 * @return boolean
	 */",
 "/**
	 * Generate a connection form for a DB2 database
	 * @return string
	 */",
 "/**
	 * Validate and then execute the connection form for a DB2 database
	 * @return Status
	 */",
 "/**
	 * Open a DB2 database connection
	 * @return Status
	 */",
 "/**
		 * @var $conn DatabaseBase
		 */",
 "/**
	 * Create a DB2 database for MediaWiki
	 * @return Status
	 */",
 "/**
	 * Create tables from scratch.
	 * First check if pagesize >= 32k.
	 *
	 * @return Status
	 */",
 "/**
	 * Check if database has a tablspace with pagesize >= 32k.
	 *
	 * @return Status
	 */",
 "/**
	 * Generate the code to store the DB2-specific settings defined by the configuration form
	 * @return string
	 */",
 "/**
 * Class for setting up the MediaWiki database using IBM_DB2.
 *
 * @ingroup Deployment
 * @since 1.17
 */",
 "/**
	 * Reduce memory usage to reduce the impact of circular references
	 */",
 "/**
	 * Don\'t serialize the parent object, it is big, and not needed when it is
	 * a parameter to mergeForeign(), which is the only application of 
	 * serializing at present.
	 *
	 * Compact the titles, only serialize the text form.
	 */",
 "/**
	 * Recreate the Title objects
	 */",
 "/**
	 * Merge another LinkHolderArray into this one
	 * @param $other LinkHolderArray
	 */",
 "/**
	 * Merge a LinkHolderArray from another parser instance into this one. The 
	 * keys will not be preserved. Any text which went with the old 
	 * LinkHolderArray and needs to work with the new one should be passed in 
	 * the $texts array. The strings in this array will have their link holders
	 * converted for use in the destination link holder. The resulting array of
	 * strings will be returned.
	 *
	 * @param $other LinkHolderArray
	 * @param $texts Array of strings
	 * @return Array
	 */",
 "/**
	 * Get a subset of the current LinkHolderArray which is sufficient to
	 * interpret the given text.
	 */",
 "/**
	 * Returns true if the memory requirements of this object are getting large
	 */",
 "/**
	 * Clear all stored link holders.
	 * Make sure you don\'t have any text left using these link holders, before you call this
	 */",
 "/**
	 * Make a link placeholder. The text returned can be later resolved to a real link with
	 * replaceLinkHolders(). This is done for two reasons: firstly to avoid further
	 * parsing of interwiki links, and secondly to allow all existence checks and
	 * article length checks (for stub links) to be bundled into a single query.
	 *
	 * @param $nt Title
	 */",
 "/**
	 * @todo FIXME: Update documentation. makeLinkObj() is deprecated.
	 * Replace <!--LINK--> link placeholders with actual links, in the buffer
	 * Placeholders created in Skin::makeLinkObj()
	 * Returns an array of link CSS classes, indexed by PDBK.
	 */",
 "/**
	 * Replace internal links
	 */",
 "/**
	 * Replace interwiki links
	 */",
 "/**
	 * Modify $this->internals and $colours according to language variant linking rules
	 */",
 "/**
	 * Replace <!--LINK--> link placeholders with plain text of links
	 * (not HTML-formatted).
	 *
	 * @param $text String
	 * @return String
	 */",
 "/**
	 * Callback for replaceText()
	 *
	 * @param $matches Array
	 * @return string
	 * @private
	 */",
 "/**
 * @ingroup Parser
 */",
 "/**
	 * @param $resourceLoader ResourceLoader
	 * @param $request WebRequest
	 */",
 "/**
	 * Expand a string of the form jquery.foo,bar|jquery.ui.baz,quux to
	 * an array of module names like array( \'jquery.foo\', \'jquery.bar\',
	 * \'jquery.ui.baz\', \'jquery.ui.quux\' )
	 * @param $modules String Packed module name list
	 * @return array of module names
	 */",
 "/**
	 * Return a dummy ResourceLoaderContext object suitable for passing into things that don\'t \"really\" need a context
	 * @return ResourceLoaderContext
	 */",
 "/**
	 * @return ResourceLoader
	 */",
 "/**
	 * @return WebRequest
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return string|null
	 */",
 "/**
	 * @return string|null
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * @return String|null
	 */",
 "/**
	 * @return String|null
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * @return string
	 */",
 "/**
 * Object passed around to modules which contains information about the state
 * of a specific loader request
 */",
 "/** @dataProvider provideOneFewOtherCases */",
 "/** @dataProvider provideOneFewCases */",
 "/** Tests for MediaWiki languages/LanguageLt.php */",
 "/**
	 * @param $resultPageSet ApiPageSet
	 * @return void
	 */",
 "/**
 * This query action allows clients to retrieve a list of recently modified pages
 * that are part of the logged-in user\'s watchlist.
 *
 * @ingroup API
 */",
 "/**
	 * @todo FIXME: Postgres should use sequential updates like Mysql, Sqlite
	 * and everybody else. It never got refactored like it should\'ve.
	 */",
 "/**
 * Class for handling updates to Postgres databases.
 *
 * @ingroup Deployment
 * @since 1.17
 */",
 "/** Afrikaans (Afrikaans)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Adriaan
 * @author Anrie
 * @author Arnobarnard
 * @author Byeboer
 * @author Deadelf
 * @author Kaganer
 * @author Manie
 * @author Naudefj
 * @author Purodha
 * @author Reedy
 * @author SPQRobin
 * @author Spacebirdy
 * @author Xethron
 * @author ??????????????? ?????????????????????
 */",
 "/**
	 * @param $file File:
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * @return mixed|null|Title
	 */",
 "/**
	 * @return bool|mixed|Title
	 */",
 "/**
	 * @param bool $text
	 * @return bool
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * @return bool|File
	 */",
 "/**
	 * @return array|null
	 */",
 "/**
	 * Override handling of action=purge
	 */",
 "/**
 * Special handling for file pages
 *
 * @ingroup Media
 */",
 "/** Low German (Plattd????tsch)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Kaganer
 * @author Purodha
 * @author Slomox
 * @author The Evil IP address
 * @author Urhixidur
 * @author Zylbath
 * @author ???????? ????????????????
 */",
 "/**
	 * @param $bool bool
	 */",
 "/**
	 * Get an item with the given key. Returns false if it does not exist.
	 * @param $key string
	 *
	 * @return bool|Object
	 */",
 "/**
	 * Set an item.
	 * @param $key string
	 * @param $value mixed
	 * @param $exptime int Either an interval in seconds or a unix timestamp for expiry
	 */",
 "/**
	 * Delete an item.
	 * @param $key string
	 * @param $time int Amount of time to delay the operation (mostly memcached-specific)
	 */",
 "/**
	 * Delete all objects expiring before a certain date.
	 * @param $date The reference date in MW format
	 * @param $progressCallback Optional, a function which will be called 
	 *     regularly during long-running operations with the percentage progress
	 *     as the first parameter.
	 *
	 * @return true on success, false if unimplemented
	 */",
 "/**
	 * @param $key String: Key to increase
	 * @param $value Integer: Value to add to $key (Default 1)
	 * @return null if lock is not possible else $key value increased by $value
	 */",
 "/**
	 * Convert an optionally relative time to an absolute time
	 */",
 "/**
 * interface is intended to be more or less compatible with
 * the PHP memcached client.
 *
 * backends for local hash array and SQL table included:
 * <code>
 *   $bag = new HashBagOStuff();
 *   $bag = new SqlBagOStuff(); # connect to db first
 * </code>
 *
 * @ingroup Cache
 */",
 "/**
	 * @param $resultPageSet ApiPageSet
	 * @return void
	 */",
 "/**
 * This gives links pointing to the given interwiki
 * @ingroup API
 */",
 "/**
 * Internationalisation file for the FancyCaptcha module of the ConfirmEdit
 * extension.
 *
 * @file
 * @ingroup Extensions
 */",
 "/** English */",
 "/** Message documentation (Message documentation)
 * @author Fryed-peach
 * @author Hamilton Abreu
 * @author Purodha
 */",
 "/** Gheg Albanian (Geg??)
 * @author Mdupont
 */",
 "/** Amharic (????????????)
 * @author Codex Sinaiticus
 */",
 "/** Aragonese (Aragon??s)
 * @author Juanpabl
 */",
 "/** Arabic (??????????????)
 * @author Aiman titi
 * @author Meno25
 */",
 "/** Egyptian Spoken Arabic (????????)
 * @author Meno25
 * @author Ramsis II
 */",
 "/** Assamese (??????????????????)
 * @author Chaipau
 * @author Gitartha.bordoloi
 * @author Rajuonline
 */",
 "/** Asturian (Asturianu)
 * @author Esbardu
 * @author Xuacu
 */",
 "/** Bashkir (??????????????????)
 * @author Assele
 */",
 "/** Southern Balochi (?????????? ????????????)
 * @author Mostafadaneshvar
 */",
 "/** Belarusian (Tara??kievica orthography) (??????????????????????? (??????????????????????)???)
 * @author EugeneZelenko
 * @author Jim-by
 * @author Red Winged Duck
 */",
 "/** Bulgarian (??????????????????)
 * @author Borislav
 * @author DCLXVI
 */",
 "/** Bengali (???????????????)
 * @author Nasir8891
 * @author Zaheen
 */",
 "/** Breton (Brezhoneg)
 * @author Fulup
 */",
 "/** Bosnian (Bosanski)
 * @author CERminator
 */",
 "/** Catalan (Catal??)
 * @author Davidpar
 * @author SMP
 * @author Ssola
 */",
 "/** Min Dong Chinese (M??ng-d????ng-ng?????) */",
 "/** Sorani (??????????)
 * @author Asoxor
 */",
 "/** Czech (??esky)
 * @author Mormegil
 */",
 "/** Church Slavic (?????????????????????? / ??????????????????????????????)
 * @author ??????
 */",
 "/** Welsh (Cymraeg)
 * @author Lloffiwr
 */",
 "/** Danish (Dansk)
 * @author Peter Alberti
 */",
 "/** German (Deutsch)
 * @author Metalhead64
 * @author Raimond Spekking
 * @author Umherirrender
 */",
 "/** German (formal address) (???Deutsch (Sie-Form)???)
 * @author Imre
 * @author MichaelFrey
 * @author Umherirrender
 */",
 "/** Zazaki (Zazaki)
 * @author Xoser
 */",
 "/** Lower Sorbian (Dolnoserbski)
 * @author Michawiki
 */",
 "/** Greek (????????????????)
 * @author Badseed
 * @author Consta
 * @author Geraki
 * @author Glavkos
 * @author ZaDiak
 */",
 "/** Esperanto (Esperanto)
 * @author Yekrats
 */",
 "/** Spanish (Espa??ol)
 * @author Icvav
 * @author Pertile
 * @author Sanbec
 */",
 "/** Estonian (Eesti)
 * @author Pikne
 */",
 "/** Basque (Euskara)
 * @author An13sa
 */",
 "/** Persian (??????????)
 * @author Ebraminio
 * @author Huji
 * @author Ladsgroup
 * @author Meisam
 * @author Wayiran
 */",
 "/** Finnish (Suomi)
 * @author Crt
 * @author Nike
 */",
 "/** Faroese (F??royskt)
 * @author Spacebirdy
 */",
 "/** French (Fran??ais)
 * @author Crochet.david
 * @author IAlex
 * @author Sherbrooke
 * @author Verdy p
 */",
 "/** Franco-Proven??al (Arpetan)
 * @author ChrisPtDe
 */",
 "/** Western Frisian (Frysk)
 * @author Snakesteuben
 */",
 "/** Irish (Gaeilge) */",
 "/** Galician (Galego)
 * @author Toli??o
 * @author Xos??
 */",
 "/** Swiss German (Alemannisch)
 * @author Als-Chl??mens
 * @author Als-Holder
 * @author Melancholie
 */",
 "/** Gujarati (?????????????????????)
 * @author Dsvyas
 * @author Sushant savla
 */",
 "/** Hebrew (??????????)
 * @author Amire80
 * @author Rotem Liss
 */",
 "/** Hindi (??????????????????)
 * @author Kaustubh
 */",
 "/** Croatian (Hrvatski)
 * @author SpeedyGonsales
 */",
 "/** Upper Sorbian (Hornjoserbsce)
 * @author Michawiki
 */",
 "/** Hungarian (Magyar)
 * @author Adam78
 * @author Dorgan
 * @author Glanthor Reviol
 */",
 "/** Interlingua (Interlingua)
 * @author McDutchie
 */",
 "/** Indonesian (Bahasa Indonesia)
 * @author Bennylin
 * @author IvanLanin
 * @author Iwan Novirion
 */",
 "/** Iloko (Ilokano)
 * @author Lam-ang
 */",
 "/** Italian (Italiano)
 * @author Beta16
 * @author BrokenArrow
 * @author Darth Kule
 */",
 "/** Japanese (?????????)
 * @author Aotake
 * @author Fryed-peach
 * @author Marine-Blue
 * @author Shirayuki
 */",
 "/** Jutish (Jysk)
 * @author Husl??ke
 */",
 "/** Javanese (Basa Jawa)
 * @author Meursault2004
 */",
 "/** Georgian (?????????????????????)
 * @author David1010
 * @author ITshnik
 */",
 "/** Kara-Kalpak (Qaraqalpaqsha)
 * @author Atabek
 */",
 "/** Kazakh (Arabic script) (????????????????? (??????????)???) */",
 "/** Kazakh (Cyrillic script) (????????????????? (??????????)???) */",
 "/** Kazakh (Latin script) (???Qazaq??a (lat??n)???) */",
 "/** Khmer (???????????????????????????)
 * @author Thearith
 * @author ???????????????????????????
 */",
 "/** Korean (?????????)
 * @author Kwj2772
 * @author ToePeu
 * @author ??????
 */",
 "/** Karachay-Balkar (????????????????-??????????????)
 * @author Iltever
 */",
 "/** Colognian (Ripoarisch)
 * @author Purodha
 */",
 "/** Latin (Latina)
 * @author SPQRobin
 */",
 "/** Luxembourgish (L??tzebuergesch)
 * @author Les Meloures
 * @author Robby
 */",
 "/** Limburgish (Limburgs)
 * @author Matthias
 * @author Ooswesthoesbes
 */",
 "/** Lao (?????????) */",
 "/** Macedonian (????????????????????)
 * @author Bjankuloski06
 */",
 "/** Malayalam (??????????????????)
 * @author Praveenp
 * @author Shijualex
 */",
 "/** Marathi (???????????????)
 * @author Kaustubh
 * @author Mahitgar
 */",
 "/** Malay (Bahasa Melayu)
 * @author Anakmalaysia
 * @author Aviator
 */",
 "/** Maltese (Malti)
 * @author Chrisportelli
 */",
 "/** Norwegian (bokm??l)??? (???Norsk (bokm??l)???)
 * @author Harald Khan
 * @author Jon Harald S??by
 * @author Laaknor
 */",
 "/** Low German (Plattd????tsch)
 * @author Slomox
 */",
 "/** Nedersaksisch (Nedersaksisch)
 * @author Servien
 */",
 "/** Dutch (Nederlands)
 * @author Siebrand
 */",
 "/** Norwegian Nynorsk (???Norsk (nynorsk)???)
 * @author Harald Khan
 * @author Njardarlogar
 */",
 "/** Occitan (Occitan)
 * @author Cedric31
 */",
 "/** Oriya (????????????)
 * @author Psubhashish
 */",
 "/** Polish (Polski)
 * @author Sp5uhe
 */",
 "/** Piedmontese (Piemont??is)
 * @author Borich??t
 * @author B??rto \'d S??ra
 */",
 "/** Western Punjabi (????????????)
 * @author Khalid Mahmood
 */",
 "/** Pashto (????????)
 * @author Ahmed-Najib-Biabani-Ibrahimkhel
 */",
 "/** Portuguese (Portugu??s)
 * @author Hamilton Abreu
 * @author Malafaya
 */",
 "/** Brazilian Portuguese (Portugu??s do Brasil)
 * @author Eduardo.mps
 * @author Giro720
 */",
 "/** Romansh (Rumantsch)
 * @author Kazu89
 */",
 "/** Romanian (Rom??n??)
 * @author Firilacroco
 * @author Mihai
 */",
 "/** Tarand??ne (Tarand??ne)
 * @author Joetaras
 */",
 "/** Russian (??????????????)
 * @author Dim Grits
 * @author Lockal
 * @author ?????????????????? ??????????????
 */",
 "/** Rusyn (????????????????????)
 * @author Gazeb
 */",
 "/** Sakha (???????? ????????)
 * @author HalanTul
 */",
 "/** Sinhala (???????????????)
 * @author Thameera123
 * @author ?????????????????????????????????
 */",
 "/** Slovak (Sloven??ina)
 * @author Helix84
 */",
 "/** Slovenian (Sloven????ina)
 * @author Dbc334
 */",
 "/** Albanian (Shqip)
 * @author Dori
 * @author Olsi
 */",
 "/** Serbian (Cyrillic script) (??????????????? (????????????????)???)
 * @author Millosh
 * @author Rancher
 * @author ?????????? ??????????????????
 * @author ?????????????? ????????????????????
 */",
 "/** Serbian (Latin script) (???Srpski (latinica)???)
 * @author Michaello
 * @author ?????????? ??????????????????
 */",
 "/** Seeltersk (Seeltersk)
 * @author Pyt
 */",
 "/** Sundanese (Basa Sunda)
 * @author Irwangatot
 */",
 "/** Swedish (Svenska)
 * @author Ainali
 */",
 "/** Telugu (??????????????????)
 * @author Mpradeep
 */",
 "/** Tajik (Cyrillic script) (????????????)
 * @author Ibrahim
 */",
 "/** Tajik (Latin script) (Tojik??)
 * @author Liangent
 */",
 "/** Thai (?????????)
 * @author Harley Hartwell
 */",
 "/** Turkmen (T??rkmen??e)
 * @author Hanberke
 */",
 "/** Tagalog (Tagalog)
 * @author AnakngAraw
 */",
 "/** Turkish (T??rk??e)
 * @author Joseph
 * @author Runningfridgesrule
 */",
 "/** Ukrainian (????????????????????)
 * @author Ahonc
 * @author Dim Grits
 * @author Ytsukeng Fyvaprol
 */",
 "/** V??neto (V??neto)
 * @author Candalua
 */",
 "/** Vietnamese (Ti???ng Vi???t)
 * @author Minh Nguyen
 * @author Vinhtantran
 */",
 "/** Volap??k (Volap??k)
 * @author Smeira
 */",
 "/** V??ro (V??ro)
 * @author V??rok
 */",
 "/** Walloon (walon)
 * @author Srtxg
 */",
 "/** Yiddish (????????????)
 * @author ????????????????
 */",
 "/** Yoruba (Yor??b??)
 * @author Demmy
 */",
 "/** Cantonese (??????) */",
 "/** Simplified Chinese (?????????(??????)???)
 * @author Bencmq
 */",
 "/** Traditional Chinese (?????????(??????)???)
 * @author Horacewai2
 * @author Waihorace
 */",
 "/**
	 * Generates the subheading with links
	 * @param $userObj User object for the target
	 * @return String: appropriately-escaped HTML to be output literally
	 * @todo FIXME: Almost the same as getSubTitle in SpecialDeletedContributions.php. Could be combined.
	 */",
 "/**
	 * Links to different places.
	 * @param $userpage Title: Target user page
	 * @param $talkpage Title: Talk page
	 * @param $target User: Target user object
	 * @return array
	 */",
 "/**
	 * Generates the namespace selector form with hidden attributes.
	 * @return String: HTML fragment
	 */",
 "/**
 * Special:Contributions, show user contributions in a paged list
 *
 * @ingroup SpecialPage
 */",
 "/**
	 * Do a batched query to get the parent revision lengths
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * Generates each row in the contributions list.
	 *
	 * Contributions which are marked \"top\" are currently on top of the history.
	 * For these contributions, a [rollback] link is shown for users with roll-
	 * back privileges. The rollback link restores the most recent version that
	 * was not written by the target user.
	 *
	 * @todo This would probably look a lot nicer in a table.
	 */",
 "/**
	 * Get the Database object in use
	 *
	 * @return DatabaseBase
	 */",
 "/**
	 * Overwrite Pager function and return a helpful comment
	 */",
 "/**
 * Pager for Special:Contributions
 * @ingroup SpecialPage Pager
 */",
 "/**
 * Test converter (from Tajiki to latin orthography)
 */",
 "/** British English (British English)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Dantman
 * @author Fitoschido
 * @author Hazard-SJ
 * @author Jon Harald S??by
 * @author Reedy
 * @author The Evil IP address
 */",
 "/**
	 * @param $count int
	 * @param $forms array
	 * @return string
	 */",
 "/**
 * Serbian (latin script)
 *
 * @ingroup Language
 */",
 "/** Dzongkha (???????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author CFynn
 * @author Tenzin
 * @author ??var Arnfj??r?? Bjarmason <avarab@gmail.com>
 */",
 "/**
	 * @dataProvider provideValidNames
	 */",
 "/**
	 * @dataProvider provideBadNames
	 * @expectedException MWException
	 */",
 "/**
	 * @dataProvider provideValidNames
	 */",
 "/**
	 * @dataProvider provideBadNames
	 * @expectedException MWException
	 */",
 "/**
 * @group Parser
 */",
 "/** Tok Pisin (Tok Pisin)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Caffelice (on tpi.wikipedia.org)
 * @author Iketsi
 * @author Wantok
 * @author Wytukaze
 * @author ???????? ????????????????
 */",
 "/**
	 * Output some text via the output callback provided
	 * @param $str String Text to print
	 */",
 "/**
	 * Check if this database\'s user table has already had a unique
	 * user_name index applied.
	 * @return bool
	 */",
 "/**
	 * Checks the database for duplicate user account records
	 * and remove them in preparation for application of a unique
	 * index on the user_name field. Returns true if the table is
	 * clean or if duplicates have been resolved automatically.
	 *
	 * May return false if there are unresolvable problems.
	 * Status information will be echo\'d to stdout.
	 *
	 * @return bool
	 */",
 "/**
	 * Checks the database for duplicate user account records
	 * in preparation for application of a unique index on the
	 * user_name field. Returns true if the table is clean or
	 * if duplicates can be resolved automatically.
	 *
	 * Returns false if there are duplicates and resolution was
	 * not requested. (If doing resolution, edits may be reassigned.)
	 * Status information will be echo\'d to stdout.
	 *
	 * @param $doDelete bool: pass true to actually remove things
	 *                  from the database; false to just check.
	 * @return bool
	 */",
 "/**
	 * We don\'t want anybody to mess with our stuff...
	 * @access private
	 */",
 "/**
	 * @return bool
	 * @access private
	 */",
 "/**
	 * @access private
	 */",
 "/**
	 * Grab usernames for which multiple records are present in the database.
	 * @return array
	 * @access private
	 */",
 "/**
	 * Examine user records for the given name. Try to see which record
	 * will be the one that actually gets used, then check remaining records
	 * for edits. If the dupes have no edits, we can safely remove them.
	 * @param $name string
	 * @param $doDelete bool
	 * @access private
	 */",
 "/**
	 * Count the number of edits attributed to this user.
	 * Does not currently check log table or other things
	 * where it might show up...
	 * @param $userid int
	 * @return int
	 * @access private
	 */",
 "/**
	 * Count the number of hits on a given table for this account.
	 * @param $table string
	 * @param $field string
	 * @param $userid int
	 * @return int
	 * @access private
	 */",
 "/**
	 * @param $from int
	 * @param $to int
	 * @access private
	 */",
 "/**
	 * @param $table string
	 * @param $field string
	 * @param $from int
	 * @param $to int
	 * @access private
	 */",
 "/**
	 * Remove a user account line.
	 * @param $userid int
	 * @access private
	 */",
 "/**
 * Look for duplicate user table entries and optionally prune them.
 * @ingroup Maintenance
 */",
 "/** Tulu (????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author NamwikiTL
 * @author VASANTH S.N.
 * @author VinodSBangera
 */",
 "/**
	 * Construct a proxy backend that consists of several internal backends.
	 * Additional $config params include:
	 *     \'backends\'    : Array of backend config and multi-backend settings.
	 *                     Each value is the config used in the constructor of a
	 *                     FileBackendStore class, but with these additional settings:
	 *                         \'class\'         : The name of the backend class
	 *                         \'isMultiMaster\' : This must be set for one backend.
	 *     \'syncChecks\'  : Integer bitfield of internal backend sync checks to perform.
	 *                     Possible bits include self::CHECK_SIZE and self::CHECK_TIME.
	 *                     The checks are done before allowing any file operations.
	 * @param $config Array
	 */",
 "/**
	 * @see FileBackend::doOperationsInternal()
	 */",
 "/**
	 * Check that a set of files are consistent across all internal backends
	 *
	 * @param $paths Array
	 * @return Status
	 */",
 "/**
	 * Substitute the backend name in storage path parameters
	 * for a set of operations with that of a given internal backend.
	 * 
	 * @param $ops Array List of file operation arrays
	 * @param $backend FileBackendStore
	 * @return Array
	 */",
 "/**
	 * Same as substOpBatchPaths() but for a single operation
	 * 
	 * @param $op File operation array
	 * @param $backend FileBackendStore
	 * @return Array
	 */",
 "/**
	 * Substitute the backend of storage paths with an internal backend\'s name
	 * 
	 * @param $paths Array|string List of paths or single string path
	 * @param $backend FileBackendStore
	 * @return Array|string
	 */",
 "/**
	 * Substitute the backend of internal storage paths with the proxy backend\'s name
	 * 
	 * @param $paths Array|string List of paths or single string path
	 * @return Array|string
	 */",
 "/**
	 * @see FileBackend::doPrepare()
	 */",
 "/**
	 * @see FileBackend::doSecure()
	 */",
 "/**
	 * @see FileBackend::doClean()
	 */",
 "/**
	 * @see FileBackend::getFileList()
	 */",
 "/**
	 * @see FileBackend::fileExists()
	 */",
 "/**
	 * @see FileBackend::getFileTimestamp()
	 */",
 "/**
	 * @see FileBackend::getFileSize()
	 */",
 "/**
	 * @see FileBackend::getFileStat()
	 */",
 "/**
	 * @see FileBackend::getFileContents()
	 */",
 "/**
	 * @see FileBackend::getFileSha1Base36()
	 */",
 "/**
	 * @see FileBackend::getFileProps()
	 */",
 "/**
	 * @see FileBackend::streamFile()
	 */",
 "/**
	 * @see FileBackend::getLocalReference()
	 */",
 "/**
	 * @see FileBackend::getLocalCopy()
	 */",
 "/**
	 * @see FileBackend::getFileList()
	 */",
 "/**
	 * @see FileBackend::clearCache()
	 */",
 "/**
 * This class defines a multi-write backend. Multiple backends can be
 * registered to this proxy backend and it will act as a single backend.
 * Use this when all access to those backends is through this proxy backend.
 * At least one of the backends must be declared the \"master\" backend.
 *
 * Only use this class when transitioning from one storage system to another.
 *
 * Read operations are only done on the \'master\' backend for consistency.
 * Write operations are performed on all backends, in the order defined.
 * If an operation fails on one backend it will be rolled back from the others.
 *
 * @ingroup FileBackend
 * @since 1.19
 */",
 "/**
	 * @param $filename String basename of the file to check
	 * @param $expected boolean Expected result.
	 * @dataProvider dataIsAnimated
	 */",
 "/**
	 * @param $filename String
	 * @param $expected Integer Total image area
	 * @dataProvider dataGetImageArea
	 */",
 "/**
	 * @param $metadata String Serialized metadata
	 * @param $expected Integer One of the class constants of GIFHandler
	 * @dataProvider dataIsMetadataValid
	 */",
 "/**
	 * @param $filename String
	 * @param $expected String Serialized array
	 * @dataProvider dataGetMetadata
	 */",
 "/**
	 * Evaluate a mathematical expression
	 *
	 * The algorithm here is based on the infix to RPN algorithm given in
	 * http://montcs.bloomu.edu/~bobmon/Information/RPN/infix2rpn.shtml
	 * It\'s essentially the same as Dijkstra\'s shunting yard algorithm.
	 * @param $expr string
	 * @return string
	 */",
 "/**
	 * @param $op int
	 * @param $stack array
	 * @throws ExprError
	 */",
 "/** Lithuanian (Lietuvi??)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Auwris
 * @author Break Through Pain
 * @author Dark Eagle
 * @author Eitvys200
 * @author Garas
 * @author Homo
 * @author Hugo.arg
 * @author Ignas693
 * @author Kaganer
 * @author Matasg
 * @author Meno25
 * @author Pdxx
 * @author Perkunas
 * @author P??stininkas
 * @author Siggis
 * @author Tomasdd
 * @author Urhixidur
 * @author Vpovilaitis
 * @author ???????? ????????????????
 */",
 "/**
 * Old job used for sending single notification emails;
 * kept for backwards-compatibility
 *
 * @ingroup JobQueue
 */",
 "/**
		 * Page numbers here refer to pages in the EXIF 2.2 standard
		 *
		 * Note, Exif::UNDEFINED is treated as a string, not as an array of bytes
		 * so don\'t put a count parameter for any UNDEFINED values.
		 *
		 * @link http://exif.org/Exif2-2.PDF The Exif 2.2 specification
		 */",
 "/**
		 * exif_read_data() will return false on invalid input, such as
		 * when somebody uploads a file called something.jpeg
		 * containing random gibberish.
		 */",
 "/**
	 * Constructor
	 *
	 * @param $file String: filename.
	 * @param $byteOrder String Type of byte ordering either \'BE\' (Big Endian) or \'LE\' (Little Endian). Default \'\'.
	 * @todo FIXME: The following are broke:
	 * SubjectArea. Need to test the more obscure tags.
	 *
	 * DigitalZoomRatio = 0/0 is rejected. need to determine if that\'s valid.
	 * possibly should treat 0/0 = 0. need to read exif spec on that.
	 */",
 "/**
	 * Make $this->mFilteredExifData
	 */",
 "/**
	* Collapse some fields together.
	* This converts some fields from exif form, to a more friendly form.
	* For example GPS latitude to a single number.
	*
	* The rationale behind this is that we\'re storing data, not presenting to the user
	* For example a longitude is a single number describing how far away you are from
	* the prime meridian. Well it might be nice to split it up into minutes and seconds
	* for the user, it doesn\'t really make sense to split a single number into 4 parts
	* for storage. (degrees, minutes, second, direction vs single floating point number).
	*
	* Other things this might do (not really sure if they make sense or not):
	* Dates -> mediawiki date format.
	* convert values that can be in different units to be in one standardized unit.
	*
	* As an alternative approach, some of this could be done in the validate phase
	* if we make up our own types like Exif::DATE.
	*/",
 "/**
	* Do userComment tags and similar. See pg. 34 of exif standard.
	* basically first 8 bytes is charset, rest is value.
	* This has not been tested on any shift-JIS strings.
	* @param $prop String prop name.
	*/",
 "/**
	* Convert an Exif::UNDEFINED from a raw binary string
	* to its value. This is sometimes needed depending on
	* the type of UNDEFINED field
	* @param $prop String name of property
	*/",
 "/**
	* Convert gps in exif form to a single floating point number
	* for example 10 degress 20`40`` S -> -10.34444
	* @param String $prop a gps coordinate exif tag name (like GPSLongitude)
	*/",
 "/**
	 * Use FormatMetadata to create formatted values for display to user
	 * (is this ever used?)
	 *
	 * @deprecated since 1.18
	 */",
 "/**
	 * Get $this->mRawExifData
	 */",
 "/**
	 * Get $this->mFilteredExifData
	 */",
 "/**
	 * Get $this->mFormattedExifData
	 *
	 * This returns the data for display to user.
	 * Its unclear if this is ever used.
	 *
	 * @deprecated since 1.18
	 */",
 "/**
	 * The version of the output format
	 *
	 * Before the actual metadata information is saved in the database we
	 * strip some of it since we don\'t want to save things like thumbnails
	 * which usually accompany Exif data. This value gets saved in the
	 * database along with the actual Exif data, and if the version in the
	 * database doesn\'t equal the value returned by this function the Exif
	 * data is regenerated.
	 *
	 * @return int
	 */",
 "/**
	 * @param $in
	 * @return bool
	 */",
 "/**
	 * @param $in
	 * @return bool
	 */",
 "/**
	 * @param $in
	 * @return bool
	 */",
 "/**
	 * @param $in
	 * @return bool
	 */",
 "/**
	 * @param $in
	 * @return bool
	 */",
 "/**
	 * @param $in
	 * @return bool
	 */",
 "/**
	 * @param $in
	 * @return bool
	 */",
 "/**
	 * Validates if a tag has a legal value according to the Exif spec
	 *
	 * @private
	 * @param $section String: section where tag is located.
	 * @param $tag String: the tag to check.
	 * @param $val Mixed: the value of the tag.
	 * @param $recursive Boolean: true if called recursively for array types.
	 * @return bool
	 */",
 "/**
	 * Convenience function for debugging output
	 *
	 * @private
	 *
	 * @param $in Mixed:
	 * @param $fname String:
	 * @param $action Mixed: , default NULL.
	 */",
 "/**
	 * Convenience function for debugging output
	 *
	 * @private
	 *
	 * @param $fname String: the name of the function calling this function
	 * @param $io Boolean: Specify whether we\'re beginning or ending
	 */",
 "/**
 * Class to extract and validate Exif data from jpeg (and possibly tiff) files.
 * @ingroup Media
 */",
 "/**
	 * Sets terminal colorization and diff/quick modes depending on OS and
	 * command-line options (--color and --quick).
	 */",
 "/**
	 * Remove last character if it is a newline
	 * @group utility
	 */",
 "/**
	 * Run a fuzz test series
	 * Draw input from a set of test files
	 */",
 "/**
	 * Get an input dictionary from a set of parser test files
	 */",
 "/**
	 * Get a memory usage breakdown
	 */",
 "/**
	 * Run a series of tests listed in the given text files.
	 * Each test consists of a brief description, wikitext input,
	 * and the expected HTML output.
	 *
	 * Prints status updates on stdout and counts up the total
	 * number and percentage of passed tests.
	 *
	 * @param $filenames Array of strings
	 * @return Boolean: true if passed all tests, false if any tests failed.
	 */",
 "/**
	 * Get a Parser object
	 */",
 "/**
	 * Run a given wikitext input through a freshly-constructed wiki parser,
	 * and compare the output against the expected results.
	 * Prints status and explanatory messages to stdout.
	 *
	 * @param $desc String: test\'s description
	 * @param $input String: wikitext to try rendering
	 * @param $result String: result to output
	 * @param $opts Array: test\'s options
	 * @param $config String: overrides for global variables, one per line
	 * @return Boolean
	 */",
 "/**
	 *
	 */",
 "/**
	 * Use a regex to find out the value of an option
	 * @param $key String: name of option val to retrieve
	 * @param $opts Options array to look in
	 * @param $default Mixed: default value returned if not found
	 */",
 "/**
	 * Set up the global variables for a consistent environment for each test.
	 * Ideally this should replace the global configuration entirely.
	 */",
 "/**
	 * List of temporary tables to create, without prefix.
	 * Some of these probably aren\'t necessary.
	 */",
 "/**
	 * Set up a temporary set of wiki tables to work with for the tests.
	 * Currently this will only be done once per run, and any changes to
	 * the db will be visible to later tests in the run.
	 */",
 "/**
	 * Create a dummy uploads directory which will contain a couple
	 * of files in order to pass existence tests.
	 *
	 * @return String: the directory
	 */",
 "/**
	 * Restore default values and perform any necessary clean-up
	 * after each test runs.
	 */",
 "/**
	 * Remove the dummy uploads directory
	 */",
 "/**
	 * Delete the specified files, if they exist.
	 * @param $files Array: full paths to files to delete.
	 */",
 "/**
	 * Delete the specified directories, if they exist. Must be empty.
	 * @param $dirs Array: full paths to directories to delete.
	 */",
 "/**
	 * \"Running test $desc...\"
	 */",
 "/**
	 * Print a happy success message.
	 *
	 * @param $desc String: the test name
	 * @return Boolean
	 */",
 "/**
	 * Print a failure message and provide some explanatory output
	 * about what went wrong if so configured.
	 *
	 * @param $desc String: the test name
	 * @param $result String: expected HTML output
	 * @param $html String: actual HTML output
	 * @return Boolean
	 */",
 "/**
	*Rungivenstringsthroughadiffandreturnthe(colorized)output.
	*Requireswritable/tmpdirectoryanda\'diff\'commandinthePATH.
	*
	*@param$inputString
	*@param$outputString
	*@param$inFileTailString:tailingfortheinputfilename
	*@param$outFileTailString:tailingfortheoutputfilename
	*@returnString
	*/",
 "/**
	*Writethegivenstringtoafile,addingafinalnewline.
	*
	*@param$dataString
	*@param$filenameString
	*/",
 "/**
	*ColorizeunifieddiffoutputifsetforANSIcoloroutput.
	*Subtractionsarecoloredblue,additionsred.
	*
	*@param$textString
	*@returnString
	*/",
 "/**
	 * Show \"Reading tests from ...\"
	 *
	 * @param $path String
	 */",
 "/**
	 * Insert a temporary test article
	 * @param $name String: the title, including any prefix
	 * @param $text String: the article text
	 * @param $line Integer: the input line number, for reporting errors
	 * @param $ignoreDuplicate Boolean: whether to silently ignore duplicate pages
	 */",
 "/**
	 * Steal a callback function from the primary parser, save it for
	 * application to our scary parser. If the hook is not installed,
	 * abort processing of this file.
	 *
	 * @param $name String
	 * @return Bool true if tag hook is present
	 */",
 "/**
	 * Steal a callback function from the primary parser, save it for
	 * application to our scary parser. If the hook is not installed,
	 * abort processing of this file.
	 *
	 * @param $name String
	 * @return Bool true if function hook is present
	 */",
 "/**
	 * Run the \"tidy\" command on text if the $wgUseTidy
	 * global is true
	 *
	 * @param $text String: the text to tidy
	 * @return String
	 */",
 "/**
 * @ingroup Testing
 */",
 "/** Validate a captcha response */",
 "/** Produce a nice little form */",
 "/** Pick a random sum */",
 "/** Fetch the math */",
 "/**
	 * Set page title and show header for this log type
	 * @param $type string
	 * @since 1.19
	 */",
 "/**
 * A special page that lists log entries
 *
 * @ingroup SpecialPage
 */",
 "/** Maithili (??????????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Ashishanchinhar
 * @author Dhirendra.maithili
 * @author Ggajendra
 * @author Kaganer
 * @author Kapileshwar.raut
 * @author Kumariprity
 * @author Manojberma77
 * @author Meno25
 * @author Priyanka.rachna.jha
 * @author Rajesh
 * @author Umeshberma
 * @author Vinitutpal
 */",
 "/** Tswana (Setswana)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Cbrown1023
 * @author Hakka
 */",
 "/** Pali (????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Eukesh (on pi.wikipedia.org)
 * @author Vibhijain
 */",
 "/** @dataProvider providerPlural */",
 "/** Tests for MediaWiki languages/classes/LanguageSl.php */",
 "/**
	 * @param $path string Storage path
	 * @param $mime string
	 * @return UnregisteredLocalFile
	 */",
 "/**
	 * @param $title
	 * @param $repo
	 * @return UnregisteredLocalFile
	 */",
 "/**
	 * Create an UnregisteredLocalFile based on a path or a (title,repo) pair.
	 * A FileRepo object is not required here, unlike most other File classes.
	 * 
	 * @throws MWException
	 * @param $title Title|false
	 * @param $repo FileRepo
	 * @param $path string
	 * @param $mime string
	 */",
 "/**
 * A file object referring to either a standalone local file, or a file in a
 * local repository with no database, for example an FileRepo repository.
 *
 * Read-only.
 *
 * TODO: Currently it doesn\'t really work in the repository role, there are
 * lots of functions missing. It is used by the WebStore extension in the
 * standalone role.
 *
 * @ingroup FileAbstraction
 */",
 "/**
	 * Constructor
	 */",
 "/**
	 * Main execution function
	 * @param $par array Parameters passed to the page
	 */",
 "/**
	 * Displays form showing the list of installed gadgets
	 */",
 "/**
		 * @var $g Gadget
		 */",
 "/**
	 * Exports a gadget with its dependencies in a serialized form
	 * @param $gadget String Name of gadget to export
	 */",
 "/**
 * Special:Gadgets, provides a preview of MediaWiki:Gadgets.
 *
 * @file
 * @ingroup SpecialPage
 * @author Daniel Kinzler, brightbyte.de
 * @copyright ?? 2007 Daniel Kinzler
 * @license GNU General Public License 2.0 or later
 */",
 "/**
 * A form to make the database readonly (eg for maintenance purposes).
 *
 * @ingroup SpecialPage
 */",
 "/** Welsh (Cymraeg)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Arwel Parry
 * @author Kaganer
 * @author Lloffiwr
 * @author Malafaya
 * @author Reedy
 * @author Thaf
 * @author Urhixidur
 * @author Xxglennxx
 * @author ???????? ????????????????
 */",
 "/**
*ThrownbyUser::setPassword()onerror.
*@ingroupException
*/",
 "/**
	 * Lightweight constructor for an anonymous user.
	 * Use the User::newFrom* factory functions for other kinds of users.
	 *
	 * @see newFromName()
	 * @see newFromId()
	 * @see newFromConfirmationCode()
	 * @see newFromSession()
	 * @see newFromRow()
	 */",
 "/**
	 * @return String
	 */",
 "/**
	 * Load the user table data for this object from the source given by mFrom.
	 */",
 "/**
	 * Load user table data, given mId has already been set.
	 * @return Bool false if the ID does not exist, true otherwise
	 */",
 "/**
	 * Save user data to the shared cache
	 */",
 "/**
	 * Static factory method for creation from username.
	 *
	 * This is slightly less efficient than newFromId(), so use newFromId() if
	 * you have both an ID and a name handy.
	 *
	 * @param $name String Username, validated by Title::newFromText()
	 * @param $validate String|Bool Validate username. Takes the same parameters as
	 *    User::getCanonicalName(), except that true is accepted as an alias
	 *    for \'valid\', for BC.
	 *
	 * @return User object, or false if the username is invalid
	 *    (e.g. if it contains illegal characters or is an IP address). If the
	 *    username is not present in the database, the result will be a user object
	 *    with a name, zero user ID and default settings.
	 */",
 "/**
	 * Static factory method for creation from a given user ID.
	 *
	 * @param $id Int Valid user ID
	 * @return User The corresponding User object
	 */",
 "/**
	 * Factory method to fetch whichever user has a given email confirmation code.
	 * This code is generated when an account is created or its e-mail address
	 * has changed.
	 *
	 * If the code is invalid or has expired, returns NULL.
	 *
	 * @param $code String Confirmation code
	 * @return User object, or null
	 */",
 "/**
	 * Create a new user object using data from session or cookies. If the
	 * login credentials are invalid, the result is an anonymous user.
	 *
	 * @param $request WebRequest object to use; $wgRequest will be used if
	 *        ommited.
	 * @return User object
	 */",
 "/**
	 * Create a new user object from a user row.
	 * The row should have the following fields from the user table in it:
	 * - either user_name or user_id to load further data if needed (or both)
	 * - user_real_name
	 * - all other fields (email, password, etc.)
	 * It is useless to provide the remaining fields if either user_id,
	 * user_name and user_real_name are not provided because the whole row
	 * will be loaded once more from the database when accessing them.
	 *
	 * @param $row Array A row from the user table
	 * @return User
	 */",
 "/**
	 * Get the username corresponding to a given user ID
	 * @param $id Int User ID
	 * @return String|false The corresponding username
	 */",
 "/**
	 * Get the real name of a user given their user ID
	 *
	 * @param $id Int User ID
	 * @return String|false The corresponding user\'s real name
	 */",
 "/**
	 * Get database id given a user name
	 * @param $name String Username
	 * @return Int|Null The corresponding user\'s ID, or null if user is nonexistent
	 */",
 "/**
	 * Reset the cache used in idFromName(). For use in tests.
	 */",
 "/**
	 * Does the string match an anonymous IPv4 address?
	 *
	 * This function exists for username validation, in order to reject
	 * usernames which are similar in form to IP addresses. Strings such
	 * as 300.300.300.300 will return true because it looks like an IP
	 * address, despite not being strictly valid.
	 *
	 * We match \d{1,3}\.\d{1,3}\.\d{1,3}\.xxx as an anonymous IP
	 * address because the usemod software would \"cloak\" anonymous IP
	 * addresses like this, if we allowed accounts like this to be created
	 * new users could get the old edits of these anonymous users.
	 *
	 * @param $name String to match
	 * @return Bool
	 */",
 "/**
	 * Is the input a valid username?
	 *
	 * Checks if the input is a valid username, we don\'t want an empty string,
	 * an IP address, anything that containins slashes (would mess up subpages),
	 * is longer than the maximum allowed username size or doesn\'t begin with
	 * a capital letter.
	 *
	 * @param $name String to match
	 * @return Bool
	 */",
 "/**
	 * Usernames which fail to pass this function will be blocked
	 * from user login and new account registrations, but may be used
	 * internally by batch processes.
	 *
	 * If an account already exists in this form, login will be blocked
	 * by a failure to pass this function.
	 *
	 * @param $name String to match
	 * @return Bool
	 */",
 "/**
	 * Usernames which fail to pass this function will be blocked
	 * from new account registrations, but may be used internally
	 * either by batch processes or by user accounts which have
	 * already been created.
	 *
	 * Additional blacklisting may be added here rather than in
	 * isValidUserName() to avoid disrupting existing accounts.
	 *
	 * @param $name String to match
	 * @return Bool
	 */",
 "/**
	 * Is the input a valid password for this user?
	 *
	 * @param $password String Desired password
	 * @return Bool
	 */",
 "/**
	 * Given unvalidated password input, return error message on failure.
	 *
	 * @param $password String Desired password
	 * @return mixed: true on success, string or array of error message on failure
	 */",
 "/**
	 * Does a string look like an e-mail address?
	 *
	 * This validates an email address using an HTML5 specification found at:
	 * http://www.whatwg.org/specs/web-apps/current-work/multipage/states-of-the-type-attribute.html#valid-e-mail-address
	 * Which as of 2011-01-24 says:
	 *
	 *     A valid e-mail address is a string that matches the ABNF production
	 *   1*( atext / \".\" ) \"@\" ldh-str *( \".\" ldh-str ) where atext is defined
	 *   in RFC 5322 section 3.2.3, and ldh-str is defined in RFC 1034 section
	 *   3.5.
	 *
	 * This function is an implementation of the specification as requested in
	 * bug 22449.
	 *
	 * Client-side forms will use the same standard validation rules via JS or
	 * HTML 5 validation; additional restrictions can be enforced server-side
	 * by extensions via the \'isValidEmailAddr\' hook.
	 *
	 * Note that this validation doesn\'t 100% match RFC 2822, but is believed
	 * to be liberal enough for wide use. Some invalid addresses will still
	 * pass validation here.
	 *
	 * @param $addr String E-mail address
	 * @return Bool
	 * @deprecated since 1.18 call Sanitizer::isValidEmail() directly
	 */",
 "/**
	 * Given unvalidated user input, return a canonical username, or false if
	 * the username is invalid.
	 * @param $name String User input
	 * @param $validate String|Bool type of validation to use:
	 *                - false        No validation
	 *                - \'valid\'      Valid for batch processes
	 *                - \'usable\'     Valid for batch processes and login
	 *                - \'creatable\'  Valid for batch processes, login and account creation
	 *
	 * @return bool|string
	 */",
 "/**
	 * Count the number of edits of a user
	 * @todo It should not be static and some day should be merged as proper member function / deprecated -- domas
	 *
	 * @param $uid Int User ID to check
	 * @return Int the user\'s edit count
	 */",
 "/**
	 * Return a random password.
	 *
	 * @return String new random password
	 */",
 "/**
	 * Set cached properties to default.
	 *
	 * @note This no longer clears uncached lazy-initialised properties;
	 *       the constructor does that instead.
	 *
	 * @param $name string
	 */",
 "/**
	 * Return whether an item has been loaded.
	 *
	 * @param $item String: item to check. Current possibilities:
	 *              - id
	 *              - name
	 *              - realname
	 * @param $all String: \'all\' to check if the whole object has been loaded
	 *        or any other string to check if only the item is available (e.g.
	 *        for optimisation)
	 * @return Boolean
	 */",
 "/**
	 * Set that an item has been loaded
	 *
	 * @param $item String
	 */",
 "/**
	 * Load user data from the session or login cookie. If there are no valid
	 * credentials, initialises the user as an anonymous user.
	 * @return Bool True if the user is logged in, false otherwise.
	 */",
 "/**
	 * Load user and user_group data from the database.
	 * $this->mId must be set, this is how the user is identified.
	 *
	 * @return Bool True if the user exists, false if the user is anonymous
	 */",
 "/**
	 * Initialize this object from a row from the user table.
	 *
	 * @param $row Array Row from the user table to load.
	 */",
 "/**
	 * Load the data for this user object from another user object.
	 *
	 * @param $user User
	 */",
 "/**
	 * Load the groups from the database if they aren\'t already loaded.
	 */",
 "/**
	 * Add the user to the group if he/she meets given criteria.
	 *
	 * Contrary to autopromotion by \ref $wgAutopromote, the group will be
	 *   possible to remove manually via Special:UserRights. In such case it
	 *   will not be re-added automatically. The user will also not lose the
	 *   group if they no longer meet the criteria.
	 *
	 * @param $event String key in $wgAutopromoteOnce (each one has groups/criteria)
	 *
	 * @return array Array of groups the user has been promoted to.
	 *
	 * @see $wgAutopromoteOnce
	 */",
 "/**
	 * Clear various cached data stored in this object.
	 * @param $reloadFrom bool|String Reload user and user_groups table data from a
	 *   given source. May be \"name\", \"id\", \"defaults\", \"session\", or false for
	 *   no reload.
	 */",
 "/**
	 * Combine the language default options with any site-specific options
	 * and add the default language variants.
	 *
	 * @return Array of String options
	 */",
 "/**
	 * Get a given default option value.
	 *
	 * @param $opt String Name of option to retrieve
	 * @return String Default option value
	 */",
 "/**
	 * Get blocking information
	 * @param $bFromSlave Bool Whether to check the slave database first. To
	 *                    improve performance, non-critical checks are done
	 *                    against slaves. Check when actually saving should be
	 *                    done against master.
	 */",
 "/**
	 * Whether the given IP is in a DNS blacklist.
	 *
	 * @param $ip String IP to check
	 * @param $checkWhitelist Bool: whether to check the whitelist first
	 * @return Bool True if blacklisted.
	 */",
 "/**
	 * Whether the given IP is in a given DNS blacklist.
	 *
	 * @param $ip String IP to check
	 * @param $bases String|Array of Strings: URL of the DNS blacklist
	 * @return Bool True if blacklisted.
	 */",
 "/**
	 * Check if an IP address is in the local proxy list
	 *
	 * @param $ip string
	 *
	 * @return bool
	 */",
 "/**
	 * Is this user subject to rate limiting?
	 *
	 * @return Bool True if rate limited
	 */",
 "/**
	 * Primitive rate limits: enforce maximum actions per time period
	 * to put a brake on flooding.
	 *
	 * @note When using a shared cache like memcached, IP-address
	 * last-hit counters will be shared across wikis.
	 *
	 * @param $action String Action to enforce; \'edit\' if unspecified
	 * @return Bool True if a rate limiter was tripped
	 */",
 "/**
	 * Check if user is blocked
	 *
	 * @param $bFromSlave Bool Whether to check the slave database instead of the master
	 * @return Bool True if blocked, false otherwise
	 */",
 "/**
	 * Get the block affecting the user, or null if the user is not blocked
	 *
	 * @param $bFromSlave Bool Whether to check the slave database instead of the master
	 * @return Block|null
	 */",
 "/**
	 * Check if user is blocked from editing a particular article
	 *
	 * @param $title Title to check
	 * @param $bFromSlave Bool whether to check the slave database instead of the master
	 * @return Bool
	 */",
 "/**
	 * If user is blocked, return the name of the user who placed the block
	 * @return String name of blocker
	 */",
 "/**
	 * If user is blocked, return the specified reason for the block
	 * @return String Blocking reason
	 */",
 "/**
	 * If user is blocked, return the ID for the block
	 * @return Int Block ID
	 */",
 "/**
	 * Check if user is blocked on all wikis.
	 * Do not use for actual edit permission checks!
	 * This is intented for quick UI checks.
	 *
	 * @param $ip String IP address, uses current client if none given
	 * @return Bool True if blocked, false otherwise
	 */",
 "/**
	 * Check if user account is locked
	 *
	 * @return Bool True if locked, false otherwise
	 */",
 "/**
	 * Check if user account is hidden
	 *
	 * @return Bool True if hidden, false otherwise
	 */",
 "/**
	 * Get the user\'s ID.
	 * @return Int The user\'s ID; 0 if the user is anonymous or nonexistent
	 */",
 "/**
	 * Set the user and reload all fields according to a given ID
	 * @param $v Int User ID to reload
	 */",
 "/**
	 * Get the user name, or the IP of an anonymous user
	 * @return String User\'s name or IP address
	 */",
 "/**
	 * Set the user name.
	 *
	 * This does not reload fields from the database according to the given
	 * name. Rather, it is used to create a temporary \"nonexistent user\" for
	 * later addition to the database. It can also be used to set the IP
	 * address for an anonymous user to something other than the current
	 * remote IP.
	 *
	 * @note User::newFromName() has rougly the same function, when the named user
	 * does not exist.
	 * @param $str String New user name to set
	 */",
 "/**
	 * Get the user\'s name escaped by underscores.
	 * @return String Username escaped by underscores.
	 */",
 "/**
	 * Check if the user has new messages.
	 * @return Bool True if the user has new messages
	 */",
 "/**
	 * Return the talk page(s) this user has new messages on.
	 * @return Array of String page URLs
	 */",
 "/**
	 * Internal uncached check for new messages
	 *
	 * @see getNewtalk()
	 * @param $field String \'user_ip\' for anonymous users, \'user_id\' otherwise
	 * @param $id String|Int User\'s IP address for anonymous users, User ID otherwise
	 * @param $fromMaster Bool true to fetch from the master, false for a slave
	 * @return Bool True if the user has new messages
	 */",
 "/**
	 * Add or update the new messages flag
	 * @param $field String \'user_ip\' for anonymous users, \'user_id\' otherwise
	 * @param $id String|Int User\'s IP address for anonymous users, User ID otherwise
	 * @return Bool True if successful, false otherwise
	 */",
 "/**
	 * Clear the new messages flag for the given user
	 * @param $field String \'user_ip\' for anonymous users, \'user_id\' otherwise
	 * @param $id String|Int User\'s IP address for anonymous users, User ID otherwise
	 * @return Bool True if successful, false otherwise
	 */",
 "/**
	 * Update the \'You have new messages!\' status.
	 * @param $val Bool Whether the user has new messages
	 */",
 "/**
	 * Generate a current or new-future timestamp to be stored in the
	 * user_touched field when we update things.
	 * @return String Timestamp in TS_MW format
	 */",
 "/**
	 * Clear user data from memcached.
	 * Use after applying fun updates to the database; caller\'s
	 * responsibility to update user_touched if appropriate.
	 *
	 * Called implicitly from invalidateCache() and saveSettings().
	 */",
 "/**
	 * Immediately touch the user data cache for this account.
	 * Updates user_touched field, and removes account data from memcached
	 * for reload on the next hit.
	 */",
 "/**
	 * Validate the cache for this account.
	 * @param $timestamp String A timestamp in TS_MW format
	 *
	 * @return bool
	 */",
 "/**
	 * Get the user touched timestamp
	 * @return String timestamp
	 */",
 "/**
	 * Set the password and reset the random token.
	 * Calls through to authentication plugin if necessary;
	 * will have no effect if the auth plugin refuses to
	 * pass the change through or if the legal password
	 * checks fail.
	 *
	 * As a special case, setting the password to null
	 * wipes it, so the account cannot be logged in until
	 * a new password is set, for instance via e-mail.
	 *
	 * @param $str String New password to set
	 * @throws PasswordError on failure
	 *
	 * @return bool
	 */",
 "/**
	 * Set the password and reset the random token unconditionally.
	 *
	 * @param $str String New password to set
	 */",
 "/**
	 * Get the user\'s current token.
	 * @param $forceCreation Force the generation of a new token if the user doesn\'t have one (default=true for backwards compatibility)
	 * @return String Token
	 */",
 "/**
	 * Set the random token (used for persistent authentication)
	 * Called from loadDefaults() among other places.
	 *
	 * @param $token String|bool If specified, set the token to this value
	 */",
 "/**
	 * Set the cookie password
	 *
	 * @param $str String New cookie password
	 */",
 "/**
	 * Set the password for a password reminder or new account email
	 *
	 * @param $str String New password to set
	 * @param $throttle Bool If true, reset the throttle timestamp to the present
	 */",
 "/**
	 * Has password reminder email been sent within the last
	 * $wgPasswordReminderResendTime hours?
	 * @return Bool
	 */",
 "/**
	 * Get the user\'s e-mail address
	 * @return String User\'s email address
	 */",
 "/**
	 * Get the timestamp of the user\'s e-mail authentication
	 * @return String TS_MW timestamp
	 */",
 "/**
	 * Set the user\'s e-mail address
	 * @param $str String New e-mail address
	 */",
 "/**
	 * Get the user\'s real name
	 * @return String User\'s real name
	 */",
 "/**
	 * Set the user\'s real name
	 * @param $str String New real name
	 */",
 "/**
	 * Get the user\'s current setting for a given option.
	 *
	 * @param $oname String The option to check
	 * @param $defaultOverride String A default value returned if the option does not exist
	 * @param $ignoreHidden Bool = whether to ignore the effects of $wgHiddenPrefs
	 * @return String User\'s current value for the option
	 * @see getBoolOption()
	 * @see getIntOption()
	 */",
 "/**
	 * Get all user\'s options
	 *
	 * @return array
	 */",
 "/**
	 * Get the user\'s current setting for a given option, as a boolean value.
	 *
	 * @param $oname String The option to check
	 * @return Bool User\'s current value for the option
	 * @see getOption()
	 */",
 "/**
	 * Get the user\'s current setting for a given option, as a boolean value.
	 *
	 * @param $oname String The option to check
	 * @param $defaultOverride Int A default value returned if the option does not exist
	 * @return Int User\'s current value for the option
	 * @see getOption()
	 */",
 "/**
	 * Set the given option for a user.
	 *
	 * @param $oname String The option to set
	 * @param $val mixed New value to set
	 */",
 "/**
	 * Reset all options to the site defaults
	 */",
 "/**
	 * Get the user\'s preferred date format.
	 * @return String User\'s preferred date format
	 */",
 "/**
	 * Get the user preferred stub threshold
	 *
	 * @return int
	 */",
 "/**
	 * Get the permissions this user has.
	 * @return Array of String permission names
	 */",
 "/**
	 * Get the list of explicit group memberships this user has.
	 * The implicit * and user groups are not included.
	 * @return Array of String internal group names
	 */",
 "/**
	 * Get the list of implicit group memberships this user has.
	 * This includes all explicit groups, plus \'user\' if logged in,
	 * \'*\' for all accounts, and autopromoted groups
	 * @param $recache Bool Whether to avoid the cache
	 * @return Array of String internal group names
	 */",
 "/**
	 * Get the list of implicit group memberships this user has.
	 * This includes \'user\' if logged in, \'*\' for all accounts,
	 * and autopromoted groups
	 * @param $recache Bool Whether to avoid the cache
	 * @return Array of String internal group names
	 */",
 "/**
	 * Returns the groups the user has belonged to.
	 *
	 * The user may still belong to the returned groups. Compare with getGroups().
	 *
	 * The function will not return groups the user had belonged to before MW 1.17
	 *
	 * @return array Names of the groups the user has belonged to.
	 */",
 "/**
	 * Get the user\'s edit count.
	 * @return Int
	 */",
 "/**
	 * Add the user to the given group.
	 * This takes immediate effect.
	 * @param $group String Name of the group to add
	 */",
 "/**
	 * Remove the user from the given group.
	 * This takes immediate effect.
	 * @param $group String Name of the group to remove
	 */",
 "/**
	 * Get whether the user is logged in
	 * @return Bool
	 */",
 "/**
	 * Get whether the user is anonymous
	 * @return Bool
	 */",
 "/**
	 * Check if user is allowed to access a feature / make an action
	 *
	 * @internal param \String $varargs permissions to test
	 * @return Boolean: True if user is allowed to perform *any* of the given actions
	 *
	 * @return bool
	 */",
 "/**
	 *
	 * @internal param $varargs string
	 * @return bool True if the user is allowed to perform *all* of the given actions
	 */",
 "/**
	 * Internal mechanics of testing a permission
	 * @param $action String
	 * @return bool
	 */",
 "/**
	 * Check whether to enable recent changes patrol features for this user
	 * @return Boolean: True or false
	 */",
 "/**
	 * Check whether to enable new pages patrol features for this user
	 * @return Bool True or false
	 */",
 "/**
	 * Get the WebRequest object to use with this object
	 *
	 * @return WebRequest
	 */",
 "/**
	 * Get the current skin, loading it if required
	 * @return Skin The current skin
	 * @todo FIXME: Need to check the old failback system [AV]
	 * @deprecated since 1.18 Use ->getSkin() in the most relevant outputting context you have
	 */",
 "/**
	 * Check the watched status of an article.
	 * @param $title Title of the article to look at
	 * @return Bool
	 */",
 "/**
	 * Watch an article.
	 * @param $title Title of the article to look at
	 */",
 "/**
	 * Stop watching an article.
	 * @param $title Title of the article to look at
	 */",
 "/**
	 * Clear the user\'s notification timestamp for the given title.
	 * If e-notif e-mails are on, they will receive notification mails on
	 * the next change of the page if it\'s watched etc.
	 * @param $title Title of the article to look at
	 */",
 "/**
	 * Resets all of the given user\'s page-change notification timestamps.
	 * If e-notif e-mails are on, they will receive notification mails on
	 * the next change of any watched page.
	 */",
 "/**
	 * Set this user\'s options from an encoded string
	 * @param $str String Encoded options to import
	 *
	 * @deprecated in 1.19 due to removal of user_options from the user table
	 */",
 "/**
	 * Set a cookie on the user\'s client. Wrapper for
	 * WebResponse::setCookie
	 * @param $name String Name of the cookie to set
	 * @param $value String Value to set
	 * @param $exp Int Expiration time, as a UNIX time value;
	 *                   if 0 or not specified, use the default $wgCookieExpiration
	 */",
 "/**
	 * Clear a cookie on the user\'s client
	 * @param $name String Name of the cookie to clear
	 */",
 "/**
	 * Set the default cookies for this session on the user\'s client.
	 *
	 * @param $request WebRequest object to use; $wgRequest will be used if null
	 *        is passed.
	 */",
 "/**
	 * Log this user out.
	 */",
 "/**
	 * Clear the user\'s cookies and session, and reset the instance cache.
	 * @see logout()
	 */",
 "/**
	 * Save this user\'s settings into the database.
	 * @todo Only rarely do all these fields need to be set!
	 */",
 "/**
	 * If only this user\'s username is known, and it exists, return the user ID.
	 * @return Int
	 */",
 "/**
	 * Add a user to the database, return the user object
	 *
	 * @param $name String Username to add
	 * @param $params Array of Strings Non-default parameters to save to the database as user_* fields:
	 *   - password             The user\'s password hash. Password logins will be disabled if this is omitted.
	 *   - newpassword          Hash for a temporary password that has been mailed to the user
	 *   - email                The user\'s email address
	 *   - email_authenticated  The email authentication timestamp
	 *   - real_name            The user\'s real name
	 *   - options              An associative array of non-default options
	 *   - token                Random authentication token. Do not set.
	 *   - registration         Registration timestamp. Do not set.
	 *
	 * @return User object, or null if the username already exists
	 */",
 "/**
	 * Add this existing user object to the database
	 */",
 "/**
	 * If this user is logged-in and blocked,
	 * block any IP address they\'ve successfully logged in from.
	 * @return bool A block was spread
	 */",
 "/**
	 * If this (non-anonymous) user is blocked,
	 * block the IP address they\'ve successfully logged in from.
	 * @return bool A block was spread
	 */",
 "/**
	 * Generate a string which will be different for any combination of
	 * user options which would produce different parser output.
	 * This will be used as part of the hash key for the parser cache,
	 * so users with the same options can share the same cached data
	 * safely.
	 *
	 * Extensions which require it should install \'PageRenderingHash\' hook,
	 * which will give them a chance to modify this key based on their own
	 * settings.
	 *
	 * @deprecated since 1.17 use the ParserOptions object to get the relevant options
	 * @return String Page rendering hash
	 */",
 "/**
	 * Get whether the user is explicitly blocked from account creation.
	 * @return Bool|Block
	 */",
 "/**
	 * Get whether the user is blocked from using Special:Emailuser.
	 * @return Bool
	 */",
 "/**
	 * Get whether the user is allowed to create an account.
	 * @return Bool
	 */",
 "/**
	 * Get this user\'s personal page title.
	 *
	 * @return Title: User\'s personal page title
	 */",
 "/**
	 * Get this user\'s talk page title.
	 *
	 * @return Title: User\'s talk page title
	 */",
 "/**
	 * Determine whether the user is a newbie. Newbies are either
	 * anonymous IPs, or the most recently created accounts.
	 * @return Bool
	 */",
 "/**
	 * Check to see if the given clear-text password is one of the accepted passwords
	 * @param $password String: user password.
	 * @return Boolean: True if the given password is correct, otherwise False.
	 */",
 "/**
	 * Check if the given clear-text password matches the temporary password
	 * sent by e-mail for password reset operations.
	 *
	 * @param $plaintext string
	 *
	 * @return Boolean: True if matches, false otherwise
	 */",
 "/**
	 * Alias for getEditToken.
	 * @deprecated since 1.19, use getEditToken instead.
	 *
	 * @param $salt String|Array of Strings Optional function-specific data for hashing
	 * @param $request WebRequest object to use or null to use $wgRequest
	 * @return String The new edit token
	 */",
 "/**
	 * Initialize (if necessary) and return a session token value
	 * which can be used in edit forms to show that the user\'s
	 * login credentials aren\'t being hijacked with a foreign form
	 * submission.
	 *
	 * @since 1.19
	 *
	 * @param $salt String|Array of Strings Optional function-specific data for hashing
	 * @param $request WebRequest object to use or null to use $wgRequest
	 * @return String The new edit token
	 */",
 "/**
	 * Generate a looking random token for various uses.
	 *
	 * @param $salt String Optional salt value
	 * @return String The new random token
	 */",
 "/**
	 * Check given value against the token value stored in the session.
	 * A match should confirm that the form was submitted from the
	 * user\'s own login session, not a form submission from a third-party
	 * site.
	 *
	 * @param $val String Input value to compare
	 * @param $salt String Optional function-specific data for hashing
	 * @param $request WebRequest object to use or null to use $wgRequest
	 * @return Boolean: Whether the token matches
	 */",
 "/**
	 * Check given value against the token value stored in the session,
	 * ignoring the suffix.
	 *
	 * @param $val String Input value to compare
	 * @param $salt String Optional function-specific data for hashing
	 * @param $request WebRequest object to use or null to use $wgRequest
	 * @return Boolean: Whether the token matches
	 */",
 "/**
	 * Generate a new e-mail confirmation token and send a confirmation/invalidation
	 * mail to the user\'s given address.
	 *
	 * @param $type String: message to send, either \"created\", \"changed\" or \"set\"
	 * @return Status object
	 */",
 "/**
	 * Send an e-mail to this user\'s account. Does not check for
	 * confirmed status or validity.
	 *
	 * @param $subject String Message subject
	 * @param $body String Message body
	 * @param $from String Optional From address; if unspecified, default $wgPasswordSender will be used
	 * @param $replyto String Reply-To address
	 * @return Status
	 */",
 "/**
	 * Generate, store, and return a new e-mail confirmation code.
	 * A hash (unsalted, since it\'s used as a key) is stored.
	 *
	 * @note Call saveSettings() after calling this function to commit
	 * this change to the database.
	 *
	 * @param &$expiration \mixed Accepts the expiration time
	 * @return String New token
	 */",
 "/**
	* Return a URL the user can use to confirm their email address.
	 * @param $token String Accepts the email confirmation token
	 * @return String New token URL
	 */",
 "/**
	 * Return a URL the user can use to invalidate their email address.
	 * @param $token String Accepts the email confirmation token
	 * @return String New token URL
	 */",
 "/**
	 * Internal function to format the e-mail validation/invalidation URLs.
	 * This uses a quickie hack to use the
	 * hardcoded English names of the Special: pages, for ASCII safety.
	 *
	 * @note Since these URLs get dropped directly into emails, using the
	 * short English names avoids insanely long URL-encoded links, which
	 * also sometimes can get corrupted in some browsers/mailers
	 * (bug 6957 with Gmail and Internet Explorer).
	 *
	 * @param $page String Special page
	 * @param $token String Token
	 * @return String Formatted URL
	 */",
 "/**
	 * Mark the e-mail address confirmed.
	 *
	 * @note Call saveSettings() after calling this function to commit the change.
	 *
	 * @return true
	 */",
 "/**
	 * Invalidate the user\'s e-mail confirmation, and unauthenticate the e-mail
	 * address if it was already confirmed.
	 *
	 * @note Call saveSettings() after calling this function to commit the change.
	 * @return true
	 */",
 "/**
	 * Set the e-mail authentication timestamp.
	 * @param $timestamp String TS_MW timestamp
	 */",
 "/**
	 * Is this user allowed to send e-mails within limits of current
	 * site configuration?
	 * @return Bool
	 */",
 "/**
	 * Is this user allowed to receive e-mails within limits of current
	 * site configuration?
	 * @return Bool
	 */",
 "/**
	 * Is this user\'s e-mail address valid-looking and confirmed within
	 * limits of the current site configuration?
	 *
	 * @note If $wgEmailAuthentication is on, this may require the user to have
	 * confirmed their address by returning a code or using a password
	 * sent to the address from the wiki.
	 *
	 * @return Bool
	 */",
 "/**
	 * Check whether there is an outstanding request for e-mail confirmation.
	 * @return Bool
	 */",
 "/**
	 * Get the timestamp of account creation.
	 *
	 * @return String|Bool Timestamp of account creation, or false for
	 *     non-existent/anonymous user accounts.
	 */",
 "/**
	 * Get the timestamp of the first edit
	 *
	 * @return String|Bool Timestamp of first edit, or false for
	 *     non-existent/anonymous user accounts.
	 */",
 "/**
	 * Get the permissions associated with a given list of groups
	 *
	 * @param $groups Array of Strings List of internal group names
	 * @return Array of Strings List of permission key names for given groups combined
	 */",
 "/**
	 * Get all the groups who have a given permission
	 *
	 * @param $role String Role to check
	 * @return Array of Strings List of internal group names with the given permission
	 */",
 "/**
	 * Get the localized descriptive name for a group, if it exists
	 *
	 * @param $group String Internal group name
	 * @return String Localized descriptive group name
	 */",
 "/**
	 * Get the localized descriptive name for a member of a group, if it exists
	 *
	 * @param $group String Internal group name
	 * @param $username String Username for gender (since 1.19)
	 * @return String Localized name for group member
	 */",
 "/**
	 * Return the set of defined explicit groups.
	 * The implicit groups (by default *, \'user\' and \'autoconfirmed\')
	 * are not included, as they are defined automatically, not in the database.
	 * @return Array of internal group names
	 */",
 "/**
	 * Get a list of all available permissions.
	 * @return Array of permission names
	 */",
 "/**
	 * Get a list of implicit groups
	 * @return Array of Strings Array of internal group names
	 */",
 "/**
	 * Get the title of a page describing a particular group
	 *
	 * @param $group String Internal group name
	 * @return Title|Bool Title of the page if it exists, false otherwise
	 */",
 "/**
	 * Create a link to the group in HTML, if available;
	 * else return the group name.
	 *
	 * @param $group String Internal name of the group
	 * @param $text String The text of the link
	 * @return String HTML link to the group
	 */",
 "/**
	 * Create a link to the group in Wikitext, if available;
	 * else return the group name.
	 *
	 * @param $group String Internal name of the group
	 * @param $text String The text of the link
	 * @return String Wikilink to the group
	 */",
 "/**
	 * Returns an array of the groups that a particular group can add/remove.
	 *
	 * @param $group String: the group to check for whether it can add/remove
	 * @return Array array( \'add\' => array( addablegroups ),
	 *     \'remove\' => array( removablegroups ),
	 *     \'add-self\' => array( addablegroups to self),
	 *     \'remove-self\' => array( removable groups from self) )
	 */",
 "/**
	 * Returns an array of groups that this user can add and remove
	 * @return Array array( \'add\' => array( addablegroups ),
	 *  \'remove\' => array( removablegroups ),
	 *  \'add-self\' => array( addablegroups to self),
	 *  \'remove-self\' => array( removable groups from self) )
	 */",
 "/**
	 * Increment the user\'s edit-count field.
	 * Will have no effect for anonymous users.
	 */",
 "/**
	 * Get the description of a given right
	 *
	 * @param $right String Right to query
	 * @return String Localized description of the right
	 */",
 "/**
	 * Make an old-style password hash
	 *
	 * @param $password String Plain-text password
	 * @param $userId String User ID
	 * @return String Password hash
	 */",
 "/**
	 * Make a new-style password hash
	 *
	 * @param $password String Plain-text password
	 * @param bool|string $salt Optional salt, may be random or the user ID.

	 *                     If unspecified or false, will generate one automatically
	 * @return String Password hash
	 */",
 "/**
	 * Compare a password hash with a plain-text password. Requires the user
	 * ID if there\'s a chance that the hash is an old-style hash.
	 *
	 * @param $hash String Password hash
	 * @param $password String Plain-text password to compare
	 * @param $userId String|bool User ID for old-style password salt
	 *
	 * @return Boolean
	 */",
 "/**
	 * Add a newuser log entry for this user. Before 1.19 the return value was always true.
	 *
	 * @param $byEmail Boolean: account made by email?
	 * @param $reason String: user supplied reason
	 *
	 * @return int|bool True if not $wgNewUserLog; otherwise ID of log item or 0 on failure
	 */",
 "/**
	 * Add an autocreate newuser log entry for this user
	 * Used by things like CentralAuth and perhaps other authplugins.
	 *
	 * @return true
	 */",
 "/**
	 * @todo document
	 */",
 "/**
	 * @todo document
	 */",
 "/**
	 * Provide an array of HTML5 attributes to put on an input element
	 * intended for the user to enter a new password.  This may include
	 * required, title, and/or pattern, depending on $wgMinimalPasswordLength.
	 *
	 * Do *not* use this when asking the user to enter his current password!
	 * Regardless of configuration, users may have invalid passwords for whatever
	 * reason (e.g., they were set before requirements were tightened up).
	 * Only use it when asking for a new password, like on account creation or
	 * ResetPass.
	 *
	 * Obviously, you still need to do server-side checking.
	 *
	 * NOTE: A combination of bugs in various browsers means that this function
	 * actually just returns array() unconditionally at the moment.  May as
	 * well keep it around for when the browser bugs get fixed, though.
	 *
	 * @todo FIXME: This does not belong here; put it in Html or Linker or somewhere
	 *
	 * @return array Array of HTML attributes suitable for feeding to
	 *   Html::element(), directly or indirectly.  (Don\'t feed to Xml::*()!
	 *   That will potentially output invalid XHTML 1.0 Transitional, and will
	 *   get confused by the boolean attribute syntax used.)
	 */",
 "/**
 * The User object encapsulates all of the user-specific settings (user_id,
 * name, rights, password, email address, options, last login time). Client
 * classes use the getXXX() functions to access these fields. These functions
 * do all the work of determining whether the user is logged in,
 * whether the requested option can be satisfied from cookies or
 * whether a database query is needed. Most of the settings needed
 * for rendering normal pages are set in the cookie to minimize use
 * of the database.
 */",
 "/**
	 * Constructor
	 *
	 * @param $id Integer: page ID to increment the view count
	 */",
 "/**
	 * Run the update
	 */",
 "/**
 * Update for the \'page_counter\' field, when $wgDisableCounters is false.
 *
 * Depending on $wgHitcounterUpdateFreq, this will directly increment the
 * \'page_counter\' field or use the \'hitcounter\' table and then collect the data
 * from that table to update the \'page_counter\' field in a batch operation.
 */",
 "/**
	 * Cases: rodilnik, dajalnik, to??ilnik, mestnik, orodnik
	 *
	 * @param $word string
	 * @param $case string
	 *
	 * @return string
	 */",
 "/**
	 * @param $count int
	 * @param $forms array
	 *
	 * @return string
	 */",
 "/** Slovenian (Sloven????ina)
 *
 * @ingroup Language
 */",
 "/**
	 * Patrols the article or provides the reason the patrol failed.
	 */",
 "/**
 * Allows user to patrol pages
 * @ingroup API
 */",
 "/**
	 * Get a key on the primary cache for this repository.
	 * Returns false if the repository\'s cache is not accessible at this site. 
	 * The parameters are the parts of the key, as for wfMemcKey().
	 */",
 "/**
 * A foreign repository with an accessible MediaWiki database
 *
 * @ingroup FileRepo
 */",
 "/**
 * This test case will be handling the Wiki Tool bar Dialog functions
 * Date : Apr - 2010
 * @author : BhagyaG - Calcey
 */",
 "/** Kashmiri (??????????????? - ??????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author ????????????
 */",
 "/** Guarani (Ava??e\'???)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Hugo.arg
 * @author Perla
 */",
 "/**
	 * Check whether an interwiki prefix exists
	 *
	 * @param $prefix String: interwiki prefix to use
	 * @return Boolean: whether it exists
	 */",
 "/**
	 * Fetch an Interwiki object
	 *
	 * @param $prefix String: interwiki prefix to use
	 * @return Interwiki Object, or null if not valid
	 */",
 "/**
	 * Fetch interwiki prefix data from local cache in constant database.
	 *
	 * @note More logic is explained in DefaultSettings.
	 *
	 * @param $prefix String: interwiki prefix
	 * @return Interwiki object
	 */",
 "/**
	 * Get entry from interwiki cache
	 *
	 * @note More logic is explained in DefaultSettings.
	 *
	 * @param $prefix String: database key
	 * @return String: the entry
	 */",
 "/**
	 * Load the interwiki, trying first memcached then the DB
	 *
	 * @param $prefix string The interwiki prefix
	 * @return Boolean: the prefix is valid
	 */",
 "/**
	 * Fill in member variables from an array (e.g. memcached result, Database::fetchRow, etc)
	 *
	 * @param $mc array Associative array: row from the interwiki table
	 * @return Boolean|Interwiki whether everything was there
	 */",
 "/**
	 * Fetch all interwiki prefixes from interwiki cache
	 *
	 * @param $local null|string If not null, limits output to local/non-local interwikis
	 * @return Array List of prefixes
	 * @since 1.19
	 */",
 "/**
	 * Fetch all interwiki prefixes from DB
	 *
	 * @param $local string|null If not null, limits output to local/non-local interwikis
	 * @return Array List of prefixes
	 * @since 1.19
	 */",
 "/**
	 * Returns all interwiki prefixes
	 *
	 * @param $local string|null If set, limits output to local/non-local interwikis
	 * @return Array List of prefixes
	 * @since 1.19
	 */",
 "/**
	 * Get the URL for a particular title (or with $1 if no title given)
	 *
	 * @param $title String: what text to put for the article name
	 * @return String: the URL
	 * @note Prior to 1.19 The getURL with an argument was broken.
	 *       If you if you use this arg in an extension that supports MW earlier
	 *       than 1.19 please wfUrlencode and substitute $1 on your own.
	 */",
 "/**
	 * Get the API URL for this wiki
	 *
	 * @return String: the URL
	 */",
 "/**
	 * Get the DB name for this wiki
	 *
	 * @return String: the DB name
	 */",
 "/**
	 * Is this a local link from a sister project, or is
	 * it something outside, like Google
	 *
	 * @return Boolean
	 */",
 "/**
	 * Can pages from this wiki be transcluded?
	 * Still requires $wgEnableScaryTransclusion
	 *
	 * @return Boolean
	 */",
 "/**
	 * Get the name for the interwiki site
	 *
	 * @return String
	 */",
 "/**
	 * Get a description for this interwiki
	 *
	 * @return String
	 */",
 "/**
 * The interwiki class
 * All information is loaded on creation when called by Interwiki::fetch( $prefix ).
 * All work is done on slave, because this should *never* change (except during
 * schema updates etc, which aren\'t wiki-related)
 */",
 "/**
	 * Creates an instance of this class
	 * @param $db DatabaseSqlite: database object
	 */",
 "/**
	 * Perform a full text search query via tsearch2 and return a result set.
	 * Currently searches a page\'s current title (page.page_title) and
	 * latest revision article text (pagecontent.old_text)
	 *
	 * @param $term String: raw search term
	 * @return PostgresSearchResultSet
	 */",
 "/**
	 * Transform the user\'s search string into a better form for tsearch2
	 * Returns an SQL fragment consisting of quoted text to search for.
	 *
	 * @param $term string
	 *
	 * @return string
	 */",
 "/**
	 * Construct the full SQL query to do the search.
	 * @param $term String
	 * @param $fulltext String
	 * @param $colname
	 */",
 "/**
 * Search engine hook base class for Postgres
 * @ingroup Search
 */",
 "/**
 * @ingroup Search
 */",
 "/**
 * @ingroup Search
 */",
 "/**
	 * Construct a database error
	 * @param $db DatabaseBase object which threw the error
	 * @param $error String A simple error message to be used for debugging
	 */",
 "/**
	 * @param $html string
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
 * Database error base class
 * @ingroup Database
 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * @param $key
	 * @param $fallback
	 * @return string
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
 * @ingroup Database
 */",
 "/**
	 * @param $db DatabaseBase
	 * @param $error string
	 * @param $errno int|string
	 * @param $sql string
	 * @param $fname string
	 */",
 "/**
	 * @param $html string
	 * @return string
	 */",
 "/**
	 * @return String
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * @return String
	 */",
 "/**
 * @ingroup Database
 */",
 "/**
 * @ingroup Database
 */",
 "/**
	 * Use singular form for zero
	 *
	 * @param $count int
	 * @param $forms array
	 *
	 * @return string
	 */",
 "/**
	 * Dates in Walloon are \"1?? d\' <monthname>\" for 1st of the month,
	 * \"<day> di <monthname>\" for months starting by a consoun, and
	 * \"<day> d\' <monthname>\" for months starting with a vowel
	 *
	 * @param $ts string
	 * @param $adj bool
	 * @param $format bool
	 * @param $tc bool
	 * @return string
	 */",
 "/**
	 * @param $ts string
	 * @param $adj bool
	 * @param $format bool
	 * @param $tc bool
	 * @return string
	 */",
 "/**
 * Search a directory for files with one of a set of extensions
 *
 * @param $dir Path to directory to search
 * @param $exts Array of extensions to search for
 * @return mixed Array of filenames on success, or false on failure
 */",
 "/**
 * Split a filename into filename and extension
 *
 * @param $filename string Filename
 * @return array
 */",
 "/**
 * Find an auxilliary file with the given extension, matching
 * the give base file path. $maxStrip determines how many extensions
 * may be stripped from the original file name before appending the
 * new extension. For example, with $maxStrip = 1 (the default),
 * file files acme.foo.bar.txt and acme.foo.txt would be auxilliary
 * files for acme.foo.bar and the extension \".txt\". With $maxStrip = 2,
 * acme.txt would also be acceptable.
 *
 * @param $file base path
 * @param $auxExtension the extension to be appended to the base path
 * @param $maxStrip the maximum number of extensions to strip from the base path (default: 1)
 * @return string or false
 */",
 "/**
	 * @dataProvider provideNormalTimestamps
	 */",
 "/**
	 * This test checks wfTimestamp() with values outside.
	 * It needs PHP 64 bits or PHP > 5.1.
	 * See r74778 and bug 25451
	 * @dataProvider provideOldTimestamps
	 */",
 "/**
	 * The Resource Loader uses wfTimestamp() to convert timestamps
	 * from If-Modified-Since header. Thus it must be able to parse all
	 * rfc2616 date formats
	 * @see http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1
	 * @dataProvider provideHttpDates
	 */",
 "/**
	 * There are a number of assumptions in our codebase where wfTimestamp()
	 * should give the current date but it is not given a 0 there. See r71751 CR
	 */",
 "/** Eastern Mari (???????? ??????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Amdf
 * @author Azim
 * @author Jose77
 * @author Kaganer
 * @author Lifeway
 * @author ??????
 */",
 "/**
	 * ISO number formatting: 123 456 789,99.
	 * Avoid tripple grouping by numbers with whole part up to 4 digits.
	 *
	 * @param $_ string
	 *
	 * @return string
	 */",
 "/** Bulgarian (??????????????????)
 *
 * @ingroup Language
 */",
 "/** Tachelhit (Ta??l???iyt/?????????????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Dalinanir
 * @author Ebe123
 * @author Zanatos
 */",
 "/** Samoan (Gagana Samoa)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author sm.wikipedia.org sysops
 */",
 "/**
	 * @param $dir string
	 * @param $report string|bool Use \'report\' to report the directories being scanned
	 */",
 "/**
	 * @param $out OutputPage
	 */",
 "/**
 * Inherit main code from SkinTemplate, set the CSS and template filter.
 * @todo document
 * @ingroup Skins
 */",
 "/**
	 * Template filter callback for Modern skin.
	 * Takes an associative array of data set from a SkinTemplate-based
	 * class, and a wrapper for MediaWiki\'s localization database, and
	 * outputs a formatted page.
	 *
	 * @access private
	 */",
 "/**
 * @todo document
 * @ingroup Skins
 */",
 "/**
	 * @param $parser Parser
	 * @return bool
	 */",
 "/**
	 * Register ParserClearState hook.
	 * We defer this until needed to avoid the loading of the code of this file
	 * when no parser function is actually called.
	 */",
 "/**
	 * Get the marker regex. Cached.
	 * @param $parser Parser
	 * @return
	 */",
 "/**
	 * @param $parser Parser
	 * @param $text string
	 * @return string
	 */",
 "/**
	 * @return ExprParser
	 */",
 "/**
	 * @param $parser Parser
	 * @param $expr string
	 * @return string
	 */",
 "/**
	 * @param $parser Parser
	 * @param $expr string
	 * @param $then string
	 * @param $else string
	 * @return string
	 */",
 "/**
	 * @param $parser Parser
	 * @param $frame PPFrame
	 * @param $args array
	 * @return string
	 */",
 "/**
	 * @param $parser Parser
	 * @param $frame PPFrame
	 * @param $args array
	 * @return string
	 */",
 "/**
	 * @param $parser Parser
	 * @param $frame PPFrame
	 * @param $args array
	 * @return string
	 */",
 "/**
	 * @param $parser Parser
	 * @param $test string
	 * @param $then string
	 * @param $else bool
	 * @return bool|string
	 */",
 "/**
	 * @param $parser Parser
	 * @param $frame PPFrame
	 * @param $args array
	 * @return string
	 */",
 "/**
	 * @param $parser Parser
	 * @param $frame PPFrame
	 * @param $args
	 * @return string
	 */",
 "/**
	 * Returns the absolute path to a subpage, relative to the current article
	 * title. Treats titles as slash-separated paths.
	 *
	 * Following subpage link syntax instead of standard path syntax, an
	 * initial slash is treated as a relative path, and vice versa.
	 *
	 * @param $parser Parser
	 * @param $to string
	 * @param $from string
	 *
	 * @return string
	 */",
 "/**
	 * @param $parser Parser
	 * @param $frame PPFrame
	 * @return bool
	 */",
 "/**
	 * @param $parser Parser
	 * @param $frame PPFrame
	 * @param $titletext string
	 * @param $then string
	 * @param $else string
	 *
	 * @return string
	 */",
 "/**
	 * @param $parser Parser
	 * @param $frame PPFrame
	 * @param $args array
	 * @return string
	 */",
 "/**
	 * @param $parser Parser
	 * @param $format string
	 * @param $date string
	 * @param $language string
	 * @param $local string|bool
	 * @return string
	 */",
 "/**
	 * @param $parser Parser
	 * @param $format string
	 * @param $date string
	 * @param $language string
	 * @return string
	 */",
 "/**
	 * Obtain a specified number of slash-separated parts of a title,
	 * e.g. {{#titleparts:Hello/World|1}} => \"Hello\"
	 *
	 * @param $parser Parent parser
	 * @param $title string Title to split
	 * @param $parts int Number of parts to keep
	 * @param $offset int Offset starting at 1
	 * @return string
	 */",
 "/**
	 * Get a ConvertParser object
	 * @return ConvertParser
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 *  Verifies parameter is less than max string length.
	 * @param $text
	 * @return bool
	 */",
 "/**
	 * Generates error message.  Called when string is too long.
	 * @return string
	 */",
 "/**
	 * {{#len:string}}
	 *
	 * Reports number of characters in string.
	 * @param $parser Parser
	 * @param $inStr string
	 * @return int
	 */",
 "/**
	 * {{#pos: string | needle | offset}}
	 *
	 * Finds first occurrence of \"needle\" in \"string\" starting at \"offset\".
	 *
	 * Note: If the needle is an empty string, single space is used instead.
	 * Note: If the needle is not found, empty string is returned.
	 * @param $parser Parser
	 * @param $inStr string
	 * @param $inNeedle int
	 * @param $inOffset int
	 * @return int|string
	 */",
 "/**
	 * {{#rpos: string | needle}}
	 *
	 * Finds last occurrence of \"needle\" in \"string\".
	 *
	 * Note: If the needle is an empty string, single space is used instead.
	 * Note: If the needle is not found, -1 is returned.
	 * @param $parser Parser
	 * @param $inStr string
	 * @param $inNeedle int
	 * @return int|string
	 */",
 "/**
	 * {{#sub: string | start | length }}
	 *
	 * Returns substring of \"string\" starting at \"start\" and having
	 * \"length\" characters.
	 *
	 * Note: If length is zero, the rest of the input is returned.
	 * Note: A negative value for \"start\" operates from the end of the
	 *   \"string\".
	 * Note: A negative value for \"length\" returns a string reduced in
	 *   length by that amount.
	 *
	 * @param $parser Parser
	 * @param $inStr string
	 * @param $inStart int
	 * @param $inLength int
	 * @return string
	 */",
 "/**
	 * {{#count: string | substr }}
	 *
	 * Returns number of occurrences of \"substr\" in \"string\".
	 *
	 * Note: If \"substr\" is empty, a single space is used.
	 * @param $parser
	 * @param $inStr string
	 * @param $inSubStr string
	 * @return int|string
	 */",
 "/**
	 * {{#replace:string | from | to | limit }}
	 *
	 * Replaces each occurrence of \"from\" in \"string\" with \"to\".
	 * At most \"limit\" replacements are performed.
	 *
	 * Note: Armored against replacements that would generate huge strings.
	 * Note: If \"from\" is an empty string, single space is used instead.
	 * @param $parser Parser
	 * @param $inStr string
	 * @param $inReplaceFrom string
	 * @param $inReplaceTo string
	 * @param $inLimit int
	 * @return mixed|string
	 */",
 "/**
	 * {{#explode:string | delimiter | position | limit}}
	 *
	 * Breaks \"string\" into chunks separated by \"delimiter\" and returns the
	 * chunk identified by \"position\".
	 *
	 * Note: Negative position can be used to specify tokens from the end.
	 * Note: If the divider is an empty string, single space is used instead.
	 * Note: Empty string is returned if there are not enough exploded chunks.
	 * @param $parser Parser
	 * @param $inStr string
	 * @param $inDiv string
	 * @param $inPos int
	 * @param $inLim int|null
	 * @return string
	 */",
 "/**
	 * {{#urldecode:string}}
	 *
	 * Decodes URL-encoded (like%20that) strings.
	 * @param $parser Parser
	 * @param $inStr string
	 * @return string
	 */",
 "/**
	 * Read a ZIP file and call a function for each file discovered in it.
	 *
	 * Because this class is aimed at verification, an error is raised on
	 * suspicious or ambiguous input, instead of emulating some standard
	 * behaviour.
	 *
	 * @param $fileName string The archive file name
	 * @param $callback Array The callback function. It will be called for each file
	 *   with a single associative array each time, with members:
	 *
	 *      - name: The file name. Directories conventionally have a trailing
	 *        slash.
	 *
	 *      - mtime: The file modification time, in MediaWiki 14-char format
	 *
	 *      - size: The uncompressed file size
	 *
	 * @param $options Array An associative array of read options, with the option
	 *    name in the key. This may currently contain:
	 *
	 *      - zip64: If this is set to true, then we will emulate a
	 *        library with ZIP64 support, like OpenJDK 7. If it is set to
	 *        false, then we will emulate a library with no knowledge of
	 *        ZIP64.
	 *
	 *        NOTE: The ZIP64 code is untested and probably doesn\'t work. It
	 *        turned out to be easier to just reject ZIP64 archive uploads,
	 *        since they are likely to be very rare. Confirming safety of a
	 *        ZIP64 file is fairly complex. What do you do with a file that is
	 *        ambiguous and broken when read with a non-ZIP64 reader, but valid
	 *        when read with a ZIP64 reader? This situation is normal for a
	 *        valid ZIP64 file, and working out what non-ZIP64 readers will make
	 *        of such a file is not trivial.
	 *
	 * @return Status object. The following fatal errors are defined:
	 *
	 *      - zip-file-open-error: The file could not be opened.
	 *
	 *      - zip-wrong-format: The file does not appear to be a ZIP file.
	 *
	 *      - zip-bad: There was something wrong or ambiguous about the file
	 *        data.
	 *
	 *      - zip-unsupported: The ZIP file uses features which
	 *        ZipDirectoryReader does not support.
	 *
	 * The default messages for those fatal errors are written in a way that
	 * makes sense for upload verification.
	 *
	 * If a fatal error is returned, more information about the error will be
	 * available in the debug log.
	 *
	 * Note that the callback function may be called any number of times before
	 * a fatal error is returned. If this occurs, the data sent to the callback
	 * function should be discarded.
	 */",
 "/**
	 * Private constructor
	 */",
 "/**
	 * Read the directory according to settings in $this.
	 *
	 * @return Status
	 */",
 "/**
	 * Throw an error, and log a debug message
	 */",
 "/**
	 * Read the header which is at the end of the central directory,
	 * unimaginatively called the \"end of central directory record\" by the ZIP
	 * spec.
	 */",
 "/**
	 * Read the header called the \"ZIP64 end of central directory locator\". An
	 * error will be raised if it does not exist.
	 */",
 "/**
	 * Read the header called the \"ZIP64 end of central directory record\". It
	 * may replace the regular \"end of central directory record\" in ZIP64 files.
	 */",
 "/**
	 * Find the location of the central directory, as would be seen by a
	 * non-ZIP64 reader.
	 *
	 * @return List containing offset, size and end position.
	 */",
 "/**
	 * Find the location of the central directory, as would be seen by a
	 * ZIP64-compliant reader.
	 *
	 * @return List containing offset, size and end position.
	 */",
 "/**
	 * Read the central directory at the given location
	 */",
 "/**
	 * Interpret ZIP64 \"extra field\" data and return an associative array.
	 */",
 "/**
	 * Get the length of the file.
	 */",
 "/**
	 * Get the file contents from a given offset. If there are not enough bytes
	 * in the file to satisfy the request, an exception will be thrown.
	 *
	 * @param $start The byte offset of the start of the block.
	 * @param $length The number of bytes to return. If omitted, the remainder
	 *    of the file will be returned.
	 *
	 * @return string
	 */",
 "/**
	 * Get a section of the file starting at position $segIndex * self::SEGSIZE,
	 * of length self::SEGSIZE. The result is cached. This is a helper function
	 * for getBlock().
	 *
	 * If there are not enough bytes in the file to satsify the request, the
	 * return value will be truncated. If a request is made for a segment beyond
	 * the end of the file, an empty string will be returned.
	 */",
 "/**
	 * Get the size of a structure in bytes. See unpack() for the format of $struct.
	 */",
 "/**
	 * Unpack a binary structure. This is like the built-in unpack() function
	 * except nicer.
	 *
	 * @param $string The binary data input
	 *
	 * @param $struct An associative array giving structure members and their
	 *    types. In the key is the field name. The value may be either an
	 *    integer, in which case the field is a little-endian unsigned integer
	 *    encoded in the given number of bytes, or an array, in which case the
	 *    first element of the array is the type name, and the subsequent
	 *    elements are type-dependent parameters. Only one such type is defined:
	 *       - \"string\": The second array element gives the length of string.
	 *          Not null terminated.
	 *
	 * @param $offset The offset into the string at which to start unpacking.
	 *
	 * @return Unpacked associative array. Note that large integers in the input
	 *    may be represented as floating point numbers in the return value, so
	 *    the use of weak comparison is advised.
	 */",
 "/**
	 * Returns a bit from a given position in an integer value, converted to
	 * boolean.
	 *
	 * @param $value integer
	 * @param $bitIndex The index of the bit, where 0 is the LSB.
	 */",
 "/**
	 * Debugging helper function which dumps a string in hexdump -C format.
	 */",
 "/**
 * A class for reading ZIP file directories, for the purposes of upload
 * verification.
 *
 * Only a functional interface is provided: ZipFileReader::read(). No access is
 * given to object instances.
 *
 */",
 "/**
	 * @return mixed
	 */",
 "/**
 * Internal exception class. Will be caught by private code.
 */",
 "/**
	 * Unblocks the specified user or provides the reason the unblock failed.
	 */",
 "/**
 * API module that facilitates the unblocking of users. Requires API write mode
 * to be enabled.
 *
 * @ingroup API
 */",
 "/**
	 * Take a modulo of a signed integer as if it were an unsigned integer.
	 * $b must be less than 0x40000000 and greater than 0
	 *
	 * @param $a
	 * @param $b
	 *
	 * @return int
	 */",
 "/**
	 * Shift a signed integer right as if it were unsigned
	 * @param $a
	 * @param $b
	 * @return int
	 */",
 "/**
	 * The CDB hash function.
	 *
	 * @param $s
	 *
	 * @return
	 */",
 "/**
 * Common functions for readers and writers
 */",
 "/**
	 * @param $fileName string
	 */",
 "/**
	 * @param $key
	 * @return bool|string
	 */",
 "/**
	 * @param $key
	 * @param $pos
	 * @return bool
	 */",
 "/**
	 * @throws MWException
	 * @param $length
	 * @param $pos
	 * @return string
	 */",
 "/**
	 * Unpack an unsigned integer and throw an exception if it needs more than 31 bits
	 * @param $s
	 * @return
	 */",
 "/**
	 * Unpack a 32-bit signed integer
	 * @param $s
	 * @return int
	 */",
 "/**
	 * @param $key
	 * @return bool
	 */",
 "/**
	 * @param $key
	 * @return bool
	 */",
 "/**
 * CDB reader class
 */",
 "/**
	 * @param $fileName string
	 */",
 "/**
	 * @param $key
	 * @param $value
	 * @return
	 */",
 "/**
	 * @throws MWException
	 */",
 "/**
	 * @throws MWException
	 * @param $buf
	 */",
 "/**
	 * @throws MWException
	 * @param $len
	 */",
 "/**
	 * @param $keylen
	 * @param $datalen
	 * @param $h
	 */",
 "/**
	 * @throws MWException
	 * @param $keylen
	 * @param $datalen
	 */",
 "/**
	 * @throws MWException
	 */",
 "/**
	 * Clean up the temp file and throw an exception
	 * 
	 * @param $msg string
	 * @throws MWException
	 */",
 "/**
 * CDB writer class
 */",
 "/**
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 */",
 "/**
	 * Get a value from the XCache object cache
	 *
	 * @param $key String: cache key
	 * @return mixed
	 */",
 "/**
	 * Store a value in the XCache object cache
	 *
	 * @param $key String: cache key
	 * @param $value Mixed: object to store
	 * @param $expire Int: expiration time
	 * @return bool
	 */",
 "/**
	 * Remove a value from the XCache object cache
	 *
	 * @param $key String: cache key
	 * @param $time Int: not used in this implementation
	 * @return bool
	 */",
 "/**
 * Wrapper for XCache object caching functions; identical interface
 * to the APC wrapper
 *
 * @ingroup Cache
 */",
 "/**
	 * @dataProvider dataEquals
	 */",
 "/**
	 * @dataProvider dataInNamespace
	 */",
 "/**
	 * @dataProvider dataHasSubjectNamespace
	 */",
 "/**
	 * Represents a temporary filestore, with metadata in the database.
	 * Designed to be compatible with the session stashing code in UploadBase (should replace it eventually)
	 *
	 * @param $repo FileRepo
	 */",
 "/**
	 * Get a file and its metadata from the stash.
	 * The noAuth param is a bit janky but is required for automated scripts which clean out the stash.
	 *
	 * @param $key String: key under which file information is stored
	 * @param $noAuth Boolean (optional) Don\'t check authentication. Used by maintenance scripts.
	 * @throws UploadStashFileNotFoundException
	 * @throws UploadStashNotLoggedInException
	 * @throws UploadStashWrongOwnerException
	 * @throws UploadStashBadPathException
	 * @return UploadStashFile
	 */",
 "/**
	 * Getter for file metadata.
	 *
	 * @param key String: key under which file information is stored
	 * @return Array
	 */",
 "/**
	 * Getter for fileProps
	 *
	 * @param key String: key under which file information is stored
	 * @return Array
	 */",
 "/**
	 * Stash a file in a temp directory and record that we did this in the database, along with other metadata.
	 *
	 * @param $path String: path to file you want stashed
	 * @param $sourceType String: the type of upload that generated this file (currently, I believe, \'file\' or null)
	 * @throws UploadStashBadPathException
	 * @throws UploadStashFileException
	 * @throws UploadStashNotLoggedInException
	 * @return UploadStashFile: file, or null on failure
	 */",
 "/**
	 * Remove all files from the stash.
	 * Does not clean up files in the repo, just the record of them.
	 *
	 * @throws UploadStashNotLoggedInException
	 * @return boolean: success
	 */",
 "/**
	 * Remove a particular file from the stash.  Also removes it from the repo.
	 *
	 * @throws UploadStashNotLoggedInException
	 * @throws UploadStashWrongOwnerException
	 * @return boolean: success
	 */",
 "/**
	 * Remove a file (see removeFile), but doesn\'t check ownership first.
	 *
	 * @return boolean: success
	 */",
 "/**
	 * List all files in the stash.
	 *
	 * @throws UploadStashNotLoggedInException
	 * @return Array
	 */",
 "/**
	 * Find or guess extension -- ensuring that our extension matches our mime type.
	 * Since these files are constructed from php tempnames they may not start off
	 * with an extension.
	 * XXX this is somewhat redundant with the checks that ApiUpload.php does with incoming
	 * uploads versus the desired filename. Maybe we can get that passed to us...
	 */",
 "/**
	 * Helper function: do the actual database query to fetch file metadata.
	 *
	 * @param $key String: key
	 * @return boolean
	 */",
 "/**
	 * Helper function: Initialize the UploadStashFile for a given file.
	 *
	 * @param $path String: path to file
	 * @param $key String: key under which to store the object
	 * @throws UploadStashZeroLengthFileException
	 * @return bool
	 */",
 "/**
 * UploadStash is intended to accomplish a few things:
 *   - enable applications to temporarily stash files without publishing them to the wiki.
 *      - Several parts of MediaWiki do this in similar ways: UploadBase, UploadWizard, and FirefoggChunkedExtension
 *        And there are several that reimplement stashing from scratch, in idiosyncratic ways. The idea is to unify them all here.
 *	  Mostly all of them are the same except for storing some custom fields, which we subsume into the data array.
 *   - enable applications to find said files later, as long as the db table or temp files haven\'t been purged.
 *   - enable the uploading user (and *ONLY* the uploading user) to access said files, and thumbnails of said files, via a URL.
 *     We accomplish this using a database table, with ownership checking as you might expect. See SpecialUploadStash, which
 *     implements a web interface to some files stored this way.
 *
 * UploadStash right now is *mostly* intended to show you one user\'s slice of the entire stash. The user parameter is only optional
 * because there are few cases where we clean out the stash from an automated script. In the future we might refactor this.
 *
 * UploadStash represents the entire stash of temporary files.
 * UploadStashFile is a filestore for the actual physical disk files.
 * UploadFromStash extends UploadBase, and represents a single stashed file as it is moved from the stash to the regular file repository
 *
 * @ingroup Upload
 */",
 "/**
	 * A LocalFile wrapper around a file that has been temporarily stashed, so we can do things like create thumbnails for it
	 * Arguably UnregisteredLocalFile should be handling its own file repo but that class is a bit retarded currently
	 *
	 * @param $repo FileRepo: repository where we should find the path
	 * @param $path String: path to file
	 * @param $key String: key to store the path and any stashed data under
	 * @throws UploadStashBadPathException
	 * @throws UploadStashFileNotFoundException
	 */",
 "/**
	 * A method needed by the file transforming and scaling routines in File.php
	 * We do not necessarily care about doing the description at this point
	 * However, we also can\'t return the empty string, as the rest of MediaWiki demands this (and calls to imagemagick
	 * convert require it to be there)
	 *
	 * @return String: dummy value
	 */",
 "/**
	 * Get the path for the thumbnail (actually any transformation of this file)
	 * The actual argument is the result of thumbName although we seem to have
	 * buggy code elsewhere that expects a boolean \'suffix\'
	 *
	 * @param $thumbName String: name of thumbnail (e.g. \"120px-123456.jpg\" ), or false to just get the path
	 * @return String: path thumbnail should take on filesystem, or containing directory if thumbname is false
	 */",
 "/**
	 * Return the file/url base name of a thumbnail with the specified parameters.
	 * We override this because we want to use the pretty url name instead of the
	 * ugly file name.
	 *
	 * @param $params Array: handler-specific parameters
	 * @return String: base name for URL, like \'120px-12345.jpg\', or null if there is no handler
	 */",
 "/**
	 * Helper function -- given a \'subpage\', return the local URL e.g. /wiki/Special:UploadStash/subpage
	 * @param {String} $subPage
	 * @return {String} local URL for this subpage in the Special:UploadStash space.
	 */",
 "/**
	 * Get a URL to access the thumbnail
	 * This is required because the model of how files work requires that
	 * the thumbnail urls be predictable. However, in our model the URL is not based on the filename
	 * (that\'s hidden in the db)
	 *
	 * @param $thumbName String: basename of thumbnail file -- however, we don\'t want to use the file exactly
	 * @return String: URL to access thumbnail, or URL with partial path
	 */",
 "/**
	 * The basename for the URL, which we want to not be related to the filename.
	 * Will also be used as the lookup key for a thumbnail file.
	 *
	 * @return String: base url name, like \'120px-123456.jpg\'
	 */",
 "/**
	 * Return the URL of the file, if for some reason we wanted to download it
	 * We tend not to do this for the original file, but we do want thumb icons
	 *
	 * @return String: url
	 */",
 "/**
	 * Parent classes use this method, for no obvious reason, to return the path (relative to wiki root, I assume).
	 * But with this class, the URL is unrelated to the path.
	 *
	 * @return String: url
	 */",
 "/**
	 * Getter for file key (the unique id by which this file\'s location & metadata is stored in the db)
	 *
	 * @return String: file key
	 */",
 "/**
	 * Remove the associated temporary file
	 * @return Status: success
	 */",
 "/**
	 * @param $string string
	 * @return string
	 */",
 "/**
	 * Italic is not appropriate for Japanese script
	 * Unfortunately most browsers do not recognise this, and render <em> as italic
	 *
	 * @param $text string
	 * @return string
	 */",
 "/**
 * Japanese (?????????)
 *
 * @ingroup Language
 */",
 "/**
	 * Get a list of frameworks (including introduction paragraph and links to the framework run pages)
	 * @return String: HTML
	 */",
 "/**
	 * Function to wrap the summary.
	 * It must be given a valid state as a second parameter or an exception will
	 * be thrown.
	 * @param $html String: The raw HTML.
	 * @param $state String: State, one of \'noframework\', \'unknownframework\' or \'frameworkfound\'
	 */",
 "/**
	 * Initialize the page for QUnit.
	 */",
 "/**
 * HttpRequest was renamed to MWHttpRequest in order
 * to prevent conflicts with PHP\'s HTTP extension
 * which also defines an HttpRequest class.
 * http://www.php.net/manual/en/class.httprequest.php
 *
 * This is for backwards compatibility.
 * @since 1.17
 */",
 "/** Swiss High German (Schweizer Hochdeutsch)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Ianusius
 * @author Kghbln
 * @author MichaelFrey
 * @author SVG
 * @author The Evil IP address
 */",
 "/**
	 * Fetch links and cache their existence
	 *
	 * @param $db DatabaseBase
	 * @param $res
	 */",
 "/**
 * A special page that lists pages containing links to disambiguations pages
 *
 * @ingroup SpecialPage
 */",
 "/** Bihari (language group)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 * @comment falls back to Bhojpuri.
 *
 */",
 "/** Romani (Romani)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Desiphral
 * @author ???????? ????????????????
 */",
 "/** Neapolitan (Nnapulitano)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Carmine Colacino
 * @author Cryptex
 * @author E. abu Filumena
 * @author SabineCretella
 * @author ???????? ????????????????
 */",
 "/** Pampanga (Kapampangan)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Kaganer
 * @author Katimawan2005
 * @author Urhixidur
 * @author Val2397
 */",
 "/**
		 * @var $conn DatabaseBase
		 */",
 "/**
	 * Overload: after this action field info table has to be rebuilt
	 */",
 "/**
 * Class for setting up the MediaWiki database using Oracle.
 *
 * @ingroup Deployment
 * @since 1.17
 */",
 "/**
 * Internationalisation for Vector extension
 *
 * @file
 * @ingroup Extensions
 */",
 "/** English
 * @author Trevor Parscal
 */",
 "/** Message documentation (Message documentation)
 * @author Fryed-peach
 * @author Lloffiwr
 * @author Nemo bis
 * @author Srtxg
 * @author Umherirrender
 */",
 "/** ???uroyo (???uroyo)
 * @author Ariyo
 */",
 "/** Afrikaans (Afrikaans)
 * @author Adriaan
 * @author Naudefj
 * @author ??????????????? ?????????????????????
 */",
 "/** Gheg Albanian (Geg??)
 * @author Mdupont
 */",
 "/** Amharic (????????????)
 * @author Codex Sinaiticus
 */",
 "/** Aragonese (Aragon??s)
 * @author Juanpabl
 */",
 "/** Arabic (??????????????)
 * @author Aiman titi
 * @author Alexknight12
 * @author DRIHEM
 * @author Meno25
 * @author OsamaK
 */",
 "/** Aramaic (??????????)
 * @author Basharh
 */",
 "/** Egyptian Spoken Arabic (????????)
 * @author Dudi
 * @author Meno25
 */",
 "/** Assamese (??????????????????)
 * @author Bishnu Saikia
 * @author Gitartha.bordoloi
 */",
 "/** Asturian (Asturianu)
 * @author Xuacu
 */",
 "/** Azerbaijani (Az??rbaycanca)
 * @author PPerviz
 * @author Vugar 1981
 */",
 "/** Bashkir (??????????????????)
 * @author Assele
 */",
 "/** Bavarian (Boarisch)
 * @author Mucalexx
 * @author ???
 */",
 "/** Belarusian (????????????????????)
 * @author Maksim L.
 */",
 "/** Belarusian (Tara??kievica orthography) (??????????????????????? (??????????????????????)???)
 * @author EugeneZelenko
 * @author Jim-by
 * @author Wizardist
 * @author Zedlik
 */",
 "/** Bulgarian (??????????????????)
 * @author DCLXVI
 * @author Spiritia
 * @author Turin
 */",
 "/** Banjar (Bahasa Banjar)
 * @author Ezagren
 */",
 "/** Bengali (???????????????)
 * @author Bellayet
 * @author Nasir8891
 * @author Wikitanvir
 */",
 "/** Bishnupria Manipuri (???????????? ?????????/??????????????????????????????????????? ?????????????????????)
 * @author Usingha
 */",
 "/** Breton (Brezhoneg)
 * @author Fulup
 * @author Y-M D
 */",
 "/** Bosnian (Bosanski)
 * @author CERminator
 */",
 "/** Catalan (Catal??)
 * @author Paucabot
 * @author SMP
 * @author Vriullop
 */",
 "/** Chechen (??????????????)
 * @author Sasan700
 */",
 "/** Sorani (??????????)
 * @author Asoxor
 * @author Marmzok
 */",
 "/** Crimean Turkish (Latin script) (???Q??r??mtatarca (Latin)???)
 * @author Don Alessandro
 */",
 "/** Crimean Turkish (Cyrillic script) (??????????????????????????????? (????????????)???)
 * @author Don Alessandro
 */",
 "/** Czech (??esky)
 * @author Mormegil
 */",
 "/** Kashubian (Kasz??bsczi)
 * @author Kuvaly
 */",
 "/** Church Slavic (?????????????????????? / ??????????????????????????????)
 * @author ??????
 */",
 "/** Chuvash (??????????????)
 * @author FLAGELLVM DEI
 */",
 "/** Welsh (Cymraeg)
 * @author Lloffiwr
 */",
 "/** Danish (Dansk)
 * @author Froztbyte
 * @author Peter Alberti
 * @author Sarrus
 * @author Sir48
 */",
 "/** German (Deutsch)
 * @author Church of emacs
 * @author Kghbln
 * @author SVG
 * @author The Evil IP address
 * @author Tischbeinahe
 * @author ???
 */",
 "/** German (formal address) (???Deutsch (Sie-Form)???) */",
 "/** Zazaki (Zazaki)
 * @author Erdemaslancan
 * @author Mirzali
 * @author Xoser
 */",
 "/** Lower Sorbian (Dolnoserbski)
 * @author Michawiki
 */",
 "/** Greek (????????????????)
 * @author Dead3y3
 * @author Geraki
 * @author Glavkos
 * @author ??????????????
 */",
 "/** Esperanto (Esperanto)
 * @author AVRS
 * @author Maximillion Pegasus
 * @author Yekrats
 */",
 "/** Spanish (Espa??ol)
 * @author Armando-Martin
 * @author Crazymadlover
 * @author Drini
 * @author Fitoschido
 * @author Locos epraix
 * @author Translationista
 */",
 "/** Estonian (Eesti)
 * @author Pikne
 */",
 "/** Basque (Euskara)
 * @author An13sa
 */",
 "/** Persian (??????????)
 * @author Ebraminio
 * @author Huji
 * @author Ladsgroup
 * @author Sahim
 * @author ZxxZxxZ
 */",
 "/** Finnish (Suomi)
 * @author Crt
 * @author Nike
 * @author Olli
 * @author Str4nd
 */",
 "/** Faroese (F??royskt)
 * @author Diupwijk
 */",
 "/** French (Fran??ais)
 * @author IAlex
 * @author Jean-Fr??d??ric
 * @author McDutchie
 * @author PieRRoMaN
 * @author Sherbrooke
 * @author Urhixidur
 */",
 "/** Franco-Proven??al (Arpetan)
 * @author ChrisPtDe
 */",
 "/** Friulian (Furlan)
 * @author Klenje
 */",
 "/** Simplified Gan script (?????????(??????)???) */",
 "/** Traditional Gan script (?????????(??????)???)
 * @author Symane
 */",
 "/** Scottish Gaelic (G??idhlig)
 * @author Akerbeltz
 */",
 "/** Galician (Galego)
 * @author Toli??o
 */",
 "/** Ancient Greek (????????????? ??????????????????) */",
 "/** Swiss German (Alemannisch)
 * @author Als-Holder
 */",
 "/** Gujarati (?????????????????????)
 * @author KartikMistry
 * @author Sushant savla
 */",
 "/** Manx (Gaelg)
 * @author Shimmin Beg
 */",
 "/** Hebrew (??????????)
 * @author Amire80
 * @author Ofekalef
 * @author Rotemliss
 * @author YaronSh
 * @author Yonidebest
 */",
 "/** Hindi (??????????????????)
 * @author Ansumang
 */",
 "/** Croatian (Hrvatski)
 * @author Anton008
 * @author Excaliboor
 * @author SpeedyGonsales
 */",
 "/** Upper Sorbian (Hornjoserbsce)
 * @author Michawiki
 */",
 "/** Hungarian (Magyar)
 * @author Dani
 * @author Hunyadym
 * @author Tgr
 */",
 "/** Armenian (??????????????)
 * @author Xelgen
 */",
 "/** Interlingua (Interlingua)
 * @author McDutchie
 */",
 "/** Indonesian (Bahasa Indonesia)
 * @author Farras
 * @author Irwangatot
 * @author IvanLanin
 * @author Kenrick95
 */",
 "/** Igbo (Igbo)
 * @author Ukabia
 */",
 "/** Iloko (Ilokano)
 * @author Lam-ang
 */",
 "/** Ido (Ido)
 * @author Malafaya
 */",
 "/** Icelandic (??slenska)
 * @author Krun
 * @author Sn??var
 * @author ??var Arnfj??r?? Bjarmason
 */",
 "/** Italian (Italiano)
 * @author Beta16
 * @author F. Cosoleto
 * @author Una giornata uggiosa \'94
 */",
 "/** Japanese (?????????)
 * @author Fryed-peach
 * @author Shirayuki
 * @author Whym
 * @author ????????????
 */",
 "/** Javanese (Basa Jawa) */",
 "/** Georgian (?????????????????????)
 * @author BRUTE
 * @author David1010
 * @author ITshnik
 * @author ??????????????????????????????
 */",
 "/** Kazakh (??????????????)
 * @author Kaztrans
 */",
 "/** Kazakh (Cyrillic script) (????????????????? (??????????)???)
 * @author GaiJin
 * @author Kaztrans
 */",
 "/** Kalaallisut (Kalaallisut)
 * @author Qaqqalik
 */",
 "/** Khmer (???????????????????????????)
 * @author ???????????????????????????
 */",
 "/** Korean (?????????)
 * @author Albamhandae
 * @author IRTC1015
 * @author Kwj2772
 * @author ??????
 */",
 "/** Karachay-Balkar (????????????????-??????????????)
 * @author Iltever
 */",
 "/** Colognian (Ripoarisch)
 * @author Purodha
 */",
 "/** Kurdish (Latin script) (???Kurd?? (lat??n??)???)
 * @author Erdal Ronahi
 */",
 "/** Cornish (Kernowek)
 * @author Kw-Moon
 * @author Nrowe
 */",
 "/** Latin (Latina) */",
 "/** Luxembourgish (L??tzebuergesch)
 * @author Robby
 */",
 "/** Ganda (Luganda)
 * @author Kizito
 */",
 "/** Limburgish (Limburgs)
 * @author Ooswesthoesbes
 */",
 "/** Lithuanian (Lietuvi??)
 * @author Garas
 * @author Matasg
 */",
 "/** Lushai (Mizo ??awng)
 * @author RMizo
 */",
 "/** Latvian (Latvie??u)
 * @author GreenZeb
 * @author Xil
 */",
 "/** Minangkabau (Baso Minangkabau)
 * @author VoteITP
 */",
 "/** Macedonian (????????????????????)
 * @author Bjankuloski06
 * @author Brest
 */",
 "/** Malayalam (??????????????????)
 * @author Junaidpv
 * @author Praveenp
 */",
 "/** Mongolian (????????????) */",
 "/** Marathi (???????????????)
 * @author Mahitgar
 * @author V.narsikar
 */",
 "/** Malay (Bahasa Melayu)
 * @author Anakmalaysia
 * @author Aurora
 * @author Diagramma Della Verita
 */",
 "/** Maltese (Malti)
 * @author Chrisportelli
 */",
 "/** Nahuatl (N??huatl)
 * @author Ricardo gs
 * @author Te??tlalili
 */",
 "/** Norwegian (bokm??l)??? (???Norsk (bokm??l)???)
 * @author Jon Harald S??by
 * @author Laaknor
 * @author Nghtwlkr
 */",
 "/** Nedersaksisch (Nedersaksisch)
 * @author Servien
 */",
 "/** Dutch (Nederlands)
 * @author Siebrand
 */",
 "/** Norwegian Nynorsk (???Norsk (nynorsk)???)
 * @author Gunnernett
 */",
 "/** Occitan (Occitan)
 * @author Cedric31
 */",
 "/** Oriya (????????????)
 * @author Odisha1
 * @author Psubhashish
 */",
 "/** Deitsch (Deitsch)
 * @author Xqt
 */",
 "/** P??lzisch (P??lzisch)
 * @author Manuae
 */",
 "/** Polish (Polski)
 * @author BeginaFelicysym
 * @author Sp5uhe
 */",
 "/** Piedmontese (Piemont??is)
 * @author Borich??t
 * @author Dragon??t
 */",
 "/** Western Punjabi (????????????)
 * @author Khalid Mahmood
 */",
 "/** Pontic (????????????????) */",
 "/** Pashto (????????)
 * @author Ahmed-Najib-Biabani-Ibrahimkhel
 */",
 "/** Portuguese (Portugu??s)
 * @author Hamilton Abreu
 * @author Helder.wiki
 */",
 "/** Brazilian Portuguese (Portugu??s do Brasil)
 * @author Daemorris
 * @author Everton137
 * @author Giro720
 * @author Helder.wiki
 */",
 "/** Quechua (Runa Simi)
 * @author AlimanRuna
 */",
 "/** Romanian (rom??n??)
 * @author AdiJapan
 * @author Minisarm
 */",
 "/** Tarand??ne (Tarand??ne)
 * @author Joetaras
 */",
 "/** Russian (??????????????)
 * @author G0rn
 * @author KPu3uC B Poccuu
 * @author Kaganer
 * @author MaxSem
 * @author ?????????????????? ??????????????
 */",
 "/** Rusyn (????????????????????)
 * @author Gazeb
 */",
 "/** Sanskrit (???????????????????????????)
 * @author Ansumang
 */",
 "/** Sakha (???????? ????????)
 * @author HalanTul
 */",
 "/** Sardinian (Sardu)
 * @author Andria
 */",
 "/** Sicilian (Sicilianu) */",
 "/** Sinhala (???????????????)
 * @author Budhajeewa
 * @author Calcey
 * @author ???????????? ????????????????????????
 * @author ??????????????? ?????????????????????
 * @author ??????????????????
 */",
 "/** Slovak (Sloven??ina)
 * @author Helix84
 * @author Teslaton
 */",
 "/** Slovenian (Sloven????ina)
 * @author Dbc334
 */",
 "/** Somali (Soomaaliga)
 * @author Maax
 */",
 "/** Albanian (Shqip)
 * @author Mikullovci11
 * @author Olsi
 */",
 "/** Serbian (Cyrillic script) (??????????????? (????????????????)???)
 * @author Helios13
 * @author Rancher
 * @author ?????????? ??????????????????
 */",
 "/** Serbian (Latin script) (???Srpski (latinica)???)
 * @author Liangent
 */",
 "/** Seeltersk (Seeltersk)
 * @author Pyt
 */",
 "/** Sundanese (Basa Sunda)
 * @author Kandar
 */",
 "/** Swedish (Svenska)
 * @author Ainali
 * @author Boivie
 * @author MagnusA
 */",
 "/** Swahili (Kiswahili)
 * @author Lloffiwr
 * @author Muddyb Blast Producer
 */",
 "/** Tamil (???????????????)
 * @author Sodabottle
 * @author TRYPPN
 */",
 "/** Telugu (??????????????????)
 * @author Veeven
 */",
 "/** Thai (?????????)
 * @author Horus
 * @author Octahedron80
 * @author Woraponboonkerd
 */",
 "/** Turkmen (T??rkmen??e)
 * @author Hanberke
 */",
 "/** Tagalog (Tagalog)
 * @author AnakngAraw
 */",
 "/** Turkish (T??rk??e)
 * @author Hcagri
 * @author Karduelis
 * @author Srhat
 * @author Vito Genovese
 */",
 "/** Tatar (Cyrillic script) (??????????????)
 * @author ????????????
 */",
 "/** Ukrainian (????????????????????)
 * @author AS
 * @author Microcell
 * @author Prima klasy4na
 */",
 "/** V??neto (V??neto)
 * @author Candalua
 * @author Vajotwo
 */",
 "/** Veps (Veps??n kel???) */",
 "/** Vietnamese (Ti???ng Vi???t)
 * @author Minh Nguyen
 * @author Vinhtantran
 */",
 "/** Volap??k (Volap??k)
 * @author Malafaya
 */",
 "/** Walloon (walon)
 * @author Srtxg
 */",
 "/** Mingrelian (???????????????????????????) */",
 "/** Yiddish (????????????)
 * @author ????????????????
 */",
 "/** Yoruba (Yor??b??)
 * @author Demmy
 */",
 "/** Cantonese (??????)
 * @author Horacewai2
 * @author Waihorace
 */",
 "/** Simplified Chinese (?????????(??????)???)
 * @author Bencmq
 * @author Liangent
 * @author Onecountry
 * @author Yfdyh000
 * @author ???pp
 */",
 "/** Traditional Chinese (?????????(??????)???)
 * @author Bencmq
 * @author Gaoxuewei
 * @author Liangent
 * @author Mark85296341
 * @author Wrightbus
 */",
 "/** Bavarian (Boarisch)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Als-Holder
 * @author Malafaya
 * @author Man77
 * @author Merlissimo
 * @author Metalhead64
 * @author Mucalexx
 * @author The Evil IP address
 * @author Wikifan
 * @author bar.wikipedia.org administrators
 * @author ???
 */",
 "/**
	 * @param $result ApiResult
	 * @param $vals array
	 * @param $params string
	 * @param $type string
	 * @param $action string
	 * @param $ts
	 * @return array
	 */",
 "/**
 * Query action to List the log events, with optional filtering by various parameters.
 *
 * @ingroup API
 */",
 "/**
	 * @param $recache bool
	 */",
 "/**
	 * @return Bool|ResultWrapper
	 */",
 "/**
	 * @param $db DatabaseBase
	 * @return Bool|ResultWrapper
	 */",
 "/**
	 * @return int
	 */",
 "/**
	 * @return int
	 */",
 "/**
	 * @return int
	 */",
 "/**
	 * @return int
	 */",
 "/**
	 * @return int
	 */",
 "/**
	 * @return int
	 */",
 "/**
	 * @return int
	 */",
 "/**
	 * Find the number of users in a given user group.
	 * @param $group String: name of group
	 * @return Integer
	 */",
 "/**
	 * @return int
	 */",
 "/**
	 * @param $ns int
	 *
	 * @return int
	 */",
 "/**
	 * Is the provided row of site stats sane, or should it be regenerated?
	 *
	 * @param $row
	 *
	 * @return bool
	 */",
 "/**
 * Static accessor class for site_stats and related things
 */",
 "/**
	 * @param $sql
	 * @param $field
	 * @param $delta
	 */",
 "/**
	 * @param $dbw DatabaseBase
	 * @return bool|mixed
	 */",
 "/**
 * Class for handling updates to the site_stats table
 */",
 "/**
	 * Constructor
	 * @param $database Boolean or DatabaseBase:
	 * - Boolean: whether to use the master DB
	 * - DatabaseBase: database connection to use
	 */",
 "/**
	 * Count the total number of edits
	 * @return Integer
	 */",
 "/**
	 * Count pages in article space(s)
	 * @return Integer
	 */",
 "/**
	 * Count total pages
	 * @return Integer
	 */",
 "/**
	 * Count total users
	 * @return Integer
	 */",
 "/**
	 * Count views
	 * @return Integer
	 */",
 "/**
	 * Count total files
	 * @return Integer
	 */",
 "/**
	 * Do all updates and commit them. More or less a replacement
	 * for the original initStats, but without output.
	 *
	 * @param $database DatabaseBase|bool
	 * - Boolean: whether to use the master DB
	 * - DatabaseBase: database connection to use
	 * @param $options Array of options, may contain the following values
	 * - update Boolean: whether to update the current stats (true) or write fresh (false) (default: false)
	 * - views Boolean: when true, do not update the number of page views (default: true)
	 * - activeUsers Boolean: whether to update the number of active users (default: false)
	 */",
 "/**
	 * Update the current row with the selected values
	 */",
 "/**
	 * Refresh site_stats. Erase the current record and save all
	 * the new values.
	 */",
 "/**
	 * Return three arrays of params for the db queries
	 * @return Array
	 */",
 "/**
 * Class designed for counting of stats.
 */",
 "/**
	 * Enabled the debugger and load resource module.
	 * This is called by Setup.php when $wgDebugToolbar is true.
	 */",
 "/**
	 * Add ResourceLoader modules to the OutputPage object if debugging is
	 * enabled.
	 *
	 * @param $out OutputPage
	 */",
 "/**
	 * Adds a line to the log
	 *
	 * @todo Add support for passing objects
	 *
	 * @param $str string
	 */",
 "/**
	 * Returns internal log array
	 */",
 "/**
	 * Clears internal log array and deprecation tracking
	 */",
 "/**
	 * Adds a warning entry to the log
	 *
	 * @param $msg
	 * @param int $callerOffset
	 * @return mixed
	 */",
 "/**
	 * Adds a depreciation entry to the log, along with a backtrace
	 *
	 * @param $function
	 * @param $version
	 * @param $component
	 * @return mixed
	 */",
 "/**
	 * This is a method to pass messages from wfDebug to the pretty debugger.
	 * Do NOT use this method, use MWDebug::log or wfDebug()
	 *
	 * @param $str string
	 */",
 "/**
	 * Begins profiling on a database query
	 *
	 * @param $sql string
	 * @param $function string
	 * @param $isMaster bool
	 * @return int ID number of the query to pass to queryTime or -1 if the
	 *  debugger is disabled
	 */",
 "/**
	 * Calculates how long a query took.
	 *
	 * @param $id int
	 */",
 "/**
	 * Returns a list of files included, along with their size
	 *
	 * @param $context IContextSource
	 * @return array
	 */",
 "/**
	 * Returns the HTML to add to the page for the toolbar
	 *
	 * @param $context IContextSource
	 * @return string
	 */",
 "/**
 * New debugger system that outputs a toolbar on page view
 *
 * By default, most methods do nothing ( self::$enabled = false ). You have
 * to explicitly call MWDebug::init() to enabled them.
 *
 * @todo Profiler support
 */",
 "/** Gothic (Gothic)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Jocke Pirat
 * @author Michawiki
 * @author Node ue
 * @author Sajasazi (on got.wikipedia.org)
 * @author Zylbath
 */",
 "/** @dataProvider providePaths */",
 "/**
	 * Provider of URL paths for testing wfRemoveDotSegments()
	 *
	 * @return array
	 */",
 "/**
 * Unit tests for wfRemoveDotSegments()
 */",
 "/**
	 * @param $callback
	 * @return array
	 * @throws MWException
	 */",
 "/**
	 * @param $callback
	 * @return mixed
	 */",
 "/**
	 * @param $callback
	 * @param $argsarams
	 * @return mixed
	 */",
 "/**
	 * @param $class
	 * @param $args array
	 * @return object
	 */",
 "/**
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 */",
 "/**
	 * Check a subset of $_SERVER (or the whole of $_SERVER if you like)
	 * to see if it indicates that the request was sent with a bad file
	 * extension. Returns true if the request should be denied or modified,
	 * false otherwise. The relevant $_SERVER elements are:
	 *
	 *   - SERVER_SOFTWARE
	 *   - REQUEST_URI
	 *   - QUERY_STRING
	 *   - PATH_INFO
	 *
	 * If the a variable is unset in $_SERVER, it should be unset in $vars.
	 *
	 * @param $vars A subset of $_SERVER.
	 * @param $extWhitelist Extensions which are allowed, assumed harmless.
	 * @return bool
	 */",
 "/**
	 * Given a right-hand portion of a URL, determine whether IE would detect
	 * a potentially harmful file extension.
	 *
	 * @param $urlPart string The right-hand portion of a URL
	 * @param $extWhitelist An array of file extensions which may occur in this
	 *    URL, and which should be allowed.
	 * @return bool
	 */",
 "/**
	 * Returns a variant of $url which will pass isUrlExtensionBad() but has the
	 * same GET parameters, or false if it can\'t figure one out.
	 * @param $url
	 * @param $extWhitelist array
	 * @return bool|string
	 */",
 "/**
	 * Determine what extension IE6 will infer from a certain query string.
	 * If the URL has an extension before the question mark, IE6 will use
	 * that and ignore the query string, but per the comment at
	 * isPathInfoBad() we don\'t have a reliable way to determine the URL,
	 * so isPathInfoBad() just passes in the query string for $url.
	 * All entry points have safe extensions (php, php5) anyway, so
	 * checking the query string is possibly overly paranoid but never
	 * insecure.
	 *
	 * The criteria for finding an extension are as follows:
	 * - a possible extension is a dot followed by one or more characters not
	 *   in <>\\\"/:|?.#
	 * - if we find a possible extension followed by the end of the string or
	 *   a #, that\'s our extension
	 * - if we find a possible extension followed by a ?, that\'s our extension
	 *    - UNLESS it\'s exe, dll or cgi, in which case we ignore it and continue
	 *      searching for another possible extension
	 * - if we find a possible extension followed by a dot or another illegal
	 *   character, we ignore it and continue searching
	 *
	 * @param $url string URL
	 * @return mixed Detected extension (string), or false if none found
	 */",
 "/**
	 * When passed the value of $_SERVER[\'SERVER_SOFTWARE\'], this function
	 * returns true if that server is known to have a REQUEST_URI variable
	 * with %2E not decoded to \".\". On such a server, it is possible to detect
	 * whether the script filename has been obscured.
	 *
	 * The function returns false if the server is not known to have this
	 * behaviour. Microsoft IIS in particular is known to decode escaped script
	 * filenames.
	 *
	 * SERVER_SOFTWARE typically contains either a plain string such as \"Zeus\",
	 * or a specification in the style of a User-Agent header, such as
	 * \"Apache/1.3.34 (Unix) mod_ssl/2.8.25 OpenSSL/0.9.8a PHP/4.4.2\"
	 *
	 * @param $serverSoftware
	 * @return bool
	 *
	 */",
 "/**
 * Internet Explorer derives a cache filename from a URL, and then in certain
 * circumstances, uses the extension of the resulting file to determine the
 * content type of the data, ignoring the Content-Type header.
 *
 * This can be a problem, especially when non-HTML content is sent by MediaWiki,
 * and Internet Explorer interprets it as HTML, exposing an XSS vulnerability.
 *
 * Usually the script filename (e.g. api.php) is present in the URL, and this
 * makes Internet Explorer think the extension is a harmless script extension.
 * But Internet Explorer 6 and earlier allows the script extension to be
 * obscured by encoding the dot as \"%2E\".
 *
 * This class contains functions which help in detecting and dealing with this
 * situation.
 *
 * Checking the URL for a bad extension is somewhat complicated due to the fact
 * that CGI doesn\'t provide a standard method to determine the URL. Instead it
 * is necessary to pass a subset of $_SERVER variables, which we then attempt
 * to use to guess parts of the URL.
 */",
 "/**
  * Translation by Pasok Internet Volunteers
  * http://forum.pasok.gr
  * version 1.0 (initial release)
  *
  * The project for the translation of MediaWiki into Greek
  * was undertaken by a group of ICT volunteers working under
  * the auspices of the Greek political party PASOK.
  *
  * The idea behind this effort was  to provide an extensible,
  * easy-to-use and non-intimidating tool for content development
  * and project management, to be used throughout the administrative
  * and political structure of PASOK by staff, volunteers, party members
  * and elected officials (all of whom possess varying degrees of ICT skills).
  *
  * The PASOK ICT team and the volunteers who worked on this project are
  * now returning the translated interface to the Open-Source Community
  * with over 98% of the messages translated into user-friendly Greek.
  *
  * We hope that it will be used as a tool by other civil society organizations
  * in Greece, and that it will enhance the collective creation and the dissemination
  * of knowledge - an essential component of the democratic process.
  */",
 "/**
	 * @param $title Title
	 * @return WikiFilePage
	 */",
 "/**
	 * Constructor from a page id
	 * @param $id Int article ID to load
	 */",
 "/**
	 * @param $file File:
	 * @return void
	 */",
 "/**
	 * Handler for action=render
	 * Include body text only; none of the image extras
	 */",
 "/**
	 * @return File
	 */",
 "/**
	 * Create the TOC
	 *
	 * @param $metadata Boolean: whether or not to show the metadata link
	 * @return String
	 */",
 "/**
	 * Make a table with metadata to be shown in the output page.
	 *
	 * @todo FIXME: Bad interface, see note on MediaHandler::formatMetadata().
	 *
	 * @param $metadata Array: the array containing the EXIF data
	 * @return String The metadata table. This is treated as Wikitext (!)
	 */",
 "/**
	 * Overloading Article\'s getContent method.
	 *
	 * Omit noarticletext if sharedupload; text will be fetched from the
	 * shared upload server if possible.
	 * @return string
	 */",
 "/**
	 * Creates an thumbnail of specified size and returns an HTML link to it
	 * @param $params array Scaler parameters
	 * @param $width int
	 * @param $height int
	 * @return string
	 */",
 "/**
	 * Show a notice that the file is from a shared repository
	 */",
 "/**
	 * Print out the various links at the bottom of the image page, e.g. reupload,
	 * external editing (and instructions link) etc.
	 */",
 "/**
	 * If the page we\'ve just displayed is in the \"Image\" namespace,
	 * we follow it with an upload history of the image and its usage.
	 */",
 "/**
	 * @param $target
	 * @param $limit
	 * @return ResultWrapper
	 */",
 "/**
	 * Delete the file, or an earlier version of it
	 */",
 "/**
	 * Display an error with a wikitext description
	 *
	 * @param $description String
	 */",
 "/**
	 * Callback for usort() to do link sorts by (namespace, title)
	 * Function copied from Title::compare()
	 *
	 * @param $a object page to compare with
	 * @param $b object page to compare with
	 * @return Integer: result of string comparison, or namespace comparison
	 */",
 "/**
 * Class for viewing MediaWiki file description pages
 *
 * @ingroup Media
 */",
 "/**
	 * @param ImagePage $imagePage
	 */",
 "/**
	 * @return ImagePage
	 */",
 "/**
	 * @return File
	 */",
 "/**
	 * @param $navLinks string
	 * @return string
	 */",
 "/**
	 * @param $navLinks string
	 * @return string
	 */",
 "/**
	 * @param $iscur
	 * @param $file File
	 * @return string
	 */",
 "/**
	 * @param $file File
	 * @return string
	 */",
 "/**
	 * @param $enable bool
	 */",
 "/**
	 * @return bool
	 */",
 "/**
 * Builds the image revision log shown on image pages
 *
 * @ingroup Media
 */",
 "/**
	 * @param ImagePage $imagePage
	 */",
 "/**
	 * @return Title
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @param $enable bool
	 */",
 "/**
	 * @return bool
	 */",
 "/**
		 * Namespace related preparation
		 * - wgNamespaceIds: Key-value pairs of all localized, canonical and aliases for namespaces.
		 * - wgCaseSensitiveNamespaces: Array of namespaces that are case-sensitive.
		 */",
 "/**
	 * @param $context ResourceLoaderContext
	 * @return array
	 */",
 "/**
	 * Gets registration code for all modules
	 *
	 * @param $context ResourceLoaderContext object
	 * @return String: JavaScript code for registering all modules with the client loader
	 */",
 "/**
	 * @param $context ResourceLoaderContext
	 * @return string
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * @param $context ResourceLoaderContext
	 * @return array|mixed
	 */",
 "/**
	 * @return string
	 */",
 "/**
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @file
 * @author Trevor Parscal
 * @author Roan Kattouw
 */",
 "/**
	 * Lithuanian plural forms as per http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html#lt
	 * @param $count int
	 * @param $forms array
	 *
	 * @return string
	 */",
 "/** Lithuanian (Lietuvi??)
 *
 * @ingroup Language
 */",
 "/**
	 * Create a new preprocessor object based on an initialised Parser object
	 *
	 * @param $parser Parser
	 */",
 "/**
	 * Create a new top-level frame for expansion of a page
	 *
	 * @return PPFrame
	 */",
 "/**
	 * Create a new custom frame for programmatic use of parameter replacement as used in some extensions
	 *
	 * @param $args array
	 *
	 * @return PPFrame
	 */",
 "/**
	 * Create a new custom node for programmatic use of parameter replacement as used in some extensions
	 *
	 * @param $values
	 */",
 "/**
	 * Preprocess text to a PPNode
	 *
	 * @param $text
	 * @param $flags
	 *
	 * @return PPNode
	 */",
 "/**
 * @ingroup Parser
 */",
 "/**
	 * Create a child frame
	 *
	 * @param $args array
	 * @param $title Title
	 *
	 * @return PPFrame
	 */",
 "/**
	 * Expand a document tree node
	 */",
 "/**
	 * Implode with flags for expand()
	 */",
 "/**
	 * Implode with no flags specified
	 */",
 "/**
	 * Makes an object that, when expand()ed, will be the same as one obtained
	 * with implode()
	 */",
 "/**
	 * Virtual implode with brackets
	 */",
 "/**
	 * Returns true if there are no arguments in this frame
	 *
	 * @return bool
	 */",
 "/**
	 * Returns all arguments of this frame
	 */",
 "/**
	 * Returns all numbered arguments of this frame
	 */",
 "/**
	 * Returns all named arguments of this frame
	 */",
 "/**
	 * Get an argument to this frame by name
	 */",
 "/**
	 * Returns true if the infinite loop check is OK, false if a loop is detected
	 *
	 * @param $title
	 *
	 * @return bool
	 */",
 "/**
	 * Return true if the frame is a template frame
	 */",
 "/**
	 * Get a title of frame
	 *
	 * @return Title
	 */",
 "/**
 * @ingroup Parser
 */",
 "/**
	 * Get an array-type node containing the children of this node.
	 * Returns false if this is not a tree node.
	 */",
 "/**
	 * Get the first child of a tree node. False if there isn\'t one.
	 *
	 * @return PPNode
	 */",
 "/**
	 * Get the next sibling of any node. False if there isn\'t one
	 */",
 "/**
	 * Get all children of this tree node which have a given name.
	 * Returns an array-type node, or false if this is not a tree node.
	 */",
 "/**
	 * Returns the length of the array, or false if this is not an array-type node
	 */",
 "/**
	 * Returns an item of an array-type node
	 */",
 "/**
	 * Get the name of this node. The following names are defined here:
	 *
	 *    h             A heading node.
	 *    template      A double-brace node.
	 *    tplarg        A triple-brace node.
	 *    title         The first argument to a template or tplarg node.
	 *    part          Subsequent arguments to a template or tplarg node.
	 *    #nodelist     An array-type node
	 *
	 * The subclass may define various other names for tree and leaf nodes.
	 */",
 "/**
	 * Split a <part> node into an associative array containing:
	 *    name          PPNode name
	 *    index         String index
	 *    value         PPNode value
	 */",
 "/**
	 * Split an <ext> node into an associative array containing name, attr, inner and close
	 * All values in the resulting array are PPNodes. Inner and close are optional.
	 */",
 "/**
	 * Split an <h> node
	 */",
 "/**
 * There are three types of nodes:
 *     * Tree nodes, which have a name and contain other nodes as children
 *     * Array nodes, which also contain other nodes but aren\'t considered part of a tree
 *     * Leaf nodes, which contain the actual data
 *
 * This interface provides access to the tree structure and to the contents of array nodes,
 * but it does not provide access to the internal structure of leaf nodes. Access to leaf
 * data is provided via two means:
 *     * PPFrame::expand(), which provides expanded text
 *     * The PPNode::split*() functions, which provide metadata about certain types of tree node
 * @ingroup Parser
 */",
 "/**
 * Tests for the FauxResponse class
 *
 * Copyright @ 2011 Alexandre Emsenhuber
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @file
 */",
 "/**
	 * Get this module\'s name. This is set when the module is registered
	 * with ResourceLoader::register()
	 *
	 * @return Mixed: Name (string) or null if no name was set
	 */",
 "/**
	 * Set this module\'s name. This is called by ResourceLodaer::register()
	 * when registering the module. Other code should not call this.
	 *
	 * @param $name String: Name
	 */",
 "/**
	 * Get this module\'s origin. This is set when the module is registered
	 * with ResourceLoader::register()
	 *
	 * @return Int ResourceLoaderModule class constant, the subclass default
	 *     if not set manuall
	 */",
 "/**
	 * Set this module\'s origin. This is called by ResourceLodaer::register()
	 * when registering the module. Other code should not call this.
	 *
	 * @param $origin Int origin
	 */",
 "/**
	 * @param $context ResourceLoaderContext
	 * @return bool
	 */",
 "/**
	 * Get all JS for this module for a given language and skin.
	 * Includes all relevant JS except loader scripts.
	 *
	 * @param $context ResourceLoaderContext: Context object
	 * @return String: JavaScript code
	 */",
 "/**
	 * Get the URL or URLs to load for this module\'s JS in debug mode.
	 * The default behavior is to return a load.php?only=scripts URL for
	 * the module, but file-based modules will want to override this to
	 * load the files directly.
	 *
	 * This function is called only when 1) we\'re in debug mode, 2) there
	 * is no only= parameter and 3) supportsURLLoading() returns true.
	 * #2 is important to prevent an infinite loop, therefore this function
	 * MUST return either an only= URL or a non-load.php URL.
	 *
	 * @param $context ResourceLoaderContext: Context object
	 * @return Array of URLs
	 */",
 "/**
	 * Whether this module supports URL loading. If this function returns false,
	 * getScript() will be used even in cases (debug mode, no only param) where
	 * getScriptURLsForDebug() would normally be used instead.
	 * @return bool
	 */",
 "/**
	 * Get all CSS for this module for a given skin.
	 *
	 * @param $context ResourceLoaderContext: Context object
	 * @return Array: List of CSS strings keyed by media type
	 */",
 "/**
	 * Get the URL or URLs to load for this module\'s CSS in debug mode.
	 * The default behavior is to return a load.php?only=styles URL for
	 * the module, but file-based modules will want to override this to
	 * load the files directly. See also getScriptURLsForDebug()
	 *
	 * @param $context ResourceLoaderContext: Context object
	 * @return Array: array( mediaType => array( URL1, URL2, ... ), ... )
	 */",
 "/**
	 * Get the messages needed for this module.
	 *
	 * To get a JSON blob with messages, use MessageBlobStore::get()
	 *
	 * @return Array: List of message keys. Keys may occur more than once
	 */",
 "/**
	 * Get the group this module is in.
	 *
	 * @return String: Group name
	 */",
 "/**
	 * Get the origin of this module. Should only be overridden for foreign modules.
	 *
	 * @return String: Origin name, \'local\' for local modules
	 */",
 "/**
	 * Where on the HTML page should this module\'s JS be loaded?
	 * \'top\': in the <head>
	 * \'bottom\': at the bottom of the <body>
	 *
	 * @return string
	 */",
 "/**
	 * Get the loader JS for this module, if set.
	 *
	 * @return Mixed: JavaScript loader code as a string or boolean false if no custom loader set
	 */",
 "/**
	 * Get a list of modules this module depends on.
	 *
	 * Dependency information is taken into account when loading a module
	 * on the client side. When adding a module on the server side,
	 * dependency information is NOT taken into account and YOU are
	 * responsible for adding dependent modules as well. If you don\'t do
	 * this, the client side loader will send a second request back to the
	 * server to fetch the missing modules, which kind of defeats the
	 * purpose of the resource loader.
	 *
	 * To add dependencies dynamically on the client side, use a custom
	 * loader script, see getLoaderScript()
	 * @return Array: List of module names as strings
	 */",
 "/**
	 * Get the files this module depends on indirectly for a given skin.
	 * Currently these are only image files referenced by the module\'s CSS.
	 *
	 * @param $skin String: Skin name
	 * @return Array: List of files
	 */",
 "/**
	 * Set preloaded file dependency information. Used so we can load this
	 * information for all modules at once.
	 * @param $skin String: Skin name
	 * @param $deps Array: Array of file names
	 */",
 "/**
	 * Get the last modification timestamp of the message blob for this
	 * module in a given language.
	 * @param $lang String: Language code
	 * @return Integer: UNIX timestamp, or 0 if the module doesn\'t have messages
	 */",
 "/**
	 * Set a preloaded message blob last modification timestamp. Used so we
	 * can load this information for all modules at once.
	 * @param $lang String: Language code
	 * @param $mtime Integer: UNIX timestamp or 0 if there is no such blob
	 */",
 "/**
	 * Get this module\'s last modification timestamp for a given
	 * combination of language, skin and debug mode flag. This is typically
	 * the highest of each of the relevant components\' modification
	 * timestamps. Whenever anything happens that changes the module\'s
	 * contents for these parameters, the mtime should increase.
	 *
	 * NOTE: The mtime of the module\'s messages is NOT automatically included.
	 * If you want this to happen, you\'ll need to call getMsgBlobMtime()
	 * yourself and take its result into consideration.
	 * 
	 * @param $context ResourceLoaderContext: Context object
	 * @return Integer: UNIX timestamp
	 */",
 "/**
	 * Check whether this module is known to be empty. If a child class
	 * has an easy and cheap way to determine that this module is
	 * definitely going to be empty, it should override this method to
	 * return true in that case. Callers may optimize the request for this
	 * module away if this function returns true.
	 * @param $context ResourceLoaderContext: Context object
	 * @return Boolean
	 */",
 "/**
	 * Validate a given script file; if valid returns the original source.
	 * If invalid, returns replacement JS source that throws an exception.
	 *
	 * @param string $fileName
	 * @param string $contents
	 * @return string JS with the original, or a replacement error
	 */",
 "/**
	 * @return JSParser
	 */",
 "/**
 * Abstraction for resource loader modules, with name registration and maxage functionality.
 */",
 "/** Interlingua (Interlingua)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Julian Mendez
 * @author Kaganer
 * @author Malafaya
 * @author McDutchie
 * @author Reedy
 * @author ???????? ????????????????
 */",
 "/**
	 * @param $trials int
	 * @return string
	 */",
 "/**
	 * @return bool
	 */",
 "/** Load up our object with user supplied data */",
 "/** Pass the request to our internal function.
	 * BEWARE! Data are passed as they have been supplied by the user,
	 * they should be carefully handled in the function processing the
	 * request.
	 */",
 "/**
 * Object-Oriented Ajax functions.
 * @ingroup Ajax
 */",
 "/**
	 * @param $count int
	 * @param $forms array
	 * @return string
	 */",
 "/** Welsh (Cymraeg)
 *
 * @ingroup Language
 *
 * @author Niklas Laxstr??m
 */",
 "/**
	 * @param $name string
	 * @return bool
	 */",
 "/**
	 * @param $id int
	 * @return bool
	 */",
 "/**
	 * @param $cond array
	 * @return bool
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return array
	 */",
 "/**
 * This class supports authentication against an external MediaWiki database,
 * probably any version back to 1.5 or something.  Example configuration:
 *
 *   $wgExternalAuthType = \'ExternalUser_MediaWiki\';
 *   $wgExternalAuthConf = array(
 *       \'DBtype\' => \'mysql\',
 *       \'DBserver\' => \'localhost\',
 *       \'DBname\' => \'wikidb\',
 *       \'DBuser\' => \'quasit\',
 *       \'DBpassword\' => \'a5Cr:yf9u-6[{`g\',
 *       \'DBprefix\' => \'\',
 *   );
 *
 * All fields must be present.  These mean the same things as $wgDBtype, 
 * $wgDBserver, etc.  This implementation is quite crude; it could easily 
 * support multiple database servers, for instance, and memcached, and it 
 * probably has bugs.  Kind of hard to reuse code when things might rely on who 
 * knows what configuration globals.
 *
 * If either wiki uses the UserComparePasswords hook, password authentication 
 * might fail unexpectedly unless they both do the exact same validation.  
 * There may be other corner cases like this where this will fail, but it 
 * should be unlikely.
 *
 * @ingroup ExternalUser
 */",
 "/**
 * Selenium server manager
 *
 * @file
 * @ingroup Testing
 * Copyright (C) 2010 Nadeesha Weerasinghe <nadeesha@calcey.com>
 * http://www.calcey.com/ 
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @addtogroup Testing
 *
 */",
 "/**
	 * Constructor
	 * If $format ends with \'fm\', pretty-print the output in HTML.
	 * @param $main ApiMain
	 * @param $format string Format name
	 */",
 "/**
	 * Overriding class returns the mime type that should be sent to the client.
	 * This method is not called if getIsHtml() returns true.
	 * @return string
	 */",
 "/**
	 * Whether this formatter needs raw data such as _element tags
	 * @return bool
	 */",
 "/**
	 * Get the internal format name
	 * @return string
	 */",
 "/**
	 * Specify whether or not sequences like &amp;quot; should be unescaped
	 * to &quot; . This should only be set to true for the help message
	 * when rendered in the default (xmlfm) format. This is a temporary
	 * special-case fix that should be removed once the help has been
	 * reworked to use a fully HTML interface.
	 *
	 * @param $b bool Whether or not ampersands should be escaped.
	 */",
 "/**
	 * Returns true when the HTML pretty-printer should be used.
	 * The default implementation assumes that formats ending with \'fm\'
	 * should be formatted in HTML.
	 * @return bool
	 */",
 "/**
	 * Whether this formatter can format the help message in a nice way.
	 * By default, this returns the same as getIsHtml().
	 * When action=help is set explicitly, the help will always be shown
	 * @return bool
	 */",
 "/**
	 * Disable the formatter completely. This causes calls to initPrinter(),
	 * printText() and closePrinter() to be ignored.
	 */",
 "/**
	 * Initialize the printer function and prepare the output headers, etc.
	 * This method must be the first outputing method during execution.
	 * A help screen\'s header is printed for the HTML-based output
	 * @param $isError bool Whether an error message is printed
	 */",
 "/**
	 * Finish printing. Closes HTML tags.
	 */",
 "/**
	 * The main format printing function. Call it to output the result
	 * string to the user. This function will automatically output HTML
	 * when format name ends in \'fm\'.
	 * @param $text string
	 */",
 "/**
	 * Get the contents of the buffer.
	 */",
 "/**
	 * Set the flag to buffer the result instead of printing it.
	 * @param $value bool
	 */",
 "/**
	 * Sets whether the pretty-printer should format *bold* and $italics$
	 * @param $help bool
	 */",
 "/**
	 * Pretty-print various elements in HTML format, such as xml tags and
	 * URLs. This method also escapes characters like <
	 * @param $text string
	 * @return string
	 */",
 "/**
 * This is the abstract base class for API formatters.
 *
 * @ingroup API
 */",
 "/**
	 * Call this method to initialize output data. See execute()
	 * @param $result ApiResult
	 * @param $feed object an instance of one of the $wgFeedClasses classes
	 * @param $feedItems array of FeedItem objects
	 */",
 "/**
	 * Feed does its own headers
	 *
	 * @return null
	 */",
 "/**
	 * Optimization - no need to sanitize data that will not be needed
	 *
	 * @return bool
	 */",
 "/**
	 * This class expects the result data to be in a custom format set by self::setResult()
	 * $result[\'_feed\']		- an instance of one of the $wgFeedClasses classes
	 * $result[\'_feeditems\']	- an array of FeedItem instances
	 */",
 "/**
 * This printer is used to wrap an instance of the Feed class
 * @ingroup API
 */",
 "/**
 * A basic extension that\'s used by the parser tests to test whether input and
 * arguments are passed to extensions properly.
 *
 * Copyright ?? 2005, 2006 ??var Arnfj??r?? Bjarmason
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @file
 * @ingroup Testing
 * @author ??var Arnfj??r?? Bjarmason <avarab@gmail.com>
 */",
 "/**
	 * Read a chunk, checking to make sure its not too big.
	 *
	 * @param $fh resource The file handle
	 * @param $size Integer size in bytes.
	 * @throws Exception if too big.
	 * @return String The chunk.
	 */",
 "/**
 * PNG frame counter.
 *
 * @ingroup Media
 */",
 "/**
	 * First checks the return code
	 * of UploadBase::getTitle() and then the actual returned title
	 * 
	 * @dataProvider dataTestTitleValidation
	 */",
 "/**
	 * Test various forms of valid and invalid titles that can be supplied.
	 */",
 "/**
	 * Test the upload verification functions
	 */",
 "/**
	 * test uploading a 100 bytes file with $wgMaxUploadSize = 100
	 *
	 * This method should be abstracted so we can test different settings.
	 */",
 "/**
 * @group Upload
 */",
 "/** Tongan (lea faka-Tonga)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Cbrown1023
 * @author Tau??olunga
 * @author ???????? ????????????????
 */",
 "/**
	 * Constructor.
	 * Parameters $server, $user and $password are not used.
	 * @param $server string
	 * @param $user string
	 * @param $password string
	 * @param $dbName string
	 * @param $flags int
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @todo: check if it should be true like parent class
	 *
	 * @return bool
	 */",
 "/** Open an SQLite database and return a resource handle to it
	 *  NOTE: only $dbName is used, the other parameters are irrelevant for SQLite databases
	 *
	 * @param $server
	 * @param $user
	 * @param $pass
	 * @param $dbName
	 *
	 * @return PDO
	 */",
 "/**
	 * Opens a database file
	 *
	 * @param $fileName string
	 *
	 * @return PDO|false SQL connection or false if failed
	 */",
 "/**
	 * Close an SQLite database
	 *
	 * @return bool
	 */",
 "/**
	 * Generates a database file name. Explicitly public for installer.
	 * @param $dir String: Directory where database resides
	 * @param $dbName String: Database name
	 * @return String
	 */",
 "/**
	 * Check if the searchindext table is FTS enabled.
	 * @return false if not enabled.
	 */",
 "/**
	 * Returns version of currently supported SQLite fulltext search module or false if none present.
	 * @return String
	 */",
 "/**
	 * Attaches external database to our connection, see http://sqlite.org/lang_attach.html
	 * for details.
	 *
	 * @param $name String: database name to be used in queries like SELECT foo FROM dbname.table
	 * @param $file String: database file name. If omitted, will be generated using $name and $wgSQLiteDataDir
	 * @param $fname String: calling function name
	 *
	 * @return ResultWrapper
	 */",
 "/**
	 * @see DatabaseBase::isWriteQuery()
	 *
	 * @param $sql string
	 *
	 * @return bool
	 */",
 "/**
	 * SQLite doesn\'t allow buffered results or data seeking etc, so we\'ll use fetchAll as the result
	 *
	 * @param $sql string
	 *
	 * @return ResultWrapper
	 */",
 "/**
	 * @param $res ResultWrapper
	 */",
 "/**
	 * @param $res ResultWrapper
	 * @return
	 */",
 "/**
	 * @param $res ResultWrapper
	 * @return bool|mixed
	 */",
 "/**
	 * The PDO::Statement class implements the array interface so count() will work
	 *
	 * @param $res ResultWrapper
	 *
	 * @return int
	 */",
 "/**
	 * @param $res ResultWrapper
	 * @return int
	 */",
 "/**
	 * @param $res ResultWrapper
	 * @param $n 
	 * @return bool
	 */",
 "/**
	 * Use MySQL\'s naming (accounts for prefix etc) but remove surrounding backticks
	 *
	 * @param $name
	 * @param $format String
	 * @return string
	 */",
 "/**
	 * Index names have DB scope
	 *
	 * @param $index string
	 *
	 * @return string
	 */",
 "/**
	 * This must be called after nextSequenceVal
	 *
	 * @return int
	 */",
 "/**
	 * @param $res ResultWrapper
	 * @param $row
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return int
	 */",
 "/**
	 * Returns information about an index
	 * Returns false if the index does not exist
	 * - if errors are explicitly ignored, returns NULL on failure
	 *
	 * @return array
	 */",
 "/**
	 * @param $table
	 * @param $index
	 * @param $fname string
	 * @return bool|null
	 */",
 "/**
	 * Filter the options used in SELECT statements
	 *
	 * @param $options array
	 *
	 * @return array
	 */",
 "/**
	 * @param $options array
	 * @return string
	 */",
 "/**
	 * @param $options array
	 * @return array
	 */",
 "/**
	 * @param $options array
	 * @return string
	 */",
 "/**
	 * Based on generic method (parent) with some prior SQLite-sepcific adjustments
	 */",
 "/**
	 * @param $table
	 * @param $uniqueIndexes
	 * @param $rows
	 * @param $fname string
	 * @return bool|ResultWrapper
	 */",
 "/**
	 * Returns the size of a text field, or -1 for \"unlimited\"
	 * In SQLite this is SQLITE_MAX_LENGTH, by default 1GB. No way to query it though.
	 *
	 * @return int
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * @param $sqls
	 * @param $all
	 * @return string
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * @return string wikitext of a link to the server software\'s web site
	 */",
 "/**
	 * @return string Version information from the database
	 */",
 "/**
	 * @return string User-friendly database information
	 */",
 "/**
	 * Get information about a given field
	 * Returns false if the field does not exist.
	 *
	 * @return SQLiteField|false
	 */",
 "/**
	 * @param  $sql
	 * @param  $num
	 * @return string
	 */",
 "/**
	 * @param $s string
	 * @return string
	 */",
 "/**
	 * @param $b
	 * @return Blob
	 */",
 "/**
	 * @param $b Blob|string
	 * @return string
	 */",
 "/**
	 * @param $s Blob|string
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * No-op version of deadlockLoop
	 */",
 "/**
	 * @param $s string
	 * @return string
	 */",
 "/**
	 * Build a concatenation list to feed into a SQL query
	 *
	 * @param $stringList array
	 *
	 * @return string
	 */",
 "/**
	 * @throws MWException
	 * @param $oldName
	 * @param $newName
	 * @param $temporary bool
	 * @param $fname string
	 * @return bool|ResultWrapper
	 */",
 "/**
	 * List all tables on the database
	 *
	 * @param $prefix Only show tables with this prefix, e.g. mw_
	 * @param $fname String: calling function name
	 *
	 * @return array
	 */",
 "/**
 * @ingroup Database
 */",
 "/**
 * This class allows simple acccess to a SQLite database independently from main database settings
 * @ingroup Database
 */",
 "/**
	 * @return bool
	 */",
 "/**
 * @ingroup Database
 */",
 "/** @dataProvider providerPlural */",
 "/** Tests for MediaWiki languages/classes/LanguageNso.php */",
 "/**
	 * @param $resultPageSet ApiPageSet
	 * @return
	 */",
 "/**
 * A query module to list all wiki links on a given set of pages.
 *
 * @ingroup API
 */",
 "/**
	 * Constructor
	 */",
 "/**
	 * Show the special page
	 */",
 "/**
	 * Create a user-readable list of permissions from the given array.
	 *
	 * @param $permissions Array of permission => bool (from $wgGroupPermissions items)
	 * @param $revoke Array of permission => bool (from $wgRevokePermissions items)
	 * @param $add Array of groups this group is allowed to add or true
	 * @param $remove Array of groups this group is allowed to remove or true
	 * @param $addSelf Array of groups this group is allowed to add to self or true
	 * @param $removeSelf Array of group this group is allowed to remove from self or true
	 * @return string List of all granted permissions, separated by comma separator
	 */",
 "/**
 * This special page lists all defined user groups and the associated rights.
 * See also @ref $wgGroupPermissions.
 *
 * @ingroup SpecialPage
 * @author Petr Kadlec <mormegil@centrum.cz>
 */",
 "/** Serbian (Latin script) (???Srpski (latinica)???)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author FriedrickMILBarbarossa
 * @author Kaganer
 * @author Liangent
 * @author Meno25
 * @author Michaello
 * @author Rancher
 * @author Red Baron
 * @author Reedy
 * @author Slaven Kosanovic
 * @author ?????????? ??????????????????
 * @author ?????????????? ????????????????????
 * @author ???????? ????????????????
 */",
 "/**
	 * @param $title Title
	 */",
 "/** @dataProvider providerPlural */",
 "/** Tests for MediaWiki languages/classes/LanguageWa.php */",
 "/**
	 * Return the API documentation for the parameters.
	 * @return Array parameter documentation.
	 */",
 "/**
 * A query action to get image information from temporarily stashed files.
 *
 * @ingroup API
 */",
 "/** */",
 "/**
	 * Use singular form for zero
	 *
	 * @param $count int
	 * @param $forms array
	 *
	 * @return string
	 */",
 "/**
 * Bihari (?????????????????????)
 *
 * @ingroup Language
 */",
 "/**
 * action=edit / action=submit handler
 *
 * Copyright ?? 2012 Timo Tijhof
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA
 *
 * @file
 * @ingroup Actions
 * @author Timo Tijhof
 */",
 "/** Shona (chiShona)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Hakka
 */",
 "/**
 * Test Case ID   : 01 (http://www.mediawiki.org/wiki/New_installer/Test_plan)
 * Test Case Name : Install Mediawiki using \'MySQL\' database type successfully
 * Version        : MediaWiki 1.18alpha
*/",
 "/**
	 * Constructor
	 *
	 * @param $langobj Language: the Language Object
	 * @param $maincode String: the main language code of this language
	 * @param $variants Array: the supported variants of this language
	 * @param $variantfallbacks Array: the fallback language of each variant
	 * @param $flags Array: defining the custom strings that maps to the flags
	 * @param $manualLevel Array: limit for supported variants
	 */",
 "/**
	 * Get all valid variants.
	 * Call this instead of using $this->mVariants directly.
	 *
	 * @return Array: contains all valid variants
	 */",
 "/**
	 * In case some variant is not defined in the markup, we need
	 * to have some fallback. For example, in zh, normally people
	 * will define zh-hans and zh-hant, but less so for zh-sg or zh-hk.
	 * when zh-sg is preferred but not defined, we will pick zh-hans
	 * in this case. Right now this is only used by zh.
	 *
	 * @param $variant String: the language code of the variant
	 * @return String|array: The code of the fallback language or the
	 *				 main code if there is no fallback
	 */",
 "/**
	 * Get the title produced by the conversion rule.
	 * @return String: The converted title text
	 */",
 "/**
	 * Get preferred language variant.
	 * @return String: the preferred language code
	 */",
 "/**
	 * Get default variant.
	 * This function would not be affected by user\'s settings or headers
	 * @return String: the default variant code
	 */",
 "/**
	 * Validate the variant
	 * @param $variant String: the variant to validate
	 * @return Mixed: returns the variant if it is valid, null otherwise
	 */",
 "/**
	 * Get the variant specified in the URL
	 *
	 * @return Mixed: variant if one found, false otherwise.
	 */",
 "/**
	 * Determine if the user has a variant set.
	 *
	 * @return Mixed: variant if one found, false otherwise.
	 */",
 "/**
	 * Determine the language variant from the Accept-Language header.
	 *
	 * @return Mixed: variant if one found, false otherwise.
	 */",
 "/**
	 * Dictionary-based conversion.
	 * This function would not parse the conversion rules.
	 * If you want to parse rules, try to use convert() or
	 * convertTo().
	 *
	 * @param $text String the text to be converted
	 * @param $toVariant bool|string the target language code
	 * @return String the converted text
	 */",
 "/**
	 * Translate a string to a variant.
	 * Doesn\'t parse rules or do any of that other stuff, for that use
	 * convert() or convertTo().
	 *
	 * @param $text String: text to convert
	 * @param $variant String: variant language code
	 * @return String: translated text
	 */",
 "/**
	 * Call translate() to convert text to all valid variants.
	 *
	 * @param $text String: the text to be converted
	 * @return Array: variant => converted text
	 */",
 "/**
	 * Convert link text to all valid variants.
	 * In the first, this function only convert text outside the
	 * \"-{\" \"}-\" markups. Since the \"{\" and \"}\" are not allowed in
	 * titles, the text will get all converted always.
	 * So I removed this feature and deprecated the function.
	 *
	 * @param $text String: the text to be converted
	 * @return Array: variant => converted text
	 * @deprecated since 1.17 Use autoConvertToAllVariants() instead
	 */",
 "/**
	 * Apply manual conversion rules.
	 *
	 * @param $convRule ConverterRule Object of ConverterRule
	 */",
 "/**
	 * Auto convert a Title object to a readable string in the
	 * preferred variant.
	 *
	 * @param $title Title a object of Title
	 * @return String: converted title text
	 */",
 "/**
	 * Convert text to different variants of a language. The automatic
	 * conversion is done in autoConvert(). Here we parse the text
	 * marked with -{}-, which specifies special conversions of the
	 * text that can not be accomplished in autoConvert().
	 *
	 * Syntax of the markup:
	 * -{code1:text1;code2:text2;...}-  or
	 * -{flags|code1:text1;code2:text2;...}-  or
	 * -{text}- in which case no conversion should take place for text
	 *
	 * @param $text String: text to be converted
	 * @return String: converted text
	 */",
 "/**
	 * Same as convert() except a extra parameter to custom variant.
	 *
	 * @param $text String: text to be converted
	 * @param $variant String: the target variant code
	 * @return String: converted text
	 */",
 "/**
	 * Recursively convert text on the outside. Allow to use nested
	 * markups to custom rules.
	 *
	 * @param $text String: text to be converted
	 * @param $variant String: the target variant code
	 * @param $depth Integer: depth of recursion
	 * @return String: converted text
	 */",
 "/**
	 * Recursively convert text on the inside.
	 *
	 * @param $text String: text to be converted
	 * @param $variant String: the target variant code
	 * @param $startPos int
	 * @param $depth Integer: depth of recursion
	 *
	 * @return String: converted text
	 */",
 "/**
	 * If a language supports multiple variants, it is possible that
	 * non-existing link in one variant actually exists in another variant.
	 * This function tries to find it. See e.g. LanguageZh.php
	 *
	 * @param $link String: the name of the link
	 * @param $nt Mixed: the title object of the link
	 * @param $ignoreOtherCond Boolean: to disable other conditions when
	 *		we need to transclude a template or update a category\'s link
	 * @return Null, the input parameters may be modified upon return
	 */",
 "/**
	 * Returns language specific hash options.
	 *
	 * @return string
	 */",
 "/**
	 * Guess if a text is written in a variant. This should be implemented in subclasses.
	 *
	 * @param string	$text the text to be checked
	 * @param string	$variant language code of the variant to be checked for
	 * @return bool	true if $text appears to be written in $variant, false if not
	 *
	 * @author Nikola Smolenski <smolensk@eunet.rs>
	 * @since 1.19
	 */",
 "/**
	 * Load default conversion tables.
	 * This method must be implemented in derived class.
	 *
	 * @private
	 */",
 "/**
	 * Load conversion tables either from the cache or the disk.
	 * @private
	 * @param $fromCache Boolean: load from memcached? Defaults to true.
	 */",
 "/**
	 * Hook for post processing after conversion tables are loaded.
	 */",
 "/**
	 * Reload the conversion tables.
	 *
	 * @private
	 */",
 "/**
	 * Parse the conversion table stored in the cache.
	 *
	 * The tables should be in blocks of the following form:
	 *		-{
	 *			word => word ;
	 *			word => word ;
	 *			...
	 *		}-
	 *
	 * To make the tables more manageable, subpages are allowed
	 * and will be parsed recursively if $recursive == true.
	 *
	 * @param $code String: language code
	 * @param $subpage String: subpage name
	 * @param $recursive Boolean: parse subpages recursively? Defaults to true.
	 *
	 * @return array
	 */",
 "/**
	 * Enclose a string with the \"no conversion\" tag. This is used by
	 * various functions in the Parser.
	 *
	 * @param $text String: text to be tagged for no conversion
	 * @param $noParse Boolean: unused
	 * @return String: the tagged text
	 */",
 "/**
	 * Convert the sorting key for category links. This should make different
	 * keys that are variants of each other map to the same key.
	 *
	 * @param $key string
	 *
	 * @return string
	 */",
 "/**
	 * Hook to refresh the cache of conversion tables when
	 * MediaWiki:Conversiontable* is updated.
	 * @private
	 *
	 * @param $article Article object
	 * @param $user Object: User object for the current user
	 * @param $text String: article text (?)
	 * @param $summary String: edit summary of the edit
	 * @param $isMinor Boolean: was the edit marked as minor?
	 * @param $isWatch Boolean: did the user watch this page or not?
	 * @param $section Unused
	 * @param $flags Bitfield
	 * @param $revision Object: new Revision object or null
	 * @return Boolean: true
	 */",
 "/**
	 * Armour rendered math against conversion.
	 * Escape special chars in parsed math text. (in most cases are img elements)
	 *
	 * @param $text String: text to armour against conversion
	 * @return String: armoured text where { and } have been converted to
	 *                 &#123; and &#125;
	 */",
 "/**
	 * Get the cached separator pattern for ConverterRule::parseRules()
	 */",
 "/**
 * Base class for language conversion.
 * @ingroup Language
 *
 * @author Zhengzhu Feng <zhengzhu@gmail.com>
 * @maintainers fdcn <fdcn64@gmail.com>, shinjiman <shinjiman@gmail.com>, PhiLiP <philip.npc@gmail.com>
 */",
 "/**
	 * Constructor
	 *
	 * @param $text String: the text between -{ and }-
	 * @param $converter LanguageConverter object
	 */",
 "/**
	 * Check if variants array in convert array.
	 *
	 * @param $variants Array or string: variant language code
	 * @return String: translated text
	 */",
 "/**
	 * Parse flags with syntax -{FLAG| ... }-
	 * @private
	 */",
 "/**
	 * Generate conversion table.
	 * @private
	 */",
 "/**
	 * @private
	 *
	 * @return string
	 */",
 "/**
	 * Parse rules conversion.
	 * @private
	 *
	 * @param $variant
	 *
	 * @return string
	 */",
 "/**
	 * Generate conversion table for all text.
	 * @private
	 */",
 "/**
	 * Parse rules and flags.
	 * @param $variant String: variant language code
	 */",
 "/**
	 * @todo FIXME: code this function :)
	 */",
 "/**
	 * Get display text on markup -{...}-
	 * @return string
	 */",
 "/**
	 * Get converted title.
	 * @return string
	 */",
 "/**
	 * Return how deal with conversion rules.
	 * @return string
	 */",
 "/**
	 * Get conversion table. (bidirectional and unidirectional
	 * conversion table)
	 * @return array
	 */",
 "/**
	 * Get conversion rules string.
	 * @return string
	 */",
 "/**
	 * Get conversion flags.
	 * @return array
	 */",
 "/**
 * Parser for rules of language conversion , parse rules in -{ }- tag.
 * @ingroup Language
 * @author fdcn <fdcn64@gmail.com>, PhiLiP <philip.npc@gmail.com>
 */",
 "/** ?????????? (??????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Amire80
 */",
 "/**
 * Internationalization file for the install/upgrade process. None of the
 * messages used here are loaded during normal operations, only during
 * install and upgrade. So you should not put normal messages here.
 *
 * @file
 * @ingroup Deployment
 */",
 "/** English */",
 "/** Message documentation (Message documentation)
 * @author Amire80
 * @author Dani
 * @author EugeneZelenko
 * @author Kghbln
 * @author McDutchie
 * @author Mormegil
 * @author Nike
 * @author Platonides
 * @author Purodha
 * @author Raymond
 * @author SPQRobin
 * @author Siebrand
 * @author Umherirrender
 */",
 "/** Goan Konkani (Latin script) (Konknni)
 * @author The Discoverer
 */",
 "/** Magyar (mag??z??) (Magyar (mag??z??))
 * @author Dani
 * @author Glanthor Reviol
 */",
 "/** Moroccan Spoken Arabic (Ma??ribi)
 * @author Enzoreg
 */",
 "/** Espa??ol (formal) (Espa??ol (formal))
 * @author Dferg
 */",
 "/** Afrikaans (Afrikaans)
 * @author Naudefj
 */",
 "/** Gheg Albanian (Geg??)
 * @author Bresta
 */",
 "/** Amharic (????????????) */",
 "/** Aragonese (Aragon??s)
 * @author Juanpabl
 */",
 "/** Old English (??nglisc)
 * @author Gott wisst
 */",
 "/** Arabic (??????????????)
 * @author Meno25
 * @author OsamaK
 * @author ????????
 */",
 "/** Aramaic (??????????)
 * @author Basharh
 */",
 "/** Egyptian Spoken Arabic (????????) */",
 "/** Assamese (??????????????????)
 * @author Chaipau
 * @author Gitartha.bordoloi
 */",
 "/** Asturian (Asturianu) */",
 "/** Kotava (Kotava) */",
 "/** Azerbaijani (Az??rbaycanca)
 * @author Cekli829
 * @author Vago
 * @author Wertuose
 */",
 "/** Bashkir (??????????????????)
 * @author Haqmar
 */",
 "/** Bavarian (Boarisch)
 * @author Mucalexx
 */",
 "/** Southern Balochi (?????????? ????????????) */",
 "/** Bikol Central (Bikol Central) */",
 "/** Belarusian (????????????????????) */",
 "/** Belarusian (Tara??kievica orthography) (??????????????????????? (??????????????????????)???)
 * @author EugeneZelenko
 * @author Jim-by
 * @author Wizardist
 * @author Zedlik
 */",
 "/** Bulgarian (??????????????????)
 * @author DCLXVI
 */",
 "/** Banjar (Bahasa Banjar)
 * @author Ezagren
 * @author J Subhi
 */",
 "/** Bengali (???????????????)
 * @author Bellayet
 * @author Wikitanvir
 */",
 "/** Bishnupria Manipuri (???????????? ?????????/??????????????????????????????????????? ?????????????????????) */",
 "/** Breton (Brezhoneg)
 * @author Fohanno
 * @author Fulup
 * @author Gwendal
 * @author Y-M D
 */",
 "/** Bosnian (Bosanski)
 * @author CERminator
 */",
 "/** Catalan (Catal??) */",
 "/** Chechen (??????????????)
 * @author Sasan700
 */",
 "/** Cebuano (Cebuano) */",
 "/** Sorani (??????????)
 * @author Asoxor
 */",
 "/** Capiznon (Capice??o)
 * @author Oxyzen
 */",
 "/** Crimean Turkish (Latin script) (???Q??r??mtatarca (Latin)???) */",
 "/** Crimean Turkish (Cyrillic script) (??????????????????????????????? (????????????)???) */",
 "/** Czech (??esky)
 * @author Danny B.
 * @author Mormegil
 */",
 "/** Kashubian (Kasz??bsczi) */",
 "/** Chuvash (??????????????) */",
 "/** Welsh (Cymraeg) */",
 "/** Danish (Dansk)
 * @author Peter Alberti
 */",
 "/** German (Deutsch)
 * @author Kghbln
 * @author LWChris
 * @author Purodha
 * @author The Evil IP address
 * @author Umherirrender
 */",
 "/** German (formal address) (???Deutsch (Sie-Form)???)
 * @author MichaelFrey
 */",
 "/** Zazaki (Zazaki) */",
 "/** Lower Sorbian (Dolnoserbski) */",
 "/** Central Dusun (Dusun Bundu-liwan)
 * @author FRANELYA
 */",
 "/** Greek (????????????????) */",
 "/** Esperanto (Esperanto)
 * @author Airon90
 * @author Yekrats
 */",
 "/** Spanish (Espa??ol)
 * @author Crazymadlover
 * @author Danke7
 * @author Locos epraix
 * @author Od1n
 * @author Platonides
 * @author Sanbec
 * @author Translationista
 */",
 "/** Estonian (Eesti) */",
 "/** Basque (Euskara)
 * @author An13sa
 */",
 "/** Extremaduran (Estreme??u) */",
 "/** Persian (??????????)
 * @author Mjbmr
 */",
 "/** Finnish (Suomi)
 * @author Centerlink
 * @author Crt
 * @author Nike
 * @author Olli
 * @author Str4nd
 */",
 "/** Faroese (F??royskt) */",
 "/** French (Fran??ais)
 * @author Aadri
 * @author Crochet.david
 * @author Gomoko
 * @author Grondin
 * @author Hashar
 * @author IAlex
 * @author Jean-Fr??d??ric
 * @author McDutchie
 * @author Peter17
 * @author Sherbrooke
 * @author Urhixidur
 * @author Verdy p
 * @author Yumeki
 */",
 "/** Cajun French (Fran??ais cadien) */",
 "/** Franco-Proven??al (Arpetan)
 * @author ChrisPtDe
 */",
 "/** Northern Frisian (Nordfriisk)
 * @author Pyt
 */",
 "/** Friulian (Furlan) */",
 "/** Western Frisian (Frysk) */",
 "/** Irish (Gaeilge) */",
 "/** Gagauz (Gagauz) */",
 "/** Simplified Gan script (?????????(??????)???) */",
 "/** Traditional Gan script (?????????(??????)???) */",
 "/** Scottish Gaelic (G??idhlig)
 * @author Akerbeltz
 */",
 "/** Galician (Galego)
 * @author Elisardojm
 * @author Toli??o
 */",
 "/** Ancient Greek (????????????? ??????????????????)
 * @author Omnipaedista
 */",
 "/** Swiss German (Alemannisch)
 * @author Als-Holder
 */",
 "/** Gujarati (?????????????????????)
 * @author Dineshjk
 */",
 "/** Manx (Gaelg) */",
 "/** Hakka (Hak-k??-fa) */",
 "/** Hawaiian (Hawai`i) */",
 "/** Hebrew (??????????)
 * @author Amire80
 * @author YaronSh
 * @author ??????
 */",
 "/** Hindi (??????????????????) */",
 "/** Fiji Hindi (Latin script) (Fiji Hindi)
 * @author Thakurji
 */",
 "/** Hiligaynon (Ilonggo)
 * @author Anjoeli9806
 */",
 "/** Croatian (Hrvatski) */",
 "/** Upper Sorbian (Hornjoserbsce)
 * @author Michawiki
 */",
 "/** Haitian (Krey??l ayisyen)
 * @author Boukman
 */",
 "/** Hungarian (Magyar)
 * @author Dani
 * @author Glanthor Reviol
 */",
 "/** Armenian (??????????????) */",
 "/** Interlingua (Interlingua)
 * @author McDutchie
 */",
 "/** Indonesian (Bahasa Indonesia)
 * @author Farras
 * @author IvanLanin
 * @author Reedy
 */",
 "/** Interlingue (Interlingue) */",
 "/** Igbo (Igbo)
 * @author Ukabia
 */",
 "/** Iloko (Ilokano) */",
 "/** Ido (Ido)
 * @author Wyvernoid
 */",
 "/** Icelandic (??slenska) */",
 "/** Italian (Italiano)
 * @author Beta16
 * @author Karika
 */",
 "/** Japanese (?????????)
 * @author Aphaia
 * @author Iwai.masaharu
 * @author Mizusumashi
 * @author Ninomy
 * @author Ohgi
 * @author Whym
 * @author Yanajin66
 * @author ????????????
 */",
 "/** Jamaican Creole English (Patois)
 * @author Yocahuna
 */",
 "/** Jutish (Jysk)
 * @author Husl??ke
 */",
 "/** Javanese (Basa Jawa) */",
 "/** Georgian (?????????????????????) */",
 "/** Kara-Kalpak (Qaraqalpaqsha) */",
 "/** ???????????????? (????????????????)
 * @author Bogups
 */",
 "/** Khowar (??????????)
 * @author Rachitrali
 */",
 "/** Kirmanjki (K??rmancki)
 * @author Mirzali
 */",
 "/** Kazakh (Arabic script) (????????????????? (??????????)???) */",
 "/** Kazakh (Cyrillic script) (????????????????? (??????????)???) */",
 "/** Kazakh (Latin script) (???Qazaq??a (lat??n)???) */",
 "/** Khmer (???????????????????????????)
 * @author Thearith
 * @author ???????????????????????????
 */",
 "/** Kannada (???????????????) */",
 "/** Korean (?????????) */",
 "/** Karachay-Balkar (????????????????-??????????????)
 * @author Iltever
 */",
 "/** Colognian (Ripoarisch)
 * @author Mormegil
 * @author Purodha
 */",
 "/** Kurdish (Latin script) (???Kurd?? (lat??n??)???)
 * @author George Animal
 */",
 "/** Ladino (Ladino)
 * @author Universal Life
 */",
 "/** Luxembourgish (L??tzebuergesch)
 * @author Robby
 */",
 "/** Lingua Franca Nova (Lingua Franca Nova) */",
 "/** Ganda (Luganda)
 * @author Kizito
 */",
 "/** Limburgish (Limburgs) */",
 "/** Lao (?????????) */",
 "/** Lithuanian (Lietuvi??) */",
 "/** Latvian (Latvie??u)
 * @author GreenZeb
 */",
 "/** Literary Chinese (??????) */",
 "/** Lazuri (Lazuri)
 * @author Bombola
 */",
 "/** Maithili (??????????????????)
 * @author Umeshberma
 */",
 "/** Moksha (??????????????) */",
 "/** Malagasy (Malagasy)
 * @author Jagwar
 */",
 "/** Eastern Mari (???????? ??????????) */",
 "/** Minangkabau (Baso Minangkabau)
 * @author Luthfi94
 */",
 "/** Macedonian (????????????????????)
 * @author Bjankuloski06
 */",
 "/** Malayalam (??????????????????)
 * @author Praveenp
 * @author Sadik Khalid
 */",
 "/** Mongolian (????????????)
 * @author Chinneeb
 */",
 "/** Marathi (???????????????) */",
 "/** Malay (Bahasa Melayu)
 * @author Anakmalaysia
 */",
 "/** Maltese (Malti)
 * @author Chrisportelli
 */",
 "/** Burmese (??????????????????????????????)
 * @author Lionslayer
 */",
 "/** Erzya (????????????)
 * @author Botuzhaleny-sodamo
 */",
 "/** Mazanderani (????????????????)
 * @author ??????
 */",
 "/** Nahuatl (N??huatl) */",
 "/** Min Nan Chinese (B??n-l??m-g??)
 * @author Ianbu
 */",
 "/** Norwegian (bokm??l)??? (???Norsk (bokm??l)???)
 * @author Event
 * @author Jon Harald S??by
 * @author Nghtwlkr
 */",
 "/** Low German (Plattd????tsch) */",
 "/** Nedersaksisch (Nedersaksisch)
 * @author Servien
 */",
 "/** Nepali (??????????????????)
 * @author Bhawani Gautam
 * @author RajeshPandey
 */",
 "/** Dutch (Nederlands)
 * @author Catrope
 * @author McDutchie
 * @author Purodha
 * @author SPQRobin
 * @author Siebrand
 * @author Tjcool007
 */",
 "/** Norwegian Nynorsk (???Norsk (nynorsk)???)
 * @author Harald Khan
 * @author Nghtwlkr
 */",
 "/** Occitan (Occitan) */",
 "/** Oriya (????????????)
 * @author Jnanaranjan Sahu
 */",
 "/** Ossetic (????????)
 * @author Amikeco
 */",
 "/** Punjabi (??????????????????) */",
 "/** Pampanga (Kapampangan) */",
 "/** Picard (Picard) */",
 "/** Deitsch (Deitsch)
 * @author Xqt
 */",
 "/** Polish (Polski)
 * @author Holek
 * @author Sp5uhe
 * @author Woytecr
 */",
 "/** Piedmontese (Piemont??is)
 * @author Borich??t
 * @author Dragon??t
 * @author Krinkle
 */",
 "/** Pontic (????????????????)
 * @author Sinopeus
 */",
 "/** Prussian (Pr??siskan)
 * @author Nertiks
 */",
 "/** Pashto (????????)
 * @author Ahmed-Najib-Biabani-Ibrahimkhel
 */",
 "/** Portuguese (Portugu??s)
 * @author Crazymadlover
 * @author Hamilton Abreu
 * @author Mormegil
 * @author Platonides
 * @author SandroHc
 * @author Waldir
 */",
 "/** Brazilian Portuguese (Portugu??s do Brasil)
 * @author Giro720
 * @author Gustavo
 * @author Marcionunes
 */",
 "/** Quechua (Runa Simi) */",
 "/** Romagnol (Rumagn??l) */",
 "/** Romansh (Rumantsch)
 * @author Gion-andri
 */",
 "/** Romanian (Rom??n??)
 * @author Minisarm
 * @author Stelistcristi
 */",
 "/** Tarand??ne (Tarand??ne)
 * @author Joetaras
 */",
 "/** Russian (??????????????)
 * @author Adata80
 * @author DCamer
 * @author Eleferen
 * @author Kaganer
 * @author Krinkle
 * @author Lockal
 * @author MaxSem
 * @author Yuriy Apostol
 * @author ?????????????????? ??????????????
 * @author ??rower
 */",
 "/** Rusyn (????????????????????)
 * @author Gazeb
 */",
 "/** Sanskrit (?????????????????????)
 * @author Hemant wikikosh1
 */",
 "/** Sakha (???????? ????????) */",
 "/** Sardinian (Sardu)
 * @author Andria
 */",
 "/** Sicilian (Sicilianu) */",
 "/** Scots (Scots) */",
 "/** Sassaresu (Sassaresu) */",
 "/** Cmique Itom (Cmique Itom) */",
 "/** Serbo-Croatian (Srpskohrvatski)
 * @author OC Ripper
 */",
 "/** Tachelhit (Ta??l???iyt/?????????????????????)
 * @author Dalinanir
 */",
 "/** Sinhala (???????????????) */",
 "/** Slovak (Sloven??ina) */",
 "/** Slovenian (Sloven????ina)
 * @author Dbc334
 */",
 "/** Lower Silesian (Schl??sch)
 * @author ??berlausitzer
 */",
 "/** Somali (Soomaaliga)
 * @author Maax
 */",
 "/** Albanian (Shqip) */",
 "/** Serbian (Cyrillic script) (??????????????? (????????????????)???)
 * @author Rancher
 */",
 "/** Serbian (Latin script) (???Srpski (latinica)???) */",
 "/** Sranan Tongo (Sranantongo) */",
 "/** Swati (SiSwati) */",
 "/** Seeltersk (Seeltersk)
 * @author Maartenvdbent
 */",
 "/** Sundanese (Basa Sunda) */",
 "/** Swedish (Svenska)
 * @author Skalman
 * @author WikiPhoenix
 */",
 "/** Swahili (Kiswahili)
 * @author Lloffiwr
 */",
 "/** Silesian (??l??nski)
 * @author Djpalar
 */",
 "/** Tamil (???????????????)
 * @author TRYPPN
 */",
 "/** Tulu (????????????) */",
 "/** Telugu (??????????????????)
 * @author Veeven
 */",
 "/** Tetum (Tetun)
 * @author MF-Warburg
 */",
 "/** Tajik (Cyrillic script) (????????????) */",
 "/** Tajik (Latin script) (tojik??)
 * @author Liangent
 */",
 "/** Thai (?????????)
 * @author Korrawit
 */",
 "/** Turkmen (T??rkmen??e)
 * @author Hanberke
 */",
 "/** Tagalog (Tagalog)
 * @author AnakngAraw
 * @author Sky Harbor
 */",
 "/** Turkish (T??rk??e) */",
 "/** Tatar (Cyrillic script) (??????????????)
 * @author KhayR
 */",
 "/** Tatar (Latin script) (Tatar??a)
 * @author Don Alessandro
 */",
 "/** Udmurt (????????????)
 * @author Andrewboltachev
 */",
 "/** Uyghur (Arabic script) (????????????????)
 * @author Sahran
 */",
 "/** Ukrainian (????????????????????)
 * @author Ahonc
 * @author Alex Khimich
 * @author Diemon.ukr
 * @author ????????
 */",
 "/** Urdu (????????) */",
 "/** Uzbek (O\'zbek) */",
 "/** V??neto (V??neto)
 * @author Vajotwo
 */",
 "/** Veps (Vepsan kel\')
 * @author ?????????? ????????????????
 */",
 "/** Vietnamese (Ti???ng Vi???t) */",
 "/** Volap??k (Volap??k) */",
 "/** V??ro (V??ro) */",
 "/** Walloon (Walon) */",
 "/** Waray (Winaray)
 * @author Harvzsf
 */",
 "/** Wolof (Wolof) */",
 "/** Wu (??????)
 * @author Wu-chinese.com
 */",
 "/** Kalmyk (????????????)
 * @author Huuchin
 */",
 "/** Yiddish (????????????)
 * @author ????????????????
 */",
 "/** Yoruba (Yor??b??)
 * @author Demmy
 */",
 "/** Cantonese (??????) */",
 "/** Zeeuws (Ze??uws) */",
 "/** Simplified Chinese (?????????(??????)???)
 * @author Hydra
 * @author Hzy980512
 * @author PhiLiP
 * @author Xiaomingyan
 * @author ???pp
 */",
 "/** Traditional Chinese (?????????(??????)???)
 * @author Hzy980512
 * @author Mark85296341
 */",
 "/** Chinese (Hong Kong) (?????????(??????)???)
 * @author Mark85296341
 */",
 "/** Chinese (Taiwan) (?????????(??????)???) */",
 "/**
	 * @covers Parser::getPreloadText
	 */",
 "/**
	 * @covers Parser::getPreloadText
	 */",
 "/**
	 * @covers Parser::getPreloadText
	 */",
 "/**
 * Basic tests for Parser::getPreloadText
 * @author Antoine Musso
 */",
 "/** Cherokee (?????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Etse (on chr.wikipedia.org)
 * @author Gmaxwell (on chr.wikipedia.org)
 * @author Maximillion Pegasus
 * @author Srtxg (on chr.wikipedia.org)
 */",
 "/** Brazilian Portuguese (Portugu??s do Brasil)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Alcali
 * @author Bani
 * @author Brion
 * @author BrunaaAa
 * @author Brunoy Anastasiya Seryozhenko
 * @author Capmo
 * @author Carla404
 * @author Crazymadlover
 * @author Daemorris
 * @author Danielsouzat
 * @author Diego Queiroz
 * @author Eduardo.mps
 * @author Everton137
 * @author Francisco Leandro
 * @author GKnedo
 * @author Giro720
 * @author GoEThe
 * @author Hamilton Abreu
 * @author Helder.wiki
 * @author Jesielt
 * @author Jorge Morais
 * @author Kaganer
 * @author Leonardo.stabile
 * @author LeonardoG
 * @author Lijealso
 * @author Luckas Blade
 * @author Malafaya
 * @author ManoDbo
 * @author McDutchie
 * @author MetalBrasil
 * @author Pedroca cerebral
 * @author Ppena
 * @author Rafael Vargas
 * @author Raylton P. Sousa
 * @author Rodrigo Calanca Nishino
 * @author Urhixidur
 * @author Vuln
 * @author Waldir
 * @author Yves Marques Junqueira
 * @author ???????? ????????????????
 * @author 555
 */",
 "/**
	 * Initialize an initial random state based off of whatever we can find
	 */",
 "/**
	 * Randomly hash data while mixing in clock drift data for randomness
	 *
	 * @param $data string The data to randomly hash.
	 * @return String The hashed bytes
	 * @author Tim Starling
	 */",
 "/**
	 * Return a rolling random state initially build using data from unstable sources
	 * @return string A new weak random state
	 */",
 "/**
	 * Decide on the best acceptable hash algorithm we have available for hash()
	 * @throws MWException
	 * @return String A hash algorithm
	 */",
 "/**
	 * Return the byte-length output of the hash algorithm we are
	 * using in self::hash and self::hmac.
	 *
	 * @return int Number of bytes the hash outputs
	 */",
 "/**
	 * Generate an acceptably unstable one-way-hash of some text
	 * making use of the best hash algorithm that we have available.
	 *
	 * @param $data string
	 * @return String A raw hash of the data
	 */",
 "/**
	 * Generate an acceptably unstable one-way-hmac of some text
	 * making use of the best hash algorithm that we have available.
	 *
	 * @param $data string
	 * @param $key string
	 * @return String A raw hash of the data
	 */",
 "/**
	 * @see self::wasStrong()
	 */",
 "/**
	 * @see self::generate()
	 */",
 "/**
	 * @see self::generateHex()
	 */",
 "/**
	 * Return a singleton instance of MWCryptRand
	 * @return MWCryptRand
	 */",
 "/**
	 * Return a boolean indicating whether or not the source used for cryptographic
	 * random bytes generation in the previously run generate* call
	 * was cryptographically strong.
	 *
	 * @return bool Returns true if the source was strong, false if not.
	 */",
 "/**
	 * Generate a run of (ideally) cryptographically random data and return
	 * it in raw binary form.
	 * You can use MWCryptRand::wasStrong() if you wish to know if the source used
	 * was cryptographically strong.
	 *
	 * @param $bytes int the number of bytes of random data to generate
	 * @param $forceStrong bool Pass true if you want generate to prefer cryptographically
	 *                          strong sources of entropy even if reading from them may steal
	 *                          more entropy from the system than optimal.
	 * @return String Raw binary random data
	 */",
 "/**
	 * Generate a run of (ideally) cryptographically random data and return
	 * it in hexadecimal string format.
	 * You can use MWCryptRand::wasStrong() if you wish to know if the source used
	 * was cryptographically strong.
	 *
	 * @param $chars int the number of hex chars of random data to generate
	 * @param $forceStrong bool Pass true if you want generate to prefer cryptographically
	 *                          strong sources of entropy even if reading from them may steal
	 *                          more entropy from the system than optimal.
	 * @return String Hexadecimal random data
	 */",
 "/**
 * A cryptographic random generator class used for generating secret keys
 *
 * This is based in part on Drupal code as well as what we used in our own code
 * prior to introduction of this class.
 *
 * @author Daniel Friesen
 * @file
 */",
 "/**
	 * Submit callback for an HTMLForm object
	 */",
 "/**
	 * Process the form
	 *
	 * @param $data Array
	 * @param $context IContextSource
	 * @return Array( Array(message key, parameters) ) on failure, True on success
	 */",
 "/**
 * A special page for unblocking users
 *
 * @ingroup SpecialPage
 */",
 "/** Banjar (Bahasa Banjar)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Alamnirvana
 * @author Ezagren
 * @author J Subhi
 * @author Kaganer
 */",
 "/** Northern Frisian (Nordfriisk)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Maartenvdbent
 * @author Merlissimo
 * @author Murma174
 * @author Pyt
 */",
 "/**
*TestCaseID:18-27(http://www.mediawiki.org/wiki/New_installer/Test_plan)
*TestCaseName:UIofMediaWikiinitial/Language/WelcometoMediaWiki!/Connecttodatabase/
*Databasesettings/Name/Options/Install/Complete/RestartInslationpages
*Version:MediaWiki1.18alpha
*/",
 "/**
	 * Log the job message
	 * @param $msg String The message to log
	 */",
 "/** Simplified Gan script (?????????(??????)???)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Kaganer
 * @author Liangent
 * @author Lokal Profil
 * @author PhiLiP
 * @author Philip <philip.npc@gmail.com>
 * @author Reedy
 * @author Symane
 * @author Urhixidur
 * @author Vipuser
 */",
 "/** Bislama (Bislama)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Iketsi
 * @author Ushanka
 */",
 "/**
	 * Checks that the user can unblock themselves if they are trying to do so
	 *
	 * @param User $user
	 * @throws ErrorPageError
	 */",
 "/**
	 * Handle some magic here
	 *
	 * @param $par String
	 */",
 "/**
	 * Customizes the HTMLForm a bit
	 *
	 * @param $form HTMLForm
	 */",
 "/**
	 * Get the HTMLForm descriptor array for the block form
	 * @return Array
	 */",
 "/**
	 * If the user has already been blocked with similar settings, load that block
	 * and change the defaults for the form fields to match the existing settings.
	 * @param $fields Array HTMLForm descriptor array
	 * @return Bool whether fields were altered (that is, whether the target is
	 *     already blocked)
	 */",
 "/**
	 * Add header elements like block log entries, etc.
	 */",
 "/**
	 * Add footer elements to the form
	 * @return string
	 */",
 "/**
	 * Determine the target of the block, and the type of target
	 * TODO: should be in Block.php?
	 * @param $par String subpage parameter passed to setup, or data value from
	 *     the HTMLForm
	 * @param $request WebRequest optionally try and get data from a request too
	 * @return array( User|string|null, Block::TYPE_ constant|null )
	 */",
 "/**
	 * HTMLForm field validation-callback for Target field.
	 * @since 1.18
	 * @param $value String
	 * @param $alldata Array
	 * @param $form HTMLForm
	 * @return Message
	 */",
 "/**
	 * Submit callback for an HTMLForm object, will simply pass
	 * @param $data array
	 * @param $form HTMLForm
	 * @return Bool|String
	 */",
 "/**
	 * Given the form data, actually implement a block
	 * @param  $data Array
	 * @param  $context IContextSource
	 * @return Bool|String
	 */",
 "/**
	 * Get an array of suggested block durations from MediaWiki:Ipboptions
	 * @todo FIXME: This uses a rather odd syntax for the options, should it be converted
	 *     to the standard \"**<duration>|<displayname>\" format?
	 * @param $lang Language|null the language to get the durations in, or null to use
	 *     the wiki\'s content language
	 * @return Array
	 */",
 "/**
	 * Convert a submitted expiry time, which may be relative (\"2 weeks\", etc) or absolute
	 * (\"24 May 2034\", etc), into an absolute timestamp we can put into the database.
	 * @param $expiry String: whatever was typed into the form
	 * @return String: timestamp or \"infinity\" string for the DB implementation
	 */",
 "/**
	 * Can we do an email block?
	 * @param $user User: the sysop wanting to make a block
	 * @return Boolean
	 */",
 "/**
	 * bug 15810: blocked admins should not be able to block/unblock
	 * others, and probably shouldn\'t be able to unblock themselves
	 * either.
	 * @param $user User|Int|String
	 * @param $performer User user doing the request
	 * @return Bool|String true or error message key
	 */",
 "/**
	 * Return a comma-delimited list of \"flags\" to be passed to the log
	 * reader for this block, to provide more information in the logs
	 * @param $data Array from HTMLForm data
	 * @param $type Block::TYPE_ constant (USER, RANGE, or IP)
	 * @return array
	 */",
 "/**
	 * Process the form on POST submission.
	 * @param  $data Array
	 * @return Bool|Array true for success, false for didn\'t-try, array of errors on failure
	 */",
 "/**
	 * Do something exciting on successful processing of the form, most likely to show a
	 * confirmation message
	 */",
 "/**
 * A special page that allows users with \'block\' right to block users from
 * editing pages and other actions
 *
 * @ingroup SpecialPage
 */",
 "/**
	 * Sets up the file object
	 *
	 * @param String $path Path to temporary file on local disk
	 */",
 "/**
	 * Returns the file system path
	 *
	 * @return String
	 */",
 "/**
	 * Checks if the file exists
	 *
	 * @return bool
	 */",
 "/**
	 * Get the file size in bytes
	 *
	 * @return int|false
	 */",
 "/**
	 * Get the file\'s last-modified timestamp
	 *
	 * @return string|false TS_MW timestamp or false on failure
	 */",
 "/**
	 * Guess the MIME type from the file contents alone
	 * 
	 * @return string 
	 */",
 "/**
	 * Get an associative array containing information about
	 * a file with the given storage path.
	 *
	 * @param $ext Mixed: the file extension, or true to extract it from the filename.
	 *             Set it to false to ignore the extension.
	 *
	 * @return array
	 */",
 "/**
	 * Placeholder file properties to use for files that don\'t exist
	 *
	 * @return Array
	 */",
 "/**
	 * Exract image size information
	 *
	 * @return Array
	 */",
 "/**
	 * Get a SHA-1 hash of a file in the local filesystem, in base-36 lower case
	 * encoding, zero padded to 31 digits.
	 *
	 * 160 log 2 / log 36 = 30.95, so the 160-bit hash fills 31 digits in base 36
	 * fairly neatly.
	 *
	 * @return false|string False on failure
	 */",
 "/**
	 * Get the final file extension from a file system path
	 * 
	 * @param $path string
	 * @return string
	 */",
 "/**
	 * Get an associative array containing information about a file in the local filesystem.
	 *
	 * @param $path String: absolute local filesystem path
	 * @param $ext Mixed: the file extension, or true to extract it from the filename.
	 *             Set it to false to ignore the extension.
	 *
	 * @return array
	 */",
 "/**
	 * Get a SHA-1 hash of a file in the local filesystem, in base-36 lower case
	 * encoding, zero padded to 31 digits.
	 *
	 * 160 log 2 / log 36 = 30.95, so the 160-bit hash fills 31 digits in base 36
	 * fairly neatly.
	 *
	 * @param $path string
	 *
	 * @return false|string False on failure
	 */",
 "/**
 * Class representing a non-directory file on the file system
 *
 * @ingroup FileBackend
 */",
 "/**
	 * Get a FormOptions object containing the default options
	 *
	 * @return FormOptions
	 */",
 "/**
	 * Create a FormOptions object with options as specified by the user
	 *
	 * @param $parameters array
	 *
	 * @return FormOptions
	 */",
 "/**
	 * Get custom show/hide filters
	 *
	 * @return Array Map of filter URL param names to properties (msg/default)
	 */",
 "/**
	 * Create a FormOptions object specific for feed requests and return it
	 *
	 * @return FormOptions
	 */",
 "/**
	 * Get the current FormOptions for this request
	 */",
 "/**
	 * Main execution point
	 *
	 * @param $subpage String
	 */",
 "/**
	 * Return an array with a ChangesFeed object and ChannelFeed object
	 *
	 * @return Array
	 */",
 "/**
	 * Process $par and put options found if $opts
	 * Mainly used when including the page
	 *
	 * @param $par String
	 * @param $opts FormOptions
	 */",
 "/**
	 * Get last modified date, for client caching
	 * Don\'t use this if we are using the patrol feature, patrol changes don\'t
	 * update the timestamp
	 *
	 * @param $feedFormat String
	 * @return String or false
	 */",
 "/**
	 * Return an array of conditions depending of options set in $opts
	 *
	 * @param $opts FormOptions
	 * @return array
	 */",
 "/**
	 * Process the query
	 *
	 * @param $conds Array
	 * @param $opts FormOptions
	 * @return database result or false (for Recentchangeslinked only)
	 */",
 "/**
	 * Send output to the OutputPage object, only called if not used feeds
	 *
	 * @param $rows Array of database rows
	 * @param $opts FormOptions
	 */",
 "/**
	 * Get the query string to append to feed link URLs.
	 * This is overridden by RCL to add the target parameter
	 */",
 "/**
	 * Return the text to be displayed above the changes
	 *
	 * @param $opts FormOptions
	 * @return String: XHTML
	 */",
 "/**
	 * Get options to be displayed in a form
	 *
	 * @param $opts FormOptions
	 * @return Array
	 */",
 "/**
	 * Send the text to be displayed above the options
	 *
	 * @param $opts FormOptions
	 */",
 "/**
	 * Send the text to be displayed after the options, for use in
	 * Recentchangeslinked
	 *
	 * @param $opts FormOptions
	 */",
 "/**
	 * Creates the choose namespace selection
	 *
	 * @todo Uses radio buttons (HASHAR)
	 * @param $opts FormOptions
	 * @return String
	 */",
 "/**
	 * Create a input to filter changes by categories
	 *
	 * @param $opts FormOptions
	 * @return Array
	 */",
 "/**
	 * Filter $rows by categories set in $opts
	 *
	 * @param $rows Array of database rows
	 * @param $opts FormOptions
	 */",
 "/**
	 * Makes change an option link which carries all the other options
	 *
	 * @param $title Title
	 * @param $override Array: options to override
	 * @param $options Array: current options
	 * @param $active Boolean: whether to show the link in bold
	 */",
 "/**
	 * Creates the options panel.
	 *
	 * @param $defaults Array
	 * @param $nondefaults Array
	 */",
 "/**
	 * add javascript specific to the [[Special:RecentChanges]] page
	 */",
 "/**
 * A special page that lists last changes made to the wiki
 *
 * @ingroup SpecialPage
 */",
 "/**
	 * Create a new BacklinkCache
	 * @param Title $title : Title object to create a backlink cache for.
	 */",
 "/**
	 * Serialization handler, diasallows to serialize the database to prevent
	 * failures after this class is deserialized from cache with dead DB
	 * connection.
	 *
	 * @return array
	 */",
 "/**
	 * Clear locally stored data and database object.
	 */",
 "/**
	 * Set the Database object to use
	 *
	 * @param $db DatabaseBase
	 */",
 "/**
	 * Get the slave connection to the database
	 * When non existing, will initialize the connection.
	 * @return Database object
	 */",
 "/**
	 * Get the backlinks for a given table. Cached in process memory only.
	 * @param $table String
	 * @param $startId Integer or false
	 * @param $endId Integer or false
	 * @return TitleArrayFromResult
	 */",
 "/**
	 * Get the field name prefix for a given table
	 * @param $table String
	 */",
 "/**
	 * Get the SQL condition array for selecting backlinks, with a join
	 * on the page table.
	 * @param $table String
	 */",
 "/**
	 * Get the approximate number of backlinks
	 * @param $table String
	 * @return integer
	 */",
 "/**
	 * Partition the backlinks into batches.
	 * Returns an array giving the start and end of each range. The first
	 * batch has a start of false, and the last batch has an end of false.
	 *
	 * @param $table String: the links table name
	 * @param $batchSize Integer
	 * @return Array
	 */",
 "/**
	 * Partition a DB result with backlinks in it into batches
	 * @param $res ResultWrapper database result
	 * @param $batchSize integer
	 * @return array @see 
	 */",
 "/**
 * Class for fetching backlink lists, approximate backlink counts and
 * partitions. This is a shared cache.
 *
 * Instances of this class should typically be fetched with the method
 * $title->getBacklinkCache().
 *
 * Ideally you should only get your backlinks from here when you think
 * there is some advantage in caching them. Otherwise it\'s just a waste
 * of memory.
 *
 * Introduced by r47317
 *
 * @internal documentation reviewed on 18 Mar 2011 by hashar
 *
 * @author Tim Starling
 * @copyright ?? 2009, Tim Starling, Domas Mituzas
 * @copyright ?? 2010, Max Sem
 * @copyright ?? 2011, Antoine Musso
 */",
 "/** Brahui (Br??hu??)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Imdadb
 */",
 "/**
	 * Creates an instance of this class
	 * @param $db DatabaseMysql: database object
	 */",
 "/**
	 * Parse the user\'s query and transform it into an SQL fragment which will
	 * become part of a WHERE clause
	 *
	 * @param $filteredText string
	 * @param $fulltext string
	 *
	 * @return string
	 */",
 "/**
	 * Perform a full text search query and return a result set.
	 *
	 * @param $term String: raw search term
	 * @return MySQLSearchResultSet
	 */",
 "/**
	 * Perform a title-only search query and return a result set.
	 *
	 * @param $term String: raw search term
	 * @return MySQLSearchResultSet
	 */",
 "/**
	 * Add special conditions
	 * @param $query Array
	 * @since 1.18
	 */",
 "/**
	 * Add namespace conditions
	 * @param $query Array
	 * @since 1.18 (changed)
	 */",
 "/**
	 * Add limit options
	 * @param $query Array
	 * @since 1.18
	 */",
 "/**
	 * Construct the SQL query to do the search.
	 * The guts shoulds be constructed in queryMain()
	 * @param $filteredTerm String
	 * @param $fulltext Boolean
	 * @return Array
	 * @since 1.18 (changed)
	 */",
 "/**
	 * Picks which field to index on, depending on what type of query.
	 * @param $fulltext Boolean
	 * @return String
	 */",
 "/**
	 * Get the base part of the search query.
	 *
	 * @param &$query Search query array
	 * @param $filteredTerm String
	 * @param $fulltext Boolean
	 * @since 1.18 (changed)
	 */",
 "/**
	 * @since 1.18 (changed)
	 */",
 "/**
	 * Create or update the search index record for the given page.
	 * Title and text should be pre-processed.
	 *
	 * @param $id Integer
	 * @param $title String
	 * @param $text String
	 */",
 "/**
	 * Update a search index record\'s title only.
	 * Title should be pre-processed.
	 *
	 * @param $id Integer
	 * @param $title String
	 */",
 "/**
	 * Converts some characters for MySQL\'s indexing to grok it correctly,
	 * and pads short words to overcome limitations.
	 */",
 "/**
	 * Armor a case-folded UTF-8 string to get through MySQL\'s
	 * fulltext search without being mucked up by funny charset
	 * settings or anything else of the sort.
	 */",
 "/**
	 * Check MySQL server\'s ft_min_word_len setting so we know
	 * if we need to pad short words...
	 *
	 * @return int
	 */",
 "/**
 * Search engine hook for MySQL 4+
 * @ingroup Search
 */",
 "/**
 * @ingroup Search
 */",
 "/** Romansh (Rumantsch)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Gion
 * @author Gion-andri
 * @author Kaganer
 * @author Kazu89
 * @author Urhixidur
 * @author ???????? ????????????????
 */",
 "/** Put them into a sortable array */",
 "/**
 * A special page that lists special pages
 *
 * @ingroup SpecialPage
 */",
 "/**
	 * @param $context ResourceLoaderContext
	 * @return array
	 */",
 "/**
	 * @return string
	 */",
 "/**
 * Module for user customizations
 */",
 "/** Tuvinian (???????? ??????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Agilight
 * @author Andrijko Z.
 * @author Krice from Tyvanet.com
 * @author Sborsody
 * @author friends at tyvawiki.org
 * @author ???????? ????????????????
 */",
 "/** Norfuk / Pitkern (Norfuk / Pitkern)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Pall Mall (on pih.wikipedia.org)
 */",
 "/** Ladino (Ladino)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author ILVI
 * @author Remember the dot
 * @author Runningfridgesrule
 * @author Taichi
 * @author Universal Life
 * @author ???????? ????????????????
 */",
 "/**
	 * Show a form for filtering namespace and username
	 *
	 * @param $par String
	 * @return String
	 */",
 "/**
	 * Format a row, providing the timestamp, links to the page/history, size, user links, and a comment
	 *
	 * @param $result Result row
	 * @return String
	 */",
 "/**
	 * Should a specific result row provide \"patrollable\" links?
	 *
	 * @param $result Result row
	 * @return Boolean
	 */",
 "/**
	 * Output a subscription feed listing recent edits to this page.
	 *
	 * @param $type String
	 */",
 "/**
 * A special page that list newly created pages
 *
 * @ingroup SpecialPage
 */",
 "/**
 * @ingroup SpecialPage Pager
 */",
 "/**
	 * @param $db DatabaseBase
	 * @return mixed
	 */",
 "/**
 * List for revision table items
 *
 * This will check both the \'revision\' table for live revisions and the
 * \'archive\' table for traditionally-deleted revisions that have an
 * ar_rev_id saved.
 *
 * See RevDel_RevisionItem and RevDel_ArchivedRevisionItem for items.
 */",
 "/**
	 * Get the HTML link to the revision text.
	 * Overridden by RevDel_ArchiveItem.
	 */",
 "/**
	 * Get the HTML link to the diff.
	 * Overridden by RevDel_ArchiveItem
	 */",
 "/**
 * Item class for a live revision table row
 */",
 "/**
	 * @param $db DatabaseBase
	 * @return mixed
	 */",
 "/**
 * List for archive table items, i.e. revisions deleted via action=delete
 */",
 "/**
 * Item class for a archive table row
 */",
 "/**
 * Item class for a archive table row by ar_rev_id -- actually
 * used via RevDel_RevisionList.
 */",
 "/**
	 * @param $db DatabaseBase
	 * @return mixed
	 */",
 "/**
 * List for oldimage table items
 */",
 "/**
	 * Get the link to the file.
	 * Overridden by RevDel_ArchivedFileItem.
	 */",
 "/**
	 * Generate a user tool link cluster if the current user is allowed to view it
	 * @return string HTML
	 */",
 "/**
	 * Wrap and format the file\'s comment block, if the current
	 * user is allowed to view it.
	 *
	 * @return string HTML
	 */",
 "/**
 * Item class for an oldimage table row
 */",
 "/**
	 * @param $db DatabaseBase
	 * @return mixed
	 */",
 "/**
 * List for filearchive table items
 */",
 "/**
 * Item class for a filearchive table row
 */",
 "/**
	 * @param $db DatabaseBase
	 * @return mixed
	 */",
 "/**
 * List for logging table items
 */",
 "/**
 * Item class for a logging table row
 */",
 "/**
	 * Initialise the special page list
	 * This must be called before accessing SpecialPage::$mList
	 *
	 * @return array
	 */",
 "/**
	 * Initialise and return the list of special page aliases.  Returns an object with
	 * properties which can be accessed $obj->pagename - each property is an array of
	 * aliases; the first in the array is the cannonical alias.  All registered special
	 * pages are guaranteed to have a property entry, and for that property array to
	 * contain at least one entry (English fallbacks will be added if necessary).
	 * @return Object
	 */",
 "/**
	 * Given a special page name with a possible subpage, return an array
	 * where the first element is the special page name and the second is the
	 * subpage.
	 *
	 * @param $alias String
	 * @return Array( String, String|null ), or array( null, null ) if the page is invalid
	 */",
 "/**
	 * Add a page to a certain display group for Special:SpecialPages
	 *
	 * @param $page Mixed: SpecialPage or string
	 * @param $group String
	 */",
 "/**
	 * Get the group that the special page belongs in on Special:SpecialPage
	 *
	 * @param $page SpecialPage
	 */",
 "/**
	 * Check if a given name exist as a special page or as a special page alias
	 *
	 * @param $name String: name of a special page
	 * @return Boolean: true if a special page exists with this name
	 */",
 "/**
	 * Find the object with a given name and return it (or NULL)
	 *
	 * @param $name String Special page name, may be localised and/or an alias
	 * @return SpecialPage object or null if the page doesn\'t exist
	 */",
 "/**
	 * Return categorised listable special pages which are available
	 * for the current user, and everyone.
	 *
	 * @param $user User object to check permissions, $wgUser will be used
	 *              if not provided
	 * @return Array( String => Specialpage )
	 */",
 "/**
	 * Return categorised listable special pages for all users
	 *
	 * @return Array( String => Specialpage )
	 */",
 "/**
	 * Return categorised listable special pages which are available
	 * for the current user, but not for everyone
	 *
	 * @return Array( String => Specialpage )
	 */",
 "/**
	 * Execute a special page path.
	 * The path may contain parameters, e.g. Special:Name/Params
	 * Extracts the special page name and call the execute method, passing the parameters
	 *
	 * Returns a title object if the page is redirected, false if there was no such special
	 * page, and true if it was successful.
	 *
	 * @param $title          Title object
	 * @param $context        IContextSource
	 * @param $including      Bool output is being captured for use in {{special:whatever}}
	 *
	 * @return bool
	 */",
 "/**
	 * Just like executePath() but will override global variables and execute
	 * the page in \"inclusion\" mode. Returns true if the execution was
	 * successful or false if there was no such special page, or a title object
	 * if it was a redirect.
	 *
	 * Also saves the current $wgTitle, $wgOut, $wgRequest, $wgUser and $wgLang
	 * variables so that the special page will get the context it\'d expect on a
	 * normal request, and then restores them to their previous values after.
	 *
	 * @param $title Title
	 * @param $context IContextSource
	 *
	 * @return String: HTML fragment
	 */",
 "/**
	 * Get the local name for a specified canonical name
	 *
	 * @param $name String
	 * @param $subpage String|Bool
	 *
	 * @return String
	 */",
 "/**
	 * Get a title for a given alias
	 *
	 * @param $alias String
	 *
	 * @return Title or null if there is no such alias
	 */",
 "/**
 * Factory for handling the special page list and generating SpecialPage objects
 * @ingroup SpecialPage
 * @since 1.17
 */",
 "/** West-Vlams (West-Vlams)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author DasRakel
 * @author Tbc
 * @author ???????? ????????????????
 */",
 "/**
	 * @param $context ResourceLoaderContext
	 * @return array
	 */",
 "/**
 * ResourceLoader definition for MediaWiki:Filepage.css
 */",
 "/**
 * Implements Special:Userlogout
 *
 * @ingroup SpecialPage
 */",
 "/**
*TheUnitTestmustbeeitheraclassthatinheritsfromMediaWikiTestCase
*oraclassthatprovidesapublicstaticsuite()methodwhichreturns
*anPHPUnit_Framework_Testobject
*
*@groupParser
*@groupDatabase
*/",
 "/**
 * This class supports the proprietary vBulletin forum system
 * <http://www.vbulletin.com>, versions 3.5 and up.  It calls no functions or
 * code, only reads from the database.  Example lines to put in
 * LocalSettings.php:
 *
 *   $wgExternalAuthType = \'ExternalUser_vB\';
 *   $wgExternalAuthConf = array(
 *       \'server\' => \'localhost\',
 *       \'username\' => \'forum\',
 *       \'password\' => \'udE,jSqDJ<\"\"p=fI.K9\',
 *       \'dbname\' => \'forum\',
 *       \'tablePrefix\' => \'\',
 *       \'cookieprefix\' => \'bb\'
 *   );
 *
 * @ingroup ExternalUser
 */",
 "/**
	 * Factory function for fatal errors
	 *
	 * @param $message String: message name
	 */",
 "/**
	 * Factory function for good results
	 *
	 * @param $value Mixed
	 */",
 "/**
	 * Change operation result
	 *
	 * @param $ok Boolean: whether the operation completed
	 * @param $value Mixed
	 */",
 "/**
	 * Returns whether the operation completed and didn\'t have any error or
	 * warnings
	 *
	 * @return Boolean
	 */",
 "/**
	 * Returns whether the operation completed
	 *
	 * @return Boolean
	 */",
 "/**
	 * Add a new warning
	 *
	 * @param $message String: message name
	 */",
 "/**
	 * Add an error, do not set fatal flag
	 * This can be used for non-fatal errors
	 *
	 * @param $message String: message name
	 */",
 "/**
	 * Add an error and set OK to false, indicating that the operation
	 * as a whole was fatal
	 *
	 * @param $message String: message name
	 */",
 "/**
	 * Sanitize the callback parameter on wakeup, to avoid arbitrary execution.
	 */",
 "/**
	 * @param $params array
	 * @return array
	 */",
 "/**
	 * @param $item
	 * @return string
	 */",
 "/**
	 * Get the error list as XML
	 * @return string
	 */",
 "/**
	 * Get the error list as a wikitext formatted list
	 *
	 * @param $shortContext String: a short enclosing context message name, to
	 *        be used when there is a single error
	 * @param $longContext String: a long enclosing context message name, for a list
	 * @return String
	 */",
 "/**
	 * Return the wiki text for a single error.
	 * @param $error Mixed With an array & two values keyed by
	 * \'message\' and \'params\', use those keys-value pairs.
	 * Otherwise, if its an array, just use the first value as the
	 * message and the remaining items as the params.
	 *
	 * @return String
	 */",
 "/**
	 * Return an array with the wikitext for each item in the array.
	 * @param $errors Array
	 * @return Array
	 */",
 "/**
	 * Merge another status object into this one
	 *
	 * @param $other Status Other Status object
	 * @param $overwriteValue Boolean: whether to override the \"value\" member
	 */",
 "/**
	 * Get the list of errors (but not warnings)
	 *
	 * @return Array
	 */",
 "/**
	 * Get the list of warnings (but not errors)
	 *
	 * @return Array
	 */",
 "/**
	 * Returns a list of status messages of the given type
	 * @param $type String
	 *
	 * @return Array
	 */",
 "/**
	 * Returns a list of status messages of the given type, with message and
	 * params left untouched, like a sane version of getStatusArray
	 *
	 * @param $type String
	 *
	 * @return Array
	 */",
 "/**
	 * Returns true if the specified message is present as a warning or error
	 *
	 * @param $msg String: message name
	 * @return Boolean
	 */",
 "/**
	 * If the specified source message exists, replace it with the specified
	 * destination message, but keep the same parameters as in the original error.
	 *
	 * Return true if the replacement was done, false otherwise.
	 *
	 * @return bool
	 */",
 "/**
	 * Backward compatibility function for WikiError -> Status migration
	 *
	 * @return String
	 */",
 "/**
 * Generic operation result class
 * Has warning/error list, boolean status and arbitrary value
 *
 * \"Good\" means the operation was completed with no warnings or errors.
 *
 * \"OK\" means the operation was partially or wholly completed.
 *
 * An operation which is not OK should have errors so that the user can be
 * informed as to what went wrong. Calling the fatal() function sets an error
 * message and simultaneously switches off the OK flag.
 */",
 "/** Malagasy (Malagasy)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Alno
 * @author Jagwar
 * @author The Evil IP address
 * @author Urhixidur
 * @author ???????? ????????????????
 */",
 "/**
	 * Constructor.
	 *
	 * @param $parent WebInstaller
	 */",
 "/**
	 * Is this a slow-running page in the installer? If so, WebInstaller will
	 * set_time_limit(0) before calling execute(). Right now this only applies
	 * to Install and Upgrade pages
	 */",
 "/**
	 * Get the starting tags of a fieldset.
	 *
	 * @param $legend String: message name
	 *
	 * @return string
	 */",
 "/**
	 * Get the end tag of a fieldset.
	 *
	 * @return string
	 */",
 "/**
	 * Opens a textarea used to display the progress of a long operation
	 */",
 "/**
	 * Opposite to startLiveBox()
	 */",
 "/**
 * Abstract class to define pages for the web installer.
 *
 * @ingroup Deployment
 * @since 1.17
 */",
 "/**
	 * Get a <select> for selecting languages.
	 *
	 * @param $name
	 * @param $label
	 * @param $selectedCode
	 * @param $helpHtml string
	 * @return string
	 */",
 "/**
	 * Show the \"enter key\" form
	 */",
 "/**
	 * Initiate an upgrade of the existing database
	 * @param $vars Variables from LocalSettings.php and AdminSettings.php
	 * @return Status
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @param $step
	 * @param $status Status
	 */",
 "/**
	 * This is based on part of HistoryBlobStub::getText().
	 * Determine if the text can be retrieved from the row in the normal way.
	 * @param $stub
	 * @param $secondaryRow
	 * @return bool
	 */",
 "/** @dataProvider providerPlural */",
 "/** Tests for MediaWiki languages/classes/Languagecs.php */",
 "/**
	 * Constructor : initialise object
	 * Get data POSTed through the form and assign them to the object
	 * @param $request WebRequest : data posted.
	 */",
 "/**
	 * Initialize instance variables from request and create an Upload handler
	 */",
 "/**
	 * This page can be shown if uploading is enabled.
	 * Handle permission checking elsewhere in order to be able to show
	 * custom error messages.
	 *
	 * @param $user User object
	 * @return Boolean
	 */",
 "/**
	 * Special page entry point
	 */",
 "/**
	 * Show the main upload form
	 *
	 * @param $form Mixed: an HTMLForm instance or HTML string to show
	 */",
 "/**
	 * Get an UploadForm instance with title and text properly set.
	 *
	 * @param $message String: HTML string to add to the form
	 * @param $sessionKey String: session key in case this is a stashed upload
	 * @param $hideIgnoreWarning Boolean: whether to hide \"ignore warning\" check box
	 * @return UploadForm
	 */",
 "/**
	 * Shows the \"view X deleted revivions link\"\"
	 */",
 "/**
	 * Stashes the upload and shows the main upload form.
	 *
	 * Note: only errors that can be handled by changing the name or
	 * description should be redirected here. It should be assumed that the
	 * file itself is sane and has passed UploadBase::verifyFile. This
	 * essentially means that UploadBase::VERIFICATION_ERROR and
	 * UploadBase::EMPTY_FILE should not be passed here.
	 *
	 * @param $message String: HTML message to be passed to mainUploadForm
	 */",
 "/**
	 * Stashes the upload, shows the main form, but adds an \"continue anyway button\".
	 * Also checks whether there are actually warnings to display.
	 *
	 * @param $warnings Array
	 * @return boolean true if warnings were displayed, false if there are no
	 * 	warnings and the should continue processing like there was no warning
	 */",
 "/**
	 * Show the upload form with error message, but do not stash the file.
	 *
	 * @param $message string HTML string
	 */",
 "/**
	 * Do the upload.
	 * Checks are made in SpecialUpload::execute()
	 */",
 "/**
	 * Get the initial image page text based on a comment and optional file status information
	 * @param $comment string
	 * @param $license string
	 * @param $copyStatus string
	 * @param $source string
	 * @return string
	 */",
 "/**
	 * See if we should check the \'watch this page\' checkbox on the form
	 * based on the user\'s preferences and whether we\'re being asked
	 * to create a new file or update an existing one.
	 *
	 * In the case where \'watch edits\' is off but \'watch creations\' is on,
	 * we\'ll leave the box unchecked.
	 *
	 * Note that the page target can be changed *on the form*, so our check
	 * state can get out of sync.
	 * @return Bool|String
	 */",
 "/**
	 * Provides output to the user for a result of UploadBase::verifyUpload
	 *
	 * @param $details Array: result of UploadBase::verifyUpload
	 */",
 "/**
	 * Remove a temporarily kept file stashed by saveTempUploadedFile().
	 *
	 * @return Boolean: success
	 */",
 "/**
	 * Formats a result of UploadBase::getExistsWarning as HTML
	 * This check is static and can be done pre-upload via AJAX
	 *
	 * @param $exists Array: the result of UploadBase::getExistsWarning
	 * @return String: empty string if there is no warning or an HTML fragment
	 */",
 "/**
	 * Get a list of warnings
	 *
	 * @param $filename String: local filename, e.g. \'file exists\', \'non-descriptive filename\'
	 * @return Array: list of warning messages
	 */",
 "/**
	 * Construct a warning and a gallery from an array of duplicate files.
	 * @param $dupes array
	 * @return string
	 */",
 "/**
 * Form for handling uploads and special page.
 *
 * @ingroup SpecialPage
 * @ingroup Upload
 */",
 "/**
	 * Get the descriptor of the fieldset that contains the file source
	 * selection. The section is \'source\'
	 *
	 * @return Array: descriptor array
	 */",
 "/**
	 * Get the messages indicating which extensions are preferred and prohibitted.
	 *
	 * @return String: HTML string containing the message
	 */",
 "/**
	 * Get the descriptor of the fieldset that contains the file description
	 * input. The section is \'description\'
	 *
	 * @return Array: descriptor array
	 */",
 "/**
	 * Get the descriptor of the fieldset that contains the upload options,
	 * such as \"watch this file\". The section is \'options\'
	 *
	 * @return Array: descriptor array
	 */",
 "/**
	 * Add the upload JS and show the form.
	 */",
 "/**
	 * Add upload JS to the OutputPage
	 */",
 "/**
	 * Empty function; submission is handled elsewhere.
	 *
	 * @return bool false
	 */",
 "/**
 * Sub class of HTMLForm that provides the form section of SpecialUpload
 */",
 "/**
	 * @param $cellAttributes array
	 * @return string
	 */",
 "/**
	 * @return int
	 */",
 "/**
 * A form field that contains a radio box in the label
 */",
 "/**
	 * Callback function for each revision, parse with both parsers and compare
	 * @param $rev Revision
	 */",
 "/**
 * @copyright Copyright ?? 2006, Niklas Laxstr??m
 * @license http://www.gnu.org/copyleft/gpl.html GNU General Public License 2.0 or later
 */",
 "/**
	 * Store a file or virtual URL source into a media file name.
	 *
	 * @param $originalName string The title of the image
	 * @param $srcPath string The filepath or virtual URL
	 * @param $flags integer Flags to pass into repo::store().
	 */",
 "/**
	 * Test storing a file using different flags.
	 *
	 * @param $fn string The title of the image
	 * @param $infn string The name of the file (in the filesystem)
	 * @param $otherfn string The name of the different file (in the filesystem)
	 * @param $fromrepo logical \'true\' if we want to copy from a virtual URL out of the Repo.
	 */",
 "/**
 * @group FileRepo
 */",
 "/**
 * ProfilerSimpleUDP class, that sends out messages for \'udpprofile\' daemon
 * (the one from mediawiki/trunk/udpprofile SVN )
 * @ingroup Profiler
 */",
 "/**
	 * @param $resultPageSet ApiPageSet
	 * @return void
	 */",
 "/**
 * Query module to enumerate links from all pages together.
 *
 * @ingroup API
 */",
 "/**
	 * Anything that needs to happen before your tests should go here.
	 */",
 "/**
	 * Anything cleanup you need to do should go here.
	 */",
 "/**
	 * Name tests so that PHPUnit can turn them into sentances when
	 * they run.  While MediaWiki isn\'t strictly an Agile Programming
	 * project, you are encouraged to use the naming described under
	 * \"Agile Documentation\" at
	 * http://www.phpunit.de/manual/3.4/en/other-uses-for-tests.html
	 */",
 "/**
	 * If you want to run a the same test with a variety of data. use a data provider.
	 * see: http://www.phpunit.de/manual/3.4/en/writing-tests-for-phpunit.html
	 */",
 "/**
	 * @dataProvider provideTitles
	 * See http://www.phpunit.de/manual/3.4/en/appendixes.annotations.html#appendixes.annotations.dataProvider
	 */",
 "/**
	 * @depends testSetUpMainPageTitleForNextTest
	 * See http://www.phpunit.de/manual/3.4/en/appendixes.annotations.html#appendixes.annotations.depends
	 */",
 "/**
	 * @expectedException MWException object
	 * See http://www.phpunit.de/manual/3.4/en/appendixes.annotations.html#appendixes.annotations.expectedException
	 */",
 "/** Karachay-Balkar (????????????????-??????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Don Alessandro
 * @author GerardM
 * @author Iltever
 * @author Kaganer
 * @author Reedy
 * @author ????????????????????
 */",
 "/**
	 * Checks if the user is allowed to use the upload-by-URL feature. If the
	 * user is allowed, pass on permissions checking to the parent.
	 *
	 * @param $user User
	 *
	 * @return bool
	 */",
 "/**
	 * Checks if the upload from URL feature is enabled
	 * @return bool
	 */",
 "/**
	 * Entry point for API upload
	 *
	 * @param $name string
	 * @param $url string
	 * @param $async mixed Whether the download should be performed
	 * asynchronous. False for synchronous, async or async-leavemessage for
	 * asynchronous download.
	 */",
 "/**
	 * Entry point for SpecialUpload
	 * @param $request WebRequest object
	 */",
 "/**
	 * @param $request WebRequest object
	 * @return bool
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return Status
	 */",
 "/**
	 * Create a new temporary file in the URL subdirectory of wfTempDir().
	 *
	 * @return string Path to the file
	 */",
 "/**
	 * Callback: save a chunk of the result of a HTTP request to the temporary file
	 *
	 * @param $req mixed
	 * @param $buffer string
	 * @return int number of bytes handled
	 */",
 "/**
	 * Download the file, save it to the temporary file and update the file
	 * size and set $mRemoveTempFile to true.
	 * @return Status
	 */",
 "/**
	 * Wrapper around the parent function in order to defer verifying the
	 * upload until the file really has been fetched.
	 */",
 "/**
	 * Wrapper around the parent function in order to defer checking warnings
	 * until the file really has been fetched.
	 */",
 "/**
	 * Wrapper around the parent function in order to defer checking protection
	 * until we are sure that the file can actually be uploaded
	 */",
 "/**
	 * Wrapper around the parent function in order to defer uploading to the
	 * job queue for asynchronous uploads
	 */",
 "/**
	 * @param  $comment
	 * @param  $pageText
	 * @param  $watch
	 * @param  $user User
	 * @return
	 */",
 "/**
 * Implements uploading from a HTTP resource.
 *
 * @ingroup Upload
 * @author Bryan Tong Minh
 * @author Michael Dale
 */",
 "/**
	 * Cases: genitive, dative, accusative, locative, ablative, comitative + possessive forms
	 *
	 * @param $word string
	 * @param $case string
	 *
	 * @return string
	 */",
 "/**
	 * @param $word string
	 * @param $case string
	 * @return string
	 */",
 "/**
	 * @param $word string
	 * @param $case string
	 * @return string
	 */",
 "/**
	 * @param $word string
	 * @param $allVowels array
	 * @return array
	 */",
 "/**
	 * Avoid grouping whole numbers between 0 to 9999
	 *
	 * @param $_ string
	 *
	 * @return string
	 */",
 "/** Kazakh (??????????????)
 *
 * @ingroup Language
 */",
 "/**
	 * Callback function for each revision, child classes should override
	 * processRevision instead.
	 * @param $rev Revision
	 */",
 "/**
	 * @param $rev Revision
	 */",
 "/**
	 * Create an instance.
	 * @param $value Mixed: the user-supplied value
	 * @param $deps Mixed: a dependency or dependency array. All dependencies
	 *        must be objects implementing CacheDependency.
	 */",
 "/**
	 * Returns true if any of the dependencies have expired
	 *
	 * @return bool
	 */",
 "/**
	 * Initialise dependency values in preparation for storing. This must be
	 * called before serialization.
	 */",
 "/**
	 * Get the user-defined value
	 * @return bool|\Mixed
	 */",
 "/**
	 * Store the wrapper to a cache
	 *
	 * @param $cache BagOStuff
	 * @param $key
	 * @param $expiry
	 */",
 "/**
	 * Attempt to get a value from the cache. If the value is expired or missing,
	 * it will be generated with the callback function (if present), and the newly
	 * calculated value will be stored to the cache in a wrapper.
	 *
	 * @param $cache BagOStuff a cache object such as $wgMemc
	 * @param $key String: the cache key
	 * @param $expiry Integer: the expiry timestamp or interval in seconds
	 * @param $callback Mixed: the callback for generating the value, or false
	 * @param $callbackParams Array: the function parameters for the callback
	 * @param $deps Array: the dependencies to store on a cache miss. Note: these
	 *    are not the dependencies used on a cache hit! Cache hits use the stored
	 *    dependency array.
	 *
	 * @return mixed The value, or null if it was not present in the cache and no
	 *    callback was defined.
	 */",
 "/**
 * This class stores an arbitrary value along with its dependencies.
 * Users should typically only use DependencyWrapper::getValueFromCache(),
 * rather than instantiating one of these objects directly.
 * @ingroup Cache
 */",
 "/**
	 * Returns true if the dependency is expired, false otherwise
	 */",
 "/**
	 * Hook to perform any expensive pre-serialize loading of dependency values.
	 */",
 "/**
 * @ingroup Cache
 */",
 "/**
	 * Create a file dependency
	 *
	 * @param $filename String: the name of the file, preferably fully qualified
	 * @param $timestamp Mixed: the unix last modified timestamp, or false if the
	 *        file does not exist. If omitted, the timestamp will be loaded from
	 *        the file.
	 *
	 * A dependency on a nonexistent file will be triggered when the file is
	 * created. A dependency on an existing file will be triggered when the
	 * file is changed.
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * @return bool
	 */",
 "/**
 * @ingroup Cache
 */",
 "/**
	 * Construct a title dependency
	 * @param $title Title
	 */",
 "/**
	 * Get rid of bulky Title object for sleep
	 *
	 * @return array
	 */",
 "/**
	 * @return Title
	 */",
 "/**
	 * @return bool
	 */",
 "/**
 * @ingroup Cache
 */",
 "/**
	 * Construct a dependency on a list of titles
	 * @param $linkBatch LinkBatch
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * @return LinkBatch
	 */",
 "/**
	 * @return bool
	 */",
 "/**
 * @ingroup Cache
 */",
 "/**
	 * @return bool
	 */",
 "/**
 * @ingroup Cache
 */",
 "/**
	 * @return bool
	 */",
 "/**
 * @ingroup Cache
 */",
 "/** Wu (??????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Hercule
 * @author O
 * @author Reedy
 * @author Wu-chinese.com
 */",
 "/**
	 * debug function : dump the ipblocks table
	 */",
 "/**
	 * per bug 26425
	 */",
 "/**
	 * This is the method previously used to load block info in CheckUser etc
	 * passing an empty value (empty string, null, etc) as the ip parameter bypasses IP lookup checks.
	 *
	 * This stopped working with r84475 and friends: regression being fixed for bug 29116.
	 *
	 * @dataProvider dataBug29116
	 */",
 "/**
	 * CheckUser since being changed to use Block::newFromTarget started failing
	 * because the new function didn\'t accept empty strings like Block::load()
	 * had. Regression bug 29116.
	 *
	 * @dataProvider dataBug29116
	 */",
 "/**
 * @group Database
 * @group Blocking
 */",
 "/**
	 * Perform the delete on archived revisions.

	 * @param $maint Object An object (typically of class Maintenance)
	 * that implements two methods: handleOutput() and
	 * purgeRedundantText().  See Maintenance for a description of
	 * those methods.
	 */",
 "/**
 * Delete archived (deleted from public) revisions from the database
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @ingroup Maintenance
 */",
 "/** Hausa (????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Mladanali
 */",
 "/** @dataProvider providerPluralThreeForms */",
 "/** @dataProvider providerPlural */",
 "/** Tests for MediaWiki languages/classes/LanguageSe.php */",
 "/**
	 * ParserOptions::optionsHash was not giving consistent results when $wgUseDynamicDates was set
	 * @group Database
	 */",
 "/** Southern Sami (??arjelsaemien)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Andrijko Z.
 * @author B??erne
 * @author M.M.S.
 * @author Urhixidur
 */",
 "/**
	 * Get the DB field name associated with the ID list.
	 * This used to populate the log_search table for finding log entries.
	 * Override this function.
	 */",
 "/**
	 * Set the visibility for the revisions in this list. Logging and
	 * transactions are done here.
	 *
	 * @param $params Associative array of parameters. Members are:
	 *     value:       The integer value to set the visibility to
	 *     comment:     The log comment.
	 * @return Status
	 */",
 "/**
	 * Reload the list data from the master DB. This can be done after setVisibility()
	 * to allow $item->getHTML() to show the new data.
	 */",
 "/**
	 * Record a log entry on the action
	 * @param $params Associative array of parameters:
	 *     newBits:         The new value of the *_deleted bitfield
	 *     oldBits:         The old value of the *_deleted bitfield.
	 *     title:           The target title
	 *     ids:             The ID list
	 *     comment:         The log comment
	 *     authorsIds:      The array of the user IDs of the offenders
	 *     authorsIPs:      The array of the IP/anon user offenders
	 */",
 "/**
	 * Get the log action for this list type
	 */",
 "/**
	 * Get log parameter array.
	 * @param $params Associative array of log parameters, same as updateLog()
	 * @return array
	 */",
 "/**
	 * Clear any data structures needed for doPreCommitUpdates() and doPostCommitUpdates()
	 * STUB
	 */",
 "/**
	 * A hook for setVisibility(): do batch updates pre-commit.
	 * STUB
	 * @return Status
	 */",
 "/**
	 * A hook for setVisibility(): do any necessary updates post-commit.
	 * STUB
	 * @return Status
	 */",
 "/**
	 * Get the integer value of the flag used for suppression
	 */",
 "/**
 * Abstract base class for a list of deletable items. The list class
 * needs to be able to make a query from a set of identifiers to pull
 * relevant rows, to return RevDel_Item subclasses wrapping them, and
 * to wrap bulk update operations.
 */",
 "/**
	 * Returns true if the item is \"current\", and the operation to set the given
	 * bits can\'t be executed for that reason
	 * STUB
	 */",
 "/**
	 * Get the current deletion bitfield value
	 */",
 "/**
	 * Set the visibility of the item. This should do any necessary DB queries.
	 *
	 * The DB update query should have a condition which forces it to only update
	 * if the value in the DB matches the value fetched earlier with the SELECT.
	 * If the update fails because it did not match, the function should return
	 * false. This prevents concurrency problems.
	 *
	 * @return boolean success
	 */",
 "/**
 * Abstract base class for deletable items
 */",
 "/** Kurdish (Kurd?? / ??????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 */",
 "/** Khowar (??????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Rachitrali
 */",
 "/**
	 * @param $name string
	 * @return mixed ExternalUser, or false on failure
	 */",
 "/**
	 * @param $id string
	 * @return mixed ExternalUser, or false on failure
	 */",
 "/**
	 * @return mixed ExternalUser, or false on failure
	 */",
 "/**
	 * Creates the object corresponding to the given User object, assuming the
	 * user exists on the wiki and is linked to an external account.  If either
	 * of these is false, this will return false.
	 *
	 * This is a wrapper around newFromId().
	 *
	 * @param $user User
	 * @return ExternalUser|false
	 */",
 "/**
	 * Given a name, which is a string exactly as input by the user in the
	 * login form but with whitespace stripped, initialize this object to be
	 * the corresponding ExternalUser.  Return true if successful, otherwise
	 * false.
	 *
	 * @param $name string
	 * @return bool Success?
	 */",
 "/**
	 * Given an id, which was at some previous point in history returned by
	 * getId(), initialize this object to be the corresponding ExternalUser.
	 * Return true if successful, false otherwise.
	 *
	 * @param $id string
	 * @return bool Success?
	 */",
 "/**
	 * Try to magically initialize the user from cookies or similar information
	 * so he or she can be logged in on just viewing the wiki.  If this is
	 * impossible to do, just return false.
	 *
	 * TODO: Actually use this.
	 *
	 * @return bool Success?
	 */",
 "/**
	 * This must return some identifier that stably, uniquely identifies the
	 * user.  In a typical web application, this could be an integer
	 * representing the \"user id\".  In other cases, it might be a string.  In
	 * any event, the return value should be a string between 1 and 255
	 * characters in length; must uniquely identify the user in the foreign
	 * database; and, if at all possible, should be permanent.
	 *
	 * This will only ever be used to reconstruct this ExternalUser object via
	 * newFromId().  The resulting object in that case should correspond to the
	 * same user, even if details have changed in the interim (e.g., renames or
	 * preference changes).
	 *
	 * @return string
	 */",
 "/**
	 * This must return the name that the user would normally use for login to
	 * the external database.  It is subject to no particular restrictions
	 * beyond rudimentary sanity, and in particular may be invalid as a
	 * MediaWiki username.  It\'s used to auto-generate an account name that
	 * *is* valid for MediaWiki, either with or without user input, but
	 * basically is only a hint.
	 *
	 * @return string
	 */",
 "/**
	 * Is the given password valid for the external user?  The password is
	 * provided in plaintext.
	 *
	 * @param $password string
	 * @return bool
	 */",
 "/**
	 * Retrieve the value corresponding to the given preference key.  The most
	 * important values are:
	 *
	 * - emailaddress
	 * - language
	 *
	 * The value must meet MediaWiki\'s requirements for values of this type,
	 * and will be checked for validity before use.  If the preference makes no
	 * sense for the backend, or it makes sense but is unset for this user, or
	 * is unrecognized, return null.
	 *
	 * $pref will never equal \'password\', since passwords are usually hashed
	 * and cannot be directly retrieved.  authenticate() is used for this
	 * instead.
	 *
	 * TODO: Currently this is only called for \'emailaddress\'; generalize!  Add
	 * some config option to decide which values are grabbed on user
	 * initialization.
	 *
	 * @param $pref string
	 * @return mixed
	 */",
 "/**
	 * Return an array of identifiers for all the foreign groups that this user
	 * has.  The identifiers are opaque objects that only need to be
	 * specifiable by the administrator in LocalSettings.php when configuring
	 * $wgAutopromote.  They may be, for instance, strings or integers.
	 *
	 * TODO: Support this in $wgAutopromote.
	 *
	 * @return array
	 */",
 "/**
	 * Given a preference key (e.g., \'emailaddress\'), provide an HTML message
	 * telling the user how to change it in the external database.  The
	 * administrator has specified that this preference cannot be changed on
	 * the wiki, and may only be changed in the foreign database.  If no
	 * message is available, such as for an unrecognized preference, return
	 * false.
	 *
	 * TODO: Use this somewhere.
	 *
	 * @param $pref string
	 * @return mixed String or false
	 */",
 "/**
	 * Set the given preference key to the given value.  Two important
	 * preference keys that you might want to implement are \'password\' and
	 * \'emailaddress\'.  If the set fails, such as because the preference is
	 * unrecognized or because the external database can\'t be changed right
	 * now, return false.  If it succeeds, return true.
	 *
	 * If applicable, you should make sure to validate the new value against
	 * any constraints the external database may have, since MediaWiki may have
	 * more limited constraints (e.g., on password strength).
	 *
	 * TODO: Untested.
	 *
	 * @param $key string
	 * @param $value string
	 * @return bool Success?
	 */",
 "/**
	 * Create a link for future reference between this object and the provided
	 * user_id.  If the user was already linked, the old link will be
	 * overwritten.
	 *
	 * This is part of the core code and is not overridable by specific
	 * plugins.  It\'s in this class only for convenience.
	 *
	 * @param $id int user_id
	 */",
 "/**
	 * Check whether this external user id is already linked with
	 * a local user.
	 * @return Mixed User if the account is linked, Null otherwise.
	 */",
 "/**
 * A class intended to supplement, and perhaps eventually replace, AuthPlugin.
 * See: http://www.mediawiki.org/wiki/ExternalAuth
 *
 * The class represents a user whose data is in a foreign database.  The
 * database may have entirely different conventions from MediaWiki, but it\'s
 * assumed to at least support the concept of a user id (possibly not an
 * integer), a user name (possibly not meeting MediaWiki\'s username
 * requirements), and a password.
 *
 * @ingroup ExternalUser
 */",
 "/**
 * A repository for files accessible via the local filesystem.
 * Does not support database access or registration.
 * 
 * This is a mostly a legacy class. New uses should not be added.
 * 
 * @ingroup FileRepo
 * @deprecated since 1.19
 */",
 "/** Somali (Soomaaliga)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Maax
 * @author Mimursal
 * @author Yariiska
 */",
 "/**
	 * @param $parser Parser_LinkHooks
	 * @return bool
	 */",
 "/**
	 * @param $parser Parser
	 * @param $holders LinkHolderArray
	 * @param $markers LinkMarkerReplacer
	 * @param Title $title
	 * @param $titleText
	 * @param null $displayText
	 * @param bool $leadingColon
	 * @return bool
	 */",
 "/**
	 * @param  $parser Parser
	 * @param  $holders LinkHolderArray
	 * @param  $markers LinkMarkerReplacer
	 * @param Title $title
	 * @param  $titleText
	 * @param null $sortText
	 * @param bool $leadingColon
	 * @return bool|string
	 */",
 "/**
 * Various core link functions, registered in Parser::firstCallInit()
 * @ingroup Parser
 */",
 "/**
	 * Constructor
	 *
	 * @since 1.19 $context is a second, required parameter
	 * @param $title Title
	 * @param $context IContextSource
	 * @param $from String
	 * @param $until String
	 * @param $query Array
	 */",
 "/**
	 * Format the category data list.
	 *
	 * @return string HTML output
	 */",
 "/**
	 * Add a subcategory to the internal lists, using a Category object
	 * @param $cat Category
	 * @param $sortkey
	 * @param $pageLength
	 */",
 "/**
	 * Add a subcategory to the internal lists, using a title object
	 * @deprecated since 1.17 kept for compatibility, please use addSubcategoryObject instead
	 */",
 "/**
	* Get the character to be used for sorting subcategories.
	* If there\'s a link from Category:A to Category:B, the sortkey of the resulting
	* entry in the categorylinks table is Category:A, not A, which it SHOULD be.
	* Workaround: If sortkey == \"Category:\".$title, than use $title for sorting,
	* else use sortkey...
	*
	* @param Title $title
	* @param string $sortkey The human-readable sortkey (before transforming to icu or whatever).
	*/",
 "/**
	 * Add a page in the image namespace
	 * @param $title Title
	 * @param $sortkey
	 * @param $pageLength
	 * @param $isRedirect bool
	 */",
 "/**
	 * Add a miscellaneous page
	 * @param $title
	 * @param $sortkey
	 * @param $pageLength
	 * @param $isRedirect bool
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * Get the paging links for a section (subcats/pages/files), to go at the top and bottom
	 * of the output.
	 *
	 * @param $type String: \'page\', \'subcat\', or \'file\'
	 * @return String: HTML output, possibly empty if there are no other pages
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * Format a list of articles chunked by letter, either as a
	 * bullet list or a columnar format, depending on the length.
	 *
	 * @param $articles Array
	 * @param $articles_start_char Array
	 * @param $cutoff Int
	 * @return String
	 * @private
	 */",
 "/**
	 * Format a list of articles chunked by letter in a three-column
	 * list, ordered vertically.
	 *
	 * TODO: Take the headers into account when creating columns, so they\'re
	 * more visually equal.
	 *
	 * More distant TODO: Scrap this and use CSS columns, whenever IE finally
	 * supports those.
	 *
	 * @param $articles Array
	 * @param $articles_start_char Array
	 * @return String
	 * @private
	 */",
 "/**
	 * Format a list of articles chunked by letter in a bullet list.
	 * @param $articles Array
	 * @param $articles_start_char Array
	 * @return String
	 * @private
	 */",
 "/**
	 * Create paging links, as a helper method to getSectionPagingLinks().
	 *
	 * @param $first String The \'until\' parameter for the generated URL
	 * @param $last String The \'from\' parameter for the genererated URL
	 * @param $type String A prefix for parameters, \'page\' or \'subcat\' or
	 *     \'file\'
	 * @return String HTML
	 */",
 "/**
	 * Takes a title, and adds the fragment identifier that
	 * corresponds to the correct segment of the category.
	 *
	 * @param Title $title: The title (usually $this->title)
	 * @param String $section: Which section
	 * @return Title
	 */",
 "/**
	 * What to do if the category table conflicts with the number of results
	 * returned?  This function says what. Each type is considered independently
	 * of the other types.
	 *
	 * Note for grepping: uses the messages category-article-count,
	 * category-article-count-limited, category-subcat-count,
	 * category-subcat-count-limited, category-file-count,
	 * category-file-count-limited.
	 *
	 * @param $rescnt Int: The number of items returned by our database query.
	 * @param $dbcnt Int: The number of items according to the category table.
	 * @param $type String: \'subcat\', \'article\', or \'file\'
	 * @return String: A message giving the number of items, to output to HTML.
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * @param $gadgets array
	 */",
 "/**
	 * @param $gadget Gadget
	 *
	 * @return bool
	 */",
 "/**
	 * @param $g Gadget
	 * @return array
	 */",
 "/**
 * Created on 15 April 2011
 * API for Gadgets extension
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 * http://www.gnu.org/copyleft/gpl.html
 */",
 "/**
 * Bul qazaq??a tildeswini?? jersindirw fa??l??
 *
 * ??ETK?? PA??DALANW??ILAR: BUL FA??LDI T??KELE?? ????DEME????Z!
 *
 * Bul fa??lda???? ??zgerister ba??darlamal??q jasaqtama kezekti ja??art??l??anda jo??alt??lad??.
 * W??k??de ??z baptal??mdar??????zd?? iste?? alas??z.
 * ??kim??i bop kirgeni??izde, [[Arna????:Barl??q xabarlar]] degen betke ??ti??iz de
 * m??nda tizimdelingen Med??aW??k??:* s??pat?? bar betterdi ????de??iz.
 */",
 "/** Iloko (Ilokano)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Kaganer
 * @author Lam-ang
 * @author Saluyot
 * @author Urhixidur
 * @author ???????? ????????????????
 */",
 "/**
 * A tool for running hook functions.
 *
 * Copyright 2004, 2005 Evan Prodromou <evan@wikitravel.org>.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA
 *
 * @author Evan Prodromou <evan@wikitravel.org>
 * @see hooks.txt
 * @file
 */",
 "/**
	 * Attach an event handler to a given hook
	 *
	 * @param $name Mixed: name of hook
	 * @param $callback Mixed: callback function to attach
	 * @return void
	 */",
 "/**
	 * Returns true if a hook has a function registered to it.
	 *
	 * @param $name Mixed: name of hook
	 * @return Boolean: true if a hook has a function registered to it
	 */",
 "/**
	 * Returns an array of all the event functions attached to a hook
	 *
	 * @param $name Mixed: name of the hook
	 * @return array
	 */",
 "/**
			 * Call the hook. The documentation of call_user_func_array clearly
			 * states that FALSE is returned on failure. However this is not
			 * case always. In some version of PHP if the function signature
			 * does not match the call signature, PHP will issue an warning:
			 * Param y in x expected to be a reference, value given.
			 *
			 * In that case the call will also return null. The following code
			 * catches that warning and provides better error message. The
			 * function documentation also says that:
			 *     In other words, it does not depend on the function signature
			 *     whether the parameter is passed by a value or by a reference.
			 * There is also PHP bug http://bugs.php.net/bug.php?id=47554 which
			 * is unsurprisingly marked as bogus. In short handling of failures
			 * with call_user_func_array is a failure, the documentation for that
			 * function is wrong and misleading and PHP developers don\'t see any
			 * problem here.
			 */",
 "/**
	 * Call hook functions defined in Hooks::register
	 *
	 * Because programmers assign to $wgHooks, we need to be very
	 * careful about its contents. So, there\'s a lot more error-checking
	 * in here than would normally be necessary.
	 *
	 * @param $event String: event name
	 * @param $args Array: parameters passed to hook functions
	 * @return Boolean True if no handler aborted the hook
	 */",
 "/**
	 * This REALLY should be protected... but it\'s public for compatibility
	 *
	 * @param $errno Unused
	 * @param $errstr String: error message
	 * @return Boolean: false
	 */",
 "/**
 * Hooks class.
 *
 * Used to supersede $wgHooks, because globals are EVIL.
 */",
 "/**
	 * Constructor (currently empty).
	 */",
 "/**
	 * Initializes the instance. Do this prior to calling run().
	 * @param $article_ids Array of article IDs
	 * @param $categories FIXME
	 * @param $mode String: FIXME, default \'AND\'.
	 * @todo FIXME: $categories/$mode
	 */",
 "/**
	 * Iterates through the parent tree starting with the seed values,
	 * then checks the articles if they match the conditions
	 * @return array of page_ids (those given to seed() that match the conditions)
	 */",
 "/**
	 * This functions recurses through the parent representation, trying to match the conditions
	 * @param $id int The article/category to check
	 * @param $conds array The array of categories to match
	 * @param $path array used to check for recursion loops
	 * @return bool Does this match the conditions?
	 */",
 "/**
	 * Scans a \"parent layer\" of the articles/categories in $this->next
	 */",
 "/**
 * The \"Categoryfinder\" class takes a list of articles, creates an internal
 * representation of all their parent categories (as well as parents of
 * parents etc.). From this representation, it determines which of these
 * articles are in one or all of a given subset of categories.
 *
 * Example use :
 * <code>
 * 	# Determines whether the article with the page_id 12345 is in both
 * 	# \"Category 1\" and \"Category 2\" or their subcategories, respectively
 *
 * 	$cf = new Categoryfinder;
 * 	$cf->seed(
 * 		array( 12345 ),
 * 		array( \'Category 1\', \'Category 2\' ),
 * 		\'AND\'
 * 	);
 * 	$a = $cf->run();
 * 	print implode( \',\' , $a );
 * </code>
 *
 */",
 "/**
	 * autoload - take a class name and attempt to load it
	 *
	 * @param $className String: name of class we\'re looking for.
	 * @return bool Returning false is important on failure as
	 * it allows Zend to try and look in other registered autoloaders
	 * as well.
	 */",
 "/**
	 * Force a class to be run through the autoloader, helpful for things like
	 * Sanitizer that have define()s outside of their class definition. Of course
	 * this wouldn\'t be necessary if everything in MediaWiki was class-based. Sigh.
	 *
	 * @return Boolean Return the results of class_exists() so we know if we were successful
	 */",
 "/** Nyanja (Chi-Chewa)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Lycaon (on ny.wikipedia.org)
 */",
 "/** Traditional Gan script (?????????(??????)???)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Kaganer
 * @author Mark85296341
 * @author Reedy
 * @author Symane
 * @author Urhixidur
 * @author Vipuser
 */",
 "/**
	 * @return bool
	 */",
 "/**
 * Utility class.
 * @ingroup Database
 */",
 "/**
 * Utility class
 * @ingroup Database
 *
 * This allows us to distinguish a blob from a normal string and an array of strings
 */",
 "/**
	 * Field name
	 * @return string
	 */",
 "/**
	 * Name of table this field belongs to
	 * @return string
	 */",
 "/**
	 * Database type
	 * @return string
	 */",
 "/**
	 * Whether this field can store NULL values
	 * @return bool
	 */",
 "/**
 * Base for all database-specific classes representing information about database fields
 * @ingroup Database
 */",
 "/**
	 * Create a new result object from a result resource and a Database object
	 *
	 * @param DatabaseBase $database
	 * @param resource $result
	 */",
 "/**
	 * Get the number of rows in a result object
	 *
	 * @return integer
	 */",
 "/**
	 * Fetch the next row from the given result object, in object form.
	 * Fields can be retrieved with $row->fieldname, with fields acting like
	 * member variables.
	 *
	 * @return object
	 * @throws DBUnexpectedError Thrown if the database returns an error
	 */",
 "/**
	 * Fetch the next row from the given result object, in associative array
	 * form.  Fields are retrieved with $row[\'fieldname\'].
	 *
	 * @return Array
	 * @throws DBUnexpectedError Thrown if the database returns an error
	 */",
 "/**
	 * Free a result object
	 */",
 "/**
	 * Change the position of the cursor in a result object.
	 * See mysql_data_seek()
	 *
	 * @param $row integer
	 */",
 "/**
	 * @return int
	 */",
 "/**
	 * @return int
	 */",
 "/**
	 * @return int
	 */",
 "/**
	 * @return bool
	 */",
 "/**
 * Result wrapper for grabbing data queried by someone else
 * @ingroup Database
 */",
 "/**
	 * @return int
	 */",
 "/**
 * Overloads the relevant methods of the real ResultsWrapper so it
 * doesn\'t go anywhere near an actual database.
 */",
 "/**
	 * Store a string into a LikeMatch marker object.
	 *
	 * @param String $s
	 */",
 "/**
	 * Return the original stored string.
	 *
	 * @return String
	 */",
 "/**
 * Used by DatabaseBase::buildLike() to represent characters that have special meaning in SQL LIKE clauses
 * and thus need no escaping. Don\'t instantiate it manually, use DatabaseBase::anyChar() and anyString() instead.
 */",
 "/**
 * An object representing a master or slave position in a replicated setup.
 */",
 "/** Faroese (F??royskt)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Diupwijk
 * @author EileenSanda
 * @author Krun
 * @author Quackor
 * @author S.??rvarr.S
 * @author Spacebirdy
 * @author Urhixidur
 * @author ???????? ????????????????
 */",
 "/**
 * A special page page that list most used images
 *
 * @ingroup SpecialPage
 */",
 "/** Extremaduran (Estreme??u)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Better
 * @author Kaganer
 * @author The Evil IP address
 * @author Urhixidur
 * @author Xuacu
 */",
 "/** Lezghian (??????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Amikeco
 * @author Andrijko Z.
 * @author Migraghvi
 * @author Namik
 * @author Reedy
 */",
 "/** Newari (??????????????? ????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Eukesh
 * @author ????????????
 */",
 "/**
	 * Record a log event for a change being patrolled
	 *
	 * @param $rc Mixed: change identifier or RecentChange object
	 * @param $auto Boolean: was this patrol event automatic?
	 *
	 * @return bool
	 */",
 "/**
	 * Prepare log parameters for a patrolled change
	 *
	 * @param $change RecentChange to represent
	 * @param $auto Boolean: whether the patrol event was automatic
	 * @return Array
	 */",
 "/**
 * Class containing static functions for working with
 * logs of patrol events
 *
 * @author Rob Church <robchur@gmail.com>
 * @author Niklas Laxstr??m
 */",
 "/**
	 * Constructor
	 *
	 * @param $host
	 * @param $port
	 *
	 * @return ZhClient
	 */",
 "/**
	 * Check if connection to zhdaemon is successful
	 *
	 * @return bool
	 */",
 "/**
	 * Establish conncetion
	 *
	 * @access private
	 *
	 * @return bool
	 */",
 "/**
	 * Query the daemon and return the result
	 *
	 * @access private
	 *
	 * @return string
	 */",
 "/**
	 * Convert the input to a different language variant
	 *
	 * @param $text String: input text
	 * @param $tolang String: language variant
	 * @return string the converted text
	 */",
 "/**
	 * Convert the input to all possible variants
	 *
	 * @param $text String: input text
	 * @return array langcode => converted_string
	 */",
 "/**
	 * Perform word segmentation
	 *
	 * @param $text String: input text
	 * @return string segmented text
	 */",
 "/**
	 * Close the connection
	 */",
 "/**
 * Client for querying zhdaemon
 */",
 "/**
	 * @param $count int
	 * @param $forms array
	 *
	 * @return string
	 */",
 "/**
	 * The Belarusian language uses apostrophe sign,
	 * but the characters used for this could be both U+0027 and U+2019.
	 * This function unifies apostrophe sign in search index values
	 * to enable seach using both apostrophe signs.
	 *
	 * @param $string string
	 *
	 * @return string
	 */",
 "/**
	 * Four-digit number should be without group commas (spaces)
	 * So \"1 234 567\", \"12 345\" but \"1234\"
	 *
	 * @param $_ string
	 *
	 * @return string
	 */",
 "/** Belarusian in Tara??kievica orthography (???????????????????? ??????????????????????)
  *
  * @ingroup Language
  *
  * @author ??var Arnfj??r?? Bjarmason <avarab@gmail.com>
  * @see http://be-x-old.wikipedia.org/wiki/Project_talk:LanguageBe_tarask.php
  * @license http://www.gnu.org/copyleft/gpl.html GNU General Public License
  * @license http://www.gnu.org/copyleft/fdl.html GNU Free Documentation License
  */",
 "/** Figure out the base directory for MediaWiki location */",
 "/** doxygen binary script */",
 "/** doxygen configuration template for mediawiki */",
 "/** svnstat command, used to get the version of each file */",
 "/** where Phpdoc should output documentation */",
 "/** MediaWiki subpaths */",
 "/** Ignored paths relative to $mwPath */",
 "/** Variable to get user input */",
 "/**
 * Read a line from the shell
 * @param $prompt String
 * @return string
 */",
 "/**
 * Copied from SpecialVersion::getSvnRevision()
 * @param $dir String
 * @return Mixed: string or false
 */",
 "/**
 * Generate a configuration file given user parameters and return the temporary filename.
 * @param $doxygenTemplate String: full path for the template.
 * @param $outputDirectory String: directory where the stuff will be output.
 * @param $stripFromPath String: path that should be stripped out (usually mediawiki base path).
 * @param $currentVersion String: Version number of the software
 * @param $svnstat String: path to the svnstat file
 * @param $input String: Path to analyze.
 * @param $exclude String: Additionals path regex to exclude
 * @param $exclude_patterns String: Additionals path regex to exclude
 *                 (LocalSettings.php, AdminSettings.php, .svn and .git directories are always excluded)
 * @return string
 */",
 "/**
	 * Perform an operation equivalent to
	 *
	 *     preg_replace( \"!$startDelim(.*?)$endDelim!\", $replace, $subject );
	 *
	 * except that it\'s worst-case O(N) instead of O(N^2)
	 *
	 * Compared to delimiterReplace(), this implementation is fast but memory-
	 * hungry and inflexible. The memory requirements are such that I don\'t
	 * recommend using it on anything but guaranteed small chunks of text.
	 *
	 * @param $startDelim
	 * @param $endDelim
	 * @param $replace
	 * @param $subject
	 *
	 * @return string
	 */",
 "/**
	 * Perform an operation equivalent to
	 *
	 *   preg_replace_callback( \"!$startDelim(.*)$endDelim!s$flags\", $callback, $subject )
	 *
	 * This implementation is slower than hungryDelimiterReplace but uses far less
	 * memory. The delimiters are literal strings, not regular expressions.
	 *
	 * If the start delimiter ends with an initial substring of the end delimiter,
	 * e.g. in the case of C-style comments, the behaviour differs from the model
	 * regex. In this implementation, the end must share no characters with the
	 * start, so e.g. /*\/ is not considered to be both the start and end of a
	 * comment. /*\/xy/*\/ is considered to be a single comment with contents /xy/.
	 *
	 * @param $startDelim String: start delimiter
	 * @param $endDelim String: end delimiter
	 * @param $callback Callback: function to call on each match
	 * @param $subject String
	 * @param $flags String: regular expression flags
	 * @return string
	 */",
 "/**
	 * Perform an operation equivalent to
	 *
	 *   preg_replace( \"!$startDelim(.*)$endDelim!$flags\", $replace, $subject )
	 *
	 * @param $startDelim String: start delimiter regular expression
	 * @param $endDelim String: end delimiter regular expression
	 * @param $replace String: replacement string. May contain $1, which will be
	 *                 replaced by the text between the delimiters
	 * @param $subject String to search
	 * @param $flags String: regular expression flags
	 * @return String: The string with the matches replaced
	 */",
 "/**
	 * More or less \"markup-safe\" explode()
	 * Ignores any instances of the separator inside <...>
	 * @param $separator String
	 * @param $text String
	 * @return array
	 */",
 "/**
	*Escapeastringtomakeitsuitableforinclusioninapreg_replace()
	*replacementparameter.
	*
	*@param$stringString
	*@returnString
	*/",
 "/**
	*Workalikeforexplode()withlimitedmemoryusage.
	*ReturnsanIterator
	*@param$separator
	*@param$subject
	*@return\ArrayIterator|\ExplodeIterator
	*/",
 "/**
*Acollectionofstaticmethodstoplaywithstrings.
*/",
 "/**
*Baseclassfor\"replacers\", objects used in preg_replace_callback() and
 * StringUtils::delimiterReplaceCallback()
 */",
 "/**
 * Class to replace regex matches with a string similar to that used in preg_replace()
 */",
 "/**
 * Class to perform secondary replacement within each replacement string
 */",
 "/**
 * Class to perform replacement based on a simple hashtable lookup
 */",
 "/**
	 * Create an object with the specified replacement array
	 * The array should have the same form as the replacement array for strtr()
	 */",
 "/**
	 * Set the whole replacement array at once
	 */",
 "/**
	 * Set an element of the replacement array
	 */",
 "/**
 * Replacement array for FSS with fallback to strtr()
 * Supports lazy initialisation of FSS resource
 */",
 "/** 
	 * Construct a DelimIterator
	 */",
 "/**
 * An iterator which works exactly like:
 * 
 * foreach ( explode( $delim, $s ) as $element ) {
 *    ...
 * }
 *
 * Except it doesn\'t use 193 byte per element
 */",
 "/** Cajun French (Fran??ais cadien)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Ebe123
 * @author JeanVoisin
 * @author Peter17
 * @author PieRRoMaN
 * @author RoyAlcatraz
 * @author Urhixidur
 * @author Zetud
 */",
 "/**
	 * Get the version of HipHop used to compile, or false if MediaWiki was not
	 * compiled. This works by having our build script insert a special function
	 * into the compiled code.
	 */",
 "/**
	 * Returns true if we are running under HipHop, whether in compiled or
	 * interpreted mode.
	 *
	 * @return bool
	 */",
 "/**
	 * Get a fully-qualified path for a source file relative to $IP. Including
	 * such a path under HipHop will force the file to be interpreted. This is
	 * useful for configuration files.
	 *
	 * @param $file string
	 *
	 * @return string
	 */",
 "/**
	 * If we are running code compiled by HipHop, this will pass through the
	 * input path, assumed to be relative to $IP. If the code is interpreted,
	 * it will converted to a fully qualified path. It is necessary to use a
	 * path which is relative to $IP in order to make HipHop use its compiled
	 * code.
	 *
	 * @param $file string
	 *
	 * @return string
	 */",
 "/**
	 * The equivalent of MWInit::interpretedPath() but for files relative to the
	 * extensions directory.
	 *
	 * @param $file string
	 * @return string
	 */",
 "/**
	 * The equivalent of MWInit::compiledPath() but for files relative to the
	 * extensions directory. Any files referenced in this way must be registered
	 * for compilation by including them in $wgCompiledFiles.
	 * @param $file string
	 * @return string
	 */",
 "/**
	 * Register an extension setup file and return its path for compiled
	 * inclusion. Use this function in LocalSettings.php to add extensions
	 * to the build. For example:
	 *
	 *    require( MWInit::extSetupPath( \'ParserFunctions/ParserFunctions.php\' ) );
	 *
	 * @param $extRel string The path relative to the extensions directory, as defined by
	 *   $wgExtensionsDirectory.
	 *
	 * @return string
	 */",
 "/**
	 * @return bool|string
	 */",
 "/**
	 * Determine whether a class exists, using a method which works under HipHop.
	 *
	 * Note that it\'s not possible to implement this with any variant of
	 * class_exists(), because class_exists() returns false for classes which
	 * are compiled in.
	 *
	 * Calling class_exists() on a literal string causes the class to be made
	 * \"volatile\", which means (as of March 2011) that the class is broken and
	 * can\'t be used at all. So don\'t do that. See
	 * https://github.com/facebook/hiphop-php/issues/314
	 *
	 * @param $class string
	 *
	 * @return bool
	 */",
 "/**
	 * Determine wether a method exists within a class, using a method which works
	 * under HipHop.
	 *
	 * Note that under HipHop when method_exists is given a string for it\'s class
	 * such as to test for a static method has the same issues as class_exists does.
	 *
	 * @param $class string
	 * @param $method string
	 *
	 * @return bool
	 */",
 "/**
	 * Determine whether a function exists, using a method which works under
	 * HipHop.
	 *
	 * @param $function string
	 *
	 * @return bool
	 */",
 "/**
	 * Call a static method of a class with variable arguments without causing
	 * it to become volatile.
	 * @param $className string
	 * @param $methodName string
	 * @param $args array
	 *
	 */",
 "/**
 * Some functions that are useful during startup.
 */",
 "/**
	 * Get a value from the WinCache object cache
	 *
	 * @param $key String: cache key
	 * @return mixed
	 */",
 "/**
	 * Store a value in the WinCache object cache
	 *
	 * @param $key String: cache key
	 * @param $value Mixed: object to store
	 * @param $expire Int: expiration time
	 * @return bool
	 */",
 "/**
	 * Remove a value from the WinCache object cache
	 *
	 * @param $key String: cache key
	 * @param $time Int: not used in this implementation
	 * @return bool
	 */",
 "/**
 * Wrapper for WinCache object caching functions; identical interface
 * to the APC wrapper
 *
 * @ingroup Cache
 */",
 "/** Aymara (Aymar aru)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Alhen
 * @author Diego Grez
 * @author Erebedhel
 * @author Kanon6917
 */",
 "/** Hakka (Hak-k??-fa)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Hakka
 * @author Urhixidur
 */",
 "/**
	 * @param $obj Title|Revision
	 * @return bool
	 */",
 "/**
	 * @param $rev Revision
	 * @return mixed
	 */",
 "/**
	 * @param $revision Revision
	 * @return bool
	 */",
 "/**
 * @ingroup Maintenance
 */",
 "/** Tarifit (Tarifit)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Agzennay
 * @author Aryaz
 * @author Dalinanir
 * @author Jose77
 * @author Urhixidur
 */",
 "/**
 * Selenium server manager
 *
 * @file
 * @ingroup Testing
 * Copyright (C) 2010 Nadeesha Weerasinghe <nadeesha@calcey.com>
 * http://www.calcey.com/ 
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @addtogroup Testing
 *
 */",
 "/** @dataProvider providerPlural */",
 "/** Tests for MediaWiki languages/LanguageHy.php */",
 "/**
 * This is a test of the interface, mainly. It stores things in an associative
 * array, which is not going to persist between program runs.
 *
 * @ingroup Cache
 */",
 "/**
	 * Use singular form for zero
	 *
	 * @param $count int
	 * @param $forms array
	 *
	 * @return string
	 */",
 "/**
 * Malagasy (Malagasy)
 *
 * @ingroup Language
 */",
 "/** Icelandic (??slenska)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Cessator
 * @author Fri??rik Bragi D??rfj??r??
 * @author Gott wisst
 * @author J??na ????runn
 * @author Kaganer
 * @author Krun
 * @author Max??
 * @author S.??rvarr.S
 * @author Sn??var
 * @author Spacebirdy
 * @author Steinninn
 * @author Urhixidur
 * @author ??var Arnfj??r?? Bjarmason
 * @author ???????? ????????????????
 */",
 "/**
	 * Constructor.
	 *
	 * @see newFromId()
	 * @see newFromName()
	 * @param $db DatabaseBase: db connection
	 * @param $database String: database name
	 * @param $name String: user name
	 * @param $id Integer: user ID
	 */",
 "/**
	 * Accessor for $this->database
	 *
	 * @return String: database name
	 */",
 "/**
	 * Confirm the selected database name is a valid local interwiki database name.
	 *
	 * @param $database String: database name
	 * @return Boolean
	 */",
 "/**
	 * Same as User::whoIs()
	 *
	 * @param $database String: database name
	 * @param $id Integer: user ID
	 * @param $ignoreInvalidDB Boolean: if true, don\'t check if $database is in $wgLocalDatabases
	 * @return String: user name or false if the user doesn\'t exist
	 */",
 "/**
	 * Factory function; get a remote user entry by ID number.
	 *
	 * @param $database String: database name
	 * @param $id Integer: user ID
	 * @param $ignoreInvalidDB Boolean: if true, don\'t check if $database is in $wgLocalDatabases
	 * @return UserRightsProxy or null if doesn\'t exist
	 */",
 "/**
	 * Factory function; get a remote user entry by name.
	 *
	 * @param $database String: database name
	 * @param $name String: user name
	 * @param $ignoreInvalidDB Boolean: if true, don\'t check if $database is in $wgLocalDatabases
	 * @return UserRightsProxy or null if doesn\'t exist
	 */",
 "/**
	 * @param $database
	 * @param $field
	 * @param $value
	 * @param $ignoreInvalidDB bool
	 * @return null|UserRightsProxy
	 */",
 "/**
	 * Open a database connection to work on for the requested user.
	 * This may be a new connection to another database for remote users.
	 *
	 * @param $database String
	 * @param $ignoreInvalidDB Boolean: if true, don\'t check if $database is in $wgLocalDatabases
	 * @return DatabaseBase or null if invalid selection
	 */",
 "/**
	 * @return int
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * Same as User::getName()
	 *
	 * @return String
	 */",
 "/**
	 * Same as User::getUserPage()
	 *
	 * @return Title object
	 */",
 "/**
	 * Replaces User::getUserGroups()
	 */",
 "/**
	 * Replaces User::addUserGroup()
	 */",
 "/**
	 * Replaces User::removeUserGroup()
	 */",
 "/**
	 * Replaces User::setOption()
	 */",
 "/**
	 * Replaces User::touchUser()
	 */",
 "/**
 * Cut-down copy of User interface for local-interwiki-database
 * user rights manipulation.
 */",
 "/**
 * Determine if an image exists on the \'bad image list\'.
 *
 * The format of MediaWiki:Bad_image_list is as follows:
 *    * Only list items (lines starting with \"*\") are considered
 *    * The first link on a line must be a link to a bad image
 *    * Any subsequent links on the same line are considered to be exceptions,
 *      i.e. articles where the image may occur inline.
 *
 * @param $name string the image name to check
 * @param $contextTitle Title|bool the page on which the image occurs, if known
 * @param $blacklist string wikitext of a file blacklist
 * @return bool
 */",
 "/**
 * Fallback language, used for all unspecified messages and behaviour. This
 * is English by default, for all files other than this one.
 *
 * Do NOT set this to false in any other message file! Leave the line out to
 * accept the default fallback to \"en\".
 */",
 "/**
 * Is the language written right-to-left?
 */",
 "/**
 * Should all nouns (not just proper ones) be capitalized?
 * Enabling this property will add the capitalize-all-nouns class to the <body> tag
 */",
 "/**
 * Optional array mapping ASCII digits 0-9 to local digits.
 */",
 "/**
 * Transform table for decimal point \'.\' and thousands separator \',\'
 */",
 "/**
 * Extra user preferences which will be shown in Special:Preferences as
 * checkboxes. Extra settings in derived languages will automatically be
 * appended to the array of the fallback languages.
 */",
 "/**
 * URLs do not specify their encoding. UTF-8 is used by default, but if the
 * URL is not a valid UTF-8 sequence, we have to try to guess what the real
 * encoding is. The encoding used in this case is defined below, and must be
 * supported by iconv().
 */",
 "/**
 * To allow \"foo[[bar]]\" to extend the link over the whole word \"foobar\"
 */",
 "/**
 * Namespace names. NS_PROJECT is always set to $wgMetaNamespace after the
 * settings are loaded, it will be ignored even if you specify it here.
 *
 * NS_PROJECT_TALK will be set to $wgMetaNamespaceTalk if that variable is
 * set, otherwise the string specified here will be used. The string may
 * contain \"$1\", which will be replaced by the name of NS_PROJECT. It may
 * also contain a grammatical transformation, e.g.
 *
 *     NS_PROJECT_TALK => \'Keskustelu_{{grammar:elative|$1}}\'
 *
 * Only one grammatical transform may be specified in the string. For
 * performance reasons, this transformation is done locally by the language
 * module rather than by the full wikitext parser. As a result, no other
 * parser features are available.
 */",
 "/**
 * Array of namespace aliases, mapping from name to NS_xxx index
 */",
 "/**
 * Array of gender specific. namespace aliases.
 * Mapping NS_xxx to array of GENDERKEY to alias.
 * Example:
$namespaceGenderAliases = array(
	NS_USER => array( \'male\' => \'Male_user\', \'female\' => \'Female_user\' ),
);
 */",
 "/**
 * A list of date format preference keys which can be selected in user
 * preferences. New preference keys can be added, provided they are supported
 * by the language class\'s timeanddate(). Only the 5 keys listed below are
 * supported by the wikitext converter (DateFormatter.php).
 *
 * The special key \"default\" is an alias for either dmy or mdy depending on
 * $wgAmericanDates
 */",
 "/**
 * The date format to use for generated dates in the user interface.
 * This may be one of the above date preferences, or the special value
 * \"dmy or mdy\", which uses mdy if $wgAmericanDates is true, and dmy
 * if $wgAmericanDates is false.
 */",
 "/**
 * Associative array mapping old numeric date formats, which may still be
 * stored in user preferences, to the new string formats.
 */",
 "/**
 * These are formats for dates generated by MediaWiki (as opposed to the wikitext
 * DateFormatter). Documentation for the format string can be found in
 * Language.php, search for sprintfDate.
 *
 * This array is automatically inherited by all subclasses. Individual keys can be
 * overridden.
 */",
 "/**
 * Default list of book sources
 */",
 "/**
 * Magic words
 * Customisable syntax for wikitext and elsewhere.
 *
 * IDs must be valid identifiers, they cannot contain hyphens.
 *
 * Note to translators:
 *   Please include the English words as synonyms.  This allows people
 *   from other wikis to contribute more easily.
 *
 * This array can be modified at runtime with the LanguageGetMagic hook
 */",
 "/**
 * Alternate names of special pages. All names are case-insensitive. The first
 * listed alias will be used as the default. Aliases from the fallback
 * localisation (usually English) will be included by default.
 *
 * This array may be altered at runtime using the LanguageGetSpecialPageAliases
 * hook.
 */",
 "/**
 * Regular expression matching the \"link trail\", e.g. \"ed\" in [[Toast]]ed, as
 * the first group, and the remainder of the string as the second group.
 */",
 "/**
 * List of filenames for some ui images that can be overridden per language
 * basis if needed.
*/",
 "/**
 * A list of messages to preload for each request.
 * We add messages here which are needed for a typical anonymous parser cache hit.
 */",
 "/**
	 * Initialize all query page objects
	 */",
 "/**
	 * Test SQL for each of our QueryPages objects
	 * @group Database
	 */",
 "/**
	 * As we use the same small set of messages in various methods and that
	 * they are called often, we call them once and save them in $this->message
	 */",
 "/**
	 * Set page title and show header for this log type
	 * @param $type Array
	 * @deprecated in 1.19
	 */",
 "/**
	 * Show options for the log list
	 *
	 * @param $types string or Array
	 * @param $user String
	 * @param $page String
	 * @param $pattern String
	 * @param $year Integer: year
	 * @param $month Integer: month
	 * @param $filter: array
	 * @param $tagFilter: array?
	 */",
 "/**
	 * @param $filter Array
	 * @return String: Formatted HTML
	 */",
 "/**
	 * Get the Title object of the page the links should point to.
	 * This is NOT the Title of the page the entries should be restricted to.
	 *
	 * @return Title object
	 */",
 "/**
	 * @param $queryTypes Array
	 * @return String: Formatted HTML
	 */",
 "/**
	 * Returns log page selector.
	 * @return XmlSelect
	 * @since 1.19
	 */",
 "/**
	 * @param $user String
	 * @return String: Formatted HTML
	 */",
 "/**
	 * @param $title String
	 * @return String: Formatted HTML
	 */",
 "/**
	 * @param $pattern
	 * @return string Checkbox
	 */",
 "/**
	 * @param $types
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @param $row Row: a single row from the result set
	 * @return String: Formatted HTML list item
	 */",
 "/**
	 * @TODO: split up!
	 *
	 * @param  $row
	 * @param Title $title
	 * @param Array $paramArray
	 * @param  $comment
	 * @return String
	 */",
 "/**
	 * @param $row Row
	 * @return string
	 */",
 "/**
	 * @param $row Row
	 * @param $type Mixed: string/array
	 * @param $action Mixed: string/array
	 * @param $right string
	 * @return Boolean
	 */",
 "/**
	 * Determine if the current user is allowed to view a particular
	 * field of this log row, if it\'s marked as deleted.
	 *
	 * @param $row Row
	 * @param $field Integer
	 * @param $user User object to check, or null to use $wgUser
	 * @return Boolean
	 */",
 "/**
	 * Determine if the current user is allowed to view a particular
	 * field of this log row, if it\'s marked as deleted.
	 *
	 * @param $bitfield Integer (current field)
	 * @param $field Integer
	 * @param $user User object to check, or null to use $wgUser
	 * @return Boolean
	 */",
 "/**
	 * @param $row Row
	 * @param $field Integer: one of DELETED_* bitfield constants
	 * @return Boolean
	 */",
 "/**
	 * Show log extract. Either with text and a box (set $msgKey) or without (don\'t set $msgKey)
	 *
	 * @param $out OutputPage|String-by-reference
	 * @param $types String|Array Log types to show
	 * @param $page String|Title The page title to show log entries for
	 * @param $user String The user who made the log entries
	 * @param $param Associative Array with the following additional options:
	 * - lim Integer Limit of items to show, default is 50
	 * - conds Array Extra conditions for the query (e.g. \"log_action != \'revision\'\")
	 * - showIfEmpty boolean Set to false if you don\'t want any output in case the loglist is empty
	 *   if set to true (default), \"No matching items in log\" is displayed if loglist is empty
	 * - msgKey Array If you want a nice box with a message, set this to the key of the message.
	 *   First element is the message key, additional optional elements are parameters for the key
	 *   that are processed with wfMsgExt and option \'parse\'
	 * - offset Set to overwrite offset parameter in $wgRequest
	 *   set to \'\' to unset offset
	 * - wrap String Wrap the message in html (usually something like \"<div ...>$1</div>\").
	 * - flags Integer display flags (NO_ACTION_LINK,NO_EXTRA_USER_LINKS)
	 * @return Integer Number of total log items (not limited by $lim)
	 */",
 "/**
	 * SQL clause to skip forbidden log types for this user
	 *
	 * @param $db DatabaseBase
	 * @param $audience string, public/user
	 * @return Mixed: string or false
	 */",
 "/**
 * Contain classes to list log entries
 *
 * Copyright ?? 2004 Brion Vibber <brion@pobox.com>, 2008 Aaron Schulz
 * http://www.mediawiki.org/
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @file
 */",
 "/** Asturian (Asturianu)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Esbardu
 * @author Kaganer
 * @author Mikel
 * @author Remember the dot
 * @author Xuacu
 * @author ???????? ????????????????
 */",
 "/** Rusyn (????????????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Gazeb
 * @author Gleb Borisov
 * @author Kaganer
 * @author Nemo bis
 * @author Reedy
 * @author Tkalyn
 */",
 "/** @dataProvider providePlural */",
 "/** Tests for MediaWiki languages/LanguageHi.php */",
 "/**
	 * Plural form transformations. Using the first form for words with the last digit 1, but not for words with the last digits 11, and the second form for all the others.
	 *
	 * Example: {{plural:{{NUMBEROFARTICLES}}|article|articles}}
	 *
	 * @param $count Integer
	 * @param $forms Array
	 * @return String
	 */",
 "/** Latvian (Latvie??u)
 *
 * @ingroup Language
 *
 * @author Niklas Laxstr??m
 *
 * @copyright Copyright ?? 2006, Niklas Laxstr??m
 * @license http://www.gnu.org/copyleft/gpl.html GNU General Public License 2.0 or later
 */",
 "/** Urdu (????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Chris H
 * @author Istabani
 * @author Meno25
 * @author O.bangash
 * @author Rachitrali
 * @author Reedy
 * @author Wisesabre
 * @author ???????? ????????????????
 * @author ??????????????
 * @author ?????????? ????????
 */",
 "/**
	 * @param $res
	 * @param $dbw DatabaseBase
	 * @return null|int
	 */",
 "/**
 * Special page designed for basic benchmarking of
 * MediaWiki since it doesn\'t really do much.
 *
 * @ingroup SpecialPage
 */",
 "/**
	 * Fetch data from given URL
	 *
	 * @param $url String: the URL
	 * @return String: the content at $url
	 */",
 "/**
 * Example class for HTTP accessable external objects.
 * Only supports reading, not storing.
 *
 * @ingroup ExternalStorage
 */",
 "/**
	 * Use singular form for zero
	 *
	 * @param $count int
	 * @param $forms array
	 *
	 * @return string
	 */",
 "/**
 * Northern Sotho (Sesotho sa Leboa)
 *
 * @ingroup Language
 */",
 "/** @todo document */",
 "/**
	 * @todo document
	 * @param $row
	 * @param $extdb
	 * @return bool
	 */",
 "/**
	 * @param $startId
	 * @param $maxChunkSize
	 * @param $beginDate
	 * @param $endDate
	 * @param $extdb string
	 * @param $maxPageId bool|int
	 * @return bool
	 */",
 "/** see bug 23156 & r64981 */",
 "/** see bug 23156 & r64981 */",
 "/** see bug 23156 & r64981 */",
 "/** @dataProvider providePluralFourForms */",
 "/** @dataProvider providePluralTwoForms */",
 "/**
	 * @throws MWException
	 * @param $user User
	 * @param $context IContextSource
	 * @return array|null
	 */",
 "/**
	 * Pull option from a user account. Handles stuff like array-type preferences.
	 *
	 * @param $name
	 * @param $info
	 * @param $user User
	 * @return array|String
	 */",
 "/**
	 * @param $user User
	 * @param $context IContextSource
	 * @param $defaultPreferences
	 * @return void
	 */",
 "/**
	 * @param $user User
	 * @param $context IContextSource
	 * @param $defaultPreferences
	 * @return void
	 */",
 "/**
	 * @param $user User
	 * @param $context IContextSource
	 * @param $defaultPreferences Array
	 */",
 "/**
	 * @param $user User
	 * @param $context IContextSource
	 * @param $defaultPreferences
	 * @return void
	 */",
 "/**
	 * @param $user User
	 * @param $context IContextSource
	 * @param $defaultPreferences Array
	 */",
 "/**
	 * @param $user User
	 * @param $context IContextSource
	 * @param $defaultPreferences Array
	 */",
 "/**
	 * @param $user User
	 * @param $context IContextSource
	 * @param $defaultPreferences Array
	 */",
 "/**
	 * @param $user User
	 * @param $context IContextSource
	 * @param $defaultPreferences
	 */",
 "/**
	 * @param $user User
	 * @param $context IContextSource
	 * @param $defaultPreferences Array
	 */",
 "/**
	 * @param $user User
	 * @param $context IContextSource
	 * @param $defaultPreferences Array
	 */",
 "/**
	 * @param $user User The User object
	 * @param $context IContextSource
	 * @return Array: text/links to display as key; $skinkey as value
	 */",
 "/**
	 * @param $context IContextSource
	 * @return array
	 */",
 "/**
	 * @param $context IContextSource
	 * @return array
	 */",
 "/**
	 * @param $context IContextSource
	 * @return array
	 */",
 "/**
	 * @param $signature string
	 * @param $alldata array
	 * @param $form HTMLForm
	 * @return bool|string
	 */",
 "/**
	 * @param $signature string
	 * @param $alldata array
	 * @param $form HTMLForm
	 * @return string
	 */",
 "/**
		 * @var $htmlForm PreferencesForm
		 */",
 "/**
	 * @param $user User
	 * @param $context IContextSource
	 * @param $formClass string
	 * @param $remove Array: array of items to remove
	 * @return HtmlForm
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * @param $value
	 * @param $alldata
	 * @return int
	 */",
 "/**
	 * @param $tz
	 * @param $alldata
	 * @return string
	 */",
 "/**
	 * @param $formData
	 * @param $form PreferencesForm
	 * @param $entryPoint string
	 * @return bool|Status|string
	 */",
 "/**
	 * @param $formData
	 * @param $form PreferencesForm
	 * @return Status
	 */",
 "/**
	 * Try to set a user\'s email address.
	 * This does *not* try to validate the address.
	 * Caller is responsible for checking $wgAuth.
	 * @param $user User
	 * @param $newaddr string New email address
	 * @return Array (true on success or Status on failure, info string)
	 */",
 "/**
	 * @deprecated in 1.19; will be removed in 1.20.
	 * @param $user User
	 * @return array
	 */",
 "/**
 * We\'re now using the HTMLForm object with some customisation to generate the
 * Preferences form. This object handles generic submission, CSRF protection,
 * layout and other logic in a reusable manner. We subclass it as a PreferencesForm
 * to make some minor customisations.
 *
 * In order to generate the form, the HTMLForm object needs an array structure
 * detailing the form fields available, and that\'s what this class is for. Each
 * element of the array is a basic property-list, including the type of field,
 * the label it is to be given in the form, callbacks for validation and
 * \'filtering\', and other pertinent information. Note that the \'default\' field
 * is named for generic forms, and does not represent the preference\'s default
 * (which is stored in $wgDefaultUserOptions), but the default for the form
 * field, which should be whatever the user has set for that preference. There
 * is no need to override it unless you have some special storage logic (for
 * instance, those not presently stored as options, but which are best set from
 * the user preferences view).
 *
 * Field types are implemented as subclasses of the generic HTMLFormField
 * object, and typically implement at least getInputHTML, which generates the
 * HTML for the input field to be placed in the table.
 *
 * Once fields have been retrieved and validated, submission logic is handed
 * over to the tryUISubmit static method of this class.
 */",
 "/**
	 * @param $user User
	 */",
 "/**
	 * @return User
	 */",
 "/**
	 * Get extra parameters for the query string when redirecting after
	 * successful save.
	 *
	 * @return array()
	 */",
 "/**
	 * @param $html string
	 * @return String
	 */",
 "/**
	 * @return String
	 */",
 "/**
	 * @param $data array
	 * @return array
	 */",
 "/**
	 * Get the whole body of the form.
	 * @return string
	 */",
 "/**
	 * Get the <legend> for a given section key. Normally this is the
	 * prefs-$key message but we\'ll allow extensions to override it.
	 * @param $key string
	 * @return string
	 */",
 "/** Some tweaks to allow js prefs to work */",
 "/** Deitsch (Deitsch)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Kaganer
 * @author Xqt
 * @author ???????? ????????????????
 */",
 "/**
	 * Blocks the user specified in the parameters for the given expiry, with the
	 * given reason, and with all other settings provided in the params. If the block
	 * succeeds, produces a result containing the details of the block and notice
	 * of success. If it fails, the result will specify the nature of the error.
	 */",
 "/**
* API module that facilitates the blocking of users. Requires API write mode
* to be enabled.
*
 * @ingroup API
 */",
 "/** Croatian (Hrvatski)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Anton008
 * @author Brest
 * @author Bugoslav
 * @author Dalibor Bosits
 * @author Demicx
 * @author Dnik
 * @author Ex13
 * @author Excaliboor
 * @author Herr Mlinka
 * @author Kaganer
 * @author Luka Krstulovic
 * @author MayaSimFan
 * @author Meno25
 * @author Mvrban
 * @author Roberta F.
 * @author SpeedyGonsales
 * @author Tivek
 * @author Treecko
 * @author ???????? ????????????????
 */",
 "/**
	 * Get a cURL handle for the given cache URL.
	 * We cache the handles to allow keepalive.
	 */",
 "/**
 * Client for the Ehcache RESTful web service - http://ehcache.org/documentation/cache_server.html
 * TODO: Simplify configuration and add to the installer.
 */",
 "/**
 * Statistics about the localisation.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @file
 * @ingroup MaintenanceLanguage
 *
 * @author ??var Arnfj??r?? Bjarmason <avarab@gmail.com>
 * @author Antoine Musso <hashar at free dot fr>
 *
 * Output is posted from time to time on:
 * http://www.mediawiki.org/wiki/Localisation_statistics
 */",
 "/** Print a usage message*/",
 "/** Megleno-Romanian (Latin script) (Vl??he??te)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Andrijko Z.
 * @author ?????????????? ????????????
 * @author ??????????
 * @author ?????????????? ??????
 */",
 "/**
	 * A function wrapper:
	 *   - if there is no selected variant, leave the link
	 *     names as they were
	 *   - do not try to find variants for usernames
	 *
	 * @param $link string
	 * @param $nt Title
	 * @param $ignoreOtherCond bool
	 */",
 "/**
	 * We want our external link captions to be converted in variants,
	 * so we return the original text instead -{$text}-, except for URLs
	 *
	 * @param $text string
	 * @param $noParse bool
	 *
	 * @return string
	 */",
 "/**
	 * An ugly function wrapper for parsing Image titles
	 * (to prevent image name conversion)
	 *
	 * @param $text string
	 * @param $toVariant bool
	 *
	 * @return string
	 */",
 "/**
	 *  It translates text into variant, specials:
	 *    - ommiting roman numbers
	 *
	 * @param $text string
	 * @param $toVariant bool
	 *
	 * @return string
	 */",
 "/**
 * Kurdish converter routines
 *
 * @ingroup Language
 */",
 "/**
 * Kurdish (Kurd?? / ??????????)
 *
 * @ingroup Language
 */",
 "/**
 * API Text output formatter
 * @ingroup API
 */",
 "/** Polish (Polski)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Bartek50003
 * @author BdgwksxD
 * @author Beau
 * @author BeginaFelicysym
 * @author Cysioland
 * @author Derbeth
 * @author Equadus
 * @author Fizykaa
 * @author Herr Kriss
 * @author Holek
 * @author Jwitos
 * @author Kaganer
 * @author Lajsikonik
 * @author Lampak
 * @author Leinad
 * @author Maikking
 * @author Marcin ??ukasz Kiejzik
 * @author Masti
 * @author Matma Rex
 * @author McMonster
 * @author Miko??ka
 * @author Nux
 * @author Odder
 * @author Olgak85
 * @author Przemub
 * @author Remedios44
 * @author Remember the dot
 * @author Rzuwig
 * @author Saper
 * @author Sp5uhe
 * @author Stlmch
 * @author Stv
 * @author Szczepan1990
 * @author Timpul
 * @author ToSter
 * @author Woytecr
 * @author Wpedzich
 * @author Ymar
 * @author ??ek??il71pl
 * @author ???????? ????????????????
 */",
 "/** Ganda (Luganda)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Kizito
 */",
 "/**
	 * @throws MWException
	 * @param Title $title
	 * @param int $id
	 * @param string $key
	 */",
 "/**
	 * Loads a file object from the filearchive table
	 * @return true on success or null
	 */",
 "/**
	 * Loads a file object from the filearchive table
	 *
	 * @param $row
	 *
	 * @return ArchivedFile
	 */",
 "/**
	 * Return the associated title object
	 *
	 * @return Title
	 */",
 "/**
	 * Return the file name
	 *
	 * @return string
	 */",
 "/**
	 * @return int
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * Return the FileStore key
	 * @return string
	 */",
 "/**
	 * Return the FileStore key (overriding base File class)
	 * @return string
	 */",
 "/**
	 * Return the FileStore storage group
	 * @return string
	 */",
 "/**
	 * Return the width of the image
	 * @return int
	 */",
 "/**
	 * Return the height of the image
	 * @return int
	 */",
 "/**
	 * Get handler-specific metadata
	 * @return string
	 */",
 "/**
	 * Return the size of the image file, in bytes
	 * @return int
	 */",
 "/**
	 * Return the bits of the image file, in bytes
	 * @return int
	 */",
 "/**
	 * Returns the mime type of the file.
	 * @return string
	 */",
 "/**
	 * Get a MediaHandler instance for this file
	 * @return MediaHandler
	 */",
 "/**
	 * Returns the number of pages of a multipage document, or false for
	 * documents which aren\'t multipage documents
	 */",
 "/**
	 * Return the type of the media in the file.
	 * Use the value returned by this function with the MEDIATYPE_xxx constants.
	 * @return string
	 */",
 "/**
	 * Return upload timestamp.
	 *
	 * @return string
	 */",
 "/**
	 * Return the user ID of the uploader.
	 *
	 * @return int
	 */",
 "/**
	 * Return the user name of the uploader.
	 *
	 * @return string
	 */",
 "/**
	 * Return upload description.
	 *
	 * @return string
	 */",
 "/**
	 * Return the user ID of the uploader.
	 *
	 * @return int
	 */",
 "/**
	 * Return the user name of the uploader.
	 *
	 * @return string
	 */",
 "/**
	 * Return upload description.
	 *
	 * @return string
	 */",
 "/**
	 * Returns the deletion bitfield
	 * @return int
	 */",
 "/**
	 * for file or revision rows
	 *
	 * @param $field Integer: one of DELETED_* bitfield constants
	 * @return bool
	 */",
 "/**
	 * Determine if the current user is allowed to view a particular
	 * field of this FileStore image file, if it\'s marked as deleted.
	 * @param $field Integer
	 * @param $user User object to check, or null to use $wgUser
	 * @return bool
	 */",
 "/**
 * Class representing a row of the \'filearchive\' table
 *
 * @ingroup FileAbstraction
 */",
 "/**
	 * Get an instance of this class
	 *
	 * @return LinkCache
	 */",
 "/**
	 * General accessor to get/set whether SELECT FOR UPDATE should be used
	 *
	 * @return bool
	 */",
 "/**
	 * @param $title
	 * @return array|int
	 */",
 "/**
	 * Get a field of a title object from cache.
	 * If this link is not good, it will return NULL.
	 * @param $title Title
	 * @param $field String: (\'length\',\'redirect\',\'revision\')
	 * @return mixed
	 */",
 "/**
	 * @param $title
	 * @return bool
	 */",
 "/**
	 * Add a link for the title to the link cache
	 *
	 * @param $id Integer: page\'s ID
	 * @param $title Title object
	 * @param $len Integer: text\'s length
	 * @param $redir Integer: whether the page is a redirect
	 * @param $revision Integer: latest revision\'s ID
	 */",
 "/**
	 * Same as above with better interface.
	 * @since 1.19
	 * @param $title Title
	 * @param $row object which has the fields page_id, page_is_redirect,
	 *  page_latest
	 */",
 "/**
	 * @param $title Title
	 */",
 "/**
	 * @param $title Title
	 */",
 "/**
	 * Add a title to the link cache, return the page_id or zero if non-existent
	 *
	 * @param $title String: title to add
	 * @return Integer
	 */",
 "/**
	 * Add a title to the link cache, return the page_id or zero if non-existent
	 *
	 * @param $nt Title object to add
	 * @return Integer
	 */",
 "/**
	 * Clears cache
	 */",
 "/**
 * Cache for article titles (prefixed DB keys) and ids linked from one source
 *
 * @ingroup Cache
 */",
 "/** Aramaic (??????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author 334a
 * @author A2raya07
 * @author Basharh
 * @author Man2fly2002
 * @author Michaelovic
 * @author The Thadman
 */",
 "/**
 * These tests should work regardless of $wgCapitalLinks
 * @group Database
 */",
 "/**
	 * @dataProvider provideDetectServer
	 */",
 "/**
	 * @dataProvider provideGetIP
	 */",
 "/**
	 * @expectedException MWException
	 */",
 "/**
	 * Get all pages that should be rolled back for a given user
	 * @param $user String a name to check against rev_user_text
	 * @return array
	 */",
 "/**
	 * Open a socket if there isn\'t one open already, return it.
	 * Returns false on error.
	 *
	 * @return false|resource
	 */",
 "/**
	 * Get read socket array for select()
	 * @return array
	 */",
 "/**
	 * Get write socket array for select()
	 * @return array
	 */",
 "/** 
	 * Get the host\'s IP address.
	 * Does not support IPv6 at present due to the lack of a convenient interface in PHP.
	 */",
 "/**
	 * Close the socket and ignore any future purge requests.
	 * This is called if there is a protocol error.
	 */",
 "/**
	 * Close the socket but allow it to be reopened for future purge requests
	 */",
 "/**
	 * Queue a purge operation
	 *
	 * @param $url string
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * Perform pending writes. Call this when socket_select() indicates that writing will not block.
	 */",
 "/**
	 * Read some data. Call this when socket_select() indicates that the read buffer is non-empty.
	 */",
 "/**
	 * @throws MWException
	 * @return string
	 */",
 "/**
	 * @param $line
	 * @return
	 */",
 "/**
	 * @param $line string
	 */",
 "/**
 * An HTTP 1.0 client built for the purposes of purging Squid and Varnish. 
 * Uses asynchronous I/O, allowing purges to be done in a highly parallel 
 * manner. 
 *
 * Could be replaced by curl_multi_exec() or some such.
 */",
 "/**
	 * @param $client SquidPurgeClient
	 * @return void
	 */",
 "/** Tamil (???????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Aswn
 * @author Kaganer
 * @author Kanags
 * @author Karthi.dr
 * @author Krishnaprasaths
 * @author Logicwiki
 * @author Mahir78
 * @author Mayooranathan
 * @author Naveen
 * @author Shanmugamp7
 * @author Sodabottle
 * @author Sundar
 * @author Surya Prakash.S.A.
 * @author TRYPPN
 * @author Theni.M.Subramani
 * @author Trengarasu
 * @author Ulmo
 * @author Urhixidur
 * @author ???????? ????????????????
 * @author ????????????
 * @author ??????????????????
 * @author ??????????????????
 */",
 "/** Komi (????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Comp1089
 * @author Yufereff
 * @author ??????
 */",
 "/**
	 * @param $params Array with keys:
	 *    servers           Required. Array of server info structures.
	 *    masterWaitTimeout Replication lag wait timeout
	 *    loadMonitor       Name of a class used to fetch server lag and load.
	 */",
 "/**
	 * Get a LoadMonitor instance
	 *
	 * @return LoadMonitor
	 */",
 "/**
	 * Get or set arbitrary data used by the parent object, usually an LBFactory
	 * @param $x
	 * @return \Mixed
	 */",
 "/**
	 * Given an array of non-normalised probabilities, this function will select
	 * an element and return the appropriate key
	 *
	 * @param $weights array
	 *
	 * @return int
	 */",
 "/**
	 * @param $loads array
	 * @param $wiki bool
	 * @return bool|int|string
	 */",
 "/**
	 * Get the index of the reader connection, which may be a slave
	 * This takes into account load ratios and lag times. It should
	 * always return a consistent index during a given invocation
	 *
	 * Side effect: opens connections to databases
	 * @param $group bool
	 * @param $wiki bool
	 * @return bool|int|string
	 */",
 "/**
	 * Wait for a specified number of microseconds, and return the period waited
	 * @param $t int
	 * @return int
	 */",
 "/**
	 * Set the master wait position
	 * If a DB_SLAVE connection has been opened already, waits
	 * Otherwise sets a variable telling it to wait if such a connection is opened
	 * @param $pos int
	 */",
 "/**
	 * Set the master wait position and wait for ALL slaves to catch up to it
	 * @param $pos int
	 */",
 "/**
	 * Get any open connection to a given server index, local or foreign
	 * Returns false if there is no connection open
	 *
	 * @param $i int
	 * @return DatabaseBase|false
	 */",
 "/**
	 * Wait for a given slave to catch up to the master pos stored in $this
	 * @param $index
	 * @param $open bool
	 * @return bool
	 */",
 "/**
	 * Get a connection by index
	 * This is the main entry point for this class.
	 *
	 * @param $i Integer: server index
	 * @param $groups Array: query groups
	 * @param $wiki String: wiki ID
	 *
	 * @return DatabaseBase
	 */",
 "/**
	 * Mark a foreign connection as being available for reuse under a different
	 * DB name or prefix. This mechanism is reference-counted, and must be called
	 * the same number of times as getConnection() to work.
	 *
	 * @param DatabaseBase $conn
	 */",
 "/**
	 * Open a connection to the server given by the specified index
	 * Index must be an actual index into the array.
	 * If the server is already open, returns it.
	 *
	 * On error, returns false, and the connection which caused the
	 * error will be available via $this->mErrorConnection.
	 *
	 * @param $i Integer server index
	 * @param $wiki String wiki ID to open
	 * @return DatabaseBase
	 *
	 * @access private
	 */",
 "/**
	 * Open a connection to a foreign DB, or return one if it is already open.
	 *
	 * Increments a reference count on the returned connection which locks the
	 * connection to the requested wiki. This reference count can be
	 * decremented by calling reuseConnection().
	 *
	 * If a connection is open to the appropriate server already, but with the wrong
	 * database, it will be switched to the right database and returned, as long as
	 * it has been freed first with reuseConnection().
	 *
	 * On error, returns false, and the connection which caused the
	 * error will be available via $this->mErrorConnection.
	 *
	 * @param $i Integer: server index
	 * @param $wiki String: wiki ID to open
	 * @return DatabaseBase
	 */",
 "/**
	 * Test if the specified index represents an open connection
	 *
	 * @param $index Integer: server index
	 * @access private
	 * @return bool
	 */",
 "/**
	 * Really opens a connection. Uncached.
	 * Returns a Database object whether or not the connection was successful.
	 * @access private
	 *
	 * @param $server
	 * @param $dbNameOverride bool
	 * @return DatabaseBase
	 */",
 "/**
	 * @param $conn
	 * @throws DBConnectionError
	 */",
 "/**
	 * @return int
	 */",
 "/**
	 * Returns true if the specified index is a valid server index
	 *
	 * @param $i
	 * @return bool
	 */",
 "/**
	 * Returns true if the specified index is valid and has non-zero load
	 *
	 * @param $i
	 * @return bool
	 */",
 "/**
	 * Get the number of defined servers (not the number of open connections)
	 *
	 * @return int
	 */",
 "/**
	 * Get the host name or IP address of the server with the specified index
	 * Prefer a readable name if available.
	 * @param $i
	 * @return string
	 */",
 "/**
	 * Return the server info structure for a given index, or false if the index is invalid.
	 * @param $i
	 * @return bool
	 */",
 "/**
	 * Sets the server info structure for the given index. Entry at index $i is created if it doesn\'t exist
	 * @param $i
	 * @param $serverInfo
	 */",
 "/**
	 * Get the current master position for chronology control purposes
	 * @return mixed
	 */",
 "/**
	 * Close all open connections
	 */",
 "/**
	 * Deprecated function, typo in function name
	 *
	 * @deprecated in 1.18
	 * @param $conn
	 */",
 "/**
	 * Close a connection
	 * Using this function makes sure the LoadBalancer knows the connection is closed.
	 * If you use $conn->close() directly, the load balancer won\'t update its state.
	 * @param $conn DatabaseBase
	 */",
 "/**
	 * Commit transactions on all open connections
	 */",
 "/**
	 *  Issue COMMIT only on master, only if queries were done on connection
	 */",
 "/**
	 * @param $value null
	 * @return Mixed
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * Disables/enables lag checks
	 * @param $mode null
	 * @return bool
	 */",
 "/**
	 * @return bool
	 */",
 "/**
	 * Call a function with each open connection object
	 * @param $callback
	 * @param array $params
	 */",
 "/**
	 * Get the hostname and lag time of the most-lagged slave.
	 * This is useful for maintenance scripts that need to throttle their updates.
	 * May attempt to open connections to slaves on the default DB. If there is
	 * no lag, the maximum lag will be reported as -1.
	 *
	 * @param $wiki string Wiki ID, or false for the default database
	 *
	 * @return array ( host, max lag, index of max lagged host )
	 */",
 "/**
	 * Get lag time for each server
	 * Results are cached for a short time in memcached, and indefinitely in the process cache
	 *
	 * @param $wiki
	 *
	 * @return array
	 */",
 "/**
	 * Get the lag in seconds for a given connection, or zero if this load
	 * balancer does not have replication enabled.
	 *
	 * This should be used in preference to Database::getLag() in cases where
	 * replication may not be in use, since there is no way to determine if
	 * replication is in use at the connection level without running
	 * potentially restricted queries such as SHOW SLAVE STATUS. Using this
	 * function instead of Database::getLag() avoids a fatal error in this
	 * case on many installations.
	 *
	 * @param $conn DatabaseBase
	 *
	 * @return int
	 */",
 "/**
	 * Clear the cache for getLagTimes
	 */",
 "/**
 * Database load balancing object
 *
 * @todo document
 * @ingroup Database
 */",
 "/**
 * Dummy class to makes FormOptions::$options public.
 * Used by FormOptionsInitializationTest which need to verify the $options
 * array is correctly set through the FormOptions::add() function.
 */",
 "/**
	 * A new fresh and empty FormOptions object to test initialization
	 * with.
	 */",
 "/**
 * Test class for FormOptions initialization
 * Ensure the FormOptions::add() does what we want it to do.
 *
 * Generated by PHPUnit on 2011-02-28 at 20:46:27.
 *
 * Copyright ?? 2011, Antoine Musso
 *
 * @author Antoine Musso
 */",
 "/**
	 * Conversion to PNG for inline display can be disabled here...
	 * Note scaling should work with ImageMagick, but may not with GD scaling.
	 *
	 * Files pulled from an another MediaWiki instance via ForeignAPIRepo /
	 * InstantCommons will have thumbnails managed from the remote instance,
	 * so we can skip this check.
	 *
	 * @param $file
	 *
	 * @return bool
	 */",
 "/**
	 * Browsers don\'t support TIFF inline generally...
	 * For inline display, we need to convert to PNG.
	 *
	 * @param $file
	 *
	 * @return bool
	 */",
 "/**
	 * @param $ext
	 * @param $mime
	 * @param $params
	 * @return bool
	 */",
 "/**
	 * @param $image
	 * @param $filename
	 * @return string
	 */",
 "/**
 * Handler for Tiff images.
 *
 * @ingroup Media
 */",
 "/**
	 * @return int
	 */",
 "/**
	 * @return int
	 */",
 "/**
 * @todo document
 * @private
 * @ingroup DifferenceEngine
 */",
 "/**
	 * @return _DiffOp_Copy
	 */",
 "/**
 * @todo document
 * @private
 * @ingroup DifferenceEngine
 */",
 "/**
	 * @return _DiffOp_Add
	 */",
 "/**
 * @todo document
 * @private
 * @ingroup DifferenceEngine
 */",
 "/**
	 * @return _DiffOp_Delete
	 */",
 "/**
 * @todo document
 * @private
 * @ingroup DifferenceEngine
 */",
 "/**
	 * @return _DiffOp_Change
	 */",
 "/**
 * @todo document
 * @private
 * @ingroup DifferenceEngine
 */",
 "/**
	 * @param $from_lines
	 * @param $to_lines
	 * @return array
	 */",
 "/**
	 * @param $from_lines
	 * @param $to_lines
	 */",
 "/**
	 * Returns the whole line if it\'s small enough, or the MD5 hash otherwise
	 * @param $line string
	 * @return string
	 */",
 "/**
	 * Divide the Largest Common Subsequence (LCS) of the sequences
	 * [XOFF, XLIM) and [YOFF, YLIM) into NCHUNKS approximately equally
	 * sized segments.
	 *
	 * Returns (LCS, PTS).	LCS is the length of the LCS. PTS is an
	 * array of NCHUNKS+1 (X, Y) indexes giving the diving points between
	 * sub sequences.  The first sub-sequence is contained in [X0, X1),
	 * [Y0, Y1), the second in [X1, X2), [Y1, Y2) and so on.  Note
	 * that (X0, Y0) == (XOFF, YOFF) and
	 * (X[NCHUNKS], Y[NCHUNKS]) == (XLIM, YLIM).
	 *
	 * This function assumes that the first lines of the specified portions
	 * of the two files do not match, and likewise that the last lines do not
	 * match.  The caller must trim matching lines from the beginning and end
	 * of the portions it is going to specify.
	 * @param $xoff
	 * @param $xlim
	 * @param $yoff
	 * @param $ylim
	 * @param $nchunks
	 * @return array
	 */",
 "/**
	 * @param $ypos
	 * @return int
	 */",
 "/**
	 * Find LCS of two sequences.
	 *
	 * The results are recorded in the vectors $this->{x,y}changed[], by
	 * storing a 1 in the element for each line that is an insertion
	 * or deletion (ie. is not in the LCS).
	 *
	 * The subsequence of file 0 is [XOFF, XLIM) and likewise for file 1.
	 *
	 * Note that XLIM, YLIM are exclusive bounds.
	 * All line numbers are origin-0 and discarded lines are not counted.
	 * @param $xoff
	 * @param $xlim
	 * @param $yoff
	 * @param $ylim
	 */",
 "/**
	 * Adjust inserts/deletes of identical lines to join changes
	 * as much as possible.
	 *
	 * We do something when a run of changed lines include a
	 * line at one end and has an excluded, identical line at the other.
	 * We are free to choose which identical line is included.
	 * `compareseq\' usually chooses the one at the beginning,
	 * but usually it is cleaner to consider the following identical line
	 * to be the \"change\".
	 *
	 * This is extracted verbatim from analyze.c (GNU diffutils-2.7).
	 */",
 "/**
 * Class used internally by Diff to actually compute the diffs.
 *
 * The algorithm used here is mostly lifted from the perl module
 * Algorithm::Diff (version 1.06) by Ned Konz, which is available at:
 *	 http://www.perl.com/CPAN/authors/id/N/NE/NEDKONZ/Algorithm-Diff-1.06.zip
 *
 * More ideas are taken from:
 *	 http://www.ics.uci.edu/~eppstein/161/960229.html
 *
 * Some ideas are (and a bit of code) are from from analyze.c, from GNU
 * diffutils-2.7, which can be found at:
 *	 ftp://gnudist.gnu.org/pub/gnu/diffutils/diffutils-2.7.tar.gz
 *
 * closingly, some ideas (subdivision by NCHUNKS > 2, and some optimizations)
 * are my own.
 *
 * Line length limits for robustness added by Tim Starling, 2005-08-31
 * Alternative implementation added by Guy Van den Broeck, 2008-07-30
 *
 * @author Geoffrey T. Dairiki, Tim Starling, Guy Van den Broeck
 * @private
 * @ingroup DifferenceEngine
 */",
 "/**
	 * Constructor.
	 * Computes diff between sequences of strings.
	 *
	 * @param $from_lines array An array of strings.
	 *		  (Typically these are lines from a file.)
	 * @param $to_lines array An array of strings.
	 */",
 "/**
	 * Compute reversed Diff.
	 *
	 * SYNOPSIS:
	 *
	 *	$diff = new Diff($lines1, $lines2);
	 *	$rev = $diff->reverse();
	 * @return object A Diff object representing the inverse of the
	 *				  original diff.
	 */",
 "/**
	 * Check for empty diff.
	 *
	 * @return bool True iff two sequences were identical.
	 */",
 "/**
	 * Compute the length of the Longest Common Subsequence (LCS).
	 *
	 * This is mostly for diagnostic purposed.
	 *
	 * @return int The length of the LCS.
	 */",
 "/**
	 * Get the original set of lines.
	 *
	 * This reconstructs the $from_lines parameter passed to the
	 * constructor.
	 *
	 * @return array The original sequence of strings.
	 */",
 "/**
	 * Get the closing set of lines.
	 *
	 * This reconstructs the $to_lines parameter passed to the
	 * constructor.
	 *
	 * @return array The sequence of strings.
	 */",
 "/**
	 * Check a Diff for validity.
	 *
	 * This is here only for debugging purposes.
	 * @param $from_lines
	 * @param $to_lines
	 */",
 "/**
 * Class representing a \'diff\' between two sequences of strings.
 * @todo document
 * @private
 * @ingroup DifferenceEngine
 */",
 "/**
	 * Constructor.
	 *
	 * Computes diff between sequences of strings.
	 *
	 * This can be used to compute things like
	 * case-insensitve diffs, or diffs which ignore
	 * changes in white-space.
	 *
	 * @param $from_lines array An array of strings.
	 *	(Typically these are lines from a file.)
	 *
	 * @param $to_lines array An array of strings.
	 *
	 * @param $mapped_from_lines array This array should
	 *	have the same size number of elements as $from_lines.
	 *	The elements in $mapped_from_lines and
	 *	$mapped_to_lines are what is actually compared
	 *	when computing the diff.
	 *
	 * @param $mapped_to_lines array This array should
	 *	have the same number of elements as $to_lines.
	 */",
 "/**
 * @todo document, bad name.
 * @private
 * @ingroup DifferenceEngine
 */",
 "/**
	 * Format a diff.
	 *
	 * @param $diff Diff A Diff object.
	 * @return string The formatted output.
	 */",
 "/**
	 * @param $xbeg
	 * @param $xlen
	 * @param $ybeg
	 * @param $ylen
	 * @param $edits
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @param $xbeg
	 * @param $xlen
	 * @param $ybeg
	 * @param $ylen
	 * @return string
	 */",
 "/**
	 * @param $lines
	 * @param $prefix string
	 */",
 "/**
	 * @param $lines
	 */",
 "/**
	 * @param $lines
	 */",
 "/**
	 * @param $lines
	 */",
 "/**
	 * @param $orig
	 * @param $closing
	 */",
 "/**
 * A class to format Diffs
 *
 * This class formats the diff in classic diff format.
 * It is intended that this class be customized via inheritance,
 * to obtain fancier outputs.
 * @todo document
 * @private
 * @ingroup DifferenceEngine
 */",
 "/**
	 * @param $lines
	 */",
 "/**
	 * @param $lines
	 */",
 "/**
	 * @param $orig
	 * @param $closing
	 */",
 "/**
	 * @param $xbeg
	 * @param $xlen
	 * @param $ybeg
	 * @param $ylen
	 * @return string
	 */",
 "/**
 * A formatter that outputs unified diffs
 * @ingroup DifferenceEngine
 */",
 "/**
	 * @param $diff
	 * @return array
	 */",
 "/**
 * A pseudo-formatter that just passes along the Diff::$edits array
 * @ingroup DifferenceEngine
 */",
 "/**
	 * @param $new_tag
	 */",
 "/**
	 * @param $new_tag
	 */",
 "/**
	 * @param $words
	 * @param $tag string
	 */",
 "/**
	 * @return array
	 */",
 "/**
 * @todo document
 * @private
 * @ingroup DifferenceEngine
 */",
 "/**
	 * @param $orig_lines
	 * @param $closing_lines
	 */",
 "/**
	 * @param $lines
	 * @return array
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * @return array
	 */",
 "/**
 * @todo document
 * @private
 * @ingroup DifferenceEngine
 */",
 "/**
	 * @static
	 * @param $msg
	 * @return mixed
	 */",
 "/**
	 * @param $xbeg
	 * @param $xlen
	 * @param $ybeg
	 * @param $ylen
	 * @return string
	 */",
 "/**
	 * @param $header
	 */",
 "/**
	 * HTML-escape parameter before calling this
	 * @param $line
	 * @return string
	 */",
 "/**
	 * HTML-escape parameter before calling this
	 * @param $line
	 * @return string
	 */",
 "/**
	 * HTML-escape parameter before calling this
	 * @param $line
	 * @return string
	 */",
 "/**
	 * @param $marker
	 * @param $class
	 * @param $line
	 * @return string
	 */",
 "/**
	 * @return string
	 */",
 "/**
	 * @param $lines array
	 */",
 "/**
	 * @param $lines
	 */",
 "/**
	 * @param $lines
	 */",
 "/**
	 * @param $orig
	 * @param $closing
	 */",
 "/**
 * Wikipedia Table style diff formatter.
 * @todo document
 * @private
 * @ingroup DifferenceEngine
 */",
 "/**
 * A query action to return meta information about the wiki site.
 *
 * @ingroup API
 */",
 "/**
	 * Constructor
	 *
	 * @param $type String: one of \'\', \'block\', \'protect\', \'rights\', \'delete\',
	 *               \'upload\', \'move\'
	 * @param $rc Boolean: whether to update recent changes as well as the logging table
	 * @param $udp String: pass \'UDP\' to send to the UDP feed if NOT sent to RC
	 */",
 "/**
	 * @return bool|int|null
	 */",
 "/**
	 * Get the RC comment from the last addEntry() call
	 *
	 * @return string
	 */",
 "/**
	 * Get the comment from the last addEntry() call
	 */",
 "/**
	 * Get the list of valid log types
	 *
	 * @return Array of strings
	 */",
 "/**
	 * Is $type a valid log type
	 *
	 * @param $type String: log type to check
	 * @return Boolean
	 */",
 "/**
	 * Get the name for the given log type
	 *
	 * @param $type String: logtype
	 * @return String: log name
	 * @deprecated in 1.19, warnings in 1.21. Use getName()
	 */",
 "/**
	 * Get the log header for the given log type
	 *
	 * @todo handle missing log types
	 * @param $type String: logtype
	 * @return String: headertext of this logtype
	 * @deprecated in 1.19, warnings in 1.21. Use getDescription()
	 */",
 "/**
	 * Generate text for a log entry. 
	 * Only LogFormatter should call this function.
	 *
	 * @param $type String: log type
	 * @param $action String: log action
	 * @param $title Mixed: Title object or null
	 * @param $skin Mixed: Skin object or null. If null, we want to use the wiki
	 *              content language, since that will go to the IRC feed.
	 * @param $params Array: parameters
	 * @param $filterWikilinks Boolean: whether to filter wiki links
	 * @return HTML string
	 */",
 "/**
	 * TODO document
	 * @param  $type String
	 * @param  $lang Language or null
	 * @param  $title Title
	 * @param  $params Array
	 * @return String
	 */",
 "/**
	 * Add a log entry
	 *
	 * @param $action String: one of \'\', \'block\', \'protect\', \'rights\', \'delete\', \'upload\', \'move\', \'move_redir\'
	 * @param $target Title object
	 * @param $comment String: description associated
	 * @param $params Array: parameters passed later to wfMsg.* functions
	 * @param $doer User object: the user doing the action
	 *
	 * @return bool|int|null
	 * @TODO: make this use LogEntry::saveContent()
	 */",
 "/**
	 * Add relations to log_search table
	 *
	 * @param $field String
	 * @param $values Array
	 * @param $logid Integer
	 * @return Boolean
	 */",
 "/**
	 * Create a blob from a parameter array
	 *
	 * @param $params Array
	 * @return String
	 */",
 "/**
	 * Extract a parameter array from a blob
	 *
	 * @param $blob String
	 * @return Array
	 */",
 "/**
	 * Convert a comma-delimited list of block log flags
	 * into a more readable (and translated) form
	 *
	 * @param $flags Flags to format
	 * @param $lang Language object to use
	 * @return String
	 */",
 "/**
	 * Translate a block log flag if possible
	 *
	 * @param $flag int Flag to translate
	 * @param $lang Language object to use
	 * @return String
	 */",
 "/**
	 * Name of the log.
	 * @return Message
	 * @since 1.19
	 */",
 "/**
	 * Description of this log type.
	 * @return Message
	 * @since 1.19
	 */",
 "/**
	 * Returns the right needed to read this log type.
	 * @return string
	 * @since 1.19
	 */",
 "/**
	 * Tells if this log is not viewable by all.
	 * @return bool
	 * @since 1.19
	 */",
 "/**
 * Class to simplify the use of log pages.
 * The logs are now kept in a table which is easier to manage and trim
 * than ever-growing wiki pages.
 *
 */",
 "/** Upper Sorbian (Hornjoserbsce)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Dundak
 * @author J budissin
 * @author Kaganer
 * @author Michawiki
 * @author Tcho??
 * @author Tlustulimu
 * @author ???????? ????????????????
 */",
 "/**
	 * Test to make sure core json_encode() and our Services_Json()->encode()
	 * produce the same output
	 *
	 * @dataProvider provideValuesToEncode
	 */",
 "/**
	 * Test to make sure core json_decode() and our Services_Json()->decode()
	 * produce the same output
	 *
	 * @dataProvider provideValuesToDecode
	 */",
 "/** get the items array
	 * @return Array XMP item configuration array.
	*/",
 "/**
* This class is just a container for a big array
* used by XMPReader to determine which XMP items to
* extract.
*/",
 "/** ???Nederlands (informeel)??? (???Nederlands (informeel)???)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author MarkvA
 * @author Siebrand
 * @author Tedjuh10
 */",
 "/** Irish (Gaeilge)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Alison
 * @author D.de.loinsigh
 * @author Evertype
 * @author Kscanne
 * @author Kwekubo
 * @author Moillead??ir
 * @author Moydow
 * @author Spacebirdy
 * @author Stifle
 * @author Tameamseo
 * @author Urhixidur
 * @author ???????? ????????????????
 */",
 "/**
	 * Simple entry point for command-line testing
	 *
	 * @param $text string
	 *
	 * @return string
	 */",
 "/**
	 * Construct a new parser
	 */",
 "/**
	 * Edit the text. Returns the edited text.
	 * @param $ops Array of operations.
	 *
	 * Operations are given as an associative array, with members:
	 *    type:     One of delete, set, append or insert (required)
	 *    path:     The path to operate on (required)
	 *    key:      The array key to insert/append, with PHP quotes
	 *    value:    The value, with PHP quotes
	 *
	 * delete
	 *    Deletes an array element or statement with the specified path.
	 *    e.g.
	 *        array(\'type\' => \'delete\', \'path\' => \'$foo/bar/baz\' )
	 *    is equivalent to the runtime PHP code:
	 *        unset( $foo[\'bar\'][\'baz\'] );
	 *
	 * set
	 *    Sets the value of an array element. If the element doesn\'t exist, it
	 *    is appended to the array. If it does exist, the value is set, with
	 *    comments and indenting preserved.
	 *
	 * append
	 *    Appends a new element to the end of the array. Adds a trailing comma.
	 *    e.g.
	 *        array( \'type\' => \'append\', \'path\', \'$foo/bar\',
	 *            \'key\' => \'baz\', \'value\' => \"\'x\'\" )
	 *    is like the PHP code:
	 *        $foo[\'bar\'][\'baz\'] = \'x\';
	 *
	 * insert
	 *    Insert a new element at the start of the array.
	 *
	 */",
 "/**
	 * Get the variables defined in the text
	 * @return array( varname => value )
	 */",
 "/**
	 * Set a value in an array, unless it\'s set already. For instance,
	 * setVar( $arr, \'foo/bar\', \'baz\', 3 ); will set
	 * $arr[\'foo\'][\'bar\'][\'baz\'] = 3;
	 * @param $array array
	 * @param $path string slash-delimited path
	 * @param $key mixed Key
	 * @param $value mixed Value
	 */",
 "/**
	 * Parse a scalar value in PHP
	 * @return mixed Parsed value
	 */",
 "/**
	 * Replace the byte offset region of the source with $newText.
	 * Works by adding elements to the $this->edits array.
	 */",
 "/**
	 * Finds the source byte region which you would want to delete, if $pathName
	 * was to be deleted. Includes the leading spaces and tabs, the trailing line
	 * break, and any comments in between.
	 */",
 "/**
	 * Find the byte region in the source corresponding to the value part.
	 * This includes the quotes, but does not include the trailing comma
	 * or semicolon.
	 *
	 * The end position is the past-the-end (end + 1) value as per convention.
	 */",
 "/**
	 * Find the path name of the last element in the array.
	 * If the array is empty, this will return the \@extra interstitial element.
	 * If the specified path is not found or is not an array, it will return false.
	 */",
 "/**
	 * Find the path name of first element in the array.
	 * If the array is empty, this will return the \@extra interstitial element.
	 * If the specified path is not found or is not an array, it will return false.
	 */",
 "/**
	 * Get the indent string which sits after a given start position.
	 * Returns false if the position is not at the start of the line.
	 */",
 "/**
	 * Run the parser on the text. Throws an exception if the string does not
	 * match our defined subset of PHP syntax.
	 */",
 "/**
	 * Initialise a parse.
	 */",
 "/**
	 * Set the parse position. Do not call this except from firstToken() and
	 * nextToken(), there is more to update than just the position.
	 */",
 "/**
	 * Create a ConfEditorToken from an element of token_get_all()
	 */",
 "/**
	 * Reset the parse position
	 */",
 "/**
	 * Get the current token
	 */",
 "/**
	 * Advance the current position and return the resulting next token
	 */",
 "/**
	 * Get the token $offset steps ahead of the current position.
	 * $offset may be negative, to get tokens behind the current position.
	 */",
 "/**
	 * Advances the current position past any whitespace or comments
	 */",
 "/**
	 * Throws an error if the current token is not of the given type, and
	 * then advances to the next position.
	 */",
 "/**
	 * Push a state or two on to the state stack.
	 */",
 "/**
	 * Pop a state from the state stack.
	 */",
 "/**
	 * Returns true if the user input path is valid.
	 * This exists to allow \"/\" and \"@\" to be reserved for string path keys
	 */",
 "/**
	 * Internal function to update some things at the end of a path region. Do
	 * not call except from popPath() or nextPath().
	 */",
 "/**
	 * Go up to a new path level, for example at the start of an array.
	 */",
 "/**
	 * Go down a path level, for example at the end of an array.
	 */",
 "/**
	 * Go to the next path on the same level. This ends the current path and
	 * starts a new one. If $path is \@next, the new path is set to the next
	 * numeric array element.
	 */",
 "/**
	 * Mark the start of the value part of a path.
	 */",
 "/**
	 * Mark the end of the value part of a path.
	 */",
 "/**
	 * Mark the comma separator in an array element
	 */",
 "/**
	 * Mark the arrow separator in an associative array element
	 */",
 "/**
	 * Generate a parse error
	 */",
 "/**
	 * Get a readable name for the given token type.
	 */",
 "/**
	 * Looks ahead to see if the given type is the next token type, starting
	 * from the current position plus the given offset. Skips any intervening
	 * whitespace.
	 */",
 "/**
	 * Get the previous token object
	 */",
 "/**
	 * Echo a reasonably readable representation of the tokenizer array.
	 */",
 "/**
 * This is a state machine style parser with two internal stacks:
 *   * A next state stack, which determines the state the machine will progress to next
 *   * A path stack, which keeps track of the logical location in the file.
 *
 * Reference grammar:
 *
 * file = T_OPEN_TAG *statement
 * statement = T_VARIABLE \"=\" expression \";\"
 * expression = array / scalar / T_VARIABLE
 * array = T_ARRAY \"(\" [ element *( \",\" element ) [ \",\" ] ] \")\"
 * element = assoc-element / expression
 * assoc-element = scalar T_DOUBLE_ARROW expression
 * scalar = T_LNUMBER / T_DNUMBER / T_STRING / T_CONSTANT_ENCAPSED_STRING
 */",
 "/**
 * Exception class for parse errors
 */",
 "/**
 * Class to wrap a token from the tokenizer.
 */",
 "/**
	 * @param $message string
	 *
	 * @deprecated since 1.17
	 */",
 "/**
	 * @return string Plaintext error message to display
	 */",
 "/**
	 * In following PEAR_Error model this could be formatted differently,
	 * but so far it\'s not.
	 * @return string
	 */",
 "/**
	 * Returns true if the given object is a WikiError-descended
	 * error object, false otherwise.
	 *
	 * @param $object mixed
	 * @return bool
	 *
	 * @deprecated since 1.17
	 */",
 "/**
 * Since PHP4 doesn\'t have exceptions, here\'s some error objects
 * loosely modeled on the standard PEAR_Error model...
 * @ingroup Exception
 */",
 "/**
	 * @param $message String: wiki message name
	 * @param ... parameters to pass to wfMsg()
	 *
	 * @deprecated since 1.17
	 */",
 "/**
 * Localized error message object
 * @ingroup Exception
 */",
 "/**
	 * @param $parser resource
	 * @param $message string
	 * @param $context
	 * @param $offset Int
	 *
	 * @deprecated since 1.17
	 */",
 "/** @return string */",
 "/**
 * Error class designed to handle errors involved with 
 * XML parsing
 * @ingroup Exception
 */",
 "/** Min Dong Chinese (M??ng-d????ng-ng?????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 */",
 "/**
 * Implements Special:Listfiles
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @file
 * @ingroup SpecialPage
 */",
 "/**
	 * @return Array
	 */",
 "/**
 * @ingroup SpecialPage Pager
 */",
 "/**
 * Implements Special:Newimages
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @file
 * @ingroup SpecialPage
 */",
 "/**
 * @ingroup SpecialPage Pager
 */",
 "/**
	 * Check whether feed\'s cache should be cleared; for changes feeds
	 * If the feed should be purged; $timekey and $key will be removed from
	 * $messageMemc
	 *
	 * @param $timekey String: cache key of the timestamp of the last item
	 * @param $key String: cache key of feed\'s content
	 */",
 "/**
	 * Check whether feeds can be used and that $type is a valid feed type
	 *
	 * @param $type String: feed type, as requested by the user
	 * @return Boolean
	 */",
 "/**
	 * Format a diff for the newsfeed
	 *
	 * @param $row Object: row from the recentchanges table
	 * @return String
	 */",
 "/**
	 * Really format a diff for the newsfeed
	 *
	 * @param $title Title object
	 * @param $oldid Integer: old revision\'s id
	 * @param $newid Integer: new revision\'s id
	 * @param $timestamp Integer: new revision\'s timestamp
	 * @param $comment String: new revision\'s comment
	 * @param $actiontext String: text of the action; in case of log event
	 * @return String
	 */",
 "/**
	 * Generates a diff link. Used when the full diff is not wanted for example
	 * when $wgFeedDiffCutoff is 0.
	 *
	 * @param $title Title object: used to generate the diff URL
	 * @param $newid Integer newid for this diff
	 * @param $oldid Integer|null oldid for the diff. Null means it is a new article
	 */",
 "/**
	 * Hacky application of diff styles for the feeds.
	 * Might be \'cleaner\' to use DOM or XSLT or something,
	 * but *gack* it\'s a pain in the ass.
	 *
	 * @param $text String: diff\'s HTML output
	 * @return String: modified HTML
	 */",
 "/**
 * Helper functions for feeds
 *
 * @ingroup Feed
 */",
 "/**
	 * This should be called before the table prefix is changed
	 */",
 "/**
	 * Set up result recording; insert a record for the run with the date
	 * and all that fun stuff
	 */",
 "/**
	 * Returns a string giving information about when a test last had a status change.
	 * Could help to track down when regressions were introduced, as distinct from tests
	 * which have never passed (which are more change requests than regressions).
	 */",
 "/**
	 * Commit transaction and clean up for result recording
	 */",
 "/**
	 * Set up result recording; insert a record for the run with the date
	 * and all that fun stuff
	 */",
 "/**
	 * Record an individual test item\'s success or failure to the db
	 *
	 * @param $test String
	 * @param $result Boolean
	 */",
 "/**
	 * Clear section name and its data
	 */",
 "/**
	 * Verify the current section data has some value for the given token
	 * name (first parameter).
	 * Throw an exception if it is not set, referencing current section
	 * and adding the current file name and line number
	 *
	 * @param $token String: expected token that should have been mentionned before closing this section 
	 */",
 "/**
	 * Init/reset or forgot about the current delayed test.
	 * Call to this will erase any hooks function that were pending.
	 */",
 "/**
	 * Called whenever we actually want to run the hook.
	 * Should be the case if we found the parserTest is not disabled 
	 */",
 "/**
	 * Similar to ParserTest object but does not run anything
	 * Use unleash() to really execute the hook
	 */",
 "/**
	 * Similar to ParserTest object but does not run anything
	 * Use unleash() to really execute the hook function
	 */",
 "/**
 * A class to delay execution of a parser test hooks.
 */",
 "/**
 * Selenium server manager
 *
 * @file
 * @ingroup Testing
 * Copyright (C) 2010 Dan Nessett <dnessett@yahoo.com>
 * http://citizendium.org/
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @addtogroup Testing
 */",
 "/**
	 * @params $config Array
	 * @return LockServerDaemon
	 */",
 "/**
	 * @params $config Array
	 */",
 "/**
	 * @return void
	 */",
 "/**
	 * Entry-point function that listens to the server socket, accepts
	 * new clients, and recieves/responds to requests to lock resources.
	 */",
 "/**
	 * @param $data string
	 * @param $sourceSock resource
	 * @return string
	 */",
 "/**
	 * @param $data string
	 * @return Array
	 */",
 "/**
	 * Remove a socket\'s corresponding session from tracking and
	 * store it in the dead session tracking if it still has locks.
	 * 
	 * @param $socket resource
	 * @return book
	 */",
 "/**
	 * Clear locks for sessions that have been dead for a while
	 *
	 * @return integer Number of sessions purged
	 */",
 "/**
	 * Get the current timestamp and memory usage
	 * 
	 * @return string
	 */",
 "/**
 * Simple lock server daemon that accepts lock/unlock requests
 */",
 "/**
	 * @return Array (list of sockets to read, list of sockets to write)
	 */",
 "/**
	 * @return integer Number of client sockets
	 */",
 "/**
	 * @param $sock resource
	 * @return bool
	 */",
 "/**
	 * @param $sock resource
	 * @return bool
	 */",
 "/**
	 * @param $sock resource
	 * @param $data string
	 * @return bool
	 */",
 "/**
	 * @param $sock resource
	 * @return string|false
	 */",
 "/**
	 * @param $sock resource
	 * @param $data string
	 * @return bool
	 */",
 "/**
	 * @param $sock resource
	 * @return bool
	 */",
 "/**
	 * @param $sock resource
	 * @param $bytes integer
	 * @return bool
	 */",
 "/**
 * LockServerDaemon helper class that keeps track socket states
 */",
 "/**
	 * @params $maxLocks integer Maximum number of locks to allow
	 */",
 "/**
	 * @param $session string
	 * @return bool 
	 */",
 "/**
	 * @param $session string
	 * @param $type string
	 * @param $keys Array
	 * @return string
	 */",
 "/**
	 * @param $session string
	 * @param $type string
	 * @param $keys Array
	 * @return string
	 */",
 "/**
	 * @param $session string
	 * @return string
	 */",
 "/**
	 * @param $key string
	 * @param $session string
	 * @return void
	 */",
 "/**
	 * @param $key string
	 * @param $session string
	 * @return void
	 */",
 "/**
	 * @param $key string
	 * @param $session string
	 * @return void
	 */",
 "/**
	 * @param $key string
	 * @param $session string
	 * @return void
	 */",
 "/**
 * LockServerDaemon helper class that keeps track of the locks
 */",
 "/**
	 * Fetch a list of used images from a particular image source.
	 *
	 * @param $shared Boolean: true to pass shared-dir settings to hash func
	 */",
 "/**
	 * Fetch a list of all images from a particular image source.
	 *
	 * @param $shared Boolean: true to pass shared-dir settings to hash func
	 */",
 "/** Papiamento (Papiamentu)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Delaraha (on pap.wikipedia.org)
 * @author Kamizu
 * @author Sdm1985
 * @author ???????? ????????????????
 */",
 "/**
	 * @param $langobj Language
	 * @param $maincode string
	 * @param $variants array
	 * @param $variantfallbacks array
	 * @param $flags array
	 * @param $manualLevel array
	 */",
 "/**
	 * there shouldn\'t be any latin text in Chinese conversion, so no need
	 * to mark anything.
	 * $noParse is there for compatibility with LanguageConvert::markNoConversion
	 *
	 * @param $text string
	 * @param $noParse bool
	 *
	 * @return string
	 */",
 "/**
	 * @param $key string
	 * @return String
	 */",
 "/**
 * @ingroup Language
 */",
 "/**
	 * this should give much better diff info
	 *
	 * @param $text string
	 * @return string
	 */",
 "/**
	 * @param $text string
	 * @return string
	 */",
 "/**
	 * auto convert to zh-hans and normalize special characters.
	 *
	 * @param $string String
	 * @param $autoVariant String, default to \'zh-hans\'
	 * @return String
	 */",
 "/**
	 * @param $termsArray array
	 * @return array
	 */",
 "/**
 * class that handles both Traditional and Simplified Chinese
 * right now it only distinguish zh_hans, zh_hant, zh_cn, zh_tw, zh_sg and zh_hk.
 *
 * @ingroup Language
 */",
 "/** A general output object. Need to be overriden */",
 "/** Outputs WikiText */",
 "/** Output text. To be used on a terminal for example. */",
 "/** csv output. Some people love excel */",
 "/**
	 * Get an array mapping token names to their handler functions.
	 * The prototype for a token function is func($user)
	 * it should return a token or false (permission denied)
	 * @return Array tokenname => function
	 */",
 "/**
	  * @param $user User
	  * @return String
	  */",
 "/**
	* Gets all the groups that a user is automatically a member of (implicit groups)
	* @param $user User
	* @return array
	*/",
 "/**
 * Query module to get information about a list of users
 *
 * @ingroup API
 */",
 "/**
	 * Construct a revision list for a given title
	 * @param $context IContextSource
	 * @param $title Title
	 */",
 "/**
	 * Select items only where the ID is any of the specified values
	 * @param $ids Array
	 */",
 "/**
	 * Get the internal type name of this list. Equal to the table name.
	 * Override this function.
	 */",
 "/**
	 * Initialise the current iteration pointer
	 */",
 "/**
	 * Start iteration. This must be called before current() or next().
	 * @return First list item
	 */",
 "/**
	 * Get the current list item, or false if we are at the end
	 */",
 "/**
	 * Move the iteration pointer to the next list item, and return it.
	 */",
 "/**
	 * Get the number of items in the list.
	 */",
 "/**
	 * Do the DB query to iterate through the objects.
	 * @param $db DatabaseBase object to use for the query
	 */",
 "/**
	 * Create an item object from a DB result row
	 * @param $row stdclass
	 */",
 "/**
 * List for revision table items for a single page
 */",
 "/**
	 * @param $list RevisionListBase
	 * @param $row DB result row
	 */",
 "/**
	 * Get the DB field name associated with the ID list.
	 * Override this function.
	 */",
 "/**
	 * Get the DB field name storing timestamps.
	 * Override this function.
	 */",
 "/**
	 * Get the DB field name storing user ids.
	 * Override this function.
	 */",
 "/**
	 * Get the DB field name storing user names.
	 * Override this function.
	 */",
 "/**
	 * Get the ID, as it would appear in the ids URL parameter
	 */",
 "/**
	 * Get the date, formatted in user\'s languae
	 */",
 "/**
	 * Get the time, formatted in user\'s languae
	 */",
 "/**
	 * Get the timestamp in MW 14-char form
	 */",
 "/**
	 * Get the author user ID
	 */",
 "/**
	 * Get the author user name
	 */",
 "/**
	 * Returns true if the current user can view the item
	 */",
 "/**
	 * Returns true if the current user can view the item text/file
	 */",
 "/**
	 * Get the HTML of the list item. Should be include <li></li> tags.
	 * This is used to show the list in HTML form, by the special page.
	 */",
 "/**
 * Abstract base class for revision items
 */",
 "/**
	 * @param $db DatabaseBase
	 * @return mixed
	 */",
 "/**
	 * Get the HTML link to the revision text.
	 * Overridden by RevDel_ArchiveItem.
	 */",
 "/**
	 * Get the HTML link to the diff.
	 * Overridden by RevDel_ArchiveItem
	 */",
 "/**
 * Item class for a live revision table row
 */",
 "/** @dataProvider providerPlural */",
 "/** Tests for MediaWiki languages/classes/LanguageMo.php */",
 "/**
 * Simple profiler base class.
 * @todo document methods (?)
 * @ingroup Profiler
 */",
 "/**
	 * Factory function for fatal errors
	 *
	 * @param $repo FileRepo
	 *
	 * @return FileRepoStatus
	 */",
 "/**
	 * @param $repo FileRepo
	 * @param $value
	 * @return FileRepoStatus
	 */",
 "/**
	 * @param $repo FileRepo
	 */",
 "/**
 * Generic operation result class for FileRepo-related operations
 * @ingroup FileRepo
 */",
 "/** Romanian (Rom??n??)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author AdiJapan
 * @author Cin
 * @author Danutz
 * @author Emily
 * @author Firilacroco
 * @author Gutza
 * @author KlaudiuMihaila
 * @author Laurap
 * @author Malafaya
 * @author Memo18
 * @author Mihai
 * @author Minisarm
 * @author Misterr
 * @author SCriBu
 * @author Silviubogan
 * @author Stelistcristi
 * @author Strainu
 * @author Urhixidur
 * @author ???????? ????????????????
 */",
 "/**
	 * Construct a new instance from configuration.
	 * 
	 * $config paramaters include:
	 *     \'lockServers\'  : Associative array of server names to configuration.
	 *                      Configuration is an associative array that includes:
	 *                      \'host\'    - IP address/hostname
	 *                      \'port\'    - TCP port
	 *                      \'authKey\' - Secret string the lock server uses
	 *     \'srvsByBucket\' : Array of 1-16 consecutive integer keys, starting from 0,
	 *                      each having an odd-numbered list of server names (peers) as values.
	 *     \'connTimeout\'  : Lock server connection attempt timeout. [optional]
	 *
	 * @param Array $config 
	 */",
 "/**
	 * Get a connection to a lock server and acquire locks on $paths
	 *
	 * @param $lockSrv string
	 * @param $paths Array
	 * @param $type integer LockManager::LOCK_EX or LockManager::LOCK_SH
	 * @return bool Resources able to be locked
	 */",
 "/**
	 * Send a command and get back the response
	 *
	 * @param $lockSrv string
	 * @param $action string
	 * @param $type string
	 * @param $values Array
	 * @return string|false
	 */",
 "/**
	 * Attempt to acquire locks with the peers for a bucket
	 *
	 * @param $bucket integer
	 * @param $paths Array List of resource keys to lock
	 * @param $type integer LockManager::LOCK_EX or LockManager::LOCK_SH
	 * @return bool|string One of (true, \'cantacquire\', \'srverrors\')
	 */",
 "/**
	 * Get (or reuse) a connection to a lock server
	 *
	 * @param $lockSrv string
	 * @return resource
	 */",
 "/**
	 * Release all locks that this session is holding
	 *
	 * @return Status
	 */",
 "/**
	 * Get the bucket for resource path.
	 * This should avoid throwing any exceptions.
	 *
	 * @param $path string
	 * @return integer
	 */",
 "/**
	 * Make sure remaining locks get cleared for sanity
	 */",
 "/**
 * Manage locks using a lock daemon server.
 *
 * Version of LockManager based on using lock daemon servers.
 * This is meant for multi-wiki systems that may share files.
 * All locks are non-blocking, which avoids deadlocks.
 *
 * All lock requests for a resource, identified by a hash string, will map
 * to one bucket. Each bucket maps to one or several peer servers, each
 * running LockServerDaemon.php, listening on a designated TCP port.
 * A majority of peers must agree for a lock to be acquired.
 *
 * @ingroup LockManager
 * @since 1.19
 */",
 "/** @dataProvider providePlural */",
 "/** Tests for MediaWiki languages/classes/LanguageMg.php */",
 "/** Azerbaijani (Az??rbaycanca)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Cekli829
 * @author Don Alessandro
 * @author Emperyan
 * @author Gulmammad
 * @author Kaganer
 * @author PPerviz
 * @author PrinceValiant
 * @author Sortilegus
 * @author Sysops of az.wikipedia.org (imported 2008-08-31)
 * @author Vago
 * @author Vugar 1981
 * @author Wertuose
 * @author ???????? ????????????????
 */",
 "/**
 * An action that views article content
 *
 * Copyright ?? 2012 Timo Tijhof
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA
 *
 * @file
 * @ingroup Actions
 * @author Timo Tijhof
 */",
 "/** Upper Franconian (Mainfr??nkisch)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Altaileopard
 * @author Silvicola
 */",
 "/**
	 * @todo document
	 */",
 "/**
	 * Get a DateFormatter object
	 *
	 * @return DateFormatter object
	 */",
 "/**
	 * @param $preference String: User preference
	 * @param $text String: Text to reformat
	 * @param $options Array: can contain \'linked\' and/or \'match-whole\'
	 */",
 "/**
	 * @param $matches
	 */",
 "/**
	 * @todo document
	 */",
 "/**
	 * Makes an ISO month, e.g. 02, from a month name
	 * @param $monthName String: month name
	 * @return string ISO month name
	 */",
 "/**
	 * @todo document
	 * @param $year String: Year name
	 * @return string ISO year name
	 */",
 "/**
	 * @todo document
	 */",
 "/**
 * Date formatter, recognises dates in plain text and formats them accoding to user preferences.
 * @todo preferences, OutputPage
 * @ingroup Parser
 */",
 "/**
	 * Reassign edits from one user to another
	 *
	 * @param $from User to take edits from
	 * @param $to User to assign edits to
	 * @param $rc Update the recent changes table
	 * @param $report Don\'t change things; just echo numbers
	 * @return integer Number of entries changed, or that would be changed
	 */",
 "/**
	 * Return the most efficient set of user conditions
	 * i.e. a user => id mapping, or a user_text => text mapping
	 *
	 * @param $user User for the condition
	 * @param $idfield string Field name containing the identifier
	 * @param $utfield string Field name containing the user text
	 * @return array
	 */",
 "/**
	 * Return user specifications
	 * i.e. user => id, user_text => text
	 *
	 * @param $user User for the spec
	 * @param $idfield string Field name containing the identifier
	 * @param $utfield string Field name containing the user text
	 * @return array
	 */",
 "/**
	 * Initialise the user object
	 *
	 * @param $username Username or IP address
	 * @return User
	 */",
 "/** Burmese (??????????????????????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Erikoo
 * @author Hakka
 * @author Hanzaw
 * @author Hintha
 * @author Lagoonaing
 * @author Lionslayer
 * @author Minnyoonthit
 * @author Myanmars
 * @author Myolay
 * @author Parabaik
 * @author Purodha
 * @author Saiddzone
 * @author Thanlwin
 * @author Thitaung
 * @author Umherirrender
 * @author Zawthet
 * @author ?????????????????????
 */",
 "/** Fiji Hindi (Fiji Hindi/??????????????? ??????????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 * @comment falls back to Fiji Hindi (Latin)
 */",
 "/** Italian (Italiano)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author .anaconda
 * @author Airon90
 * @author Amire80
 * @author Andria
 * @author Aushulz
 * @author Beta16
 * @author Blaisorblade
 * @author Broc
 * @author BrokenArrow
 * @author Brownout
 * @author Candalua
 * @author Civv??
 * @author Cruccone
 * @author Cryptex
 * @author Dakrismeno
 * @author Danmaz74
 * @author Darth Kule
 * @author F. Cosoleto
 * @author Felis
 * @author FollowTheMedia
 * @author Gianfranco
 * @author HalphaZ
 * @author Kaganer
 * @author Klutzy
 * @author Marco 27
 * @author Martorell
 * @author Marzedu
 * @author McDutchie
 * @author Melos
 * @author Nemo bis
 * @author Nick1915
 * @author Ninniuz
 * @author Od1n
 * @author Oile11
 * @author Omnipaedista
 * @author PaoloRomano
 * @author Pietrodn
 * @author Pinodd
 * @author Ramac
 * @author Raoli
 * @author Remember the dot
 * @author Rippitippi
 * @author S.??rvarr.S
 * @author SabineCretella
 * @author Stefano-c
 * @author Tonyfroio
 * @author Trixt
 * @author Una giornata uggiosa \'94
 * @author Vajotwo
 * @author Valepert
 * @author Xpensive
 * @author ZioNicco
 * @author ???????? ????????????????
 */",
 "/** Esperanto (Esperanto)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author AVRS
 * @author Airon90
 * @author Amikeco
 * @author ArnoLagrange
 * @author Castelobranco
 * @author Iketsi
 * @author Jens Liebenau
 * @author Kaganer
 * @author Lucas
 * @author LyzTyphone
 * @author Malafaya
 * @author Melancholie
 * @author Michawiki
 * @author Mihxil
 * @author MinuteElectron
 * @author Omnipaedista
 * @author Pedroca cerebral
 * @author Petrus Adamus
 * @author Smeira
 * @author ThomasPusch
 * @author Tlustulimu
 * @author Urhixidur
 * @author Yekrats
 * @author ?????????????????? ??????????????
 * @author ???????? ????????????????
 */",
 "/** @dataProvider providerPlural */",
 "/** Tests for MediaWiki languages/classes/LanguageLv.php */",
 "/** @dataProvider providerPlural */",
 "/** Tests for MediaWiki languages/classes/LanguageKsh.php */",
 "/** Plautdietsch (Plautdietsch)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Purodha
 * @author Slomox
 * @author Wikipeeta
 */",
 "/**
 * SVGMetadataExtractor.php
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @file
 * @ingroup Media
 * @author Derk-Jan Hartman <hartman _at_ videolan d0t org>
 * @author Brion Vibber
 * @copyright Copyright ?? 2010-2010 Brion Vibber, Derk-Jan Hartman
 * @license http://www.gnu.org/copyleft/gpl.html GNU General Public License
 */",
 "/**
	 * Constructor
	 *
	 * Creates an SVGReader drawing from the source provided
	 * @param $source String: URI from which to read
	 */",
 "/**
	 * @return Array with the known metadata
	 */",
 "/**
	 * Read the SVG
	 */",
 "/**
	 * Read a textelement from an element
	 *
	 * @param String $name of the element that we are reading from
	 * @param String $metafield that we will fill with the result
	 */",
 "/**
	 * Read an XML snippet from an element
	 *
	 * @param String $metafield that we will fill with the result
	 */",
 "/**
	 * Filter all children, looking for animate elements
	 *
	 * @param String $name of the element that we are reading from
	 */",
 "/**
	 * Parse the attributes of an SVG element
	 *
	 * The parser has to be in the start element of <svg>
	 */",
 "/**
	 * Return a rounded pixel equivalent for a labeled CSS/SVG length.
	 * http://www.w3.org/TR/SVG11/coords.html#UnitIdentifiers
	 *
	 * @param $length String: CSS/SVG length.
	 * @param $viewportSize: Float optional scale for percentage units...
	 * @return float: length in pixels
	 */",
 "/**
 * A querypage to list the most wanted templates
 *
 * @ingroup SpecialPage
 */",
 "/**
	 * Return the internal name, e.g. \'mysql\', or \'sqlite\'.
	 */",
 "/**
	 * @return true if the client library is compiled in.
	 */",
 "/**
	 * Checks for installation prerequisites other than those checked by isCompiled()
	 * @since 1.19
	 * @return Status
	 */",
 "/**
	 * Get HTML for a web form that configures this database. Configuration
	 * at this time should be the minimum needed to connect and test
	 * whether install or upgrade is required.
	 *
	 * If this is called, $this->parent can be assumed to be a WebInstaller.
	 */",
 "/**
	 * Set variables based on the request array, assuming it was submitted
	 * via the form returned by getConnectForm(). Validate the connection
	 * settings by attempting to connect with them.
	 *
	 * If this is called, $this->parent can be assumed to be a WebInstaller.
	 *
	 * @return Status
	 */",
 "/**
	 * Get HTML for a web form that retrieves settings used for installation.
	 * $this->parent can be assumed to be a WebInstaller.
	 * If the DB type has no settings beyond those already configured with
	 * getConnectForm(), this should return false.
	 */",
 "/**
	 * Set variables based on the request array, assuming it was submitted via
	 * the form return by getSettingsForm().
	 *
	 * @return Status
	 */",
 "/**
	 * Open a connection to the database using the administrative user/password
	 * currently defined in the session, without any caching. Returns a status
	 * object. On success, the status object will contain a Database object in
	 * its value member.
	 *
	 * @return Status
	 */",
 "/**
	 * Create the database and return a Status object indicating success or
	 * failure.
	 *
	 * @return Status
	 */",
 "/**
	 * Connect to the database using the administrative user/password currently
	 * defined in the session. Returns a status object. On success, the status
	 * object will contain a Database object in its value member.
	 *
	 * This will return a cached connection if one is available.
	 *
	 * @return Status
	 */",
 "/**
	 * Create database tables from scratch.
	 *
	 * @return Status
	 */",
 "/**
	 * Create the tables for each extension the user enabled
	 * @return Status
	 */",
 "/**
	 * Get the DBMS-specific options for LocalSettings.php generation.
	 *
	 * @return String
	 */",
 "/**
	 * Override this to provide DBMS-specific schema variables, to be
	 * substituted into tables.sql and other schema files.
	 */",
 "/**
	 * Set appropriate schema variables in the current database connection.
	 *
	 * This should be called after any request data has been imported, but before
	 * any write operations to the database.
	 */",
 "/**
	 * Set up LBFactory so that wfGetDB() etc. works.
	 * We set up a special LBFactory instance which returns the current
	 * installer connection.
	 */",
 "/**
	 * Perform database upgrades
	 *
	 * @return Boolean
	 */",
 "/**
	 * Allow DB installers a chance to make last-minute changes before installation
	 * occurs. This happens before setupDatabase() or createTables() is called, but
	 * long after the constructor. Helpful for things like modifying setup steps :)
	 */",
 "/**
	 * Allow DB installers a chance to make checks before upgrade.
	 */",
 "/**
	 * Get an array of MW configuration globals that will be configured by this class.
	 */",
 "/**
	 * Construct and initialise parent.
	 * This is typically only called from Installer::getDBInstaller()
	 * @param $parent
	 */",
 "/**
	 * Convenience function.
	 * Check if a named extension is present.
	 *
	 * @see wfDl
	 * @param $name
	 * @return bool
	 */",
 "/**
	 * Get the internationalised name for this DBMS.
	 */",
 "/**
	 * Get a name=>value map of MW configuration globals that overrides.
	 * DefaultSettings.php
	 */",
 "/**
	 * Get a name=>value map of internal variables used during installation.
	 */",
 "/**
	 * Get a variable, taking local defaults into account.
	 * @param $var string
	 * @param $default null
	 * @return mixed
	 */",
 "/**
	 * Convenience alias for $this->parent->setVar()
	 * @param $name string
	 * @param $value mixed
	 */",
 "/**
	 * Get a labelled text box to configure a local variable.
	 *
	 * @param $var string
	 * @param $label string
	 * @param $attribs array
	 * @param $helpData string
	 * @return string
	 */",
 "/**
	 * Get a labelled password box to configure a local variable.
	 * Implements password hiding.
	 *
	 * @param $var string
	 * @param $label string
	 * @param $attribs array
	 * @param $helpData string
	 * @return string
	 */",
 "/**
	 * Get a labelled checkbox to configure a local boolean variable.
	 *
	 * @return string
	 */",
 "/**
	 * Get a set of labelled radio buttons.
	 *
	 * @param $params Array:
	 *    Parameters are:
	 *      var:            The variable to be configured (required)
	 *      label:          The message name for the label (required)
	 *      itemLabelPrefix: The message name prefix for the item labels (required)
	 *      values:         List of allowed values (required)
	 *      itemAttribs     Array of attribute arrays, outer key is the value name (optional)
	 *
	 */",
 "/**
	 * Convenience function to set variables based on form data.
	 * Assumes that variables containing \"password\" in the name are (potentially
	 * fake) passwords.
	 * @param $varNames Array
	 */",
 "/**
	 * Determine whether an existing installation of MediaWiki is present in
	 * the configured administrative connection. Returns true if there is
	 * such a wiki, false if the database doesn\'t exist.
	 *
	 * Traditionally, this is done by testing for the existence of either
	 * the revision table or the cur table.
	 *
	 * @return Boolean
	 */",
 "/**
	 * Get a standard install-user fieldset.
	 *
	 * @return String
	 */",
 "/**
	 * Submit a standard install user fieldset.
	 */",
 "/**
	 * Get a standard web-user fieldset
	 * @param $noCreateMsg String: Message to display instead of the creation checkbox.
	 *   Set this to false to show a creation checkbox.
	 *
	 * @return String
	 */",
 "/**
	 * Submit the form from getWebUserBox().
	 *
	 * @return Status
	 */",
 "/**
	 * Common function for databases that don\'t understand the MySQLish syntax of interwiki.sql.
	 *
	 * @return Status
	 */",
 "/**
 * Base class for DBMS-specific installation helper classes.
 *
 * @ingroup Deployment
 * @since 1.17
 */",
 "/**
	 * Module for displaying help
	 */",
 "/**
	 * @param  $module ApiBase
	 * @param  $type String What type of request is this? e.g. action, query, list, prop, meta, format
	 * @return string
	 */",
 "/**
 * This is a simple class to handle action=help
 *
 * @ingroup API
 */",
 "/**
	 * Creates an instance of this class
	 * @param $db DatabaseMssql: database object
	 */",
 "/**
	 * Perform a full text search query and return a result set.
	 *
	 * @param $term String: raw search term
	 * @return MssqlSearchResultSet
	 * @access public
	 */",
 "/**
	 * Perform a title-only search query and return a result set.
	 *
	 * @param $term String: raw search term
	 * @return MssqlSearchResultSet
	 * @access public
	 */",
 "/**
	 * Return a partial WHERE clause to exclude redirects, if so set
	 *
	 * @return String
	 * @private
	 */",
 "/**
	 * Return a partial WHERE clause to limit the search to the given namespaces
	 *
	 * @return String
	 * @private                           
	 */",
 "/**
	 * Return a LIMIT clause to limit results on the query.
	 *
	 * @param $sql string
	 *
	 * @return String
	 */",
 "/**
	 * Does not do anything for generic search engine
	 * subclasses may define this though
	 *
	 * @return String
	 */",
 "/**
	 * Construct the full SQL query to do the search.
	 * The guts shoulds be constructed in queryMain()
	 *
	 * @param $filteredTerm String
	 * @param $fulltext Boolean
	 */",
 "/**
	 * Picks which field to index on, depending on what type of query.
	 *
	 * @param $fulltext Boolean
	 * @return string
	 */",
 "/**
	 * Get the base part of the search query.
	 *
	 * @param $filteredTerm String
	 * @param $fulltext Boolean
	 * @return String
	 * @private
	 */",
 "/** @todo document */",
 "/**
	 * Create or update the search index record for the given page.
	 * Title and text should be pre-processed.
	 *
	 * @param $id Integer
	 * @param $title String
	 * @param $text String
	 */",
 "/**
	 * Update a search index record\'s title only.
	 * Title should be pre-processed.
	 *
	 * @param $id Integer
	 * @param $title String
	 */",
 "/**
 * Search engine hook base class for Mssql (ConText).
 * @ingroup Search
 */",
 "/**
 * @ingroup Search
 */",
 "/** @dataProvider providePlural */",
 "/** Tests for MediaWiki languages/classes/LanguageLn.php */",
 "/** Bakhtiari (??????????????)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Behdarvandyani
 * @author GerardM
 * @author Huji
 * @author Meno25
 */",
 "/**
	 * @param $count int
	 * @param $forms array
	 * @return string
	 */",
 "/** Croatian (hrvatski)
  *
  * @ingroup Language
  */",
 "/**
	 * Constructor
	 *
	 * @param $format String: feed\'s format (either \'rss\' or \'atom\')
	 * @param $type String: type of feed (for cache keys)
	 */",
 "/**
	 * Get a ChannelFeed subclass object to use
	 *
	 * @param $title String: feed\'s title
	 * @param $description String: feed\'s description
	 * @param $url String: url of origin page
	 * @return ChannelFeed subclass or false on failure
	 */",
 "/**
		 * Bumping around loading up diffs can be pretty slow, so where
		 * possible we want to cache the feed output so the next visitor
		 * gets it quick too.
		 */",
 "/**
	 * Generates feed\'s content
	 *
	 * @param $feed ChannelFeed subclass object (generally the one returned by getFeedObject())
	 * @param $rows ResultWrapper object with rows in recentchanges table
	 * @param $lastmod Integer: timestamp of the last item in the recentchanges table (only used for the cache key)
	 * @param $opts FormOptions as in SpecialRecentChanges::getDefaultOptions()
	 * @return null or true
	 */",
 "/**
	 * Save to feed result to $messageMemc
	 *
	 * @param $feed String: feed\'s content
	 * @param $timekey String: memcached key of the last modification
	 * @param $key String: memcached key of the content
	 */",
 "/**
			 * If the cached feed was rendered very recently, we may
			 * go ahead and use it even if there have been edits made
			 * since it was rendered. This keeps a swarm of requests
			 * from being too bad on a super-frequently edited wiki.
			 */",
 "/**
	 * Try to load the feed result from $messageMemc
	 *
	 * @param $lastmod Integer: timestamp of the last item in the recentchanges table
	 * @param $timekey String: memcached key of the last modification
	 * @param $key String: memcached key of the content
	 * @return feed\'s content on cache hit or false on cache miss
	 */",
 "/**
	 * Generate the feed items given a row from the database.
	 * @param $rows DatabaseBase resource with recentchanges rows
	 * @param $feed Feed object
	 */",
 "/**
 * Feed to Special:RecentChanges and Special:RecentChangesLiked
 *
 * @ingroup Feed
 */",
 "/** Maori (M??ori)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Iketsi
 * @author Kiharoa
 * @author Sonia
 */",
 "/**
	 * Insert a captcha prompt into the edit form.
	 * This sample implementation generates a simple arithmetic operation;
	 * it would be easy to defeat by machine.
	 *
	 * Override this!
	 *
	 * @return string HTML
	 */",
 "/**
	 * Insert the captcha prompt into an edit form.
	 * @param OutputPage $out
	 */",
 "/**
	 * Show a message asking the user to enter a captcha on edit
	 * The result will be treated as wiki text
	 *
	 * @param $action Action being performed
	 * @return string
	 */",
 "/**
	 * Inject whazawhoo
	 * @fixme if multiple thingies insert a header, could break
	 * @param $form HTMLForm
	 * @return bool true to keep running callbacks
	 */",
 "/**
	 * Inject whazawhoo
	 * @fixme if multiple thingies insert a header, could break
	 * @param QuickTemplate $template
	 * @return bool true to keep running callbacks
	 */",
 "/**
	 * Inject a captcha into the user login form after a failed
	 * password attempt as a speedbump for mass attacks.
	 * @fixme if multiple thingies insert a header, could break
	 * @param $template QuickTemplate
	 * @return bool true to keep running callbacks
	 */",
 "/**
	 * When a bad login attempt is made, increment an expiring counter
	 * in the memcache cloud. Later checks for this may trigger a
	 * captcha display to prevent too many hits from the same place.
	 * @param User $user
	 * @param string $password
	 * @param int $retval authentication return value
	 * @return bool true to keep running callbacks
	 */",
 "/**
	 * Check if a bad login has already been registered for this
	 * IP address. If so, require a captcha.
	 * @return bool
	 * @access private
	 */",
 "/**
	 * Check if the IP is allowed to skip captchas
	 */",
 "/**
	 * Internal cache key for badlogin checks.
	 * @return string
	 * @access private
	 */",
 "/**
	 * Check if the submitted form matches the captcha session data provided
	 * by the plugin when the form was generated.
	 *
	 * Override this!
	 *
	 * @param string $answer
	 * @param array $info
	 * @return bool
	 */",
 "/**
	 * @param EditPage $editPage
	 * @param string $action (edit/create/addurl...)
	 * @return bool true if action triggers captcha on editPage\'s namespace
	 */",
 "/**
	 * @param EditPage $editPage
	 * @param string $newtext
	 * @param string $section
	 * @return bool true if the captcha should run
	 */",
 "/**
	 * Filter callback function for URL whitelisting
	 * @param string url to check
	 * @return bool true if unknown, false if whitelisted
	 * @access private
	 */",
 "/**
	 * Build regex from whitelist
	 * @param string lines from [[MediaWiki:Captcha-addurl-whitelist]]
	 * @return string Regex or bool false if whitelist is empty
	 * @access private
	 */",
 "/**
	 * Load external links from the externallinks table
	 * @param $title Title
	 * @return Array
	 */",
 "/**
	 * Backend function for confirmEdit() and confirmEditAPI()
	 * @return bool false if the CAPTCHA is rejected, true otherwise
	 */",
 "/**
	 * The main callback run on edit attempts.
	 * @param EditPage $editPage
	 * @param string $newtext
	 * @param string $section
	 * @param bool $merged
	 * @return bool true to continue saving, false to abort and show a captcha form
	 */",
 "/**
	 * A more efficient edit filter callback based on the text after section merging
	 * @param EditPage $editPage
	 * @param string $newtext
	 */",
 "/**
	 * Hook for user creation form submissions.
	 * @param User $u
	 * @param string $message
	 * @return bool true to continue, false to abort user creation
	 */",
 "/**
	 * Hook for user login form submissions.
	 * @param User $u
	 * @param string $message
	 * @return bool true to continue, false to abort user creation
	 */",
 "/**
	 * Check the captcha on Special:EmailUser
	 * @param $from MailAddress
	 * @param $to MailAddress
	 * @param $subject String
	 * @param $text String
	 * @param $error String reference
	 * @return Bool true to continue saving, false to abort and show a captcha form
	 */",
 "/**
	 * @param $module ApiBase
	 * @param $params array
	 * @return bool
	 */",
 "/**
	 * @param $module ApiBae
	 * @param $desc array
	 * @return bool
	 */",
 "/**
	 * Given a required captcha run, test form input for correct
	 * input on the open session.
	 * @return bool if passed, false if failed or new session
	 */",
 "/**
	 * Log the status and any triggering info for debugging or statistics
	 * @param string $message
	 */",
 "/**
	 * Generate a captcha session ID and save the info in PHP\'s session storage.
	 * (Requires the user to have cookies enabled to get through the captcha.)
	 *
	 * A random ID is used so legit users can make edits in multiple tabs or
	 * windows without being unnecessarily hobbled by a serial order requirement.
	 * Pass the returned id value into the edit form as wpCaptchaId.
	 *
	 * @param array $info data to store
	 * @return string captcha ID key
	 */",
 "/**
	 * Fetch this session\'s captcha info.
	 * @return mixed array of info, or false if missing
	 */",
 "/**
	 * Clear out existing captcha info from the session, to ensure
	 * it can\'t be reused.
	 */",
 "/**
	 * Retrieve the current version of the page or section being edited...
	 * @param EditPage $editPage
	 * @param string $section
	 * @return string
	 * @access private
	 */",
 "/**
	 * Extract a list of all recognized HTTP links in the text.
	 * @param string $text
	 * @return array of strings
	 */",
 "/**
	 * Show a page explaining what this wacky thing is.
	 */",
 "/**
	 * Create a OldLocalFile from a SHA-1 key
	 * Do not call this except from inside a repo class.
	 *
	 * @param $sha1 string base-36 SHA-1
	 * @param $repo LocalRepo
	 * @param string|bool $timestamp MW_timestamp (optional)
	 *
	 * @return bool|OldLocalFile
	 */",
 "/**
	 * Fields in the oldimage table
	 */",
 "/**
	 * @param $title Title
	 * @param $repo FileRepo
	 * @param $time String: timestamp or null to load by archive name
	 * @param $archiveName String: archive name or null to load by timestamp
	 */",
 "/**
	 * @param $field Integer: one of DELETED_* bitfield constants
	 *               for file or revision rows
	 * @return bool
	 */",
 "/**
	 * Returns bitfield value
	 * @return int
	 */",
 "/**
	 * Determine if the current user is allowed to view a particular
	 * field of this image file, if it\'s marked as deleted.
	 *
	 * @param $field Integer
	 * @param $user User object to check, or null to use $wgUser
	 * @return bool
	 */",
 "/**
	 * Upload a file directly into archive. Generally for Special:Import.
	 * 
	 * @param $srcPath string File system path of the source file
	 * @param $archiveName string Full archive name of the file, in the form 
	 * 	$timestamp!$filename, where $filename must match $this->getName()
	 *
	 * @return FileRepoStatus
	 */",
 "/**
	 * Record a file upload in the oldimage table, without adding log entries.
	 * 
	 * @param $srcPath string File system path to the source file
	 * @param $archiveName string The archive name of the file
	 * @param $comment string Upload comment
	 * @param $user User User who did this upload
	 * @return bool
	 */",
 "/**
 * Class to represent a file in the oldimage table
 *
 * @ingroup FileAbstraction
 */",
 "/** Indonesian (Bahasa Indonesia)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author -iNu-
 * @author Aldnonymous
 * @author Anakmalaysia
 * @author ArdWar
 * @author Bennylin
 * @author Borgx
 * @author Farras
 * @author Gombang
 * @author Irwangatot
 * @author IvanLanin
 * @author Iwan Novirion
 * @author J Subhi
 * @author Kaganer
 * @author Kenrick95
 * @author McDutchie
 * @author Meursault2004
 * @author Remember the dot
 * @author Rex
 * @author Urhixidur
 * @author ???????? ????????????????
 */",
 "/** Canadian English (Canadian English)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Dantman
 * @author Techman224
 */",
 "/**
	 * @dataProvider provideCssCommentsFixtures
	 */",
 "/**
	 * Constructor. Parameters are:
	 *
	 *   - caches:   This should have a numbered array of cache parameter 
	 *               structures, in the style required by $wgObjectCaches. See
	 *               the documentation of $wgObjectCaches for more detail.
	 *
	 * @param $params array
	 */",
 "/**
	 * Delete objects expiring before a certain date. 
	 *
	 * Succeed if any of the child caches succeed.
	 */",
 "/**
 * A cache class that replicates all writes to multiple child caches. Reads 
 * are implemented by reading from the caches in the order they are given in 
 * the configuration until a cache gives a positive result.
 */",
 "/** Kashubian (Kasz??bsczi)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Iketsi
 * @author Kaszeba
 * @author Kuvaly
 * @author Leinad
 * @author MinuteElectron
 * @author Warszk
 * @author ???????? ????????????????
 */",
 "/**
	 * Build a new HTMLForm from an array of field attributes
	 * @param $descriptor Array of Field constructs, as described above
	 * @param $context IContextSource available since 1.18, will become compulsory in 1.18.
	 *     Obviates the need to call $form->setTitle()
	 * @param $messagePrefix String a prefix to go in front of default messages
	 */",
 "/**
	 * Add the HTMLForm-specific JavaScript, if it hasn\'t been
	 * done already.
	 * @deprecated since 1.18 load modules with ResourceLoader instead
	 */",
 "/**
	 * Initialise a new Object for the field
	 * @param $fieldname string
	 * @param $descriptor string input Descriptor, as described above
	 * @return HTMLFormField subclass
	 */",
 "/**
	 * Prepare form for submission
	 */",
 "/**
	 * Try submitting, with edit token check first
	 * @return Status|boolean
	 */",
 "/**
	 * The here\'s-one-I-made-earlier option: do the submission if
	 * posted, or display the form with or without funky valiation
	 * errors
	 * @return Bool or Status whether submission was successful.
	 */",
 "/**
	 * Validate all the fields, and call the submision callback
	 * function if everything is kosher.
	 * @return Mixed Bool true == Successful submission, Bool false
	 *	 == No submission attempted, anything else == Error to
	 *	 display.
	 */",
 "/**
	 * Set a callback to a function to do something with the form
	 * once it\'s been successfully validated.
	 * @param $cb String function name.  The function will be passed
	 *	 the output from HTMLForm::filterDataForSubmit, and must
	 *	 return Bool true on success, Bool false if no submission
	 *	 was attempted, or String HTML output to display on error.
	 */",
 "/**
	 * Set a message to display on a validation error.
	 * @param $msg Mixed String or Array of valid inputs to wfMsgExt()
	 *	 (so each entry can be either a String or Array)
	 */",
 "/**
	 * Set the introductory message, overwriting any existing message.
	 * @param $msg String complete text of message to display
	 */",
 "/**
	 * Set the introductory message, overwriting any existing message.
	 * @since 1.19
	 * @param $msg String complete text of message to display
	 */",
 "/**
	 * Add introductory text.
	 * @param $msg String complete text of message to display
	 */",
 "/**
	 * Add header text, inside the form.
	 * @param $msg String complete text of message to display
	 * @param $section string The section to add the header to
	 */",
 "/**
	 * Set header text, inside the form.
	 * @since 1.19
	 * @param $msg String complete text of message to display
	 * @param $section The section to add the header to
	 */",
 "/**
	 * Add footer text, inside the form.
	 * @param $msg String complete text of message to display
	 * @param $section string The section to add the footer text to
	 */",
 "/**
	 * Set footer text, inside the form.
	 * @since 1.19
	 * @param $msg String complete text of message to display
	 * @param $section string The section to add the footer text to
	 */",
 "/**
	 * Add text to the end of the display.
	 * @param $msg String complete text of message to display
	 */",
 "/**
	 * Set text at the end of the display.
	 * @param $msg String complete text of message to display
	 */",
 "/**
	 * Add a hidden field to the output
	 * @param $name String field name.  This will be used exactly as entered
	 * @param $value String field value
	 * @param $attribs Array
	 */",
 "/**
	 * Display the form (sending to $wgOut), with an appropriate error
	 * message or stack of messages, and any validation errors, etc.
	 * @param $submitResult Mixed output from HTMLForm::trySubmit()
	 */",
 "/**
	 * Returns the raw HTML generated by the form
	 * @param $submitResult Mixed output from HTMLForm::trySubmit()
	 * @return string
	 */",
 "/**
	 * Wrap the form innards in an actual <form> element
	 * @param $html String HTML contents to wrap.
	 * @return String wrapped HTML.
	 */",
 "/**
	 * Get the hidden fields that should go inside the form.
	 * @return String HTML.
	 */",
 "/**
	 * Get the submit and (potentially) reset buttons.
	 * @return String HTML.
	 */",
 "/**
	 * Get the whole body of the form.
	 * @return String
	 */",
 "/**
	 * Format and display an error message stack.
	 * @param $errors String|Array|Status
	 * @return String
	 */",
 "/**
	 * Format a stack of error messages into a single HTML string
	 * @param $errors Array of message keys/values
	 * @return String HTML, a <ul> list of errors
	 */",
 "/**
	 * Set the text for the submit button
	 * @param $t String plaintext.
	 */",
 "/**
	 * Set the text for the submit button to a message
	 * @since 1.19
	 * @param $msg String message key
	 */",
 "/**
	 * Get the text for the submit button, either customised or a default.
	 * @return unknown_type
	 */",
 "/**
	 * Set the id for the submit button.
	 * @param $t String.
	 * @todo FIXME: Integrity of $t is *not* validated
	 */",
 "/**
	 * Prompt the whole form to be wrapped in a <fieldset>, with
	 * this text as its <legend> element.
	 * @param $legend String HTML to go inside the <legend> element.
	 *	 Will be escaped
	 */",
 "/**
	 * Prompt the whole form to be wrapped in a <fieldset>, with
	 * this message as its <legend> element.
	 * @since 1.19
	 * @param $msg String message key
	 */",
 "/**
	 * Set the prefix for various default messages
	 * TODO: currently only used for the <fieldset> legend on forms
	 * with multiple sections; should be used elsewhre?
	 * @param $p String
	 */",
 "/**
	 * Set the title for form submission
	 * @param $t Title of page the form is on/should be posted to
	 */",
 "/**
	 * Get the title
	 * @return Title
	 */",
 "/**
	 * Set the method used to submit the form
	 * @param $method String
	 */",
 "/**
	 * TODO: Document
	 * @param $fields array[]|HTMLFormField[] array of fields (either arrays or objects)
	 * @param $sectionName string ID attribute of the <table> tag for this section, ignored if empty
	 * @param $fieldsetIDPrefix string ID prefix for the <fieldset> tag of each subsection, ignored if empty
	 * @return String
	 */",
 "/**
	 * Construct the form fields from the Descriptor array
	 */",
 "/**
	 * Stop a reset button being shown for this form
	 * @param $suppressReset Bool set to false to re-enable the
	 *	 button again
	 */",
 "/**
	 * Overload this if you want to apply special filtration routines
	 * to the form as a whole, after it\'s submitted but before it\'s
	 * processed.
	 * @param $data
	 * @return unknown_type
	 */",
 "/**
	 * Get a string to go in the <legend> of a section fieldset.  Override this if you
	 * want something more complicated
	 * @param $key String
	 * @return String
	 */",
 "/**
	 * Set the value for the action attribute of the form.
	 * When set to false (which is the default state), the set title is used.
	 *
	 * @since 1.19
	 *
	 * @param string|false $action
	 */",
 "/**
 * Object handling generic submission, CSRF protection, layout and
 * other logic for UI forms. in a reusable manner.
 *
 * In order to generate the form, the HTMLForm object takes an array
 * structure detailing the form fields available. Each element of the
 * array is a basic property-list, including the type of field, the
 * label it is to be given in the form, callbacks for validation and
 * \'filtering\', and other pertinent information.
 *
 * Field types are implemented as subclasses of the generic HTMLFormField
 * object, and typically implement at least getInputHTML, which generates
 * the HTML for the input field to be placed in the table.
 *
 * The constructor input is an associative array of $fieldname => $info,
 * where $info is an Associative Array with any of the following:
 *
 *	\'class\'               -- the subclass of HTMLFormField that will be used
 *	                         to create the object.  *NOT* the CSS class!
 *	\'type\'                -- roughly translates into the <select> type attribute.
 *	                         if \'class\' is not specified, this is used as a map
 *	                         through HTMLForm::$typeMappings to get the class name.
 *	\'default\'             -- default value when the form is displayed
 *	\'id\'                  -- HTML id attribute
 *	\'cssclass\'            -- CSS class
 *	\'options\'             -- varies according to the specific object.
 *	\'label-message\'       -- message key for a message to use as the label.
 *	                         can be an array of msg key and then parameters to
 *	                         the message.
 *	\'label\'               -- alternatively, a raw text message. Overridden by
 *	                         label-message
 *	\'help-message\'        -- message key for a message to use as a help text.
 *	                         can be an array of msg key and then parameters to
 *	                         the message.
 *	                         Overwrites \'help-messages\'.
 *	\'help-messages\'       -- array of message key. As above, each item can
 *	                         be an array of msg key and then parameters.
 *	                         Overwrites \'help-message\'.
 *	\'required\'            -- passed through to the object, indicating that it
 *	                         is a required field.
 *	\'size\'                -- the length of text fields
 *	\'filter-callback      -- a function name to give you the chance to
 *	                         massage the inputted value before it\'s processed.
 *	                         @see HTMLForm::filter()
 *	\'validation-callback\' -- a function name to give you the chance
 *	                         to impose extra validation on the field input.
 *	                         @see HTMLForm::validate()
 *	\'name\'                -- By default, the \'name\' attribute of the input field
 *	                         is \"wp{$fieldname}\".  If you want a different name
 *	                         (eg one without the \"wp\" prefix), specify it here and
 *	                         it will be used without modification.
 *
 * TODO: Document \'section\' / \'subsection\' stuff
 */",
 "/**
	 * This function must be implemented to return the HTML to generate
	 * the input object itself.  It should not implement the surrounding
	 * table cells/rows, or labels/help messages.
	 * @param $value String the value to set the input to; eg a default
	 *	 text for a text input.
	 * @return String valid HTML.
	 */",
 "/**
	 * Override this function to add specific validation checks on the
	 * field input.  Don\'t forget to call parent::validate() to ensure
	 * that the user-defined callback mValidationCallback is still run
	 * @param $value String the value the field was submitted with
	 * @param $alldata Array the data collected from the form
	 * @return Mixed Bool true on success, or String error to display.
	 */",
 "/**
	 * Should this field have a label, or is there no input element with the
	 * appropriate id for the label to point to?
	 *
	 * @return bool True to output a label, false to suppress
	 */",
 "/**
	 * Get the value that this input has been set to from a posted form,
	 * or the input\'s default value if it has not been set.
	 * @param $request WebRequest
	 * @return String the value
	 */",
 "/**
	 * Initialise the object
	 * @param $params array Associative Array. See HTMLForm doc for syntax.
	 */",
 "/**
	 * Get the complete table row for the input, including help text,
	 * labels, and whatever.
	 * @param $value String the value to set the input to.
	 * @return String complete HTML table row.
	 */",
 "/**
	 * Returns the attributes required for the tooltip and accesskey.
	 *
	 * @return array Attributes
	 */",
 "/**
	 * flatten an array of options to a single array, for instance,
	 * a set of <options> inside <optgroups>.
	 * @param $options array Associative Array with values either Strings
	 *	 or Arrays
	 * @return Array flattened input
	 */",
 "/**
	 * Formats one or more errors as accepted by field validation-callback.
	 * @param $errors String|Message|Array of strings or Message instances
	 * @return String html
	 * @since 1.18
	 */",
 "/**
 * The parent class to generate form fields.  Any field type should
 * be a subclass of this.
 */",
 "/**
 * A field that will contain a numeric value
 */",
 "/**
 * A field that must contain a number
 */",
 "/**
	 * For a checkbox, the label goes on the right hand side, and is
	 * added in getInputHTML(), rather than HTMLFormField::getRow()
	 * @return String
	 */",
 "/**
	 * @param  $request WebRequest
	 * @return String
	 */",
 "/**
 * A checkbox field
 */",
 "/**
 * A select dropdown field.  Basically a wrapper for Xmlselect class
 */",
 "/**
	 * @param  $request WebRequest
	 * @return String
	 */",
 "/**
 * Select dropdown field, with an additional \"other\" textbox.
 */",
 "/**
	 * @param  $request WebRequest
	 * @return String
	 */",
 "/**
 * Multi-select field
 */",
 "/**
	 * Build a drop-down box from a textual list.
	 * @param $string String message text
	 * @param $otherName String name of \"other reason\" option
	 * @return Array
	 * TODO: this is copied from Xml::listDropDown(), deprecate/avoid duplication?
	 */",
 "/**
	 * @param  $request WebRequest
	 * @return Array( <overall message>, <select value>, <text field value> )
	 */",
 "/**
 * Double field with a dropdown list constructed from a system message in the format
 *     * Optgroup header
 *     ** <option value>
 *     * New Optgroup header
 * Plus a text field underneath for an additional reason.  The \'value\' of the field is
 * \"\"<select>: <extra reason>\"\", or \"<extra reason>\" if nothing has been selected in the
 * select dropdown.
 * @todo FIXME: If made \'required\', only the text field should be compulsory.
 */",
 "/**
	 * This returns a block of all the radio options, in one cell.
	 * @see includes/HTMLFormField#getInputHTML()
	 * @param $value String
	 * @return String
	 */",
 "/**
 * Radio checkbox fields.
 */",
 "/**
 * An information field (text blob), not a proper input.
 */",
 "/**
	 * Button cannot be invalid
	 * @param $value String
	 * @param $alldata Array
	 * @return Bool
	 */",
 "/**
 * Add a submit button inline in the form (as opposed to
 * HTMLForm::addButton(), which will add it at the end).
 */",
 "/**
	 * Constructor.
	 *
	 * @param $siteName
	 * @param $admin
	 * @param $option Array
	 */",
 "/**
	 * Main entry point.
	 */",
 "/**
	 * Write LocalSettings.php to a given path
	 *
	 * @param $path String Full path to write LocalSettings.php to
	 */",
 "/**
	 * @param $params array
	 *
	 * @return string
	 */",
 "/**
	 * Dummy
	 */",
 "/**
 * Class for the core installer command line interface.
 *
 * @ingroup Deployment
 * @since 1.17
 */",
 "/**
	 * Constructor
	 * @param $query ApiQueryBase
	 * @param $resolveRedirects bool Whether redirects should be resolved
	 * @param $convertTitles bool
	 */",
 "/**
	 * Check whether this PageSet is resolving redirects
	 * @return bool
	 */",
 "/**
	 * Request an additional field from the page table. Must be called
	 * before execute()
	 * @param $fieldName string Field name
	 */",
 "/**
	 * Get the value of a custom field previously requested through
	 * requestField()
	 * @param $fieldName string Field name
	 * @return mixed Field value
	 */",
 "/**
	 * Get the fields that have to be queried from the page table:
	 * the ones requested through requestField() and a few basic ones
	 * we always need
	 * @return array of field names
	 */",
 "/**
	 * Returns an array [ns][dbkey] => page_id for all requested titles.
	 * page_id is a unique negative number in case title was not found.
	 * Invalid titles will also have negative page IDs and will be in namespace 0
	 * @return array
	 */",
 "/**
	 * All Title objects provided.
	 * @return array of Title objects
	 */",
 "/**
	 * Returns the number of unique pages (not revisions) in the set.
	 * @return int
	 */",
 "/**
	 * Title objects that were found in the database.
	 * @return array page_id (int) => Title (obj)
	 */",
 "/**
	 * Returns the number of found unique pages (not revisions) in the set.
	 * @return int
	 */",
 "/**
	 * Title objects that were NOT found in the database.
	 * The array\'s index will be negative for each item
	 * @return array of Title objects
	 */",
 "/**
	 * Titles that were deemed invalid by Title::newFromText()
	 * The array\'s index will be unique and negative for each item
	 * @return array of strings (not Title objects)
	 */",
 "/**
	 * Page IDs that were not found in the database
	 * @return array of page IDs
	 */",
 "/**
	 * Get a list of redirect resolutions - maps a title to its redirect
	 * target.
	 * @return array prefixed_title (string) => Title object
	 */",
 "/**
	 * Get a list of title normalizations - maps a title to its normalized
	 * version.
	 * @return array raw_prefixed_title (string) => prefixed_title (string)
	 */",
 "/**
	 * Get a list of title conversions - maps a title to its converted
	 * version.
	 * @return array raw_prefixed_title (string) => prefixed_title (string)
	 */",
 "/**
	 * Get a list of interwiki titles - maps a title to its interwiki
	 * prefix.
	 * @return array raw_prefixed_title (string) => interwiki_prefix (string)
	 */",
 "/**
	 * Get the list of revision IDs (requested with the revids= parameter)
	 * @return array revID (int) => pageID (int)
	 */",
 "/**
	 * Revision IDs that were not found in the database
	 * @return array of revision IDs
	 */",
 "/**
	 * Get the list of titles with negative namespace
	 * @return array Title
	 */",
 "/**
	 * Returns the number of revisions (requested with revids= parameter)\
	 * @return int
	 */",
 "/**
	 * Populate the PageSet from the request parameters.
	 */",
 "/**
	 * Populate this PageSet from a list of Titles
	 * @param $titles array of Title objects
	 */",
 "/**
	 * Populate this PageSet from a list of page IDs
	 * @param $pageIDs array of page IDs
	 */",
 "/**
	 * Populate this PageSet from a rowset returned from the database
	 * @param $db Database object
	 * @param $queryResult ResultWrapper Query result object
	 */",
 "/**
	 * Populate this PageSet from a list of revision IDs
	 * @param $revIDs array of revision IDs
	 */",
 "/**
	 * Extract all requested fields from the row received from the database
	 * @param $row Result row
	 */",
 "/**
	 * Resolve redirects, if applicable
	 */",
 "/**
	 * This method populates internal variables with page information
	 * based on the given array of title strings.
	 *
	 * Steps:
	 * #1 For each title, get data from `page` table
	 * #2 If page was not found in the DB, store it as missing
	 *
	 * Additionally, when resolving redirects:
	 * #3 If no more redirects left, stop.
	 * #4 For each redirect, get its target from the `redirect` table.
	 * #5 Substitute the original LinkBatch object with the new list
	 * #6 Repeat from step #1
	 *
	 * @param $titles array of Title objects or strings
	 */",
 "/**
	 * Does the same as initFromTitles(), but is based on page IDs instead
	 * @param $pageids array of page IDs
	 */",
 "/**
	 * Iterate through the result of the query on \'page\' table,
	 * and for each row create and store title object and save any extra fields requested.
	 * @param $res ResultWrapper DB Query result
	 * @param $remaining array of either pageID or ns/title elements (optional).
	 *        If given, any missing items will go to $mMissingPageIDs and $mMissingTitles
	 * @param $processTitles bool Must be provided together with $remaining.
	 *        If true, treat $remaining as an array of [ns][title]
	 *        If false, treat it as an array of [pageIDs]
	 */",
 "/**
	 * Does the same as initFromTitles(), but is based on revision IDs
	 * instead
	 * @param $revids array of revision IDs
	 */",
 "/**
	 * Resolve any redirects in the result if redirect resolution was
	 * requested. This function is called repeatedly until all redirects
	 * have been resolved.
	 */",
 "/**
	 * Get the targets of the pending redirects from the database
	 *
	 * Also creates entries in the redirect table for redirects that don\'t
	 * have one.
	 * @return LinkBatch
	 */",
 "/**
	 * Given an array of title strings, convert them into Title objects.
	 * Alternativelly, an array of Title objects may be given.
	 * This method validates access rights for the title,
	 * and appends normalization values to the output.
	 *
	 * @param $titles array of Title objects or strings
	 * @return LinkBatch
	 */",
 "/**
	 * Returns the input array of integers with all values < 0 removed
	 *
	 * @param $array array
	 * @return array
	 */",
 "/**
 * This class contains a list of pages that the client has requested.
 * Initially, when the client passes in titles=, pageids=, or revisions=
 * parameter, an instance of the ApiPageSet class will normalize titles,
 * determine if the pages/revisions exist, and prefetch any additional page
 * data requested.
 *
 * When a generator is used, the result of the generator will become the input
 * for the second instance of this class, and all subsequent actions will use
 * the second instance for all their work.
 *
 * @ingroup API
 */",
 "/**
	 * @param $count string
	 * @param $forms array
	 * @return string
	 */",
 "/**
	 * @param $_ string
	 * @return string
	 */",
 "/** Polish (polski)
 *
 * @ingroup Language
 */",
 "/**
	 * Run the job
	 * @return boolean success
	 */",
 "/**
	 * Pop a job of a certain type.  This tries less hard than pop() to
	 * actually find a job; it may be adversely affected by concurrent job
	 * runners.
	 *
	 * @param $type string
	 *
	 * @return Job
	 */",
 "/**
	 * Pop a job off the front of the queue
	 *
	 * @param $offset Integer: Number of jobs to skip
	 * @return Job or false if there\'s no jobs
	 */",
 "/**
	 * Create the appropriate object to handle a specific job
	 *
	 * @param $command String: Job command
	 * @param $title Title: Associated title
	 * @param $params Array: Job parameters
	 * @param $id Int: Job identifier
	 * @return Job
	 */",
 "/**
	 * @param $params
	 * @return string
	 */",
 "/**
	 * @param $blob
	 * @return bool|mixed
	 */",
 "/**
	 * Batch-insert a group of jobs into the queue.
	 * This will be wrapped in a transaction with a forced commit.
	 *
	 * This may add duplicate at insert time, but they will be
	 * removed later on, when the first one is popped.
	 *
	 * @param $jobs array of Job objects
	 */",
 "/**
	 * Insert a group of jobs into the queue.
	 *
	 * Same as batchInsert() but does not commit and can thus
	 * be rolled-back as part of a larger transaction. However,
	 * large batches of jobs can cause slave lag.
	 *
	 * @param $jobs array of Job objects
	 */",
 "/**
	 * @param $command
	 * @param $title
	 * @param $params array
	 * @param int $id
	 */",
 "/**
	 * Insert a single job into the queue.
	 * @return bool true on success
	 */",
 "/**
	 * @return array
	 */",
 "/**
	 * Remove jobs in the job queue which are duplicates of this job.
	 * This is deadlock-prone and so starts its own transaction.
	 */",
 "/**
	 * @return string
	 */",
 "/**
 * Class to both describe a background job and handle jobs.
 *
 * @ingroup JobQueue
 */",
 "/**
 * Internationalisation file for the reCAPTCHA module of the ConfirmEdit
 * extension.
 *
 * @addtogroup Extensions
*/",
 "/** Message documentation (Message documentation)
 * @author Umherirrender
 */",
 "/** Arabic (??????????????)
 * @author Alexknight12
 * @author Ciphers
 * @author Meno25
 */",
 "/** Asturian (Asturianu)
 * @author Xuacu
 */",
 "/** Belarusian (Tara??kievica orthography) (??????????????????????? (??????????????????????)???)
 * @author EugeneZelenko
 * @author Jim-by
 */",
 "/** Breton (Brezhoneg)
 * @author Fulup
 */",
 "/** Bosnian (Bosanski)
 * @author CERminator
 */",
 "/** Czech (??esky)
 * @author Jkjk
 * @author Mormegil
 */",
 "/** Welsh (Cymraeg)
 * @author Lloffiwr
 */",
 "/** German (Deutsch)
 * @author Kghbln
 * @author Umherirrender
 */",
 "/** German (formal address) (???Deutsch (Sie-Form)???)
 * @author Kghbln
 */",
 "/** Lower Sorbian (Dolnoserbski)
 * @author Michawiki
 */",
 "/** Spanish (Espa??ol)
 * @author Fitoschido
 */",
 "/** French (Fran??ais)
 * @author Urhixidur
 */",
 "/** Galician (Galego)
 * @author Toli??o
 */",
 "/** Swiss German (Alemannisch)
 * @author Als-Holder
 */",
 "/** Hebrew (??????????) */",
 "/** Upper Sorbian (Hornjoserbsce)
 * @author Michawiki
 */",
 "/** Interlingua (Interlingua)
 * @author McDutchie
 */",
 "/** Indonesian (Bahasa Indonesia)
 * @author IvanLanin
 */",
 "/** Italian (Italiano)
 * @author Nemo bis
 */",
 "/** Japanese (?????????)
 * @author Shirayuki
 */",
 "/** Korean (?????????)
 * @author ??????
 */",
 "/** Colognian (Ripoarisch)
 * @author Purodha
 */",
 "/** Luxembourgish (L??tzebuergesch)
 * @author Robby
 */",
 "/** Macedonian (????????????????????)
 * @author Bjankuloski06
 */",
 "/** Malay (Bahasa Melayu)
 * @author Anakmalaysia
 */",
 "/** Norwegian (bokm??l)??? (???Norsk (bokm??l)???)
 * @author Event
 */",
 "/** Dutch (Nederlands)
 * @author Siebrand
 */",
 "/** Polish (Polski) */",
 "/** Piedmontese (Piemont??is)
 * @author Borich??t
 * @author Dragon??t
 */",
 "/** Portuguese (Portugu??s)
 * @author Hamilton Abreu
 */",
 "/** Brazilian Portuguese (Portugu??s do Brasil) */",
 "/** Russian (??????????????)
 * @author ?????????????????? ??????????????
 */",
 "/** Serbian (Cyrillic script) (??????????????? (????????????????)???)
 * @author Rancher
 */",
 "/** Serbian (Latin script) (???Srpski (latinica)???) */",
 "/** Swedish (Svenska) */",
 "/** Swahili (Kiswahili)
 * @author Lloffiwr
 */",
 "/** Tagalog (Tagalog)
 * @author AnakngAraw
 */",
 "/** Ukrainian (????????????????????)
 * @author ????????
 */",
 "/** Vietnamese (Ti???ng Vi???t) */",
 "/** Simplified Chinese (?????????(??????)???)
 * @author Hydra
 * @author Hzy980512
 * @author Onecountry
 */",
 "/** Traditional Chinese (?????????(??????)???) */",
 "/**
	 * Builder method for the class
	 * @param $db DatabaseIbm_db2: Database interface
	 * @param $table String: table name
	 * @param $field String: column name
	 * @return IBM_DB2Field
	 */",
 "/**
	 * Get column name
	 * @return string column name
	 */",
 "/**
	 * Get table name
	 * @return string table name
	 */",
 "/**
	 * Get column type
	 * @return string column type
	 */",
 "/**
	 * Can column be null?
	 * @return bool true or false
	 */",
 "/**
	 * How much can you fit in the column per row?
	 * @return int length
	 */",
 "/**
 * This represents a column in a DB2 database
 * @ingroup Database
 */",
 "/**
 * Wrapper around binary large objects
 * @ingroup Database
 */",
 "/**
	 * Construct and initialize a wrapper for DB2 query results
	 * @param $db Database
	 * @param $result Object
	 * @param $num_rows Integer
	 * @param $sql String
	 * @param $columns Array
	 */",
 "/**
	 * Unwrap the DB2 query results
	 * @return mixed Object on success, false on failure
	 */",
 "/**
	 * Get the number of rows in the result set
	 * @return integer
	 */",
 "/**
	 * Return a row from the result set in object format
	 * @return mixed Object on success, false on failure.
	 */",
 "/**
	 * Return a row form the result set in array format
	 * @return mixed Array on success, false on failure
	 * @throws DBUnexpectedError
	 */",
 "/**
	 * Free a DB2 result object
	 * @throws DBUnexpectedError
	 */",
 "/**
 * Wrapper to address lack of certain operations in the DB2 driver
 *  ( seek, num_rows )
 * @ingroup Database
 * @since 1.19
 */",
 "/**
	 * Returns true if this database supports (and uses) cascading deletes
	 */",
 "/**
	 * Returns true if this database supports (and uses) triggers (e.g. on the
	 *  page table)
	 */",
 "/**
	 * Returns true if this database is strict about what can be put into an
	 *  IP field.
	 * Specifically, it uses a NULL value instead of an empty string.
	 */",
 "/**
	 * Returns true if this database uses timestamps rather than integers
	*/",
 "/**
	 * Returns true if this database does an implicit sort when doing GROUP BY
	 */",
 "/**
	 * Returns true if this database does an implicit order by when the column
	 *  has an index
	 * For example: SELECT page_title FROM page LIMIT 1
	 */",
 "/**
	 * Returns true if this database can do a native search on IP columns
	 * e.g. this works as expected: .. WHERE rc_ip = \'127.42.12.102/32\';
	 */",
 "/**
	 * Returns true if this database can use functional indexes
	 */",
 "/**
	 * Returns a unique string representing the wiki on the server
	 */",
 "/**
	 * Returns the database software identifieir
	 * @return string
	 */",
 "/** 
	 * Returns the database connection object
	 * @return Object
	 */",
 "/**
	 *
	 * @param $server String: hostname of database server
	 * @param $user String: username
	 * @param $password String: password
	 * @param $dbName String: database name on the server
	 * @param $flags Integer: database behaviour flags (optional, unused)
	 * @param $schema String
	 */",
 "/**
	 * Enables options only if the ibm_db2 extension version supports them
	 * @param $name String: name of the option in the options array
	 * @param $const String: name of the constant holding the right option value
	 * @param $type Integer: whether this is a Connection or Statement otion
	 */",
 "/**
	 * Outputs debug information in the appropriate place
	 * @param $string String: the relevant debug message
	 */",
 "/**
	 * Opens a database connection and returns it
	 * Closes any existing connection
	 *
	 * @param $server String: hostname
	 * @param $user String
	 * @param $password String
	 * @param $dbName String: database name
	 * @return a fresh connection
	 */",
 "/**
	 * Opens a cataloged database connection, sets mConn
	 */",
 "/**
	 * Opens an uncataloged database connection, sets mConn
	 */",
 "/**
	 * Closes a database connection, if it is open
	 * Returns success, true if already closed
	 */",
 "/**
	 * Retrieves the most current database error
	 * Forces a database rollback
	 */",
 "/**
	 * Get the last error number
	 * Return 0 if no error
	 * @return integer
	 */",
 "/**
	 * Is a database connection open?
	 * @return
	 */",
 "/**
	 * The DBMS-dependent part of query()
	 * @param  $sql String: SQL query.
	 * @return object Result object for fetch functions or false on failure
	 */",
 "/**
	 * @return string Version information from the database
	 */",
 "/**
	 * Queries whether a given table exists
	 * @return boolean
	 */",
 "/**
	 * Fetch the next row from the given result object, in object form.
	 * Fields can be retrieved with $row->fieldname, with fields acting like
	 * member variables.
	 *
	 * @param $res SQL result object as returned from Database::query(), etc.
	 * @return DB2 row object
	 * @throws DBUnexpectedError Thrown if the database returns an error
	 */",
 "/**
	 * Fetch the next row from the given result object, in associative array
	 * form. Fields are retrieved with $row[\'fieldname\'].
	 *
	 * @param $res SQL result object as returned from Database::query(), etc.
	 * @return DB2 row object
	 * @throws DBUnexpectedError Thrown if the database returns an error
	 */",
 "/**
	 * Escapes strings
	 * Doesn\'t escape numbers
	 *
	 * @param $s String: string to escape
	 * @return escaped string
	 */",
 "/**
	 * Verifies that a DB2 column/field type is numeric
	 *
	 * @param $type String: DB2 column type
	 * @return Boolean: true if numeric
	 */",
 "/**
	 * Alias for addQuotes()
	 * @param $s String: string to escape
	 * @return escaped string
	 */",
 "/**
	 * Switch into the database schema
	 */",
 "/**
	 * Start a transaction (mandatory)
	 */",
 "/**
	 * End a transaction
	 * Must have a preceding begin()
	 */",
 "/**
	 * Cancel a transaction
	 */",
 "/**
	 * Makes an encoded list of strings from an array
	 * $mode:
	 *   LIST_COMMA         - comma separated, no field names
	 *   LIST_AND           - ANDed WHERE clause (without the WHERE)
	 *   LIST_OR            - ORed WHERE clause (without the WHERE)
	 *   LIST_SET           - comma separated with field names, like a SET clause
	 *   LIST_NAMES         - comma separated field names
	 *   LIST_SET_PREPARED  - like LIST_SET, except with ? tokens as values
	 */",
 "/**
	 * Construct a LIMIT query with optional offset
	 * This is used for query pages
	 *
	 * @param $sql string SQL query we will append the limit too
	 * @param $limit integer the SQL limit
	 * @param $offset integer the SQL offset (default false)
	 */",
 "/**
	 * Handle reserved keyword replacement in table names
	 *
	 * @param $name Object
	 * @param $format String Ignored parameter Default \'quoted\'Boolean
	 * @return String
	 */",
 "/**
	 * Generates a timestamp in an insertable format
	 *
	 * @param $ts timestamp
	 * @return String: timestamp value
	 */",
 "/**
	 * Return the next in a sequence, save the value for retrieval via insertId()
	 * @param $seqName String: name of a defined sequence in the database
	 * @return next value in that sequence
	 */",
 "/**
	 * This must be called after nextSequenceVal
	 * @return Last sequence value used as a primary key
	 */",
 "/**
	 * Updates the mInsertId property with the value of the last insert
	 *  into a generated column
	 *
	 * @param $table      String: sanitized table name
	 * @param $primaryKey Mixed: string name of the primary key
	 * @param $stmt       Resource: prepared statement resource
	 *  of the SELECT primary_key FROM FINAL TABLE ( INSERT ... ) form
	 */",
 "/**
	 * INSERT wrapper, inserts an array into a table
	 *
	 * $args may be a single associative array, or an array of arrays
	 *  with numeric keys, for multi-row insert
	 *
	 * @param $table   String: Name of the table to insert to.
	 * @param $args    Array: Items to insert into the table.
	 * @param $fname   String: Name of the function, for profiling
	 * @param $options String or Array. Valid options: IGNORE
	 *
	 * @return bool Success of insert operation. IGNORE always returns true.
	 */",
 "/**
	 * Given a table name and a hash of columns with values
	 * Removes primary key columns from the hash where the value is NULL
	 *
	 * @param $table String: name of the table
	 * @param $args Array of hashes of column names with values
	 * @return Array: tuple( filtered array of columns, array of primary keys )
	 */",
 "/**
	 * UPDATE wrapper, takes a condition array and a SET array
	 *
	 * @param $table  String: The table to UPDATE
	 * @param $values An array of values to SET
	 * @param $conds  An array of conditions ( WHERE ). Use \'*\' to update all rows.
	 * @param $fname  String: The Class::Function calling this function
	 *                ( for the log )
	 * @param $options An array of UPDATE options, can be one or
	 *                 more of IGNORE, LOW_PRIORITY
	 * @return Boolean
	 */",
 "/**
	 * DELETE query wrapper
	 *
	 * Use $conds == \"*\" to delete all rows
	 */",
 "/**
	 * Returns the number of rows affected by the last query or 0
	 * @return Integer: the number of rows affected by the last query
	 */",
 "/**
	 * Returns the number of rows in the result set
	 * Has to be called right after the corresponding select query
	 * @param $res Object result set
	 * @return Integer: number of rows
	 */",
 "/**
	 * Moves the row pointer of the result set
	 * @param $res Object: result set
	 * @param $row Integer: row number
	 * @return success or failure
	 */",
 "/**
	 * Frees memory associated with a statement resource
	 * @param $res Object: statement resource to free
	 * @return Boolean success or failure
	 */",
 "/**
	 * Returns the number of columns in a resource
	 * @param $res Object: statement resource
	 * @return Number of fields/columns in resource
	 */",
 "/**
	 * Returns the nth column name
	 * @param $res Object: statement resource
	 * @param $n Integer: Index of field or column
	 * @return String name of nth column
	 */",
 "/**
	 * SELECT wrapper
	 *
	 * @param $table   Array or string, table name(s) (prefix auto-added)
	 * @param $vars    Array or string, field name(s) to be retrieved
	 * @param $conds   Array or string, condition(s) for WHERE
	 * @param $fname   String: calling function name (use __METHOD__)
	 *                 for logs/profiling
	 * @param $options Associative array of options
	 *                 (e.g. array( \'GROUP BY\' => \'page_title\' )),
	 *                 see Database::makeSelectOptions code for list of
	 *                 supported stuff
	 * @param $join_conds Associative array of table join conditions (optional)
	 *                    (e.g. array( \'page\' => array(\'LEFT JOIN\',
	 *                    \'page_latest=rev_id\') )
	 * @return Mixed: database result resource for fetch functions or false
	 *                 on failure
	 */",
 "/**
	 * Handles ordering, grouping, and having options (\'GROUP BY\' => colname)
	 * Has limited support for per-column options (colnum => \'DISTINCT\')
	 *
	 * @private
	 *
	 * @param $options Associative array of options to be turned into
	 *              an SQL query, valid keys are listed in the function.
	 * @return Array
	 */",
 "/**
	 * Returns link to IBM DB2 free download
	 * @return String: wikitext of a link to the server software\'s web site
	 */",
 "/**
	 * Get search engine class. All subclasses of this
	 * need to implement this if they wish to use searching.
	 *
	 * @return String
	 */",
 "/**
	 * Did the last database access fail because of deadlock?
	 * @return Boolean
	 */",
 "/**
	 * Ping the server and try to reconnect if it there is no connection
	 * The connection may be closed and reopened while this happens
	 * @return Boolean: whether the connection exists
	 */",
 "/**
	 * Not implemented
	 * @return string $sql
	 */",
 "/**
	 * Only useful with fake prepare like in base Database class
	 * @return	string
	 */",
 "/**
	 * Returns information about an index
	 * If errors are explicitly ignored, returns NULL on failure
	 * @param $table String: table name
	 * @param $index String: index name
	 * @param $fname String: function name for logging and profiling
	 * @return Object query row in object form
	 */",
 "/**
	 * Returns an information object on a table column
	 * @param $table String: table name
	 * @param $field String: column name
	 * @return IBM_DB2Field
	 */",
 "/**
	 * db2_field_type() wrapper
	 * @param $res Object: result of executed statement
	 * @param $index Mixed: number or name of the column
	 * @return String column type
	 */",
 "/**
	 * Verifies that an index was created as unique
	 * @param $table String: table name
	 * @param $index String: index name
	 * @param $fname function name for profiling
	 * @return Bool
	 */",
 "/**
	 * Returns the size of a text field, or -1 for \"unlimited\"
	 * @param $table String: table name
	 * @param $field String: column name
	 * @return Integer: length or -1 for unlimited
	 */",
 "/**
	 * Description is left as an exercise for the reader
	 * @param $b Mixed: data to be encoded
	 * @return IBM_DB2Blob
	 */",
 "/**
	 * Description is left as an exercise for the reader
	 * @param $b IBM_DB2Blob: data to be decoded
	 * @return mixed
	 */",
 "/**
	 * Convert into a list of string being concatenated
	 * @param $stringList Array: strings that need to be joined together
	 *                    by the SQL engine
	 * @return String: joined by the concatenation operator
	 */",
 "/**
	 * Generates the SQL required to convert a DB2 timestamp into a Unix epoch
	 * @param $column String: name of timestamp column
	 * @return String: SQL code
	 */",
 "/**
	 * Intended to be compatible with the PEAR::DB wrapper functions.
	 * http://pear.php.net/manual/en/package.database.db.intro-execute.php
	 *
	 * ? = scalar value, quoted as necessary
	 * ! = raw SQL bit (a function for instance)
	 * & = filename; reads the file and inserts as a blob
	 *     (we don\'t use this though...)
	 * @param $sql String: SQL statement with appropriate markers
	 * @param $func String: Name of the function, for profiling
	 * @return resource a prepared DB2 SQL statement
	 */",
 "/**
	 * Frees resources associated with a prepared statement
	 * @return Boolean success or failure
	 */",
 "/**
	 * Execute a prepared query with the various arguments
	 * @param $prepared String: the prepared sql
	 * @param $args Mixed: either an array here, or put scalars as varargs
	 * @return Resource: results object
	 */",
 "/**
	 * Prepare & execute an SQL statement, quoting and inserting arguments
	 * in the appropriate places.
	 * @param $query String
	 * @param $args ...
	 */",
 "/**
	 * For faking prepared SQL statements on DBs that don\'t support
	 * it directly.
	 * @param $preparedQuery String: a \'preparable\' SQL statement
	 * @param $args Array of arguments to fill it with
	 * @return String: executable statement
	 */",
 "/**
	 * Switches module between regular and install modes
	 */",
 "/**
	 * Bitwise negation of a column or value in SQL
	 * Same as (~field) in C
	 * @param $field String
	 * @return String
	 */",
 "/**
	 * Bitwise AND of two columns or values in SQL
	 * Same as (fieldLeft & fieldRight) in C
	 * @param $fieldLeft String
	 * @param $fieldRight String
	 * @return String
	 */",
 "/**
	 * Bitwise OR of two columns or values in SQL
	 * Same as (fieldLeft | fieldRight) in C
	 * @param $fieldLeft String
	 * @param $fieldRight String
	 * @return String
	 */",
 "/**
 * Primary database interface
 * @ingroup Database
 */",
 "/**
 * A special page listing redirects to redirecting page.
 * The software will automatically not follow double redirects, to prevent loops.
 *
 * @ingroup SpecialPage
 */",
 "/** Turkish (T??rk??e)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author 82-145
 * @author Bekiroflaz
 * @author Bombola
 * @author Cekli829
 * @author Dbl2010
 * @author Don Alessandro
 * @author Emperyan
 * @author Erkan Yilmaz
 * @author Fryed-peach
 * @author Goktr001
 * @author Hanberke
 * @author Incelemeelemani
 * @author Joseph
 * @author Kaganer
 * @author Karduelis
 * @author Katpatuka
 * @author Khutuck
 * @author LuCKY
 * @author Mach
 * @author Manco Capac
 * @author Metal Militia
 * @author Mirzali
 * @author Mskyrider
 * @author Myildirim2007
 * @author Runningfridgesrule
 * @author Srhat
 * @author Stultiwikia
 * @author Suelnur
 * @author Szoszv
 * @author Tarikozket
 * @author Tarkovsky
 * @author Universal Life
 * @author Urhixidur
 * @author U??ur Ba??ak
 * @author Vito Genovese
 * @author Vugar 1981
 * @author ???????? ????????????????
 */",
 "/** Cmique Itom (Cmique Itom)
 *
 * See MessagesQqq.php for message documentation incl. usage of parameters
 * To improve a translation please visit http://translatewiki.net
 *
 * @ingroup Language
 * @file
 *
 * @author Ccaxjoj Iteja Z Iti Poop
 * @author Kaganer
 * @author SeriCtam
 * @author Teak
 * @author Urhixidur
 */"
]
