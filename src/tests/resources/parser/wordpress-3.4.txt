 ["/**
 * Retrieve the author of the current post.
 *
 * @since 1.5
 * @uses $authordata The current author\'s DB object.
 * @uses apply_filters() Calls \'the_author\' hook on the author display name.
 *
 * @param string $deprecated Deprecated.
 * @return string The author\'s display name.
 */",
 "/**
 * Display the name of the author of the current post.
 *
 * The behavior of this function is based off of old functionality predating
 * get_the_author(). This function is not deprecated, but is designed to echo
 * the value from get_the_author() and as an result of any old theme that might
 * still use the old behavior will also pass the value from get_the_author().
 *
 * The normal, expected behavior of this function is to echo the author and not
 * return it. However, backwards compatibility has to be maintained.
 *
 * @since 0.71
 * @see get_the_author()
 * @link http://codex.wordpress.org/Template_Tags/the_author
 *
 * @param string $deprecated Deprecated.
 * @param string $deprecated_echo Deprecated. Use get_the_author(). Echo the string or return it.
 * @return string The author\'s display name, from get_the_author().
 */",
 "/**
 * Retrieve the author who last edited the current post.
 *
 * @since 2.8
 * @uses $post The current post\'s DB object.
 * @uses get_post_meta() Retrieves the ID of the author who last edited the current post.
 * @uses get_userdata() Retrieves the author\'s DB object.
 * @uses apply_filters() Calls \'the_modified_author\' hook on the author display name.
 * @return string The author\'s display name.
 */",
 "/**
 * Display the name of the author who last edited the current post.
 *
 * @since 2.8
 * @see get_the_author()
 * @return string The author\'s display name, from get_the_modified_author().
 */",
 "/**
 * Retrieve the requested data of the author of the current post.
 * @link http://codex.wordpress.org/Template_Tags/the_author_meta
 * @since 2.8.0
 * @uses $authordata The current author\'s DB object (if $user_id not specified).
 * @param string $field selects the field of the users record.
 * @param int $user_id Optional. User ID.
 * @return string The author\'s field from the current author\'s DB object.
 */",
 "/**
 * Retrieve the requested data of the author of the current post.
 * @link http://codex.wordpress.org/Template_Tags/the_author_meta
 * @since 2.8.0
 * @param string $field selects the field of the users record.
 * @param int $user_id Optional. User ID.
 * @echo string The author\'s field from the current author\'s DB object.
 */",
 "/**
 * Retrieve either author\'s link or author\'s name.
 *
 * If the author has a home page set, return an HTML link, otherwise just return the
 * author\'s name.
 *
 * @uses get_the_author_meta()
 * @uses get_the_author()
 */",
 "/**
 * Display either author\'s link or author\'s name.
 *
 * If the author has a home page set, echo an HTML link, otherwise just echo the
 * author\'s name.
 *
 * @link http://codex.wordpress.org/Template_Tags/the_author_link
 * @since 2.1
 * @uses get_the_author_link()
 */",
 "/**
 * Retrieve the number of posts by the author of the current post.
 *
 * @since 1.5
 * @uses $post The current post in the Loop\'s DB object.
 * @uses count_user_posts()
 * @return int The number of posts by the author.
 */",
 "/**
 * Display the number of posts by the author of the current post.
 *
 * @link http://codex.wordpress.org/Template_Tags/the_author_posts
 * @since 0.71
 * @uses get_the_author_posts() Echoes returned value from function.
 */",
 "/**
 * Display an HTML link to the author page of the author of the current post.
 *
 * Does just echo get_author_posts_url() function, like the others do. The
 * reason for this, is that another function is used to help in printing the
 * link to the author\'s posts.
 *
 * @link http://codex.wordpress.org/Template_Tags/the_author_posts_link
 * @since 1.2.0
 * @uses $authordata The current author\'s DB object.
 * @uses get_author_posts_url()
 * @uses get_the_author()
 * @param string $deprecated Deprecated.
 */",
 "/**
 * Retrieve the URL to the author page for the user with the ID provided.
 *
 * @since 2.1.0
 * @uses $wp_rewrite WP_Rewrite
 * @return string The URL to the author\'s page.
 */",
 "/**
 * List all the authors of the blog, with several options available.
 *
 * <ul>
 * <li>optioncount (boolean) (false): Show the count in parenthesis next to the
 * author\'s name.</li>
 * <li>exclude_admin (boolean) (true): Exclude the \'admin\' user that is
 * installed bydefault.</li>
 * <li>show_fullname (boolean) (false): Show their full names.</li>
 * <li>hide_empty (boolean) (true): Don\'t show authors without any posts.</li>
 * <li>feed (string) (\'\'): If isn\'t empty, show links to author\'s feeds.</li>
 * <li>feed_image (string) (\'\'): If isn\'t empty, use this image to link to
 * feeds.</li>
 * <li>echo (boolean) (true): Set to false to return the output, instead of
 * echoing.</li>
 * <li>style (string) (\'list\'): Whether to display list of authors in list form
 * or as a string.</li>
 * <li>html (bool) (true): Whether to list the items in html form or plaintext.
 * </li>
 * </ul>
 *
 * @link http://codex.wordpress.org/Template_Tags/wp_list_authors
 * @since 1.2.0
 * @param array $args The argument array.
 * @return null|string The output, if echo is set to false.
 */",
 "/**
 * Does this site have more than one author
 *
 * Checks to see if more than one author has published posts.
 *
 * @since 3.2.0
 * @return bool Whether or not we have more than one author
 */",
 "/**
 * Helper function to clear the cache for number of authors.
 *
 * @private
 */",
 "/**
	 * Spellchecks an array of words.
	 *
	 * @param {String} $lang Language code like sv or en.
	 * @param {Array} $words Array of words to spellcheck.
	 * @return {Array} Array of misspelled words.
	 */",
 "/**
	 * Returns suggestions of for a specific word.
	 *
	 * @param {String} $lang Language code like sv or en.
	 * @param {String} $word Specific word to get suggestions for.
	 * @return {Array} Array of suggestions for the specified word.
	 */",
 "/**
 * $Id: editor_plugin_src.js 201 2007-02-12 15:56:56Z spocke $
 *
 * @package MCManager.includes
 * @author Moxiecode
 * @copyright Copyright ? 2004-2007, Moxiecode Systems AB, All rights reserved.
 */",
 "/**
	 * Given a top level page ID, display the nested hierarchy of sub-pages
	 * together with paging support
	 *
	 * @since 3.1.0 (Standalone function exists since 2.6.0)
	 *
	 * @param unknown_type $children_pages
	 * @param unknown_type $count
	 * @param unknown_type $parent
	 * @param unknown_type $level
	 * @param unknown_type $pagenum
	 * @param unknown_type $per_page
	 */",
 "/**
	 * Outputs the hidden row displayed when inline editing
	 *
	 * @since 3.1.0
	 */",
 "/**
 * Posts List Table class.
 *
 * @package WordPress
 * @subpackage List_Table
 * @since 3.1.0
 * @access private
 */",
 "/**
 * Multisite Users List Table class.
 *
 * @package WordPress
 * @subpackage List_Table
 * @since 3.1.0
 * @access private
 */",
 "/**
		 * On really small MU installs run the upgrader every time,
		 * else run it less often to reduce load.
		 *
		 * @since 2.8.4b
		 */",
 "/**
 * Returns the initialized WP_Http Object
 *
 * @since 2.7.0
 * @access private
 *
 * @return WP_Http HTTP Transport object.
 */",
 "/**
 * Retrieve the raw response from the HTTP request.
 *
 * The array structure is a little complex.
 *
 * <code>
 * $res = array( \'headers\' => array(), \'response\' => array(\'code\' => int, \'message\' => string) );
 * </code>
 *
 * All of the headers in $res[\'headers\'] are with the name as the key and the
 * value as the value. So to get the User-Agent, you would do the following.
 *
 * <code>
 * $user_agent = $res[\'headers\'][\'user-agent\'];
 * </code>
 *
 * The body is the raw response content and can be retrieved from $res[\'body\'].
 *
 * This function is called first to make the request and there are other API
 * functions to abstract out the above convoluted setup.
 *
 * @since 2.7.0
 *
 * @param string $url Site URL to retrieve.
 * @param array $args Optional. Override the defaults.
 * @return WP_Error|array The response or WP_Error on failure.
 */",
 "/**
 * Retrieve the raw response from the HTTP request using the GET method.
 *
 * @see wp_remote_request() For more information on the response array format.
 *
 * @since 2.7.0
 *
 * @param string $url Site URL to retrieve.
 * @param array $args Optional. Override the defaults.
 * @return WP_Error|array The response or WP_Error on failure.
 */",
 "/**
 * Retrieve the raw response from the HTTP request using the POST method.
 *
 * @see wp_remote_request() For more information on the response array format.
 *
 * @since 2.7.0
 *
 * @param string $url Site URL to retrieve.
 * @param array $args Optional. Override the defaults.
 * @return WP_Error|array The response or WP_Error on failure.
 */",
 "/**
 * Retrieve the raw response from the HTTP request using the HEAD method.
 *
 * @see wp_remote_request() For more information on the response array format.
 *
 * @since 2.7.0
 *
 * @param string $url Site URL to retrieve.
 * @param array $args Optional. Override the defaults.
 * @return WP_Error|array The response or WP_Error on failure.
 */",
 "/**
 * Retrieve only the headers from the raw response.
 *
 * @since 2.7.0
 *
 * @param array $response HTTP response.
 * @return array The headers of the response. Empty array if incorrect parameter given.
 */",
 "/**
 * Retrieve a single header by name from the raw response.
 *
 * @since 2.7.0
 *
 * @param array $response
 * @param string $header Header name to retrieve value from.
 * @return string The header value. Empty string on if incorrect parameter given, or if the header doesn\'t exist.
 */",
 "/**
 * Retrieve only the response code from the raw response.
 *
 * Will return an empty array if incorrect parameter value is given.
 *
 * @since 2.7.0
 *
 * @param array $response HTTP response.
 * @return string the response code. Empty string on incorrect parameter given.
 */",
 "/**
 * Retrieve only the response message from the raw response.
 *
 * Will return an empty array if incorrect parameter value is given.
 *
 * @since 2.7.0
 *
 * @param array $response HTTP response.
 * @return string The response message. Empty string on incorrect parameter given.
 */",
 "/**
 * Retrieve only the body from the raw response.
 *
 * @since 2.7.0
 *
 * @param array $response HTTP response.
 * @return string The body of the response. Empty string if no body or incorrect parameter given.
 */",
 "/**
 * Determines if there is an HTTP Transport that can process this request.
 *
 * @since 3.2.0
 *
 * @param array  $capabilities Array of capabilities to test or a wp_remote_request() $args array.
 * @param string $url Optional. If given, will check if the URL requires SSL and adds that requirement to the capabilities array.
 *
 * @return bool
 */",
 "/**
 * Get the HTTP Origin of the current request.
 *
 * @since 3.4.0
 *
 * @return string URL of the origin. Empty string if no origin.
 */",
 "/**
 * Retrieve list of allowed http origins.
 *
 * @since 3.4.0
 *
 * @return array Array of origin URLs.
 */",
 "/**
 * Determines if the http origin is an authorized one.
 *
 * @since 3.4.0
 *
 * @param string Origin URL. If not provided, the value of get_http_origin() is used.
 * @return bool True if the origin is allowed. False otherwise.
 */",
 "/**
 * Send Access-Control-Allow-Origin and related headers if the current request
 * is from an allowed origin.
 *
 * @since 3.4.0
 *
 * @return bool|string Returns the origin URL if headers are sent. Returns false
 * if headers are not sent.
 */",
 "/**
     * Checks whether or not the supplied array is a struct or not
     *
     * @param unknown_type $array
     * @return boolean
     */",
 "/**
 * IXR_Value
 *
 * @package IXR
 * @since 1.5
 */",
 "/**
 * IXR_MESSAGE
 *
 * @package IXR
 * @since 1.5
 *
 */",
 "/**
 * IXR_Server
 *
 * @package IXR
 * @since 1.5
 */",
 "/**
 * IXR_Request
 *
 * @package IXR
 * @since 1.5
 */",
 "/**
 * IXR_Client
 *
 * @package IXR
 * @since 1.5
 *
 */",
 "/**
 * IXR_Error
 *
 * @package IXR
 * @since 1.5
 */",
 "/**
 * IXR_Date
 *
 * @package IXR
 * @since 1.5
 */",
 "/**
 * IXR_Base64
 *
 * @package IXR
 * @since 1.5
 */",
 "/**
 * IXR_IntrospectionServer
 *
 * @package IXR
 * @since 1.5
 */",
 "/**
 * IXR_ClientMulticall
 *
 * @package IXR
 * @since 1.5
 */",
 "/**
	 * Register all of the XMLRPC methods that XMLRPC server understands.
	 *
	 * Sets up server and method property. Passes XMLRPC
	 * methods through the \'xmlrpc_methods\' filter to allow plugins to extend
	 * or replace XMLRPC methods.
	 *
	 * @since 1.5.0
	 *
	 * @return wp_xmlrpc_server
	 */",
 "/**
	 * Test XMLRPC API by saying, \"Hello!\" to client.
	 *
	 * @since 1.5.0
	 *
	 * @param array $args Method Parameters.
	 * @return string
	 */",
 "/**
	 * Test XMLRPC API by adding two numbers for client.
	 *
	 * @since 1.5.0
	 *
	 * @param array $args Method Parameters.
	 * @return int
	 */",
 "/**
	 * Check user\'s credentials.
	 *
	 * @since 1.5.0
	 *
	 * @param string $user_login User\'s username.
	 * @param string $user_pass User\'s password.
	 * @return bool Whether authentication passed.
	 * @deprecated use wp_xmlrpc_server::login
	 * @see wp_xmlrpc_server::login
	 */",
 "/**
	 * Log user in.
	 *
	 * @since 2.8
	 *
	 * @param string $username User\'s username.
	 * @param string $password User\'s password.
	 * @return mixed WP_User object if authentication passed, false otherwise
	 */",
 "/**
	 * Sanitize string or array of strings for database.
	 *
	 * @since 1.5.2
	 *
	 * @param string|array $array Sanitize single string or array of strings.
	 * @return string|array Type matches $array and sanitized for the database.
	 */",
 "/**
	 * Retrieve custom fields for post.
	 *
	 * @since 2.5.0
	 *
	 * @param int $post_id Post ID.
	 * @return array Custom fields, if exist.
	 */",
 "/**
	 * Set custom fields for post.
	 *
	 * @since 2.5.0
	 *
	 * @param int $post_id Post ID.
	 * @param array $fields Custom fields.
	 */",
 "/**
	 * Set up blog options property.
	 *
	 * Passes property through \'xmlrpc_blog_options\' filter.
	 *
	 * @since 2.6.0
	 */",
 "/**
	 * Retrieve the blogs of the user.
	 *
	 * @since 2.6.0
	 *
	 * @param array $args Method parameters. Contains:
	 *  - username
	 *  - password
	 * @return array. Contains:
	 *  - \'isAdmin\'
	 *  - \'url\'
	 *  - \'blogid\'
	 *  - \'blogName\'
	 *  - \'xmlrpc\' - url of xmlrpc endpoint
	 */",
 "/**
	 * Checks if the method received at least the minimum number of arguments.
	 *
	 * @since 3.4.0
	 *
	 * @param string|array $args Sanitize single string or array of strings.
	 * @param int $count Minimum number of arguments.
	 * @return boolean if $args contains at least $count arguments.
	 */",
 "/**
	 * Prepares taxonomy data for return in an XML-RPC object.
	 *
	 * @access protected
	 *
	 * @param object $taxonomy The unprepared taxonomy data
	 * @param array $fields The subset of taxonomy fields to return
	 * @return array The prepared taxonomy data
	 */",
 "/**
	 * Prepares term data for return in an XML-RPC object.
	 *
	 * @access protected
	 *
	 * @param array|object $term The unprepared term data
	 * @return array The prepared term data
	 */",
 "/**
	 * Convert a WordPress date string to an IXR_Date object.
	 *
	 * @access protected
	 *
	 * @param string $date
	 * @return IXR_Date
	 */",
 "/**
	 * Convert a WordPress GMT date string to an IXR_Date object.
	 *
	 * @access protected
	 *
	 * @param string $date_gmt
	 * @param string $date
	 * @return IXR_Date
	 */",
 "/**
	 * Prepares post data for return in an XML-RPC object.
	 *
	 * @access protected
	 *
	 * @param array $post The unprepared post data
	 * @param array $fields The subset of post type fields to return
	 * @return array The prepared post data
	 */",
 "/**
	 * Prepares post data for return in an XML-RPC object.
	 *
	 * @access protected
	 *
	 * @param object $post_type Post type object
	 * @param array $fields The subset of post fields to return
	 * @return array The prepared post type data
	 */",
 "/**
	 * Prepares media item data for return in an XML-RPC object.
	 *
	 * @access protected
	 *
	 * @param object $media_item The unprepared media item data
	 * @param string $thumbnail_size The image size to use for the thumbnail URL
	 * @return array The prepared media item data
	 */",
 "/**
	 * Prepares page data for return in an XML-RPC object.
	 *
	 * @access protected
	 *
	 * @param object $page The unprepared page data
	 * @return array The prepared page data
	 */",
 "/**
	 * Prepares comment data for return in an XML-RPC object.
	 *
	 * @access protected
	 *
	 * @param object $comment The unprepared comment data
	 * @return array The prepared comment data
	 */",
 "/**
	 * Create a new post for any registered post type.
	 *
	 * @since 3.4.0
	 *
	 * @param array $args Method parameters. Contains:
	 *  - int     $blog_id
	 *  - string  $username
	 *  - string  $password
	 *  - array   $content_struct
	 *      $content_struct can contain:
	 *      - post_type (default: \'post\')
	 *      - post_status (default: \'draft\')
	 *      - post_title
	 *      - post_author
	 *      - post_exerpt
	 *      - post_content
	 *      - post_date_gmt | post_date
	 *      - post_format
	 *      - post_password
	 *      - comment_status - can be \'open\' | \'closed\'
	 *      - ping_status - can be \'open\' | \'closed\'
	 *      - sticky
	 *      - post_thumbnail - ID of a media item to use as the post thumbnail/featured image
	 *      - custom_fields - array, with each element containing \'key\' and \'value\'
	 *      - terms - array, with taxonomy names as keys and arrays of term IDs as values
	 *      - terms_names - array, with taxonomy names as keys and arrays of term names as values
	 *      - enclosure
	 *      - any other fields supported by wp_insert_post()
	 * @return string post_id
	 */",
 "/**
	 * Helper method for filtering out elements from an array.
	 *
	 * @since 3.4.0
	 *
	 * @param int $count Number to compare to one.
	 */",
 "/**
	 * Helper method for wp_newPost and wp_editPost, containing shared logic.
	 *
	 * @since 3.4.0
	 * @uses wp_insert_post()
	 *
	 * @param WP_User $user The post author if post_author isn\'t set in $content_struct.
	 * @param array $content_struct Post data to insert.
	 */",
 "/**
	 * Edit a post for any registered post type.
	 *
	 * The $content_struct parameter only needs to contain fields that
	 * should be changed. All other fields will retain their existing values.
	 *
	 * @since 3.4.0
	 *
	 * @param array $args Method parameters. Contains:
	 *  - int     $blog_id
	 *  - string  $username
	 *  - string  $password
	 *  - int     $post_id
	 *  - array   $content_struct
	 * @return true on success
	 */",
 "/**
	 * Delete a post for any registered post type.
	 *
	 * @since 3.4.0
	 *
	 * @uses wp_delete_post()
	 * @param array $args Method parameters. Contains:
	 *  - int     $blog_id
	 *  - string  $username
	 *  - string  $password
	 *  - int     $post_id
	 * @return true on success
	 */",
 "/**
	 * Retrieve a post.
	 *
	 * @since 3.4.0
	 *
	 * The optional $fields parameter specifies what fields will be included
	 * in the response array. This should be a list of field names. \'post_id\' will
	 * always be included in the response regardless of the value of $fields.
	 *
	 * Instead of, or in addition to, individual field names, conceptual group
	 * names can be used to specify multiple fields. The available conceptual
	 * groups are \'post\' (all basic fields), \'taxonomies\', \'custom_fields\',
	 * and \'enclosure\'.
	 *
	 * @uses wp_get_single_post()
	 * @param array $args Method parameters. Contains:
	 *  - int     $post_id
	 *  - string  $username
	 *  - string  $password
	 *  - array   $fields optional
	 * @return array contains (based on $fields parameter):
	 *  - \'post_id\'
	 *  - \'post_title\'
	 *  - \'post_date\'
	 *  - \'post_date_gmt\'
	 *  - \'post_modified\'
	 *  - \'post_modified_gmt\'
	 *  - \'post_status\'
	 *  - \'post_type\'
	 *  - \'post_name\'
	 *  - \'post_author\'
	 *  - \'post_password\'
	 *  - \'post_excerpt\'
	 *  - \'post_content\'
	 *  - \'link\'
	 *  - \'comment_status\'
	 *  - \'ping_status\'
	 *  - \'sticky\'
	 *  - \'custom_fields\'
	 *  - \'terms\'
	 *  - \'categories\'
	 *  - \'tags\'
	 *  - \'enclosure\'
	 */",
 "/**
	 * Retrieve posts.
	 *
	 * @since 3.4.0
	 *
	 * The optional $filter parameter modifies the query used to retrieve posts.
	 * Accepted keys are \'post_type\', \'post_status\', \'number\', \'offset\',
	 * \'orderby\', and \'order\'.
	 *
	 * The optional $fields parameter specifies what fields will be included
	 * in the response array.
	 *
	 * @uses wp_get_recent_posts()
	 * @see wp_getPost() for more on $fields
	 * @see get_posts() for more on $filter values
	 *
	 * @param array $args Method parameters. Contains:
	 *  - int     $blog_id
	 *  - string  $username
	 *  - string  $password
	 *  - array   $filter optional
	 *  - array   $fields optional
	 * @return array contains a collection of posts.
	 */",
 "/**
	 * Create a new term.
	 *
	 * @since 3.4.0
	 *
	 * @uses wp_insert_term()
	 * @param array $args Method parameters. Contains:
	 *  - int     $blog_id
	 *  - string  $username
	 *  - string  $password
	 *  - array   $content_struct
	 *      The $content_struct must contain:
	 *      - \'name\'
	 *      - \'taxonomy\'
	 *      Also, it can optionally contain:
	 *      - \'parent\'
	 *      - \'description\'
	 *      - \'slug\'
	 * @return string term_id
	 */",
 "/**
	 * Edit a term.
	 *
	 * @since 3.4.0
	 *
	 * @uses wp_update_term()
	 * @param array $args Method parameters. Contains:
	 *  - int     $blog_id
	 *  - string  $username
	 *  - string  $password
	 *  - string  $term_id
	 *  - array   $content_struct
	 *      The $content_struct must contain:
	 *      - \'taxonomy\'
	 *      Also, it can optionally contain:
	 *      - \'name\'
	 *      - \'parent\'
	 *      - \'description\'
	 *      - \'slug\'
	 * @return bool True, on success.
	 */",
 "/**
	 * Delete a term.
	 *
	 * @since 3.4.0
	 *
	 * @uses wp_delete_term()
	 * @param array $args Method parameters. Contains:
	 *  - int     $blog_id
	 *  - string  $username
	 *  - string  $password
	 *  - string  $taxnomy_name
	 *  - string     $term_id
	 * @return boolean|IXR_Error If it suceeded true else a reason why not
	 */",
 "/**
	 * Retrieve a term.
	 *
	 * @since 3.4.0
	 *
	 * @uses get_term()
	 * @param array $args Method parameters. Contains:
	 *  - int     $blog_id
	 *  - string  $username
	 *  - string  $password
	 *  - string  $taxonomy
	 *  - string  $term_id
	 * @return array contains:
	 *  - \'term_id\'
	 *  - \'name\'
	 *  - \'slug\'
	 *  - \'term_group\'
	 *  - \'term_taxonomy_id\'
	 *  - \'taxonomy\'
	 *  - \'description\'
	 *  - \'parent\'
	 *  - \'count\'
	 */",
 "/**
	 * Retrieve all terms for a taxonomy.
	 *
	 * @since 3.4.0
	 *
	 * The optional $filter parameter modifies the query used to retrieve terms.
	 * Accepted keys are \'number\', \'offset\', \'orderby\', \'order\', \'hide_empty\', and \'search\'.
	 *
	 * @uses get_terms()
	 * @param array $args Method parameters. Contains:
	 *  - int     $blog_id
	 *  - string  $username
	 *  - string  $password
	 *  - string  $taxonomy
	 *  - array   $filter optional
	 * @return array terms
	 */",
 "/**
	 * Retrieve a taxonomy.
	 *
	 * @since 3.4.0
	 *
	 * @uses get_taxonomy()
	 * @param array $args Method parameters. Contains:
	 *  - int     $blog_id
	 *  - string  $username
	 *  - string  $password
	 *  - string  $taxonomy
	 * @return array (@see get_taxonomy())
	 */",
 "/**
	 * Retrieve all taxonomies.
	 *
	 * @since 3.4.0
	 *
	 * @uses get_taxonomies()
	 * @param array $args Method parameters. Contains:
	 *  - int     $blog_id
	 *  - string  $username
	 *  - string  $password
	 * @return array taxonomies
	 */",
 "/**
	 * Retrieve page.
	 *
	 * @since 2.2.0
	 *
	 * @param array $args Method parameters. Contains:
	 *  - blog_id
	 *  - page_id
	 *  - username
	 *  - password
	 * @return array
	 */",
 "/**
	 * Retrieve Pages.
	 *
	 * @since 2.2.0
	 *
	 * @param array $args Method parameters. Contains:
	 *  - blog_id
	 *  - username
	 *  - password
	 *  - num_pages
	 * @return array
	 */",
 "/**
	 * Create new page.
	 *
	 * @since 2.2.0
	 *
	 * @param array $args Method parameters. See {@link wp_xmlrpc_server::mw_newPost()}
	 * @return unknown
	 */",
 "/**
	 * Delete page.
	 *
	 * @since 2.2.0
	 *
	 * @param array $args Method parameters.
	 * @return bool True, if success.
	 */",
 "/**
	 * Edit page.
	 *
	 * @since 2.2.0
	 *
	 * @param array $args Method parameters.
	 * @return unknown
	 */",
 "/**
	 * Retrieve page list.
	 *
	 * @since 2.2.0
	 *
	 * @param array $args Method parameters.
	 * @return unknown
	 */",
 "/**
	 * Retrieve authors list.
	 *
	 * @since 2.2.0
	 *
	 * @param array $args Method parameters.
	 * @return array
	 */",
 "/**
	 * Get list of all tags
	 *
	 * @since 2.7.0
	 *
	 * @param array $args Method parameters.
	 * @return array
	 */",
 "/**
	 * Create new category.
	 *
	 * @since 2.2.0
	 *
	 * @param array $args Method parameters.
	 * @return int Category ID.
	 */",
 "/**
	 * Remove category.
	 *
	 * @since 2.5.0
	 *
	 * @param array $args Method parameters.
	 * @return mixed See {@link wp_delete_term()} for return info.
	 */",
 "/**
	 * Retrieve category list.
	 *
	 * @since 2.2.0
	 *
	 * @param array $args Method parameters.
	 * @return array
	 */",
 "/**
	 * Retrieve comment.
	 *
	 * @since 2.7.0
	 *
	 * @param array $args Method parameters.
	 * @return array
	 */",
 "/**
	 * Retrieve comments.
	 *
	 * Besides the common blog_id, username, and password arguments, it takes a filter
	 * array as last argument.
	 *
	 * Accepted \'filter\' keys are \'status\', \'post_id\', \'offset\', and \'number\'.
	 *
	 * The defaults are as follows:
	 * - \'status\' - Default is \'\'. Filter by status (e.g., \'approve\', \'hold\')
	 * - \'post_id\' - Default is \'\'. The post where the comment is posted. Empty string shows all comments.
	 * - \'number\' - Default is 10. Total number of media items to retrieve.
	 * - \'offset\' - Default is 0. See {@link WP_Query::query()} for more.
	 *
	 * @since 2.7.0
	 *
	 * @param array $args Method parameters.
	 * @return array. Contains a collection of comments. See {@link wp_xmlrpc_server::wp_getComment()} for a description of each item contents
	 */",
 "/**
	 * Delete a comment.
	 *
	 * By default, the comment will be moved to the trash instead of deleted.
	 * See {@link wp_delete_comment()} for more information on
	 * this behavior.
	 *
	 * @since 2.7.0
	 *
	 * @param array $args Method parameters. Contains:
	 *  - blog_id
	 *  - username
	 *  - password
	 *  - comment_id
	 * @return mixed {@link wp_delete_comment()}
	 */",
 "/**
	 * Edit comment.
	 *
	 * Besides the common blog_id, username, and password arguments, it takes a
	 * comment_id integer and a content_struct array as last argument.
	 *
	 * The allowed keys in the content_struct array are:
	 *  - \'author\'
	 *  - \'author_url\'
	 *  - \'author_email\'
	 *  - \'content\'
	 *  - \'date_created_gmt\'
	 *  - \'status\'. Common statuses are \'approve\', \'hold\', \'spam\'. See {@link get_comment_statuses()} for more details
	 *
	 * @since 2.7.0
	 *
	 * @param array $args. Contains:
	 *  - blog_id
	 *  - username
	 *  - password
	 *  - comment_id
	 *  - content_struct
	 * @return bool True, on success.
	 */",
 "/**
	 * Create new comment.
	 *
	 * @since 2.7.0
	 *
	 * @param array $args Method parameters.
	 * @return mixed {@link wp_new_comment()}
	 */",
 "/**
	 * Retrieve all of the comment status.
	 *
	 * @since 2.7.0
	 *
	 * @param array $args Method parameters.
	 * @return array
	 */",
 "/**
	 * Retrieve comment count.
	 *
	 * @since 2.5.0
	 *
	 * @param array $args Method parameters.
	 * @return array
	 */",
 "/**
	 * Retrieve post statuses.
	 *
	 * @since 2.5.0
	 *
	 * @param array $args Method parameters.
	 * @return array
	 */",
 "/**
	 * Retrieve page statuses.
	 *
	 * @since 2.5.0
	 *
	 * @param array $args Method parameters.
	 * @return array
	 */",
 "/**
	 * Retrieve page templates.
	 *
	 * @since 2.6.0
	 *
	 * @param array $args Method parameters.
	 * @return array
	 */",
 "/**
	 * Retrieve blog options.
	 *
	 * @since 2.6.0
	 *
	 * @param array $args Method parameters.
	 * @return array
	 */",
 "/**
	 * Retrieve blog options value from list.
	 *
	 * @since 2.6.0
	 *
	 * @param array $options Options to retrieve.
	 * @return array
	 */",
 "/**
	 * Update blog options.
	 *
	 * @since 2.6.0
	 *
	 * @param array $args Method parameters.
	 * @return unknown
	 */",
 "/**
	 * Retrieve a media item by ID
	 *
	 * @since 3.1.0
	 *
	 * @param array $args Method parameters. Contains:
	 *  - blog_id
	 *  - username
	 *  - password
	 *  - attachment_id
	 * @return array. Associative array containing:
	 *  - \'date_created_gmt\'
	 *  - \'parent\'
	 *  - \'link\'
	 *  - \'thumbnail\'
	 *  - \'title\'
	 *  - \'caption\'
	 *  - \'description\'
	 *  - \'metadata\'
	 */",
 "/**
	 * Retrieves a collection of media library items (or attachments)
	 *
	 * Besides the common blog_id, username, and password arguments, it takes a filter
	 * array as last argument.
	 *
	 * Accepted \'filter\' keys are \'parent_id\', \'mime_type\', \'offset\', and \'number\'.
	 *
	 * The defaults are as follows:
	 * - \'number\' - Default is 5. Total number of media items to retrieve.
	 * - \'offset\' - Default is 0. See {@link WP_Query::query()} for more.
	 * - \'parent_id\' - Default is \'\'. The post where the media item is attached. Empty string shows all media items. 0 shows unattached media items.
	 * - \'mime_type\' - Default is \'\'. Filter by mime type (e.g., \'image/jpeg\', \'application/pdf\')
	 *
	 * @since 3.1.0
	 *
	 * @param array $args Method parameters. Contains:
	 *  - blog_id
	 *  - username
	 *  - password
	 *  - filter
	 * @return array. Contains a collection of media items. See {@link wp_xmlrpc_server::wp_getMediaItem()} for a description of each item contents
	 */",
 "/**
	  * Retrieves a list of post formats used by the site
	  *
	  * @since 3.1
	  *
	  * @param array $args Method parameters. Contains:
	  *  - blog_id
	  *  - username
	  *  - password
	  * @return array
	  */",
 "/**
	 * Retrieves a post type
	 *
	 * @since 3.4.0
	 *
	 * @uses get_post_type_object()
	 * @param array $args Method parameters. Contains:
	 *  - int     $blog_id
	 *  - string  $username
	 *  - string  $password
	 *  - string  $post_type_name
	 *  - array   $fields
	 * @return array contains:
	 *  - \'labels\'
	 *  - \'description\'
	 *  - \'capability_type\'
	 *  - \'cap\'
	 *  - \'map_meta_cap\'
	 *  - \'hierarchical\'
	 *  - \'menu_position\'
	 *  - \'taxonomies\'
	 *  - \'supports\'
	 */",
 "/**
	 * Retrieves a post types
	 *
	 * @since 3.4.0
	 *
	 * @uses get_post_types()
	 * @param array $args Method parameters. Contains:
	 *  - int     $blog_id
	 *  - string  $username
	 *  - string  $password
	 *  - array   $filter
	 *  - array   $fields
	 * @return array
	 */",
 "/**
	 * Retrieve blogs that user owns.
	 *
	 * Will make more sense once we support multiple blogs.
	 *
	 * @since 1.5.0
	 *
	 * @param array $args Method parameters.
	 * @return array
	 */",
 "/**
	 * Private function for retrieving a users blogs for multisite setups
	 *
	 * @access protected
	 */",
 "/**
	 * Retrieve user\'s data.
	 *
	 * Gives your client some info about you, so you don\'t have to.
	 *
	 * @since 1.5.0
	 *
	 * @param array $args Method parameters.
	 * @return array
	 */",
 "/**
	 * Retrieve post.
	 *
	 * @since 1.5.0
	 *
	 * @param array $args Method parameters.
	 * @return array
	 */",
 "/**
	 * Retrieve list of recent posts.
	 *
	 * @since 1.5.0
	 *
	 * @param array $args Method parameters.
	 * @return array
	 */",
 "/**
	 * Retrieve blog_filename content.
	 *
	 * @since 1.5.0
	 *
	 * @param array $args Method parameters.
	 * @return string
	 */",
 "/**
	 * Updates the content of blog_filename.
	 *
	 * @since 1.5.0
	 *
	 * @param array $args Method parameters.
	 * @return bool True when done.
	 */",
 "/**
	 * Create new post.
	 *
	 * @since 1.5.0
	 *
	 * @param array $args Method parameters.
	 * @return int
	 */",
 "/**
	 * Edit a post.
	 *
	 * @since 1.5.0
	 *
	 * @param array $args Method parameters.
	 * @return bool true when done.
	 */",
 "/**
	 * Remove a post.
	 *
	 * @since 1.5.0
	 *
	 * @param array $args Method parameters.
	 * @return bool True when post is deleted.
	 */",
 "/**
	 * Create a new post.
	 *
	 * The \'content_struct\' argument must contain:
	 *  - title
	 *  - description
	 *  - mt_excerpt
	 *  - mt_text_more
	 *  - mt_keywords
	 *  - mt_tb_ping_urls
	 *  - categories
	 *
	 * Also, it can optionally contain:
	 *  - wp_slug
	 *  - wp_password
	 *  - wp_page_parent_id
	 *  - wp_page_order
	 *  - wp_author_id
	 *  - post_status | page_status - can be \'draft\', \'private\', \'publish\', or \'pending\'
	 *  - mt_allow_comments - can be \'open\' or \'closed\'
	 *  - mt_allow_pings - can be \'open\' or \'closed\'
	 *  - date_created_gmt
	 *  - dateCreated
	 *  - wp_post_thumbnail
	 *
	 * @since 1.5.0
	 *
	 * @param array $args Method parameters. Contains:
	 *  - blog_id
	 *  - username
	 *  - password
	 *  - content_struct
	 *  - publish
	 * @return int
	 */",
 "/**
	 * Attach upload to a post.
	 *
	 * @since 2.1.0
	 *
	 * @param int $post_ID Post ID.
	 * @param string $post_content Post Content for attachment.
	 */",
 "/**
	 * Edit a post.
	 *
	 * @since 1.5.0
	 *
	 * @param array $args Method parameters.
	 * @return bool True on success.
	 */",
 "/**
	 * Retrieve post.
	 *
	 * @since 1.5.0
	 *
	 * @param array $args Method parameters.
	 * @return array
	 */",
 "/**
	 * Retrieve list of recent posts.
	 *
	 * @since 1.5.0
	 *
	 * @param array $args Method parameters.
	 * @return array
	 */",
 "/**
	 * Retrieve the list of categories on a given blog.
	 *
	 * @since 1.5.0
	 *
	 * @param array $args Method parameters.
	 * @return array
	 */",
 "/**
	 * Uploads a file, following your settings.
	 *
	 * Adapted from a patch by Johann Richard.
	 *
	 * @link http://mycvs.org/archives/2004/06/30/file-upload-to-wordpress-in-ecto/
	 *
	 * @since 1.5.0
	 *
	 * @param array $args Method parameters.
	 * @return array
	 */",
 "/**
	 * Retrieve the post titles of recent posts.
	 *
	 * @since 1.5.0
	 *
	 * @param array $args Method parameters.
	 * @return array
	 */",
 "/**
	 * Retrieve list of all categories on blog.
	 *
	 * @since 1.5.0
	 *
	 * @param array $args Method parameters.
	 * @return array
	 */",
 "/**
	 * Retrieve post categories.
	 *
	 * @since 1.5.0
	 *
	 * @param array $args Method parameters.
	 * @return array
	 */",
 "/**
	 * Sets categories for a post.
	 *
	 * @since 1.5.0
	 *
	 * @param array $args Method parameters.
	 * @return bool True on success.
	 */",
 "/**
	 * Retrieve an array of methods supported by this server.
	 *
	 * @since 1.5.0
	 *
	 * @param array $args Method parameters.
	 * @return array
	 */",
 "/**
	 * Retrieve an empty array because we don\'t support per-post text filters.
	 *
	 * @since 1.5.0
	 *
	 * @param array $args Method parameters.
	 */",
 "/**
	 * Retrieve trackbacks sent to a given post.
	 *
	 * @since 1.5.0
	 *
	 * @param array $args Method parameters.
	 * @return mixed
	 */",
 "/**
	 * Sets a post\'s publish status to \'publish\'.
	 *
	 * @since 1.5.0
	 *
	 * @param array $args Method parameters.
	 * @return int
	 */",
 "/**
	 * Retrieves a pingback and registers it.
	 *
	 * @since 1.5.0
	 *
	 * @param array $args Method parameters.
	 * @return array
	 */",
 "/**
	 * Retrieve array of URLs that pingbacked the given URL.
	 *
	 * Specs on http://www.aquarionics.com/misc/archives/blogite/0198.html
	 *
	 * @since 1.5.0
	 *
	 * @param array $args Method parameters.
	 * @return array
	 */",
 "/**
 * WordPress XMLRPC server implementation.
 *
 * Implements compatibility for Blogger API, MetaWeblog API, MovableType, and
 * pingback. Additional WordPress API for managing comments, pages, posts,
 * options, etc.
 *
 * Since WordPress 2.6.0, WordPress XMLRPC server can be disabled in the
 * administration panels.
 *
 * @package WordPress
 * @subpackage Publishing
 * @since 1.5.0
 */",
 "/**
     * Computes diffs between sequences of strings.
     *
     * @param string $engine     Name of the diffing engine to use.  \'auto\'
     *                           will automatically select the best.
     * @param array $params      Parameters to pass to the diffing engine.
     *                           Normally an array of two arrays, each
     *                           containing the lines from a file.
     */",
 "/**
     * Returns the array of differences.
     */",
 "/**
     * returns the number of new (added) lines in a given diff.
     *
     * @since Text_Diff 1.1.0
     *
     * @return integer The number of new lines
     */",
 "/**
     * Returns the number of deleted (removed) lines in a given diff.
     *
     * @since Text_Diff 1.1.0
     *
     * @return integer The number of deleted lines
     */",
 "/**
     * Computes a reversed diff.
     *
     * Example:
     * <code>
     * $diff = new Text_Diff($lines1, $lines2);
     * $rev = $diff->reverse();
     * </code>
     *
     * @return Text_Diff  A Diff object representing the inverse of the
     *                    original diff.  Note that we purposely don\'t return a
     *                    reference here, since this essentially is a clone()
     *                    method.
     */",
 "/**
     * Checks for an empty diff.
     *
     * @return boolean  True if two sequences were identical.
     */",
 "/**
     * Computes the length of the Longest Common Subsequence (LCS).
     *
     * This is mostly for diagnostic purposes.
     *
     * @return integer  The length of the LCS.
     */",
 "/**
     * Gets the original set of lines.
     *
     * This reconstructs the $from_lines parameter passed to the constructor.
     *
     * @return array  The original sequence of strings.
     */",
 "/**
     * Gets the final set of lines.
     *
     * This reconstructs the $to_lines parameter passed to the constructor.
     *
     * @return array  The sequence of strings.
     */",
 "/**
     * Removes trailing newlines from a line of text. This is meant to be used
     * with array_walk().
     *
     * @param string $line  The line to trim.
     * @param integer $key  The index of the line in the array. Not used.
     */",
 "/**
     * Determines the location of the system temporary directory.
     *
     * @static
     *
     * @access protected
     *
     * @return string  A directory name which can be used for temp files.
     *                 Returns false if one could not be found.
     */",
 "/**
     * Checks a diff for validity.
     *
     * This is here only for debugging purposes.
     */",
 "/**
 * General API for generating and formatting diffs - the differences between
 * two sequences of strings.
 *
 * The original PHP version of this code was written by Geoffrey T. Dairiki
 * <dairiki@dairiki.org>, and is used/adapted with his permission.
 *
 * Copyright 2004 Geoffrey T. Dairiki <dairiki@dairiki.org>
 * Copyright 2004-2010 The Horde Project (http://www.horde.org/)
 *
 * See the enclosed file COPYING for license information (LGPL). If you did
 * not receive this file, see http://opensource.org/licenses/lgpl-license.php.
 *
 * @package Text_Diff
 * @author  Geoffrey T. Dairiki <dairiki@dairiki.org>
 */",
 "/**
     * Computes a diff between sequences of strings.
     *
     * This can be used to compute things like case-insensitve diffs, or diffs
     * which ignore changes in white-space.
     *
     * @param array $from_lines         An array of strings.
     * @param array $to_lines           An array of strings.
     * @param array $mapped_from_lines  This array should have the same size
     *                                  number of elements as $from_lines.  The
     *                                  elements in $mapped_from_lines and
     *                                  $mapped_to_lines are what is actually
     *                                  compared when computing the diff.
     * @param array $mapped_to_lines    This array should have the same number
     *                                  of elements as $to_lines.
     */",
 "/**
 * @package Text_Diff
 * @author  Geoffrey T. Dairiki <dairiki@dairiki.org>
 */",
 "/**
 * @package Text_Diff
 * @author  Geoffrey T. Dairiki <dairiki@dairiki.org>
 *
 * @access private
 */",
 "/**
 * @package Text_Diff
 * @author  Geoffrey T. Dairiki <dairiki@dairiki.org>
 *
 * @access private
 */",
 "/**
 * @package Text_Diff
 * @author  Geoffrey T. Dairiki <dairiki@dairiki.org>
 *
 * @access private
 */",
 "/**
 * @package Text_Diff
 * @author  Geoffrey T. Dairiki <dairiki@dairiki.org>
 *
 * @access private
 */",
 "/**
 * @package Text_Diff
 * @author  Geoffrey T. Dairiki <dairiki@dairiki.org>
 *
 * @access private
 */",
 "/**
 * Entire Post data.
 *
 * @since 0.71
 * @deprecated 1.5.1
 * @deprecated Use get_post()
 * @see get_post()
 *
 * @param int $postid
 * @return array
 */",
 "/**
 * Sets up the WordPress Loop.
 *
 * @since 1.0.1
 * @deprecated 1.5
 * @deprecated Use The Loop - {@link http://codex.wordpress.org/The_Loop Use new WordPress Loop}
 */",
 "/**
 * Return or Print Category ID.
 *
 * @since 0.71
 * @deprecated 0.71
 * @deprecated use get_the_category()
 * @see get_the_category()
 *
 * @param bool $echo
 * @return null|int
 */",
 "/**
 * Print category with optional text before and after.
 *
 * @since 0.71
 * @deprecated 0.71
 * @deprecated use get_the_category_by_ID()
 * @see get_the_category_by_ID()
 *
 * @param string $before
 * @param string $after
 */",
 "/**
 * Prints link to the previous post.
 *
 * @since 1.5
 * @deprecated 2.0
 * @deprecated Use previous_post_link()
 * @see previous_post_link()
 *
 * @param string $format
 * @param string $previous
 * @param string $title
 * @param string $in_same_cat
 * @param int $limitprev
 * @param string $excluded_categories
 */",
 "/**
 * Prints link to the next post.
 *
 * @since 0.71
 * @deprecated 2.0
 * @deprecated Use next_post_link()
 * @see next_post_link()
 *
 * @param string $format
 * @param string $next
 * @param string $title
 * @param string $in_same_cat
 * @param int $limitnext
 * @param string $excluded_categories
 */",
 "/**
 * Whether user can create a post.
 *
 * @since 1.5
 * @deprecated 2.0
 * @deprecated Use current_user_can()
 * @see current_user_can()
 *
 * @param int $user_id
 * @param int $blog_id Not Used
 * @param int $category_id Not Used
 * @return bool
 */",
 "/**
 * Whether user can create a post.
 *
 * @since 1.5
 * @deprecated 2.0
 * @deprecated Use current_user_can()
 * @see current_user_can()
 *
 * @param int $user_id
 * @param int $blog_id Not Used
 * @param int $category_id Not Used
 * @return bool
 */",
 "/**
 * Whether user can edit a post.
 *
 * @since 1.5
 * @deprecated 2.0
 * @deprecated Use current_user_can()
 * @see current_user_can()
 *
 * @param int $user_id
 * @param int $post_id
 * @param int $blog_id Not Used
 * @return bool
 */",
 "/**
 * Whether user can delete a post.
 *
 * @since 1.5
 * @deprecated 2.0
 * @deprecated Use current_user_can()
 * @see current_user_can()
 *
 * @param int $user_id
 * @param int $post_id
 * @param int $blog_id Not Used
 * @return bool
 */",
 "/**
 * Whether user can set new posts\' dates.
 *
 * @since 1.5
 * @deprecated 2.0
 * @deprecated Use current_user_can()
 * @see current_user_can()
 *
 * @param int $user_id
 * @param int $blog_id Not Used
 * @param int $category_id Not Used
 * @return bool
 */",
 "/**
 * Whether user can delete a post.
 *
 * @since 1.5
 * @deprecated 2.0
 * @deprecated Use current_user_can()
 * @see current_user_can()
 *
 * @param int $user_id
 * @param int $post_id
 * @param int $blog_id Not Used
 * @return bool returns true if $user_id can edit $post_id\'s date
 */",
 "/**
 * Whether user can delete a post.
 *
 * @since 1.5
 * @deprecated 2.0
 * @deprecated Use current_user_can()
 * @see current_user_can()
 *
 * @param int $user_id
 * @param int $post_id
 * @param int $blog_id Not Used
 * @return bool returns true if $user_id can edit $post_id\'s comments
 */",
 "/**
 * Whether user can delete a post.
 *
 * @since 1.5
 * @deprecated 2.0
 * @deprecated Use current_user_can()
 * @see current_user_can()
 *
 * @param int $user_id
 * @param int $post_id
 * @param int $blog_id Not Used
 * @return bool returns true if $user_id can delete $post_id\'s comments
 */",
 "/**
 * Can user can edit other user.
 *
 * @since 1.5
 * @deprecated 2.0
 * @deprecated Use current_user_can()
 * @see current_user_can()
 *
 * @param int $user_id
 * @param int $other_user
 * @return bool
 */",
 "/**
 * Gets the links associated with category $cat_name.
 *
 * @since 0.71
 * @deprecated 2.1
 * @deprecated Use get_bookmarks()
 * @see get_bookmarks()
 *
 * @param string $cat_name Optional. The category name to use. If no match is found uses all.
 * @param string $before Optional. The html to output before the link.
 * @param string $after Optional. The html to output after the link.
 * @param string $between Optional. The html to output between the link/image and it\'s description. Not used if no image or $show_images is true.
 * @param bool $show_images Optional. Whether to show images (if defined).
 * @param string $orderby Optional. The order to output the links. E.g. \'id\', \'name\', \'url\', \'description\' or \'rating\'. Or maybe owner.
 *		If you start the name with an underscore the order will be reversed. You can also specify \'rand\' as the order which will return links in a
 *		random order.
 * @param bool $show_description Optional. Whether to show the description if show_images=false/not defined.
 * @param bool $show_rating Optional. Show rating stars/chars.
 * @param int $limit		Optional. Limit to X entries. If not specified, all entries are shown.
 * @param int $show_updated Optional. Whether to show last updated timestamp
 */",
 "/**
 * Gets the links associated with the named category.
 *
 * @since 1.0.1
 * @deprecated 2.1
 * @deprecated Use wp_list_bookmarks()
 * @see wp_list_bookmarks()
 *
 * @param string $category The category to use.
 * @param string $args
 * @return bool|null
 */",
 "/**
 * Gets an array of link objects associated with category $cat_name.
 *
 * <code>
 *	$links = get_linkobjectsbyname(\'fred\');
 *	foreach ($links as $link) {
 * 		echo \'<li>\'.$link->link_name.\'</li>\';
 *	}
 * </code>
 *
 * @since 1.0.1
 * @deprecated 2.1
 * @deprecated Use get_bookmarks()
 * @see get_bookmarks()
 *
 * @param string $cat_name The category name to use. If no match is found uses all.
 * @param string $orderby The order to output the links. E.g. \'id\', \'name\', \'url\', \'description\', or \'rating\'.
 *		Or maybe owner. If you start the name with an underscore the order will be reversed. You can also
 *		specify \'rand\' as the order which will return links in a random order.
 * @param int $limit Limit to X entries. If not specified, all entries are shown.
 * @return unknown
 */",
 "/**
 * Gets an array of link objects associated with category n.
 *
 * Usage:
 * <code>
 *	$links = get_linkobjects(1);
 *	if ($links) {
 *		foreach ($links as $link) {
 *			echo \'<li>\'.$link->link_name.\'<br />\'.$link->link_description.\'</li>\';
 *		}
 *	}
 * </code>
 *
 * Fields are:
 * <ol>
 *	<li>link_id</li>
 *	<li>link_url</li>
 *	<li>link_name</li>
 *	<li>link_image</li>
 *	<li>link_target</li>
 *	<li>link_category</li>
 *	<li>link_description</li>
 *	<li>link_visible</li>
 *	<li>link_owner</li>
 *	<li>link_rating</li>
 *	<li>link_updated</li>
 *	<li>link_rel</li>
 *	<li>link_notes</li>
 * </ol>
 *
 * @since 1.0.1
 * @deprecated 2.1
 * @deprecated Use get_bookmarks()
 * @see get_bookmarks()
 *
 * @param int $category The category to use. If no category supplied uses all
 * @param string $orderby the order to output the links. E.g. \'id\', \'name\', \'url\',
 *		\'description\', or \'rating\'. Or maybe owner. If you start the name with an
 *		underscore the order will be reversed. You can also specify \'rand\' as the
 *		order which will return links in a random order.
 * @param int $limit Limit to X entries. If not specified, all entries are shown.
 * @return unknown
 */",
 "/**
 * Gets the links associated with category \'cat_name\' and display rating stars/chars.
 *
 * @since 0.71
 * @deprecated 2.1
 * @deprecated Use get_bookmarks()
 * @see get_bookmarks()
 *
 * @param string $cat_name The category name to use. If no match is found uses all
 * @param string $before The html to output before the link
 * @param string $after The html to output after the link
 * @param string $between The html to output between the link/image and it\'s description. Not used if no image or show_images is true
 * @param bool $show_images Whether to show images (if defined).
 * @param string $orderby the order to output the links. E.g. \'id\', \'name\', \'url\',
 *		\'description\', or \'rating\'. Or maybe owner. If you start the name with an
 *		underscore the order will be reversed. You can also specify \'rand\' as the
 *		order which will return links in a random order.
 * @param bool $show_description Whether to show the description if show_images=false/not defined
 * @param int $limit Limit to X entries. If not specified, all entries are shown.
 * @param int $show_updated Whether to show last updated timestamp
 */",
 "/**
 * Gets the links associated with category n and display rating stars/chars.
 *
 * @since 0.71
 * @deprecated 2.1
 * @deprecated Use get_bookmarks()
 * @see get_bookmarks()
 *
 * @param int $category The category to use. If no category supplied uses all
 * @param string $before The html to output before the link
 * @param string $after The html to output after the link
 * @param string $between The html to output between the link/image and it\'s description. Not used if no image or show_images == true
 * @param bool $show_images Whether to show images (if defined).
 * @param string $orderby The order to output the links. E.g. \'id\', \'name\', \'url\',
 *		\'description\', or \'rating\'. Or maybe owner. If you start the name with an
 *		underscore the order will be reversed. You can also specify \'rand\' as the
 *		order which will return links in a random order.
 * @param bool $show_description Whether to show the description if show_images=false/not defined.
 * @param string $limit Limit to X entries. If not specified, all entries are shown.
 * @param int $show_updated Whether to show last updated timestamp
 */",
 "/**
 * Gets the auto_toggle setting.
 *
 * @since 0.71
 * @deprecated 2.1
 * @deprecated No alternative function available
 *
 * @param int $id The category to get. If no category supplied uses 0
 * @return int Only returns 0.
 */",
 "/**
 * @since 0.71
 * @deprecated 2.1
 * @deprecated Use wp_list_categories()
 * @see wp_list_categories()
 *
 * @param int $optionall
 * @param string $all
 * @param string $sort_column
 * @param string $sort_order
 * @param string $file
 * @param bool $list
 * @param int $optiondates
 * @param int $optioncount
 * @param int $hide_empty
 * @param int $use_desc_for_title
 * @param bool $children
 * @param int $child_of
 * @param int $categories
 * @param int $recurse
 * @param string $feed
 * @param string $feed_image
 * @param string $exclude
 * @param bool $hierarchical
 * @return unknown
 */",
 "/**
 * @since 1.2
 * @deprecated 2.1
 * @deprecated Use wp_list_categories()
 * @see wp_list_categories()
 *
 * @param string|array $args
 * @return unknown
 */",
 "/**
 * @since 0.71
 * @deprecated 2.1
 * @deprecated Use wp_dropdown_categories()
 * @see wp_dropdown_categories()
 *
 * @param int $optionall
 * @param string $all
 * @param string $orderby
 * @param string $order
 * @param int $show_last_update
 * @param int $show_count
 * @param int $hide_empty
 * @param bool $optionnone
 * @param int $selected
 * @param int $exclude
 * @return unknown
 */",
 "/**
 * @since 1.2
 * @deprecated 2.1
 * @deprecated Use wp_list_authors()
 * @see wp_list_authors()
 *
 * @param bool $optioncount
 * @param bool $exclude_admin
 * @param bool $show_fullname
 * @param bool $hide_empty
 * @param string $feed
 * @param string $feed_image
 * @return unknown
 */",
 "/**
 * @since 1.0.1
 * @deprecated 2.1
 * @deprecated Use wp_get_post_categories()
 * @see wp_get_post_categories()
 *
 * @param int $blogid Not Used
 * @param int $post_ID
 * @return unknown
 */",
 "/**
 * Sets the categories that the post id belongs to.
 *
 * @since 1.0.1
 * @deprecated 2.1
 * @deprecated Use wp_set_post_categories()
 * @see wp_set_post_categories()
 *
 * @param int $blogid Not used
 * @param int $post_ID
 * @param array $post_categories
 * @return unknown
 */",
 "/**
 * @since 0.71
 * @deprecated 2.1
 * @deprecated Use wp_get_archives()
 * @see wp_get_archives()
 *
 * @param string $type
 * @param string $limit
 * @param string $format
 * @param string $before
 * @param string $after
 * @param bool $show_post_count
 * @return unknown
 */",
 "/**
 * Returns or Prints link to the author\'s posts.
 *
 * @since 1.2
 * @deprecated 2.1
 * @deprecated Use get_author_posts_url()
 * @see get_author_posts_url()
 *
 * @param bool $echo Optional.
 * @param int $author_id Required.
 * @param string $author_nicename Optional.
 * @return string|null
 */",
 "/**
 * Print list of pages based on arguments.
 *
 * @since 0.71
 * @deprecated 2.1
 * @deprecated Use wp_link_pages()
 * @see wp_link_pages()
 *
 * @param string $before
 * @param string $after
 * @param string $next_or_number
 * @param string $nextpagelink
 * @param string $previouspagelink
 * @param string $pagelink
 * @param string $more_file
 * @return string
 */",
 "/**
 * Get value based on option.
 *
 * @since 0.71
 * @deprecated 2.1
 * @deprecated Use get_option()
 * @see get_option()
 *
 * @param string $option
 * @return string
 */",
 "/**
 * Print the permalink of the current post in the loop.
 *
 * @since 0.71
 * @deprecated 1.2
 * @deprecated Use the_permalink()
 * @see the_permalink()
 */",
 "/**
 * Print the permalink to the RSS feed.
 *
 * @since 0.71
 * @deprecated 2.3
 * @deprecated Use the_permalink_rss()
 * @see the_permalink_rss()
 *
 * @param string $deprecated
 */",
 "/**
 * Gets the links associated with category.
 *
 * @see get_links() for argument information that can be used in $args
 * @since 1.0.1
 * @deprecated 2.1
 * @deprecated Use wp_list_bookmarks()
 * @see wp_list_bookmarks()
 *
 * @param string $args a query string
 * @return null|string
 */",
 "/**
 * Gets the links associated with category by id.
 *
 * @since 0.71
 * @deprecated 2.1
 * @deprecated Use get_bookmarks()
 * @see get_bookmarks()
 *
 * @param int $category The category to use. If no category supplied uses all
 * @param string $before the html to output before the link
 * @param string $after the html to output after the link
 * @param string $between the html to output between the link/image and its description.
 *		Not used if no image or show_images == true
 * @param bool $show_images whether to show images (if defined).
 * @param string $orderby the order to output the links. E.g. \'id\', \'name\', \'url\',
 *		\'description\', or \'rating\'. Or maybe owner. If you start the name with an
 *		underscore the order will be reversed. You can also specify \'rand\' as the order
 *		which will return links in a random order.
 * @param bool $show_description whether to show the description if show_images=false/not defined.
 * @param bool $show_rating show rating stars/chars
 * @param int $limit Limit to X entries. If not specified, all entries are shown.
 * @param int $show_updated whether to show last updated timestamp
 * @param bool $echo whether to echo the results, or return them instead
 * @return null|string
 */",
 "/**
 * Output entire list of links by category.
 *
 * Output a list of all links, listed by category, using the settings in
 * $wpdb->linkcategories and output it as a nested HTML unordered list.
 *
 * @since 1.0.1
 * @deprecated 2.1
 * @deprecated Use wp_list_bookmarks()
 * @see wp_list_bookmarks()
 *
 * @param string $order Sort link categories by \'name\' or \'id\'
 */",
 "/**
 * Show the link to the links popup and the number of links.
 *
 * @since 0.71
 * @deprecated 2.1
 * @deprecated {@internal Use function instead is unknown}}
 *
 * @param string $text the text of the link
 * @param int $width the width of the popup window
 * @param int $height the height of the popup window
 * @param string $file the page to open in the popup window
 * @param bool $count the number of links in the db
 */",
 "/**
 * @since 1.0.1
 * @deprecated 2.1
 * @deprecated Use sanitize_bookmark_field()
 * @see sanitize_bookmark_field()
 *
 * @param object $link
 * @return unknown
 */",
 "/**
 * Gets the name of category by id.
 *
 * @since 0.71
 * @deprecated 2.1
 * @deprecated Use get_category()
 * @see get_category()
 *
 * @param int $id The category to get. If no category supplied uses 0
 * @return string
 */",
 "/**
 * Print RSS comment feed link.
 *
 * @since 1.0.1
 * @deprecated 2.5
 * @deprecated Use post_comments_feed_link()
 * @see post_comments_feed_link()
 *
 * @param string $link_text
 */",
 "/**
 * Print/Return link to category RSS2 feed.
 *
 * @since 1.2
 * @deprecated 2.5
 * @deprecated Use get_category_feed_link()
 * @see get_category_feed_link()
 *
 * @param bool $echo
 * @param int $cat_ID
 * @return string|null
 */",
 "/**
 * Print/Return link to author RSS feed.
 *
 * @since 1.2
 * @deprecated 2.5
 * @deprecated Use get_author_feed_link()
 * @see get_author_feed_link()
 *
 * @param bool $echo
 * @param int $author_id
 * @return string|null
 */",
 "/**
 * Return link to the post RSS feed.
 *
 * @since 1.5
 * @deprecated 2.2
 * @deprecated Use get_post_comments_feed_link()
 * @see get_post_comments_feed_link()
 *
 * @return string
 */",
 "/**
 * An alias of wp_create_user().
 *
 * @since 2.0
 * @deprecated 2.0
 * @deprecated Use wp_create_user()
 * @see wp_create_user()
 *
 * @param string $username The user\'s username.
 * @param string $password The user\'s password.
 * @param string $email The user\'s email (optional).
 * @return int The new user\'s ID.
 */",
 "/**
 * Unused function.
 *
 * @deprecated 2.5
*/",
 "/**
 * Retrieve an array of comment data about comment $comment_ID.
 *
 * @since 0.71
 * @deprecated 2.7
 * @deprecated Use get_comment()
 * @see get_comment()
 *
 * @param int $comment_ID The ID of the comment
 * @param int $no_cache Whether to use the cache (cast to bool)
 * @param bool $include_unapproved Whether to include unapproved comments
 * @return array The comment data
 */",
 "/**
 * Retrieve the category name by the category ID.
 *
 * @since 0.71
 * @deprecated 2.8
 * @deprecated Use get_cat_name()
 * @see get_cat_name()
 *
 * @param int $cat_ID Category ID
 * @return string category name
 */",
 "/** TODO: consult hierarchy */",
 "/**
 * Retrieve category children list separated before and after the term IDs.
 *
 * @since 1.2.0
 * @deprecated 2.8
 * @deprecated Use get_term_children()
 * @see get_term_children()
 *
 * @param int $id Category ID to retrieve children.
 * @param string $before Optional. Prepend before category term ID.
 * @param string $after Optional, default is empty string. Append after category term ID.
 * @param array $visited Optional. Category Term IDs that have already been added.
 * @return string
 */",
 "/**
 * Retrieve the description of the author of the current post.
 *
 * @since 1.5
 * @deprecated 2.8
 * @deprecated Use get_the_author_meta(\'description\')
 * @see get_the_author_meta()
 *
 * @return string The author\'s description.
 */",
 "/**
 * Display the description of the author of the current post.
 *
 * @since 1.0.0
 * @deprecated 2.8
 * @deprecated Use the_author_meta(\'description\')
 * @see the_author_meta()
 */",
 "/**
 * Retrieve the login name of the author of the current post.
 *
 * @since 1.5
 * @deprecated 2.8
 * @deprecated Use get_the_author_meta(\'login\')
 * @see get_the_author_meta()
 *
 * @return string The author\'s login name (username).
 */",
 "/**
 * Display the login name of the author of the current post.
 *
 * @since 0.71
 * @deprecated 2.8
 * @deprecated Use the_author_meta(\'login\')
 * @see the_author_meta()
 */",
 "/**
 * Retrieve the first name of the author of the current post.
 *
 * @since 1.5
 * @deprecated 2.8
 * @deprecated Use get_the_author_meta(\'first_name\')
 * @see get_the_author_meta()
 *
 * @return string The author\'s first name.
 */",
 "/**
 * Display the first name of the author of the current post.
 *
 * @since 0.71
 * @deprecated 2.8
 * @deprecated Use the_author_meta(\'first_name\')
 * @see the_author_meta()
 */",
 "/**
 * Retrieve the last name of the author of the current post.
 *
 * @since 1.5
 * @deprecated 2.8
 * @deprecated Use get_the_author_meta(\'last_name\')
 * @see get_the_author_meta()
 *
 * @return string The author\'s last name.
 */",
 "/**
 * Display the last name of the author of the current post.
 *
 * @since 0.71
 * @deprecated 2.8
 * @deprecated Use the_author_meta(\'last_name\')
 * @see the_author_meta()
 */",
 "/**
 * Retrieve the nickname of the author of the current post.
 *
 * @since 1.5
 * @deprecated 2.8
 * @deprecated Use get_the_author_meta(\'nickname\')
 * @see get_the_author_meta()
 *
 * @return string The author\'s nickname.
 */",
 "/**
 * Display the nickname of the author of the current post.
 *
 * @since 0.71
 * @deprecated 2.8
 * @deprecated Use the_author_meta(\'nickname\')
 * @see the_author_meta()
 */",
 "/**
 * Retrieve the email of the author of the current post.
 *
 * @since 1.5
 * @deprecated 2.8
 * @deprecated Use get_the_author_meta(\'email\')
 * @see get_the_author_meta()
 *
 * @return string The author\'s username.
 */",
 "/**
 * Display the email of the author of the current post.
 *
 * @since 0.71
 * @deprecated 2.8
 * @deprecated Use the_author_meta(\'email\')
 * @see the_author_meta()
 */",
 "/**
 * Retrieve the ICQ number of the author of the current post.
 *
 * @since 1.5
 * @deprecated 2.8
 * @deprecated Use get_the_author_meta(\'icq\')
 * @see get_the_author_meta()
 *
 * @return string The author\'s ICQ number.
 */",
 "/**
 * Display the ICQ number of the author of the current post.
 *
 * @since 0.71
 * @deprecated 2.8
 * @deprecated Use the_author_meta(\'icq\')
 * @see the_author_meta()
 */",
 "/**
 * Retrieve the Yahoo! IM name of the author of the current post.
 *
 * @since 1.5
 * @deprecated 2.8
 * @deprecated Use get_the_author_meta(\'yim\')
 * @see get_the_author_meta()
 *
 * @return string The author\'s Yahoo! IM name.
 */",
 "/**
 * Display the Yahoo! IM name of the author of the current post.
 *
 * @since 0.71
 * @deprecated 2.8
 * @deprecated Use the_author_meta(\'yim\')
 * @see the_author_meta()
 */",
 "/**
 * Retrieve the MSN address of the author of the current post.
 *
 * @since 1.5
 * @deprecated 2.8
 * @deprecated Use get_the_author_meta(\'msn\')
 * @see get_the_author_meta()
 *
 * @return string The author\'s MSN address.
 */",
 "/**
 * Display the MSN address of the author of the current post.
 *
 * @since 0.71
 * @deprecated 2.8
 * @deprecated Use the_author_meta(\'msn\')
 * @see the_author_meta()
 */",
 "/**
 * Retrieve the AIM address of the author of the current post.
 *
 * @since 1.5
 * @deprecated 2.8
 * @deprecated Use get_the_author_meta(\'aim\')
 * @see get_the_author_meta()
 *
 * @return string The author\'s AIM address.
 */",
 "/**
 * Display the AIM address of the author of the current post.
 *
 * @since 0.71
 * @see the_author_meta()
 * @deprecated 2.8
 * @deprecated Use the_author_meta(\'aim\')
 */",
 "/**
 * Retrieve the specified author\'s preferred display name.
 *
 * @since 1.0.0
 * @deprecated 2.8
 * @deprecated Use get_the_author_meta(\'display_name\')
 * @see get_the_author_meta()
 *
 * @param int $auth_id The ID of the author.
 * @return string The author\'s display name.
 */",
 "/**
 * Retrieve the URL to the home page of the author of the current post.
 *
 * @since 1.5
 * @deprecated 2.8
 * @deprecated Use get_the_author_meta(\'url\')
 * @see get_the_author_meta()
 *
 * @return string The URL to the author\'s page.
 */",
 "/**
 * Display the URL to the home page of the author of the current post.
 *
 * @since 0.71
 * @deprecated 2.8
 * @deprecated Use the_author_meta(\'url\')
 * @see the_author_meta()
 */",
 "/**
 * Retrieve the ID of the author of the current post.
 *
 * @since 1.5
 * @deprecated 2.8
 * @deprecated Use get_the_author_meta(\'ID\')
 * @see get_the_author_meta()
 *
 * @return int The author\'s ID.
 */",
 "/**
 * Display the ID of the author of the current post.
 *
 * @since 0.71
 * @deprecated 2.8
 * @deprecated Use the_author_meta(\'ID\')
 * @see the_author_meta()
*/",
 "/**
 * Display the post content for the feed.
 *
 * For encoding the html or the $encode_html parameter, there are three possible
 * values. \'0\' will make urls footnotes and use make_url_footnote(). \'1\' will
 * encode special characters and automatically display all of the content. The
 * value of \'2\' will strip all HTML tags from the content.
 *
 * Also note that you cannot set the amount of words and not set the html
 * encoding. If that is the case, then the html encoding will default to 2,
 * which will strip all HTML tags.
 *
 * To restrict the amount of words of the content, you can use the cut
 * parameter. If the content is less than the amount, then there won\'t be any
 * dots added to the end. If there is content left over, then dots will be added
 * and the rest of the content will be removed.
 *
 * @package WordPress
 * @subpackage Feed
 * @since 0.71
 * @uses apply_filters() Calls \'the_content_rss\' on the content before processing.
 * @see get_the_content() For the $more_link_text, $stripteaser, and $more_file
 *		parameters.
 *
 * @deprecated 2.9.0
 * @deprecated Use the_content_feed()
 * @see the_content_feed()
 *
 * @param string $more_link_text Optional. Text to display when more content is available but not displayed.
 * @param int|bool $stripteaser Optional. Default is 0.
 * @param string $more_file Optional.
 * @param int $cut Optional. Amount of words to keep for the content.
 * @param int $encode_html Optional. How to encode the content.
 */",
 "/**
 * Strip HTML and put links at the bottom of stripped content.
 *
 * Searches for all of the links, strips them out of the content, and places
 * them at the bottom of the content with numbers.
 *
 * @since 0.71
 * @deprecated 2.9.0
 *
 * @param string $content Content to get links
 * @return string HTML stripped out of content with links at the bottom.
 */",
 "/**
 * Retrieve translated string with vertical bar context
 *
 * Quite a few times, there will be collisions with similar translatable text
 * found in more than two places but with different translated context.
 *
 * In order to use the separate contexts, the _c() function is used and the
 * translatable string uses a pipe (\'|\') which has the context the string is in.
 *
 * When the translated string is returned, it is everything before the pipe, not
 * including the pipe character. If there is no pipe in the translated text then
 * everything is returned.
 *
 * @since 2.2.0
 * @deprecated 2.9.0
 * @deprecated Use _x()
 * @see _x()
 *
 * @param string $text Text to translate
 * @param string $domain Optional. Domain to retrieve the translated text
 * @return string Translated context string without pipe
 */",
 "/**
 * Translates $text like translate(), but assumes that the text
 * contains a context after its last vertical bar.
 *
 * @since 2.5
 * @uses translate()
 * @deprecated 3.0.0
 * @deprecated Use _x()
 * @see _x()
 *
 * @param string $text Text to translate
 * @param string $domain Domain to retrieve the translated text
 * @return string Translated text
 */",
 "/**
 * A version of _n(), which supports contexts.
 * Strips everything from the translation after the last bar.
 *
 * @since 2.7.0
 * @deprecated 3.0.0
 * @deprecated Use _nx()
 * @see _nx()
 * @see _n() For parameters.
 * @see _c() For parameters. _c() is deprecated.
 *
 */",
 "/**
 * Retrieve the plural or single form based on the amount.
 *
 * @since 1.2.0
 * @deprecated 2.8.0
 * @deprecated Use _n()
 * @see _n()
 */",
 "/**
 * Register plural strings in POT file, but don\'t translate them.
 *
 * @since 2.5
 * @deprecated 2.8.0
 * @deprecated Use _n_noop()
 * @see _n_noop()
 */",
 "/**
 * Retrieve all autoload options, or all options if no autoloaded ones exist.
 *
 * @since 1.0.0
 * @deprecated 3.0.0
 * @deprecated Use wp_load_alloptions())
 * @see wp_load_alloptions()
 *
 * @return array List of all options.
 */",
 "/**
 * Retrieve HTML content of attachment image with link.
 *
 * @since 2.0.0
 * @deprecated 2.5.0
 * @deprecated Use wp_get_attachment_link()
 * @see wp_get_attachment_link()
 *
 * @param int $id Optional. Post ID.
 * @param bool $fullsize Optional, default is false. Whether to use full size image.
 * @param array $max_dims Optional. Max image dimensions.
 * @param bool $permalink Optional, default is false. Whether to include permalink to image.
 * @return string
 */",
 "/**
 * Retrieve icon URL and Path.
 *
 * @since 2.1.0
 * @deprecated 2.5.0
 * @deprecated Use wp_get_attachment_image_src()
 * @see wp_get_attachment_image_src()
 *
 * @param int $id Optional. Post ID.
 * @param bool $fullsize Optional, default to false. Whether to have full image.
 * @return array Icon URL and full path to file, respectively.
 */",
 "/**
 * Retrieve HTML content of icon attachment image element.
 *
 * @since 2.0.0
 * @deprecated 2.5.0
 * @deprecated Use wp_get_attachment_image()
 * @see wp_get_attachment_image()
 *
 * @param int $id Optional. Post ID.
 * @param bool $fullsize Optional, default to false. Whether to have full size image.
 * @param array $max_dims Optional. Dimensions of image.
 * @return string HTML content.
 */",
 "/**
 * Retrieve HTML content of image element.
 *
 * @since 2.0.0
 * @deprecated 2.5.0
 * @deprecated Use wp_get_attachment_image()
 * @see wp_get_attachment_image()
 *
 * @param int $id Optional. Post ID.
 * @param bool $fullsize Optional, default to false. Whether to have full size image.
 * @param array $max_dims Optional. Dimensions of image.
 * @return string
 */",
 "/**
 * Retrieve bookmark data based on ID.
 *
 * @since 2.0.0
 * @deprecated 2.1.0
 * @deprecated Use get_bookmark()
 * @see get_bookmark()
 *
 * @param int $bookmark_id ID of link
 * @param string $output OBJECT, ARRAY_N, or ARRAY_A
 * @return object|array
 */",
 "/**
 * Performs esc_url() for database or redirect usage.
 *
 * @since 2.3.1
 * @deprecated 2.8.0
 * @deprecated Use esc_url_raw()
 * @see esc_url_raw()
 *
 * @param string $url The URL to be cleaned.
 * @param array $protocols An array of acceptable protocols.
 * @return string The cleaned URL.
 */",
 "/**
 * Checks and cleans a URL.
 *
 * A number of characters are removed from the URL. If the URL is for displaying
 * (the default behaviour) ampersands are also replaced. The \'clean_url\' filter
 * is applied to the returned cleaned URL.
 *
 * @since 1.2.0
 * @deprecated 3.0.0
 * @deprecated Use esc_url()
 * @see Alias for esc_url()
 *
 * @param string $url The URL to be cleaned.
 * @param array $protocols Optional. An array of acceptable protocols.
 * @param string $context Optional. How the URL will be used. Default is \'display\'.
 * @return string The cleaned $url after the \'clean_url\' filter is applied.
 */",
 "/**
 * Escape single quotes, specialchar double quotes, and fix line endings.
 *
 * The filter \'js_escape\' is also applied by esc_js()
 *
 * @since 2.0.4
 * @deprecated 2.8.0
 * @deprecated Use esc_js()
 * @see esc_js()
 *
 * @param string $text The text to be escaped.
 * @return string Escaped text.
 */",
 "/**
 * Escaping for HTML blocks.
 *
 * @deprecated 2.8.0
 * @deprecated Use esc_html()
 * @see esc_html()
 */",
 "/**
 * Escaping for HTML attributes.
 *
 * @since 2.0.6
 * @deprecated 2.8.0
 * @deprecated Use esc_attr()
 * @see esc_attr()
 *
 * @param string $text
 * @return string
 */",
 "/**
 * Register widget for sidebar with backwards compatibility.
 *
 * Allows $name to be an array that accepts either three elements to grab the
 * first element and the third for the name or just uses the first element of
 * the array for the name.
 *
 * Passes to {@link wp_register_sidebar_widget()} after argument list and
 * backwards compatibility is complete.
 *
 * @since 2.2.0
 * @deprecated 2.8.0
 * @deprecated Use wp_register_sidebar_widget()
 * @see wp_register_sidebar_widget()
 *
 * @param string|int $name Widget ID.
 * @param callback $output_callback Run when widget is called.
 * @param string $classname Classname widget option.
 * @param mixed $params,... Widget parameters.
 */",
 "/**
 * Alias of {@link wp_unregister_sidebar_widget()}.
 *
 * @since 2.2.0
 * @deprecated 2.8.0
 * @deprecated Use wp_unregister_sidebar_widget()
 * @see wp_unregister_sidebar_widget()
 *
 * @param int|string $id Widget ID.
 */",
 "/**
 * Registers widget control callback for customizing options.
 *
 * Allows $name to be an array that accepts either three elements to grab the
 * first element and the third for the name or just uses the first element of
 * the array for the name.
 *
 * Passes to {@link wp_register_widget_control()} after the argument list has
 * been compiled.
 *
 * @since 2.2.0
 * @deprecated 2.8.0
 * @deprecated Use wp_register_widget_control()
 * @see wp_register_widget_control()
 *
 * @param int|string $name Sidebar ID.
 * @param callback $control_callback Widget control callback to display and process form.
 * @param int $width Widget width.
 * @param int $height Widget height.
 */",
 "/**
 * Alias of {@link wp_unregister_widget_control()}.
 *
 * @since 2.2.0
 * @deprecated 2.8.0
 * @deprecated Use wp_unregister_widget_control()
 * @see wp_unregister_widget_control()
 *
 * @param int|string $id Widget ID.
 */",
 "/**
 * Remove user meta data.
 *
 * @since 2.0.0
 * @deprecated 3.0.0
 * @deprecated Use delete_user_meta()
 * @see delete_user_meta()
 *
 * @param int $user_id User ID.
 * @param string $meta_key Metadata key.
 * @param mixed $meta_value Metadata value.
 * @return bool True deletion completed and false if user_id is not a number.
 */",
 "/**
 * Retrieve user metadata.
 *
 * If $user_id is not a number, then the function will fail over with a \'false\'
 * boolean return value. Other returned values depend on whether there is only
 * one item to be returned, which be that single item type. If there is more
 * than one metadata value, then it will be list of metadata values.
 *
 * @since 2.0.0
 * @deprecated 3.0.0
 * @deprecated Use get_user_meta()
 * @see get_user_meta()
 *
 * @param int $user_id User ID
 * @param string $meta_key Optional. Metadata key.
 * @return mixed
 */",
 "/**
 * Update metadata of user.
 *
 * There is no need to serialize values, they will be serialized if it is
 * needed. The metadata key can only be a string with underscores. All else will
 * be removed.
 *
 * Will remove the metadata, if the meta value is empty.
 *
 * @since 2.0.0
 * @deprecated 3.0.0
 * @deprecated Use update_user_meta()
 * @see update_user_meta()
 *
 * @param int $user_id User ID
 * @param string $meta_key Metadata key.
 * @param mixed $meta_value Metadata value.
 * @return bool True on successful update, false on failure.
 */",
 "/**
 * Get users for the blog.
 *
 * For setups that use the multi-blog feature. Can be used outside of the
 * multi-blog feature.
 *
 * @since 2.2.0
 * @deprecated 3.1.0
 * @uses $wpdb WordPress database object for queries
 * @uses $blog_id The Blog id of the blog for those that use more than one blog
 *
 * @param int $id Blog ID.
 * @return array List of users that are part of that Blog ID
 */",
 "/**
 * Enable/disable automatic general feed link outputting.
 *
 * @since 2.8.0
 * @deprecated 3.0.0
 * @deprecated Use add_theme_support( \'automatic-feed-links\' )
 *
 * @param boolean $add Optional, default is true. Add or remove links. Defaults to true.
 */",
 "/**
 * Retrieve user data based on field.
 *
 * @since 1.5.0
 * @deprecated 3.0.0
 * @deprecated Use get_the_author_meta()
 * @see get_the_author_meta()
 */",
 "/**
 * Number of posts user has written.
 *
 * @since 0.71
 * @deprecated 3.0.0
 * @deprecated Use count_user_posts()
 * @see count_user_posts()
 */",
 "/**
 * Callback used to change %uXXXX to &#YYY; syntax
 *
 * @since 2.8.0
 * @access private
 * @deprecated 3.0.0
 *
 * @param array $matches Single Match
 * @return string An HTML entity
 */",
 "/**
 * Fixes javascript bugs in browsers.
 *
 * Converts unicode characters to HTML numbered entities.
 *
 * @since 1.5.0
 * @uses $is_macIE
 * @uses $is_winIE
 * @deprecated 3.0.0
 *
 * @param string $text Text to be made safe.
 * @return string Fixed text.
 */",
 "/**
 * Checks that the taxonomy name exists.
 *
 * @since 2.3.0
 * @deprecated 3.0.0
 * @deprecated Use taxonomy_exists()
 * @see taxonomy_exists()
 *
 * @param string $taxonomy Name of taxonomy object
 * @return bool Whether the taxonomy exists.
 */",
 "/**
 * Check if Term exists.
 *
 * @since 2.3.0
 * @deprecated 3.0.0
 * @deprecated Use term_exists()
 * @see term_exists()
 *
 * @param int|string $term The term to check
 * @param string $taxonomy The taxonomy name to use
 * @param int $parent ID of parent term under which to confine the exists search.
 * @return mixed Get the term id or Term Object, if exists.
 */",
 "/**
 * Is the current admin page generated by a plugin?
 *
 * @since 1.5.0
 * @deprecated 3.1.0
 * @deprecated Use global $plugin_page and/or get_plugin_page_hookname() hooks.
 *
 * @global $plugin_page
 *
 * @return bool
 */",
 "/**
 * Update the categories cache.
 *
 * This function does not appear to be used anymore or does not appear to be
 * needed. It might be a legacy function left over from when there was a need
 * for updating the category cache.
 *
 * @since 1.5.0
 * @deprecated 3.1.0
 *
 * @return bool Always return True
 */",
 "/**
 * Check for PHP timezone support
 *
 * @since 2.9.0
 * @deprecated 3.2.0
 *
 * @return bool
 */",
 "/**
 * Display editor: TinyMCE, HTML, or both.
 *
 * @since 2.1.0
 * @deprecated 3.3.0
 * @deprecated Use wp_editor()
 * @see wp_editor()
 *
 * @param string $content Textarea content.
 * @param string $id Optional, default is \'content\'. HTML ID attribute value.
 * @param string $prev_id Optional, not used
 * @param bool $media_buttons Optional, default is true. Whether to display media buttons.
 * @param int $tab_index Optional, not used
 */",
 "/**
 * Perform the query to get the $metavalues array(s) needed by _fill_user and _fill_many_users
 *
 * @since 3.0.0
 * @deprecated 3.3.0
 *
 * @param array $ids User ID numbers list.
 * @return array of arrays. The array is indexed by user_id, containing $metavalues object arrays.
 */",
 "/**
 * Sanitize every user field.
 *
 * If the context is \'raw\', then the user object or array will get minimal santization of the int fields.
 *
 * @since 2.3.0
 * @deprecated 3.3.0
 *
 * @param object|array $user The User Object or Array
 * @param string $context Optional, default is \'display\'. How to sanitize user fields.
 * @return object|array The now sanitized User Object or Array (will be the same type as $user)
 */",
 "/**
 * Get boundary post relational link.
 *
 * Can either be start or end post relational link.
 *
 * @since 2.8.0
 * @deprecated 3.3.0
 *
 * @param string $title Optional. Link title format.
 * @param bool $in_same_cat Optional. Whether link should be in a same category.
 * @param string $excluded_categories Optional. Excluded categories IDs.
 * @param bool $start Optional, default is true. Whether to display link to first or last post.
 * @return string
 */",
 "/**
 * Display relational link for the first post.
 *
 * @since 2.8.0
 * @deprecated 3.3.0
 *
 * @param string $title Optional. Link title format.
 * @param bool $in_same_cat Optional. Whether link should be in a same category.
 * @param string $excluded_categories Optional. Excluded categories IDs.
 */",
 "/**
 * Get site index relational link.
 *
 * @since 2.8.0
 * @deprecated 3.3.0
 *
 * @return string
 */",
 "/**
 * Display relational link for the site index.
 *
 * @since 2.8.0
 * @deprecated 3.3.0
 */",
 "/**
 * Get parent post relational link.
 *
 * @since 2.8.0
 * @deprecated 3.3.0
 *
 * @param string $title Optional. Link title format.
 * @return string
 */",
 "/**
 * Display relational link for parent item
 *
 * @since 2.8.0
 * @deprecated 3.3.0
 */",
 "/**
 * Add the \"Dashboard\"/\"Visit Site\" menu.
 *
 * @since 3.2.0
 * @deprecated 3.3.0
 */",
 "/**
 * Checks if the current user belong to a given blog.
 *
 * @since MU
 * @deprecated 3.3.0
 * @deprecated Use is_user_member_of_blog()
 * @see is_user_member_of_blog()
 *
 * @param int $blog_id Blog ID
 * @return bool True if the current users belong to $blog_id, false if not.
 */",
 "/**
 * Open the file handle for debugging.
 *
 * @since 0.71
 * @deprecated Use error_log()
 * @link http://www.php.net/manual/en/function.error-log.php
 * @deprecated 3.4.0
 */",
 "/**
 * Write contents to the file used for debugging.
 *
 * @since 0.71
 * @deprecated Use error_log() instead.
 * @link http://www.php.net/manual/en/function.error-log.php
 * @deprecated 3.4.0
 */",
 "/**
 * Close the debugging file handle.
 *
 * @since 0.71
 * @deprecated Use error_log()
 * @link http://www.php.net/manual/en/function.error-log.php
 * @deprecated 3.4.0
 */",
 "/**
 * Retrieve list of themes with theme data in theme directory.
 *
 * The theme is broken, if it doesn\'t have a parent theme and is missing either
 * style.css and, or index.php. If the theme has a parent theme then it is
 * broken, if it is missing style.css; index.php is optional.
 *
 * @since 1.5.0
 * @deprecated 3.4.0
 * @deprecated Use wp_get_themes()
 * @see wp_get_themes()
 *
 * @return array Theme list with theme data.
 */",
 "/**
 * Retrieve theme data.
 *
 * @since 1.5.0
 * @deprecated 3.4.0
 * @deprecated Use wp_get_theme()
 * @see wp_get_theme()
 *
 * @param string $theme Theme name.
 * @return array|null Null, if theme name does not exist. Theme data, if exists.
 */",
 "/**
 * Retrieve current theme name.
 *
 * @since 1.5.0
 * @deprecated 3.4.0
 * @deprecated Use (string) wp_get_theme()
 * @see wp_get_theme()
 *
 * @return string
 */",
 "/**
 * Accepts matches array from preg_replace_callback in wpautop() or a string.
 *
 * Ensures that the contents of a <<pre>>...<</pre>> HTML block are not
 * converted into paragraphs or line-breaks.
 *
 * @since 1.2.0
 * @deprecated 3.4.0
 *
 * @param array|string $matches The array or string
 * @return string The pre block without paragraph/line-break conversion.
 */",
 "/**
 * Add callbacks for image header display.
 *
 * @since 2.1.0
 * @deprecated 3.4.0
 * @deprecated Use add_theme_support(\'custom-header\', $args)
 * @see add_theme_support()
 *
 * @param callback $wp_head_callback Call on \'wp_head\' action.
 * @param callback $admin_head_callback Call on custom header administration screen.
 * @param callback $admin_preview_callback Output a custom header image div on the custom header administration screen. Optional.
 */",
 "/**
 * Remove image header support.
 *
 * @since 3.1.0
 * @deprecated 3.4.0
 * @deprecated Use remove_theme_support(\'custom-header\')
 * @see remove_theme_support()
 *
 * @return bool Whether support was removed.
 */",
 "/**
 * Add callbacks for background image display.
 *
 * @since 3.0.0
 * @deprecated 3.4.0
 * @deprecated Use add_theme_support(\'custom-background, $args)
 * @see add_theme_support()
 *
 * @param callback $wp_head_callback Call on \'wp_head\' action.
 * @param callback $admin_head_callback Call on custom background administration screen.
 * @param callback $admin_preview_callback Output a custom background image div on the custom background administration screen. Optional.
 */",
 "/**
 * Remove custom background support.
 *
 * @since 3.1.0
 * @see add_custom_background()
 *
 * @return bool Whether support was removed.
 */",
 "/**
 * Retrieve theme data from parsed theme file.
 *
 * @since 1.5.0
 * @deprecated 3.4.0
 * @deprecated Use wp_get_theme()
 * @see wp_get_theme()
 *
 * @param string $theme_file Theme file path.
 * @return array Theme data.
 */",
 "/**
 * Alias of update_post_cache().
 *
 * @see update_post_cache() Posts and pages are the same, alias is intentional
 *
 * @since 1.5.1
 * @deprecated 3.4.0
 *
 * @param array $pages list of page objects
 */",
 "/**
 * Will clean the page in the cache.
 *
 * Clean (read: delete) page from cache that matches $id. Will also clean cache
 * associated with \'all_page_ids\' and \'get_pages\'.
 *
 * @since 2.0.0
 * @deprecated 3.4.0
 *
 * @uses do_action() Will call the \'clean_page_cache\' hook action.
 *
 * @param int $id Page ID to clean
 */",
 "/**
 * Hooks a function or method to a specific filter action.
 *
 * Filters are the hooks that WordPress launches to modify text of various types
 * before adding it to the database or sending it to the browser screen. Plugins
 * can specify that one or more of its PHP functions is executed to
 * modify specific types of text at these times, using the Filter API.
 *
 * To use the API, the following code should be used to bind a callback to the
 * filter.
 *
 * <code>
 * function example_hook($example) { echo $example; }
 * add_filter(\'example_filter\', \'example_hook\');
 * </code>
 *
 * In WordPress 1.5.1+, hooked functions can take extra arguments that are set
 * when the matching do_action() or apply_filters() call is run. The
 * $accepted_args allow for calling functions only when the number of args
 * match. Hooked functions can take extra arguments that are set when the
 * matching do_action() or apply_filters() call is run. For example, the action
 * comment_id_not_found will pass any functions that hook onto it the ID of the
 * requested comment.
 *
 * <strong>Note:</strong> the function will return true no matter if the
 * function was hooked fails or not. There are no checks for whether the
 * function exists beforehand and no checks to whether the <tt>$function_to_add
 * is even a string. It is up to you to take care and this is done for
 * optimization purposes, so everything is as quick as possible.
 *
 * @package WordPress
 * @subpackage Plugin
 * @since 0.71
 * @global array $wp_filter Stores all of the filters added in the form of
 *	wp_filter[\'tag\'][\'array of priorities\'][\'array of functions serialized\'][\'array of [\'array (functions, accepted_args)\']\']
 * @global array $merged_filters Tracks the tags that need to be merged for later. If the hook is added, it doesn\'t need to run through that process.
 *
 * @param string $tag The name of the filter to hook the $function_to_add to.
 * @param callback $function_to_add The name of the function to be called when the filter is applied.
 * @param int $priority optional. Used to specify the order in which the functions associated with a particular action are executed (default: 10). Lower numbers correspond with earlier execution, and functions with the same priority are executed in the order in which they were added to the action.
 * @param int $accepted_args optional. The number of arguments the function accept (default 1).
 * @return boolean true
 */",
 "/**
 * Check if any filter has been registered for a hook.
 *
 * @package WordPress
 * @subpackage Plugin
 * @since 2.5
 * @global array $wp_filter Stores all of the filters
 *
 * @param string $tag The name of the filter hook.
 * @param callback $function_to_check optional. If specified, return the priority of that function on this hook or false if not attached.
 * @return int|boolean Optionally returns the priority on that hook for the specified function.
 */",
 "/**
 * Call the functions added to a filter hook.
 *
 * The callback functions attached to filter hook $tag are invoked by calling
 * this function. This function can be used to create a new filter hook by
 * simply calling this function with the name of the new hook specified using
 * the $tag parameter.
 *
 * The function allows for additional arguments to be added and passed to hooks.
 * <code>
 * function example_hook($string, $arg1, $arg2)
 * {
 *		//Do stuff
 *		return $string;
 * }
 * $value = apply_filters(\'example_filter\', \'filter me\', \'arg1\', \'arg2\');
 * </code>
 *
 * @package WordPress
 * @subpackage Plugin
 * @since 0.71
 * @global array $wp_filter Stores all of the filters
 * @global array $merged_filters Merges the filter hooks using this function.
 * @global array $wp_current_filter stores the list of current filters with the current one last
 *
 * @param string $tag The name of the filter hook.
 * @param mixed $value The value on which the filters hooked to <tt>$tag</tt> are applied on.
 * @param mixed $var,... Additional variables passed to the functions hooked to <tt>$tag</tt>.
 * @return mixed The filtered value after all hooked functions are applied to it.
 */",
 "/**
 * Execute functions hooked on a specific filter hook, specifying arguments in an array.
 *
 * @see apply_filters() This function is identical, but the arguments passed to the
 * functions hooked to <tt>$tag</tt> are supplied using an array.
 *
 * @package WordPress
 * @subpackage Plugin
 * @since 3.0.0
 * @global array $wp_filter Stores all of the filters
 * @global array $merged_filters Merges the filter hooks using this function.
 * @global array $wp_current_filter stores the list of current filters with the current one last
 *
 * @param string $tag The name of the filter hook.
 * @param array $args The arguments supplied to the functions hooked to <tt>$tag</tt>
 * @return mixed The filtered value after all hooked functions are applied to it.
 */",
 "/**
 * Removes a function from a specified filter hook.
 *
 * This function removes a function attached to a specified filter hook. This
 * method can be used to remove default functions attached to a specific filter
 * hook and possibly replace them with a substitute.
 *
 * To remove a hook, the $function_to_remove and $priority arguments must match
 * when the hook was added. This goes for both filters and actions. No warning
 * will be given on removal failure.
 *
 * @package WordPress
 * @subpackage Plugin
 * @since 1.2
 *
 * @param string $tag The filter hook to which the function to be removed is hooked.
 * @param callback $function_to_remove The name of the function which should be removed.
 * @param int $priority optional. The priority of the function (default: 10).
 * @param int $accepted_args optional. The number of arguments the function accepts (default: 1).
 * @return boolean Whether the function existed before it was removed.
 */",
 "/**
 * Remove all of the hooks from a filter.
 *
 * @since 2.7
 *
 * @param string $tag The filter to remove hooks from.
 * @param int $priority The priority number to remove.
 * @return bool True when finished.
 */",
 "/**
 * Retrieve the name of the current filter or action.
 *
 * @package WordPress
 * @subpackage Plugin
 * @since 2.5
 *
 * @return string Hook name of the current filter or action.
 */",
 "/**
 * Hooks a function on to a specific action.
 *
 * Actions are the hooks that the WordPress core launches at specific points
 * during execution, or when specific events occur. Plugins can specify that
 * one or more of its PHP functions are executed at these points, using the
 * Action API.
 *
 * @uses add_filter() Adds an action. Parameter list and functionality are the same.
 *
 * @package WordPress
 * @subpackage Plugin
 * @since 1.2
 *
 * @param string $tag The name of the action to which the $function_to_add is hooked.
 * @param callback $function_to_add The name of the function you wish to be called.
 * @param int $priority optional. Used to specify the order in which the functions associated with a particular action are executed (default: 10). Lower numbers correspond with earlier execution, and functions with the same priority are executed in the order in which they were added to the action.
 * @param int $accepted_args optional. The number of arguments the function accept (default 1).
 */",
 "/**
 * Execute functions hooked on a specific action hook.
 *
 * This function invokes all functions attached to action hook $tag. It is
 * possible to create new action hooks by simply calling this function,
 * specifying the name of the new hook using the <tt>$tag</tt> parameter.
 *
 * You can pass extra arguments to the hooks, much like you can with
 * apply_filters().
 *
 * @see apply_filters() This function works similar with the exception that
 * nothing is returned and only the functions or methods are called.
 *
 * @package WordPress
 * @subpackage Plugin
 * @since 1.2
 * @global array $wp_filter Stores all of the filters
 * @global array $wp_actions Increments the amount of times action was triggered.
 *
 * @param string $tag The name of the action to be executed.
 * @param mixed $arg,... Optional additional arguments which are passed on to the functions hooked to the action.
 * @return null Will return null if $tag does not exist in $wp_filter array
 */",
 "/**
 * Retrieve the number of times an action is fired.
 *
 * @package WordPress
 * @subpackage Plugin
 * @since 2.1
 * @global array $wp_actions Increments the amount of times action was triggered.
 *
 * @param string $tag The name of the action hook.
 * @return int The number of times action hook <tt>$tag</tt> is fired
 */",
 "/**
 * Execute functions hooked on a specific action hook, specifying arguments in an array.
 *
 * @see do_action() This function is identical, but the arguments passed to the
 * functions hooked to <tt>$tag</tt> are supplied using an array.
 *
 * @package WordPress
 * @subpackage Plugin
 * @since 2.1
 * @global array $wp_filter Stores all of the filters
 * @global array $wp_actions Increments the amount of times action was triggered.
 *
 * @param string $tag The name of the action to be executed.
 * @param array $args The arguments supplied to the functions hooked to <tt>$tag</tt>
 * @return null Will return null if $tag does not exist in $wp_filter array
 */",
 "/**
 * Check if any action has been registered for a hook.
 *
 * @package WordPress
 * @subpackage Plugin
 * @since 2.5
 * @see has_filter() has_action() is an alias of has_filter().
 *
 * @param string $tag The name of the action hook.
 * @param callback $function_to_check optional. If specified, return the priority of that function on this hook or false if not attached.
 * @return int|boolean Optionally returns the priority on that hook for the specified function.
 */",
 "/**
 * Removes a function from a specified action hook.
 *
 * This function removes a function attached to a specified action hook. This
 * method can be used to remove default functions attached to a specific filter
 * hook and possibly replace them with a substitute.
 *
 * @package WordPress
 * @subpackage Plugin
 * @since 1.2
 *
 * @param string $tag The action hook to which the function to be removed is hooked.
 * @param callback $function_to_remove The name of the function which should be removed.
 * @param int $priority optional The priority of the function (default: 10).
 * @param int $accepted_args optional. The number of arguments the function accepts (default: 1).
 * @return boolean Whether the function is removed.
 */",
 "/**
 * Remove all of the hooks from an action.
 *
 * @since 2.7
 *
 * @param string $tag The action to remove hooks from.
 * @param int $priority The priority number to remove them from.
 * @return bool True when finished.
 */",
 "/**
*Getsthebasenameofaplugin.
*
*Thismethodextractsthenameofapluginfromitsfilename.
*
*@packageWordPress
*@subpackagePlugin
*@since1.5
*
*@accessprivate
*
*@paramstring$fileThefilenameofplugin.
*@returnstringThenameofaplugin.
*@usesWP_PLUGIN_DIR
*/",
 "/**
*Getsthefilesystemdirectorypath(withtrailingslash)fortheplugin__FILE__passedin
*@packageWordPress
*@subpackagePlugin
*@since2.8
*
*@paramstring$fileThefilenameoftheplugin(__FILE__)
*@returnstringthefilesystempathofthedirectorythatcontainstheplugin
*/",
 "/**
*GetstheURLdirectorypath(withtrailingslash)fortheplugin__FILE__passedin
*@packageWordPress
*@subpackagePlugin
*@since2.8
*
*@paramstring$fileThefilenameoftheplugin(__FILE__)
*@returnstringtheURLpathofthedirectorythatcontainstheplugin
*/",
 "/**
*Settheactivationhookforaplugin.
*
*Whenapluginisactivated,theaction\'activate_PLUGINNAME\'hookis
*activated.Inthenameofthishook,PLUGINNAMEisreplacedwiththenameof
*theplugin,includingtheoptionalsubdirectory.Forexample,whentheplugin
*islocatedinwp-content/plugin/sampleplugin/sample.php,thenthenameof
*thishookwillbecome\'activate_sampleplugin/sample.php\'.Whentheplugin
*consistsofonlyonefileandis(asbydefault)locatedat
*wp-content/plugin/sample.phpthenameofthishookwillbe
*\'activate_sample.php\'.
*
*@packageWordPress
*@subpackagePlugin
*@since2.0
*
*@paramstring$fileThefilenameofthepluginincludingthepath.
*@paramcallback$functionthefunctionhookedtothe\'activate_PLUGIN\'action.
*/",
 "/**
*Setthedeactivationhookforaplugin.
*
*Whenapluginisdeactivated,theaction\'deactivate_PLUGINNAME\'hookis
*deactivated.Inthenameofthishook,PLUGINNAMEisreplacedwiththename
*oftheplugin,includingtheoptionalsubdirectory.Forexample,whenthe
*pluginislocatedinwp-content/plugin/sampleplugin/sample.php,then
*thenameofthishookwillbecome\'activate_sampleplugin/sample.php\'.
*
*Whenthepluginconsistsofonlyonefileandis(asbydefault)locatedat
*wp-content/plugin/sample.phpthenameofthishookwillbe
*\'activate_sample.php\'.
*
*@packageWordPress
*@subpackagePlugin
*@since2.0
*
*@paramstring$fileThefilenameofthepluginincludingthepath.
*@paramcallback$functionthefunctionhookedtothe\'activate_PLUGIN\'action.
*/",
 "/**
*Settheuninstallationhookforaplugin.
*
*Registerstheuninstallhookthatwillbecalledwhentheuserclicksonthe
*uninstalllinkthatcallsfortheplugintouninstallitself.Thelinkwon\'t
*beactiveunlessthepluginhooksintotheaction.
*
*Thepluginshouldnotrunarbitrarycodeoutsideoffunctions,when
*registeringtheuninstallhook.Inordertorunusingthehook,theplugin
*willhavetobeincluded,whichmeansthatanycodelayingoutsideofa
*functionwillberunduringtheuninstallprocess.Thepluginshouldnot
*hindertheuninstallprocess.
*
*Iftheplugincannotbewrittenwithoutrunningcodewithintheplugin,then
*thepluginshouldcreateafilenamed\'uninstall.php\'inthebaseplugin
*folder.Thisfilewillbecalled,ifitexists,duringtheuninstallprocess
*bypassingtheuninstallhook.Theplugin,whenusingthe\'uninstall.php\'
*shouldalwayscheckforthe\'WP_UNINSTALL_PLUGIN\'constant,before
*executing.
*
*@since2.7
*
*@paramstring$file
*@paramcallback$callbackThecallbacktorunwhenthehookiscalled.Mustbeastaticmethodorfunction.
*/",
 "/**
*Callsthe\'all\'hook,whichwillprocessthefunctionshookedintoit.
*
*The\'all\'hookpassesalloftheargumentsorparametersthatwereusedfor
*thehook,whichthisfunctionwascalledfor.
*
*Thisfunctionisusedinternallyforapply_filters(),do_action(),and
*do_action_ref_array()andisnotmeanttobeusedfromoutsidethose
*functions.Thisfunctiondoesnotcheckfortheexistenceoftheallhook,so
*itwillfailunlesstheallhookexistspriortothisfunctioncall.
*
*@packageWordPress
*@subpackagePlugin
*@since2.5
*@accessprivate
*
*@uses$wp_filterUsedtoprocessallofthefunctionsinthe\'all\'hook
*
*@paramarray$argsThecollectedparametersfromthehookthatwascalled.
*@paramstring$hookOptional.Thehooknamethatwasusedtocallthe\'all\'hook.
*/",
 "/**
*BuildUniqueIDforstorageandretrieval.
*
*Theoldwaytoserializethecallbackcausedissuesandthisfunctionisthe
*solution.Itworksbycheckingforobjectsandcreatingananewpropertyin
*theclasstokeeptrackoftheobjectandnewobjectsofthesameclassthat
*needtobeadded.
*
*Italsoallowsfortheremovalofactionsandfiltersforobjectsafterthey
*changeclassproperties.Itispossibletoincludetheproperty$wp_filter_id
*inyourclassandsetitto\"null\" or a number to bypass the workaround.
 * However this will prevent you from adding new classes and any new classes
 * will overwrite the previous hook by the same class.
 *
 * Functions and static method callbacks are just returned as strings and
 * shouldn\'t have any speed penalty.
 *
 * @package WordPress
 * @subpackage Plugin
 * @access private
 * @since 2.2.3
 * @link http://trac.wordpress.org/ticket/3875
 *
 * @global array $wp_filter Storage for all of the filters and actions
 * @param string $tag Used in counting how many hooks were applied
 * @param callback $function Used for creating unique id
 * @param int|bool $priority Used in counting how many hooks were applied. If === false and $function is an object reference, we return the unique id only if it already has one, false otherwise.
 * @return string|bool Unique ID for usage as array key or false if $priority === false and $function is an object reference, and it does not already have a unique id.
 */",
 "/**
 * Converts given date string into a different format.
 *
 * $format should be either a PHP date format string, e.g. \'U\' for a Unix
 * timestamp, or \'G\' for a Unix timestamp assuming that $date is GMT.
 *
 * If $translate is true then the given date and format string will
 * be passed to date_i18n() for translation.
 *
 * @since 0.71
 *
 * @param string $format Format of the date to return.
 * @param string $date Date string to convert.
 * @param bool $translate Whether the return date should be translated. Default is true.
 * @return string|int Formatted date string, or Unix timestamp.
 */",
 "/**
 * Retrieve the current time based on specified type.
 *
 * The \'mysql\' type will return the time in the format for MySQL DATETIME field.
 * The \'timestamp\' type will return the current timestamp.
 *
 * If $gmt is set to either \'1\' or \'true\', then both types will use GMT time.
 * if $gmt is false, the output is adjusted with the GMT offset in the WordPress option.
 *
 * @since 1.0.0
 *
 * @param string $type Either \'mysql\' or \'timestamp\'.
 * @param int|bool $gmt Optional. Whether to use GMT timezone. Default is false.
 * @return int|string String if $type is \'gmt\', int if $type is \'timestamp\'.
 */",
 "/**
 * Retrieve the date in localized format, based on timestamp.
 *
 * If the locale specifies the locale month and weekday, then the locale will
 * take over the format for the date. If it isn\'t, then the date format string
 * will be used instead.
 *
 * @since 0.71
 *
 * @param string $dateformatstring Format to display the date.
 * @param int $unixtimestamp Optional. Unix timestamp.
 * @param bool $gmt Optional, default is false. Whether to convert to GMT for time.
 * @return string The date, translated if locale specifies it.
 */",
 "/**
 * Convert integer number to format based on the locale.
 *
 * @since 2.3.0
 *
 * @param int $number The number to convert based on locale.
 * @param int $decimals Precision of the number of decimal places.
 * @return string Converted number in string format.
 */",
 "/**
 * Convert number of bytes largest unit bytes will fit into.
 *
 * It is easier to read 1kB than 1024 bytes and 1MB than 1048576 bytes. Converts
 * number of bytes to human readable number by taking the number of that unit
 * that the bytes will go into it. Supports TB value.
 *
 * Please note that integers in PHP are limited to 32 bits, unless they are on
 * 64 bit architecture, then they have 64 bit size. If you need to place the
 * larger size then what PHP integer type will hold, then use a string. It will
 * be converted to a double, which should always have 64 bit length.
 *
 * Technically the correct unit names for powers of 1024 are KiB, MiB etc.
 * @link http://en.wikipedia.org/wiki/Byte
 *
 * @since 2.3.0
 *
 * @param int|string $bytes Number of bytes. Note max integer size for integers.
 * @param int $decimals Precision of number of decimal places. Deprecated.
 * @return bool|string False on failure. Number string on success.
 */",
 "/**
 * Get the week start and end from the datetime or date string from mysql.
 *
 * @since 0.71
 *
 * @param string $mysqlstring Date or datetime field type from mysql.
 * @param int $start_of_week Optional. Start of the week as an integer.
 * @return array Keys are \'start\' and \'end\'.
 */",
 "/**
 * Unserialize value only if it was serialized.
 *
 * @since 2.0.0
 *
 * @param string $original Maybe unserialized original, if is needed.
 * @return mixed Unserialized data can be any type.
 */",
 "/**
 * Check value to find if it was serialized.
 *
 * If $data is not an string, then returned value will always be false.
 * Serialized data is always a string.
 *
 * @since 2.0.5
 *
 * @param mixed $data Value to check to see if was serialized.
 * @return bool False if not serialized and true if it was.
 */",
 "/**
 * Check whether serialized data is of string type.
 *
 * @since 2.0.5
 *
 * @param mixed $data Serialized data
 * @return bool False if not a serialized string, true if it is.
 */",
 "/**
 * Serialize data, if needed.
 *
 * @since 2.0.5
 *
 * @param mixed $data Data that might be serialized.
 * @return mixed A scalar data
 */",
 "/**
 * Retrieve post title from XMLRPC XML.
 *
 * If the title element is not part of the XML, then the default post title from
 * the $post_default_title will be used instead.
 *
 * @package WordPress
 * @subpackage XMLRPC
 * @since 0.71
 *
 * @global string $post_default_title Default XMLRPC post title.
 *
 * @param string $content XMLRPC XML Request content
 * @return string Post title
 */",
 "/**
 * Retrieve the post category or categories from XMLRPC XML.
 *
 * If the category element is not found, then the default post category will be
 * used. The return type then would be what $post_default_category. If the
 * category is found, then it will always be an array.
 *
 * @package WordPress
 * @subpackage XMLRPC
 * @since 0.71
 *
 * @global string $post_default_category Default XMLRPC post category.
 *
 * @param string $content XMLRPC XML Request content
 * @return string|array List of categories or category name.
 */",
 "/**
 * XMLRPC XML content without title and category elements.
 *
 * @package WordPress
 * @subpackage XMLRPC
 * @since 0.71
 *
 * @param string $content XMLRPC XML Request content
 * @return string XMLRPC XML Request content without title and category elements.
 */",
 "/**
 * Check content for video and audio links to add as enclosures.
 *
 * Will not add enclosures that have already been added and will
 * remove enclosures that are no longer in the post. This is called as
 * pingbacks and trackbacks.
 *
 * @package WordPress
 * @since 1.5.0
 *
 * @uses $wpdb
 *
 * @param string $content Post Content
 * @param int $post_ID Post ID
 */",
 "/**
 * Perform a HTTP HEAD or GET request.
 *
 * If $file_path is a writable filename, this will do a GET request and write
 * the file to that path.
 *
 * @since 2.5.0
 *
 * @param string $url URL to fetch.
 * @param string|bool $file_path Optional. File path to write request to.
 * @param int $red (private) The number of Redirects followed, Upon 5 being hit, returns false.
 * @return bool|string False on failure and string of headers if HEAD request.
 */",
 "/**
 * Retrieve HTTP Headers from URL.
 *
 * @since 1.5.1
 *
 * @param string $url
 * @param bool $deprecated Not Used.
 * @return bool|string False on failure, headers on success.
 */",
 "/**
 * Whether today is a new day.
 *
 * @since 0.71
 * @uses $day Today
 * @uses $previousday Previous day
 *
 * @return int 1 when new day, 0 if not a new day.
 */",
 "/**
 * Build URL query based on an associative and, or indexed array.
 *
 * This is a convenient function for easily building url queries. It sets the
 * separator to \'&\' and uses _http_build_query() function.
 *
 * @see _http_build_query() Used to build the query
 * @link http://us2.php.net/manual/en/function.http-build-query.php more on what
 *		http_build_query() does.
 *
 * @since 2.3.0
 *
 * @param array $data URL-encode key/value pairs.
 * @return string URL encoded string
 */",
 "/**
 * Retrieve a modified URL query string.
 *
 * You can rebuild the URL and append a new query variable to the URL query by
 * using this function. You can also retrieve the full URL with query data.
 *
 * Adding a single key & value or an associative array. Setting a key value to
 * an empty string removes the key. Omitting oldquery_or_uri uses the $_SERVER
 * value. Additional values provided are expected to be encoded appropriately
 * with urlencode() or rawurlencode().
 *
 * @since 1.5.0
 *
 * @param mixed $param1 Either newkey or an associative_array
 * @param mixed $param2 Either newvalue or oldquery or uri
 * @param mixed $param3 Optional. Old query or uri
 * @return string New URL query string.
 */",
 "/**
 * Removes an item or list from the query string.
 *
 * @since 1.5.0
 *
 * @param string|array $key Query key or keys to remove.
 * @param bool $query When false uses the $_SERVER value.
 * @return string New URL query string.
 */",
 "/**
 * Walks the array while sanitizing the contents.
 *
 * @since 0.71
 *
 * @param array $array Array to used to walk while sanitizing contents.
 * @return array Sanitized $array.
 */",
 "/**
 * HTTP request for URI to retrieve content.
 *
 * @since 1.5.1
 * @uses wp_remote_get()
 *
 * @param string $uri URI/URL of web page to retrieve.
 * @return bool|string HTTP content. False on failure.
 */",
 "/**
 * Set up the WordPress query.
 *
 * @since 2.0.0
 *
 * @param string $query_vars Default WP_Query arguments.
 */",
 "/**
 * Retrieve the description for the HTTP status.
 *
 * @since 2.3.0
 *
 * @param int $code HTTP status code.
 * @return string Empty string if not found, or description if found.
 */",
 "/**
 * Set HTTP status header.
 *
 * @since 2.0.0
 * @uses apply_filters() Calls \'status_header\' on status header string, HTTP
 *		HTTP code, HTTP code description, and protocol string as separate
 *		parameters.
 *
 * @param int $header HTTP status code
 * @return unknown
 */",
 "/**
 * Gets the header information to prevent caching.
 *
 * The several different headers cover the different ways cache prevention is handled
 * by different browsers
 *
 * @since 2.8.0
 *
 * @uses apply_filters()
 * @return array The associative array of header names and field values.
 */",
 "/**
 * Sets the headers to prevent caching for the different browsers.
 *
 * Different browsers support different nocache headers, so several headers must
 * be sent so that all of them get the point that no caching should occur.
 *
 * @since 2.0.0
 * @uses wp_get_nocache_headers()
 */",
 "/**
 * Set the headers for caching for 10 days with JavaScript content type.
 *
 * @since 2.1.0
 */",
 "/**
 * Retrieve the number of database queries during the WordPress execution.
 *
 * @since 2.0.0
 *
 * @return int Number of database queries
 */",
 "/**
 * Whether input is yes or no. Must be \'y\' to be true.
 *
 * @since 1.0.0
 *
 * @param string $yn Character string containing either \'y\' or \'n\'
 * @return bool True if yes, false on anything else
 */",
 "/**
 * Loads the feed template from the use of an action hook.
 *
 * If the feed action does not have a hook, then the function will die with a
 * message telling the visitor that the feed is not valid.
 *
 * It is better to only have one hook for each feed.
 *
 * @since 2.1.0
 * @uses $wp_query Used to tell if the use a comment feed.
 * @uses do_action() Calls \'do_feed_$feed\' hook, if a hook exists for the feed.
 */",
 "/**
 * Load the RDF RSS 0.91 Feed template.
 *
 * @since 2.1.0
 */",
 "/**
 * Load the RSS 1.0 Feed Template.
 *
 * @since 2.1.0
 */",
 "/**
 * Load either the RSS2 comment feed or the RSS2 posts feed.
 *
 * @since 2.1.0
 *
 * @param bool $for_comments True for the comment feed, false for normal feed.
 */",
 "/**
 * Load either Atom comment feed or Atom posts feed.
 *
 * @since 2.1.0
 *
 * @param bool $for_comments True for the comment feed, false for normal feed.
 */",
 "/**
 * Display the robots.txt file content.
 *
 * The echo content should be with usage of the permalinks or for creating the
 * robots.txt file.
 *
 * @since 2.1.0
 * @uses do_action() Calls \'do_robotstxt\' hook for displaying robots.txt rules.
 */",
 "/**
 * Test whether blog is already installed.
 *
 * The cache will be checked first. If you have a cache plugin, which saves the
 * cache values, then this will work. If you use the default WordPress cache,
 * and the database goes away, then you might have problems.
 *
 * Checks for the option siteurl for whether WordPress is installed.
 *
 * @since 2.1.0
 * @uses $wpdb
 *
 * @return bool Whether blog is already installed.
 */",
 "/**
 * Retrieve URL with nonce added to URL query.
 *
 * @package WordPress
 * @subpackage Security
 * @since 2.0.4
 *
 * @param string $actionurl URL to add nonce action
 * @param string $action Optional. Nonce action name
 * @return string URL with nonce action added.
 */",
 "/**
 * Retrieve or display nonce hidden field for forms.
 *
 * The nonce field is used to validate that the contents of the form came from
 * the location on the current site and not somewhere else. The nonce does not
 * offer absolute protection, but should protect against most cases. It is very
 * important to use nonce field in forms.
 *
 * The $action and $name are optional, but if you want to have better security,
 * it is strongly suggested to set those two parameters. It is easier to just
 * call the function without any parameters, because validation of the nonce
 * doesn\'t require any parameters, but since crackers know what the default is
 * it won\'t be difficult for them to find a way around your nonce and cause
 * damage.
 *
 * The input name will be whatever $name value you gave. The input value will be
 * the nonce creation value.
 *
 * @package WordPress
 * @subpackage Security
 * @since 2.0.4
 *
 * @param string $action Optional. Action name.
 * @param string $name Optional. Nonce name.
 * @param bool $referer Optional, default true. Whether to set the referer field for validation.
 * @param bool $echo Optional, default true. Whether to display or return hidden form field.
 * @return string Nonce field.
 */",
 "/**
 * Retrieve or display referer hidden field for forms.
 *
 * The referer link is the current Request URI from the server super global. The
 * input name is \'_wp_http_referer\', in case you wanted to check manually.
 *
 * @package WordPress
 * @subpackage Security
 * @since 2.0.4
 *
 * @param bool $echo Whether to echo or return the referer field.
 * @return string Referer field.
 */",
 "/**
 * Retrieve or display original referer hidden field for forms.
 *
 * The input name is \'_wp_original_http_referer\' and will be either the same
 * value of {@link wp_referer_field()}, if that was posted already or it will
 * be the current page, if it doesn\'t exist.
 *
 * @package WordPress
 * @subpackage Security
 * @since 2.0.4
 *
 * @param bool $echo Whether to echo the original http referer
 * @param string $jump_back_to Optional, default is \'current\'. Can be \'previous\' or page you want to jump back to.
 * @return string Original referer field.
 */",
 "/**
 * Retrieve referer from \'_wp_http_referer\' or HTTP referer. If it\'s the same
 * as the current request URL, will return false.
 *
 * @package WordPress
 * @subpackage Security
 * @since 2.0.4
 *
 * @return string|bool False on failure. Referer URL on success.
 */",
 "/**
 * Retrieve original referer that was posted, if it exists.
 *
 * @package WordPress
 * @subpackage Security
 * @since 2.0.4
 *
 * @return string|bool False if no original referer or original referer if set.
 */",
 "/**
 * Recursive directory creation based on full path.
 *
 * Will attempt to set permissions on folders.
 *
 * @since 2.0.1
 *
 * @param string $target Full path to attempt to create.
 * @return bool Whether the path was created. True if path already exists.
 */",
 "/**
*Testifagivefilesystempathisabsolute(\'/foo/bar\',\'c:\windows\').
*
*@since2.5.0
*
*@paramstring$pathFilepath
*@returnboolTrueifpathisabsolute,falseisnotabsolute.
*/",
 "/**
*Jointwofilesystempathstogether(e.g.\'giveme$pathrelativeto$base\').
*
*Ifthe$pathisabsolute,thenitthefullpathisreturned.
*
*@since2.5.0
*
*@paramstring$base
*@paramstring$path
*@returnstringThepathwiththebaseorabsolutepath.
*/",
 "/**
*Determinesawritabledirectoryfortemporaryfiles.
*Function\'spreferenceistoWP_CONTENT_DIRfollowedbythereturnvalueof<code>sys_get_temp_dir()</code>,beforefinallydefaultingto/tmp/
*
*Intheeventthatthisfunctiondoesnotfindawritablelocation,Itmaybeoverriddenbythe<code>WP_TEMP_DIR</code>constantinyour<code>wp-config.php</code>file.
*
*@since2.5.0
*
*@returnstringWritabletemporarydirectory
*/",
 "/**
*Getanarraycontainingthecurrentuploaddirectory\'spathandurl.
*
*Checksthe\'upload_path\'option,whichshouldbefromthewebrootfolder,
*andifitisn\'temptyitwillbeused.Ifitisempty,thenthepathwillbe
*\'WP_CONTENT_DIR/uploads\'.Ifthe\'UPLOADS\'constantisdefined,thenitwill
*overridethe\'upload_path\'optionand\'WP_CONTENT_DIR/uploads\'path.
*
*TheuploadURLpathisseteitherbythe\'upload_url_path\'optionorbyusing
*the\'WP_CONTENT_URL\'constantandappending\'/uploads\'tothepath.
*
*Ifthe\'uploads_use_yearmonth_folders\'issettotrue(checkboxifcheckedin
*theadministrationsettingspanel),thenthetimewillbeused.Theformat
*willbeyearfirstandthenmonth.
*
*Ifthepathcouldn\'tbecreated,thenanerrorwillbereturnedwiththekey
*\'error\'containingtheerrormessage.Theerrorsuggeststhattheparent
*directoryisnotwritablebytheserver.
*
*Onsuccess,thereturnedarraywillhavemanyindices:
*\'path\'-basedirectoryandsubdirectoryorfullpathtouploaddirectory.
*\'url\'-baseurlandsubdirectoryorabsoluteURLtouploaddirectory.
*\'subdir\'-subdirectoryifuploadsuseyear/monthfoldersoptionison.
*\'basedir\'-pathwithoutsubdir.
*\'baseurl\'-URLpathwithoutsubdir.
*\'error\'-settofalse.
*
*@since2.0.0
*@usesapply_filters()Calls\'upload_dir\'onreturnedarray.
*
*@paramstring$timeOptional.Timeformattedin\'yyyy/mm\'.
*@returnarraySeeabovefordescription.
*/",
 "/**
*Getafilenamethatissanitizedanduniqueforthegivendirectory.
*
*Ifthefilenameisnotunique,thenanumberwillbeaddedtothefilename
*beforetheextension,andwillcontinueaddingnumbersuntilthefilenameis
*unique.
*
*Thecallbackispassedthreeparameters,thefirstoneisthedirectory,the
*secondisthefilename,andthethirdistheextension.
*
*@since2.5.0
*
*@paramstring$dir
*@paramstring$filename
*@parammixed$unique_filename_callbackCallback.
*@returnstringNewfilename,ifgivenwasn\'tunique.
*/",
 "/**
*Createafileintheuploadfolderwithgivencontent.
*
*Ifthereisanerror,thenthekey\'error\'willexistwiththeerrormessage.
*Ifsuccess,thenthekey\'file\'willhavetheuniquefilepath,the\'url\'key
*willhavethelinktothenewfile.andthe\'error\'keywillbesettofalse.
*
*Thisfunctionwillnotmoveanuploadedfiletotheuploadfolder.Itwill
*createanewfilewiththecontentin$bitsparameter.Ifyoumovetheupload
*file,readthecontentoftheuploadedfile,andthenyoucangivethe
*filenameandcontenttothisfunction,whichwilladdittotheupload
*folder.
*
*Thepermissionswillbesetonthenewfileautomaticallybythisfunction.
*
*@since2.0.0
*
*@paramstring$name
*@paramnull$deprecatedNeverused.Settonull.
*@parammixed$bitsFilecontent
*@paramstring$timeOptional.Timeformattedin\'yyyy/mm\'.
*@returnarray
*/",
 "/**
*Retrievethefiletypebasedontheextensionname.
*
*@packageWordPress
*@since2.5.0
*@usesapply_filters()Calls\'ext2type\'hookondefaultsupportedtypes.
*
*@paramstring$extTheextensiontosearch.
*@returnstring|nullThefiletype,example:audio,video,document,spreadsheet,etc.Nullifnotfound.
*/",
 "/**
*Retrievethefiletypefromthefilename.
*
*Youcanoptionallydefinethemimearray,ifneeded.
*
*@since2.0.4
*
*@paramstring$filenameFilenameorpath.
*@paramarray$mimesOptional.Keyisthefileextensionwithvalueasthemimetype.
*@returnarrayValueswithextensionfirstandmimetype.
*/",
 "/**
*Attempttodeterminetherealfiletypeofafile.
*Ifunableto,thefilenameextensionwillbeusedtodeterminetype.
*
*Ifit\'sdeterminedthattheextensiondoesnotmatchthefile\'srealtype,
*thenthe\"proper_filename\" value will be set with a proper filename and extension.
 *
 * Currently this function only supports validating images known to getimagesize().
 *
 * @since 3.0.0
 *
 * @param string $file Full path to the image.
 * @param string $filename The filename of the image (may differ from $file due to $file being in a tmp directory)
 * @param array $mimes Optional. Key is the file extension with value as the mime type.
 * @return array Values for the extension, MIME, and either a corrected filename or false if original $filename is valid
 */",
 "/**
 * Retrieve list of allowed mime types and file extensions.
 *
 * @since 2.8.6
 *
 * @return array Array of mime types keyed by the file extension regex corresponding to those types.
 */",
 "/**
 * Retrieve nonce action \"Are you sure\" message.
 *
 * The action is split by verb and noun. The action format is as follows:
 * verb-action_extra. The verb is before the first dash and has the format of
 * letters and no spaces and numbers. The noun is after the dash and before the
 * underscore, if an underscore exists. The noun is also only letters.
 *
 * The filter will be called for any action, which is not defined by WordPress.
 * You may use the filter for your plugin to explain nonce actions to the user,
 * when they get the \"Are you sure?\" message. The filter is in the format of
 * \'explain_nonce_$verb-$noun\' with the $verb replaced by the found verb and the
 * $noun replaced by the found noun. The two parameters that are given to the
 * hook are the localized \"Are you sure you want to do this?\" message with the
 * extra text (the text after the underscore).
 *
 * @package WordPress
 * @subpackage Security
 * @since 2.0.4
 *
 * @param string $action Nonce action.
 * @return string Are you sure message.
 */",
 "/**
 * Display \"Are You Sure\" message to confirm the action being taken.
 *
 * If the action has the nonce explain message, then it will be displayed along
 * with the \"Are you sure?\" message.
 *
 * @package WordPress
 * @subpackage Security
 * @since 2.0.4
 *
 * @param string $action The nonce action.
 */",
 "/**
 * Kill WordPress execution and display HTML message with error message.
 *
 * This function complements the die() PHP function. The difference is that
 * HTML will be displayed to the user. It is recommended to use this function
 * only, when the execution should not continue any further. It is not
 * recommended to call this function very often and try to handle as many errors
 * as possible silently.
 *
 * @since 2.0.4
 *
 * @param string $message Error message.
 * @param string $title Error title.
 * @param string|array $args Optional arguments to control behavior.
 */",
 "/**
 * Kill WordPress execution and display HTML message with error message.
 *
 * This is the default handler for wp_die if you want a custom one for your
 * site then you can overload using the wp_die_handler filter in wp_die
 *
 * @since 3.0.0
 * @access private
 *
 * @param string $message Error message.
 * @param string $title Error title.
 * @param string|array $args Optional arguments to control behavior.
 */",
 "/**
 * Kill WordPress execution and display XML message with error message.
 *
 * This is the handler for wp_die when processing XMLRPC requests.
 *
 * @since 3.2.0
 * @access private
 *
 * @param string $message Error message.
 * @param string $title Error title.
 * @param string|array $args Optional arguments to control behavior.
 */",
 "/**
 * Kill WordPress ajax execution.
 *
 * This is the handler for wp_die when processing Ajax requests.
 *
 * @since 3.4.0
 * @access private
 *
 * @param string $message Optional. Response to print.
 */",
 "/**
 * Kill WordPress execution.
 *
 * This is the handler for wp_die when processing APP requests.
 *
 * @since 3.4.0
 * @access private
 *
 * @param string $message Optional. Response to print.
 */",
 "/**
 * Retrieve the WordPress home page URL.
 *
 * If the constant named \'WP_HOME\' exists, then it will be used and returned by
 * the function. This can be used to counter the redirection on your local
 * development environment.
 *
 * @access private
 * @package WordPress
 * @since 2.2.0
 *
 * @param string $url URL for the home location
 * @return string Homepage location.
 */",
 "/**
 * Retrieve the WordPress site URL.
 *
 * If the constant named \'WP_SITEURL\' is defined, then the value in that
 * constant will always be returned. This can be used for debugging a site on
 * your localhost while not having to change the database to your URL.
 *
 * @access private
 * @package WordPress
 * @since 2.2.0
 *
 * @param string $url URL to set the WordPress site location.
 * @return string The WordPress Site URL
 */",
 "/**
 * Set the localized direction for MCE plugin.
 *
 * Will only set the direction to \'rtl\', if the WordPress locale has the text
 * direction set to \'rtl\'.
 *
 * Fills in the \'directionality\', \'plugins\', and \'theme_advanced_button1\' array
 * keys. These keys are then returned in the $input array.
 *
 * @access private
 * @package WordPress
 * @subpackage MCE
 * @since 2.1.0
 *
 * @param array $input MCE plugin array.
 * @return array Direction set for \'rtl\', if needed by locale.
 */",
 "/**
 * Convert smiley code to the icon graphic file equivalent.
 *
 * You can turn off smilies, by going to the write setting screen and unchecking
 * the box, or by setting \'use_smilies\' option to false or removing the option.
 *
 * Plugins may override the default smiley list by setting the $wpsmiliestrans
 * to an array, with the key the code the blogger types in and the value the
 * image file.
 *
 * The $wp_smiliessearch global is for the regular expression and is set each
 * time the function is called.
 *
 * The full list of smilies can be found in the function and won\'t be listed in
 * the description. Probably should create a Codex page for it, so that it is
 * available.
 *
 * @global array $wpsmiliestrans
 * @global array $wp_smiliessearch
 * @since 2.2.0
 */",
 "/**
 * Merge user defined arguments into defaults array.
 *
 * This function is used throughout WordPress to allow for both string or array
 * to be merged into another array.
 *
 * @since 2.2.0
 *
 * @param string|array $args Value to merge with $defaults
 * @param array $defaults Array that serves as the defaults.
 * @return array Merged user defined values with defaults.
 */",
 "/**
 * Clean up an array, comma- or space-separated list of IDs.
 *
 * @since 3.0.0
 *
 * @param array|string $list
 * @return array Sanitized array of IDs
 */",
 "/**
 * Extract a slice of an array, given a list of keys.
 *
 * @since 3.1.0
 *
 * @param array $array The original array
 * @param array $keys The list of keys
 * @return array The array slice
 */",
 "/**
 * Filters a list of objects, based on a set of key => value arguments.
 *
 * @since 3.0.0
 *
 * @param array $list An array of objects to filter
 * @param array $args An array of key => value arguments to match against each object
 * @param string $operator The logical operation to perform. \'or\' means only one element
 *	from the array needs to match; \'and\' means all elements must match. The default is \'and\'.
 * @param bool|string $field A field from the object to place instead of the entire object
 * @return array A list of objects or object fields
 */",
 "/**
 * Filters a list of objects, based on a set of key => value arguments.
 *
 * @since 3.1.0
 *
 * @param array $list An array of objects to filter
 * @param array $args An array of key => value arguments to match against each object
 * @param string $operator The logical operation to perform:
 *    \'AND\' means all elements from the array must match;
 *    \'OR\' means only one element needs to match;
 *    \'NOT\' means no elements may match.
 *   The default is \'AND\'.
 * @return array
 */",
 "/**
 * Pluck a certain field out of each object in a list.
 *
 * @since 3.1.0
 *
 * @param array $list A list of objects or arrays
 * @param int|string $field A field from the object to place instead of the entire object
 * @return array
 */",
 "/**
 * Determines if Widgets library should be loaded.
 *
 * Checks to make sure that the widgets library hasn\'t already been loaded. If
 * it hasn\'t, then it will load the widgets library and run an action hook.
 *
 * @since 2.2.0
 * @uses add_action() Calls \'_admin_menu\' hook with \'wp_widgets_add_menu\' value.
 */",
 "/**
 * Append the Widgets menu to the themes main menu.
 *
 * @since 2.2.0
 * @uses $submenu The administration submenu list.
 */",
 "/**
 * Flush all output buffers for PHP 5.2.
 *
 * Make sure all output buffers are flushed before our singletons our destroyed.
 *
 * @since 2.2.0
 */",
 "/**
 * Load custom DB error or display WordPress DB error.
 *
 * If a file exists in the wp-content directory named db-error.php, then it will
 * be loaded instead of displaying the WordPress DB error. If it is not found,
 * then the WordPress DB error will be displayed instead.
 *
 * The WordPress DB error sets the HTTP status header to 500 to try to prevent
 * search engines from caching the message. Custom DB messages should do the
 * same.
 *
 * This function was backported to the the WordPress 2.3.2, but originally was
 * added in WordPress 2.5.0.
 *
 * @since 2.3.2
 * @uses $wpdb
 */",
 "/**
 * Converts value to nonnegative integer.
 *
 * @since 2.5.0
 *
 * @param mixed $maybeint Data you wish to have converted to a nonnegative integer
 * @return int An nonnegative integer
 */",
 "/**
 * Determines if the blog can be accessed over SSL.
 *
 * Determines if blog can be accessed over SSL by using cURL to access the site
 * using the https in the siteurl. Requires cURL extension to work correctly.
 *
 * @since 2.5.0
 *
 * @param string $url
 * @return bool Whether SSL access is available
 */",
 "/**
 * Marks a function as deprecated and informs when it has been used.
 *
 * There is a hook deprecated_function_run that will be called that can be used
 * to get the backtrace up to what file and function called the deprecated
 * function.
 *
 * The current behavior is to trigger a user error if WP_DEBUG is true.
 *
 * This function is to be used in every function that is deprecated.
 *
 * @package WordPress
 * @subpackage Debug
 * @since 2.5.0
 * @access private
 *
 * @uses do_action() Calls \'deprecated_function_run\' and passes the function name, what to use instead,
 *   and the version the function was deprecated in.
 * @uses apply_filters() Calls \'deprecated_function_trigger_error\' and expects boolean value of true to do
 *   trigger or false to not trigger error.
 *
 * @param string $function The function that was called
 * @param string $version The version of WordPress that deprecated the function
 * @param string $replacement Optional. The function that should have been called
 */",
 "/**
 * Marks a file as deprecated and informs when it has been used.
 *
 * There is a hook deprecated_file_included that will be called that can be used
 * to get the backtrace up to what file and function included the deprecated
 * file.
 *
 * The current behavior is to trigger a user error if WP_DEBUG is true.
 *
 * This function is to be used in every file that is deprecated.
 *
 * @package WordPress
 * @subpackage Debug
 * @since 2.5.0
 * @access private
 *
 * @uses do_action() Calls \'deprecated_file_included\' and passes the file name, what to use instead,
 *   the version in which the file was deprecated, and any message regarding the change.
 * @uses apply_filters() Calls \'deprecated_file_trigger_error\' and expects boolean value of true to do
 *   trigger or false to not trigger error.
 *
 * @param string $file The file that was included
 * @param string $version The version of WordPress that deprecated the file
 * @param string $replacement Optional. The file that should have been included based on ABSPATH
 * @param string $message Optional. A message regarding the change
 */",
 "/**
 * Marks a function argument as deprecated and informs when it has been used.
 *
 * This function is to be used whenever a deprecated function argument is used.
 * Before this function is called, the argument must be checked for whether it was
 * used by comparing it to its default value or evaluating whether it is empty.
 * For example:
 * <code>
 * if ( !empty($deprecated) )
 * 	_deprecated_argument( __FUNCTION__, \'3.0\' );
 * </code>
 *
 * There is a hook deprecated_argument_run that will be called that can be used
 * to get the backtrace up to what file and function used the deprecated
 * argument.
 *
 * The current behavior is to trigger a user error if WP_DEBUG is true.
 *
 * @package WordPress
 * @subpackage Debug
 * @since 3.0.0
 * @access private
 *
 * @uses do_action() Calls \'deprecated_argument_run\' and passes the function name, a message on the change,
 *   and the version in which the argument was deprecated.
 * @uses apply_filters() Calls \'deprecated_argument_trigger_error\' and expects boolean value of true to do
 *   trigger or false to not trigger error.
 *
 * @param string $function The function that was called
 * @param string $version The version of WordPress that deprecated the argument used
 * @param string $message Optional. A message regarding the change.
 */",
 "/**
 * Marks something as being incorrectly called.
 *
 * There is a hook doing_it_wrong_run that will be called that can be used
 * to get the backtrace up to what file and function called the deprecated
 * function.
 *
 * The current behavior is to trigger a user error if WP_DEBUG is true.
 *
 * @package WordPress
 * @subpackage Debug
 * @since 3.1.0
 * @access private
 *
 * @uses do_action() Calls \'doing_it_wrong_run\' and passes the function arguments.
 * @uses apply_filters() Calls \'doing_it_wrong_trigger_error\' and expects boolean value of true to do
 *   trigger or false to not trigger error.
 *
 * @param string $function The function that was called.
 * @param string $message A message explaining what has been done incorrectly.
 * @param string $version The version of WordPress where the message was added.
 */",
 "/**
 * Is the server running earlier than 1.5.0 version of lighttpd?
 *
 * @since 2.5.0
 *
 * @return bool Whether the server is running lighttpd < 1.5.0
 */",
 "/**
 * Does the specified module exist in the Apache config?
 *
 * @since 2.5.0
 *
 * @param string $mod e.g. mod_rewrite
 * @param bool $default The default return value if the module is not found
 * @return bool
 */",
 "/**
 * Check if IIS 7 supports pretty permalinks.
 *
 * @since 2.8.0
 *
 * @return bool
 */",
 "/**
 * File validates against allowed set of defined rules.
 *
 * A return value of \'1\' means that the $file contains either \'..\' or \'./\'. A
 * return value of \'2\' means that the $file contains \':\' after the first
 * character. A return value of \'3\' means that the file is not in the allowed
 * files list.
 *
 * @since 1.2.0
 *
 * @param string $file File path.
 * @param array $allowed_files List of allowed files.
 * @return int 0 means nothing is wrong, greater than 0 means something was wrong.
 */",
 "/**
 * Determine if SSL is used.
 *
 * @since 2.6.0
 *
 * @return bool True if SSL, false if not used.
 */",
 "/**
 * Whether SSL login should be forced.
 *
 * @since 2.6.0
 *
 * @param string|bool $force Optional.
 * @return bool True if forced, false if not forced.
 */",
 "/**
 * Whether to force SSL used for the Administration Screens.
 *
 * @since 2.6.0
 *
 * @param string|bool $force
 * @return bool True if forced, false if not forced.
 */",
 "/**
 * Guess the URL for the site.
 *
 * Will remove wp-admin links to retrieve only return URLs not in the wp-admin
 * directory.
 *
 * @since 2.6.0
 *
 * @return string
 */",
 "/**
 * Temporarily suspend cache additions.
 *
 * Stops more data being added to the cache, but still allows cache retrieval.
 * This is useful for actions, such as imports, when a lot of data would otherwise
 * be almost uselessly added to the cache.
 *
 * Suspension lasts for a single page load at most. Remember to call this
 * function again if you wish to re-enable cache adds earlier.
 *
 * @since 3.3.0
 *
 * @param bool $suspend Optional. Suspends additions if true, re-enables them if false.
 * @return bool The current suspend setting
 */",
 "/**
 * Suspend cache invalidation.
 *
 * Turns cache invalidation on and off. Useful during imports where you don\'t wont to do invalidations
 * every time a post is inserted. Callers must be sure that what they are doing won\'t lead to an inconsistent
 * cache when invalidation is suspended.
 *
 * @since 2.7.0
 *
 * @param bool $suspend Whether to suspend or enable cache invalidation
 * @return bool The current suspend setting
 */",
 "/**
 * Is main site?
 *
 *
 * @since 3.0.0
 * @package WordPress
 *
 * @param int $blog_id optional blog id to test (default current blog)
 * @return bool True if not multisite or $blog_id is main site
 */",
 "/**
 * Whether global terms are enabled.
 *
 *
 * @since 3.0.0
 * @package WordPress
 *
 * @return bool True if multisite and global terms enabled
 */",
 "/**
 * gmt_offset modification for smart timezone handling.
 *
 * Overrides the gmt_offset option if we have a timezone_string available.
 *
 * @since 2.8.0
 *
 * @return float|bool
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.9.0
 *
 * @param unknown_type $a
 * @param unknown_type $b
 * @return int
 */",
 "/**
 * Gives a nicely formatted list of timezone strings. // temporary! Not in final
 *
 * @since 2.9.0
 *
 * @param string $selected_zone Selected Zone
 * @return string
 */",
 "/**
 * Strip close comment and close php tags from file headers used by WP.
 * See http://core.trac.wordpress.org/ticket/8497
 *
 * @since 2.8.0
 *
 * @param string $str
 * @return string
 */",
 "/**
 * Permanently deletes posts, pages, attachments, and comments which have been in the trash for EMPTY_TRASH_DAYS.
 *
 * @since 2.9.0
 */",
 "/**
 * Retrieve metadata from a file.
 *
 * Searches for metadata in the first 8kiB of a file, such as a plugin or theme.
 * Each piece of metadata must be on its own line. Fields can not span multiple
 * lines, the value will get cut at the end of the first line.
 *
 * If the file data is not within that first 8kiB, then the author should correct
 * their plugin file and move the data headers to the top.
 *
 * @see http://codex.wordpress.org/File_Header
 *
 * @since 2.9.0
 * @param string $file Path to the file
 * @param array $default_headers List of headers, in the format array(\'HeaderKey\' => \'Header Name\')
 * @param string $context If specified adds filter hook \"extra_{$context}_headers\"
 */",
 "/**
 * Used internally to tidy up the search terms.
 *
 * @access private
 * @since 2.9.0
 *
 * @param string $t
 * @return string
 */",
 "/**
 * Returns true.
 *
 * Useful for returning true to filters easily.
 *
 * @since 3.0.0
 * @see __return_false()
 * @return bool true
 */",
 "/**
 * Returns false.
 *
 * Useful for returning false to filters easily.
 *
 * @since 3.0.0
 * @see __return_true()
 * @return bool false
 */",
 "/**
 * Returns 0.
 *
 * Useful for returning 0 to filters easily.
 *
 * @since 3.0.0
 * @see __return_zero()
 * @return int 0
 */",
 "/**
 * Returns an empty array.
 *
 * Useful for returning an empty array to filters easily.
 *
 * @since 3.0.0
 * @see __return_zero()
 * @return array Empty array
 */",
 "/**
 * Returns null.
 *
 * Useful for returning null to filters easily.
 *
 * @since 3.4.0
 * @return null
 */",
 "/**
 * Send a HTTP header to disable content type sniffing in browsers which support it.
 *
 * @link http://blogs.msdn.com/ie/archive/2008/07/02/ie8-security-part-v-comprehensive-protection.aspx
 * @link http://src.chromium.org/viewvc/chrome?view=rev&revision=6985
 *
 * @since 3.0.0
 * @return none
 */",
 "/**
 * Returns a MySQL expression for selecting the week number based on the start_of_week option.
 *
 * @internal
 * @since 3.0.0
 * @param string $column
 * @return string
 */",
 "/**
 * Finds hierarchy loops using a callback function that maps object IDs to parent IDs.
 *
 * @since 3.1.0
 * @access private
 *
 * @param callback $callback function that accepts ( ID, $callback_args ) and outputs parent_ID
 * @param int $start The ID to start the loop check at
 * @param int $start_parent the parent_ID of $start to use instead of calling $callback( $start ). Use null to always use $callback
 * @param array $callback_args optional additional arguments to send to $callback
 * @return array IDs of all members of loop
 */",
 "/**
 * Uses the \"The Tortoise and the Hare\" algorithm to detect loops.
 *
 * For every step of the algorithm, the hare takes two steps and the tortoise one.
 * If the hare ever laps the tortoise, there must be a loop.
 *
 * @since 3.1.0
 * @access private
 *
 * @param callback $callback function that accepts ( ID, callback_arg, ... ) and outputs parent_ID
 * @param int $start The ID to start the loop check at
 * @param array $override an array of ( ID => parent_ID, ... ) to use instead of $callback
 * @param array $callback_args optional additional arguments to send to $callback
 * @param bool $_return_loop Return loop members or just detect presence of loop?
 *             Only set to true if you already know the given $start is part of a loop
 *             (otherwise the returned array might include branches)
 * @return mixed scalar ID of some arbitrary member of the loop, or array of IDs of all members of loop if $_return_loop
 */",
 "/**
 * Send a HTTP header to limit rendering of pages to same origin iframes.
 *
 * @link https://developer.mozilla.org/en/the_x-frame-options_response_header
 *
 * @since 3.1.3
 * @return none
 */",
 "/**
 * Retrieve a list of protocols to allow in HTML attributes.
 *
 * @since 3.3.0
 * @see wp_kses()
 * @see esc_url()
 *
 * @return array Array of allowed protocols
 */",
 "/**
 * Return a comma separated string of functions that have been called to get to the current point in code.
 *
 * @link http://core.trac.wordpress.org/ticket/19589
 * @since 3.4
 *
 * @param string $ignore_class A class to ignore all function calls within - useful when you want to just give info about the callee
 * @param int $skip_frames A number of stack frames to skip - useful for unwinding back to the source of the issue
 * @param bool $pretty Whether or not you want a comma separated string or raw array returned
 * @return string|array Either a string containing a reversed comma separated trace or an array of individual calls.
 */",
 "/**
 * Retrieve ids that are not already present in the cache
 *
 * @since 3.4.0
 *
 * @param array $object_ids ID list
 * @param string $cache_key The cache bucket to check against
 *
 * @return array
 */",
 "/**
 * Test if the current device has the capability to upload files.
 *
 * @since 3.4.0
 * @access private
 *
 * @return bool true|false
 */",
 "/**
 * WordPress Theme Install Administration API
 *
 * @package WordPress
 * @subpackage Administration
 */",
 "/**
 * Retrieve list of WordPress theme features (aka theme tags)
 *
 * @since 2.8.0
 *
 * @deprecated since 3.1.0 Use get_theme_feature_list() instead.
 *
 * @return array
 */",
 "/**
 * Display search form for searching themes.
 *
 * @since 2.8.0
 */",
 "/**
 * Display tags filter for themes.
 *
 * @since 2.8.0
 */",
 "/**
 * Prints a theme on the Install Themes pages.
 *
 * @deprecated 3.4.0
 */",
 "/**
 * Display theme content based on theme list.
 *
 * @since 2.8.0
 */",
 "/**
 * Display theme information in dialog box form.
 *
 * @since 2.8.0
 */",
 "/**
 * Instantiate the admin bar object and set it up as a global for access elsewhere.
 *
 * To hide the admin bar, you\'re looking in the wrong place. Unhooking this function will not
 * properly remove the admin bar. For that, use show_admin_bar(false) or the show_admin_bar filter.
 *
 * @since 3.1.0
 * @access private
 * @return bool Whether the admin bar was successfully initialized.
 */",
 "/**
 * Render the admin bar to the page based on the $wp_admin_bar->menu member var.
 * This is called very late on the footer actions so that it will render after anything else being
 * added to the footer.
 *
 * It includes the action \"admin_bar_menu\" which should be used to hook in and
 * add new menus to the admin bar. That way you can be sure that you are adding at most optimal point,
 * right before the admin bar is rendered. This also gives you access to the $post global, among others.
 *
 * @since 3.1.0
 */",
 "/**
 * Add the WordPress logo menu.
 *
 * @since 3.3.0
 */",
 "/**
 * Add the \"My Account\" item.
 *
 * @since 3.3.0
 */",
 "/**
 * Add the \"My Account\" submenu items.
 *
 * @since 3.1.0
 */",
 "/**
 * Add the \"Site Name\" menu.
 *
 * @since 3.3.0
 */",
 "/**
 * Add the \"My Sites/[Site Name]\" menu and all submenus.
 *
 * @since 3.1.0
 */",
 "/**
 * Provide a shortlink.
 *
 * @since 3.1.0
 */",
 "/**
 * Provide an edit link for posts and terms.
 *
 * @since 3.1.0
 */",
 "/**
 * Add \"Add New\" menu.
 *
 * @since 3.1.0
 */",
 "/**
 * Add edit comments link with awaiting moderation count bubble.
 *
 * @since 3.1.0
 */",
 "/**
 * Add appearance submenu items to the \"Site Name\" menu.
 *
 * @since 3.1.0
 */",
 "/**
 * Provide an update link if theme/plugin/core updates are available.
 *
 * @since 3.1.0
 */",
 "/**
 * Add search form.
 *
 * @since 3.3.0
 */",
 "/**
 * Add secondary menus.
 *
 * @since 3.3.0
 */",
 "/**
 * Style and scripts for the admin bar.
 *
 * @since 3.1.0
 *
 */",
 "/**
 * Default admin bar callback.
 *
 * @since 3.1.0
 *
 */",
 "/**
 * Set the display status of the admin bar.
 *
 * This can be called immediately upon plugin load. It does not need to be called from a function hooked to the init action.
 *
 * @since 3.1.0
 *
 * @param bool $show Whether to allow the admin bar to show.
 * @return void
 */",
 "/**
 * Determine whether the admin bar should be showing.
 *
 * @since 3.1.0
 *
 * @return bool Whether the admin bar should be showing.
 */",
 "/**
 * Retrieve the admin bar display preference of a user.
 *
 * @since 3.1.0
 * @access private
 *
 * @param string $context Context of this preference check. Defaults to \'front\'. The \'admin\'
 * 	preference is no longer used.
 * @param int $user Optional. ID of the user to check, defaults to 0 for current user.
 * @return bool Whether the admin bar should be showing for this user.
 */",
 "/**
 * Container for storing shortcode tags and their hook to call for the shortcode
 *
 * @since 2.5
 * @name $shortcode_tags
 * @var array
 * @global array $shortcode_tags
 */",
 "/**
 * Add hook for shortcode tag.
 *
 * There can only be one hook for each shortcode. Which means that if another
 * plugin has a similar shortcode, it will override yours or yours will override
 * theirs depending on which order the plugins are included and/or ran.
 *
 * Simplest example of a shortcode tag using the API:
 *
 * <code>
 * // [footag foo=\"bar\"]
 * function footag_func($atts) {
 * 	return \"foo = {$atts[foo]}\";
 * }
 * add_shortcode(\'footag\', \'footag_func\');
 * </code>
 *
 * Example with nice attribute defaults:
 *
 * <code>
 * // [bartag foo=\"bar\"]
 * function bartag_func($atts) {
 * 	extract(shortcode_atts(array(
 * 		\'foo\' => \'no foo\',
 * 		\'baz\' => \'default baz\',
 * 	), $atts));
 *
 * 	return \"foo = {$foo}\";
 * }
 * add_shortcode(\'bartag\', \'bartag_func\');
 * </code>
 *
 * Example with enclosed content:
 *
 * <code>
 * // [baztag]content[/baztag]
 * function baztag_func($atts, $content=\'\') {
 * 	return \"content = $content\";
 * }
 * add_shortcode(\'baztag\', \'baztag_func\');
 * </code>
 *
 * @since 2.5
 * @uses $shortcode_tags
 *
 * @param string $tag Shortcode tag to be searched in post content.
 * @param callable $func Hook to run when shortcode is found.
 */",
 "/**
 * Removes hook for shortcode.
 *
 * @since 2.5
 * @uses $shortcode_tags
 *
 * @param string $tag shortcode tag to remove hook for.
 */",
 "/**
 * Clear all shortcodes.
 *
 * This function is simple, it clears all of the shortcode tags by replacing the
 * shortcodes global by a empty array. This is actually a very efficient method
 * for removing all shortcodes.
 *
 * @since 2.5
 * @uses $shortcode_tags
 */",
 "/**
 * Search content for shortcodes and filter shortcodes through their hooks.
 *
 * If there are no shortcode tags defined, then the content will be returned
 * without any filtering. This might cause issues when plugins are disabled but
 * the shortcode will still show up in the post or content.
 *
 * @since 2.5
 * @uses $shortcode_tags
 * @uses get_shortcode_regex() Gets the search pattern for searching shortcodes.
 *
 * @param string $content Content to search for shortcodes
 * @return string Content with shortcodes filtered out.
 */",
 "/**
 * Retrieve the shortcode regular expression for searching.
 *
 * The regular expression combines the shortcode tags in the regular expression
 * in a regex class.
 *
 * The regular expression contains 6 different sub matches to help with parsing.
 *
 * 1 - An extra [ to allow for escaping shortcodes with double [[]]
 * 2 - The shortcode name
 * 3 - The shortcode argument list
 * 4 - The self closing /
 * 5 - The content of a shortcode when it wraps some content.
 * 6 - An extra ] to allow for escaping shortcodes with double [[]]
 *
 * @since 2.5
 * @uses $shortcode_tags
 *
 * @return string The shortcode search regular expression
 */",
 "/**
 * Regular Expression callable for do_shortcode() for calling shortcode hook.
 * @see get_shortcode_regex for details of the match array contents.
 *
 * @since 2.5
 * @access private
 * @uses $shortcode_tags
 *
 * @param array $m Regular expression match array
 * @return mixed False on failure.
 */",
 "/**
 * Retrieve all attributes from the shortcodes tag.
 *
 * The attributes list has the attribute name as the key and the value of the
 * attribute as the value in the key/value pair. This allows for easier
 * retrieval of the attributes, since all attributes have to be known.
 *
 * @since 2.5
 *
 * @param string $text
 * @return array List of attributes and their value.
 */",
 "/**
 * Combine user attributes with known attributes and fill in defaults when needed.
 *
 * The pairs should be considered to be all of the attributes which are
 * supported by the caller and given as a list. The returned attributes will
 * only contain the attributes in the $pairs list.
 *
 * If the $atts list has unsupported attributes, then they will be ignored and
 * removed from the final returned list.
 *
 * @since 2.5
 *
 * @param array $pairs Entire list of supported attributes and their defaults.
 * @param array $atts User defined attributes in shortcode tag.
 * @return array Combined and filtered attribute list.
 */",
 "/**
 * Remove all shortcode tags from the given content.
 *
 * @since 2.5
 * @uses $shortcode_tags
 *
 * @param string $content Content to remove shortcode tags.
 * @return string Content without shortcode tags.
 */",
 "/**
 * @package Akismet
 */",
 "/**
 * Registers dashboard widgets.
 *
 * Handles POST data, sets up filters.
 *
 * @since 2.5.0
 */",
 "/**
 * Displays the dashboard.
 *
 * @since 2.5.0
 */",
 "/**
 * Display recent comments dashboard widget content.
 *
 * @since 2.5.0
 */",
 "/**
 * The recent comments dashboard widget control.
 *
 * @since 3.0.0
 */",
 "/**
 * Display incoming links dashboard widget content.
 *
 * @since 2.5.0
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.5.0
 *
 * @param string $widget_id
 */",
 "/**
 * Display secondary dashboard RSS widget feed.
 *
 * @since 2.5.0
 *
 * @return unknown
 */",
 "/**
 * Display plugins most popular, newest plugins, and recently updated widget text.
 *
 * @since 2.5.0
 */",
 "/**
 * Checks to see if all of the feed url in $check_urls are cached.
 *
 * If $check_urls is empty, look for the rss feed url found in the dashboard
 * widget options of $widget_id. If cached, call $callback, a function that
 * echoes out output for this widget. If not cache, echo a \"Loading...\" stub
 * which is later replaced by AJAX call (see top of /wp-admin/index.php)
 *
 * @since 2.5.0
 *
 * @param string $widget_id
 * @param callback $callback
 * @param array $check_urls RSS feeds
 * @return bool False on failure. True on success.
 */",
 "/**
 * Calls widget control callback.
 *
 * @since 2.5.0
 *
 * @param int $widget_control_id Registered Widget ID.
 */",
 "/**
 * The RSS dashboard widget control.
 *
 * Sets up $args to be used as input to wp_widget_rss_form(). Handles POST data
 * from RSS-type widgets.
 *
 * @since 2.5.0
 *
 * @param string $widget_id
 * @param array $form_inputs
 */",
 "/**
		 * Response should be an array with:
		 *  \'name\' - string - A user friendly browser name
		 *  \'version\' - string - The most recent version of the browser
		 *  \'current_version\' - string - The version of the browser the user is using
		 *  \'upgrade\' - boolean - Whether the browser needs an upgrade
		 *  \'insecure\' - boolean - Whether the browser is deemed insecure
		 *  \'upgrade_url\' - string - The url to visit to upgrade
		 *  \'img_src\' - string - An image representing the browser
		 *  \'img_src_ssl\' - string - An image (over SSL) representing the browser
		 */",
 "/**
 * Check if the user needs a browser update
 *
 * @since 3.2.0
 *
 * @return array|bool False on failure, array of browser data on success.
 */",
 "/**
 * Empty function usable by plugins to output empty dashboard widget (to be populated later by JS).
 */",
 "/**
 * Displays a welcome panel to introduce users to WordPress.
 *
 * @since 3.3.0
 */",
 "/**
 * Determine if uploaded file exceeds space quota.
 *
 * @since 3.0.0
 *
 * @param array $file $_FILES array for a given file.
 * @return array $_FILES array with \'error\' key set if file exceeds quota. \'error\' is empty otherwise.
 */",
 "/**
 * Delete a blog
 *
 * @since 3.0.0
 *
 * @param int $blog_id Blog ID
 * @param bool $drop True if blog\'s table should be dropped. Default is false.
 * @return void
 */",
 "/**
 * Determines if there is any upload space left in the current blog\'s quota.
 *
 * @since 3.0.0
 * @return bool True if space is available, false otherwise.
 */",
 "/**
 * @since 3.0.0
 *
 * @return int of upload size limit in bytes
 */",
 "/**
 * Determines if there is any upload space left in the current blog\'s quota.
 *
 * @return int of upload space available in bytes
 */",
 "/**
 * Returns the upload quota for the current blog.
 *
 * @return int Quota
 */",
 "/**
 * Grants super admin privileges.
 *
 * @since 3.0.0
 * @param int $user_id
 */",
 "/**
 * Revokes super admin privileges.
 *
 * @since 3.0.0
 * @param int $user_id
 */",
 "/**
 * Whether or not we can edit this network from this page
 *
 * By default editing of network is restricted to the Network Admin for that site_id this allows for this to be overridden
 *
 * @since 3.1.0
 * @param integer $site_id The network/site id to check.
 */",
 "/**
 * Thickbox image paths for Network Admin.
 *
 * @since 3.1.0
 * @access private
 */",
 "/**
 * Whether or not we have a large network.
 *
 * The default criteria for a large network is either more than 10,000 users or more than 10,000 sites.
 * Plugins can alter this criteria using the \'wp_is_large_network\' filter.
 *
 * @since 3.3.0
 * @param string $using \'sites or \'users\'. Default is \'sites\'.
 * @return bool True if the network meets the criteria for large. False otherwise.
 */",
 "/**
 * Retrieve list of importers.
 *
 * @since 2.0.0
 *
 * @return array
 */",
 "/**
 * Register importer for WordPress.
 *
 * @since 2.0.0
 *
 * @param string $id Importer tag. Used to uniquely identify importer.
 * @param string $name Importer name and title.
 * @param string $description Importer description.
 * @param callback $callback Callback to run.
 * @return WP_Error Returns WP_Error when $callback is WP_Error.
 */",
 "/**
 * Cleanup importer.
 *
 * Removes attachment based on ID.
 *
 * @since 2.0.0
 *
 * @param string $id Importer ID.
 */",
 "/**
 * Handle importer uploading and add attachment.
 *
 * @since 2.0.0
 *
 * @return array Uploaded file\'s details on success, error message on failure
 */",
 "/**
 * The database character collate.
 * @var string
 * @global string
 * @name $charset_collate
 */",
 "/**
 * Retrieve the SQL for creating database tables.
 *
 * @since 3.3.0
 *
 * @param string $scope Optional. The tables for which to retrieve SQL. Can be all, global, ms_global, or blog tables. Defaults to all.
 * @param int $blog_id Optional. The blog ID for which to retrieve SQL. Default is the current blog ID.
 * @return string The SQL needed to create the requested tables.
 */",
 "/**
 * Create WordPress options and set the default values.
 *
 * @since 1.5.0
 * @uses $wpdb
 * @uses $wp_db_version
 */",
 "/**
 * Execute WordPress role creation for the various WordPress versions.
 *
 * @since 2.0.0
 */",
 "/**
 * Create the roles for WordPress 2.0
 *
 * @since 2.0.0
 */",
 "/**
 * Create and modify WordPress roles for WordPress 2.1.
 *
 * @since 2.1.0
 */",
 "/**
 * Create and modify WordPress roles for WordPress 2.3.
 *
 * @since 2.3.0
 */",
 "/**
 * Create and modify WordPress roles for WordPress 2.5.
 *
 * @since 2.5.0
 */",
 "/**
 * Create and modify WordPress roles for WordPress 2.6.
 *
 * @since 2.6.0
 */",
 "/**
 * Create and modify WordPress roles for WordPress 2.7.
 *
 * @since 2.7.0
 */",
 "/**
 * Create and modify WordPress roles for WordPress 2.8.
 *
 * @since 2.8.0
 */",
 "/**
 * Create and modify WordPress roles for WordPress 3.0.
 *
 * @since 3.0.0
 */",
 "/**
 * populate network settings
 *
 * @since 3.0.0
 *
 * @param int $network_id id of network to populate
 * @return bool|WP_Error True on success, or WP_Error on warning (with the install otherwise successful,
 * 	so the error code must be checked) or failure.
 */",
 "/**
 * Display the ID of the current item in the WordPress Loop.
 *
 * @since 0.71
 */",
 "/**
 * Retrieve the ID of the current item in the WordPress Loop.
 *
 * @since 2.1.0
 * @uses $post
 *
 * @return int
 */",
 "/**
 * Display or retrieve the current post title with optional content.
 *
 * @since 0.71
 *
 * @param string $before Optional. Content to prepend to the title.
 * @param string $after Optional. Content to append to the title.
 * @param bool $echo Optional, default to true.Whether to display or return.
 * @return null|string Null on no title. String if $echo parameter is false.
 */",
 "/**
 * Sanitize the current title when retrieving or displaying.
 *
 * Works like {@link the_title()}, except the parameters can be in a string or
 * an array. See the function for what can be override in the $args parameter.
 *
 * The title before it is displayed will have the tags stripped and {@link
 * esc_attr()} before it is passed to the user or displayed. The default
 * as with {@link the_title()}, is to display the title.
 *
 * @since 2.3.0
 *
 * @param string|array $args Optional. Override the defaults.
 * @return string|null Null on failure or display. String when echo is false.
 */",
 "/**
 * Retrieve post title.
 *
 * If the post is protected and the visitor is not an admin, then \"Protected\"
 * will be displayed before the post title. If the post is private, then
 * \"Private\" will be located before the post title.
 *
 * @since 0.71
 *
 * @param int $id Optional. Post ID.
 * @return string
 */",
 "/**
 * Display the Post Global Unique Identifier (guid).
 *
 * The guid will appear to be a link, but should not be used as an link to the
 * post. The reason you should not use it as a link, is because of moving the
 * blog across domains.
 *
 * Url is escaped to make it xml safe
 *
 * @since 1.5.0
 *
 * @param int $id Optional. Post ID.
 */",
 "/**
 * Retrieve the Post Global Unique Identifier (guid).
 *
 * The guid will appear to be a link, but should not be used as an link to the
 * post. The reason you should not use it as a link, is because of moving the
 * blog across domains.
 *
 * @since 1.5.0
 *
 * @param int $id Optional. Post ID.
 * @return string
 */",
 "/**
 * Display the post content.
 *
 * @since 0.71
 *
 * @param string $more_link_text Optional. Content for when there is more text.
 * @param bool $stripteaser Optional. Strip teaser content before the more text. Default is false.
 */",
 "/**
 * Retrieve the post content.
 *
 * @since 0.71
 *
 * @param string $more_link_text Optional. Content for when there is more text.
 * @param bool $stripteaser Optional. Strip teaser content before the more text. Default is false.
 * @return string
 */",
 "/**
 * Preview fix for javascript bug with foreign languages
 *
 * @since 3.1.0
 * @access private
 * @param array $match Match array from preg_replace_callback
 * @returns string
 */",
 "/**
 * Display the post excerpt.
 *
 * @since 0.71
 * @uses apply_filters() Calls \'the_excerpt\' hook on post excerpt.
 */",
 "/**
 * Retrieve the post excerpt.
 *
 * @since 0.71
 *
 * @param mixed $deprecated Not used.
 * @return string
 */",
 "/**
 * Whether post has excerpt.
 *
 * @since 2.3.0
 *
 * @param int $id Optional. Post ID.
 * @return bool
 */",
 "/**
 * Display the classes for the post div.
 *
 * @since 2.7.0
 *
 * @param string|array $class One or more classes to add to the class list.
 * @param int $post_id An optional post ID.
 */",
 "/**
 * Retrieve the classes for the post div as an array.
 *
 * The class names are add are many. If the post is a sticky, then the \'sticky\'
 * class name. The class \'hentry\' is always added to each post. For each
 * category, the class will be added with \'category-\' with category slug is
 * added. The tags are the same way as the categories with \'tag-\' before the tag
 * slug. All classes are passed through the filter, \'post_class\' with the list
 * of classes, followed by $class parameter value, with the post ID as the last
 * parameter.
 *
 * @since 2.7.0
 *
 * @param string|array $class One or more classes to add to the class list.
 * @param int $post_id An optional post ID.
 * @return array Array of classes.
 */",
 "/**
 * Display the classes for the body element.
 *
 * @since 2.8.0
 *
 * @param string|array $class One or more classes to add to the class list.
 */",
 "/**
 * Retrieve the classes for the body element as an array.
 *
 * @since 2.8.0
 *
 * @param string|array $class One or more classes to add to the class list.
 * @return array Array of classes.
 */",
 "/**
 * Whether post requires password and correct password has been provided.
 *
 * @since 2.7.0
 *
 * @param int|object $post An optional post. Global $post used if not provided.
 * @return bool false if a password is not required or the correct password cookie is present, true otherwise.
 */",
 "/**
 * Display \"sticky\" CSS class, if a post is sticky.
 *
 * @since 2.7.0
 *
 * @param int $post_id An optional post ID.
 */",
 "/**
 * The formatted output of a list of pages.
 *
 * Displays page links for paginated posts (i.e. includes the <!--nextpage-->.
 * Quicktag one or more times). This tag must be within The Loop.
 *
 * The defaults for overwriting are:
 * \'next_or_number\' - Default is \'number\' (string). Indicates whether page
 *      numbers should be used. Valid values are number and next.
 * \'nextpagelink\' - Default is \'Next Page\' (string). Text for link to next page.
 *      of the bookmark.
 * \'previouspagelink\' - Default is \'Previous Page\' (string). Text for link to
 *      previous page, if available.
 * \'pagelink\' - Default is \'%\' (String).Format string for page numbers. The % in
 *      the parameter string will be replaced with the page number, so Page %
 *      generates \"Page 1\", \"Page 2\", etc. Defaults to %, just the page number.
 * \'before\' - Default is \'<p> Pages:\' (string). The html or text to prepend to
 *      each bookmarks.
 * \'after\' - Default is \'</p>\' (string). The html or text to append to each
 *      bookmarks.
 * \'link_before\' - Default is \'\' (string). The html or text to prepend to each
 *      Pages link inside the <a> tag. Also prepended to the current item, which
 *      is not linked.
 * \'link_after\' - Default is \'\' (string). The html or text to append to each
 *      Pages link inside the <a> tag. Also appended to the current item, which
 *      is not linked.
 *
 * @since 1.2.0
 * @access private
 *
 * @param string|array $args Optional. Overwrite the defaults.
 * @return string Formatted output in HTML.
 */",
 "/**
 * Helper function for wp_link_pages().
 *
 * @since 3.1.0
 * @access private
 *
 * @param int $i Page number.
 * @return string Link.
 */",
 "/**
 * Retrieve post custom meta data field.
 *
 * @since 1.5.0
 *
 * @param string $key Meta data key name.
 * @return bool|string|array Array of values or single value, if only one element exists. False will be returned if key does not exist.
 */",
 "/**
 * Display list of post custom fields.
 *
 * @internal This will probably change at some point...
 * @since 1.2.0
 * @uses apply_filters() Calls \'the_meta_key\' on list item HTML content, with key and value as separate parameters.
 */",
 "/**
 * Retrieve or display list of pages as a dropdown (select list).
 *
 * @since 2.1.0
 *
 * @param array|string $args Optional. Override default arguments.
 * @return string HTML content, if not displaying.
 */",
 "/**
 * Retrieve or display list of pages in list (li) format.
 *
 * @since 1.5.0
 *
 * @param array|string $args Optional. Override default arguments.
 * @return string HTML content, if not displaying.
 */",
 "/**
 * Display or retrieve list of pages with optional home link.
 *
 * The arguments are listed below and part of the arguments are for {@link
 * wp_list_pages()} function. Check that function for more info on those
 * arguments.
 *
 * <ul>
 * <li><strong>sort_column</strong> - How to sort the list of pages. Defaults
 * to page title. Use column for posts table.</li>
 * <li><strong>menu_class</strong> - Class to use for the div ID which contains
 * the page list. Defaults to \'menu\'.</li>
 * <li><strong>echo</strong> - Whether to echo list or return it. Defaults to
 * echo.</li>
 * <li><strong>link_before</strong> - Text before show_home argument text.</li>
 * <li><strong>link_after</strong> - Text after show_home argument text.</li>
 * <li><strong>show_home</strong> - If you set this argument, then it will
 * display the link to the home page. The show_home argument really just needs
 * to be set to the value of the text of the link.</li>
 * </ul>
 *
 * @since 2.7.0
 *
 * @param array|string $args
 */",
 "/**
 * Retrieve HTML list content for page list.
 *
 * @uses Walker_Page to create HTML list content.
 * @since 2.1.0
 * @see Walker_Page::walk() for parameters and return description.
 */",
 "/**
 * Retrieve HTML dropdown (select) content for page list.
 *
 * @uses Walker_PageDropdown to create HTML dropdown content.
 * @since 2.1.0
 * @see Walker_PageDropdown::walk() for parameters and return description.
 */",
 "/**
	 * @see Walker::start_lvl()
	 * @since 2.1.0
	 *
	 * @param string $output Passed by reference. Used to append additional content.
	 * @param int $depth Depth of page. Used for padding.
	 */",
 "/**
	 * @see Walker::end_lvl()
	 * @since 2.1.0
	 *
	 * @param string $output Passed by reference. Used to append additional content.
	 * @param int $depth Depth of page. Used for padding.
	 */",
 "/**
	 * @see Walker::start_el()
	 * @since 2.1.0
	 *
	 * @param string $output Passed by reference. Used to append additional content.
	 * @param object $page Page data object.
	 * @param int $depth Depth of page. Used for padding.
	 * @param int $current_page Page ID.
	 * @param array $args
	 */",
 "/**
	 * @see Walker::end_el()
	 * @since 2.1.0
	 *
	 * @param string $output Passed by reference. Used to append additional content.
	 * @param object $page Page data object. Not used.
	 * @param int $depth Depth of page. Not Used.
	 */",
 "/**
 * Create HTML list of pages.
 *
 * @package WordPress
 * @since 2.1.0
 * @uses Walker
 */",
 "/**
	 * @see Walker::start_el()
	 * @since 2.1.0
	 *
	 * @param string $output Passed by reference. Used to append additional content.
	 * @param object $page Page data object.
	 * @param int $depth Depth of page in reference to parent pages. Used for padding.
	 * @param array $args Uses \'selected\' argument for selected page to set selected HTML attribute for option element.
	 */",
 "/**
 * Create HTML dropdown list of pages.
 *
 * @package WordPress
 * @since 2.1.0
 * @uses Walker
 */",
 "/**
 * Display an attachment page link using an image or icon.
 *
 * @since 2.0.0
 *
 * @param int $id Optional. Post ID.
 * @param bool $fullsize Optional, default is false. Whether to use full size.
 * @param bool $deprecated Deprecated. Not used.
 * @param bool $permalink Optional, default is false. Whether to include permalink.
 */",
 "/**
 * Retrieve an attachment page link using an image or icon, if possible.
 *
 * @since 2.5.0
 * @uses apply_filters() Calls \'wp_get_attachment_link\' filter on HTML content with same parameters as function.
 *
 * @param int $id Optional. Post ID.
 * @param string $size Optional, default is \'thumbnail\'. Size of image, either array or string.
 * @param bool $permalink Optional, default is false. Whether to add permalink to image.
 * @param bool $icon Optional, default is false. Whether to include icon.
 * @param string $text Optional, default is false. If string, then will be link text.
 * @return string HTML content.
 */",
 "/**
 * Wrap attachment in <<p>> element before content.
 *
 * @since 2.0.0
 * @uses apply_filters() Calls \'prepend_attachment\' hook on HTML content.
 *
 * @param string $content
 * @return string
 */",
 "/**
 * Retrieve protected post password form content.
 *
 * @since 1.0.0
 * @uses apply_filters() Calls \'the_password_form\' filter on output.
 *
 * @return string HTML content for password form for password protected post.
 */",
 "/**
 * Whether currently in a page template.
 *
 * This template tag allows you to determine if you are in a page template.
 * You can optionally provide a template name and then the check will be
 * specific to that template.
 *
 * @since 2.5.0
 * @uses $wp_query
 *
 * @param string $template The specific template name if specific matching is required.
 * @return bool False on failure, true if success.
 */",
 "/**
 * Get the specific template name for a page.
 *
 * @since 3.4.0
 *
 * @param int $id The page ID to check. Defaults to the current post, when used in the loop.
 * @return string|bool Page template filename. Returns an empty string when the default page template
 * 	is in use. Returns false if the post is not a page.
 */",
 "/**
 * Retrieve formatted date timestamp of a revision (linked to that revisions\'s page).
 *
 * @package WordPress
 * @subpackage Post_Revisions
 * @since 2.6.0
 *
 * @uses date_i18n()
 *
 * @param int|object $revision Revision ID or revision object.
 * @param bool $link Optional, default is true. Link to revisions\'s page?
 * @return string i18n formatted datetimestamp or localized \'Current Revision\'.
 */",
 "/**
 * Display list of a post\'s revisions.
 *
 * Can output either a UL with edit links or a TABLE with diff interface, and
 * restore action links.
 *
 * Second argument controls parameters:
 *   (bool)   parent : include the parent (the \"Current Revision\") in the list.
 *   (string) format : \'list\' or \'form-table\'. \'list\' outputs UL, \'form-table\'
 *                     outputs TABLE with UI.
 *   (int)    right  : what revision is currently being viewed - used in
 *                     form-table format.
 *   (int)    left   : what revision is currently being diffed against right -
 *                     used in form-table format.
 *
 * @package WordPress
 * @subpackage Post_Revisions
 * @since 2.6.0
 *
 * @uses wp_get_post_revisions()
 * @uses wp_post_revision_title()
 * @uses get_edit_post_link()
 * @uses get_the_author_meta()
 *
 * @todo split into two functions (list, form-table) ?
 *
 * @param int|object $post_id Post ID or post object.
 * @param string|array $args See description {@link wp_parse_args()}.
 * @return null
 */",
 "/**
 * Media Library List Table class.
 *
 * @package WordPress
 * @subpackage List_Table
 * @since 3.1.0
 * @access private
 */",
 "/**
 * Defines Multisite upload constants.
 *
 * @since 3.0.0
 */",
 "/**
 * Defines Multisite cookie constants.
 *
 * @since 3.0.0
 */",
 "/**
 * Defines Multisite file constants.
 *
 * @since 3.0.0
 */",
 "/**
 * Defines Multisite subdomain constants and handles warnings and notices.
 *
 * VHOST is deprecated in favor of SUBDOMAIN_INSTALL, which is a bool.
 *
 * On first call, the constants are checked and defined. On second call,
 * we will have translations loaded and can trigger warnings easily.
 *
 * @since 3.0.0
 */",
 "/**
	 * Outputs the hidden row displayed when inline editing
	 *
	 * @since 3.1.0
	 */",
 "/**
 * Terms List Table class.
 *
 * @package WordPress
 * @subpackage List_Table
 * @since 3.1.0
 * @access private
 */",
 "/**
 * Adds data to the cache, if the cache key doesn\'t already exist.
 *
 * @since 2.0.0
 * @uses $wp_object_cache Object Cache Class
 * @see WP_Object_Cache::add()
 *
 * @param int|string $key The cache key to use for retrieval later
 * @param mixed $data The data to add to the cache store
 * @param string $group The group to add the cache to
 * @param int $expire When the cache data should be expired
 * @return unknown
 */",
 "/**
 * Closes the cache.
 *
 * This function has ceased to do anything since WordPress 2.5. The
 * functionality was removed along with the rest of the persistent cache. This
 * does not mean that plugins can\'t implement this function when they need to
 * make sure that the cache is cleaned up after WordPress no longer needs it.
 *
 * @since 2.0.0
 *
 * @return bool Always returns True
 */",
 "/**
 * Decrement numeric cache item\'s value
 *
 * @since 3.3.0
 * @uses $wp_object_cache Object Cache Class
 * @see WP_Object_Cache::decr()
 *
 * @param int|string $key The cache key to increment
 * @param int $offset The amount by which to decrement the item\'s value. Default is 1.
 * @param string $group The group the key is in.
 * @return false|int False on failure, the item\'s new value on success.
 */",
 "/**
 * Removes the cache contents matching key and group.
 *
 * @since 2.0.0
 * @uses $wp_object_cache Object Cache Class
 * @see WP_Object_Cache::delete()
 *
 * @param int|string $key What the contents in the cache are called
 * @param string $group Where the cache contents are grouped
 * @return bool True on successful removal, false on failure
 */",
 "/**
 * Removes all cache items.
 *
 * @since 2.0.0
 * @uses $wp_object_cache Object Cache Class
 * @see WP_Object_Cache::flush()
 *
 * @return bool Always returns true
 */",
 "/**
 * Retrieves the cache contents from the cache by key and group.
 *
 * @since 2.0.0
 * @uses $wp_object_cache Object Cache Class
 * @see WP_Object_Cache::get()
 *
 * @param int|string $key What the contents in the cache are called
 * @param string $group Where the cache contents are grouped
 * @param bool $force Whether to force an update of the local cache from the persistent cache (default is false)
 * @param &bool $found Whether key was found in the cache. Disambiguates a return of false, a storable value.
 * @return bool|mixed False on failure to retrieve contents or the cache
 *		contents on success
 */",
 "/**
 * Increment numeric cache item\'s value
 *
 * @since 3.3.0
 * @uses $wp_object_cache Object Cache Class
 * @see WP_Object_Cache::incr()
 *
 * @param int|string $key The cache key to increment
 * @param int $offset The amount by which to increment the item\'s value. Default is 1.
 * @param string $group The group the key is in.
 * @return false|int False on failure, the item\'s new value on success.
 */",
 "/**
 * Sets up Object Cache Global and assigns it.
 *
 * @since 2.0.0
 * @global WP_Object_Cache $wp_object_cache WordPress Object Cache
 */",
 "/**
 * Replaces the contents of the cache with new data.
 *
 * @since 2.0.0
 * @uses $wp_object_cache Object Cache Class
 * @see WP_Object_Cache::replace()
 *
 * @param int|string $key What to call the contents in the cache
 * @param mixed $data The contents to store in the cache
 * @param string $group Where to group the cache contents
 * @param int $expire When to expire the cache contents
 * @return bool False if cache key and group already exist, true on success
 */",
 "/**
 * Saves the data to the cache.
 *
 * @since 2.0
 * @uses $wp_object_cache Object Cache Class
 * @see WP_Object_Cache::set()
 *
 * @param int|string $key What to call the contents in the cache
 * @param mixed $data The contents to store in the cache
 * @param string $group Where to group the cache contents
 * @param int $expire When to expire the cache contents
 * @return bool False if cache key and group already exist, true on success
 */",
 "/**
 * Adds a group or set of groups to the list of global groups.
 *
 * @since 2.6.0
 *
 * @param string|array $groups A group or an array of groups to add
 */",
 "/**
 * Adds a group or set of groups to the list of non-persistent groups.
 *
 * @since 2.6.0
 *
 * @param string|array $groups A group or an array of groups to add
 */",
 "/**
 * Reset internal cache keys and structures. If the cache backend uses global blog or site IDs as part of its cache keys,
 * this function instructs the backend to reset those keys and perform any cleanup since blog or site IDs have changed since cache init.
 *
 * @since 2.6.0
 */",
 "/**
	 * Adds data to the cache if it doesn\'t already exist.
	 *
	 * @uses WP_Object_Cache::_exists Checks to see if the cache already has data.
	 * @uses WP_Object_Cache::set Sets the data after the checking the cache
	 *		contents existence.
	 *
	 * @since 2.0.0
	 *
	 * @param int|string $key What to call the contents in the cache
	 * @param mixed $data The contents to store in the cache
	 * @param string $group Where to group the cache contents
	 * @param int $expire When to expire the cache contents
	 * @return bool False if cache key and group already exist, true on success
	 */",
 "/**
	 * Sets the list of global groups.
	 *
	 * @since 3.0.0
	 *
	 * @param array $groups List of groups that are global.
	 */",
 "/**
	 * Decrement numeric cache item\'s value
	 *
	 * @since 3.3.0
	 *
	 * @param int|string $key The cache key to increment
	 * @param int $offset The amount by which to decrement the item\'s value. Default is 1.
	 * @param string $group The group the key is in.
	 * @return false|int False on failure, the item\'s new value on success.
	 */",
 "/**
	 * Remove the contents of the cache key in the group
	 *
	 * If the cache key does not exist in the group and $force parameter is set
	 * to false, then nothing will happen. The $force parameter is set to false
	 * by default.
	 *
	 * @since 2.0.0
	 *
	 * @param int|string $key What the contents in the cache are called
	 * @param string $group Where the cache contents are grouped
	 * @param bool $force Optional. Whether to force the unsetting of the cache
	 *		key in the group
	 * @return bool False if the contents weren\'t deleted and true on success
	 */",
 "/**
	 * Clears the object cache of all data
	 *
	 * @since 2.0.0
	 *
	 * @return bool Always returns true
	 */",
 "/**
	 * Retrieves the cache contents, if it exists
	 *
	 * The contents will be first attempted to be retrieved by searching by the
	 * key in the cache group. If the cache is hit (success) then the contents
	 * are returned.
	 *
	 * On failure, the number of cache misses will be incremented.
	 *
	 * @since 2.0.0
	 *
	 * @param int|string $key What the contents in the cache are called
	 * @param string $group Where the cache contents are grouped
	 * @param string $force Whether to force a refetch rather than relying on the local cache (default is false)
	 * @return bool|mixed False on failure to retrieve contents or the cache
	 *		contents on success
	 */",
 "/**
	 * Increment numeric cache item\'s value
	 *
	 * @since 3.3.0
	 *
	 * @param int|string $key The cache key to increment
	 * @param int $offset The amount by which to increment the item\'s value. Default is 1.
	 * @param string $group The group the key is in.
	 * @return false|int False on failure, the item\'s new value on success.
	 */",
 "/**
	 * Replace the contents in the cache, if contents already exist
	 *
	 * @since 2.0.0
	 * @see WP_Object_Cache::set()
	 *
	 * @param int|string $key What to call the contents in the cache
	 * @param mixed $data The contents to store in the cache
	 * @param string $group Where to group the cache contents
	 * @param int $expire When to expire the cache contents
	 * @return bool False if not exists, true if contents were replaced
	 */",
 "/**
	 * Reset keys
	 *
	 * @since 3.0.0
	 */",
 "/**
	 * Sets the data contents into the cache
	 *
	 * The cache contents is grouped by the $group parameter followed by the
	 * $key. This allows for duplicate ids in unique groups. Therefore, naming of
	 * the group should be used with care and should follow normal function
	 * naming guidelines outside of core WordPress usage.
	 *
	 * The $expire parameter is not used, because the cache will automatically
	 * expire for each time a page is accessed and PHP finishes. The method is
	 * more for cache plugins which use files.
	 *
	 * @since 2.0.0
	 *
	 * @param int|string $key What to call the contents in the cache
	 * @param mixed $data The contents to store in the cache
	 * @param string $group Where to group the cache contents
	 * @param int $expire Not Used
	 * @return bool Always returns true
	 */",
 "/**
	 * Echoes the stats of the caching.
	 *
	 * Gives the cache hits, and cache misses. Also prints every cached group,
	 * key and the data.
	 *
	 * @since 2.0.0
	 */",
 "/**
	 * Utility function to determine whether a key exists in the cache.
	 * @access private
	 */",
 "/**
	 * Sets up object properties; PHP 5 style constructor
	 *
	 * @since 2.0.8
	 * @return null|WP_Object_Cache If cache is disabled, returns null.
	 */",
 "/**
	 * Will save the object cache before object is completely destroyed.
	 *
	 * Called upon object destruction, which should be when PHP ends.
	 *
	 * @since  2.0.8
	 *
	 * @return bool True value. Won\'t be used by PHP
	 */",
 "/**
 * WordPress Object Cache
 *
 * The WordPress Object Cache is used to save on trips to the database. The
 * Object Cache stores all of the cache data to memory and makes the cache
 * contents available by using a key, which is used to name and later retrieve
 * the cache contents.
 *
 * The Object Cache can be replaced by other caching mechanisms by placing files
 * in the wp-content folder which is looked at in wp-settings. If that file
 * exists, then this file will not be included.
 *
 * @package WordPress
 * @subpackage Cache
 * @since 2.0
 */",
 "/**
 * Properly enqueue styles and scripts for our theme options page.
 *
 * This function is attached to the admin_enqueue_scripts action hook.
 *
 * @since Twenty Eleven 1.0
 *
 */",
 "/**
 * Register the form setting for our twentyeleven_options array.
 *
 * This function is attached to the admin_init action hook.
 *
 * This call to register_setting() registers a validation callback, twentyeleven_theme_options_validate(),
 * which is used when the option is saved, to ensure that our option values are complete, properly
 * formatted, and safe.
 *
 * @since Twenty Eleven 1.0
 */",
 "/**
 * Change the capability required to save the \'twentyeleven_options\' options group.
 *
 * @see twentyeleven_theme_options_init() First parameter to register_setting() is the name of the options group.
 * @see twentyeleven_theme_options_add_page() The edit_theme_options capability is used for viewing the page.
 *
 * By default, the options groups for all registered settings require the manage_options capability.
 * This filter is required to change our theme options page to edit_theme_options instead.
 * By default, only administrators have either of these capabilities, but the desire here is
 * to allow for finer-grained control for roles and users.
 *
 * @param string $capability The capability used for the page, which is manage_options by default.
 * @return string The capability to actually use.
 */",
 "/**
 * Add our theme options page to the admin menu, including some help documentation.
 *
 * This function is attached to the admin_menu action hook.
 *
 * @since Twenty Eleven 1.0
 */",
 "/**
 * Returns an array of color schemes registered for Twenty Eleven.
 *
 * @since Twenty Eleven 1.0
 */",
 "/**
 * Returns an array of layout options registered for Twenty Eleven.
 *
 * @since Twenty Eleven 1.0
 */",
 "/**
 * Returns the default options for Twenty Eleven.
 *
 * @since Twenty Eleven 1.0
 */",
 "/**
 * Returns the default link color for Twenty Eleven, based on color scheme.
 *
 * @since Twenty Eleven 1.0
 *
 * @param $string $color_scheme Color scheme. Defaults to the active color scheme.
 * @return $string Color.
*/",
 "/**
 * Returns the options array for Twenty Eleven.
 *
 * @since Twenty Eleven 1.0
 */",
 "/**
 * Renders the Color Scheme setting field.
 *
 * @since Twenty Eleven 1.3
 */",
 "/**
 * Renders the Link Color setting field.
 *
 * @since Twenty Eleven 1.3
 */",
 "/**
 * Renders the Layout setting field.
 *
 * @since Twenty Eleven 1.3
 */",
 "/**
 * Returns the options array for Twenty Eleven.
 *
 * @since Twenty Eleven 1.2
 */",
 "/**
 * Sanitize and validate form input. Accepts an array, return a sanitized array.
 *
 * @see twentyeleven_theme_options_init()
 * @todo set up Reset Options action
 *
 * @since Twenty Eleven 1.0
 */",
 "/**
 * Enqueue the styles for the current color scheme.
 *
 * @since Twenty Eleven 1.0
 */",
 "/**
 * Add a style block to the theme for the current link color.
 *
 * This function is attached to the wp_head action hook.
 *
 * @since Twenty Eleven 1.0
 */",
 "/**
 * Adds Twenty Eleven layout classes to the array of body classes.
 *
 * @since Twenty Eleven 1.0
 */",
 "/**
 * Implements Twenty Eleven theme options into Theme Customizer
 *
 * @param $wp_customize Theme Customizer object
 * @return void
 *
 * @since Twenty Eleven 1.3
 */",
 "/**
 * Bind JS handlers to make Theme Customizer preview reload changes asynchronously.
 * Used with blogname and blogdescription.
 *
 * @since Twenty Eleven 1.3
 */",
 "/**
					 * Begin the featured posts section.
					 *
					 * See if we have any sticky posts and use them to create our featured posts.
					 * We limit the featured posts at ten.
					 */",
 "/**
					 * We will need to count featured posts starting from zero
					 * to create the slider navigation.
					 */",
 "/**
					 * We\'re going to add a class to our featured post for featured images
					 * by default it\'ll have the feature-text class.
					 */",
 "/**
	 * @see Walker::start_lvl()
	 * @since 3.0.0
	 *
	 * @param string $output Passed by reference. Used to append additional content.
	 * @param int $depth Depth of page. Used for padding.
	 */",
 "/**
	 * @see Walker::end_lvl()
	 * @since 3.0.0
	 *
	 * @param string $output Passed by reference. Used to append additional content.
	 * @param int $depth Depth of page. Used for padding.
	 */",
 "/**
	 * @see Walker::start_el()
	 * @since 3.0.0
	 *
	 * @param string $output Passed by reference. Used to append additional content.
	 * @param object $item Menu item data object.
	 * @param int $depth Depth of menu item. Used for padding.
	 * @param int $current_page Menu item ID.
	 * @param object $args
	 */",
 "/**
	 * @see Walker::end_el()
	 * @since 3.0.0
	 *
	 * @param string $output Passed by reference. Used to append additional content.
	 * @param object $item Page data object. Not used.
	 * @param int $depth Depth of page. Not Used.
	 */",
 "/**
 * Create HTML list of nav menu items.
 *
 * @package WordPress
 * @since 3.0.0
 * @uses Walker
 */",
 "/**
 * Displays a navigation menu.
 *
 * Optional $args contents:
 *
 * menu - The menu that is desired. Accepts (matching in order) id, slug, name. Defaults to blank.
 * menu_class - CSS class to use for the ul element which forms the menu. Defaults to \'menu\'.
 * menu_id - The ID that is applied to the ul element which forms the menu. Defaults to the menu slug, incremented.
 * container - Whether to wrap the ul, and what to wrap it with. Defaults to \'div\'.
 * container_class - the class that is applied to the container. Defaults to \'menu-{menu slug}-container\'.
 * container_id - The ID that is applied to the container. Defaults to blank.
 * fallback_cb - If the menu doesn\'t exists, a callback function will fire. Defaults to \'wp_page_menu\'. Set to false for no fallback.
 * before - Text before the link text.
 * after - Text after the link text.
 * link_before - Text before the link.
 * link_after - Text after the link.
 * echo - Whether to echo the menu or return it. Defaults to echo.
 * depth - how many levels of the hierarchy are to be included. 0 means all. Defaults to 0.
 * walker - allows a custom walker to be specified.
 * theme_location - the location in the theme to be used. Must be registered with register_nav_menu() in order to be selectable by the user.
 * items_wrap - How the list items should be wrapped. Defaults to a ul with an id and class. Uses printf() format with numbered placeholders.
 *
 * @since 3.0.0
 *
 * @param array $args Arguments
 */",
 "/**
 * Add the class property classes for the current context, if applicable.
 *
 * @access private
 * @since 3.0
 *
 * @param array $menu_items The current menu item objects to which to add the class property information.
 */",
 "/**
 * Retrieve the HTML list content for nav menu items.
 *
 * @uses Walker_Nav_Menu to create HTML list content.
 * @since 3.0.0
 * @see Walker::walk() for parameters and return description.
 */",
 "/**
 * Prevents a menu item ID from being used more than once.
 *
 * @since 3.0.1
 * @access private
 */",
 "/**
 * Creates the initial taxonomies.
 *
 * This function fires twice: in wp-settings.php before plugins are loaded (for
 * backwards compatibility reasons), and again on the \'init\' action. We must avoid
 * registering rewrite rules before the \'init\' action.
 */",
 "/**
 * Get a list of registered taxonomy objects.
 *
 * @package WordPress
 * @subpackage Taxonomy
 * @since 3.0.0
 * @uses $wp_taxonomies
 * @see register_taxonomy
 *
 * @param array $args An array of key => value arguments to match against the taxonomy objects.
 * @param string $output The type of output to return, either taxonomy \'names\' or \'objects\'. \'names\' is the default.
 * @param string $operator The logical operation to perform. \'or\' means only one element
 *  from the array needs to match; \'and\' means all elements must match. The default is \'and\'.
 * @return array A list of taxonomy names or objects
 */",
 "/**
 * Return all of the taxonomy names that are of $object_type.
 *
 * It appears that this function can be used to find all of the names inside of
 * $wp_taxonomies global variable.
 *
 * <code><?php $taxonomies = get_object_taxonomies(\'post\'); ?></code> Should
 * result in <code>Array(\'category\', \'post_tag\')</code>
 *
 * @package WordPress
 * @subpackage Taxonomy
 * @since 2.3.0
 *
 * @uses $wp_taxonomies
 *
 * @param array|string|object $object Name of the type of taxonomy object, or an object (row from posts)
 * @param string $output The type of output to return, either taxonomy \'names\' or \'objects\'. \'names\' is the default.
 * @return array The names of all taxonomy of $object_type.
 */",
 "/**
 * Retrieves the taxonomy object of $taxonomy.
 *
 * The get_taxonomy function will first check that the parameter string given
 * is a taxonomy object and if it is, it will return it.
 *
 * @package WordPress
 * @subpackage Taxonomy
 * @since 2.3.0
 *
 * @uses $wp_taxonomies
 * @uses taxonomy_exists() Checks whether taxonomy exists
 *
 * @param string $taxonomy Name of taxonomy object to return
 * @return object|bool The Taxonomy Object or false if $taxonomy doesn\'t exist
 */",
 "/**
 * Checks that the taxonomy name exists.
 *
 * Formerly is_taxonomy(), introduced in 2.3.0.
 *
 * @package WordPress
 * @subpackage Taxonomy
 * @since 3.0.0
 *
 * @uses $wp_taxonomies
 *
 * @param string $taxonomy Name of taxonomy object
 * @return bool Whether the taxonomy exists.
 */",
 "/**
 * Whether the taxonomy object is hierarchical.
 *
 * Checks to make sure that the taxonomy is an object first. Then Gets the
 * object, and finally returns the hierarchical value in the object.
 *
 * A false return value might also mean that the taxonomy does not exist.
 *
 * @package WordPress
 * @subpackage Taxonomy
 * @since 2.3.0
 *
 * @uses taxonomy_exists() Checks whether taxonomy exists
 * @uses get_taxonomy() Used to get the taxonomy object
 *
 * @param string $taxonomy Name of taxonomy object
 * @return bool Whether the taxonomy is hierarchical
 */",
 "/**
 * Create or modify a taxonomy object. Do not use before init.
 *
 * A simple function for creating or modifying a taxonomy object based on the
 * parameters given. The function will accept an array (third optional
 * parameter), along with strings for the taxonomy name and another string for
 * the object type.
 *
 * Nothing is returned, so expect error maybe or use taxonomy_exists() to check
 * whether taxonomy exists.
 *
 * Optional $args contents:
 *
 * label - Name of the taxonomy shown in the menu. Usually plural. If not set, labels[\'name\'] will be used.
 *
 * hierarchical - has some defined purpose at other parts of the API and is a
 * boolean value.
 *
 * update_count_callback - works much like a hook, in that it will be called when the count is updated.
 * 	Defaults to _update_post_term_count() for taxonomies attached to post types, which then confirms
 * 	that the objects are published before counting them.
 * 	Defaults to _update_generic_term_count() for taxonomies attached to other object types, such as links.
 *
 * rewrite - false to prevent rewrite, or array(\'slug\'=>$slug) to customize
 * permastruct; default will use $taxonomy as slug.
 *
 * query_var - false to prevent queries, or string to customize query var
 * (?$query_var=$term); default will use $taxonomy as query var.
 *
 * public - If the taxonomy should be publicly queryable; //@TODO not implemented.
 * defaults to true.
 *
 * show_ui - If the WordPress UI admin tags UI should apply to this taxonomy;
 * defaults to public.
 *
 * show_in_nav_menus - true makes this taxonomy available for selection in navigation menus.
 * Defaults to public.
 *
 * show_tagcloud - false to prevent the taxonomy being listed in the Tag Cloud Widget;
 * defaults to show_ui which defaults to public.
 *
 * labels - An array of labels for this taxonomy. You can see accepted values in {@link get_taxonomy_labels()}. By default tag labels are used for non-hierarchical types and category labels for hierarchical ones.
 *
 * @package WordPress
 * @subpackage Taxonomy
 * @since 2.3.0
 * @uses $wp_taxonomies Inserts new taxonomy object into the list
 * @uses $wp Adds query vars
 *
 * @param string $taxonomy Name of taxonomy object
 * @param array|string $object_type Name of the object type for the taxonomy object.
 * @param array|string $args See above description for the two keys values.
 */",
 "/**
 * Builds an object with all taxonomy labels out of a taxonomy object
 *
 * Accepted keys of the label array in the taxonomy object:
 * - name - general name for the taxonomy, usually plural. The same as and overridden by $tax->label. Default is Tags/Categories
 * - singular_name - name for one object of this taxonomy. Default is Tag/Category
 * - search_items - Default is Search Tags/Search Categories
 * - popular_items - This string isn\'t used on hierarchical taxonomies. Default is Popular Tags
 * - all_items - Default is All Tags/All Categories
 * - parent_item - This string isn\'t used on non-hierarchical taxonomies. In hierarchical ones the default is Parent Category
 * - parent_item_colon - The same as <code>parent_item</code>, but with colon <code>:</code> in the end
 * - edit_item - Default is Edit Tag/Edit Category
 * - view_item - Default is View Tag/View Category
 * - update_item - Default is Update Tag/Update Category
 * - add_new_item - Default is Add New Tag/Add New Category
 * - new_item_name - Default is New Tag Name/New Category Name
 * - separate_items_with_commas - This string isn\'t used on hierarchical taxonomies. Default is \"Separate tags with commas\", used in the meta box.
 * - add_or_remove_items - This string isn\'t used on hierarchical taxonomies. Default is \"Add or remove tags\", used in the meta box when JavaScript is disabled.
 * - choose_from_most_used - This string isn\'t used on hierarchical taxonomies. Default is \"Choose from the most used tags\", used in the meta box.
 *
 * Above, the first default value is for non-hierarchical taxonomies (like tags) and the second one is for hierarchical taxonomies (like categories).
 *
 * @since 3.0.0
 * @param object $tax Taxonomy object
 * @return object object with all the labels as member variables
 */",
 "/**
 * Add an already registered taxonomy to an object type.
 *
 * @package WordPress
 * @subpackage Taxonomy
 * @since 3.0.0
 * @uses $wp_taxonomies Modifies taxonomy object
 *
 * @param string $taxonomy Name of taxonomy object
 * @param string $object_type Name of the object type
 * @return bool True if successful, false if not
 */",
 "/**
 * Retrieve object_ids of valid taxonomy and term.
 *
 * The strings of $taxonomies must exist before this function will continue. On
 * failure of finding a valid taxonomy, it will return an WP_Error class, kind
 * of like Exceptions in PHP 5, except you can\'t catch them. Even so, you can
 * still test for the WP_Error class and get the error message.
 *
 * The $terms aren\'t checked the same as $taxonomies, but still need to exist
 * for $object_ids to be returned.
 *
 * It is possible to change the order that object_ids is returned by either
 * using PHP sort family functions or using the database by using $args with
 * either ASC or DESC array. The value should be in the key named \'order\'.
 *
 * @package WordPress
 * @subpackage Taxonomy
 * @since 2.3.0
 *
 * @uses $wpdb
 * @uses wp_parse_args() Creates an array from string $args.
 *
 * @param int|array $term_ids Term id or array of term ids of terms that will be used
 * @param string|array $taxonomies String of taxonomy name or Array of string values of taxonomy names
 * @param array|string $args Change the order of the object_ids, either ASC or DESC
 * @return WP_Error|array If the taxonomy does not exist, then WP_Error will be returned. On success
 *	the array can be empty meaning that there are no $object_ids found or it will return the $object_ids found.
 */",
 "/**
 * Given a taxonomy query, generates SQL to be appended to a main query.
 *
 * @since 3.1.0
 *
 * @see WP_Tax_Query
 *
 * @param array $tax_query A compact tax query
 * @param string $primary_table
 * @param string $primary_id_column
 * @return array
 */",
 "/**
	 * Constructor.
	 *
	 * Parses a compact tax query and sets defaults.
	 *
	 * @since 3.1.0
	 * @access public
	 *
	 * @param array $tax_query A compact tax query:
	 *  array(
	 *    \'relation\' => \'OR\',
	 *    array(
	 *      \'taxonomy\' => \'tax1\',
	 *      \'terms\' => array( \'term1\', \'term2\' ),
	 *      \'field\' => \'slug\',
	 *    ),
	 *    array(
	 *      \'taxonomy\' => \'tax2\',
	 *      \'terms\' => array( \'term-a\', \'term-b\' ),
	 *      \'field\' => \'slug\',
	 *    ),
	 *  )
	 */",
 "/**
	 * Generates SQL clauses to be appended to a main query.
	 *
	 * @since 3.1.0
	 * @access public
	 *
	 * @param string $primary_table
	 * @param string $primary_id_column
	 * @return array
	 */",
 "/**
	 * Validates a single query.
	 *
	 * @since 3.2.0
	 * @access private
	 *
	 * @param array &$query The single query
	 */",
 "/**
	 * Transforms a single query, from one field to another.
	 *
	 * @since 3.2.0
	 * @access private
	 *
	 * @param array &$query The single query
	 * @param string $resulting_field The resulting field
	 */",
 "/**
 * Container class for a multiple taxonomy query.
 *
 * @since 3.1.0
 */",
 "/**
 * Get all Term data from database by Term ID.
 *
 * The usage of the get_term function is to apply filters to a term object. It
 * is possible to get a term object from the database before applying the
 * filters.
 *
 * $term ID must be part of $taxonomy, to get from the database. Failure, might
 * be able to be captured by the hooks. Failure would be the same value as $wpdb
 * returns for the get_row method.
 *
 * There are two hooks, one is specifically for each term, named \'get_term\', and
 * the second is for the taxonomy name, \'term_$taxonomy\'. Both hooks gets the
 * term object, and the taxonomy name as parameters. Both hooks are expected to
 * return a Term object.
 *
 * \'get_term\' hook - Takes two parameters the term Object and the taxonomy name.
 * Must return term object. Used in get_term() as a catch-all filter for every
 * $term.
 *
 * \'get_$taxonomy\' hook - Takes two parameters the term Object and the taxonomy
 * name. Must return term object. $taxonomy will be the taxonomy name, so for
 * example, if \'category\', it would be \'get_category\' as the filter name. Useful
 * for custom taxonomies or plugging into default taxonomies.
 *
 * @package WordPress
 * @subpackage Taxonomy
 * @since 2.3.0
 *
 * @uses $wpdb
 * @uses sanitize_term() Cleanses the term based on $filter context before returning.
 * @see sanitize_term_field() The $context param lists the available values for get_term_by() $filter param.
 *
 * @param int|object $term If integer, will get from database. If object will apply filters and return $term.
 * @param string $taxonomy Taxonomy name that $term is part of.
 * @param string $output Constant OBJECT, ARRAY_A, or ARRAY_N
 * @param string $filter Optional, default is raw or no WordPress defined filter will applied.
 * @return mixed|null|WP_Error Term Row from database. Will return null if $term is empty. If taxonomy does not
 * exist then WP_Error will be returned.
 */",
 "/**
 * Get all Term data from database by Term field and data.
 *
 * Warning: $value is not escaped for \'name\' $field. You must do it yourself, if
 * required.
 *
 * The default $field is \'id\', therefore it is possible to also use null for
 * field, but not recommended that you do so.
 *
 * If $value does not exist, the return value will be false. If $taxonomy exists
 * and $field and $value combinations exist, the Term will be returned.
 *
 * @package WordPress
 * @subpackage Taxonomy
 * @since 2.3.0
 *
 * @uses $wpdb
 * @uses sanitize_term() Cleanses the term based on $filter context before returning.
 * @see sanitize_term_field() The $context param lists the available values for get_term_by() $filter param.
 *
 * @param string $field Either \'slug\', \'name\', or \'id\'
 * @param string|int $value Search for this term value
 * @param string $taxonomy Taxonomy Name
 * @param string $output Constant OBJECT, ARRAY_A, or ARRAY_N
 * @param string $filter Optional, default is raw or no WordPress defined filter will applied.
 * @return mixed Term Row from database. Will return false if $taxonomy does not exist or $term was not found.
 */",
 "/**
 * Merge all term children into a single array of their IDs.
 *
 * This recursive function will merge all of the children of $term into the same
 * array of term IDs. Only useful for taxonomies which are hierarchical.
 *
 * Will return an empty array if $term does not exist in $taxonomy.
 *
 * @package WordPress
 * @subpackage Taxonomy
 * @since 2.3.0
 *
 * @uses $wpdb
 * @uses _get_term_hierarchy()
 * @uses get_term_children() Used to get the children of both $taxonomy and the parent $term
 *
 * @param string $term_id ID of Term to get children
 * @param string $taxonomy Taxonomy Name
 * @return array|WP_Error List of Term Objects. WP_Error returned if $taxonomy does not exist
 */",
 "/**
 * Get sanitized Term field.
 *
 * Does checks for $term, based on the $taxonomy. The function is for contextual
 * reasons and for simplicity of usage. See sanitize_term_field() for more
 * information.
 *
 * @package WordPress
 * @subpackage Taxonomy
 * @since 2.3.0
 *
 * @uses sanitize_term_field() Passes the return value in sanitize_term_field on success.
 *
 * @param string $field Term field to fetch
 * @param int $term Term ID
 * @param string $taxonomy Taxonomy Name
 * @param string $context Optional, default is display. Look at sanitize_term_field() for available options.
 * @return mixed Will return an empty string if $term is not an object or if $field is not set in $term.
 */",
 "/**
 * Sanitizes Term for editing.
 *
 * Return value is sanitize_term() and usage is for sanitizing the term for
 * editing. Function is for contextual and simplicity.
 *
 * @package WordPress
 * @subpackage Taxonomy
 * @since 2.3.0
 *
 * @uses sanitize_term() Passes the return value on success
 *
 * @param int|object $id Term ID or Object
 * @param string $taxonomy Taxonomy Name
 * @return mixed|null|WP_Error Will return empty string if $term is not an object.
 */",
 "/**
 * Retrieve the terms in a given taxonomy or list of taxonomies.
 *
 * You can fully inject any customizations to the query before it is sent, as
 * well as control the output with a filter.
 *
 * The \'get_terms\' filter will be called when the cache has the term and will
 * pass the found term along with the array of $taxonomies and array of $args.
 * This filter is also called before the array of terms is passed and will pass
 * the array of terms, along with the $taxonomies and $args.
 *
 * The \'list_terms_exclusions\' filter passes the compiled exclusions along with
 * the $args.
 *
 * The \'get_terms_orderby\' filter passes the ORDER BY clause for the query
 * along with the $args array.
 *
 * The \'get_terms_fields\' filter passes the fields for the SELECT query
 * along with the $args array.
 *
 * The list of arguments that $args can contain, which will overwrite the defaults:
 *
 * orderby - Default is \'name\'. Can be name, count, term_group, slug or nothing
 * (will use term_id), Passing a custom value other than these will cause it to
 * order based on the custom value.
 *
 * order - Default is ASC. Can use DESC.
 *
 * hide_empty - Default is true. Will not return empty terms, which means
 * terms whose count is 0 according to the given taxonomy.
 *
 * exclude - Default is an empty array. An array, comma- or space-delimited string
 * of term ids to exclude from the return array. If \'include\' is non-empty,
 * \'exclude\' is ignored.
 *
 * exclude_tree - Default is an empty array. An array, comma- or space-delimited
 * string of term ids to exclude from the return array, along with all of their
 * descendant terms according to the primary taxonomy. If \'include\' is non-empty,
 * \'exclude_tree\' is ignored.
 *
 * include - Default is an empty array. An array, comma- or space-delimited string
 * of term ids to include in the return array.
 *
 * number - The maximum number of terms to return. Default is to return them all.
 *
 * offset - The number by which to offset the terms query.
 *
 * fields - Default is \'all\', which returns an array of term objects.
 * If \'fields\' is \'ids\' or \'names\', returns an array of
 * integers or strings, respectively.
 *
 * slug - Returns terms whose \"slug\" matches this value. Default is empty string.
 *
 * hierarchical - Whether to include terms that have non-empty descendants
 * (even if \'hide_empty\' is set to true).
 *
 * search - Returned terms\' names will contain the value of \'search\',
 * case-insensitive. Default is an empty string.
 *
 * name__like - Returned terms\' names will begin with the value of \'name__like\',
 * case-insensitive. Default is empty string.
 *
 * The argument \'pad_counts\', if set to true will include the quantity of a term\'s
 * children in the quantity of each term\'s \"count\" object variable.
 *
 * The \'get\' argument, if set to \'all\' instead of its default empty string,
 * returns terms regardless of ancestry or whether the terms are empty.
 *
 * The \'child_of\' argument, when used, should be set to the integer of a term ID. Its default
 * is 0. If set to a non-zero value, all returned terms will be descendants
 * of that term according to the given taxonomy. Hence \'child_of\' is set to 0
 * if more than one taxonomy is passed in $taxonomies, because multiple taxonomies
 * make term ancestry ambiguous.
 *
 * The \'parent\' argument, when used, should be set to the integer of a term ID. Its default is
 * the empty string \'\', which has a different meaning from the integer 0.
 * If set to an integer value, all returned terms will have as an immediate
 * ancestor the term whose ID is specified by that integer according to the given taxonomy.
 * The \'parent\' argument is different from \'child_of\' in that a term X is considered a \'parent\'
 * of term Y only if term X is the father of term Y, not its grandfather or great-grandfather, etc.
 *
 * The \'cache_domain\' argument enables a unique cache key to be produced when this query is stored
 * in object cache. For instance, if you are using one of this function\'s filters to modify the
 * query (such as \'terms_clauses\'), setting \'cache_domain\' to a unique value will not overwrite
 * the cache for similar queries. Default value is \'core\'.
 *
 * @package WordPress
 * @subpackage Taxonomy
 * @since 2.3.0
 *
 * @uses $wpdb
 * @uses wp_parse_args() Merges the defaults with those defined by $args and allows for strings.
 *
 * @param string|array $taxonomies Taxonomy name or list of Taxonomy names
 * @param string|array $args The values of what to search for when returning terms
 * @return array|WP_Error List of Term Objects and their children. Will return WP_Error, if any of $taxonomies do not exist.
 */",
 "/**
 * Check if Term exists.
 *
 * Formerly is_term(), introduced in 2.3.0.
 *
 * @package WordPress
 * @subpackage Taxonomy
 * @since 3.0.0
 *
 * @uses $wpdb
 *
 * @param int|string $term The term to check
 * @param string $taxonomy The taxonomy name to use
 * @param int $parent ID of parent term under which to confine the exists search.
 * @return mixed Returns 0 if the term does not exist. Returns the term ID if no taxonomy is specified
 * 	and the term ID exists. Returns an array of the term ID and the taxonomy if the pairing exists.
 */",
 "/**
 * Check if a term is an ancestor of another term.
 *
 * You can use either an id or the term object for both parameters.
 *
 * @since 3.4.0
 *
 * @param int|object $term1 ID or object to check if this is the parent term.
 * @param int|object $term2 The child term.
 * @param string $taxonomy Taxonomy name that $term1 and $term2 belong to.
 * @return bool Whether $term2 is child of $term1
 */",
 "/**
 * Sanitize Term all fields.
 *
 * Relies on sanitize_term_field() to sanitize the term. The difference is that
 * this function will sanitize <strong>all</strong> fields. The context is based
 * on sanitize_term_field().
 *
 * The $term is expected to be either an array or an object.
 *
 * @package WordPress
 * @subpackage Taxonomy
 * @since 2.3.0
 *
 * @uses sanitize_term_field Used to sanitize all fields in a term
 *
 * @param array|object $term The term to check
 * @param string $taxonomy The taxonomy name to use
 * @param string $context Default is \'display\'.
 * @return array|object Term with all fields sanitized
 */",
 "/**
 * Cleanse the field value in the term based on the context.
 *
 * Passing a term field value through the function should be assumed to have
 * cleansed the value for whatever context the term field is going to be used.
 *
 * If no context or an unsupported context is given, then default filters will
 * be applied.
 *
 * There are enough filters for each context to support a custom filtering
 * without creating your own filter function. Simply create a function that
 * hooks into the filter you need.
 *
 * @package WordPress
 * @subpackage Taxonomy
 * @since 2.3.0
 *
 * @uses $wpdb
 *
 * @param string $field Term field to sanitize
 * @param string $value Search for this term value
 * @param int $term_id Term ID
 * @param string $taxonomy Taxonomy Name
 * @param string $context Either edit, db, display, attribute, or js.
 * @return mixed sanitized field
 */",
 "/**
 * Count how many terms are in Taxonomy.
 *
 * Default $args is \'hide_empty\' which can be \'hide_empty=true\' or array(\'hide_empty\' => true).
 *
 * @package WordPress
 * @subpackage Taxonomy
 * @since 2.3.0
 *
 * @uses get_terms()
 * @uses wp_parse_args() Turns strings into arrays and merges defaults into an array.
 *
 * @param string $taxonomy Taxonomy name
 * @param array|string $args Overwrite defaults. See get_terms()
 * @return int How many terms are in $taxonomy
 */",
 "/**
 * Will unlink the object from the taxonomy or taxonomies.
 *
 * Will remove all relationships between the object and any terms in
 * a particular taxonomy or taxonomies. Does not remove the term or
 * taxonomy itself.
 *
 * @package WordPress
 * @subpackage Taxonomy
 * @since 2.3.0
 * @uses $wpdb
 *
 * @param int $object_id The term Object Id that refers to the term
 * @param string|array $taxonomies List of Taxonomy Names or single Taxonomy name.
 */",
 "/**
 * Removes a term from the database.
 *
 * If the term is a parent of other terms, then the children will be updated to
 * that term\'s parent.
 *
 * The $args \'default\' will only override the terms found, if there is only one
 * term found. Any other and the found terms are used.
 *
 * The $args \'force_default\' will force the term supplied as default to be
 * assigned even if the object was not going to be termless
 * @package WordPress
 * @subpackage Taxonomy
 * @since 2.3.0
 *
 * @uses $wpdb
 * @uses do_action() Calls both \'delete_term\' and \'delete_$taxonomy\' action
 *	hooks, passing term object, term id. \'delete_term\' gets an additional
 *	parameter with the $taxonomy parameter.
 *
 * @param int $term Term ID
 * @param string $taxonomy Taxonomy Name
 * @param array|string $args Optional. Change \'default\' term id and override found term ids.
 * @return bool|WP_Error Returns false if not term; true if completes delete action.
 */",
 "/**
 * Deletes one existing category.
 *
 * @since 2.0.0
 * @uses wp_delete_term()
 *
 * @param int $cat_ID
 * @return mixed Returns true if completes delete action; false if term doesn\'t exist;
 * 	Zero on attempted deletion of default Category; WP_Error object is also a possibility.
 */",
 "/**
 * Retrieves the terms associated with the given object(s), in the supplied taxonomies.
 *
 * The following information has to do the $args parameter and for what can be
 * contained in the string or array of that parameter, if it exists.
 *
 * The first argument is called, \'orderby\' and has the default value of \'name\'.
 * The other value that is supported is \'count\'.
 *
 * The second argument is called, \'order\' and has the default value of \'ASC\'.
 * The only other value that will be acceptable is \'DESC\'.
 *
 * The final argument supported is called, \'fields\' and has the default value of
 * \'all\'. There are multiple other options that can be used instead. Supported
 * values are as follows: \'all\', \'ids\', \'names\', and finally
 * \'all_with_object_id\'.
 *
 * The fields argument also decides what will be returned. If \'all\' or
 * \'all_with_object_id\' is chosen or the default kept intact, then all matching
 * terms objects will be returned. If either \'ids\' or \'names\' is used, then an
 * array of all matching term ids or term names will be returned respectively.
 *
 * @package WordPress
 * @subpackage Taxonomy
 * @since 2.3.0
 * @uses $wpdb
 *
 * @param int|array $object_ids The ID(s) of the object(s) to retrieve.
 * @param string|array $taxonomies The taxonomies to retrieve terms from.
 * @param array|string $args Change what is returned
 * @return array|WP_Error The requested term data or empty array if no terms found. WP_Error if any of the $taxonomies don\'t exist.
 */",
 "/**
 * Adds a new term to the database. Optionally marks it as an alias of an existing term.
 *
 * Error handling is assigned for the nonexistence of the $taxonomy and $term
 * parameters before inserting. If both the term id and taxonomy exist
 * previously, then an array will be returned that contains the term id and the
 * contents of what is returned. The keys of the array are \'term_id\' and
 * \'term_taxonomy_id\' containing numeric values.
 *
 * It is assumed that the term does not yet exist or the above will apply. The
 * term will be first added to the term table and then related to the taxonomy
 * if everything is well. If everything is correct, then several actions will be
 * run prior to a filter and then several actions will be run after the filter
 * is run.
 *
 * The arguments decide how the term is handled based on the $args parameter.
 * The following is a list of the available overrides and the defaults.
 *
 * \'alias_of\'. There is no default, but if added, expected is the slug that the
 * term will be an alias of. Expected to be a string.
 *
 * \'description\'. There is no default. If exists, will be added to the database
 * along with the term. Expected to be a string.
 *
 * \'parent\'. Expected to be numeric and default is 0 (zero). Will assign value
 * of \'parent\' to the term.
 *
 * \'slug\'. Expected to be a string. There is no default.
 *
 * If \'slug\' argument exists then the slug will be checked to see if it is not
 * a valid term. If that check succeeds (it is not a valid term), then it is
 * added and the term id is given. If it fails, then a check is made to whether
 * the taxonomy is hierarchical and the parent argument is not empty. If the
 * second check succeeds, the term will be inserted and the term id will be
 * given.
 *
 * @package WordPress
 * @subpackage Taxonomy
 * @since 2.3.0
 * @uses $wpdb
 *
 * @uses apply_filters() Calls \'pre_insert_term\' hook with term and taxonomy as parameters.
 * @uses do_action() Calls \'create_term\' hook with the term id and taxonomy id as parameters.
 * @uses do_action() Calls \'create_$taxonomy\' hook with term id and taxonomy id as parameters.
 * @uses apply_filters() Calls \'term_id_filter\' hook with term id and taxonomy id as parameters.
 * @uses do_action() Calls \'created_term\' hook with the term id and taxonomy id as parameters.
 * @uses do_action() Calls \'created_$taxonomy\' hook with term id and taxonomy id as parameters.
 *
 * @param string $term The term to add or update.
 * @param string $taxonomy The taxonomy to which to add the term
 * @param array|string $args Change the values of the inserted term
 * @return array|WP_Error The Term ID and Term Taxonomy ID
 */",
 "/**
 * Create Term and Taxonomy Relationships.
 *
 * Relates an object (post, link etc) to a term and taxonomy type. Creates the
 * term and taxonomy relationship if it doesn\'t already exist. Creates a term if
 * it doesn\'t exist (using the slug).
 *
 * A relationship means that the term is grouped in or belongs to the taxonomy.
 * A term has no meaning until it is given context by defining which taxonomy it
 * exists under.
 *
 * @package WordPress
 * @subpackage Taxonomy
 * @since 2.3.0
 * @uses $wpdb
 *
 * @param int $object_id The object to relate to.
 * @param array|int|string $terms The slug or id of the term, will replace all existing
 * related terms in this taxonomy.
 * @param array|string $taxonomy The context in which to relate the term to the object.
 * @param bool $append If false will delete difference of terms.
 * @return array|WP_Error Affected Term IDs
 */",
 "/**
 * Will make slug unique, if it isn\'t already.
 *
 * The $slug has to be unique global to every taxonomy, meaning that one
 * taxonomy term can\'t have a matching slug with another taxonomy term. Each
 * slug has to be globally unique for every taxonomy.
 *
 * The way this works is that if the taxonomy that the term belongs to is
 * hierarchical and has a parent, it will append that parent to the $slug.
 *
 * If that still doesn\'t return an unique slug, then it try to append a number
 * until it finds a number that is truly unique.
 *
 * The only purpose for $term is for appending a parent, if one exists.
 *
 * @package WordPress
 * @subpackage Taxonomy
 * @since 2.3.0
 * @uses $wpdb
 *
 * @param string $slug The string that will be tried for a unique slug
 * @param object $term The term object that the $slug will belong too
 * @return string Will return a true unique slug.
 */",
 "/**
 * Update term based on arguments provided.
 *
 * The $args will indiscriminately override all values with the same field name.
 * Care must be taken to not override important information need to update or
 * update will fail (or perhaps create a new term, neither would be acceptable).
 *
 * Defaults will set \'alias_of\', \'description\', \'parent\', and \'slug\' if not
 * defined in $args already.
 *
 * \'alias_of\' will create a term group, if it doesn\'t already exist, and update
 * it for the $term.
 *
 * If the \'slug\' argument in $args is missing, then the \'name\' in $args will be
 * used. It should also be noted that if you set \'slug\' and it isn\'t unique then
 * a WP_Error will be passed back. If you don\'t pass any slug, then a unique one
 * will be created for you.
 *
 * For what can be overrode in $args, check the term scheme can contain and stay
 * away from the term keys.
 *
 * @package WordPress
 * @subpackage Taxonomy
 * @since 2.3.0
 *
 * @uses $wpdb
 * @uses do_action() Will call both \'edit_term\' and \'edit_$taxonomy\' twice.
 * @uses apply_filters() Will call the \'term_id_filter\' filter and pass the term
 *	id and taxonomy id.
 *
 * @param int $term_id The ID of the term
 * @param string $taxonomy The context in which to relate the term to the object.
 * @param array|string $args Overwrite term field values
 * @return array|WP_Error Returns Term ID and Taxonomy Term ID
 */",
 "/**
 * Enable or disable term counting.
 *
 * @since 2.5.0
 *
 * @param bool $defer Optional. Enable if true, disable if false.
 * @return bool Whether term counting is enabled or disabled.
 */",
 "/**
 * Updates the amount of terms in taxonomy.
 *
 * If there is a taxonomy callback applied, then it will be called for updating
 * the count.
 *
 * The default action is to count what the amount of terms have the relationship
 * of term ID. Once that is done, then update the database.
 *
 * @package WordPress
 * @subpackage Taxonomy
 * @since 2.3.0
 * @uses $wpdb
 *
 * @param int|array $terms The term_taxonomy_id of the terms
 * @param string $taxonomy The context of the term.
 * @return bool If no terms will return false, and if successful will return true.
 */",
 "/**
 * Perform term count update immediately.
 *
 * @since 2.5.0
 *
 * @param array $terms The term_taxonomy_id of terms to update.
 * @param string $taxonomy The context of the term.
 * @return bool Always true when complete.
 */",
 "/**
 * Removes the taxonomy relationship to terms from the cache.
 *
 * Will remove the entire taxonomy relationship containing term $object_id. The
 * term IDs have to exist within the taxonomy $object_type for the deletion to
 * take place.
 *
 * @package WordPress
 * @subpackage Taxonomy
 * @since 2.3.0
 *
 * @see get_object_taxonomies() for more on $object_type
 * @uses do_action() Will call action hook named, \'clean_object_term_cache\' after completion.
 *	Passes, function params in same order.
 *
 * @param int|array $object_ids Single or list of term object ID(s)
 * @param array|string $object_type The taxonomy object type
 */",
 "/**
 * Will remove all of the term ids from the cache.
 *
 * @package WordPress
 * @subpackage Taxonomy
 * @since 2.3.0
 * @uses $wpdb
 *
 * @param int|array $ids Single or list of Term IDs
 * @param string $taxonomy Can be empty and will assume tt_ids, else will use for context.
 * @param bool $clean_taxonomy Whether to clean taxonomy wide caches (true), or just individual term object caches (false). Default is true.
 */",
 "/**
 * Retrieves the taxonomy relationship to the term object id.
 *
 * @package WordPress
 * @subpackage Taxonomy
 * @since 2.3.0
 *
 * @uses wp_cache_get() Retrieves taxonomy relationship from cache
 *
 * @param int|array $id Term object ID
 * @param string $taxonomy Taxonomy Name
 * @return bool|array Empty array if $terms found, but not $taxonomy. False if nothing is in cache for $taxonomy and $id.
 */",
 "/**
 * Updates the cache for Term ID(s).
 *
 * Will only update the cache for terms not already cached.
 *
 * The $object_ids expects that the ids be separated by commas, if it is a
 * string.
 *
 * It should be noted that update_object_term_cache() is very time extensive. It
 * is advised that the function is not called very often or at least not for a
 * lot of terms that exist in a lot of taxonomies. The amount of time increases
 * for each term and it also increases for each taxonomy the term belongs to.
 *
 * @package WordPress
 * @subpackage Taxonomy
 * @since 2.3.0
 * @uses wp_get_object_terms() Used to get terms from the database to update
 *
 * @param string|array $object_ids Single or list of term object ID(s)
 * @param array|string $object_type The taxonomy object type
 * @return null|bool Null value is given with empty $object_ids. False if
 */",
 "/**
 * Updates Terms to Taxonomy in cache.
 *
 * @package WordPress
 * @subpackage Taxonomy
 * @since 2.3.0
 *
 * @param array $terms List of Term objects to change
 * @param string $taxonomy Optional. Update Term to this taxonomy in cache
 */",
 "/**
 * Retrieves children of taxonomy as Term IDs.
 *
 * @package WordPress
 * @subpackage Taxonomy
 * @access private
 * @since 2.3.0
 *
 * @uses update_option() Stores all of the children in \"$taxonomy_children\"
 *	 option. That is the name of the taxonomy, immediately followed by \'_children\'.
 *
 * @param string $taxonomy Taxonomy Name
 * @return array Empty if $taxonomy isn\'t hierarchical or returns children as Term IDs.
 */",
 "/**
 * Get the subset of $terms that are descendants of $term_id.
 *
 * If $terms is an array of objects, then _get_term_children returns an array of objects.
 * If $terms is an array of IDs, then _get_term_children returns an array of IDs.
 *
 * @package WordPress
 * @subpackage Taxonomy
 * @access private
 * @since 2.3.0
 *
 * @param int $term_id The ancestor term: all returned terms should be descendants of $term_id.
 * @param array $terms The set of terms---either an array of term objects or term IDs---from which those that are descendants of $term_id will be chosen.
 * @param string $taxonomy The taxonomy which determines the hierarchy of the terms.
 * @return array The subset of $terms that are descendants of $term_id.
 */",
 "/**
 * Add count of children to parent count.
 *
 * Recalculates term counts by including items from child terms. Assumes all
 * relevant children are already in the $terms argument.
 *
 * @package WordPress
 * @subpackage Taxonomy
 * @access private
 * @since 2.3.0
 * @uses $wpdb
 *
 * @param array $terms List of Term IDs
 * @param string $taxonomy Term Context
 * @return null Will break from function if conditions are not met.
 */",
 "/**
 * Will update term count based on object types of the current taxonomy.
 *
 * Private function for the default callback for post_tag and category
 * taxonomies.
 *
 * @package WordPress
 * @subpackage Taxonomy
 * @access private
 * @since 2.3.0
 * @uses $wpdb
 *
 * @param array $terms List of Term taxonomy IDs
 * @param object $taxonomy Current taxonomy object of terms
 */",
 "/**
 * Will update term count based on number of objects.
 *
 * Default callback for the link_category taxonomy.
 *
 * @package WordPress
 * @subpackage Taxonomy
 * @since 3.3.0
 * @uses $wpdb
 *
 * @param array $terms List of Term taxonomy IDs
 * @param object $taxonomy Current taxonomy object of terms
 */",
 "/**
 * Generates a permalink for a taxonomy term archive.
 *
 * @since 2.5.0
 *
 * @uses apply_filters() Calls \'term_link\' with term link and term object, and taxonomy parameters.
 * @uses apply_filters() For the post_tag Taxonomy, Calls \'tag_link\' with tag link and tag ID as parameters.
 * @uses apply_filters() For the category Taxonomy, Calls \'category_link\' filter on category link and category ID.
 *
 * @param object|int|string $term
 * @param string $taxonomy (optional if $term is object)
 * @return string|WP_Error HTML link to taxonomy term archive on success, WP_Error if term does not exist.
 */",
 "/**
 * Display the taxonomies of a post with available options.
 *
 * This function can be used within the loop to display the taxonomies for a
 * post without specifying the Post ID. You can also use it outside the Loop to
 * display the taxonomies for a specific post.
 *
 * The available defaults are:
 * \'post\' : default is 0. The post ID to get taxonomies of.
 * \'before\' : default is empty string. Display before taxonomies list.
 * \'sep\' : default is empty string. Separate every taxonomy with value in this.
 * \'after\' : default is empty string. Display this after the taxonomies list.
 * \'template\' : The template to use for displaying the taxonomy terms.
 *
 * @since 2.5.0
 * @uses get_the_taxonomies()
 *
 * @param array $args Override the defaults.
 */",
 "/**
 * Retrieve all taxonomies associated with a post.
 *
 * This function can be used within the loop. It will also return an array of
 * the taxonomies with links to the taxonomy and name.
 *
 * @since 2.5.0
 *
 * @param int $post Optional. Post ID or will use Global Post ID (in loop).
 * @param array $args Override the defaults.
 * @return array
 */",
 "/**
 * Retrieve all taxonomies of a post with just the names.
 *
 * @since 2.5.0
 * @uses get_object_taxonomies()
 *
 * @param int $post Optional. Post ID
 * @return array
 */",
 "/**
 * Determine if the given object is associated with any of the given terms.
 *
 * The given terms are checked against the object\'s terms\' term_ids, names and slugs.
 * Terms given as integers will only be checked against the object\'s terms\' term_ids.
 * If no terms are given, determines if object is associated with any terms in the given taxonomy.
 *
 * @since 2.7.0
 * @uses get_object_term_cache()
 * @uses wp_get_object_terms()
 *
 * @param int $object_id ID of the object (post ID, link ID, ...)
 * @param string $taxonomy Single taxonomy name
 * @param int|string|array $terms Optional. Term term_id, name, slug or array of said
 * @return bool|WP_Error. WP_Error on input error.
 */",
 "/**
 * Determine if the given object type is associated with the given taxonomy.
 *
 * @since 3.0.0
 * @uses get_object_taxonomies()
 *
 * @param string $object_type Object type string
 * @param string $taxonomy Single taxonomy name
 * @return bool True if object is associated with the taxonomy, otherwise false.
 */",
 "/**
 * Get an array of ancestor IDs for a given object.
 *
 * @param int $object_id The ID of the object
 * @param string $object_type The type of object for which we\'ll be retrieving ancestors.
 * @return array of ancestors from lowest to highest in the hierarchy.
 */",
 "/**
 * Returns the term\'s parent\'s term_ID
 *
 * @since 3.1.0
 *
 * @param int $term_id
 * @param string $taxonomy
 *
 * @return int|bool false on error
 */",
 "/**
 * Checks the given subset of the term hierarchy for hierarchy loops.
 * Prevents loops from forming and breaks those that it finds.
 *
 * Attached to the wp_update_term_parent filter.
 *
 * @since 3.1.0
 * @uses wp_find_hierarchy_loop()
 *
 * @param int $parent term_id of the parent for the term we\'re checking.
 * @param int $term_id The term we\'re checking.
 * @param string $taxonomy The taxonomy of the term we\'re checking.
 *
 * @return int The new parent for the term.
 */",
 "/**
	 * Constructor - Passes args to {@link WP_Ajax_Response::add()}.
	 *
	 * @since 2.1.0
	 * @see WP_Ajax_Response::add()
	 *
	 * @param string|array $args Optional. Will be passed to add() method.
	 * @return WP_Ajax_Response
	 */",
 "/**
	 * Append to XML response based on given arguments.
	 *
	 * The arguments that can be passed in the $args parameter are below. It is
	 * also possible to pass a WP_Error object in either the \'id\' or \'data\'
	 * argument. The parameter isn\'t actually optional, content should be given
	 * in order to send the correct response.
	 *
	 * \'what\' argument is a string that is the XMLRPC response type.
	 * \'action\' argument is a boolean or string that acts like a nonce.
	 * \'id\' argument can be WP_Error or an integer.
	 * \'old_id\' argument is false by default or an integer of the previous ID.
	 * \'position\' argument is an integer or a string with -1 = top, 1 = bottom,
	 * html ID = after, -html ID = before.
	 * \'data\' argument is a string with the content or message.
	 * \'supplemental\' argument is an array of strings that will be children of
	 * the supplemental element.
	 *
	 * @since 2.1.0
	 *
	 * @param string|array $args Override defaults.
	 * @return string XML response.
	 */",
 "/**
	 * Display XML formatted responses.
	 *
	 * Sets the content type header to text/xml.
	 *
	 * @since 2.1.0
	 */",
 "/**
 * Send XML response back to AJAX request.
 *
 * @package WordPress
 * @since 2.1.0
 */",
 "/**
   * Initialize the class so that the data is in a known state.
   * @access public
   * @return void
   */",
 "/**
   * Connect to the server specified on the port specified.
   * If the port is not specified use the default SMTP_PORT.
   * If tval is specified then a connection will try and be
   * established with the server for that number of seconds.
   * If tval is not specified the default is 30 seconds to
   * try on the connection.
   *
   * SMTP CODE SUCCESS: 220
   * SMTP CODE FAILURE: 421
   * @access public
   * @return bool
   */",
 "/**
   * Initiate a TLS communication with the server.
   *
   * SMTP CODE 220 Ready to start TLS
   * SMTP CODE 501 Syntax error (no parameters allowed)
   * SMTP CODE 454 TLS not available due to temporary reason
   * @access public
   * @return bool success
   */",
 "/**
   * Performs SMTP authentication.  Must be run after running the
   * Hello() method.  Returns true if successfully authenticated.
   * @access public
   * @return bool
   */",
 "/**
   * Returns true if connected to a server otherwise false
   * @access public
   * @return bool
   */",
 "/**
   * Closes the socket and cleans up the state of the class.
   * It is not considered good to use this function without
   * first trying to use QUIT.
   * @access public
   * @return void
   */",
 "/**
   * Issues a data command and sends the msg_data to the server
   * finializing the mail transaction. $msg_data is the message
   * that is to be send with the headers. Each header needs to be
   * on a single line followed by a <CRLF> with the message headers
   * and the message body being seperated by and additional <CRLF>.
   *
   * Implements rfc 821: DATA <CRLF>
   *
   * SMTP CODE INTERMEDIATE: 354
   *     [data]
   *     <CRLF>.<CRLF>
   *     SMTP CODE SUCCESS: 250
   *     SMTP CODE FAILURE: 552,554,451,452
   * SMTP CODE FAILURE: 451,554
   * SMTP CODE ERROR  : 500,501,503,421
   * @access public
   * @return bool
   */",
 "/**
   * Sends the HELO command to the smtp server.
   * This makes sure that we and the server are in
   * the same known state.
   *
   * Implements from rfc 821: HELO <SP> <domain> <CRLF>
   *
   * SMTP CODE SUCCESS: 250
   * SMTP CODE ERROR  : 500, 501, 504, 421
   * @access public
   * @return bool
   */",
 "/**
   * Sends a HELO/EHLO command.
   * @access private
   * @return bool
   */",
 "/**
   * Starts a mail transaction from the email address specified in
   * $from. Returns true if successful or false otherwise. If True
   * the mail transaction is started and then one or more Recipient
   * commands may be called followed by a Data command.
   *
   * Implements rfc 821: MAIL <SP> FROM:<reverse-path> <CRLF>
   *
   * SMTP CODE SUCCESS: 250
   * SMTP CODE SUCCESS: 552,451,452
   * SMTP CODE SUCCESS: 500,501,421
   * @access public
   * @return bool
   */",
 "/**
   * Sends the quit command to the server and then closes the socket
   * if there is no error or the $close_on_error argument is true.
   *
   * Implements from rfc 821: QUIT <CRLF>
   *
   * SMTP CODE SUCCESS: 221
   * SMTP CODE ERROR  : 500
   * @access public
   * @return bool
   */",
 "/**
   * Sends the command RCPT to the SMTP server with the TO: argument of $to.
   * Returns true if the recipient was accepted false if it was rejected.
   *
   * Implements from rfc 821: RCPT <SP> TO:<forward-path> <CRLF>
   *
   * SMTP CODE SUCCESS: 250,251
   * SMTP CODE FAILURE: 550,551,552,553,450,451,452
   * SMTP CODE ERROR  : 500,501,503,421
   * @access public
   * @return bool
   */",
 "/**
   * Sends the RSET command to abort and transaction that is
   * currently in progress. Returns true if successful false
   * otherwise.
   *
   * Implements rfc 821: RSET <CRLF>
   *
   * SMTP CODE SUCCESS: 250
   * SMTP CODE ERROR  : 500,501,504,421
   * @access public
   * @return bool
   */",
 "/**
   * Starts a mail transaction from the email address specified in
   * $from. Returns true if successful or false otherwise. If True
   * the mail transaction is started and then one or more Recipient
   * commands may be called followed by a Data command. This command
   * will send the message to the users terminal if they are logged
   * in and send them an email.
   *
   * Implements rfc 821: SAML <SP> FROM:<reverse-path> <CRLF>
   *
   * SMTP CODE SUCCESS: 250
   * SMTP CODE SUCCESS: 552,451,452
   * SMTP CODE SUCCESS: 500,501,502,421
   * @access public
   * @return bool
   */",
 "/**
   * This is an optional command for SMTP that this class does not
   * support. This method is here to make the RFC821 Definition
   * complete for this class and __may__ be implimented in the future
   *
   * Implements from rfc 821: TURN <CRLF>
   *
   * SMTP CODE SUCCESS: 250
   * SMTP CODE FAILURE: 502
   * SMTP CODE ERROR  : 500, 503
   * @access public
   * @return bool
   */",
 "/**
  * Get the current error
  * @access public
  * @return array
  */",
 "/**
   * Read in as many lines as possible
   * either before eof or socket timeout occurs on the operation.
   * With SMTP we can tell if we have more lines to read if the
   * 4th character is \'-\' symbol. If it is a space then we don\'t
   * need to read anything else.
   * @access private
   * @return string
   */",
 "/**
 * SMTP is rfc 821 compliant and implements all the rfc 821 SMTP
 * commands except TURN which will always return a not implemented
 * error. SMTP also provides some utility methods for sending mail
 * to an SMTP server.
 * original author: Chris Ryan
 */",
 "/**
 * Authenticate user with remember capability.
 *
 * The credentials is an array that has \'user_login\', \'user_password\', and
 * \'remember\' indices. If the credentials is not given, then the log in form
 * will be assumed and used if set.
 *
 * The various authentication cookies will be set by this function and will be
 * set for a longer period depending on if the \'remember\' credential is set to
 * true.
 *
 * @since 2.5.0
 *
 * @param array $credentials Optional. User info in order to sign on.
 * @param bool $secure_cookie Optional. Whether to use secure cookie.
 * @return object Either WP_Error on failure, or WP_User on success.
 */",
 "/**
 * Authenticate the user using the WordPress auth cookie.
 */",
 "/**
 * Number of posts user has written.
 *
 * @since 3.0.0
 * @uses $wpdb WordPress database object for queries.
 *
 * @param int $userid User ID.
 * @return int Amount of posts user has written.
 */",
 "/**
 * Number of posts written by a list of users.
 *
 * @since 3.0.0
 *
 * @param array $users Array of user IDs.
 * @param string|array $post_type Optional. Post type to check. Defaults to post.
 * @return array Amount of posts each user has written.
 */",
 "/**
 * Check that the user login name and password is correct.
 *
 * @since 0.71
 * @todo xmlrpc only. Maybe move to xmlrpc.php.
 *
 * @param string $user_login User name.
 * @param string $user_pass User password.
 * @return bool False if does not authenticate, true if username and password authenticates.
 */",
 "/**
 * Get the current user\'s ID
 *
 * @since MU
 *
 * @uses wp_get_current_user
 *
 * @return int The current user\'s ID
 */",
 "/**
 * Retrieve user option that can be either per Site or per Network.
 *
 * If the user ID is not given, then the current user will be used instead. If
 * the user ID is given, then the user data will be retrieved. The filter for
 * the result, will also pass the original option name and finally the user data
 * object as the third parameter.
 *
 * The option will first check for the per site name and then the per Network name.
 *
 * @since 2.0.0
 * @uses $wpdb WordPress database object for queries.
 * @uses apply_filters() Calls \'get_user_option_$option\' hook with result,
 *		option parameter, and user data object.
 *
 * @param string $option User option name.
 * @param int $user Optional. User ID.
 * @param bool $deprecated Use get_option() to check for an option in the options table.
 * @return mixed
 */",
 "/**
 * Update user option with global blog capability.
 *
 * User options are just like user metadata except that they have support for
 * global blog options. If the \'global\' parameter is false, which it is by default
 * it will prepend the WordPress table prefix to the option name.
 *
 * Deletes the user option if $newvalue is empty.
 *
 * @since 2.0.0
 * @uses $wpdb WordPress database object for queries
 *
 * @param int $user_id User ID
 * @param string $option_name User option name.
 * @param mixed $newvalue User option value.
 * @param bool $global Optional. Whether option name is global or blog specific. Default false (blog specific).
 * @return unknown
 */",
 "/**
 * Delete user option with global blog capability.
 *
 * User options are just like user metadata except that they have support for
 * global blog options. If the \'global\' parameter is false, which it is by default
 * it will prepend the WordPress table prefix to the option name.
 *
 * @since 3.0.0
 * @uses $wpdb WordPress database object for queries
 *
 * @param int $user_id User ID
 * @param string $option_name User option name.
 * @param bool $global Optional. Whether option name is global or blog specific. Default false (blog specific).
 * @return unknown
 */",
 "/**
	 * PHP5 constructor
	 *
	 * @since 3.1.0
	 *
	 * @param string|array $args The query variables
	 * @return WP_User_Query
	 */",
 "/**
	 * Prepare the query variables
	 *
	 * @since 3.1.0
	 * @access private
	 */",
 "/**
	 * Execute the query, with the current variables
	 *
	 * @since 3.1.0
	 * @access private
	 */",
 "/**
	 * Return the list of users
	 *
	 * @since 3.1.0
	 * @access public
	 *
	 * @return array
	 */",
 "/**
	 * Return the total number of users for the current query
	 *
	 * @since 3.1.0
	 * @access public
	 *
	 * @return array
	 */",
 "/**
 * WordPress User Query class.
 *
 * @since 3.1.0
 */",
 "/**
 * Retrieve list of users matching criteria.
 *
 * @since 3.1.0
 * @uses $wpdb
 * @uses WP_User_Query See for default arguments and information.
 *
 * @param array $args Optional.
 * @return array List of users.
 */",
 "/**
 * Get the blogs a user belongs to.
 *
 * @since 3.0.0
 *
 * @param int $user_id User ID
 * @param bool $all Whether to retrieve all blogs, or only blogs that are not marked as deleted, archived, or spam.
 * @return array A list of the user\'s blogs. An empty array if the user doesn\'t exist or belongs to no blogs.
 */",
 "/**
 * Find out whether a user is a member of a given blog.
 *
 * @since MU 1.1
 * @uses get_blogs_of_user()
 *
 * @param int $user_id Optional. The unique ID of the user. Defaults to the current user.
 * @param int $blog_id Optional. ID of the blog to check. Defaults to the current site.
 * @return bool
 */",
 "/**
 * Add meta data field to a user.
 *
 * Post meta data is called \"Custom Fields\" on the Administration Screens.
 *
 * @since 3.0.0
 * @uses add_metadata()
 * @link http://codex.wordpress.org/Function_Reference/add_user_meta
 *
 * @param int $user_id Post ID.
 * @param string $meta_key Metadata name.
 * @param mixed $meta_value Metadata value.
 * @param bool $unique Optional, default is false. Whether the same key should not be added.
 * @return bool False for failure. True for success.
 */",
 "/**
 * Remove metadata matching criteria from a user.
 *
 * You can match based on the key, or key and value. Removing based on key and
 * value, will keep from removing duplicate metadata with the same key. It also
 * allows removing all metadata matching key, if needed.
 *
 * @since 3.0.0
 * @uses delete_metadata()
 * @link http://codex.wordpress.org/Function_Reference/delete_user_meta
 *
 * @param int $user_id user ID
 * @param string $meta_key Metadata name.
 * @param mixed $meta_value Optional. Metadata value.
 * @return bool False for failure. True for success.
 */",
 "/**
 * Retrieve user meta field for a user.
 *
 * @since 3.0.0
 * @uses get_metadata()
 * @link http://codex.wordpress.org/Function_Reference/get_user_meta
 *
 * @param int $user_id Post ID.
 * @param string $key Optional. The meta key to retrieve. By default, returns data for all keys.
 * @param bool $single Whether to return a single value.
 * @return mixed Will be an array if $single is false. Will be value of meta data field if $single
 *  is true.
 */",
 "/**
 * Update user meta field based on user ID.
 *
 * Use the $prev_value parameter to differentiate between meta fields with the
 * same key and user ID.
 *
 * If the meta field for the user does not exist, it will be added.
 *
 * @since 3.0.0
 * @uses update_metadata
 * @link http://codex.wordpress.org/Function_Reference/update_user_meta
 *
 * @param int $user_id Post ID.
 * @param string $meta_key Metadata key.
 * @param mixed $meta_value Metadata value.
 * @param mixed $prev_value Optional. Previous value to check before removing.
 * @return bool False on failure, true if success.
 */",
 "/**
 * Count number of users who have each of the user roles.
 *
 * Assumes there are neither duplicated nor orphaned capabilities meta_values.
 * Assumes role names are unique phrases. Same assumption made by WP_User_Query::prepare_query()
 * Using $strategy = \'time\' this is CPU-intensive and should handle around 10^7 users.
 * Using $strategy = \'memory\' this is memory-intensive and should handle around 10^5 users, but see WP Bug #12257.
 *
 * @since 3.0.0
 * @param string $strategy \'time\' or \'memory\'
 * @return array Includes a grand total and an array of counts indexed by role strings.
 */",
 "/**
 * Set up global user vars.
 *
 * Used by wp_set_current_user() for back compat. Might be deprecated in the future.
 *
 * @since 2.0.4
 * @global string $userdata User description.
 * @global string $user_login The user username for logging in
 * @global int $user_level The level of the user
 * @global int $user_ID The ID of the user
 * @global string $user_email The email address of the user
 * @global string $user_url The url in the user\'s profile
 * @global string $user_pass_md5 MD5 of the user\'s password
 * @global string $user_identity The display name of the user
 *
 * @param int $for_user_id Optional. User ID to set up global data.
 */",
 "/**
 * Create dropdown HTML content of users.
 *
 * The content can either be displayed, which it is by default or retrieved by
 * setting the \'echo\' argument. The \'include\' and \'exclude\' arguments do not
 * need to be used; all users will be displayed in that case. Only one can be
 * used, either \'include\' or \'exclude\', but not both.
 *
 * The available arguments are as follows:
 * <ol>
 * <li>show_option_all - Text to show all and whether HTML option exists.</li>
 * <li>show_option_none - Text for show none and whether HTML option exists.</li>
 * <li>hide_if_only_one_author - Don\'t create the dropdown if there is only one user.</li>
 * <li>orderby - SQL order by clause for what order the users appear. Default is \'display_name\'.</li>
 * <li>order - Default is \'ASC\'. Can also be \'DESC\'.</li>
 * <li>include - User IDs to include.</li>
 * <li>exclude - User IDs to exclude.</li>
 * <li>multi - Default is \'false\'. Whether to skip the ID attribute on the \'select\' element. A \'true\' value is overridden when id argument is set.</li>
 * <li>show - Default is \'display_name\'. User table column to display. If the selected item is empty then the user_login will be displayed in parentheses</li>
 * <li>echo - Default is \'1\'. Whether to display or retrieve content.</li>
 * <li>selected - Which User ID is selected.</li>
 * <li>include_selected - Always include the selected user ID in the dropdown. Default is false.</li>
 * <li>name - Default is \'user\'. Name attribute of select element.</li>
 * <li>id - Default is the value of the \'name\' parameter. ID attribute of select element.</li>
 * <li>class - Class attribute of select element.</li>
 * <li>blog_id - ID of blog (Multisite only). Defaults to ID of current blog.</li>
 * <li>who - Which users to query. Currently only \'authors\' is supported. Default is all users.</li>
 * </ol>
 *
 * @since 2.3.0
 * @uses $wpdb WordPress database object for queries
 *
 * @param string|array $args Optional. Override defaults.
 * @return string|null Null on display. String of HTML content on retrieve.
 */",
 "/**
 * Sanitize user field based on context.
 *
 * Possible context values are:  \'raw\', \'edit\', \'db\', \'display\', \'attribute\' and \'js\'. The
 * \'display\' context is used by default. \'attribute\' and \'js\' contexts are treated like \'display\'
 * when calling filters.
 *
 * @since 2.3.0
 * @uses apply_filters() Calls \'edit_$field\' passing $value and $user_id if $context == \'edit\'.
 *  $field is prefixed with \'user_\' if it isn\'t already.
 * @uses apply_filters() Calls \'pre_$field\' passing $value if $context == \'db\'. $field is prefixed with
 *  \'user_\' if it isn\'t already.
 * @uses apply_filters() Calls \'$field\' passing $value, $user_id and $context if $context == anything
 *  other than \'raw\', \'edit\' and \'db\'. $field is prefixed with \'user_\' if it isn\'t already.
 *
 * @param string $field The user Object field name.
 * @param mixed $value The user Object value.
 * @param int $user_id user ID.
 * @param string $context How to sanitize user fields. Looks for \'raw\', \'edit\', \'db\', \'display\',
 *               \'attribute\' and \'js\'.
 * @return mixed Sanitized value.
 */",
 "/**
 * Update all user caches
 *
 * @since 3.0.0
 *
 * @param object $user User object to be cached
 */",
 "/**
 * Clean all user caches
 *
 * @since 3.0.0
 *
 * @param WP_User|int $user User object or ID to be cleaned from the cache
 */",
 "/**
 * Checks whether the given username exists.
 *
 * @since 2.0.0
 *
 * @param string $username Username.
 * @return null|int The user\'s ID on success, and null on failure.
 */",
 "/**
 * Checks whether the given email exists.
 *
 * @since 2.1.0
 * @uses $wpdb
 *
 * @param string $email Email.
 * @return bool|int The user\'s ID on success, and false on failure.
 */",
 "/**
 * Checks whether an username is valid.
 *
 * @since 2.0.1
 * @uses apply_filters() Calls \'validate_username\' hook on $valid check and $username as parameters
 *
 * @param string $username Username.
 * @return bool Whether username given is valid
 */",
 "/**
 * Insert an user into the database.
 *
 * Can update a current user or insert a new user based on whether the user\'s ID
 * is present.
 *
 * Can be used to update the user\'s info (see below), set the user\'s role, and
 * set the user\'s preference on whether they want the rich editor on.
 *
 * Most of the $userdata array fields have filters associated with the values.
 * The exceptions are \'rich_editing\', \'role\', \'jabber\', \'aim\', \'yim\',
 * \'user_registered\', and \'ID\'. The filters have the prefix \'pre_user_\' followed
 * by the field name. An example using \'description\' would have the filter
 * called, \'pre_user_description\' that can be hooked into.
 *
 * The $userdata array can contain the following fields:
 * \'ID\' - An integer that will be used for updating an existing user.
 * \'user_pass\' - A string that contains the plain text password for the user.
 * \'user_login\' - A string that contains the user\'s username for logging in.
 * \'user_nicename\' - A string that contains a nicer looking name for the user.
 *		The default is the user\'s username.
 * \'user_url\' - A string containing the user\'s URL for the user\'s web site.
 * \'user_email\' - A string containing the user\'s email address.
 * \'display_name\' - A string that will be shown on the site. Defaults to user\'s
 *		username. It is likely that you will want to change this, for appearance.
 * \'nickname\' - The user\'s nickname, defaults to the user\'s username.
 * \'first_name\' - The user\'s first name.
 * \'last_name\' - The user\'s last name.
 * \'description\' - A string containing content about the user.
 * \'rich_editing\' - A string for whether to enable the rich editor. False
 *		if not empty.
 * \'user_registered\' - The date the user registered. Format is \'Y-m-d H:i:s\'.
 * \'role\' - A string used to set the user\'s role.
 * \'jabber\' - User\'s Jabber account.
 * \'aim\' - User\'s AOL IM account.
 * \'yim\' - User\'s Yahoo IM account.
 *
 * @since 2.0.0
 * @uses $wpdb WordPress database layer.
 * @uses apply_filters() Calls filters for most of the $userdata fields with the prefix \'pre_user\'. See note above.
 * @uses do_action() Calls \'profile_update\' hook when updating giving the user\'s ID
 * @uses do_action() Calls \'user_register\' hook when creating a new user giving the user\'s ID
 *
 * @param array $userdata An array of user data.
 * @return int|WP_Error The newly created user\'s ID or a WP_Error object if the user could not be created.
 */",
 "/**
 * Update an user in the database.
 *
 * It is possible to update a user\'s password by specifying the \'user_pass\'
 * value in the $userdata parameter array.
 *
 * If $userdata does not contain an \'ID\' key, then a new user will be created
 * and the new user\'s ID will be returned.
 *
 * If current user\'s password is being updated, then the cookies will be
 * cleared.
 *
 * @since 2.0.0
 * @see wp_insert_user() For what fields can be set in $userdata
 * @uses wp_insert_user() Used to update existing user or add new one if user doesn\'t exist already
 *
 * @param array $userdata An array of user data.
 * @return int The updated user\'s ID.
 */",
 "/**
 * A simpler way of inserting an user into the database.
 *
 * Creates a new user with just the username, password, and email. For more
 * complex user creation use wp_insert_user() to specify more information.
 *
 * @since 2.0.0
 * @see wp_insert_user() More complete way to create a new user
 *
 * @param string $username The user\'s username.
 * @param string $password The user\'s password.
 * @param string $email The user\'s email (optional).
 * @return int The new user\'s ID.
 */",
 "/**
 * Return a list of meta keys that wp_insert_user() is supposed to set.
 *
 * @access private
 * @since 3.3.0
 *
 * @param object $user WP_User instance
 * @return array
 */",
 "/**
 * Set up the default contact methods
 *
 * @access private
 * @since
 *
 * @param object $user User data object (optional)
 * @return array $user_contactmethods Array of contact methods and their labels.
 */",
 "/**
	 * Send required variables to JavaScript land
	 *
	 * @since 3.4
	 * @access private
	 *
	 * @uses $tab Global; current tab within Themes->Install screen
	 * @uses $type Global; type of search.
	 */",
 "/**
	 * Check to see if the theme is already installed.
	 *
	 * @since 3.4
	 * @access private
	 *
	 * @param object $theme - A WordPress.org Theme API object.
	 * @return string Theme status.
	 */",
 "/**
 * Theme Installer List Table class.
 *
 * @package WordPress
 * @subpackage List_Table
 * @since 3.1.0
 * @access private
 */",
 "/**
 * Changes the current user by ID or name.
 *
 * Set $id to null and specify a name if you do not know a user\'s ID.
 *
 * Some WordPress functionality is based on the current user and not based on
 * the signed in user. Therefore, it opens the ability to edit and perform
 * actions on users who aren\'t signed in.
 *
 * @since 2.0.3
 * @global object $current_user The current user object which holds the user data.
 * @uses do_action() Calls \'set_current_user\' hook after setting the current user.
 *
 * @param int $id User ID
 * @param string $name User\'s username
 * @return WP_User Current user User object
 */",
 "/**
 * Retrieve the current user object.
 *
 * @since 2.0.3
 *
 * @return WP_User Current user WP_User object
 */",
 "/**
 * Populate global variables with information about the currently logged in user.
 *
 * Will set the current user, if the current user is not set. The current user
 * will be set to the logged in person. If no user is logged in, then it will
 * set the current user to 0, which is invalid and won\'t have any permissions.
 *
 * @since 0.71
 * @uses $current_user Checks if the current user is set
 * @uses wp_validate_auth_cookie() Retrieves current logged in user.
 *
 * @return bool|null False on XMLRPC Request and invalid auth cookie. Null when current user set
 */",
 "/**
 * Retrieve user info by user ID.
 *
 * @since 0.71
 *
 * @param int $user_id User ID
 * @return bool|object False on failure, WP_User object on success
 */",
 "/**
 * Retrieve user info by a given field
 *
 * @since 2.8.0
 *
 * @param string $field The field to retrieve the user with. id | slug | email | login
 * @param int|string $value A value for $field. A user ID, slug, email address, or login name.
 * @return bool|object False on failure, WP_User object on success
 */",
 "/**
 * Retrieve info for user lists to prevent multiple queries by get_userdata()
 *
 * @since 3.0.0
 *
 * @param array $user_ids User ID numbers list
 */",
 "/**
 * Send mail, similar to PHP\'s mail
 *
 * A true return value does not automatically mean that the user received the
 * email successfully. It just only means that the method used was able to
 * process the request without any errors.
 *
 * Using the two \'wp_mail_from\' and \'wp_mail_from_name\' hooks allow from
 * creating a from address like \'Name <email@address.com>\' when both are set. If
 * just \'wp_mail_from\' is set, then just the email address will be used with no
 * name.
 *
 * The default content type is \'text/plain\' which does not allow using HTML.
 * However, you can set the content type of the email by using the
 * \'wp_mail_content_type\' filter.
 *
 * The default charset is based on the charset used on the blog. The charset can
 * be set using the \'wp_mail_charset\' filter.
 *
 * @since 1.2.1
 * @uses apply_filters() Calls \'wp_mail\' hook on an array of all of the parameters.
 * @uses apply_filters() Calls \'wp_mail_from\' hook to get the from email address.
 * @uses apply_filters() Calls \'wp_mail_from_name\' hook to get the from address name.
 * @uses apply_filters() Calls \'wp_mail_content_type\' hook to get the email content type.
 * @uses apply_filters() Calls \'wp_mail_charset\' hook to get the email charset
 * @uses do_action_ref_array() Calls \'phpmailer_init\' hook on the reference to
 *		phpmailer object.
 * @uses PHPMailer
 *
 * @param string|array $to Array or comma-separated list of email addresses to send message.
 * @param string $subject Email subject
 * @param string $message Message contents
 * @param string|array $headers Optional. Additional headers.
 * @param string|array $attachments Optional. Files to attach.
 * @return bool Whether the email contents were sent successfully.
 */",
 "/**
 * Checks a user\'s login information and logs them in if it checks out.
 *
 * @since 2.5.0
 *
 * @param string $username User\'s username
 * @param string $password User\'s password
 * @return WP_Error|WP_User WP_User object if login successful, otherwise WP_Error object.
 */",
 "/**
 * Log the current user out.
 *
 * @since 2.5.0
 */",
 "/**
 * Validates authentication cookie.
 *
 * The checks include making sure that the authentication cookie is set and
 * pulling in the contents (if $cookie is not used).
 *
 * Makes sure the cookie is not expired. Verifies the hash in cookie is what is
 * should be and compares the two.
 *
 * @since 2.5
 *
 * @param string $cookie Optional. If used, will validate contents instead of cookie\'s
 * @param string $scheme Optional. The cookie scheme to use: auth, secure_auth, or logged_in
 * @return bool|int False if invalid cookie, User ID if valid.
 */",
 "/**
 * Generate authentication cookie contents.
 *
 * @since 2.5
 * @uses apply_filters() Calls \'auth_cookie\' hook on $cookie contents, User ID
 *		and expiration of cookie.
 *
 * @param int $user_id User ID
 * @param int $expiration Cookie expiration in seconds
 * @param string $scheme Optional. The cookie scheme to use: auth, secure_auth, or logged_in
 * @return string Authentication cookie contents
 */",
 "/**
 * Parse a cookie into its components
 *
 * @since 2.7
 *
 * @param string $cookie
 * @param string $scheme Optional. The cookie scheme to use: auth, secure_auth, or logged_in
 * @return array Authentication cookie components
 */",
 "/**
 * Sets the authentication cookies based User ID.
 *
 * The $remember parameter increases the time that the cookie will be kept. The
 * default the cookie is kept without remembering is two days. When $remember is
 * set, the cookies will be kept for 14 days or two weeks.
 *
 * @since 2.5
 *
 * @param int $user_id User ID
 * @param bool $remember Whether to remember the user
 */",
 "/**
 * Removes all of the cookies associated with authentication.
 *
 * @since 2.5
 */",
 "/**
 * Checks if the current visitor is a logged in user.
 *
 * @since 2.0.0
 *
 * @return bool True if user is logged in, false if not logged in.
 */",
 "/**
 * Checks if a user is logged in, if not it redirects them to the login page.
 *
 * @since 1.5
 */",
 "/**
 * Makes sure that a user was referred from another admin page.
 *
 * To avoid security exploits.
 *
 * @since 1.2.0
 * @uses do_action() Calls \'check_admin_referer\' on $action.
 *
 * @param string $action Action nonce
 * @param string $query_arg where to look for nonce in $_REQUEST (since 2.5)
 */",
 "/**
 * Verifies the AJAX request to prevent processing requests external of the blog.
 *
 * @since 2.0.3
 *
 * @param string $action Action nonce
 * @param string $query_arg where to look for nonce in $_REQUEST (since 2.5)
 */",
 "/**
 * Redirects to another page.
 *
 * @since 1.5.1
 * @uses apply_filters() Calls \'wp_redirect\' hook on $location and $status.
 *
 * @param string $location The path to redirect to
 * @param int $status Status code to use
 * @return bool False if $location is not set
 */",
 "/**
 * Sanitizes a URL for use in a redirect.
 *
 * @since 2.3
 *
 * @return string redirect-sanitized URL
 **/",
 "/**
 * Performs a safe (local) redirect, using wp_redirect().
 *
 * Checks whether the $location is using an allowed host, if it has an absolute
 * path. A plugin can therefore set or remove allowed host(s) to or from the
 * list.
 *
 * If the host is not allowed, then the redirect is to wp-admin on the siteurl
 * instead. This prevents malicious redirects which redirect to another host,
 * but only used in a few places.
 *
 * @since 2.3
 * @uses wp_validate_redirect() To validate the redirect is to an allowed host.
 *
 * @return void Does not return anything
 **/",
 "/**
 * Validates a URL for use in a redirect.
 *
 * Checks whether the $location is using an allowed host, if it has an absolute
 * path. A plugin can therefore set or remove allowed host(s) to or from the
 * list.
 *
 * If the host is not allowed, then the redirect is to $default supplied
 *
 * @since 2.8.1
 * @uses apply_filters() Calls \'allowed_redirect_hosts\' on an array containing
 *		WordPress host string and $location host string.
 *
 * @param string $location The redirect to validate
 * @param string $default The value to return if $location is not allowed
 * @return string redirect-sanitized URL
 **/",
 "/**
 * Notify an author of a comment/trackback/pingback to one of their posts.
 *
 * @since 1.0.0
 *
 * @param int $comment_id Comment ID
 * @param string $comment_type Optional. The comment type either \'comment\' (default), \'trackback\', or \'pingback\'
 * @return bool False if user email does not exist. True on completion.
 */",
 "/**
 * Notifies the moderator of the blog about a new comment that is awaiting approval.
 *
 * @since 1.0
 * @uses $wpdb
 *
 * @param int $comment_id Comment ID
 * @return bool Always returns true
 */",
 "/**
 * Notify the blog admin of a user changing password, normally via email.
 *
 * @since 2.7
 *
 * @param object $user User Object
 */",
 "/**
 * Notify the blog admin of a new user, normally via email.
 *
 * @since 2.0
 *
 * @param int $user_id User ID
 * @param string $plaintext_pass Optional. The user\'s plaintext password
 */",
 "/**
 * Get the time-dependent variable for nonce creation.
 *
 * A nonce has a lifespan of two ticks. Nonces in their second tick may be
 * updated, e.g. by autosave.
 *
 * @since 2.5
 *
 * @return int
 */",
 "/**
 * Verify that correct nonce was used with time limit.
 *
 * The user is given an amount of time to use the token, so therefore, since the
 * UID and $action remain the same, the independent variable is the time.
 *
 * @since 2.0.3
 *
 * @param string $nonce Nonce that was used in the form to verify
 * @param string|int $action Should give context to what is taking place and be the same when nonce was created.
 * @return bool Whether the nonce check passed or failed.
 */",
 "/**
 * Creates a random, one time use token.
 *
 * @since 2.0.3
 *
 * @param string|int $action Scalar value to add context to the nonce.
 * @return string The one use form token
 */",
 "/**
 * Get salt to add to hashes.
 *
 * Salts are created using secret keys. Secret keys are located in two places:
 * in the database and in the wp-config.php file. The secret key in the database
 * is randomly generated and will be appended to the secret keys in wp-config.php.
 *
 * The secret keys in wp-config.php should be updated to strong, random keys to maximize
 * security. Below is an example of how the secret key constants are defined.
 * Do not paste this example directly into wp-config.php. Instead, have a
 * {@link https://api.wordpress.org/secret-key/1.1/salt/ secret key created} just
 * for you.
 *
 * <code>
 * define(\'AUTH_KEY\',         \' Xakm<o xQy rw4EMsLKM-?!T+,PFF})H4lzcW57AF0U@N@< >M%G4Yt>f`z]MON\');
 * define(\'SECURE_AUTH_KEY\',  \'LzJ}op]mr|6+![P}Ak:uNdJCJZd>(Hx.-Mh#Tz)pCIU#uGEnfFz|f ;;eU%/U^O~\');
 * define(\'LOGGED_IN_KEY\',    \'|i|Ux`9<p-h$aFf(qnT:sDO:D1P^wZ$$/Ra@miTJi9G;ddp_<q}6H1)o|a +&JCM\');
 * define(\'NONCE_KEY\',        \'%:R{[P|,s.KuMltH5}cI;/k<Gx~j!f0I)m_sIyu+&NJZ)-iO>z7X>QYR0Z_XnZ@|\');
 * define(\'AUTH_SALT\',        \'eZyT)-Naw]F8CwA*VaW#q*|.)g@o}||wf~@C-YSt}(dh_r6EbI#A,y|nU2{B#JBW\');
 * define(\'SECURE_AUTH_SALT\', \'!=oLUTXh,QW=H `}`L|9/^4-3 STz},T(w}W<I`.JjPi)<Bmf1v,HpGe}T1:Xt7n\');
 * define(\'LOGGED_IN_SALT\',   \'+XSqHc;@Q*K_b|Z?NC[3H!!EONbh.n<+=uKR:>*c(u`g~EJBf#8u#R{mUEZrozmm\');
 * define(\'NONCE_SALT\',       \'h`GXHhD>SLWVfg1(1(N{;.V!MoE(SfbA_ksP@&`+AycHcAV$+?@3q+rxV{%^VyKT\');
 * </code>
 *
 * Salting passwords helps against tools which has stored hashed values of
 * common dictionary strings. The added values makes it harder to crack.
 *
 * @since 2.5
 *
 * @link https://api.wordpress.org/secret-key/1.1/salt/ Create secrets for wp-config.php
 *
 * @param string $scheme Authentication scheme (auth, secure_auth, logged_in, nonce)
 * @return string Salt value
 */",
 "/**
 * Get hash of given string.
 *
 * @since 2.0.3
 * @uses wp_salt() Get WordPress salt
 *
 * @param string $data Plain text to hash
 * @return string Hash of $data
 */",
 "/**
 * Create a hash (encrypt) of a plain text password.
 *
 * For integration with other applications, this function can be overwritten to
 * instead use the other package password checking algorithm.
 *
 * @since 2.5
 * @global object $wp_hasher PHPass object
 * @uses PasswordHash::HashPassword
 *
 * @param string $password Plain text user password to hash
 * @return string The hash string of the password
 */",
 "/**
 * Checks the plaintext password against the encrypted Password.
 *
 * Maintains compatibility between old version and the new cookie authentication
 * protocol using PHPass library. The $hash parameter is the encrypted password
 * and the function compares the plain text password when encrypted similarly
 * against the already encrypted password to see if they match.
 *
 * For integration with other applications, this function can be overwritten to
 * instead use the other package password checking algorithm.
 *
 * @since 2.5
 * @global object $wp_hasher PHPass object used for checking the password
 *	against the $hash + $password
 * @uses PasswordHash::CheckPassword
 *
 * @param string $password Plaintext user\'s password
 * @param string $hash Hash of the user\'s password to check against.
 * @return bool False, if the $password does not match the hashed password
 */",
 "/**
 * Generates a random password drawn from the defined set of characters.
 *
 * @since 2.5
 *
 * @param int $length The length of password to generate
 * @param bool $special_chars Whether to include standard special characters. Default true.
 * @param bool $extra_special_chars Whether to include other special characters. Used when
 *   generating secret keys and salts. Default false.
 * @return string The random password
 **/",
 "/**
 * Generates a random number
 *
 * @since 2.6.2
 *
 * @param int $min Lower limit for the generated number (optional, default is 0)
 * @param int $max Upper limit for the generated number (optional, default is 4294967295)
 * @return int A random number between min and max
 */",
 "/**
 * Updates the user\'s password with a new encrypted one.
 *
 * For integration with other applications, this function can be overwritten to
 * instead use the other package password checking algorithm.
 *
 * @since 2.5
 * @uses $wpdb WordPress database object for queries
 * @uses wp_hash_password() Used to encrypt the user\'s password before passing to the database
 *
 * @param string $password The plaintext new user password
 * @param int $user_id User ID
 */",
 "/**
 * Retrieve the avatar for a user who provided a user ID or email address.
 *
 * @since 2.5
 * @param int|string|object $id_or_email A user ID,  email address, or comment object
 * @param int $size Size of the avatar image
 * @param string $default URL to a default image to use if no avatar is available
 * @param string $alt Alternate text to use in image tag. Defaults to blank
 * @return string <img> tag for the user\'s avatar
*/",
 "/**
 * Displays a human readable HTML representation of the difference between two strings.
 *
 * The Diff is available for getting the changes between versions. The output is
 * HTML, so the primary use is for displaying the changes. If the two strings
 * are equivalent, then an empty string will be returned.
 *
 * The arguments supported and can be changed are listed below.
 *
 * \'title\' : Default is an empty string. Titles the diff in a manner compatible
 *		with the output.
 * \'title_left\' : Default is an empty string. Change the HTML to the left of the
 *		title.
 * \'title_right\' : Default is an empty string. Change the HTML to the right of
 *		the title.
 *
 * @since 2.6
 * @see wp_parse_args() Used to change defaults to user defined settings.
 * @uses Text_Diff
 * @uses WP_Text_Diff_Renderer_Table
 *
 * @param string $left_string \"old\" (left) version of string
 * @param string $right_string \"new\" (right) version of string
 * @param string|array $args Optional. Change \'title\', \'title_left\', and \'title_right\' defaults.
 * @return string Empty string if strings are equivalent or HTML with differences.
 */",
 "/** These are the lyrics to Hello Dolly */",
 "/** Echo the widget content.
	 *
	 * Subclasses should over-ride this function to generate their widget code.
	 *
	 * @param array $args Display arguments including before_title, after_title, before_widget, and after_widget.
	 * @param array $instance The settings for the particular instance of the widget
	 */",
 "/** Update a particular instance.
	 *
	 * This function should check that $new_instance is set correctly.
	 * The newly calculated value of $instance should be returned.
	 * If \"false\" is returned, the instance won\'t be saved/updated.
	 *
	 * @param array $new_instance New settings for this instance as input by the user via form()
	 * @param array $old_instance Old settings for this instance
	 * @return array Settings to save or bool false to cancel saving
	 */",
 "/** Echo the settings update form
	 *
	 * @param array $instance Current settings
	 */",
 "/**
	 * PHP4 constructor
	 */",
 "/**
	 * PHP5 constructor
	 *
	 * @param string $id_base Optional Base ID for the widget, lower case,
	 * if left empty a portion of the widget\'s class name will be used. Has to be unique.
	 * @param string $name Name for the widget displayed on the configuration page.
	 * @param array $widget_options Optional Passed to wp_register_sidebar_widget()
	 *	 - description: shown on the configuration page
	 *	 - classname
	 * @param array $control_options Optional Passed to wp_register_widget_control()
	 *	 - width: required if more than 250px
	 *	 - height: currently not used but may be needed in the future
	 */",
 "/**
	 * Constructs name attributes for use in form() fields
	 *
	 * This function should be used in form() methods to create name attributes for fields to be saved by update()
	 *
	 * @param string $field_name Field name
	 * @return string Name attribute for $field_name
	 */",
 "/**
	 * Constructs id attributes for use in form() fields
	 *
	 * This function should be used in form() methods to create id attributes for fields to be saved by update()
	 *
	 * @param string $field_name Field name
	 * @return string ID attribute for $field_name
	 */",
 "/** Generate the actual widget content.
	 *	Just finds the instance and calls widget().
	 *	Do NOT over-ride this function. */",
 "/** Deal with changed settings.
	 *	Do NOT over-ride this function. */",
 "/** Generate the control form.
	 *	Do NOT over-ride this function. */",
 "/** Helper function: Registers a single instance. */",
 "/**
 * This class must be extended for each widget and WP_Widget::widget(), WP_Widget::update()
 * and WP_Widget::form() need to be over-ridden.
 *
 * @package WordPress
 * @subpackage Widgets
 * @since 2.8
 */",
 "/**
 * Singleton that registers and instantiates WP_Widget classes.
 *
 * @package WordPress
 * @subpackage Widgets
 * @since 2.8
 */",
 "/**
 * Stores the sidebars, since many themes can have more than one.
 *
 * @global array $wp_registered_sidebars
 * @since 2.2.0
 */",
 "/**
 * Stores the registered widgets.
 *
 * @global array $wp_registered_widgets
 * @since 2.2.0
 */",
 "/**
 * Stores the registered widget control (options).
 *
 * @global array $wp_registered_widget_controls
 * @since 2.2.0
 */",
 "/**
 * Private
 */",
 "/**
 * Private
 */",
 "/**
 * Register a widget
 *
 * Registers a WP_Widget widget
 *
 * @since 2.8.0
 *
 * @see WP_Widget
 * @see WP_Widget_Factory
 * @uses WP_Widget_Factory
 *
 * @param string $widget_class The name of a class that extends WP_Widget
 */",
 "/**
 * Unregister a widget
 *
 * Unregisters a WP_Widget widget. Useful for unregistering default widgets.
 * Run within a function hooked to the widgets_init action.
 *
 * @since 2.8.0
 *
 * @see WP_Widget
 * @see WP_Widget_Factory
 * @uses WP_Widget_Factory
 *
 * @param string $widget_class The name of a class that extends WP_Widget
 */",
 "/**
 * Creates multiple sidebars.
 *
 * If you wanted to quickly create multiple sidebars for a theme or internally.
 * This function will allow you to do so. If you don\'t pass the \'name\' and/or
 * \'id\' in $args, then they will be built for you.
 *
 * The default for the name is \"Sidebar #\", with \'#\' being replaced with the
 * number the sidebar is currently when greater than one. If first sidebar, the
 * name will be just \"Sidebar\". The default for id is \"sidebar-\" followed by the
 * number the sidebar creation is currently at. If the id is provided, and multiple
 * sidebars are being defined, the id will have \"-2\" appended, and so on.
 *
 * @since 2.2.0
 *
 * @see register_sidebar() The second parameter is documented by register_sidebar() and is the same here.
 * @uses parse_str() Converts a string to an array to be used in the rest of the function.
 * @uses register_sidebar() Sends single sidebar information [name, id] to this
 *	function to handle building the sidebar.
 *
 * @param int $number Number of sidebars to create.
 * @param string|array $args Builds Sidebar based off of \'name\' and \'id\' values.
 */",
 "/**
 * Builds the definition for a single sidebar and returns the ID.
 *
 * The $args parameter takes either a string or an array with \'name\' and \'id\'
 * contained in either usage. It will be noted that the values will be applied
 * to all sidebars, so if creating more than one, it will be advised to allow
 * for WordPress to create the defaults for you.
 *
 * Example for string would be <code>\'name=whatever;id=whatever1\'</code> and for
 * the array it would be <code>array(
 *    \'name\' => \'whatever\',
 *    \'id\' => \'whatever1\')</code>.
 *
 * name - The name of the sidebar, which presumably the title which will be
 *     displayed.
 * id - The unique identifier by which the sidebar will be called by.
 * before_widget - The content that will prepended to the widgets when they are
 *     displayed.
 * after_widget - The content that will be appended to the widgets when they are
 *     displayed.
 * before_title - The content that will be prepended to the title when displayed.
 * after_title - the content that will be appended to the title when displayed.
 *
 * <em>Content</em> is assumed to be HTML and should be formatted as such, but
 * doesn\'t have to be.
 *
 * @since 2.2.0
 * @uses $wp_registered_sidebars Stores the new sidebar in this array by sidebar ID.
 *
 * @param string|array $args Builds Sidebar based off of \'name\' and \'id\' values
 * @return string The sidebar id that was added.
 */",
 "/**
 * Removes a sidebar from the list.
 *
 * @since 2.2.0
 *
 * @uses $wp_registered_sidebars Stores the new sidebar in this array by sidebar ID.
 *
 * @param string $name The ID of the sidebar when it was added.
 */",
 "/**
 * Register widget for use in sidebars.
 *
 * The default widget option is \'classname\' that can be override.
 *
 * The function can also be used to unregister widgets when $output_callback
 * parameter is an empty string.
 *
 * @since 2.2.0
 *
 * @uses $wp_registered_widgets Uses stored registered widgets.
 * @uses $wp_register_widget_defaults Retrieves widget defaults.
 *
 * @param int|string $id Widget ID.
 * @param string $name Widget display title.
 * @param callback $output_callback Run when widget is called.
 * @param array|string $options Optional. Widget Options.
 * @param mixed $params,... Widget parameters to add to widget.
 * @return null Will return if $output_callback is empty after removing widget.
 */",
 "/**
 * Retrieve description for widget.
 *
 * When registering widgets, the options can also include \'description\' that
 * describes the widget for display on the widget administration panel or
 * in the theme.
 *
 * @since 2.5.0
 *
 * @param int|string $id Widget ID.
 * @return string Widget description, if available. Null on failure to retrieve description.
 */",
 "/**
 * Retrieve description for a sidebar.
 *
 * When registering sidebars a \'description\' parameter can be included that
 * describes the sidebar for display on the widget administration panel.
 *
 * @since 2.9.0
 *
 * @param int|string $id sidebar ID.
 * @return string Sidebar description, if available. Null on failure to retrieve description.
 */",
 "/**
 * Remove widget from sidebar.
 *
 * @since 2.2.0
 *
 * @param int|string $id Widget ID.
 */",
 "/**
 * Registers widget control callback for customizing options.
 *
 * The options contains the \'height\', \'width\', and \'id_base\' keys. The \'height\'
 * option is never used. The \'width\' option is the width of the fully expanded
 * control form, but try hard to use the default width. The \'id_base\' is for
 * multi-widgets (widgets which allow multiple instances such as the text
 * widget), an id_base must be provided. The widget id will end up looking like
 * {$id_base}-{$unique_number}.
 *
 * @since 2.2.0
 *
 * @param int|string $id Sidebar ID.
 * @param string $name Sidebar display name.
 * @param callback $control_callback Run when sidebar is displayed.
 * @param array|string $options Optional. Widget options. See above long description.
 * @param mixed $params,... Optional. Additional parameters to add to widget.
 */",
 "/**
 * Remove control callback for widget.
 *
 * @since 2.2.0
 * @uses wp_register_widget_control() Unregisters by using empty callback.
 *
 * @param int|string $id Widget ID.
 */",
 "/**
 * Display dynamic sidebar.
 *
 * By default it displays the default sidebar or \'sidebar-1\'. The \'sidebar-1\' is
 * not named by the theme, the actual name is \'1\', but \'sidebar-\' is added to
 * the registered sidebars for the name. If you named your sidebar \'after-post\',
 * then the parameter $index will still be \'after-post\', but the lookup will be
 * for \'sidebar-after-post\'.
 *
 * It is confusing for the $index parameter, but just know that it should just
 * work. When you register the sidebar in the theme, you will use the same name
 * for this function or \"Pay no heed to the man behind the curtain.\" Just accept
 * it as an oddity of WordPress sidebar register and display.
 *
 * @since 2.2.0
 *
 * @param int|string $index Optional, default is 1. Name or ID of dynamic sidebar.
 * @return bool True, if widget sidebar was found and called. False if not found or not called.
 */",
 "/**
 * Whether widget is displayed on the front-end.
 *
 * Either $callback or $id_base can be used
 * $id_base is the first argument when extending WP_Widget class
 * Without the optional $widget_id parameter, returns the ID of the first sidebar
 * in which the first instance of the widget with the given callback or $id_base is found.
 * With the $widget_id parameter, returns the ID of the sidebar where
 * the widget with that callback/$id_base AND that ID is found.
 *
 * NOTE: $widget_id and $id_base are the same for single widgets. To be effective
 * this function has to run after widgets have initialized, at action \'init\' or later.
 *
 * @since 2.2.0
 *
 * @param string $callback Optional, Widget callback to check.
 * @param int $widget_id Optional, but needed for checking. Widget ID.
 * @param string $id_base Optional, the base ID of a widget created by extending WP_Widget.
 * @param bool $skip_inactive Optional, whether to check in \'wp_inactive_widgets\'.
 * @return mixed false if widget is not active or id of sidebar in which the widget is active.
 */",
 "/**
 * Whether the dynamic sidebar is enabled and used by theme.
 *
 * @since 2.2.0
 *
 * @return bool True, if using widgets. False, if not using widgets.
 */",
 "/**
 * Whether a sidebar is in use.
 *
 * @since 2.8
 *
 * @param mixed $index Sidebar name, id or number to check.
 * @return bool true if the sidebar is in use, false otherwise.
 */",
 "/**
 * Retrieve full list of sidebars and their widgets.
 *
 * Will upgrade sidebar widget list, if needed. Will also save updated list, if
 * needed.
 *
 * @since 2.2.0
 * @access private
 *
 * @param bool $deprecated Not used (deprecated).
 * @return array Upgraded list of widgets to version 3 array format when called from the admin.
 */",
 "/**
 * Set the sidebar widget option to update sidebars.
 *
 * @since 2.2.0
 * @access private
 *
 * @param array $sidebars_widgets Sidebar widgets and their settings.
 */",
 "/**
 * Retrieve default registered sidebars list.
 *
 * @since 2.2.0
 * @access private
 *
 * @return array
 */",
 "/**
 * Convert the widget settings from single to multi-widget format.
 *
 * @since 2.8.0
 *
 * @return array
 */",
 "/**
 * Output an arbitrary widget as a template tag
 *
 * @since 2.8
 *
 * @param string $widget the widget\'s PHP class name (see default-widgets.php)
 * @param array $instance the widget\'s instance settings
 * @param array $args the widget\'s sidebar args
 * @return void
 **/",
 "/**
 * Private
 */",
 "/**
 * Handle sidebars config after theme change
 *
 * @access private
 * @since 3.3.0
 */",
 "/**
	 * Send required variables to JavaScript land
	 *
	 * @since 3.4
	 * @access private
	 *
	 * @uses $this->features Array of all feature search terms.
	 * @uses get_pagenum()
	 * @uses _pagination_args[\'total_pages\']
	 */",
 "/**
 * Themes List Table class.
 *
 * @package WordPress
 * @subpackage List_Table
 * @since 3.1.0
 * @access private
 */",
 "/**
 * Constructs the admin menu bar.
 *
 * The elements in the array are :
 *     0: Menu item name
 *     1: Minimum level or capability required.
 *     2: The URL of the item\'s file
 *     3: Class
 *     4: ID
 *     5: Icon for top level menu
 *
 * @global array $menu
 * @name $menu
 * @var array
 */",
 "/**
 * Add a link to using values provided in $_POST.
 *
 * @since 2.0.0
 *
 * @return int|WP_Error Value 0 or WP_Error on failure. The link ID on success.
 */",
 "/**
 * Update or insert a link using values provided in $_POST.
 *
 * @since 2.0.0
 *
 * @param int $link_id Optional. ID of the link to edit.
 * @return int|WP_Error Value 0 or WP_Error on failure. The link ID on success.
 */",
 "/**
 * Retrieve the default link for editing.
 *
 * @since 2.0.0
 *
 * @return object Default link
 */",
 "/**
 * Delete link specified from database
 *
 * @since 2.0.0
 *
 * @param int $link_id ID of the link to delete
 * @return bool True
 */",
 "/**
 * Retrieves the link categories associated with the link specified.
 *
 * @since 2.1.0
 *
 * @param int $link_id Link ID to look up
 * @return array The requested link\'s categories
 */",
 "/**
 * Retrieve link data based on ID.
 *
 * @since 2.0.0
 *
 * @param int $link_id ID of link to retrieve
 * @return object Link for editing
 */",
 "/**
 * This function inserts/updates links into/in the database.
 *
 * @since 2.0.0
 *
 * @param array $linkdata Elements that make up the link to insert.
 * @param bool $wp_error Optional. If true return WP_Error object on failure.
 * @return int|WP_Error Value 0 or WP_Error on failure. The link ID on success.
 */",
 "/**
 * Update link with the specified link categories.
 *
 * @since 2.1.0
 *
 * @param int $link_id ID of link to update
 * @param array $link_categories Array of categories to
 */",
 "/**
 * Update a link in the database.
 *
 * @since 2.0.0
 *
 * @param array $linkdata Link data to update.
 * @return int|WP_Error Value 0 or WP_Error on failure. The updated link ID on success.
 */",
 "/**
	 * Returns the path on the remote filesystem of ABSPATH
	 *
	 * @since 2.7
	 * @access public
	 * @return string The location of the remote path.
	 */",
 "/**
	 * Returns the path on the remote filesystem of WP_CONTENT_DIR
	 *
	 * @since 2.7
	 * @access public
	 * @return string The location of the remote path.
	 */",
 "/**
	 * Returns the path on the remote filesystem of WP_PLUGIN_DIR
	 *
	 * @since 2.7
	 * @access public
	 *
	 * @return string The location of the remote path.
	 */",
 "/**
	 * Returns the path on the remote filesystem of the Themes Directory
	 *
	 * @since 2.7
	 * @access public
	 *
	 * @return string The location of the remote path.
	 */",
 "/**
	 * Returns the path on the remote filesystem of WP_LANG_DIR
	 *
	 * @since 3.2.0
	 * @access public
	 *
	 * @return string The location of the remote path.
	 */",
 "/**
	 * Locates a folder on the remote filesystem.
	 *
	 * Deprecated; use WP_Filesystem::abspath() or WP_Filesystem::wp_*_dir() methods instead.
	 *
	 * @since 2.5
	 * @deprecated 2.7
	 * @access public
	 *
	 * @param string $base The folder to start searching from
	 * @param bool $echo True to display debug information
	 * @return string The location of the remote path.
	 */",
 "/**
	 * Locates a folder on the remote filesystem.
	 *
	 * Deprecated; use WP_Filesystem::abspath() or WP_Filesystem::wp_*_dir() methods instead.
	 *
	 * @since 2.5
	 * @deprecated 2.7
	 * @access public
	 *
	 * @param string $base The folder to start searching from
	 * @param bool $echo True to display debug information
	 * @return string The location of the remote path.
	 */",
 "/**
	*Locatesafolderontheremotefilesystem.
	*
	*AssumesthatonWindowssystems,StrippingofftheDriveletterisOK
	*Sanitizes\\to/inwindowsfilepaths.
	*
	*@since2.7
	*@accesspublic
	*
	*@paramstring$folderthefoldertolocate
	*@returnstringThelocationoftheremotepath.
	*/",
 "/**
	*Locatesafolderontheremotefilesystem.
	*
	*ExpectsWindowssanitizedpath
	*
	*@since2.7
	*@accessprivate
	*
	*@paramstring$folderthefoldertolocate
	*@paramstring$basethefoldertostartsearchingfrom
	*@parambool$loopifthefunctionhasrecursed,Internaluseonly
	*@returnstringThelocationoftheremotepath.
	*/",
 "/**
	*Returnsthe*nixstylefilepermissionsforafile
	*
	*FromthePHPdocumentationpageforfileperms()
	*
	*@linkhttp://docs.php.net/fileperms
	*@since2.5
	*@accesspublic
	*
	*@paramstring$filestringfilename
	*@returnintoctalrepresentationofpermissions
	*/",
 "/**
	*Converts*nixstylefilepermissionstoaoctalnumber.
	*
	*Converts\'-rw-r--r--\'to0644
	*From\"info at rvgate dot nl\"\'s comment on the PHP documentation for chmod()
 	 *
	 * @link http://docs.php.net/manual/en/function.chmod.php#49614
	 * @since 2.5
	 * @access public
	 *
	 * @param string $mode string *nix style file permission
	 * @return int octal representation
	 */",
 "/**
	 * Determines if the string provided contains binary characters.
	 *
	 * @since 2.7
	 * @access private
	 *
	 * @param string $text String to test against
	 * @return bool true if string is binary, false otherwise
	 */",
 "/**
 * Base WordPress Filesystem class for which Filesystem implementations extend
 *
 * @since 2.5
 */",
 "/**
 * Display post submit form fields.
 *
 * @since 2.7.0
 *
 * @param object $post
 */",
 "/**
 * Display post format form elements.
 *
 * @since 3.1.0
 *
 * @param object $post
 */",
 "/**
 * Display post tags form fields.
 *
 * @since 2.6.0
 *
 * @param object $post
 */",
 "/**
 * Display post categories form fields.
 *
 * @since 2.6.0
 *
 * @param object $post
 */",
 "/**
 * Display post excerpt form fields.
 *
 * @since 2.6.0
 *
 * @param object $post
 */",
 "/**
 * Display trackback links form fields.
 *
 * @since 2.6.0
 *
 * @param object $post
 */",
 "/**
 * Display custom fields form fields.
 *
 * @since 2.6.0
 *
 * @param object $post
 */",
 "/**
 * Display comments status form fields.
 *
 * @since 2.6.0
 *
 * @param object $post
 */",
 "/**
 * Display comments for post table header
 *
 * @since 3.0.0
 *
 * @param array $result table header rows
 * @return array
 */",
 "/**
 * Display comments for post.
 *
 * @since 2.8.0
 *
 * @param object $post
 */",
 "/**
 * Display slug form fields.
 *
 * @since 2.6.0
 *
 * @param object $post
 */",
 "/**
 * Display form field with list of authors.
 *
 * @since 2.6.0
 *
 * @param object $post
 */",
 "/**
 * Display list of revisions.
 *
 * @since 2.6.0
 *
 * @param object $post
 */",
 "/**
 * Display page attributes form fields.
 *
 * @since 2.7.0
 *
 * @param object $post
 */",
 "/**
 * Display link create form fields.
 *
 * @since 2.7.0
 *
 * @param object $link
 */",
 "/**
 * Display link categories form fields.
 *
 * @since 2.6.0
 *
 * @param object $link
 */",
 "/**
 * Display form fields for changing link target.
 *
 * @since 2.6.0
 *
 * @param object $link
 */",
 "/**
 * Display checked checkboxes attribute for xfn microformat options.
 *
 * @since 1.0.1
 *
 * @param string $class
 * @param string $value
 * @param mixed $deprecated Never used.
 */",
 "/**
 * Display xfn form fields.
 *
 * @since 2.6.0
 *
 * @param object $link
 */",
 "/**
 * Display advanced link options form fields.
 *
 * @since 2.6.0
 *
 * @param object $link
 */",
 "/**
 * Display post thumbnail meta box.
 *
 * @since 2.9.0
 */",
 "/**
 * Whether the server software is Apache or something else
 * @global bool $is_apache
 */",
 "/**
 * Whether the server software is IIS or something else
 * @global bool $is_IIS
 */",
 "/**
 * Whether the server software is IIS 7.X
 * @global bool $is_iis7
 */",
 "/**
 * Test if the current browser runs on a mobile device (smart phone, tablet, etc.)
 *
 * @return bool true|false
 */",
 "/**
 * Plugin Installer List Table class.
 *
 * @package WordPress
 * @subpackage List_Table
 * @since 3.1.0
 * @access private
 */",
 "/**
 * Writes logging info to a file.
 *
 * @since 2.2.0
 * @deprecated 3.4.0
 * @deprecated Use error_log()
 * @link http://www.php.net/manual/en/function.error-log.php
 *
 * @param string $label Type of logging
 * @param string $msg Information describing logging reason.
 */",
 "/**
	 * The SimplePie class contains feed level data and options
	 *
	 * There are two ways that you can create a new SimplePie object. The first
	 * is by passing a feed URL as a parameter to the SimplePie constructor
	 * (as well as optionally setting the cache location and cache expiry). This
	 * will initialise the whole feed with all of the default settings, and you
	 * can begin accessing methods and properties immediately.
	 *
	 * The second way is to create the SimplePie object with no parameters
	 * at all. This will enable you to set configuration options. After setting
	 * them, you must initialise the feed using $feed->init(). At that point the
	 * object\'s methods and properties will be available to you. This format is
	 * what is used throughout this documentation.
	 *
	 * @access public
	 * @since 1.0 Preview Release
	 * @param string $feed_url This is the URL you want to parse.
	 * @param string $cache_location This is where you want the cache to be stored.
	 * @param int $cache_duration This is the number of seconds that you want to store the cache file for.
	 */",
 "/**
	 * Used for converting object to a string
	 */",
 "/**
	 * Remove items that link back to this before destroying this object
	 */",
 "/**
	 * Force the given data/URL to be treated as a feed no matter what it
	 * appears like
	 *
	 * @access public
	 * @since 1.1
	 * @param bool $enable Force the given data/URL to be treated as a feed
	 */",
 "/**
	 * This is the URL of the feed you want to parse.
	 *
	 * This allows you to enter the URL of the feed you want to parse, or the
	 * website you want to try to use auto-discovery on. This takes priority
	 * over any set raw data.
	 *
	 * You can set multiple feeds to mash together by passing an array instead
	 * of a string for the $url. Remember that with each additional feed comes
	 * additional processing and resources.
	 *
	 * @access public
	 * @since 1.0 Preview Release
	 * @param mixed $url This is the URL (or array of URLs) that you want to parse.
	 * @see SimplePie::set_raw_data()
	 */",
 "/**
	 * Provides an instance of SimplePie_File to use as a feed
	 *
	 * @access public
	 * @param object &$file Instance of SimplePie_File (or subclass)
	 * @return bool True on success, false on failure
	 */",
 "/**
	 * Allows you to use a string of RSS/Atom data instead of a remote feed.
	 *
	 * If you have a feed available as a string in PHP, you can tell SimplePie
	 * to parse that data string instead of a remote feed. Any set feed URL
	 * takes precedence.
	 *
	 * @access public
	 * @since 1.0 Beta 3
	 * @param string $data RSS or Atom data as a string.
	 * @see SimplePie::set_feed_url()
	 */",
 "/**
	 * Allows you to override the default timeout for fetching remote feeds.
	 *
	 * This allows you to change the maximum time the feed\'s server to respond
	 * and send the feed back.
	 *
	 * @access public
	 * @since 1.0 Beta 3
	 * @param int $timeout The maximum number of seconds to spend waiting to retrieve a feed.
	 */",
 "/**
	 * Forces SimplePie to use fsockopen() instead of the preferred cURL
	 * functions.
	 *
	 * @access public
	 * @since 1.0 Beta 3
	 * @param bool $enable Force fsockopen() to be used
	 */",
 "/**
	 * Outputs the raw XML content of the feed, after it has gone through
	 * SimplePie\'s filters.
	 *
	 * Used only for debugging, this function will output the XML content as
	 * text/xml. When SimplePie reads in a feed, it does a bit of cleaning up
	 * before trying to parse it. Many parts of the feed are re-written in
	 * memory, and in the end, you have a parsable feed. XML dump shows you the
	 * actual XML that SimplePie tries to parse, which may or may not be very
	 * different from the original feed.
	 *
	 * @access public
	 * @since 1.0 Preview Release
	 * @param bool $enable Enable XML dump
	 */",
 "/**
	 * Enables/disables caching in SimplePie.
	 *
	 * This option allows you to disable caching all-together in SimplePie.
	 * However, disabling the cache can lead to longer load times.
	 *
	 * @access public
	 * @since 1.0 Preview Release
	 * @param bool $enable Enable caching
	 */",
 "/**
	 * Set the length of time (in seconds) that the contents of a feed
	 * will be cached.
	 *
	 * @access public
	 * @param int $seconds The feed content cache duration.
	 */",
 "/**
	 * Set the length of time (in seconds) that the autodiscovered feed
	 * URL will be cached.
	 *
	 * @access public
	 * @param int $seconds The autodiscovered feed URL cache duration.
	 */",
 "/**
	 * Set the file system location where the cached files should be stored.
	 *
	 * @access public
	 * @param string $location The file system location.
	 */",
 "/**
	 * Determines whether feed items should be sorted into reverse chronological order.
	 *
	 * @access public
	 * @param bool $enable Sort as reverse chronological order.
	 */",
 "/**
	 * Allows you to override the character encoding reported by the feed.
	 *
	 * @access public
	 * @param string $encoding Character encoding.
	 */",
 "/**
	 * Set how much feed autodiscovery to do
	 *
	 * @access public
	 * @see SIMPLEPIE_LOCATOR_NONE
	 * @see SIMPLEPIE_LOCATOR_AUTODISCOVERY
	 * @see SIMPLEPIE_LOCATOR_LOCAL_EXTENSION
	 * @see SIMPLEPIE_LOCATOR_LOCAL_BODY
	 * @see SIMPLEPIE_LOCATOR_REMOTE_EXTENSION
	 * @see SIMPLEPIE_LOCATOR_REMOTE_BODY
	 * @see SIMPLEPIE_LOCATOR_ALL
	 * @param int $level Feed Autodiscovery Level (level can be a
	 * combination of the above constants, see bitwise OR operator)
	 */",
 "/**
	 * Allows you to change which class SimplePie uses for caching.
	 * Useful when you are overloading or extending SimplePie\'s default classes.
	 *
	 * @access public
	 * @param string $class Name of custom class.
	 * @link http://php.net/manual/en/keyword.extends.php PHP4 extends documentation
	 * @link http://php.net/manual/en/language.oop5.basic.php#language.oop5.basic.extends PHP5 extends documentation
	 */",
 "/**
	 * Allows you to change which class SimplePie uses for auto-discovery.
	 * Useful when you are overloading or extending SimplePie\'s default classes.
	 *
	 * @access public
	 * @param string $class Name of custom class.
	 * @link http://php.net/manual/en/keyword.extends.php PHP4 extends documentation
	 * @link http://php.net/manual/en/language.oop5.basic.php#language.oop5.basic.extends PHP5 extends documentation
	 */",
 "/**
	 * Allows you to change which class SimplePie uses for XML parsing.
	 * Useful when you are overloading or extending SimplePie\'s default classes.
	 *
	 * @access public
	 * @param string $class Name of custom class.
	 * @link http://php.net/manual/en/keyword.extends.php PHP4 extends documentation
	 * @link http://php.net/manual/en/language.oop5.basic.php#language.oop5.basic.extends PHP5 extends documentation
	 */",
 "/**
	 * Allows you to change which class SimplePie uses for remote file fetching.
	 * Useful when you are overloading or extending SimplePie\'s default classes.
	 *
	 * @access public
	 * @param string $class Name of custom class.
	 * @link http://php.net/manual/en/keyword.extends.php PHP4 extends documentation
	 * @link http://php.net/manual/en/language.oop5.basic.php#language.oop5.basic.extends PHP5 extends documentation
	 */",
 "/**
	 * Allows you to change which class SimplePie uses for data sanitization.
	 * Useful when you are overloading or extending SimplePie\'s default classes.
	 *
	 * @access public
	 * @param string $class Name of custom class.
	 * @link http://php.net/manual/en/keyword.extends.php PHP4 extends documentation
	 * @link http://php.net/manual/en/language.oop5.basic.php#language.oop5.basic.extends PHP5 extends documentation
	 */",
 "/**
	 * Allows you to change which class SimplePie uses for handling feed items.
	 * Useful when you are overloading or extending SimplePie\'s default classes.
	 *
	 * @access public
	 * @param string $class Name of custom class.
	 * @link http://php.net/manual/en/keyword.extends.php PHP4 extends documentation
	 * @link http://php.net/manual/en/language.oop5.basic.php#language.oop5.basic.extends PHP5 extends documentation
	 */",
 "/**
	 * Allows you to change which class SimplePie uses for handling author data.
	 * Useful when you are overloading or extending SimplePie\'s default classes.
	 *
	 * @access public
	 * @param string $class Name of custom class.
	 * @link http://php.net/manual/en/keyword.extends.php PHP4 extends documentation
	 * @link http://php.net/manual/en/language.oop5.basic.php#language.oop5.basic.extends PHP5 extends documentation
	 */",
 "/**
	 * Allows you to change which class SimplePie uses for handling category data.
	 * Useful when you are overloading or extending SimplePie\'s default classes.
	 *
	 * @access public
	 * @param string $class Name of custom class.
	 * @link http://php.net/manual/en/keyword.extends.php PHP4 extends documentation
	 * @link http://php.net/manual/en/language.oop5.basic.php#language.oop5.basic.extends PHP5 extends documentation
	 */",
 "/**
	 * Allows you to change which class SimplePie uses for feed enclosures.
	 * Useful when you are overloading or extending SimplePie\'s default classes.
	 *
	 * @access public
	 * @param string $class Name of custom class.
	 * @link http://php.net/manual/en/keyword.extends.php PHP4 extends documentation
	 * @link http://php.net/manual/en/language.oop5.basic.php#language.oop5.basic.extends PHP5 extends documentation
	 */",
 "/**
	 * Allows you to change which class SimplePie uses for <media:text> captions
	 * Useful when you are overloading or extending SimplePie\'s default classes.
	 *
	 * @access public
	 * @param string $class Name of custom class.
	 * @link http://php.net/manual/en/keyword.extends.php PHP4 extends documentation
	 * @link http://php.net/manual/en/language.oop5.basic.php#language.oop5.basic.extends PHP5 extends documentation
	 */",
 "/**
	 * Allows you to change which class SimplePie uses for <media:copyright>
	 * Useful when you are overloading or extending SimplePie\'s default classes.
	 *
	 * @access public
	 * @param string $class Name of custom class.
	 * @link http://php.net/manual/en/keyword.extends.php PHP4 extends documentation
	 * @link http://php.net/manual/en/language.oop5.basic.php#language.oop5.basic.extends PHP5 extends documentation
	 */",
 "/**
	 * Allows you to change which class SimplePie uses for <media:credit>
	 * Useful when you are overloading or extending SimplePie\'s default classes.
	 *
	 * @access public
	 * @param string $class Name of custom class.
	 * @link http://php.net/manual/en/keyword.extends.php PHP4 extends documentation
	 * @link http://php.net/manual/en/language.oop5.basic.php#language.oop5.basic.extends PHP5 extends documentation
	 */",
 "/**
	 * Allows you to change which class SimplePie uses for <media:rating>
	 * Useful when you are overloading or extending SimplePie\'s default classes.
	 *
	 * @access public
	 * @param string $class Name of custom class.
	 * @link http://php.net/manual/en/keyword.extends.php PHP4 extends documentation
	 * @link http://php.net/manual/en/language.oop5.basic.php#language.oop5.basic.extends PHP5 extends documentation
	 */",
 "/**
	 * Allows you to change which class SimplePie uses for <media:restriction>
	 * Useful when you are overloading or extending SimplePie\'s default classes.
	 *
	 * @access public
	 * @param string $class Name of custom class.
	 * @link http://php.net/manual/en/keyword.extends.php PHP4 extends documentation
	 * @link http://php.net/manual/en/language.oop5.basic.php#language.oop5.basic.extends PHP5 extends documentation
	 */",
 "/**
	 * Allows you to change which class SimplePie uses for content-type sniffing.
	 * Useful when you are overloading or extending SimplePie\'s default classes.
	 *
	 * @access public
	 * @param string $class Name of custom class.
	 * @link http://php.net/manual/en/keyword.extends.php PHP4 extends documentation
	 * @link http://php.net/manual/en/language.oop5.basic.php#language.oop5.basic.extends PHP5 extends documentation
	 */",
 "/**
	 * Allows you to change which class SimplePie uses item sources.
	 * Useful when you are overloading or extending SimplePie\'s default classes.
	 *
	 * @access public
	 * @param string $class Name of custom class.
	 * @link http://php.net/manual/en/keyword.extends.php PHP4 extends documentation
	 * @link http://php.net/manual/en/language.oop5.basic.php#language.oop5.basic.extends PHP5 extends documentation
	 */",
 "/**
	 * Allows you to override the default user agent string.
	 *
	 * @access public
	 * @param string $ua New user agent string.
	 */",
 "/**
	 * Set callback function to create cache filename with
	 *
	 * @access public
	 * @param mixed $function Callback function
	 */",
 "/**
	 * Set javascript query string parameter
	 *
	 * @access public
	 * @param mixed $get Javascript query string parameter
	 */",
 "/**
	 * Set options to make SP as fast as possible.  Forgoes a
	 * substantial amount of data sanitization in favor of speed.
	 *
	 * @access public
	 * @param bool $set Whether to set them or not
	 */",
 "/**
	 * Set maximum number of feeds to check with autodiscovery
	 *
	 * @access public
	 * @param int $max Maximum number of feeds to check
	 */",
 "/**
	 * Set element/attribute key/value pairs of HTML attributes
	 * containing URLs that need to be resolved relative to the feed
	 *
	 * @access public
	 * @since 1.0
	 * @param array $element_attribute Element/attribute key/value pairs
	 */",
 "/**
	 * Set the handler to enable the display of cached favicons.
	 *
	 * @access public
	 * @param str $page Web-accessible path to the handler_favicon.php file.
	 * @param str $qs The query string that the value should be passed to.
	 */",
 "/**
	 * Set the handler to enable the display of cached images.
	 *
	 * @access public
	 * @param str $page Web-accessible path to the handler_image.php file.
	 * @param str $qs The query string that the value should be passed to.
	 */",
 "/**
	 * Set the limit for items returned per-feed with multifeeds.
	 *
	 * @access public
	 * @param integer $limit The maximum number of items to return.
	 */",
 "/**
	 * Return the error message for the occured error
	 *
	 * @access public
	 * @return string Error message
	 */",
 "/**
	 * Returns the URL for the favicon of the feed\'s website.
	 *
	 * @todo Cache atom:icon
	 * @access public
	 * @since 1.0
	 */",
 "/**
	 * @todo If we have a perm redirect we should return the new URL
	 * @todo When we make the above change, let\'s support <itunes:new-feed-url> as well
	 * @todo Also, |atom:link|@rel=self
	 */",
 "/**
	 * Creates the subscribe_* methods\' return data
	 *
	 * @access private
	 * @param string $feed_url String to prefix to the feed URL
	 * @param string $site_url String to prefix to the site URL (and
	 * suffix to the feed URL)
	 * @return mixed URL if feed exists, false otherwise
	 */",
 "/**
	 * Added for parity between the parent-level and the item/entry-level.
	 */",
 "/**
	 * @static
	 */",
 "/**
	 * @static
	 */",
 "/**
 * SimplePie
 *
 * @package SimplePie
 */",
 "/**
	 * Remove items that link back to this before destroying this object
	 */",
 "/**
	 * @todo Add ability to prefer one type of content over another (in a media group).
	 */",
 "/**
	 * Grabs all available enclosures (podcasts, etc.)
	 *
	 * Supports the <enclosure> RSS tag, as well as Media RSS and iTunes RSS.
	 *
	 * At this point, we\'re pretty much assuming that all enclosures for an item are the same content.  Anything else is too complicated to properly support.
	 *
	 * @todo Add support for end-user defined sorting of enclosures by type/handler (so we can prefer the faster-loading FLV over MP4).
	 * @todo If an element exists at a level, but it\'s value is empty, we should fall back to the value from the parent (if it exists).
	 */",
 "/**
	 * Creates the add_to_* methods\' return data
	 *
	 * @access private
	 * @param string $item_url String to prefix to the item permalink
	 * @param string $title_url String to prefix to the item title
	 * (and suffix to the item permalink)
	 * @return mixed URL if feed exists, false otherwise
	 */",
 "/**
	 * Added for parity between the parent-level and the item/entry-level.
	 */",
 "/**
	 * @todo If the dimensions for media:content are defined, use them when width/height are set to \'auto\'.
	 */",
 "/**
 * @todo Move to properly supporting RFC2616 (HTTP/1.1)
 */",
 "/**
	 * Create an instance of the class with the input data
	 *
	 * @access public
	 * @param string $data Input data
	 */",
 "/**
	 * Parse the input data
	 *
	 * @access public
	 * @return bool true on success, false on failure
	 */",
 "/**
	 * Check whether there is data beyond the pointer
	 *
	 * @access private
	 * @return bool true if there is further data, false if not
	 */",
 "/**
	 * See if the next character is LWS
	 *
	 * @access private
	 * @return bool true if the next character is LWS, false if not
	 */",
 "/**
	 * Parse the HTTP version
	 *
	 * @access private
	 */",
 "/**
	 * Parse the status code
	 *
	 * @access private
	 */",
 "/**
	 * Parse the reason phrase
	 *
	 * @access private
	 */",
 "/**
	 * Deal with a new line, shifting data around as needed
	 *
	 * @access private
	 */",
 "/**
	 * Parse a header name
	 *
	 * @access private
	 */",
 "/**
	 * Parse LWS, replacing consecutive LWS characters with a single space
	 *
	 * @access private
	 */",
 "/**
	 * See what state to move to while within non-quoted header values
	 *
	 * @access private
	 */",
 "/**
	 * Parse a header value while outside quotes
	 *
	 * @access private
	 */",
 "/**
	*Seewhatstatetomovetowhilewithinquotedheadervalues
	*
	*@accessprivate
	*/",
 "/**
	*Parseaheadervaluewhilewithinquotes
	*
	*@accessprivate
	*/",
 "/**
	*Parseanescapedcharacterwithinquotes
	*
	*@accessprivate
	*/",
 "/**
	*Parsethebody
	*
	*@accessprivate
	*/",
 "/**
*HTTPResponseParser
*
*@packageSimplePie
*/",
 "/**
	*Don\'tallowanythingtobeset
	*
	*@accesspublic
	*/",
 "/**
	*Setthecompressedstringandrelatedproperties
	*
	*@accesspublic
	*/",
 "/**
	*DecodetheGZIPstream
	*
	*@accesspublic
	*/",
 "/**
*gzdecode
*
*@packageSimplePie
*/",
 "/**
	*Don\'tcalltheconstructor.Please.
	*
	*@accessprivate
	*/",
 "/**
	*CreateanewSimplePie_Cacheobject
	*
	*@static
	*@accesspublic
	*/",
 "/**
	 * If a file has been cached, retrieve and display it.
	 *
	 * This is most useful for caching images (get_favicon(), etc.),
	 * however it works for all cached files.  This WILL NOT display ANY
	 * file/image/page/whatever, but rather only display what has already
	 * been cached by SimplePie.
	 *
	 * @access public
	 * @see SimplePie::get_favicon()
	 * @param str $identifier_url URL that is used to identify the content.
	 * This may or may not be the actual URL of the live content.
	 * @param str $cache_location Location of SimplePie\'s cache.  Defaults
	 * to \'./cache\'.
	 * @param str $cache_extension The file extension that the file was
	 * cached with.  Defaults to \'spc\'.
	 * @param str $cache_class Name of the cache-handling class being used
	 * in SimplePie.  Defaults to \'SimplePie_Cache\', and should be left
	 * as-is unless you\'ve overloaded the class.
	 * @param str $cache_name_function Obsolete. Exists for backwards
	 * compatibility reasons only.
	 */",
 "/**
	 * Remove bad UTF-8 bytes
	 *
	 * PCRE Pattern to locate bad bytes in a UTF-8 string comes from W3C
	 * FAQ: Multilingual Forms (modified to include full ASCII range)
	 *
	 * @author Geoffrey Sneddon
	 * @see http://www.w3.org/International/questions/qa-forms-utf-8
	 * @param string $str String to remove bad UTF-8 bytes from
	 * @return string UTF-8 string
	 */",
 "/**
	 * Converts a Windows-1252 encoded string to a UTF-8 encoded string
	 *
	 * @static
	 * @access public
	 * @param string $string Windows-1252 encoded string
	 * @return string UTF-8 encoded string
	 */",
 "/**
	 * Normalize an encoding name
	 *
	 * This is automatically generated by create.php
	 *
	 * To generate it, run `php create.php` on the command line, and copy the
	 * output to replace this function.
	 *
	 * @param string $charset Character set to standardise
	 * @return string Standardised name
	 */",
 "/**
	 * Strip HTML comments
	 *
	 * @access public
	 * @param string $data Data to strip comments from
	 * @return string Comment stripped string
	 */",
 "/**
	 * Decode HTML entities
	 *
	 * @static
	 * @access public
	 * @param string $data Input data
	 * @return string Output data
	 */",
 "/**
	*RemoveRFC822comments
	*
	*@accesspublic
	*@paramstring$dataDatatostripcommentsfrom
	*@returnstringCommentstrippedstring
	*/",
 "/**
	*ConvertsaunicodecodepointtoaUTF-8character
	*
	*@static
	*@accesspublic
	*@paramint$codepointUnicodecodepoint
	*@returnstringUTF-8character
	*/",
 "/**
	*Re-implementationofPHP5\'sstripos()
	*
	*Returnsthenumericpositionofthefirstoccurrenceofneedleinthe
	*haystackstring.
	*
	*@static
	*@accessstring
	*@paramobject$haystack
	*@paramstring$needleNotethattheneedlemaybeastringofoneormore
	*characters.Ifneedleisnotastring,itisconvertedtoaninteger
	*andappliedastheordinalvalueofacharacter.
	*@paramint$offsetTheoptionaloffsetparameterallowsyoutospecifywhich
	*characterinhaystacktostartsearching.Thepositionreturnedisstill
	*relativetothebeginningofhaystack.
	*@returnboolIfneedleisnotfound,stripos()willreturnbooleanfalse.
	*/",
 "/**
	*Similartoparse_str()
	*
	*Returnsanassociativearrayofname/valuepairs,wherethevalueisan
	*arrayofvaluesthathaveusedthesamename
	*
	*@static
	*@accessstring
	*@paramstring$strTheinputstring.
	*@returnarray
	*/",
 "/**
	*DetectXMLencoding,asperXML1.0AppendixF.1
	*
	*@todoAddsupportforEBCDIC
	*@paramstring$dataXMLdata
	*@returnarrayPossibleencodings
	*/",
 "/**
	 * Format debugging information
	 */",
 "/**
	 * Create an instance of the class with the input data
	 *
	 * @access public
	 * @param string $data Input data
	 */",
 "/**
	 * Parse the input data
	 *
	 * @access public
	 * @return string Output data
	 */",
 "/**
	 * Consume the next byte
	 *
	 * @access private
	 * @return mixed The next byte, or false, if there is no more data
	 */",
 "/**
	 * Consume a range of characters
	 *
	 * @access private
	 * @param string $chars Characters to consume
	 * @return mixed A series of characters that match the range, or false
	 */",
 "/**
	 * Unconsume one byte
	 *
	 * @access private
	 */",
 "/**
	 * Decode an entity
	 *
	 * @access private
	 */",
 "/**
 * Decode HTML Entities
 *
 * This implements HTML5 as of revision 967 (2007-06-28)
 *
 * @package SimplePie
 */",
 "/**
	 * Return the entire IRI when you try and read the object as a string
	 *
	 * @access public
	 * @return string
	 */",
 "/**
	 * Create a new IRI object, from a specified string
	 *
	 * @access public
	 * @param string $iri
	 * @return SimplePie_IRI
	 */",
 "/**
	 * Create a new IRI object by resolving a relative IRI
	 *
	 * @static
	 * @access public
	 * @param SimplePie_IRI $base Base IRI
	 * @param string $relative Relative IRI
	 * @return SimplePie_IRI
	 */",
 "/**
	 * Parse an IRI into scheme/authority/path/query/fragment segments
	 *
	 * @access private
	 * @param string $iri
	 * @return array
	 */",
 "/**
	 * Remove dot segments from a path
	 *
	 * @access private
	 * @param string $input
	 * @return string
	 */",
 "/**
	 * Replace invalid character with percent encoding
	 *
	 * @param string $string Input string
	 * @param string $valid_chars Valid characters
	 * @param int $case Normalise case
	 * @return string
	 */",
 "/**
	 * Callback function for preg_replace_callback.
	 *
	 * Removes sequences of percent encoded bytes that represent UTF-8
	 * encoded characters in iunreserved
	 *
	 * @access private
	 * @param array $match PCRE match
	 * @return string Replacement
	 */",
 "/**
	 * Check if the object represents a valid IRI
	 *
	 * @access public
	 * @return bool
	 */",
 "/**
	 * Set the scheme. Returns true on success, false on failure (if there are
	 * any invalid characters).
	 *
	 * @access public
	 * @param string $scheme
	 * @return bool
	 */",
 "/**
	 * Set the authority. Returns true on success, false on failure (if there are
	 * any invalid characters).
	 *
	 * @access public
	 * @param string $authority
	 * @return bool
	 */",
 "/**
	 * Set the userinfo.
	 *
	 * @access public
	 * @param string $userinfo
	 * @return bool
	 */",
 "/**
	 * Set the host. Returns true on success, false on failure (if there are
	 * any invalid characters).
	 *
	 * @access public
	 * @param string $host
	 * @return bool
	 */",
 "/**
	 * Set the port. Returns true on success, false on failure (if there are
	 * any invalid characters).
	 *
	 * @access public
	 * @param string $port
	 * @return bool
	 */",
 "/**
	 * Set the path.
	 *
	 * @access public
	 * @param string $path
	 * @return bool
	 */",
 "/**
	 * Set the query.
	 *
	 * @access public
	 * @param string $query
	 * @return bool
	 */",
 "/**
	 * Set the fragment.
	 *
	 * @access public
	 * @param string $fragment
	 * @return bool
	 */",
 "/**
	 * Get the complete IRI
	 *
	 * @access public
	 * @return string
	 */",
 "/**
	 * Get the scheme
	 *
	 * @access public
	 * @return string
	 */",
 "/**
	 * Get the complete authority
	 *
	 * @access public
	 * @return string
	 */",
 "/**
	 * Get the user information
	 *
	 * @access public
	 * @return string
	 */",
 "/**
	 * Get the host
	 *
	 * @access public
	 * @return string
	 */",
 "/**
	 * Get the port
	 *
	 * @access public
	 * @return string
	 */",
 "/**
	 * Get the path
	 *
	 * @access public
	 * @return string
	 */",
 "/**
	 * Get the query
	 *
	 * @access public
	 * @return string
	 */",
 "/**
	 * Get the fragment
	 *
	 * @access public
	 * @return string
	 */",
 "/**
 * IRI parser/serialiser
 *
 * @package SimplePie
 */",
 "/**
	 * Removes a possible existing netmask specification of an IP address.
	 *
	 * @param string $ip the (compressed) IP as Hex representation
	 * @return string the IP the without netmask
	 * @since 1.1.0
	 * @access public
	 * @static
	 */",
 "/**
	 * Uncompresses an IPv6 address
	 *
	 * RFC 2373 allows you to compress zeros in an address to \'::\'. This
	 * function expects an valid IPv6 address and expands the \'::\' to
	 * the required zeros.
	 *
	 * Example:	 FF01::101	->	FF01:0:0:0:0:0:0:101
	 *			 ::1		->	0:0:0:0:0:0:0:1
	 *
	 * @access public
	 * @static
	 * @param string $ip a valid IPv6-address (hex format)
	 * @return string the uncompressed IPv6-address (hex format)
	 */",
 "/**
	 * Splits an IPv6 address into the IPv6 and a possible IPv4 part
	 *
	 * RFC 2373 allows you to note the last two parts of an IPv6 address as
	 * an IPv4 compatible address
	 *
	 * Example:	 0:0:0:0:0:0:13.1.68.3
	 *			 0:0:0:0:0:FFFF:129.144.52.38
	 *
	 * @access public
	 * @static
	 * @param string $ip a valid IPv6-address (hex format)
	 * @return array [0] contains the IPv6 part, [1] the IPv4 part (hex format)
	 */",
 "/**
	 * Checks an IPv6 address
	 *
	 * Checks if the given IP is IPv6-compatible
	 *
	 * @access public
	 * @static
	 * @param string $ip a valid IPv6-address
	 * @return bool true if $ip is an IPv6 address
	 */",
 "/**
 * Class to validate and to work with IPv6 addresses.
 *
 * @package SimplePie
 * @copyright 2003-2005 The PHP Group
 * @license http://www.opensource.org/licenses/bsd-license.php
 * @link http://pear.php.net/package/Net_IPv6
 * @author Alexander Merz <alexander.merz@web.de>
 * @author elfrink at introweb dot nl
 * @author Josh Peck <jmp at joshpeck dot org>
 * @author Geoffrey Sneddon <geoffers@gmail.com>
 */",
 "/**
	 * Create new SimplePie_Parse_Date object, and set self::day_pcre,
	 * self::month_pcre, and self::built_in
	 *
	 * @access private
	 */",
 "/**
	 * Get the object
	 *
	 * @access public
	 */",
 "/**
	 * Parse a date
	 *
	 * @final
	 * @access public
	 * @param string $date Date to parse
	 * @return int Timestamp corresponding to date string, or false on failure
	 */",
 "/**
	 * Add a callback method to parse a date
	 *
	 * @final
	 * @access public
	 * @param callback $callback
	 */",
 "/**
	 * Parse a superset of W3C-DTF (allows hyphens and colons to be omitted, as
	 * well as allowing any of upper or lower case \"T\", horizontal tabs, or
	 * spaces to be used as the time seperator (including more than one))
	 *
	 * @access protected
	 * @return int Timestamp
	 */",
 "/**
	*RemoveRFC822comments
	*
	*@accessprotected
	*@paramstring$dataDatatostripcommentsfrom
	*@returnstringCommentstrippedstring
	*/",
 "/**
	*ParseRFC2822\'sdateformat
	*
	*@accessprotected
	*@returnintTimestamp
	*/",
 "/**
	*ParseRFC850\'sdateformat
	*
	*@accessprotected
	*@returnintTimestamp
	*/",
 "/**
	*ParseC99\'sasctime()\'sdateformat
	*
	*@accessprotected
	*@returnintTimestamp
	*/",
 "/**
	*Parsedatesusingstrtotime()
	*
	*@accessprotected
	*@returnintTimestamp
	*/",
 "/**
*DateParser
*
*@packageSimplePie
*/",
 "/**
	*Createaninstanceoftheclasswiththeinputfile
	*
	*@accesspublic
	*@paramSimplePie_Content_Type_Sniffer$fileInputfile
	*/",
 "/**
	*GettheContent-Typeofthespecifiedfile
	*
	*@accesspublic
	*@returnstringActualContent-Type
	*/",
 "/**
	*Snifftextorbinary
	*
	*@accessprivate
	*@returnstringActualContent-Type
	*/",
 "/**
	*Sniffunknown
	*
	*@accessprivate
	*@returnstringActualContent-Type
	*/",
 "/**
	*Sniffimages
	*
	*@accessprivate
	*@returnstringActualContent-Type
	*/",
 "/**
	*SniffHTML
	*
	*@accessprivate
	*@returnstringActualContent-Type
	*/",
 "/**
*Content-typesniffing
*
*@packageSimplePie
*/",
 "/**
	*Createaninstanceoftheclasswiththeinputdata
	*
	*@accesspublic
	*@paramstring$dataInputdata
	*/",
 "/**
	*Parsetheinputdata
	*
	*@accesspublic
	*@returnbooltrueonsuccess,falseonfailure
	*/",
 "/**
	*Checkwhetherthereisdatabeyondthepointer
	*
	*@accessprivate
	*@returnbooltrueifthereisfurtherdata,falseifnot
	*/",
 "/**
	*Advancepastanywhitespace
	*
	*@returnintNumberofwhitespacecharacterspassed
	*/",
 "/**
	 * Read value
	 */",
 "/**
 * Parses the XML Declaration
 *
 * @package SimplePie
 */",
 "/**
	 * Set element/attribute key/value pairs of HTML attributes
	 * containing URLs that need to be resolved relative to the feed
	 *
	 * @access public
	 * @since 1.0
	 * @param array $element_attribute Element/attribute key/value pairs
	 */",
 "/**
 * @todo Move to using an actual HTML parser (this will allow tags to be properly stripped, and to switch between HTML and XHTML), this will also make it easier to shorten a string while preserving HTML tags
 */",
 "/**
	 * Sets up the translated strings and object properties.
	 *
	 * The method creates the translatable strings for various
	 * calendar elements. Which allows for specifying locale
	 * specific calendar names and text direction.
	 *
	 * @since 2.1.0
	 * @access private
	 */",
 "/**
	 * Retrieve the full translated weekday word.
	 *
	 * Week starts on translated Sunday and can be fetched
	 * by using 0 (zero). So the week starts with 0 (zero)
	 * and ends on Saturday with is fetched by using 6 (six).
	 *
	 * @since 2.1.0
	 * @access public
	 *
	 * @param int $weekday_number 0 for Sunday through 6 Saturday
	 * @return string Full translated weekday
	 */",
 "/**
	 * Retrieve the translated weekday initial.
	 *
	 * The weekday initial is retrieved by the translated
	 * full weekday word. When translating the weekday initial
	 * pay attention to make sure that the starting letter does
	 * not conflict.
	 *
	 * @since 2.1.0
	 * @access public
	 *
	 * @param string $weekday_name
	 * @return string
	 */",
 "/**
	 * Retrieve the translated weekday abbreviation.
	 *
	 * The weekday abbreviation is retrieved by the translated
	 * full weekday word.
	 *
	 * @since 2.1.0
	 * @access public
	 *
	 * @param string $weekday_name Full translated weekday word
	 * @return string Translated weekday abbreviation
	 */",
 "/**
	 * Retrieve the full translated month by month number.
	 *
	 * The $month_number parameter has to be a string
	 * because it must have the \'0\' in front of any number
	 * that is less than 10. Starts from \'01\' and ends at
	 * \'12\'.
	 *
	 * You can use an integer instead and it will add the
	 * \'0\' before the numbers less than 10 for you.
	 *
	 * @since 2.1.0
	 * @access public
	 *
	 * @param string|int $month_number \'01\' through \'12\'
	 * @return string Translated full month name
	 */",
 "/**
	 * Retrieve translated version of month abbreviation string.
	 *
	 * The $month_name parameter is expected to be the translated or
	 * translatable version of the month.
	 *
	 * @since 2.1.0
	 * @access public
	 *
	 * @param string $month_name Translated month to get abbreviated version
	 * @return string Translated abbreviated month
	 */",
 "/**
	 * Retrieve translated version of meridiem string.
	 *
	 * The $meridiem parameter is expected to not be translated.
	 *
	 * @since 2.1.0
	 * @access public
	 *
	 * @param string $meridiem Either \'am\', \'pm\', \'AM\', or \'PM\'. Not translated version.
	 * @return string Translated version
	 */",
 "/**
	 * Global variables are deprecated. For backwards compatibility only.
	 *
	 * @deprecated For backwards compatibility only.
	 * @access private
	 *
	 * @since 2.1.0
	 */",
 "/**
	 * Constructor which calls helper methods to set up object variables
	 *
	 * @uses WP_Locale::init()
	 * @uses WP_Locale::register_globals()
	 * @since 2.1.0
	 *
	 * @return WP_Locale
	 */",
 "/**
	 * Checks if current locale is RTL.
	 *
	 * @since 3.0.0
	 * @return bool Whether locale is RTL.
	 */",
 "/**
 * Class that loads the calendar locale.
 *
 * @since 2.1.0
 */",
 "/**
 * Checks if current locale is RTL.
 *
 * @since 3.0.0
 * @return bool Whether locale is RTL.
 */",
 "/**
	 * Redirect back to the settings page that was submitted
	 */",
 "/**
	 * Spellchecks an array of words.
	 *
	 * @param {String} $lang Language code like sv or en.
	 * @param {Array} $words Array of words to spellcheck.
	 * @return {Array} Array of misspelled words.
	 */",
 "/**
	 * Returns suggestions of for a specific word.
	 *
	 * @param {String} $lang Language code like sv or en.
	 * @param {String} $word Specific word to get suggestions for.
	 * @return {Array} Array of suggestions for the specified word.
	 */",
 "/**
 * $Id: editor_plugin_src.js 201 2007-02-12 15:56:56Z spocke $
 *
 * @package MCManager.includes
 * @author Moxiecode
 * @copyright Copyright ? 2004-2007, Moxiecode Systems AB, All rights reserved.
 */",
 "/**
 * @since MU
 * @deprecated 3.0.0
 * @deprecated Use wp_generate_password()
 * @see wp_generate_password()
 */",
 "/**
 * Determine if user is a site admin.
 *
 * Plugins should use is_multisite() instead of checking if this function exists
 * to determine if multisite is enabled.
 *
 * This function must reside in a file included only if is_multisite() due to
 * legacy function_exists() checks to determine if multisite is enabled.
 *
 * @since MU
 * @deprecated 3.0.0
 * @deprecated Use is_super_admin()
 * @see is_super_admin()
 * @see is_multisite()
 *
 */",
 "/**
 * @since MU
 * @deprecated 3.0.0
 * @deprecated Use wp_die()
 * @see wp_die()
 */",
 "/**
 * @since MU
 * @deprecated 3.0.0
 * @deprecated Use get_user_by()
 * @see get_user_by()
 */",
 "/**
 * @since MU
 * @deprecated 3.0.0
 * @deprecated Use clean_post_cache()
 * @see clean_post_cache()
 */",
 "/**
 * @since MU
 * @deprecated 3.0.0
 * @deprecated Use is_main_site()
 * @see is_main_site()
 */",
 "/**
 * @since MU
 * @deprecated 3.0.0
 * @deprecated Use is_email()
 * @see is_email()
 */",
 "/**
 * @since MU
 * @deprecated 3.0.0
 * @deprecated No alternative available. For performance reasons this function is not recommended.
 */",
 "/**
 * @since MU
 * @deprecated 3.0.0
 * @deprecated No alternative available. For performance reasons this function is not recommended.
 */",
 "/**
 * Redirect a user based on $_GET or $_POST arguments.
 *
 * The function looks for redirect arguments in the following order:
 * 1) $_GET[\'ref\']
 * 2) $_POST[\'ref\']
 * 3) $_SERVER[\'HTTP_REFERER\']
 * 4) $_GET[\'redirect\']
 * 5) $_POST[\'redirect\']
 * 6) $url
 *
 * @since MU
 * @deprecated 3.3.0
 * @deprecated Use wp_redirect()
 * @uses wpmu_admin_redirect_add_updated_param()
 *
 * @param string $url
 */",
 "/**
 * Adds an \'updated=true\' argument to a URL.
 *
 * @since MU
 * @deprecated 3.3.0
 * @deprecated Use add_query_arg()
 *
 * @param string $url
 * @return string
 */",
 "/**
 * WordPress Filesystem Class for implementing SSH2.
 *
 * To use this class you must follow these steps for PHP 5.2.6+
 *
 * @contrib http://kevin.vanzonneveld.net/techblog/article/make_ssh_connections_with_php/ - Installation Notes
 *
 * Complie libssh2 (Note: Only 0.14 is officaly working with PHP 5.2.6+ right now, But many users have found the latest versions work)
 *
 * cd /usr/src
 * wget http://surfnet.dl.sourceforge.net/sourceforge/libssh2/libssh2-0.14.tar.gz
 * tar -zxvf libssh2-0.14.tar.gz
 * cd libssh2-0.14/
 * ./configure
 * make all install
 *
 * Note: Do not leave the directory yet!
 *
 * Enter: pecl install -f ssh2
 *
 * Copy the ssh.so file it creates to your PHP Module Directory.
 * Open up your PHP.INI file and look for where extensions are placed.
 * Add in your PHP.ini file: extension=ssh2.so
 *
 * Restart Apache!
 * Check phpinfo() streams to confirm that: ssh2.shell, ssh2.exec, ssh2.tunnel, ssh2.scp, ssh2.sftp  exist.
 *
 * Note: as of WordPress 2.8, This utilises the PHP5+ function \'stream_get_contents\'
 *
 * @since 2.7
 * @package WordPress
 * @subpackage Filesystem
 * @uses WP_Filesystem_Base Extends class
 */",
 "/**
     * Parses a unified or context diff.
     *
     * First param contains the whole diff and the second can be used to force
     * a specific diff type. If the second parameter is \'autodetect\', the
     * diff will be examined to find out which type of diff this is.
     *
     * @param string $diff  The diff content.
     * @param string $mode  The diff mode of the content in $diff. One of
     *                      \'context\', \'unified\', or \'autodetect\'.
     *
     * @return array  List of all diff operations.
     */",
 "/**
     * Parses an array containing the unified diff.
     *
     * @param array $diff  Array of lines.
     *
     * @return array  List of all diff operations.
     */",
 "/**
     * Parses an array containing the context diff.
     *
     * @param array $diff  Array of lines.
     *
     * @return array  List of all diff operations.
     */",
 "/**
 * Parses unified or context diffs output from eg. the diff utility.
 *
 * Example:
 * <code>
 * $patch = file_get_contents(\'example.patch\');
 * $diff = new Text_Diff(\'string\', array($patch));
 * $renderer = new Text_Diff_Renderer_inline();
 * echo $renderer->render($diff);
 * </code>
 *
 * Copyright 2005 ?rjan Persson <o@42mm.org>
 * Copyright 2005-2010 The Horde Project (http://www.horde.org/)
 *
 * See the enclosed file COPYING for license information (LGPL). If you did
 * not receive this file, see http://opensource.org/licenses/lgpl-license.php.
 *
 * @author  ?rjan Persson <o@42mm.org>
 * @package Text_Diff
 * @since   0.2.0
 */",
 "/**
     * Constructor.
     */",
 "/**
     * Get any renderer parameters.
     *
     * @return array  All parameters of this renderer object.
     */",
 "/**
     * Renders a diff.
     *
     * @param Text_Diff $diff  A Text_Diff object.
     *
     * @return string  The formatted output.
     */",
 "/**
 * A class to render Diffs in different formats.
 *
 * This class renders the diff in classic diff format. It is intended that
 * this class be customized via inheritance, to obtain fancier outputs.
 *
 * Copyright 2004-2010 The Horde Project (http://www.horde.org/)
 *
 * See the enclosed file COPYING for license information (LGPL). If you did
 * not receive this file, see http://opensource.org/licenses/lgpl-license.php.
 *
 * @package Text_Diff
 */",
 "/**
	 * Constructor - Sets up error message.
	 *
	 * If code parameter is empty then nothing will be done. It is possible to
	 * add multiple messages to the same code, but with other methods in the
	 * class.
	 *
	 * All parameters are optional, but if the code parameter is set, then the
	 * data parameter is optional.
	 *
	 * @since 2.1.0
	 *
	 * @param string|int $code Error code
	 * @param string $message Error message
	 * @param mixed $data Optional. Error data.
	 * @return WP_Error
	 */",
 "/**
	 * Retrieve all error codes.
	 *
	 * @since 2.1.0
	 * @access public
	 *
	 * @return array List of error codes, if available.
	 */",
 "/**
	 * Retrieve first error code available.
	 *
	 * @since 2.1.0
	 * @access public
	 *
	 * @return string|int Empty string, if no error codes.
	 */",
 "/**
	 * Retrieve all error messages or error messages matching code.
	 *
	 * @since 2.1.0
	 *
	 * @param string|int $code Optional. Retrieve messages matching code, if exists.
	 * @return array Error strings on success, or empty array on failure (if using code parameter).
	 */",
 "/**
	 * Get single error message.
	 *
	 * This will get the first message available for the code. If no code is
	 * given then the first code available will be used.
	 *
	 * @since 2.1.0
	 *
	 * @param string|int $code Optional. Error code to retrieve message.
	 * @return string
	 */",
 "/**
	 * Retrieve error data for error code.
	 *
	 * @since 2.1.0
	 *
	 * @param string|int $code Optional. Error code.
	 * @return mixed Null, if no errors.
	 */",
 "/**
	 * Append more error messages to list of error messages.
	 *
	 * @since 2.1.0
	 * @access public
	 *
	 * @param string|int $code Error code.
	 * @param string $message Error message.
	 * @param mixed $data Optional. Error data.
	 */",
 "/**
	 * Add data for error code.
	 *
	 * The error code can only contain one error data.
	 *
	 * @since 2.1.0
	 *
	 * @param mixed $data Error data.
	 * @param string|int $code Error code.
	 */",
 "/**
 * WordPress Error class.
 *
 * Container for checking for WordPress errors and error messages. Return
 * WP_Error and use {@link is_wp_error()} to check if this class is returned.
 * Many core WordPress functions pass this class in the event of an error and
 * if not handled properly will result in code errors.
 *
 * @package WordPress
 * @since 2.1.0
 */",
 "/**
 * Check whether variable is a WordPress Error.
 *
 * Looks at the object and if a WP_Error class. Does not check to see if the
 * parent is also WP_Error, so can\'t inherit WP_Error and still use this
 * function.
 *
 * @since 2.1.0
 *
 * @param mixed $thing Check if unknown variable is WordPress Error object.
 * @return bool True, if WP_Error. False, if not WP_Error.
 */",
 "/**
 * Sites List Table class.
 *
 * @package WordPress
 * @subpackage List_Table
 * @since 3.1.0
 * @access private
 */",
 "/**
 * The formatted output of a list of bookmarks.
 *
 * The $bookmarks array must contain bookmark objects and will be iterated over
 * to retrieve the bookmark to be used in the output.
 *
 * The output is formatted as HTML with no way to change that format. However,
 * what is between, before, and after can be changed. The link itself will be
 * HTML.
 *
 * This function is used internally by wp_list_bookmarks() and should not be
 * used by themes.
 *
 * The defaults for overwriting are:
 * \'show_updated\' - Default is 0 (integer). Will show the time of when the
 *		bookmark was last updated.
 * \'show_description\' - Default is 0 (integer). Whether to show the description
 *		of the bookmark.
 * \'show_images\' - Default is 1 (integer). Whether to show link image if
 *		available.
 * \'show_name\' - Default is 0 (integer). Whether to show link name if
 *		available.
 * \'before\' - Default is \'<li>\' (string). The html or text to prepend to each
 *		bookmarks.
 * \'after\' - Default is \'</li>\' (string). The html or text to append to each
 *		bookmarks.
 * \'link_before\' - Default is \'\' (string). The html or text to prepend to each
 *		bookmarks inside the <a> tag.
 * \'link_after\' - Default is \'\' (string). The html or text to append to each
 *		bookmarks inside the <a> tag.
 * \'between\' - Default is \'\n\' (string). The string for use in between the link,
 *		description, and image.
 * \'show_rating\' - Default is 0 (integer). Whether to show the link rating.
 *
 * @since 2.1.0
 * @access private
 * @usedby wp_list_bookmarks()
 *
 * @param array $bookmarks List of bookmarks to traverse
 * @param string|array $args Optional. Overwrite the defaults.
 * @return string Formatted output in HTML
 */",
 "/**
 * Retrieve or echo all of the bookmarks.
 *
 * List of default arguments are as follows:
 * \'orderby\' - Default is \'name\' (string). How to order the links by. String is
 *		based off of the bookmark scheme.
 * \'order\' - Default is \'ASC\' (string). Either \'ASC\' or \'DESC\'. Orders in either
 *		ascending or descending order.
 * \'limit\' - Default is -1 (integer) or show all. The amount of bookmarks to
 *		display.
 * \'category\' - Default is empty string (string). Include the links in what
 *		category ID(s).
 * \'category_name\' - Default is empty string (string). Get links by category
 *		name.
 * \'hide_invisible\' - Default is 1 (integer). Whether to show (default) or hide
 *		links marked as \'invisible\'.
 * \'show_updated\' - Default is 0 (integer). Will show the time of when the
 *		bookmark was last updated.
 * \'echo\' - Default is 1 (integer). Whether to echo (default) or return the
 *		formatted bookmarks.
 * \'categorize\' - Default is 1 (integer). Whether to show links listed by
 *		category (default) or show links in one column.
 * \'show_description\' - Default is 0 (integer). Whether to show the description
 *		of the bookmark.
 *
 * These options define how the Category name will appear before the category
 * links are displayed, if \'categorize\' is 1. If \'categorize\' is 0, then it will
 * display for only the \'title_li\' string and only if \'title_li\' is not empty.
 * \'title_li\' - Default is \'Bookmarks\' (translatable string). What to show
 *		before the links appear.
 * \'title_before\' - Default is \'<h2>\' (string). The HTML or text to show before
 *		the \'title_li\' string.
 * \'title_after\' - Default is \'</h2>\' (string). The HTML or text to show after
 *		the \'title_li\' string.
 * \'class\' - Default is \'linkcat\' (string). The CSS class to use for the
 *		\'title_li\'.
 *
 * \'category_before\' - Default is \'<li id=\"%id\" class=\"%class\">\'. String must
 *		contain \'%id\' and \'%class\' to get
 * the id of the category and the \'class\' argument. These are used for
 *		formatting in themes.
 * Argument will be displayed before the \'title_before\' argument.
 * \'category_after\' - Default is \'</li>\' (string). The HTML or text that will
 *		appear after the list of links.
 *
 * These are only used if \'categorize\' is set to 1 or true.
 * \'category_orderby\' - Default is \'name\'. How to order the bookmark category
 *		based on term scheme.
 * \'category_order\' - Default is \'ASC\'. Set the order by either ASC (ascending)
 *		or DESC (descending).
 *
 * @see _walk_bookmarks() For other arguments that can be set in this function
 *		and passed to _walk_bookmarks().
 * @see get_bookmarks() For other arguments that can be set in this function and
 *		passed to get_bookmarks().
 * @link http://codex.wordpress.org/Template_Tags/wp_list_bookmarks
 *
 * @since 2.1.0
 * @uses _list_bookmarks() Used to iterate over all of the bookmarks and return
 *		the html
 * @uses get_terms() Gets all of the categories that are for links.
 *
 * @param string|array $args Optional. Overwrite the defaults of the function
 * @return string|null Will only return if echo option is set to not echo.
 *		Default is not return anything.
 */",
 "/**
 * Portable PHP password hashing framework.
 *
 * @package phpass
 * @version 0.3 / WordPress
 * @link http://www.openwall.com/phpass/
 * @since 2.5
 */",
 "/**
 * WordPress Query object
 * @global object $wp_the_query
 * @since 2.0.0
 */",
 "/**
 * Holds the reference to @see $wp_the_query
 * Use this global for WordPress queries
 * @global object $wp_query
 * @since 1.5.0
 */",
 "/**
 * Holds the WordPress Rewrite object for creating pretty URLs
 * @global object $wp_rewrite
 * @since 1.5.0
 */",
 "/**
 * WordPress Object
 * @global object $wp
 * @since 2.0.0
 */",
 "/**
 * WordPress Widget Factory Object
 * @global object $wp_widget_factory
 * @since 2.8.0
 */",
 "/**
 * WordPress Locale object for loading locale domain date and various strings.
 * @global object $wp_locale
 * @since 2.1.0
 */",
 "/**
 * WordPress Image Editor
 *
 * @package WordPress
 * @subpackage Administration
 */",
 "/** The descriptions for theme files. */",
 "/**
 * Get the description for standard WordPress theme files and other various standard
 * WordPress files
 *
 * @since 1.5.0
 *
 * @uses _cleanup_header_comment
 * @uses $wp_file_descriptions
 * @param string $file Filesystem path or filename
 * @return string Description of file from $wp_file_descriptions or basename of $file if description doesn\'t exist
 */",
 "/**
 * Get the absolute filesystem path to the root of the WordPress installation
 *
 * @since 1.5.0
 *
 * @uses get_option
 * @return string Full filesystem path to the root of the WordPress installation
 */",
 "/**
 * Get the real file system path to a file to edit within the admin
 *
 * If the $file is index.php or .htaccess this function will assume it is relative
 * to the install root, otherwise it is assumed the file is relative to the wp-content
 * directory
 *
 * @since 1.5.0
 *
 * @uses get_home_path
 * @uses WP_CONTENT_DIR full filesystem path to the wp-content directory
 * @param string $file filesystem path relative to the WordPress install directory or to the wp-content directory
 * @return string full file system path to edit
 */",
 "/**
 * Returns a listing of all files in the specified folder and all subdirectories up to 100 levels deep.
 * The depth of the recursiveness can be controlled by the $levels param.
 *
 * @since 2.6.0
 *
 * @param string $folder Full path to folder
 * @param int $levels (optional) Levels of folders to follow, Default: 100 (PHP Loop limit).
 * @return bool|array False on failure, Else array of files
 */",
 "/**
 * Returns a filename of a Temporary unique file.
 * Please note that the calling function must unlink() this itself.
 *
 * The filename is based off the passed parameter or defaults to the current unix timestamp,
 * while the directory can either be passed as well, or by leaving it blank, default to a writable temporary directory.
 *
 * @since 2.6.0
 *
 * @param string $filename (optional) Filename to base the Unique file off
 * @param string $dir (optional) Directory to store the file in
 * @return string a writable filename
 */",
 "/**
 * Make sure that the file that was requested to edit, is allowed to be edited
 *
 * Function will die if if you are not allowed to edit the file
 *
 * @since 1.5.0
 *
 * @uses wp_die
 * @uses validate_file
 * @param string $file file the users is attempting to edit
 * @param array $allowed_files Array of allowed files to edit, $file must match an entry exactly
 * @return null
 */",
 "/**
 * Handle PHP uploads in WordPress, sanitizing file names, checking extensions for mime type,
 * and moving the file to the appropriate directory within the uploads directory.
 *
 * @since 2.0
 *
 * @uses wp_handle_upload_error
 * @uses apply_filters
 * @uses is_multisite
 * @uses wp_check_filetype_and_ext
 * @uses current_user_can
 * @uses wp_upload_dir
 * @uses wp_unique_filename
 * @uses delete_transient
 * @param array $file Reference to a single element of $_FILES. Call the function once for each uploaded file.
 * @param array $overrides Optional. An associative array of names=>values to override default variables with extract( $overrides, EXTR_OVERWRITE ).
 * @return array On success, returns an associative array of file attributes. On failure, returns $overrides[\'upload_error_handler\'](&$file, $message ) or array( \'error\'=>$message ).
 */",
 "/**
 * Handle sideloads, which is the process of retrieving a media item from another server instead of
 * a traditional media upload. This process involves sanitizing the filename, checking extensions
 * for mime type, and moving the file to the appropriate directory within the uploads directory.
 *
 * @since 2.6.0
 *
 * @uses wp_handle_upload_error
 * @uses apply_filters
 * @uses wp_check_filetype_and_ext
 * @uses current_user_can
 * @uses wp_upload_dir
 * @uses wp_unique_filename
 * @param array $file an array similar to that of a PHP $_FILES POST array
 * @param array $overrides Optional. An associative array of names=>values to override default variables with extract( $overrides, EXTR_OVERWRITE ).
 * @return array On success, returns an associative array of file attributes. On failure, returns $overrides[\'upload_error_handler\'](&$file, $message ) or array( \'error\'=>$message ).
 */",
 "/**
 * Downloads a url to a local temporary file using the WordPress HTTP Class.
 * Please note, That the calling function must unlink() the file.
 *
 * @since 2.5.0
 *
 * @param string $url the URL of the file to download
 * @param int $timeout The timeout for the request to download the file default 300 seconds
 * @return mixed WP_Error on failure, string Filename on success.
 */",
 "/**
 * Unzips a specified ZIP file to a location on the Filesystem via the WordPress Filesystem Abstraction.
 * Assumes that WP_Filesystem() has already been called and set up. Does not extract a root-level __MACOSX directory, if present.
 *
 * Attempts to increase the PHP Memory limit to 256M before uncompressing,
 * However, The most memory required shouldn\'t be much larger than the Archive itself.
 *
 * @since 2.5.0
 *
 * @param string $file Full path and filename of zip archive
 * @param string $to Full path on the filesystem to extract archive to
 * @return mixed WP_Error on failure, True on success
 */",
 "/**
 * This function should not be called directly, use unzip_file instead. Attempts to unzip an archive using the ZipArchive class.
 * Assumes that WP_Filesystem() has already been called and set up.
 *
 * @since 3.0.0
 * @see unzip_file
 * @access private
 *
 * @param string $file Full path and filename of zip archive
 * @param string $to Full path on the filesystem to extract archive to
 * @param array $needed_dirs A partial list of required folders needed to be created.
 * @return mixed WP_Error on failure, True on success
 */",
 "/**
 * This function should not be called directly, use unzip_file instead. Attempts to unzip an archive using the PclZip library.
 * Assumes that WP_Filesystem() has already been called and set up.
 *
 * @since 3.0.0
 * @see unzip_file
 * @access private
 *
 * @param string $file Full path and filename of zip archive
 * @param string $to Full path on the filesystem to extract archive to
 * @param array $needed_dirs A partial list of required folders needed to be created.
 * @return mixed WP_Error on failure, True on success
 */",
 "/**
 * Copies a directory from one location to another via the WordPress Filesystem Abstraction.
 * Assumes that WP_Filesystem() has already been called and setup.
 *
 * @since 2.5.0
 *
 * @param string $from source directory
 * @param string $to destination directory
 * @param array $skip_list a list of files/folders to skip copying
 * @return mixed WP_Error on failure, True on success.
 */",
 "/**
 * Initialises and connects the WordPress Filesystem Abstraction classes.
 * This function will include the chosen transport and attempt connecting.
 *
 * Plugins may add extra transports, And force WordPress to use them by returning the filename via the \'filesystem_method_file\' filter.
 *
 * @since 2.5.0
 *
 * @param array $args (optional) Connection args, These are passed directly to the WP_Filesystem_*() classes.
 * @param string $context (optional) Context for get_filesystem_method(), See function declaration for more information.
 * @return boolean false on failure, true on success
 */",
 "/**
 * Determines which Filesystem Method to use.
 * The priority of the Transports are: Direct, SSH2, FTP PHP Extension, FTP Sockets (Via Sockets class, or fsockopen())
 *
 * Note that the return value of this function can be overridden in 2 ways
 *  - By defining FS_METHOD in your <code>wp-config.php</code> file
 *  - By using the filesystem_method filter
 * Valid values for these are: \'direct\', \'ssh\', \'ftpext\' or \'ftpsockets\'
 * Plugins may also define a custom transport handler, See the WP_Filesystem function for more information.
 *
 * @since 2.5.0
 *
 * @param array $args Connection details.
 * @param string $context Full path to the directory that is tested for being writable.
 * @return string The transport to use, see description for valid return values.
 */",
 "/**
 * Displays a form to the user to request for their FTP/SSH details in order to connect to the filesystem.
 * All chosen/entered details are saved, Excluding the Password.
 *
 * Hostnames may be in the form of hostname:portnumber (eg: wordpress.org:2467) to specify an alternate FTP/SSH port.
 *
 * Plugins may override this form by returning true|false via the <code>request_filesystem_credentials</code> filter.
 *
 * @since 2.5.0
 *
 * @param string $form_post the URL to post the form to
 * @param string $type the chosen Filesystem method in use
 * @param boolean $error if the current request has failed to connect
 * @param string $context The directory which is needed access to, The write-test will be performed on this directory by get_filesystem_method()
 * @param string $extra_fields Extra POST fields which should be checked for to be included in the post.
 * @return boolean False on failure. True on success.
 */",
 "/**
 * @ignore
 */",
 "/**
 * @ignore
 */",
 "/**
 * @ignore
 */",
 "/**
 * @ignore
 */",
 "/**
 * @ignore
 */",
 "/**
 * @ignore
 */",
 "/**
 * @ignore
 */",
 "/**
 * @ignore
 */",
 "/**
 * @ignore
 */",
 "/**
 * @ignore
 */",
 "/**
 * @ignore
 */",
 "/**
 * @ignore
 */",
 "/**
 * @ignore
 */",
 "/**
 * @ignore
 */",
 "/**
 * @ignore
 */",
 "/**
 * @ignore
 */",
 "/**
 * @ignore
 */",
 "/**
 * mail_fetch/setup.php
 *
 * Copyright (c) 1999-2011 CDI (cdi@thewebmasters.net) All Rights Reserved
 * Modified by Philippe Mingo 2001-2009 mingo@rotedic.com
 * An RFC 1939 compliant wrapper class for the POP3 protocol.
 *
 * Licensed under the GNU GPL. For full terms see the file COPYING.
 *
 * POP3 class
 *
 * @copyright 1999-2011 The SquirrelMail Project Team
 * @license http://opensource.org/licenses/gpl-license.php GNU Public License
 * @package plugins
 * @subpackage mail_fetch
 */",
 "/**
 * Socket Based FTP implementation
 *
 * @package PemFTP
 * @subpackage Socket
 * @since 2.5
 *
 * @version 1.0
 * @copyright Alexey Dotsenko
 * @author Alexey Dotsenko
 * @link http://www.phpclasses.org/browse/package/1743.html Site
 * @license LGPL License http://www.opensource.org/licenses/lgpl-license.html
 */",
 "/**
 * Checks whether a comment passes internal checks to be allowed to add.
 *
 * If comment moderation is set in the administration, then all comments,
 * regardless of their type and whitelist will be set to false. If the number of
 * links exceeds the amount in the administration, then the check fails. If any
 * of the parameter contents match the blacklist of words, then the check fails.
 *
 * If the number of links exceeds the amount in the administration, then the
 * check fails. If any of the parameter contents match the blacklist of words,
 * then the check fails.
 *
 * If the comment author was approved before, then the comment is
 * automatically whitelisted.
 *
 * If none of the checks fail, then the failback is to set the check to pass
 * (return true).
 *
 * @since 1.2.0
 * @uses $wpdb
 *
 * @param string $author Comment Author\'s name
 * @param string $email Comment Author\'s email
 * @param string $url Comment Author\'s URL
 * @param string $comment Comment contents
 * @param string $user_ip Comment Author\'s IP address
 * @param string $user_agent Comment Author\'s User Agent
 * @param string $comment_type Comment type, either user submitted comment,
 *		trackback, or pingback
 * @return bool Whether the checks passed (true) and the comments should be
 *		displayed or set to moderated
 */",
 "/**
 * Retrieve the approved comments for post $post_id.
 *
 * @since 2.0.0
 * @uses $wpdb
 *
 * @param int $post_id The ID of the post
 * @return array $comments The approved comments
 */",
 "/**
 * Retrieves comment data given a comment ID or comment object.
 *
 * If an object is passed then the comment data will be cached and then returned
 * after being passed through a filter. If the comment is empty, then the global
 * comment variable will be used, if it is set.
 *
 * If the comment is empty, then the global comment variable will be used, if it
 * is set.
 *
 * @since 2.0.0
 * @uses $wpdb
 *
 * @param object|string|int $comment Comment to retrieve.
 * @param string $output Optional. OBJECT or ARRAY_A or ARRAY_N constants.
 * @return object|array|null Depends on $output value.
 */",
 "/**
 * Retrieve a list of comments.
 *
 * The comment list can be for the blog as a whole or for an individual post.
 *
 * The list of comment arguments are \'status\', \'orderby\', \'comment_date_gmt\',
 * \'order\', \'number\', \'offset\', and \'post_id\'.
 *
 * @since 2.7.0
 * @uses $wpdb
 *
 * @param mixed $args Optional. Array or string of options to override defaults.
 * @return array List of comments.
 */",
 "/**
	 * Execute the query
	 *
	 * @since 3.1.0
	 *
	 * @param string|array $query_vars
	 * @return int|array
	 */",
 "/**
 * WordPress Comment Query class.
 *
 * @since 3.1.0
 */",
 "/**
 * Retrieve all of the WordPress supported comment statuses.
 *
 * Comments have a limited set of valid status values, this provides the comment
 * status values and descriptions.
 *
 * @package WordPress
 * @subpackage Post
 * @since 2.7.0
 *
 * @return array List of comment statuses.
 */",
 "/**
 * The date the last comment was modified.
 *
 * @since 1.5.0
 * @uses $wpdb
 * @global array $cache_lastcommentmodified
 *
 * @param string $timezone Which timezone to use in reference to \'gmt\', \'blog\',
 *		or \'server\' locations.
 * @return string Last comment modified date.
 */",
 "/**
 * The amount of comments in a post or total comments.
 *
 * A lot like {@link wp_count_comments()}, in that they both return comment
 * stats (albeit with different types). The {@link wp_count_comments()} actual
 * caches, but this function does not.
 *
 * @since 2.0.0
 * @uses $wpdb
 *
 * @param int $post_id Optional. Comment amount in post if > 0, else total comments blog wide.
 * @return array The amount of spam, approved, awaiting moderation, and total comments.
 */",
 "/**
 * Add meta data field to a comment.
 *
 * @since 2.9.0
 * @uses add_metadata
 * @link http://codex.wordpress.org/Function_Reference/add_comment_meta
 *
 * @param int $comment_id Comment ID.
 * @param string $meta_key Metadata name.
 * @param mixed $meta_value Metadata value.
 * @param bool $unique Optional, default is false. Whether the same key should not be added.
 * @return bool False for failure. True for success.
 */",
 "/**
 * Remove metadata matching criteria from a comment.
 *
 * You can match based on the key, or key and value. Removing based on key and
 * value, will keep from removing duplicate metadata with the same key. It also
 * allows removing all metadata matching key, if needed.
 *
 * @since 2.9.0
 * @uses delete_metadata
 * @link http://codex.wordpress.org/Function_Reference/delete_comment_meta
 *
 * @param int $comment_id comment ID
 * @param string $meta_key Metadata name.
 * @param mixed $meta_value Optional. Metadata value.
 * @return bool False for failure. True for success.
 */",
 "/**
 * Retrieve comment meta field for a comment.
 *
 * @since 2.9.0
 * @uses get_metadata
 * @link http://codex.wordpress.org/Function_Reference/get_comment_meta
 *
 * @param int $comment_id Comment ID.
 * @param string $key Optional. The meta key to retrieve. By default, returns data for all keys.
 * @param bool $single Whether to return a single value.
 * @return mixed Will be an array if $single is false. Will be value of meta data field if $single
 *  is true.
 */",
 "/**
 * Update comment meta field based on comment ID.
 *
 * Use the $prev_value parameter to differentiate between meta fields with the
 * same key and comment ID.
 *
 * If the meta field for the comment does not exist, it will be added.
 *
 * @since 2.9.0
 * @uses update_metadata
 * @link http://codex.wordpress.org/Function_Reference/update_comment_meta
 *
 * @param int $comment_id Comment ID.
 * @param string $meta_key Metadata key.
 * @param mixed $meta_value Metadata value.
 * @param mixed $prev_value Optional. Previous value to check before removing.
 * @return bool False on failure, true if success.
 */",
 "/**
 * Sets the cookies used to store an unauthenticated commentator\'s identity. Typically used
 * to recall previous comments by this commentator that are still held in moderation.
 *
 * @param object $comment Comment object.
 * @param object $user Comment author\'s object.
 *
 * @since 3.4.0
 */",
 "/**
 * Sanitizes the cookies sent to the user already.
 *
 * Will only do anything if the cookies have already been created for the user.
 * Mostly used after cookies had been sent to use elsewhere.
 *
 * @since 2.0.4
 */",
 "/**
 * Validates whether this comment is allowed to be made.
 *
 * @since 2.0.0
 * @uses $wpdb
 * @uses apply_filters() Calls \'pre_comment_approved\' hook on the type of comment
 * @uses apply_filters() Calls \'comment_duplicate_trigger\' hook on commentdata.
 * @uses do_action() Calls \'check_comment_flood\' hook on $comment_author_IP, $comment_author_email, and $comment_date_gmt
 *
 * @param array $commentdata Contains information on the comment
 * @return mixed Signifies the approval status (0|1|\'spam\')
 */",
 "/**
 * Check whether comment flooding is occurring.
 *
 * Won\'t run, if current user can manage options, so to not block
 * administrators.
 *
 * @since 2.3.0
 * @uses $wpdb
 * @uses apply_filters() Calls \'comment_flood_filter\' filter with first
 *		parameter false, last comment timestamp, new comment timestamp.
 * @uses do_action() Calls \'comment_flood_trigger\' action with parameters with
 *		last comment timestamp and new comment timestamp.
 *
 * @param string $ip Comment IP.
 * @param string $email Comment author email address.
 * @param string $date MySQL time string.
 */",
 "/**
 * Separates an array of comments into an array keyed by comment_type.
 *
 * @since 2.7.0
 *
 * @param array $comments Array of comments
 * @return array Array of comments keyed by comment_type.
 */",
 "/**
 * Calculate the total number of comment pages.
 *
 * @since 2.7.0
 * @uses get_query_var() Used to fill in the default for $per_page parameter.
 * @uses get_option() Used to fill in defaults for parameters.
 * @uses Walker_Comment
 *
 * @param array $comments Optional array of comment objects. Defaults to $wp_query->comments
 * @param int $per_page Optional comments per page.
 * @param boolean $threaded Optional control over flat or threaded comments.
 * @return int Number of comment pages.
 */",
 "/**
 * Calculate what page number a comment will appear on for comment paging.
 *
 * @since 2.7.0
 * @uses get_comment() Gets the full comment of the $comment_ID parameter.
 * @uses get_option() Get various settings to control function and defaults.
 * @uses get_page_of_comment() Used to loop up to top level comment.
 *
 * @param int $comment_ID Comment ID.
 * @param array $args Optional args.
 * @return int|null Comment page number or null on error.
 */",
 "/**
 * Does comment contain blacklisted characters or words.
 *
 * @since 1.5.0
 * @uses do_action() Calls \'wp_blacklist_check\' hook for all parameters.
 *
 * @param string $author The author of the comment
 * @param string $email The email of the comment
 * @param string $url The url used in the comment
 * @param string $comment The comment content
 * @param string $user_ip The comment author IP address
 * @param string $user_agent The author\'s browser user agent
 * @return bool True if comment contains blacklisted content, false if comment does not
 */",
 "/**
 * Retrieve total comments for blog or single post.
 *
 * The properties of the returned object contain the \'moderated\', \'approved\',
 * and spam comments for either the entire blog or single post. Those properties
 * contain the amount of comments that match the status. The \'total_comments\'
 * property contains the integer of total comments.
 *
 * The comment stats are cached and then retrieved, if they already exist in the
 * cache.
 *
 * @since 2.5.0
 *
 * @param int $post_id Optional. Post ID.
 * @return object Comment stats.
 */",
 "/**
 * Trashes or deletes a comment.
 *
 * The comment is moved to trash instead of permanently deleted unless trash is
 * disabled, item is already in the trash, or $force_delete is true.
 *
 * The post comment count will be updated if the comment was approved and has a
 * post ID available.
 *
 * @since 2.0.0
 * @uses $wpdb
 * @uses do_action() Calls \'delete_comment\' hook on comment ID
 * @uses do_action() Calls \'deleted_comment\' hook on comment ID after deletion, on success
 * @uses do_action() Calls \'wp_set_comment_status\' hook on comment ID with \'delete\' set for the second parameter
 * @uses wp_transition_comment_status() Passes new and old comment status along with $comment object
 *
 * @param int $comment_id Comment ID
 * @param bool $force_delete Whether to bypass trash and force deletion. Default is false.
 * @return bool False if delete comment query failure, true on success.
 */",
 "/**
 * Moves a comment to the Trash
 *
 * If trash is disabled, comment is permanently deleted.
 *
 * @since 2.9.0
 * @uses do_action() on \'trash_comment\' before trashing
 * @uses do_action() on \'trashed_comment\' after trashing
 * @uses wp_delete_comment() if trash is disabled
 *
 * @param int $comment_id Comment ID.
 * @return mixed False on failure
 */",
 "/**
 * Removes a comment from the Trash
 *
 * @since 2.9.0
 * @uses do_action() on \'untrash_comment\' before untrashing
 * @uses do_action() on \'untrashed_comment\' after untrashing
 *
 * @param int $comment_id Comment ID.
 * @return mixed False on failure
 */",
 "/**
 * Marks a comment as Spam
 *
 * @since 2.9.0
 * @uses do_action() on \'spam_comment\' before spamming
 * @uses do_action() on \'spammed_comment\' after spamming
 *
 * @param int $comment_id Comment ID.
 * @return mixed False on failure
 */",
 "/**
 * Removes a comment from the Spam
 *
 * @since 2.9.0
 * @uses do_action() on \'unspam_comment\' before unspamming
 * @uses do_action() on \'unspammed_comment\' after unspamming
 *
 * @param int $comment_id Comment ID.
 * @return mixed False on failure
 */",
 "/**
 * The status of a comment by ID.
 *
 * @since 1.0.0
 *
 * @param int $comment_id Comment ID
 * @return string|bool Status might be \'trash\', \'approved\', \'unapproved\', \'spam\'. False on failure.
 */",
 "/**
 * Call hooks for when a comment status transition occurs.
 *
 * Calls hooks for comment status transitions. If the new comment status is not the same
 * as the previous comment status, then two hooks will be ran, the first is
 * \'transition_comment_status\' with new status, old status, and comment data. The
 * next action called is \'comment_OLDSTATUS_to_NEWSTATUS\' the NEWSTATUS is the
 * $new_status parameter and the OLDSTATUS is $old_status parameter; it has the
 * comment data.
 *
 * The final action will run whether or not the comment statuses are the same. The
 * action is named \'comment_NEWSTATUS_COMMENTTYPE\', NEWSTATUS is from the $new_status
 * parameter and COMMENTTYPE is comment_type comment data.
 *
 * @since 2.7.0
 *
 * @param string $new_status New comment status.
 * @param string $old_status Previous comment status.
 * @param object $comment Comment data.
 */",
 "/**
 * Get current commenter\'s name, email, and URL.
 *
 * Expects cookies content to already be sanitized. User of this function might
 * wish to recheck the returned array for validity.
 *
 * @see sanitize_comment_cookies() Use to sanitize cookies
 *
 * @since 2.0.4
 *
 * @return array Comment author, email, url respectively.
 */",
 "/**
 * Inserts a comment to the database.
 *
 * The available comment data key names are \'comment_author_IP\', \'comment_date\',
 * \'comment_date_gmt\', \'comment_parent\', \'comment_approved\', and \'user_id\'.
 *
 * @since 2.0.0
 * @uses $wpdb
 *
 * @param array $commentdata Contains information on the comment.
 * @return int The new comment\'s ID.
 */",
 "/**
 * Filters and sanitizes comment data.
 *
 * Sets the comment data \'filtered\' field to true when finished. This can be
 * checked as to whether the comment should be filtered and to keep from
 * filtering the same comment more than once.
 *
 * @since 2.0.0
 * @uses apply_filters() Calls \'pre_user_id\' hook on comment author\'s user ID
 * @uses apply_filters() Calls \'pre_comment_user_agent\' hook on comment author\'s user agent
 * @uses apply_filters() Calls \'pre_comment_author_name\' hook on comment author\'s name
 * @uses apply_filters() Calls \'pre_comment_content\' hook on the comment\'s content
 * @uses apply_filters() Calls \'pre_comment_user_ip\' hook on comment author\'s IP
 * @uses apply_filters() Calls \'pre_comment_author_url\' hook on comment author\'s URL
 * @uses apply_filters() Calls \'pre_comment_author_email\' hook on comment author\'s email address
 *
 * @param array $commentdata Contains information on the comment.
 * @return array Parsed comment information.
 */",
 "/**
 * Whether comment should be blocked because of comment flood.
 *
 * @since 2.1.0
 *
 * @param bool $block Whether plugin has already blocked comment.
 * @param int $time_lastcomment Timestamp for last comment.
 * @param int $time_newcomment Timestamp for new comment.
 * @return bool Whether comment should be blocked.
 */",
 "/**
 * Adds a new comment to the database.
 *
 * Filters new comment to ensure that the fields are sanitized and valid before
 * inserting comment into database. Calls \'comment_post\' action with comment ID
 * and whether comment is approved by WordPress. Also has \'preprocess_comment\'
 * filter for processing the comment data before the function handles it.
 *
 * We use REMOTE_ADDR here directly. If you are behind a proxy, you should ensure
 * that it is properly set, such as in wp-config.php, for your environment.
 * See {@link http://core.trac.wordpress.org/ticket/9235}
 *
 * @since 1.5.0
 * @uses apply_filters() Calls \'preprocess_comment\' hook on $commentdata parameter array before processing
 * @uses do_action() Calls \'comment_post\' hook on $comment_ID returned from adding the comment and if the comment was approved.
 * @uses wp_filter_comment() Used to filter comment before adding comment.
 * @uses wp_allow_comment() checks to see if comment is approved.
 * @uses wp_insert_comment() Does the actual comment insertion to the database.
 *
 * @param array $commentdata Contains information on the comment.
 * @return int The ID of the comment after adding.
 */",
 "/**
 * Sets the status of a comment.
 *
 * The \'wp_set_comment_status\' action is called after the comment is handled.
 * If the comment status is not in the list, then false is returned.
 *
 * @since 1.0.0
 * @uses wp_transition_comment_status() Passes new and old comment status along with $comment object
 *
 * @param int $comment_id Comment ID.
 * @param string $comment_status New comment status, either \'hold\', \'approve\', \'spam\', or \'trash\'.
 * @param bool $wp_error Whether to return a WP_Error object if there is a failure. Default is false.
 * @return bool False on failure or deletion and true on success.
 */",
 "/**
 * Updates an existing comment in the database.
 *
 * Filters the comment and makes sure certain fields are valid before updating.
 *
 * @since 2.0.0
 * @uses $wpdb
 * @uses wp_transition_comment_status() Passes new and old comment status along with $comment object
 *
 * @param array $commentarr Contains information on the comment.
 * @return int Comment was updated if value is 1, or was not updated if value is 0.
 */",
 "/**
 * Whether to defer comment counting.
 *
 * When setting $defer to true, all post comment counts will not be updated
 * until $defer is set to false. When $defer is set to false, then all
 * previously deferred updated post comment counts will then be automatically
 * updated without having to call wp_update_comment_count() after.
 *
 * @since 2.5.0
 * @staticvar bool $_defer
 *
 * @param bool $defer
 * @return unknown
 */",
 "/**
 * Updates the comment count for post(s).
 *
 * When $do_deferred is false (is by default) and the comments have been set to
 * be deferred, the post_id will be added to a queue, which will be updated at a
 * later date and only updated once per post ID.
 *
 * If the comments have not be set up to be deferred, then the post will be
 * updated. When $do_deferred is set to true, then all previous deferred post
 * IDs will be updated along with the current $post_id.
 *
 * @since 2.1.0
 * @see wp_update_comment_count_now() For what could cause a false return value
 *
 * @param int $post_id Post ID
 * @param bool $do_deferred Whether to process previously deferred post comment counts
 * @return bool True on success, false on failure
 */",
 "/**
 * Updates the comment count for the post.
 *
 * @since 2.5.0
 * @uses $wpdb
 * @uses do_action() Calls \'wp_update_comment_count\' hook on $post_id, $new, and $old
 * @uses do_action() Calls \'edit_posts\' hook on $post_id and $post
 *
 * @param int $post_id Post ID
 * @return bool False on \'0\' $post_id or if post with ID does not exist. True on success.
 */",
 "/** @todo Should use Filter Extension or custom preg_match instead. */",
 "/**
 * Finds a pingback server URI based on the given URL.
 *
 * Checks the HTML for the rel=\"pingback\" link and x-pingback headers. It does
 * a check for the x-pingback headers first and returns that, if available. The
 * check for the rel=\"pingback\" has more overhead than just the header.
 *
 * @since 1.5.0
 *
 * @param string $url URL to ping.
 * @param int $deprecated Not Used.
 * @return bool|string False on failure, string containing URI on success.
 */",
 "/**
 * Perform all pingbacks, enclosures, trackbacks, and send to pingback services.
 *
 * @since 2.1.0
 * @uses $wpdb
 */",
 "/**
 * Perform trackbacks.
 *
 * @since 1.5.0
 * @uses $wpdb
 *
 * @param int $post_id Post ID to do trackbacks on.
 */",
 "/**
 * Sends pings to all of the ping site services.
 *
 * @since 1.2.0
 *
 * @param int $post_id Post ID. Not actually used.
 * @return int Same as Post ID from parameter
 */",
 "/**
 * Pings back the links found in a post.
 *
 * @since 0.71
 * @uses $wp_version
 * @uses IXR_Client
 *
 * @param string $content Post content to check for links.
 * @param int $post_ID Post ID.
 */",
 "/**
 * Check whether blog is public before returning sites.
 *
 * @since 2.1.0
 *
 * @param mixed $sites Will return if blog is public, will not return if not public.
 * @return mixed Empty string if blog is not public, returns $sites, if site is public.
 */",
 "/**
 * Send a Trackback.
 *
 * Updates database when sending trackback to prevent duplicates.
 *
 * @since 0.71
 * @uses $wpdb
 *
 * @param string $trackback_url URL to send trackbacks.
 * @param string $title Title of post.
 * @param string $excerpt Excerpt of post.
 * @param int $ID Post ID.
 * @return mixed Database query from update.
 */",
 "/**
 * Send a pingback.
 *
 * @since 1.2.0
 * @uses $wp_version
 * @uses IXR_Client
 *
 * @param string $server Host of blog to connect to.
 * @param string $path Path to send the ping.
 */",
 "/**
 * Removes comment ID from the comment cache.
 *
 * @since 2.3.0
 * @package WordPress
 * @subpackage Cache
 *
 * @param int|array $ids Comment ID or array of comment IDs to remove from cache
 */",
 "/**
 * Updates the comment cache of given comments.
 *
 * Will add the comments in $comments to the cache. If comment ID already exists
 * in the comment cache then it will not be updated. The comment is added to the
 * cache using the comment group with the key using the ID of the comments.
 *
 * @since 2.3.0
 * @package WordPress
 * @subpackage Cache
 *
 * @param array $comments Array of comment row objects
 */",
 "/**
 * Close comments on old posts on the fly, without any extra DB queries. Hooked to the_posts.
 *
 * @access private
 * @since 2.7.0
 *
 * @param object $posts Post data object.
 * @param object $query Query object.
 * @return object
 */",
 "/**
 * Close comments on an old post. Hooked to comments_open and pings_open.
 *
 * @access private
 * @since 2.7.0
 *
 * @param bool $open Comments open or closed
 * @param int $post_id Post ID
 * @return bool $open
 */",
 "/**
 * Returns an request value by name without magic quoting.
 *
 * @param String $name Name of parameter to get.
 * @param String $default_value Default value to return if value not found.
 * @return String request value by name without magic quoting or default value.
 */",
 "/**
 * The WordPress version string
 *
 * @global string $wp_version
 */",
 "/**
 * Holds the WordPress DB revision, increments when changes are made to the WordPress DB schema.
 *
 * @global int $wp_db_version
 */",
 "/**
 * Holds the TinyMCE version
 *
 * @global string $tinymce_version
 */",
 "/**
 * Holds the cache manifest version
 *
 * @global string $manifest_version
 */",
 "/**
 * Holds the required PHP version
 *
 * @global string $required_php_version
 */",
 "/**
 * Holds the required MySQL version
 *
 * @global string $required_mysql_version
 */",
 "/**
 * Build Magpie object based on RSS from URL.
 *
 * @since 1.5.0
 * @package External
 * @subpackage MagpieRSS
 *
 * @param string $url URL to retrieve feed
 * @return bool|MagpieRSS false on failure or MagpieRSS object on success.
 */",
 "/**
 * Retrieve URL headers and content using WP HTTP Request API.
 *
 * @since 1.5.0
 * @package External
 * @subpackage MagpieRSS
 *
 * @param string $url URL to retrieve
 * @param array $headers Optional. Headers to send to the URL.
 * @return Snoopy style response
 */",
 "/**
 * Retrieve
 *
 * @since 1.5.0
 * @package External
 * @subpackage MagpieRSS
 *
 * @param unknown_type $resp
 * @return unknown
 */",
 "/**
 * Set up constants with default values, unless user overrides.
 *
 * @since 1.5.0
 * @package External
 * @subpackage MagpieRSS
 */",
 "/**
 * Display all RSS items in a HTML ordered list.
 *
 * @since 1.5.0
 * @package External
 * @subpackage MagpieRSS
 *
 * @param string $url URL of feed to display. Will not auto sense feed URL.
 * @param int $num_items Optional. Number of items to display, default is all.
 */",
 "/**
 * Display RSS items in HTML list items.
 *
 * You have to specify which HTML list you want, either ordered or unordered
 * before using the function. You also have to specify how many items you wish
 * to display. You can\'t display all of them like you can with wp_rss()
 * function.
 *
 * @since 1.5.0
 * @package External
 * @subpackage MagpieRSS
 *
 * @param string $url URL of feed to display. Will not auto sense feed URL.
 * @param int $num_items Optional. Number of items to display, default is all.
 * @return bool False on failure.
 */",
 "/**
 * Links Manager List Table class.
 *
 * @package WordPress
 * @subpackage List_Table
 * @since 3.1.0
 * @access private
 */",
 "/**
 * Turn register globals off.
 *
 * @access private
 * @since 2.1.0
 * @return null Will return null if register_globals PHP directive was disabled
 */",
 "/**
 * Fix $_SERVER variables for various setups.
 *
 * @access private
 * @since 3.0.0
 */",
 "/**
 * Check for the required PHP version, and the MySQL extension or a database drop-in.
 *
 * Dies if requirements are not met.
 *
 * @access private
 * @since 3.0.0
 */",
 "/**
 * Don\'t load all of WordPress when handling a favicon.ico request.
 * Instead, send the headers for a zero-length favicon and bail.
 *
 * @since 3.0.0
 */",
 "/**
 * Dies with a maintenance message when conditions are met.
 *
 * Checks for a file in the WordPress root directory named \".maintenance\".
 * This file will contain the variable $upgrading, set to the time the file
 * was created. If the file was created less than 10 minutes ago, WordPress
 * enters maintenance mode and displays a message.
 *
 * The default message can be replaced by using a drop-in (maintenance.php in
 * the wp-content directory).
 *
 * @access private
 * @since 3.0.0
 */",
 "/**
 * PHP 5 standard microtime start capture.
 *
 * @access private
 * @since 0.71
 * @global float $timestart Seconds from when function is called.
 * @return bool Always returns true.
 */",
 "/**
 * Return and/or display the time from the page start to when function is called.
 *
 * You can get the results and print them by doing:
 * <code>
 * $nTimePageTookToExecute = timer_stop();
 * echo $nTimePageTookToExecute;
 * </code>
 *
 * Or instead, you can do:
 * <code>
 * timer_stop(1);
 * </code>
 * which will do what the above does. If you need the result, you can assign it to a variable, but
 * in most cases, you only need to echo it.
 *
 * @since 0.71
 * @global float $timestart Seconds from when timer_start() is called
 * @global float $timeend Seconds from when function is called
 *
 * @param int $display Use \'0\' or null to not echo anything and 1 to echo the total time
 * @param int $precision The amount of digits from the right of the decimal to display. Default is 3.
 * @return float The \"second.microsecond\" finished time calculation
 */",
 "/**
 * Sets PHP error handling and handles WordPress debug mode.
 *
 * Uses three constants: WP_DEBUG, WP_DEBUG_DISPLAY, and WP_DEBUG_LOG. All three can be
 * defined in wp-config.php. Example: <code> define( \'WP_DEBUG\', true ); </code>
 *
 * WP_DEBUG_DISPLAY and WP_DEBUG_LOG perform no function unless WP_DEBUG is true.
 * WP_DEBUG defaults to false.
 *
 * When WP_DEBUG is true, all PHP notices are reported. WordPress will also display
 * notices, including one when a deprecated WordPress function, function argument,
 * or file is used. Deprecated code may be removed from a later version.
 *
 * It is strongly recommended that plugin and theme developers use WP_DEBUG in their
 * development environments.
 *
 * When WP_DEBUG_DISPLAY is true, WordPress will force errors to be displayed.
 * WP_DEBUG_DISPLAY defaults to true. Defining it as null prevents WordPress from
 * changing the global configuration setting. Defining WP_DEBUG_DISPLAY as false
 * will force errors to be hidden.
 *
 * When WP_DEBUG_LOG is true, errors will be logged to wp-content/debug.log.
 * WP_DEBUG_LOG defaults to false.
 *
 * @access private
 * @since 3.0.0
 */",
 "/**
 * Sets the location of the language directory.
 *
 * To set directory manually, define <code>WP_LANG_DIR</code> in wp-config.php.
 *
 * If the language directory exists within WP_CONTENT_DIR, that is used.
 * Otherwise if the language directory exists within WPINC, that\'s used.
 * Finally, if neither of the preceding directories are found,
 * WP_CONTENT_DIR/languages is used.
 *
 * The WP_LANG_DIR constant was introduced in 2.1.0.
 *
 * @access private
 * @since 3.0.0
 */",
 "/**
 * Load the correct database class file.
 *
 * This function is used to load the database class file either at runtime or by
 * wp-admin/setup-config.php. We must globalize $wpdb to ensure that it is
 * defined globally by the inline code in wp-db.php.
 *
 * @since 2.5.0
 * @global $wpdb WordPress Database Object
 */",
 "/**
 * Sets the database table prefix and the format specifiers for database table columns.
 *
 * Columns not listed here default to %s.
 *
 * @see wpdb::$field_types Since 2.8.0
 * @see wpdb::prepare()
 * @see wpdb::insert()
 * @see wpdb::update()
 * @see wpdb::set_prefix()
 *
 * @access private
 * @since 3.0.0
 */",
 "/**
 * Starts the WordPress object cache.
 *
 * If an object-cache.php file exists in the wp-content directory,
 * it uses that drop-in as an external object cache.
 *
 * @access private
 * @since 3.0.0
 */",
 "/**
 * Redirects to the installer if WordPress is not installed.
 *
 * Dies with an error message when multisite is enabled.
 *
 * @access private
 * @since 3.0.0
 */",
 "/**
 * Returns array of must-use plugin files to be included in global scope.
 *
 * The default directory is wp-content/mu-plugins. To change the default directory
 * manually, define <code>WPMU_PLUGIN_DIR</code> and <code>WPMU_PLUGIN_URL</code>
 * in wp-config.php.
 *
 * @access private
 * @since 3.0.0
 * @return array Files to include
 */",
 "/**
 * Returns array of plugin files to be included in global scope.
 *
 * The default directory is wp-content/plugins. To change the default directory
 * manually, define <code>WP_PLUGIN_DIR</code> and <code>WP_PLUGIN_URL</code>
 * in wp-config.php.
 *
 * @access private
 * @since 3.0.0
 * @return array Files to include
 */",
 "/**
 * Sets internal encoding using mb_internal_encoding().
 *
 * In most cases the default internal encoding is latin1, which is of no use,
 * since we want to use the mb_ functions for utf-8 strings.
 *
 * @access private
 * @since 3.0.0
 */",
 "/**
 * Add magic quotes to $_GET, $_POST, $_COOKIE, and $_SERVER.
 *
 * Also forces $_REQUEST to be $_GET + $_POST. If $_SERVER, $_COOKIE,
 * or $_ENV are needed, use those superglobals directly.
 *
 * @access private
 * @since 3.0.0
 */",
 "/**
 * Runs just before PHP shuts down execution.
 *
 * @access private
 * @since 1.2.0
 */",
 "/**
 * Copy an object.
 *
 * @since 2.7.0
 * @deprecated 3.2
 *
 * @param object $object The object to clone
 * @return object The cloned object
 */",
 "/**
 * Whether the current request is for a network or blog admin page
 *
 * Does not inform on whether the user is an admin! Use capability checks to
 * tell if the user should be accessing a section or not.
 *
 * @since 1.5.1
 *
 * @return bool True if inside WordPress administration pages.
 */",
 "/**
 * Whether the current request is for a blog admin screen /wp-admin/
 *
 * Does not inform on whether the user is a blog admin! Use capability checks to
 * tell if the user should be accessing a section or not.
 *
 * @since 3.1.0
 *
 * @return bool True if inside WordPress network administration pages.
 */",
 "/**
 * Whether the current request is for a network admin screen /wp-admin/network/
 *
 * Does not inform on whether the user is a network admin! Use capability checks to
 * tell if the user should be accessing a section or not.
 *
 * @since 3.1.0
 *
 * @return bool True if inside WordPress network administration pages.
 */",
 "/**
 * Whether the current request is for a user admin screen /wp-admin/user/
 *
 * Does not inform on whether the user is an admin! Use capability checks to
 * tell if the user should be accessing a section or not.
 *
 * @since 3.1.0
 *
 * @return bool True if inside WordPress user administration pages.
 */",
 "/**
 * Whether Multisite support is enabled
 *
 * @since 3.0.0
 *
 * @return bool True if multisite is enabled, false otherwise.
 */",
 "/**
 * Attempts an early load of translations.
 *
 * Used for errors encountered during the initial loading process, before the locale has been
 * properly detected and loaded.
 *
 * Designed for unusual load sequences (like setup-config.php) or for when the script will then
 * terminate with an error, otherwise there is a risk that a file can be double-included.
 *
 * @since 3.4.0
 * @access private
 */",
 "/**
	 * Constructs a new logger instance.
	 */",
 "/**
	 * Sets the current log level, use the MC_LOGGER constants.
	 *
	 * @param int $level Log level instance for example MC_LOGGER_DEBUG.
	 */",
 "/**
	 * Returns the current log level for example MC_LOGGER_DEBUG.
	 *
	 * @return int Current log level for example MC_LOGGER_DEBUG.
	 */",
 "/**
	 * Converts a Unix path to OS specific path.
	 *
	 * @param String $path Unix path to convert.
	 */",
 "/**
 * Logging utility class. This class handles basic logging with levels, log rotation and custom log formats. It\'s
 * designed to be compact but still powerful and flexible.
 */",
 "/**
 * WordPress Filesystem Class for implementing FTP.
 *
 * @since 2.5
 * @package WordPress
 * @subpackage Filesystem
 * @uses WP_Filesystem_Base Extends class
 */",
 "/**
 * Build User Administration Menu.
 *
 * @package WordPress
 * @subpackage Administration
 * @since 3.1.0
 */",
 "/**
	* constructs a new JSON instance
	*
	* @param int $use object behavior flags; combine with boolean-OR
	*
	*						possible values:
	*						- SERVICES_JSON_LOOSE_TYPE:  loose typing.
	*								\"{...}\" syntax creates associative arrays
	*								instead of objects in decode().
	*						- SERVICES_JSON_SUPPRESS_ERRORS:  error suppression.
	*								Values which can\'t be encoded (e.g. resources)
	*								appear as NULL instead of throwing errors.
	*								By default, a deeply-nested resource will
	*								bubble up with an error, so all return values
	*								from encode() should be checked with isError()
	*/",
 "/**
	* convert a string from one UTF-16 char to one UTF-8 char
	*
	* Normally should be handled by mb_convert_encoding, but
	* provides a slower PHP-only method for installations
	* that lack the multibye string extension.
	*
	* @param	string  $utf16  UTF-16 character
	* @return string  UTF-8 character
	* @access private
	*/",
 "/**
	* convert a string from one UTF-8 char to one UTF-16 char
	*
	* Normally should be handled by mb_convert_encoding, but
	* provides a slower PHP-only method for installations
	* that lack the multibye string extension.
	*
	* @param	string  $utf8 UTF-8 character
	* @return string  UTF-16 character
	* @access private
	*/",
 "/**
	* encodes an arbitrary variable into JSON format (and sends JSON Header)
	*
	* @param	mixed $var	any number, boolean, string, array, or object to be encoded.
	*						see argument 1 to Services_JSON() above for array-parsing behavior.
	*						if var is a strng, note that encode() always expects it
	*						to be in ASCII or UTF-8 format!
	*
	* @return mixed JSON string representation of input var or an error if a problem occurs
	* @access public
	*/",
 "/**
	* encodes an arbitrary variable into JSON format without JSON Header - warning - may allow CSS!!!!)
	*
	* @param	mixed $var	any number, boolean, string, array, or object to be encoded.
	*						see argument 1 to Services_JSON() above for array-parsing behavior.
	*						if var is a strng, note that encode() always expects it
	*						to be in ASCII or UTF-8 format!
	*
	* @return mixed JSON string representation of input var or an error if a problem occurs
	* @access public
	*/",
 "/**
	* PRIVATE CODE that does the work of encodes an arbitrary variable into JSON format
	*
	* @param	mixed $var	any number, boolean, string, array, or object to be encoded.
	*						see argument 1 to Services_JSON() above for array-parsing behavior.
	*						if var is a strng, note that encode() always expects it
	*						to be in ASCII or UTF-8 format!
	*
	* @return mixed JSON string representation of input var or an error if a problem occurs
	* @access public
	*/",
 "/**
	* array-walking function for use in generating JSON-formatted name-value pairs
	*
	* @param	string  $name name of key to use
	* @param	mixed $value  reference to an array element to be encoded
	*
	* @return string  JSON-formatted name-value pair, like \'\"name\":value\'
	* @access private
	*/",
 "/**
	* reduce a string by removing leading and trailing comments and whitespace
	*
	* @param	$str	string	string value to strip of comments and whitespace
	*
	* @return string  string value stripped of comments and whitespace
	* @access private
	*/",
 "/**
	*decodesaJSONstringintoappropriatevariable
	*
	*@param	string$str	JSON-formattedstring
	*
	*@returnmixednumber,boolean,string,array,orobject
	*				correspondingtogivenJSONinputstring.
	*				Seeargument1toServices_JSON()aboveforobject-outputbehavior.
	*				Notethatdecode()alwaysreturnsstrings
	*				inASCIIorUTF-8format!
	*@accesspublic
	*/",
 "/**
	*@todoUltimately,thisshouldjustcallPEAR::isError()
	*/",
 "/**
*ConvertstoandfromJSONformat.
*
*Briefexampleofuse:
*
*<code>
*//createanewinstanceofServices_JSON
*$json=newServices_JSON();
*
*//convertacomplexevaluetoJSONnotation,andsendittothebrowser
*$value=array(\'foo\',\'bar\',array(1,2,\'baz\'),array(3,array(4)));
*$output=$json->encode($value);
*
*print($output);
*//prints:[\"foo\",\"bar\",[1,2,\"baz\"],[3,[4]]]
 *
 * // accept incoming POST data, assumed to be in JSON notation
 * $input = file_get_contents(\'php://input\', 1000000);
 * $value = $json->decode($input);
 * </code>
 */",
 "/**
	* @todo Ultimately, this class shall be descended from PEAR_Error
	*/",
 "/**
 * MS Themes List Table class.
 *
 * @package WordPress
 * @subpackage List_Table
 * @since 3.1.0
 * @access private
 */",
 "/**
 * Sends back current comment total and new page links if they need to be updated.
 *
 * Contrary to normal success AJAX response (\"1\"), die with time() on success.
 *
 * @since 2.7
 *
 * @param int $comment_id
 * @return die
 */",
 "/**
	 * Add name to list of public query variables.
	 *
	 * @since 2.1.0
	 *
	 * @param string $qv Query variable name.
	 */",
 "/**
	 * Set the value of a query variable.
	 *
	 * @since 2.3.0
	 *
	 * @param string $key Query variable name.
	 * @param mixed $value Query variable value.
	 */",
 "/**
	 * Parse request to find correct WordPress query.
	 *
	 * Sets up the query variables based on the request. There are also many
	 * filters and actions that can be used to further manipulate the result.
	 *
	 * @since 2.0.0
	 *
	 * @param array|string $extra_query_vars Set the extra query variables.
	 */",
 "/**
	 * Send additional HTTP headers for caching, content type, etc.
	 *
	 * Sets the X-Pingback header, 404 status (if 404), Content-type. If showing
	 * a feed, it will also send last-modified, etag, and 304 status if needed.
	 *
	 * @since 2.0.0
	 */",
 "/**
	 * Sets the query string property based off of the query variable property.
	 *
	 * The \'query_string\' filter is deprecated, but still works. Plugins should
	 * use the \'request\' filter instead.
	 *
	 * @since 2.0.0
	 */",
 "/**
	 * Set up the WordPress Globals.
	 *
	 * The query_vars property will be extracted to the GLOBALS. So care should
	 * be taken when naming global variables that might interfere with the
	 * WordPress environment.
	 *
	 * @global string $query_string Query string for the loop.
	 * @global int $more Only set, if single page or post.
	 * @global int $single If single page or post. Only set, if single page or post.
	 *
	 * @since 2.0.0
	 */",
 "/**
	 * Set up the current user.
	 *
	 * @since 2.0.0
	 */",
 "/**
	 * Set up the Loop based on the query variables.
	 *
	 * @uses WP::$query_vars
	 * @since 2.0.0
	 */",
 "/**
 	 * Set the Headers for 404, if nothing is found for requested URL.
	 *
	 * Issue a 404 if a request doesn\'t match any posts and doesn\'t match
	 * any object (e.g. an existing-but-empty category, tag, author) and a 404 was not already
	 * issued, and if the request was not a search or the homepage.
	 *
	 * Otherwise, issue a 200.
	 *
	 * @since 2.0.0
 	 */",
 "/**
	 * Sets up all of the variables required by the WordPress environment.
	 *
	 * The action \'wp\' has one parameter that references the WP object. It
	 * allows for accessing the properties and methods to further manipulate the
	 * object.
	 *
	 * @since 2.0.0
	 *
	 * @param string|array $query_args Passed to {@link parse_request()}
	 */",
 "/**
 * WordPress environment setup class.
 *
 * @package WordPress
 * @since 2.0.0
 */",
 "/**
	 * constructor
	 *
	 * @param string $subject subject if regex
	 * @param array  $matches data to use in map
	 * @return self
	 */",
 "/**
	 * Substitute substring matches in subject.
	 *
	 * static helper function to ease use
	 *
	 * @access public
	 * @param string $subject subject
	 * @param array  $matches data used for substitution
	 * @return string
	 */",
 "/**
	 * do the actual mapping
	 *
	 * @access private
	 * @return string
	 */",
 "/**
	 * preg_replace_callback hook
	 *
	 * @access public
	 * @param  array $matches preg_replace regexp matches
	 * @return string
	 */",
 "/**
 * Helper class to remove the need to use eval to replace $matches[] in query strings.
 *
 * @since 2.9.0
 */",
 "/**
 * Changes the current user by ID or name.
 *
 * Set $id to null and specify a name if you do not know a user\'s ID.
 *
 * @since 2.0.1
 * @see wp_set_current_user() An alias of wp_set_current_user()
 * @deprecated 3.0.0
 * @deprecated Use wp_set_current_user()
 *
 * @param int|null $id User ID.
 * @param string $name Optional. The user\'s username
 * @return object returns wp_set_current_user()
 */",
 "/**
 * Retrieve user info by login name.
 *
 * @since 0.71
 * @deprecated 3.3.0
 * @deprecated Use get_user_by(\'login\')
 *
 * @param string $user_login User\'s username
 * @return bool|object False on failure, User DB row object
 */",
 "/**
 * Retrieve user info by email.
 *
 * @since 2.5
 * @deprecated 3.3.0
 * @deprecated Use get_user_by(\'email\')
 *
 * @param string $email User\'s email address
 * @return bool|object False on failure, User DB row object
 */",
 "/**
 * Sets a cookie for a user who just logged in. This function is deprecated.
 *
 * @since 1.5
 * @deprecated 2.5
 * @deprecated Use wp_set_auth_cookie()
 * @see wp_set_auth_cookie()
 *
 * @param string $username The user\'s username
 * @param string $password Optional. The user\'s password
 * @param bool $already_md5 Optional. Whether the password has already been through MD5
 * @param string $home Optional. Will be used instead of COOKIEPATH if set
 * @param string $siteurl Optional. Will be used instead of SITECOOKIEPATH if set
 * @param bool $remember Optional. Remember that the user is logged in
 */",
 "/**
 * Clears the authentication cookie, logging the user out. This function is deprecated.
 *
 * @since 1.5
 * @deprecated 2.5
 * @deprecated Use wp_clear_auth_cookie()
 * @see wp_clear_auth_cookie()
 */",
 "/**
 * Gets the user cookie login. This function is deprecated.
 *
 * This function is deprecated and should no longer be extended as it won\'t be
 * used anywhere in WordPress. Also, plugins shouldn\'t use it either.
 *
 * @since 2.0.3
 * @deprecated 2.5
 * @deprecated No alternative
 *
 * @return bool Always returns false
 */",
 "/**
 * Checks a users login information and logs them in if it checks out. This function is deprecated.
 *
 * Use the global $error to get the reason why the login failed. If the username
 * is blank, no error will be set, so assume blank username on that case.
 *
 * Plugins extending this function should also provide the global $error and set
 * what the error is, so that those checking the global for why there was a
 * failure can utilize it later.
 *
 * @since 1.2.2
 * @deprecated Use wp_signon()
 * @global string $error Error when false is returned
 *
 * @param string $username User\'s username
 * @param string $password User\'s password
 * @param bool $deprecated Not used
 * @return bool False on login failure, true on successful check
 */",
 "/**
 * WordPress Upgrader class for Upgrading/Installing a local set of files via the Filesystem Abstraction classes from a Zip file.
 *
 * @TODO More Detailed docs, for methods as well.
 *
 * @package WordPress
 * @subpackage Upgrader
 * @since 2.8.0
 */",
 "/**
 * Plugin Upgrader class for WordPress Plugins, It is designed to upgrade/install plugins from a local zip, remote zip URL, or uploaded zip file.
 *
 * @TODO More Detailed docs, for methods as well.
 *
 * @package WordPress
 * @subpackage Upgrader
 * @since 2.8.0
 */",
 "/**
 * Theme Upgrader class for WordPress Themes, It is designed to upgrade/install themes from a local zip, remote zip URL, or uploaded zip file.
 *
 * @TODO More Detailed docs, for methods as well.
 *
 * @package WordPress
 * @subpackage Upgrader
 * @since 2.8.0
 */",
 "/**
 * Core Upgrader class for WordPress. It allows for WordPress to upgrade itself in combination with the wp-admin/includes/update-core.php file
 *
 * @TODO More Detailed docs, for methods as well.
 *
 * @package WordPress
 * @subpackage Upgrader
 * @since 2.8.0
 */",
 "/**
 * Generic Skin for the WordPress Upgrader classes. This skin is designed to be extended for specific purposes.
 *
 * @TODO More Detailed docs, for methods as well.
 *
 * @package WordPress
 * @subpackage Upgrader
 * @since 2.8.0
 */",
 "/**
 * Plugin Upgrader Skin for WordPress Plugin Upgrades.
 *
 * @TODO More Detailed docs, for methods as well.
 *
 * @package WordPress
 * @subpackage Upgrader
 * @since 2.8.0
 */",
 "/**
 * Plugin Upgrader Skin for WordPress Plugin Upgrades.
 *
 * @package WordPress
 * @subpackage Upgrader
 * @since 3.0.0
 */",
 "/**
 * Plugin Installer Skin for WordPress Plugin Installer.
 *
 * @TODO More Detailed docs, for methods as well.
 *
 * @package WordPress
 * @subpackage Upgrader
 * @since 2.8.0
 */",
 "/**
 * Theme Installer Skin for the WordPress Theme Installer.
 *
 * @TODO More Detailed docs, for methods as well.
 *
 * @package WordPress
 * @subpackage Upgrader
 * @since 2.8.0
 */",
 "/**
 * Theme Upgrader Skin for WordPress Theme Upgrades.
 *
 * @TODO More Detailed docs, for methods as well.
 *
 * @package WordPress
 * @subpackage Upgrader
 * @since 2.8.0
 */",
 "/**
 * Upgrade Skin helper for File uploads. This class handles the upload process and passes it as if its a local file to the Upgrade/Installer functions.
 *
 * @TODO More Detailed docs, for methods as well.
 *
 * @package WordPress
 * @subpackage Upgrader
 * @since 2.8.0
 */",
 "/**
	 * Prints scripts
	 *
	 * Prints the scripts passed to it or the print queue. Also prints all necessary dependencies.
	 *
	 * @param mixed $handles (optional) Scripts to be printed. (void) prints queue, (string) prints that script, (array of strings) prints those scripts.
	 * @param int $group (optional) If scripts were queued in groups prints this group number.
	 * @return array Scripts that have been printed
	 */",
 "/**
	 * Localizes a script
	 *
	 * Localizes only if the script has already been added
	 */",
 "/**
 * BackPress Scripts enqueue class.
 *
 * @package BackPress
 * @uses WP_Dependencies
 * @since r16
 */",
 "/**
 * The Sidebar containing the main widget area.
 *
 * @package WordPress
 * @subpackage Twenty_Eleven
 * @since Twenty Eleven 1.0
 */",
 "/**
 * Sets up theme defaults and registers support for various WordPress features.
 *
 * Note that this function is hooked into the after_setup_theme hook, which runs
 * before the init hook. The init hook is too late for some features, such as indicating
 * support post thumbnails.
 *
 * To override twentyeleven_setup() in a child theme, add your own twentyeleven_setup to your child theme\'s
 * functions.php file.
 *
 * @uses load_theme_textdomain() For translation/localization support.
 * @uses add_editor_style() To style the visual editor.
 * @uses add_theme_support() To add support for post thumbnails, automatic feed links, custom headers
 * 	and backgrounds, and post formats.
 * @uses register_nav_menus() To add support for navigation menus.
 * @uses register_default_headers() To register the default custom header images provided with the theme.
 * @uses set_post_thumbnail_size() To set a custom post thumbnail size.
 *
 * @since Twenty Eleven 1.0
 */",
 "/**
 * Styles the header image and text displayed on the blog
 *
 * @since Twenty Eleven 1.0
 */",
 "/**
 * Styles the header image displayed on the Appearance > Header admin panel.
 *
 * Referenced via add_theme_support(\'custom-header\') in twentyeleven_setup().
 *
 * @since Twenty Eleven 1.0
 */",
 "/**
 * Custom header image markup displayed on the Appearance > Header admin panel.
 *
 * Referenced via add_theme_support(\'custom-header\') in twentyeleven_setup().
 *
 * @since Twenty Eleven 1.0
 */",
 "/**
 * Sets the post excerpt length to 40 words.
 *
 * To override this length in a child theme, remove the filter and add your own
 * function tied to the excerpt_length filter hook.
 */",
 "/**
 * Returns a \"Continue Reading\" link for excerpts
 */",
 "/**
 * Replaces \"[...]\" (appended to automatically generated excerpts) with an ellipsis and twentyeleven_continue_reading_link().
 *
 * To override this in a child theme, remove the filter and add your own
 * function tied to the excerpt_more filter hook.
 */",
 "/**
 * Adds a pretty \"Continue Reading\" link to custom post excerpts.
 *
 * To override this link in a child theme, remove the filter and add your own
 * function tied to the get_the_excerpt filter hook.
 */",
 "/**
 * Get our wp_nav_menu() fallback, wp_page_menu(), to show a home link.
 */",
 "/**
 * Register our sidebars and widgetized areas. Also register the default Epherma widget.
 *
 * @since Twenty Eleven 1.0
 */",
 "/**
 * Display navigation to next/previous pages when applicable
 */",
 "/**
 * Return the URL for the first link found in the post content.
 *
 * @since Twenty Eleven 1.0
 * @return string|bool URL or false when no link is present.
 */",
 "/**
 * Count the number of footer sidebars to enable dynamic classes for the footer
 */",
 "/**
 * Template for comments and pingbacks.
 *
 * To override this walker in a child theme without modifying the comments template
 * simply create your own twentyeleven_comment(), and that function will be used instead.
 *
 * Used as a callback by wp_list_comments() for displaying the comments.
 *
 * @since Twenty Eleven 1.0
 */",
 "/**
 * Prints HTML with meta information for the current post-date/time and author.
 * Create your own twentyeleven_posted_on to override in a child theme
 *
 * @since Twenty Eleven 1.0
 */",
 "/**
 * Adds two classes to the array of body classes.
 * The first is if the site has only had one author with published posts.
 * The second is if a singular post being displayed
 *
 * @since Twenty Eleven 1.0
 */",
 "/**
 * Display list of the available widgets.
 *
 * @since 2.5.0
 */",
 "/**
 * Callback to sort array by a \'name\' key.
 *
 * @since 3.1.0
 * @access private
 */",
 "/**
 * Show the widgets and their settings for a sidebar.
 * Used in the the admin widget config screen.
 *
 * @since 2.5.0
 *
 * @param string $sidebar id slug of the sidebar
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.5.0
 *
 * @param array $params
 * @return array
 */",
 "/**
 * Meta widget used to display the control form for a widget.
 *
 * Called from dynamic_sidebar().
 *
 * @since 2.5.0
 *
 * @param array $sidebar_args
 * @return array
 */",
 "/** @ignore */",
 "/**
 * Scale down the default size of an image.
 *
 * This is so that the image is a better fit for the editor and theme.
 *
 * The $size parameter accepts either an array or a string. The supported string
 * values are \'thumb\' or \'thumbnail\' for the given thumbnail size or defaults at
 * 128 width and 96 height in pixels. Also supported for the string value is
 * \'medium\' and \'full\'. The \'full\' isn\'t actually supported, but any value other
 * than the supported will result in the content_width size or 500 if that is
 * not set.
 *
 * Finally, there is a filter named \'editor_max_image_size\', that will be called
 * on the calculated array for width and height, respectively. The second
 * parameter will be the value that was in the $size parameter. The returned
 * type for the hook is an array with the width as the first element and the
 * height as the second element.
 *
 * @since 2.5.0
 * @uses wp_constrain_dimensions() This function passes the widths and the heights.
 *
 * @param int $width Width of the image
 * @param int $height Height of the image
 * @param string|array $size Size of what the result image should be.
 * @return array Width and height of what the result image should resize to.
 */",
 "/**
 * Retrieve width and height attributes using given width and height values.
 *
 * Both attributes are required in the sense that both parameters must have a
 * value, but are optional in that if you set them to false or null, then they
 * will not be added to the returned string.
 *
 * You can set the value using a string, but it will only take numeric values.
 * If you wish to put \'px\' after the numbers, then it will be stripped out of
 * the return.
 *
 * @since 2.5.0
 *
 * @param int|string $width Optional. Width attribute value.
 * @param int|string $height Optional. Height attribute value.
 * @return string HTML attributes for width and, or height.
 */",
 "/**
 * Scale an image to fit a particular size (such as \'thumb\' or \'medium\').
 *
 * Array with image url, width, height, and whether is intermediate size, in
 * that order is returned on success is returned. $is_intermediate is true if
 * $url is a resized image, false if it is the original.
 *
 * The URL might be the original image, or it might be a resized version. This
 * function won\'t create a new resized copy, it will just return an already
 * resized one if it exists.
 *
 * A plugin may use the \'image_downsize\' filter to hook into and offer image
 * resizing services for images. The hook must return an array with the same
 * elements that are returned in the function. The first element being the URL
 * to the new image that was resized.
 *
 * @since 2.5.0
 * @uses apply_filters() Calls \'image_downsize\' on $id and $size to provide
 *		resize services.
 *
 * @param int $id Attachment ID for image.
 * @param array|string $size Optional, default is \'medium\'. Size of image, either array or string.
 * @return bool|array False on failure, array on success.
 */",
 "/**
 * Registers a new image size
 *
 * @since 2.9.0
 */",
 "/**
 * Registers an image size for the post thumbnail
 *
 * @since 2.9.0
 */",
 "/**
 * An <img src /> tag for an image attachment, scaling it down if requested.
 *
 * The filter \'get_image_tag_class\' allows for changing the class name for the
 * image without having to use regular expressions on the HTML content. The
 * parameters are: what WordPress will use for the class, the Attachment ID,
 * image align value, and the size the image should be.
 *
 * The second filter \'get_image_tag\' has the HTML content, which can then be
 * further manipulated by a plugin to change all attribute values and even HTML
 * content.
 *
 * @since 2.5.0
 *
 * @uses apply_filters() The \'get_image_tag_class\' filter is the IMG element
 *		class attribute.
 * @uses apply_filters() The \'get_image_tag\' filter is the full IMG element with
 *		all attributes.
 *
 * @param int $id Attachment ID.
 * @param string $alt Image Description for the alt attribute.
 * @param string $title Image Description for the title attribute.
 * @param string $align Part of the class name for aligning the image.
 * @param string $size Optional. Default is \'medium\'.
 * @return string HTML IMG element for given image attachment
 */",
 "/**
 * Load an image from a string, if PHP supports it.
 *
 * @since 2.1.0
 *
 * @param string $file Filename of the image to load.
 * @return resource The resulting image resource on success, Error string on failure.
 */",
 "/**
 * Calculates the new dimensions for a downsampled image.
 *
 * If either width or height are empty, no constraint is applied on
 * that dimension.
 *
 * @since 2.5.0
 *
 * @param int $current_width Current width of the image.
 * @param int $current_height Current height of the image.
 * @param int $max_width Optional. Maximum wanted width.
 * @param int $max_height Optional. Maximum wanted height.
 * @return array First item is the width, the second item is the height.
 */",
 "/**
 * Retrieve calculated resized dimensions for use in imagecopyresampled().
 *
 * Calculate dimensions and coordinates for a resized image that fits within a
 * specified width and height. If $crop is true, the largest matching central
 * portion of the image will be cropped out and resized to the required size.
 *
 * @since 2.5.0
 * @uses apply_filters() Calls \'image_resize_dimensions\' on $orig_w, $orig_h, $dest_w, $dest_h and
 *		$crop to provide custom resize dimensions.
 *
 * @param int $orig_w Original width.
 * @param int $orig_h Original height.
 * @param int $dest_w New width.
 * @param int $dest_h New height.
 * @param bool $crop Optional, default is false. Whether to crop image or resize.
 * @return bool|array False on failure. Returned array matches parameters for imagecopyresampled() PHP function.
 */",
 "/**
 * Scale down an image to fit a particular size and save a new copy of the image.
 *
 * The PNG transparency will be preserved using the function, as well as the
 * image type. If the file going in is PNG, then the resized image is going to
 * be PNG. The only supported image types are PNG, GIF, and JPEG.
 *
 * Some functionality requires API to exist, so some PHP version may lose out
 * support. This is not the fault of WordPress (where functionality is
 * downgraded, not actual defects), but of your PHP version.
 *
 * @since 2.5.0
 *
 * @param string $file Image file path.
 * @param int $max_w Maximum width to resize to.
 * @param int $max_h Maximum height to resize to.
 * @param bool $crop Optional. Whether to crop image or resize.
 * @param string $suffix Optional. File suffix.
 * @param string $dest_path Optional. New image file path.
 * @param int $jpeg_quality Optional, default is 90. Image quality percentage.
 * @return mixed WP_Error on failure. String with new destination path.
 */",
 "/**
 * Resize an image to make a thumbnail or intermediate size.
 *
 * The returned array has the file size, the image width, and image height. The
 * filter \'image_make_intermediate_size\' can be used to hook in and change the
 * values of the returned array. The only parameter is the resized file path.
 *
 * @since 2.5.0
 *
 * @param string $file File path.
 * @param int $width Image width.
 * @param int $height Image height.
 * @param bool $crop Optional, default is false. Whether to crop image to specified height and width or resize.
 * @return bool|array False, if no image was created. Metadata array on success.
 */",
 "/**
 * Retrieve the image\'s intermediate size (resized) path, width, and height.
 *
 * The $size parameter can be an array with the width and height respectively.
 * If the size matches the \'sizes\' metadata array for width and height, then it
 * will be used. If there is no direct match, then the nearest image size larger
 * than the specified size will be used. If nothing is found, then the function
 * will break out and return false.
 *
 * The metadata \'sizes\' is used for compatible sizes that can be used for the
 * parameter $size value.
 *
 * The url path will be given, when the $size parameter is a string.
 *
 * If you are passing an array for the $size, you should consider using
 * add_image_size() so that a cropped version is generated. It\'s much more
 * efficient than having to find the closest-sized image and then having the
 * browser scale down the image.
 *
 * @since 2.5.0
 * @see add_image_size()
 *
 * @param int $post_id Attachment ID for image.
 * @param array|string $size Optional, default is \'thumbnail\'. Size of image, either array or string.
 * @return bool|array False on failure or array of file path, width, and height on success.
 */",
 "/**
 * Get the available image sizes
 * @since 3.0.0
 * @return array Returns a filtered array of image size strings
 */",
 "/**
 * Retrieve an image to represent an attachment.
 *
 * A mime icon for files, thumbnail or intermediate size for images.
 *
 * @since 2.5.0
 *
 * @param int $attachment_id Image attachment ID.
 * @param string $size Optional, default is \'thumbnail\'.
 * @param bool $icon Optional, default is false. Whether it is an icon.
 * @return bool|array Returns an array (url, width, height), or false, if no image is available.
 */",
 "/**
 * Get an HTML img element representing an image attachment
 *
 * While $size will accept an array, it is better to register a size with
 * add_image_size() so that a cropped version is generated. It\'s much more
 * efficient than having to find the closest-sized image and then having the
 * browser scale down the image.
 *
 * @see add_image_size()
 * @uses apply_filters() Calls \'wp_get_attachment_image_attributes\' hook on attributes array
 * @uses wp_get_attachment_image_src() Gets attachment file URL and dimensions
 * @since 2.5.0
 *
 * @param int $attachment_id Image attachment ID.
 * @param string $size Optional, default is \'thumbnail\'.
 * @param bool $icon Optional, default is false. Whether it is an icon.
 * @return string HTML img element or empty string on failure.
 */",
 "/**
 * Adds a \'wp-post-image\' class to post thumbnails
 * Uses the begin_fetch_post_thumbnail_html and end_fetch_post_thumbnail_html action hooks to
 * dynamically add/remove itself so as to only filter post thumbnails
 *
 * @since 2.9.0
 * @param array $attr Attributes including src, class, alt, title
 * @return array
 */",
 "/**
 * Adds _wp_post_thumbnail_class_filter to the wp_get_attachment_image_attributes filter
 *
 * @since 2.9.0
 */",
 "/**
 * Removes _wp_post_thumbnail_class_filter from the wp_get_attachment_image_attributes filter
 *
 * @since 2.9.0
 */",
 "/**
 * The Caption shortcode.
 *
 * Allows a plugin to replace the content that would otherwise be returned. The
 * filter is \'img_caption_shortcode\' and passes an empty string, the attr
 * parameter and the content parameter values.
 *
 * The supported attributes for the shortcode are \'id\', \'align\', \'width\', and
 * \'caption\'.
 *
 * @since 2.6.0
 *
 * @param array $attr Attributes attributed to the shortcode.
 * @param string $content Optional. Shortcode content.
 * @return string
 */",
 "/**
 * The Gallery shortcode.
 *
 * This implements the functionality of the Gallery Shortcode for displaying
 * WordPress images on a post.
 *
 * @since 2.5.0
 *
 * @param array $attr Attributes of the shortcode.
 * @return string HTML content to display gallery.
 */",
 "/**
 * Display previous image link that has the same post parent.
 *
 * @since 2.5.0
 * @param string $size Optional, default is \'thumbnail\'. Size of image, either array or string. 0 or \'none\' will default to post_title or $text;
 * @param string $text Optional, default is false. If included, link will reflect $text variable.
 * @return string HTML content.
 */",
 "/**
 * Display next image link that has the same post parent.
 *
 * @since 2.5.0
 * @param string $size Optional, default is \'thumbnail\'. Size of image, either array or string. 0 or \'none\' will default to post_title or $text;
 * @param string $text Optional, default is false. If included, link will reflect $text variable.
 * @return string HTML content.
 */",
 "/**
 * Display next or previous image link that has the same post parent.
 *
 * Retrieves the current attachment object from the $post global.
 *
 * @since 2.5.0
 *
 * @param bool $prev Optional. Default is true to display previous link, false for next.
 */",
 "/**
 * Retrieve taxonomies attached to the attachment.
 *
 * @since 2.5.0
 *
 * @param int|array|object $attachment Attachment ID, Attachment data array, or Attachment data object.
 * @return array Empty array on failure. List of taxonomies on success.
 */",
 "/**
 * Check if the installed version of GD supports particular image type
 *
 * @since 2.9.0
 *
 * @param string $mime_type
 * @return bool
 */",
 "/**
 * Create new GD image resource with transparency support
 *
 * @since 2.9.0
 *
 * @param int $width Image width
 * @param int $height Image height
 * @return image resource
 */",
 "/**
	 * Constructor
	 */",
 "/**
	 * Process the [embed] shortcode.
	 *
	 * Since the [embed] shortcode needs to be run earlier than other shortcodes,
	 * this function removes all existing shortcodes, registers the [embed] shortcode,
	 * calls {@link do_shortcode()}, and then re-registers the old shortcodes.
	 *
	 * @uses $shortcode_tags
	 * @uses remove_all_shortcodes()
	 * @uses add_shortcode()
	 * @uses do_shortcode()
	 *
	 * @param string $content Content to parse
	 * @return string Content with shortcode parsed
	 */",
 "/**
	 * If a post/page was saved, then output JavaScript to make
	 * an AJAX request that will call WP_Embed::cache_oembed().
	 */",
 "/**
	 * Register an embed handler. Do not use this function directly, use {@link wp_embed_register_handler()} instead.
	 * This function should probably also only be used for sites that do not support oEmbed.
	 *
	 * @param string $id An internal ID/name for the handler. Needs to be unique.
	 * @param string $regex The regex that will be used to see if this handler should be used for a URL.
	 * @param callback $callback The callback function that will be called if the regex is matched.
	 * @param int $priority Optional. Used to specify the order in which the registered handlers will be tested (default: 10). Lower numbers correspond with earlier testing, and handlers with the same priority are tested in the order in which they were added to the action.
	 */",
 "/**
	 * Unregister a previously registered embed handler. Do not use this function directly, use {@link wp_embed_unregister_handler()} instead.
	 *
	 * @param string $id The handler ID that should be removed.
	 * @param int $priority Optional. The priority of the handler to be removed (default: 10).
	 */",
 "/**
	 * The {@link do_shortcode()} callback function.
	 *
	 * Attempts to convert a URL into embed HTML. Starts by checking the URL against the regex of the registered embed handlers.
	 * If none of the regex matches and it\'s enabled, then the URL will be given to the {@link WP_oEmbed} class.
	 *
	 * @uses wp_oembed_get()
	 * @uses wp_parse_args()
	 * @uses wp_embed_defaults()
	 * @uses WP_Embed::maybe_make_link()
	 * @uses get_option()
	 * @uses current_user_can()
	 * @uses wp_cache_get()
	 * @uses wp_cache_set()
	 * @uses get_post_meta()
	 * @uses update_post_meta()
	 *
	 * @param array $attr Shortcode attributes.
	 * @param string $url The URL attempting to be embedded.
	 * @return string The embed HTML on success, otherwise the original URL.
	 */",
 "/**
	 * Delete all oEmbed caches.
	 *
	 * @param int $post_ID Post ID to delete the caches for.
	 */",
 "/**
	 * Triggers a caching of all oEmbed results.
	 *
	 * @param int $post_ID Post ID to do the caching for.
	 */",
 "/**
	 * Passes any unlinked URLs that are on their own line to {@link WP_Embed::shortcode()} for potential embedding.
	 *
	 * @uses WP_Embed::autoembed_callback()
	 *
	 * @param string $content The content to be searched.
	 * @return string Potentially modified $content.
	 */",
 "/**
	 * Callback function for {@link WP_Embed::autoembed()}.
	 *
	 * @uses WP_Embed::shortcode()
	 *
	 * @param array $match A regex match array.
	 * @return string The embed HTML on success, otherwise the original URL.
	 */",
 "/**
	 * Conditionally makes a hyperlink based on an internal class variable.
	 *
	 * @param string $url URL to potentially be linked.
	 * @return string Linked URL or the original URL.
	 */",
 "/**
 * API for easily embedding rich media such as videos and images into content.
 *
 * @package WordPress
 * @subpackage Embed
 * @since 2.9.0
 */",
 "/**
 * Register an embed handler. This function should probably only be used for sites that do not support oEmbed.
 *
 * @since 2.9.0
 * @see WP_Embed::register_handler()
 */",
 "/**
 * Unregister a previously registered embed handler.
 *
 * @since 2.9.0
 * @see WP_Embed::unregister_handler()
 */",
 "/**
 * Create default array of embed parameters.
 *
 * @since 2.9.0
 *
 * @return array Default embed parameters.
 */",
 "/**
 * Based on a supplied width/height example, return the biggest possible dimensions based on the max width/height.
 *
 * @since 2.9.0
 * @uses wp_constrain_dimensions() This function passes the widths and the heights.
 *
 * @param int $example_width The width of an example embed.
 * @param int $example_height The height of an example embed.
 * @param int $max_width The maximum allowed width.
 * @param int $max_height The maximum allowed height.
 * @return array The maximum possible width and height based on the example ratio.
 */",
 "/**
 * Attempts to fetch the embed HTML for a provided URL using oEmbed.
 *
 * @since 2.9.0
 * @see WP_oEmbed
 *
 * @uses _wp_oembed_get_object()
 * @uses WP_oEmbed::get_html()
 *
 * @param string $url The URL that should be embedded.
 * @param array $args Additional arguments and parameters.
 * @return bool|string False on failure or the embed HTML on success.
 */",
 "/**
 * Adds a URL format and oEmbed provider URL pair.
 *
 * @since 2.9.0
 * @see WP_oEmbed
 *
 * @uses _wp_oembed_get_object()
 *
 * @param string $format The format of URL that this provider can handle. You can use asterisks as wildcards.
 * @param string $provider The URL to the oEmbed provider.
 * @param boolean $regex Whether the $format parameter is in a regex format.
 */",
 "/**
 * Determines if default embed handlers should be loaded.
 *
 * Checks to make sure that the embeds library hasn\'t already been loaded. If
 * it hasn\'t, then it will load the embeds library.
 *
 * @since 2.9.0
 */",
 "/**
 * The Google Video embed handler callback. Google Video does not support oEmbed.
 *
 * @see WP_Embed::register_handler()
 * @see WP_Embed::shortcode()
 *
 * @param array $matches The regex matches from the provided regex when calling {@link wp_embed_register_handler()}.
 * @param array $attr Embed attributes.
 * @param string $url The original URL that was matched by the regex.
 * @param array $rawattr The original unmodified attributes.
 * @return string The embed HTML.
 */",
 "/**
 * Prints default plupload arguments.
 *
 * @since 3.4.0
 */",
 "/**
 * Create database table, if it doesn\'t already exist.
 *
 * @since 1.0.0
 * @package WordPress
 * @subpackage Plugin
 * @uses $wpdb
 *
 * @param string $table_name Database table name.
 * @param string $create_ddl Create database table SQL.
 * @return bool False on error, true if already exists or success.
 */",
 "/**
 * Add column to database table, if column doesn\'t already exist in table.
 *
 * @since 1.0.0
 * @package WordPress
 * @subpackage Plugin
 * @uses $wpdb
 *
 * @param string $table_name Database table name
 * @param string $column_name Table column name
 * @param string $create_ddl SQL to add column to table.
 * @return bool False on failure. True, if already exists or was successful.
 */",
 "/**
 * Drop column from database table, if it exists.
 *
 * @since 1.0.0
 * @package WordPress
 * @subpackage Plugin
 * @uses $wpdb
 *
 * @param string $table_name Table name
 * @param string $column_name Column name
 * @param string $drop_ddl SQL statement to drop column.
 * @return bool False on failure, true on success or doesn\'t exist.
 */",
 "/**
 * Check column matches criteria.
 *
 * Uses the SQL DESC for retrieving the table info for the column. It will help
 * understand the parameters, if you do more research on what column information
 * is returned by the SQL statement. Pass in null to skip checking that
 * criteria.
 *
 * Column names returned from DESC table are case sensitive and are listed:
 *      Field
 *      Type
 *      Null
 *      Key
 *      Default
 *      Extra
 *
 * @since 1.0.0
 * @package WordPress
 * @subpackage Plugin
 *
 * @param string $table_name Table name
 * @param string $col_name Column name
 * @param string $col_type Column type
 * @param bool $is_null Optional. Check is null.
 * @param mixed $key Optional. Key info.
 * @param mixed $default Optional. Default value.
 * @param mixed $extra Optional. Extra value.
 * @return bool True, if matches. False, if not matching.
 */",
 "/**
 * Pages widget class
 *
 * @since 2.8.0
 */",
 "/**
 * Links widget class
 *
 * @since 2.8.0
 */",
 "/**
 * Search widget class
 *
 * @since 2.8.0
 */",
 "/**
 * Archives widget class
 *
 * @since 2.8.0
 */",
 "/**
 * Meta widget class
 *
 * Displays log in/out, RSS feed links, etc.
 *
 * @since 2.8.0
 */",
 "/**
 * Calendar widget class
 *
 * @since 2.8.0
 */",
 "/**
 * Text widget class
 *
 * @since 2.8.0
 */",
 "/**
 * Categories widget class
 *
 * @since 2.8.0
 */",
 "/**
 * Recent_Posts widget class
 *
 * @since 2.8.0
 */",
 "/**
 * Recent_Comments widget class
 *
 * @since 2.8.0
 */",
 "/**
 * RSS widget class
 *
 * @since 2.8.0
 */",
 "/**
 * Display the RSS entries in a list.
 *
 * @since 2.5.0
 *
 * @param string|array|object $rss RSS url.
 * @param array $args Widget arguments.
 */",
 "/**
 * Display RSS widget options form.
 *
 * The options for what fields are displayed for the RSS form are all booleans
 * and are as follows: \'url\', \'title\', \'items\', \'show_summary\', \'show_author\',
 * \'show_date\'.
 *
 * @since 2.5.0
 *
 * @param array|string $args Values for input fields.
 * @param array $inputs Override default display options.
 */",
 "/**
 * Process RSS feed widget data and optionally retrieve feed items.
 *
 * The feed widget can not have more than 20 items or it will reset back to the
 * default, which is 10.
 *
 * The resulting array has the feed title, feed url, feed link (from channel),
 * feed items, error (if any), and whether to show summary, author, and date.
 * All respectively in the order of the array elements.
 *
 * @since 2.5.0
 *
 * @param array $widget_rss RSS widget feed data. Expects unescaped data.
 * @param bool $check_feed Optional, default is true. Whether to check feed for errors.
 * @return array
 */",
 "/**
 * Tag cloud widget class
 *
 * @since 2.8.0
 */",
 "/**
 * Navigation Menu widget class
 *
 * @since 3.0.0
 */",
 "/**
 * Register all of the default WordPress widgets on startup.
 *
 * Calls \'widgets_init\' action after all of the WordPress widgets have been
 * registered.
 *
 * @since 2.2.0
 */",
 "/**
	 * Generate HTML for a single row on the users.php admin panel.
	 *
	 * @since 2.1.0
	 *
	 * @param object $user_object
	 * @param string $style Optional. Attributes added to the TR element. Must be sanitized.
	 * @param string $role Key for the $wp_roles array.
	 * @param int $numposts Optional. Post count to display for this user. Defaults to zero, as in, a new user has made zero posts.
	 * @return string
	 */",
 "/**
 * Users List Table class.
 *
 * @package WordPress
 * @subpackage List_Table
 * @since 3.1.0
 * @access private
 */",
 "/**
 * Upgrade the core of WordPress.
 *
 * This will create a .maintenance file at the base of the WordPress directory
 * to ensure that people can not access the web site, when the files are being
 * copied to their locations.
 *
 * The files in the {@link $_old_files} list will be removed and the new files
 * copied from the zip file after the database is upgraded.
 *
 * The files in the {@link $_new_bundled_files} list will be added to the installation
 * if the version is greater than or equal to the old version being upgraded.
 *
 * The steps for the upgrader for after the new release is downloaded and
 * unzipped is:
 *   1. Test unzipped location for select files to ensure that unzipped worked.
 *   2. Create the .maintenance file in current WordPress base.
 *   3. Copy new WordPress directory over old WordPress files.
 *   4. Upgrade WordPress to new version.
 *     4.1. Copy all files/folders other than wp-content
 *     4.2. Copy any language files to WP_LANG_DIR (which may differ from WP_CONTENT_DIR
 *     4.3. Copy any new bundled themes/plugins to their respective locations
 *   5. Delete new WordPress directory path.
 *   6. Delete .maintenance file.
 *   7. Remove old files.
 *   8. Delete \'update_core\' option.
 *
 * There are several areas of failure. For instance if PHP times out before step
 * 6, then you will not be able to access any portion of your site. Also, since
 * the upgrade will not continue where it left off, you will not be able to
 * automatically remove old files and remove the \'update_core\' option. This
 * isn\'t that bad.
 *
 * If the copy of the new WordPress over the old fails, then the worse is that
 * the new WordPress directory will remain.
 *
 * If it is assumed that every file will be copied over, including plugins and
 * themes, then if you edit the default theme, you should rename it, so that
 * your changes remain.
 *
 * @since 2.7.0
 *
 * @param string $from New release unzipped path.
 * @param string $to Path to old WordPress installation.
 * @return WP_Error|null WP_Error on failure, null on success.
 */",
 "/**
 * Copies a directory from one location to another via the WordPress Filesystem Abstraction.
 * Assumes that WP_Filesystem() has already been called and setup.
 *
 * This is a temporary function for the 3.1 -> 3.2 upgrade only and will be removed in 3.3
 *
 * @ignore
 * @since 3.2.0
 * @see copy_dir()
 *
 * @param string $from source directory
 * @param string $to destination directory
 * @param array $skip_list a list of files/folders to skip copying
 * @return mixed WP_Error on failure, True on success.
 */",
 "/**
 * Redirect to the About WordPress page after a successful upgrade.
 *
 * This function is only needed when the existing install is older than 3.4.0.
 *
 * @since 3.3.0
 *
 */",
 "/**
 * Display JavaScript on the page.
 *
 * @package WordPress
 * @subpackage Permalink_Settings_Screen
 */",
 "/**
 * Retrieve Bookmark data
 *
 * @since 2.1.0
 * @uses $wpdb Database Object
 *
 * @param mixed $bookmark
 * @param string $output Optional. Either OBJECT, ARRAY_N, or ARRAY_A constant
 * @param string $filter Optional, default is \'raw\'.
 * @return array|object Type returned depends on $output value.
 */",
 "/**
 * Retrieve single bookmark data item or field.
 *
 * @since 2.3.0
 * @uses get_bookmark() Gets bookmark object using $bookmark as ID
 * @uses sanitize_bookmark_field() Sanitizes Bookmark field based on $context.
 *
 * @param string $field The name of the data field to return
 * @param int $bookmark The bookmark ID to get field
 * @param string $context Optional. The context of how the field will be used.
 * @return string
 */",
 "/**
 * Retrieves the list of bookmarks
 *
 * Attempts to retrieve from the cache first based on MD5 hash of arguments. If
 * that fails, then the query will be built from the arguments and executed. The
 * results will be stored to the cache.
 *
 * List of default arguments are as follows:
 * \'orderby\' - Default is \'name\' (string). How to order the links by. String is
 *		based off of the bookmark scheme.
 * \'order\' - Default is \'ASC\' (string). Either \'ASC\' or \'DESC\'. Orders in either
 *		ascending or descending order.
 * \'limit\' - Default is -1 (integer) or show all. The amount of bookmarks to
 *		display.
 * \'category\' - Default is empty string (string). Include the links in what
 *		category ID(s).
 * \'category_name\' - Default is empty string (string). Get links by category
 *		name.
 * \'hide_invisible\' - Default is 1 (integer). Whether to show (default) or hide
 *		links marked as \'invisible\'.
 * \'show_updated\' - Default is 0 (integer). Will show the time of when the
 *		bookmark was last updated.
 * \'include\' - Default is empty string (string). Include bookmark ID(s)
 *		separated by commas.
 * \'exclude\' - Default is empty string (string). Exclude bookmark ID(s)
 *		separated by commas.
 *
 * @since 2.1.0
 * @uses $wpdb Database Object
 * @link http://codex.wordpress.org/Template_Tags/get_bookmarks
 *
 * @param string|array $args List of arguments to overwrite the defaults
 * @return array List of bookmark row objects
 */",
 "/**
 * Sanitizes all bookmark fields
 *
 * @since 2.3.0
 *
 * @param object|array $bookmark Bookmark row
 * @param string $context Optional, default is \'display\'. How to filter the
 *		fields
 * @return object|array Same type as $bookmark but with fields sanitized.
 */",
 "/**
 * Sanitizes a bookmark field
 *
 * Sanitizes the bookmark fields based on what the field name is. If the field
 * has a strict value set, then it will be tested for that, else a more generic
 * filtering is applied. After the more strict filter is applied, if the
 * $context is \'raw\' then the value is immediately return.
 *
 * Hooks exist for the more generic cases. With the \'edit\' context, the
 * \'edit_$field\' filter will be called and passed the $value and $bookmark_id
 * respectively. With the \'db\' context, the \'pre_$field\' filter is called and
 * passed the value. The \'display\' context is the final context and has the
 * $field has the filter name and is passed the $value, $bookmark_id, and
 * $context respectively.
 *
 * @since 2.3.0
 *
 * @param string $field The bookmark field
 * @param mixed $value The bookmark field value
 * @param int $bookmark_id Bookmark ID
 * @param string $context How to filter the field value. Either \'raw\', \'edit\',
 *		\'attribute\', \'js\', \'db\', or \'display\'
 * @return mixed The filtered value
 */",
 "/**
 * Deletes bookmark cache
 *
 * @since 2.7.0
 * @uses wp_cache_delete() Deletes the contents of \'get_bookmarks\'
 */",
 "/**
	 * Constructor
	 *
	 * @since 2.0.0
	 */",
 "/**
	 * Set up the object properties.
	 *
	 * The role key is set to the current prefix for the $wpdb object with
	 * \'user_roles\' appended. If the $wp_user_roles global is set, then it will
	 * be used and the role option will not be updated or used.
	 *
	 * @since 2.1.0
	 * @access protected
	 * @uses $wpdb Used to get the database prefix.
	 * @global array $wp_user_roles Used to set the \'roles\' property value.
	 */",
 "/**
	 * Add role name with capabilities to list.
	 *
	 * Updates the list of roles, if the role doesn\'t already exist.
	 *
	 * The capabilities are defined in the following format `array( \'read\' => true );`
	 * To explicitly deny a role a capability you set the value for that capability to false.
	 *
	 * @since 2.0.0
	 * @access public
	 *
	 * @param string $role Role name.
	 * @param string $display_name Role display name.
	 * @param array $capabilities List of role capabilities in the above format.
	 * @return null|WP_Role WP_Role object if role is added, null if already exists.
	 */",
 "/**
	 * Remove role by name.
	 *
	 * @since 2.0.0
	 * @access public
	 *
	 * @param string $role Role name.
	 */",
 "/**
	 * Add capability to role.
	 *
	 * @since 2.0.0
	 * @access public
	 *
	 * @param string $role Role name.
	 * @param string $cap Capability name.
	 * @param bool $grant Optional, default is true. Whether role is capable of performing capability.
	 */",
 "/**
	 * Remove capability from role.
	 *
	 * @since 2.0.0
	 * @access public
	 *
	 * @param string $role Role name.
	 * @param string $cap Capability name.
	 */",
 "/**
	 * Retrieve role object by name.
	 *
	 * @since 2.0.0
	 * @access public
	 *
	 * @param string $role Role name.
	 * @return object|null Null, if role does not exist. WP_Role object, if found.
	 */",
 "/**
	 * Retrieve list of role names.
	 *
	 * @since 2.0.0
	 * @access public
	 *
	 * @return array List of role names.
	 */",
 "/**
	 * Whether role name is currently in the list of available roles.
	 *
	 * @since 2.0.0
	 * @access public
	 *
	 * @param string $role Role name to look up.
	 * @return bool
	 */",
 "/**
 * WordPress User Roles.
 *
 * The role option is simple, the structure is organized by role name that store
 * the name in value of the \'name\' key. The capabilities are stored as an array
 * in the value of the \'capability\' key.
 *
 * <code>
 * array (
 *		\'rolename\' => array (
 *			\'name\' => \'rolename\',
 *			\'capabilities\' => array()
 *		)
 * )
 * </code>
 *
 * @since 2.0.0
 * @package WordPress
 * @subpackage User
 */",
 "/**
	 * Constructor - Set up object properties.
	 *
	 * The list of capabilities, must have the key as the name of the capability
	 * and the value a boolean of whether it is granted to the role.
	 *
	 * @since 2.0.0
	 * @access public
	 *
	 * @param string $role Role name.
	 * @param array $capabilities List of capabilities.
	 */",
 "/**
	 * Assign role a capability.
	 *
	 * @see WP_Roles::add_cap() Method uses implementation for role.
	 * @since 2.0.0
	 * @access public
	 *
	 * @param string $cap Capability name.
	 * @param bool $grant Whether role has capability privilege.
	 */",
 "/**
	 * Remove capability from role.
	 *
	 * This is a container for {@link WP_Roles::remove_cap()} to remove the
	 * capability from the role. That is to say, that {@link
	 * WP_Roles::remove_cap()} implements the functionality, but it also makes
	 * sense to use this class, because you don\'t need to enter the role name.
	 *
	 * @since 2.0.0
	 * @access public
	 *
	 * @param string $cap Capability name.
	 */",
 "/**
	 * Whether role has capability.
	 *
	 * The capabilities is passed through the \'role_has_cap\' filter. The first
	 * parameter for the hook is the list of capabilities the class has
	 * assigned. The second parameter is the capability name to look for. The
	 * third and final parameter for the hook is the role name.
	 *
	 * @since 2.0.0
	 * @access public
	 *
	 * @param string $cap Capability name.
	 * @return bool True, if user has capability. False, if doesn\'t have capability.
	 */",
 "/**
 * WordPress Role class.
 *
 * @since 2.0.0
 * @package WordPress
 * @subpackage User
 */",
 "/**
	 * Constructor
	 *
	 * Retrieves the userdata and passes it to {@link WP_User::init()}.
	 *
	 * @since 2.0.0
	 * @access public
	 *
	 * @param int|string $id User\'s ID
	 * @param string $name Optional. User\'s username
	 * @param int $blog_id Optional Blog ID, defaults to current blog.
	 * @return WP_User
	 */",
 "/**
	 * Sets up object properties, including capabilities.
	 *
	 * @param object $data User DB row object
	 * @param int $blog_id Optional. The blog id to initialize for
	 */",
 "/**
	 * Return only the main user fields
	 *
	 * @since 3.3.0
	 *
	 * @param string $field The field to query against: \'id\', \'slug\', \'email\' or \'login\'
	 * @param string|int $value The field value
	 * @return object Raw user object
	 */",
 "/**
	 * Magic method for checking the existence of a certain custom field
	 *
	 * @since 3.3.0
	 */",
 "/**
	 * Magic method for accessing custom fields
	 *
	 * @since 3.3.0
	 */",
 "/**
	 * Magic method for setting custom fields
	 *
	 * @since 3.3.0
	 */",
 "/**
	 * Determine whether the user exists in the database.
	 *
	 * @since 3.4.0
	 * @access public
	 *
	 * @return bool True if user exists in the database, false if not.
	 */",
 "/**
	 * Retrieve the value of a property or meta key.
	 *
	 * Retrieves from the users and usermeta table.
	 *
	 * @since 3.3.0
	 *
	 * @param string $key Property
	 */",
 "/**
	 * Determine whether a property or meta key is set
	 *
	 * Consults the users and usermeta tables.
	 *
	 * @since 3.3.0
	 *
	 * @param string $key Property
	 */",
 "/**
	 * Set up capability object properties.
	 *
	 * Will set the value for the \'cap_key\' property to current database table
	 * prefix, followed by \'capabilities\'. Will then check to see if the
	 * property matching the \'cap_key\' exists and is an array. If so, it will be
	 * used.
	 *
	 * @access protected
	 * @since 2.1.0
	 *
	 * @param string $cap_key Optional capability key
	 */",
 "/**
	 * Retrieve all of the role capabilities and merge with individual capabilities.
	 *
	 * All of the capabilities of the roles the user belongs to are merged with
	 * the users individual roles. This also means that the user can be denied
	 * specific roles that their role might have, but the specific user isn\'t
	 * granted permission to.
	 *
	 * @since 2.0.0
	 * @uses $wp_roles
	 * @access public
	 */",
 "/**
	 * Add role to user.
	 *
	 * Updates the user\'s meta data option with capabilities and roles.
	 *
	 * @since 2.0.0
	 * @access public
	 *
	 * @param string $role Role name.
	 */",
 "/**
	 * Remove role from user.
	 *
	 * @since 2.0.0
	 * @access public
	 *
	 * @param string $role Role name.
	 */",
 "/**
	 * Set the role of the user.
	 *
	 * This will remove the previous roles of the user and assign the user the
	 * new one. You can set the role to an empty string and it will remove all
	 * of the roles from the user.
	 *
	 * @since 2.0.0
	 * @access public
	 *
	 * @param string $role Role name.
	 */",
 "/**
	 * Choose the maximum level the user has.
	 *
	 * Will compare the level from the $item parameter against the $max
	 * parameter. If the item is incorrect, then just the $max parameter value
	 * will be returned.
	 *
	 * Used to get the max level based on the capabilities the user has. This
	 * is also based on roles, so if the user is assigned the Administrator role
	 * then the capability \'level_10\' will exist and the user will get that
	 * value.
	 *
	 * @since 2.0.0
	 * @access public
	 *
	 * @param int $max Max level of user.
	 * @param string $item Level capability name.
	 * @return int Max Level.
	 */",
 "/**
	 * Update the maximum user level for the user.
	 *
	 * Updates the \'user_level\' user metadata (includes prefix that is the
	 * database table prefix) with the maximum user level. Gets the value from
	 * the all of the capabilities that the user has.
	 *
	 * @since 2.0.0
	 * @access public
	 */",
 "/**
	 * Add capability and grant or deny access to capability.
	 *
	 * @since 2.0.0
	 * @access public
	 *
	 * @param string $cap Capability name.
	 * @param bool $grant Whether to grant capability to user.
	 */",
 "/**
	 * Remove capability from user.
	 *
	 * @since 2.0.0
	 * @access public
	 *
	 * @param string $cap Capability name.
	 */",
 "/**
	 * Remove all of the capabilities of the user.
	 *
	 * @since 2.1.0
	 * @access public
	 */",
 "/**
	 * Whether user has capability or role name.
	 *
	 * This is useful for looking up whether the user has a specific role
	 * assigned to the user. The second optional parameter can also be used to
	 * check for capabilities against a specific object, such as a post or user.
	 *
	 * @since 2.0.0
	 * @access public
	 *
	 * @param string|int $cap Capability or role name to search.
	 * @return bool True, if user has capability; false, if user does not have capability.
	 */",
 "/**
	 * Convert numeric level to level capability name.
	 *
	 * Prepends \'level_\' to level number.
	 *
	 * @since 2.0.0
	 * @access public
	 *
	 * @param int $level Level number, 1 to 10.
	 * @return string
	 */",
 "/**
	 * Set the blog to operate on. Defaults to the current blog.
	 *
	 * @since 3.0.0
	 *
	 * @param int $blog_id Optional Blog ID, defaults to current blog.
	 */",
 "/**
 * WordPress User class.
 *
 * @since 2.0.0
 * @package WordPress
 * @subpackage User
 */",
 "/**
 * Map meta capabilities to primitive capabilities.
 *
 * This does not actually compare whether the user ID has the actual capability,
 * just what the capability or capabilities are. Meta capability list value can
 * be \'delete_user\', \'edit_user\', \'remove_user\', \'promote_user\', \'delete_post\',
 * \'delete_page\', \'edit_post\', \'edit_page\', \'read_post\', or \'read_page\'.
 *
 * @since 2.0.0
 *
 * @param string $cap Capability name.
 * @param int $user_id User ID.
 * @return array Actual capabilities for meta capability.
 */",
 "/**
 * Whether current user has capability or role.
 *
 * @since 2.0.0
 *
 * @param string $capability Capability or role name.
 * @return bool
 */",
 "/**
 * Whether current user has a capability or role for a given blog.
 *
 * @since 3.0.0
 *
 * @param int $blog_id Blog ID
 * @param string $capability Capability or role name.
 * @return bool
 */",
 "/**
 * Whether author of supplied post has capability or role.
 *
 * @since 2.9.0
 *
 * @param int|object $post Post ID or post object.
 * @param string $capability Capability or role name.
 * @return bool
 */",
 "/**
 * Whether a particular user has capability or role.
 *
 * @since 3.1.0
 *
 * @param int|object $user User ID or object.
 * @param string $capability Capability or role name.
 * @return bool
 */",
 "/**
 * Retrieve role object.
 *
 * @see WP_Roles::get_role() Uses method to retrieve role object.
 * @since 2.0.0
 *
 * @param string $role Role name.
 * @return object
 */",
 "/**
 * Add role, if it does not exist.
 *
 * @see WP_Roles::add_role() Uses method to add role.
 * @since 2.0.0
 *
 * @param string $role Role name.
 * @param string $display_name Display name for role.
 * @param array $capabilities List of capabilities, e.g. array( \'edit_posts\' => true, \'delete_posts\' => false );
 * @return null|WP_Role WP_Role object if role is added, null if already exists.
 */",
 "/**
 * Remove role, if it exists.
 *
 * @see WP_Roles::remove_role() Uses method to remove role.
 * @since 2.0.0
 *
 * @param string $role Role name.
 * @return null
 */",
 "/**
 * Retrieve a list of super admins.
 *
 * @since 3.0.0
 *
 * @uses $super_admins Super admins global variable, if set.
 *
 * @return array List of super admin logins
 */",
 "/**
 * Determine if user is a site admin.
 *
 * @since 3.0.0
 *
 * @param int $user_id (Optional) The ID of a user. Defaults to the current user.
 * @return bool True if the user is a site admin.
 */",
 "/**
 * Display JavaScript on the page.
 *
 * @package WordPress
 * @subpackage General_Settings_Screen
 */",
 "/**
 * Get the column headers for a screen
 *
 * @since 2.7.0
 *
 * @param string|WP_Screen $screen The screen you want the headers for
 * @return array Containing the headers in the format id => UI String
 */",
 "/**
 * Get a list of hidden columns.
 *
 * @since 2.7.0
 *
 * @param string|WP_Screen $screen The screen you want the hidden columns for
 * @return array
 */",
 "/**
 * Prints the meta box preferences for screen meta.
 *
 * @since 2.7.0
 *
 * @param string|WP_Screen $screen
 */",
 "/**
 * Get Hidden Meta Boxes
 *
 * @since 2.7.0
 *
 * @param string|WP_Screen $screen Screen identifier
 * @return array Hidden Meta Boxes
 */",
 "/**
 * Register and configure an admin screen option
 *
 * @since 3.1.0
 *
 * @param string $option An option name.
 * @param mixed $args Option-dependent arguments.
 */",
 "/**
 * Displays a screen icon.
 *
 * @uses get_screen_icon()
 * @since 2.7.0
 *
 * @param string|WP_Screen $screen Optional. Accepts a screen object (and defaults to the current screen object)
 * 	which it uses to determine an icon HTML ID. Or, if a string is provided, it is used to form the icon HTML ID.
 */",
 "/**
 * Gets a screen icon.
 *
 * @since 3.2.0
 *
 * @param string|WP_Screen $screen Optional. Accepts a screen object (and defaults to the current screen object)
 * 	which it uses to determine an icon HTML ID. Or, if a string is provided, it is used to form the icon HTML ID.
 * @return string HTML for the screen icon.
 */",
 "/**
 * Get the current screen object
 *
 * @since 3.1.0
 *
 * @return WP_Screen Current screen object
 */",
 "/**
 * Set the current screen object
 *
 * @since 3.0.0
 * @uses $current_screen
 *
 * @param mixed $hook_name Optional. The hook name (also known as the hook suffix) used to determine the screen,
 *	or an existing screen object.
 */",
 "/**
	 * Fetches a screen object.
 	 *
 	 * @since 3.3.0
	 * @access public
 	 *
	 * @param string $hook_name Optional. The hook name (also known as the hook suffix) used to determine the screen.
	 * 	Defaults to the current $hook_suffix global.
	 * @return WP_Screen Screen object.
 	 */",
 "/**
	 * Makes the screen object the current screen.
	 *
	 * @see set_current_screen()
	 * @since 3.3.0
	 */",
 "/**
	 * Constructor
	 *
	 * @since 3.3.0
	 * @access private
	 */",
 "/**
	 * Sets the old string-based contextual help for the screen.
	 *
	 * For backwards compatibility.
	 *
	 * @since 3.3.0
	 *
	 * @param WP_Screen $screen A screen object.
	 * @param string $help Help text.
	 */",
 "/**
	 * Set the parent information for the screen.
	 * This is called in admin-header.php after the menu parent for the screen has been determined.
	 *
	 * @since 3.3.0
	 *
	 * @param string $parent_file The parent file of the screen. Typically the $parent_file global.
	 */",
 "/**
	 * Adds an option for the screen.
	 * Call this in template files after admin.php is loaded and before admin-header.php is loaded to add screen options.
	 *
	 * @since 3.3.0
	 *
	 * @param string $option Option ID
	 * @param mixed $args Option-dependent arguments.
	 */",
 "/**
	 * Gets the arguments for an option for the screen.
	 *
	 * @since 3.3.0
	 *
	 * @param string $option Option ID.
	 * @param mixed $key Optional. Specific array key for when the option is an array.
	 */",
 "/**
	 * Gets the help tabs registered for the screen.
	 *
	 * @since 3.4.0
	 *
	 * @return array Help tabs with arguments.
	 */",
 "/**
	 * Gets the arguments for a help tab.
	 *
	 * @since 3.4.0
	 *
	 * @param string $id Help Tab ID.
	 * @return array Help tab arguments.
	 */",
 "/**
	 * Add a help tab to the contextual help for the screen.
	 * Call this on the load-$pagenow hook for the relevant screen.
	 *
	 * @since 3.3.0
	 *
	 * @param array $args
	 * - string   - title    - Title for the tab.
	 * - string   - id       - Tab ID. Must be HTML-safe.
	 * - string   - content  - Help tab content in plain text or HTML. Optional.
	 * - callback - callback - A callback to generate the tab content. Optional.
	 *
	 */",
 "/**
	 * Removes a help tab from the contextual help for the screen.
	 *
	 * @since 3.3.0
	 *
	 * @param string $id The help tab ID.
	 */",
 "/**
	 * Removes all help tabs from the contextual help for the screen.
	 *
	 * @since 3.3.0
	 */",
 "/**
	 * Gets the content from a contextual help sidebar.
	 *
	 * @since 3.4.0
	 *
	 * @return string Contents of the help sidebar.
	 */",
 "/**
	 * Add a sidebar to the contextual help for the screen.
	 * Call this in template files after admin.php is loaded and before admin-header.php is loaded to add a sidebar to the contextual help.
	 *
	 * @since 3.3.0
	 *
	 * @param string $content Sidebar content in plain text or HTML.
	 */",
 "/**
	 * Gets the number of layout columns the user has selected.
	 *
	 * The layout_columns option controls the max number and default number of
	 * columns. This method returns the number of columns within that range selected
	 * by the user via Screen Options. If no selection has been made, the default
	 * provisioned in layout_columns is returned. If the screen does not support
	 * selecting the number of layout columns, 0 is returned.
	 *
	 * @since 3.4.0
	 *
	 * @return int Number of columns to display.
	 */",
 "/**
	 * Render the screen\'s help section.
	 *
	 * This will trigger the deprecated filters for backwards compatibility.
	 *
	 * @since 3.3.0
	 */",
 "/**
	 * Render the screen options tab.
	 *
	 * @since 3.3.0
	 */",
 "/**
	 * Render the option for number of columns on the page
	 *
	 * @since 3.3.0
	 */",
 "/**
	 * Render the items per page option
	 *
	 * @since 3.3.0
	 */",
 "/**
 * A class representing the admin screen.
 *
 * @since 3.3.0
 * @access public
 */",
 "/**
 * Register all WordPress scripts.
 *
 * Localizes some of them.
 * args order: $scripts->add( \'handle\', \'url\', \'dependencies\', \'query-string\', 1 );
 * when last arg === 1 queues the script for the footer
 *
 * @since 2.6.0
 *
 * @param object $scripts WP_Scripts object.
 */",
 "/**
 * Assign default styles to $styles object.
 *
 * Nothing is returned, because the $styles parameter is passed by reference.
 * Meaning that whatever object is passed will be updated without having to
 * reassign the variable that was passed back to the same value. This saves
 * memory.
 *
 * Adding default styles is not the only task, it also assigns the base_url
 * property, the default version, and text direction for the object.
 *
 * @since 2.6.0
 *
 * @param object $styles
 */",
 "/**
 * Reorder JavaScript scripts array to place prototype before jQuery.
 *
 * @since 2.3.1
 *
 * @param array $js_array JavaScript scripts array
 * @return array Reordered array, if needed.
 */",
 "/**
 * Load localized data on print rather than initialization.
 *
 * These localizations require information that may not be loaded even by init.
 *
 * @since 2.5.0
 */",
 "/**
 * Administration Screen CSS for changing the styles.
 *
 * If installing the \'wp-admin/\' directory will be replaced with \'./\'.
 *
 * The $_wp_admin_css_colors global manages the Administration Screens CSS
 * stylesheet that is loaded. The option that is set is \'admin_color\' and is the
 * color and key for the array. The value for the color key is an object with
 * a \'url\' parameter that has the URL path to the CSS file.
 *
 * The query from $src parameter will be appended to the URL that is given from
 * the $_wp_admin_css_colors array value URL.
 *
 * @since 2.6.0
 * @uses $_wp_admin_css_colors
 *
 * @param string $src Source URL.
 * @param string $handle Either \'colors\' or \'colors-rtl\'.
 * @return string URL path to CSS stylesheet for Administration Screens.
 */",
 "/**
 * Prints the script queue in the HTML head on admin pages.
 *
 * Postpones the scripts that were queued for the footer.
 * print_footer_scripts() is called in the footer to print these scripts.
 *
 * @since 2.8
 * @see wp_print_scripts()
 */",
 "/**
 * Prints the scripts that were queued for the footer or too late for the HTML head.
 *
 * @since 2.8
 */",
 "/**
 * @internal use
 */",
 "/**
 * Prints the script queue in the HTML head on the front end.
 *
 * Postpones the scripts that were queued for the footer.
 * wp_print_footer_scripts() is called in the footer to print these scripts.
 *
 * @since 2.8
 */",
 "/**
 * Private, for use in *_footer_scripts hooks
 *
 * @since 3.3.0
 */",
 "/**
 * Hooks to print the scripts and styles in the footer.
 *
 * @since 2.8
 */",
 "/**
 * Wrapper for do_action(\'wp_enqueue_scripts\')
 *
 * Allows plugins to queue scripts for the front end using wp_enqueue_script().
 * Runs first in wp_head() where all is_home(), is_page(), etc. functions are available.
 *
 * @since 2.8
 */",
 "/**
 * Prints the styles queue in the HTML head on admin pages.
 *
 * @since 2.8
 */",
 "/**
 * Prints the styles that were queued too late for the HTML head.
 *
 * @since 3.3.0
 */",
 "/**
 * @internal use
 */",
 "/**
 * Determine the concatenation and compression settings for scripts and styles.
 *
 * @since 2.8
 */",
 "/**
 * Check for an existing network.
 *
 * @since 3.0.0
 * @return Whether a network exists.
 */",
 "/**
 * Allow subdomain install
 *
 * @since 3.0.0
 * @return bool Whether subdomain install is allowed
 */",
 "/**
 * Allow subdirectory install
 *
 * @since 3.0.0
 * @return bool Whether subdirectory install is allowed
 */",
 "/**
 * Get base domain of network.
 *
 * @since 3.0.0
 * @return string Base domain.
 */",
 "/**
 * Prints step 1 for Network installation process.
 *
 * @todo Realistically, step 1 should be a welcome screen explaining what a Network is and such. Navigating to Tools > Network
 * 	should not be a sudden \"Welcome to a new install process! Fill this out and click here.\" See also contextual help todo.
 *
 * @since 3.0.0
 */",
 "/**
 * Prints step 2 for Network installation process.
 *
 * @since 3.0.0
 */",
 "/**
	 * Fills up with the entries from MO file $filename
	 *
	 * @param string $filename MO file to load
	 */",
 "/**
	 * Build a Translation_Entry from original string and translation strings,
	 * found in a MO file
	 * 
	 * @static
	 * @param string $original original string to translate from MO file. Might contain
	 * 	0x04 as context separator or 0x00 as singular/plural separator
	 * @param string $translation translation string from MO file. Might contain
	 * 	0x00 as a plural translations separator
	 */",
 "/**
	 * Constructor - Register administration header callback.
	 *
	 * @since 2.1.0
	 * @param callback $admin_header_callback
	 * @param callback $admin_image_div_callback Optional custom image div output callback.
	 * @return Custom_Image_Header
	 */",
 "/**
	 * Set up the hooks for the Custom Header admin page.
	 *
	 * @since 2.1.0
	 */",
 "/**
	 * Adds contextual help.
	 *
	 * @since 3.0.0
	 */",
 "/**
	 * Get the current step.
	 *
	 * @since 2.6.0
	 *
	 * @return int Current step
	 */",
 "/**
	 * Set up the enqueue for the JavaScript files.
	 *
	 * @since 2.1.0
	 */",
 "/**
	 * Set up the enqueue for the CSS files
	 *
	 * @since 2.7
	 */",
 "/**
	 * Execute custom header modification.
	 *
	 * @since 2.6.0
	 */",
 "/**
	 * Process the default headers
	 *
	 * @since 3.0.0
	 */",
 "/**
	 * Display UI for selecting one of several default headers.
	 *
	 * Show the random image option if this theme has multiple header images.
	 * Random image option is on by default if no header has been set.
	 *
	 * @since 3.0.0
	 */",
 "/**
	 * Execute Javascript depending on step.
	 *
	 * @since 2.1.0
	 */",
 "/**
	 * Display Javascript based on Step 1 and 3.
	 *
	 * @since 2.6.0
	 */",
 "/**
	 * Display Javascript based on Step 2.
	 *
	 * @since 2.6.0
	 */",
 "/**
	 * Display first step of custom header image page.
	 *
	 * @since 2.1.0
	 */",
 "/**
	 * Display second step of custom header image page.
	 *
	 * @since 2.1.0
	 */",
 "/**
	 * Upload the file to be cropped in the second step.
	 *
	 * @since 3.4.0
	 */",
 "/**
	 * Display third step of custom header image page.
	 *
	 * @since 2.1.0
	 */",
 "/**
	 * Display last step of custom header image page.
	 *
	 * @since 2.1.0
	 */",
 "/**
	 * Display the page based on the current step.
	 *
	 * @since 2.1.0
	 */",
 "/**
	 * Replace default attachment actions with \"Set as header\" link.
	 *
	 * @since 3.4.0
	 */",
 "/**
	 * Leave only \"Media Library\" tab in the uploader window.
	 *
	 * @since 3.4.0
	 */",
 "/**
	 * Choose a header image, selected from existing uploaded and default headers,
	 * or provide an array of uploaded header data (either new, or from media library).
	 *
	 * @param mixed $choice Which header image to select. Allows for values of \'random-default-image\',
	 * 	for randomly cycling among the default images; \'random-uploaded-image\', for randomly cycling
	 * 	among the uploaded images; the key of a default image registered for that theme; and
	 * 	the key of an image uploaded for that theme (the basename of the URL).
	 *  Or an array of arguments: attachment_id, url, width, height. All are required.
	 *
	 * @since 3.4.0
	 */",
 "/**
	 * Remove a header image.
	 *
	 * @since 3.4.0
	 */",
 "/**
	 * Reset a header image to the default image for the theme.
	 *
	 * This method does not do anything if the theme does not have a default header image.
	 *
	 * @since 3.4.0
	 */",
 "/**
 * The custom header image class.
 *
 * @since 2.1.0
 * @package WordPress
 * @subpackage Administration
 */",
 "/**
	 * Constructor.
	 *
	 * @since 3.4.0
	 */",
 "/**
	 * Return true if it\'s an AJAX request.
	 *
	 * @since 3.4.0
	 */",
 "/**
	 * Custom wp_die wrapper. Returns either the standard message for UI
	 * or the AJAX message.
	 *
	 * @param  mixed $ajax_message AJAX return
	 * @param  mixed $message      UI message
	 *
	 * @since 3.4.0
	 */",
 "/**
	 * Return the AJAX wp_die() handler if it\'s a customized request.
	 *
	 * @since 3.4.0
	 */",
 "/**
	* Start preview and customize theme.
	*
	* Check if customize query variable exist. Init filters to filter the current theme.
	 *
	 * @since 3.4.0
	 */",
 "/**
	 * Start previewing the selected theme.
	 *
	 * Adds filters to change the current theme.
	 *
	 * @since 3.4.0
	 */",
 "/**
	 * Stop previewing the selected theme.
	 *
	 * Removes filters to change the current theme.
	 *
	 * @since 3.4.0
	 */",
 "/**
	 * Get the theme being customized.
	 *
	 * @since 3.4.0
	 *
	 * @return WP_Theme
	 */",
 "/**
	 * Get the registered settings.
	 *
	 * @since 3.4.0
	 *
	 * @return array
	 */",
 "/**
	 * Get the registered controls.
	 *
	 * @since 3.4.0
	 *
	 * @return array
	 */",
 "/**
	 * Get the registered sections.
	 *
	 * @since 3.4.0
	 *
	 * @return array
	 */",
 "/**
	 * Checks if the current theme is active.
	 *
	 * @since 3.4.0
	 *
	 * @return bool
	 */",
 "/**
	 * Register styles/scripts and initialize the preview of each setting
	 *
	 * @since 3.4.0
	 */",
 "/**
	 * Prevents AJAX requests from following redirects when previewing a theme
	 * by issuing a 200 response instead of a 30x.
	 *
	 * Instead, the JS will sniff out the location header.
	 *
	 * @since 3.4.0
	 */",
 "/**
	 * Decode the $_POST attribute used to override the WP_Customize_Setting values.
	 *
	 * @since 3.4.0
	 */",
 "/**
	 * Print javascript settings.
	 *
	 * @since 3.4.0
	 */",
 "/**
	 * Print base element for preview frame.
	 *
	 * @since 3.4.0
	 */",
 "/**
	 * Print a workaround to handle HTML5 tags in IE < 9
	 *
	 * @since 3.4.0
	 */",
 "/**
	 * Print javascript settings for preview frame.
	 *
	 * @since 3.4.0
	 */",
 "/**
	 * Prints a signature so we can ensure the customizer was properly executed.
	 *
	 * @since 3.4.0
	 */",
 "/**
	 * Removes the signature in case we experience a case where the customizer was not properly executed.
	 *
	 * @since 3.4.0
	 */",
 "/**
	 * Is it a theme preview?
	 *
	 * @since 3.4.0
	 *
	 * @return bool True if it\'s a preview, false if not.
	 */",
 "/**
	 * Retrieve the template name of the previewed theme.
	 *
	 * @since 3.4.0
	 *
	 * @return string Template name.
	 */",
 "/**
	 * Retrieve the stylesheet name of the previewed theme.
	 *
	 * @since 3.4.0
	 *
	 * @return string Stylesheet name.
	 */",
 "/**
	 * Retrieve the template root of the previewed theme.
	 *
	 * @since 3.4.0
	 *
	 * @return string Theme root.
	 */",
 "/**
	 * Retrieve the stylesheet root of the previewed theme.
	 *
	 * @since 3.4.0
	 *
	 * @return string Theme root.
	 */",
 "/**
	 * Filter the current theme and return the name of the previewed theme.
	 *
	 * @since 3.4.0
	 *
	 * @return string Theme name.
	 */",
 "/**
	 * Switch the theme and trigger the save action of each setting.
	 *
	 * @since 3.4.0
	 */",
 "/**
	 * Add a customize setting.
	 *
	 * @since 3.4.0
	 *
	 * @param string $id A specific ID of the setting. Can be a
	 *                   theme mod or option name.
	 * @param array $args Setting arguments.
	 */",
 "/**
	 * Retrieve a customize setting.
	 *
	 * @since 3.4.0
	 *
	 * @param string $id A specific ID of the setting.
	 * @return object The settings object.
	 */",
 "/**
	 * Remove a customize setting.
	 *
	 * @since 3.4.0
	 *
	 * @param string $id A specific ID of the setting.
	 */",
 "/**
	 * Add a customize section.
	 *
	 * @since 3.4.0
	 *
	 * @param string $id A specific ID of the section.
	 * @param array $args Section arguments.
	 */",
 "/**
	 * Retrieve a customize section.
	 *
	 * @since 3.4.0
	 *
	 * @param string $id A specific ID of the section.
	 * @return object The section object.
	 */",
 "/**
	 * Remove a customize section.
	 *
	 * @since 3.4.0
	 *
	 * @param string $id A specific ID of the section.
	 */",
 "/**
	 * Add a customize control.
	 *
	 * @since 3.4.0
	 *
	 * @param string $id A specific ID of the control.
	 * @param array $args Setting arguments.
	 */",
 "/**
	 * Retrieve a customize control.
	 *
	 * @since 3.4.0
	 *
	 * @param string $id A specific ID of the control.
	 * @return object The settings object.
	 */",
 "/**
	 * Remove a customize setting.
	 *
	 * @since 3.4.0
	 *
	 * @param string $id A specific ID of the control.
	 */",
 "/**
	 * Helper function to compare two objects by priority.
	 *
	 * @since 3.4.0
	 *
	 * @param object $a Object A.
	 * @param object $b Object B.
	 */",
 "/**
	 * Prepare settings and sections.
	 *
	 * @since 3.4.0
	 */",
 "/**
	 * Enqueue scripts for customize controls.
	 *
	 * @since 3.4.0
	 */",
 "/**
	 * Register some default controls.
	 *
	 * @since 3.4.0
	 */",
 "/**
	 * Callback for validating the header_textcolor value.
	 *
	 * Accepts \'blank\', and otherwise uses sanitize_hex_color_no_hash().
	 *
	 * @since 3.4.0
	 */",
 "/**
 * Customize
 *
 * @package WordPress
 * @subpackage Customize
 * @since 3.4.0
 */",
 "/**
 * Validates a hex color.
 *
 * Returns either \'\', a 3 or 6 digit hex color (with #), or null.
 * For validating values without a #, see sanitize_hex_color_no_hash().
 *
 * @since 3.4.0
 */",
 "/**
 * Sanitizes a hex color without a hash. Use sanitize_hex_color() when possible.
 *
 * Saving hex colors without a hash puts the burden of adding the hash on the
 * UI, which makes it difficult to use or upgrade to other color types such as
 * rgba, hsl, rgb, and html color names.
 *
 * Returns either \'\', a 3 or 6 digit hex color (without a #), or null.
 *
 * @since 3.4.0
 */",
 "/**
 * Ensures that any hex color is properly hashed.
 * Otherwise, returns value untouched.
 *
 * This method should only be necessary if using sanitize_hex_color_no_hash().
 *
 * @since 3.4.0
 */",
 "/**
 * Check if post has an image attached.
 *
 * @since 2.9.0
 *
 * @param int $post_id Optional. Post ID.
 * @return bool Whether post has an image attached.
 */",
 "/**
 * Retrieve Post Thumbnail ID.
 *
 * @since 2.9.0
 *
 * @param int $post_id Optional. Post ID.
 * @return int
 */",
 "/**
 * Display Post Thumbnail.
 *
 * @since 2.9.0
 *
 * @param int $size Optional. Image size. Defaults to \'post-thumbnail\', which theme sets using set_post_thumbnail_size( $width, $height, $crop_flag );.
 * @param string|array $attr Optional. Query string or array of attributes.
 */",
 "/**
 * Update cache for thumbnails in the current loop
 *
 * @since 3.2
 *
 * @param object $wp_query Optional. A WP_Query instance. Defaults to the $wp_query global.
 */",
 "/**
 * Retrieve Post Thumbnail.
 *
 * @since 2.9.0
 *
 * @param int $post_id Optional. Post ID.
 * @param string $size Optional. Image size. Defaults to \'post-thumbnail\'.
 * @param string|array $attr Optional. Query string or array of attributes.
 */",
 "/**
 * WP_HTTP_IXR_Client
 *
 * @package WordPress
 * @since 3.1.0
 *
 */",
 "/**
	 * Create a new SimplePie_Cache object
	 *
	 * @static
	 * @access public
	 */",
 "/**
 * @deprecated 3.0.0
 */",
 "/**
  * Determines if the available space defined by the admin has been exceeded by the user.
  *
  * @deprecated 3.0.0
  * @see is_upload_space_available()
 */",
 "/**
 * @deprecated 3.0.0
 */",
 "/**
 * @deprecated 3.0.0
 * @see activate_plugin()
 */",
 "/**
 * @deprecated 3.0.0
 * @see deactivate_sitewide_plugin()
 */",
 "/**
 * @deprecated 3.0.0
 * @see is_network_only_plugin()
 */",
 "/**
 * Schedules a hook to run only once.
 *
 * Schedules a hook which will be executed once by the WordPress actions core at
 * a time which you specify. The action will fire off when someone visits your
 * WordPress site, if the schedule time has passed.
 *
 * @since 2.1.0
 * @link http://codex.wordpress.org/Function_Reference/wp_schedule_single_event
 *
 * @param int $timestamp Timestamp for when to run the event.
 * @param string $hook Action hook to execute when cron is run.
 * @param array $args Optional. Arguments to pass to the hook\'s callback function.
 */",
 "/**
 * Schedule a periodic event.
 *
 * Schedules a hook which will be executed by the WordPress actions core on a
 * specific interval, specified by you. The action will trigger when someone
 * visits your WordPress site, if the scheduled time has passed.
 *
 * Valid values for the recurrence are hourly, daily and twicedaily. These can
 * be extended using the cron_schedules filter in wp_get_schedules().
 *
 * Use wp_next_scheduled() to prevent duplicates
 *
 * @since 2.1.0
 *
 * @param int $timestamp Timestamp for when to run the event.
 * @param string $recurrence How often the event should recur.
 * @param string $hook Action hook to execute when cron is run.
 * @param array $args Optional. Arguments to pass to the hook\'s callback function.
 * @return bool|null False on failure, null when complete with scheduling event.
 */",
 "/**
 * Reschedule a recurring event.
 *
 * @since 2.1.0
 *
 * @param int $timestamp Timestamp for when to run the event.
 * @param string $recurrence How often the event should recur.
 * @param string $hook Action hook to execute when cron is run.
 * @param array $args Optional. Arguments to pass to the hook\'s callback function.
 * @return bool|null False on failure. Null when event is rescheduled.
 */",
 "/**
 * Unschedule a previously scheduled cron job.
 *
 * The $timestamp and $hook parameters are required, so that the event can be
 * identified.
 *
 * @since 2.1.0
 *
 * @param int $timestamp Timestamp for when to run the event.
 * @param string $hook Action hook, the execution of which will be unscheduled.
 * @param array $args Arguments to pass to the hook\'s callback function.
 * Although not passed to a callback function, these arguments are used
 * to uniquely identify the scheduled event, so they should be the same
 * as those used when originally scheduling the event.
 */",
 "/**
 * Unschedule all cron jobs attached to a specific hook.
 *
 * @since 2.1.0
 *
 * @param string $hook Action hook, the execution of which will be unscheduled.
 * @param array $args Optional. Arguments that were to be pass to the hook\'s callback function.
 */",
 "/**
 * Retrieve the next timestamp for a cron event.
 *
 * @since 2.1.0
 *
 * @param string $hook Action hook to execute when cron is run.
 * @param array $args Optional. Arguments to pass to the hook\'s callback function.
 * @return bool|int The UNIX timestamp of the next time the scheduled event will occur.
 */",
 "/**
 * Send request to run cron through HTTP request that doesn\'t halt page loading.
 *
 * @since 2.1.0
 *
 * @return null Cron could not be spawned, because it is not needed to run.
 */",
 "/**
 * Run scheduled callbacks or spawn cron for all scheduled events.
 *
 * @since 2.1.0
 *
 * @return null When doesn\'t need to run Cron.
 */",
 "/**
 * Retrieve supported and filtered Cron recurrences.
 *
 * The supported recurrences are \'hourly\' and \'daily\'. A plugin may add more by
 * hooking into the \'cron_schedules\' filter. The filter accepts an array of
 * arrays. The outer array has a key that is the name of the schedule or for
 * example \'weekly\'. The value is an array with two keys, one is \'interval\' and
 * the other is \'display\'.
 *
 * The \'interval\' is a number in seconds of when the cron job should run. So for
 * \'hourly\', the time is 3600 or 60*60. For weekly, the value would be
 * 60*60*24*7 or 604800. The value of \'interval\' would then be 604800.
 *
 * The \'display\' is the description. For the \'weekly\' key, the \'display\' would
 * be <code>__(\'Once Weekly\')</code>.
 *
 * For your plugin, you will be passed an array. you can easily add your
 * schedule by doing the following.
 * <code>
 * // filter parameter variable name is \'array\'
 *	$array[\'weekly\'] = array(
 *		\'interval\' => 604800,
 *		\'display\' => __(\'Once Weekly\')
 *	);
 * </code>
 *
 * @since 2.1.0
 *
 * @return array
 */",
 "/**
 * Retrieve Cron schedule for hook with arguments.
 *
 * @since 2.1.0
 *
 * @param string $hook Action hook to execute when cron is run.
 * @param array $args Optional. Arguments to pass to the hook\'s callback function.
 * @return string|bool False, if no schedule. Schedule on success.
 */",
 "/**
 * Retrieve cron info array option.
 *
 * @since 2.1.0
 * @access private
 *
 * @return array CRON info array.
 */",
 "/**
 * Updates the CRON option with the new CRON array.
 *
 * @since 2.1.0
 * @access private
 *
 * @param array $cron Cron info array from {@link _get_cron_array()}.
 */",
 "/**
 * Upgrade a Cron info array.
 *
 * This function upgrades the Cron info array to version 2.
 *
 * @since 2.1.0
 * @access private
 *
 * @param array $cron Cron info array from {@link _get_cron_array()}.
 * @return array An upgraded Cron info array.
 */",
 "/**
 * Selects the first update version from the update_core option
 *
 * @return object the response from the API
 */",
 "/**
 * Get available core updates
 *
 * @param array $options Set $options[\'dismissed\'] to true to show dismissed upgrades too,
 * 	set $options[\'available\'] to false to skip not-dismissed updates.
 * @return array Array of the update objects
 */",
 "/**
 * Add metadata for the specified object.
 *
 * @since 2.9.0
 * @uses $wpdb WordPress database object for queries.
 * @uses do_action() Calls \'added_{$meta_type}_meta\' with meta_id of added metadata entry,
 * 		object ID, meta key, and meta value
 *
 * @param string $meta_type Type of object metadata is for (e.g., comment, post, or user)
 * @param int $object_id ID of the object metadata is for
 * @param string $meta_key Metadata key
 * @param string $meta_value Metadata value
 * @param bool $unique Optional, default is false. Whether the specified metadata key should be
 * 		unique for the object. If true, and the object already has a value for the specified
 * 		metadata key, no change will be made
 * @return bool The meta ID on successful update, false on failure.
 */",
 "/**
 * Update metadata for the specified object. If no value already exists for the specified object
 * ID and metadata key, the metadata will be added.
 *
 * @since 2.9.0
 * @uses $wpdb WordPress database object for queries.
 * @uses do_action() Calls \'update_{$meta_type}_meta\' before updating metadata with meta_id of
 * 		metadata entry to update, object ID, meta key, and meta value
 * @uses do_action() Calls \'updated_{$meta_type}_meta\' after updating metadata with meta_id of
 * 		updated metadata entry, object ID, meta key, and meta value
 *
 * @param string $meta_type Type of object metadata is for (e.g., comment, post, or user)
 * @param int $object_id ID of the object metadata is for
 * @param string $meta_key Metadata key
 * @param string $meta_value Metadata value
 * @param string $prev_value Optional. If specified, only update existing metadata entries with
 * 		the specified value. Otherwise, update all entries.
 * @return bool True on successful update, false on failure.
 */",
 "/**
 * Delete metadata for the specified object.
 *
 * @since 2.9.0
 * @uses $wpdb WordPress database object for queries.
 * @uses do_action() Calls \'deleted_{$meta_type}_meta\' after deleting with meta_id of
 * 		deleted metadata entries, object ID, meta key, and meta value
 *
 * @param string $meta_type Type of object metadata is for (e.g., comment, post, or user)
 * @param int $object_id ID of the object metadata is for
 * @param string $meta_key Metadata key
 * @param string $meta_value Optional. Metadata value. If specified, only delete metadata entries
 * 		with this value. Otherwise, delete all entries with the specified meta_key.
 * @param bool $delete_all Optional, default is false. If true, delete matching metadata entries
 * 		for all objects, ignoring the specified object_id. Otherwise, only delete matching
 * 		metadata entries for the specified object_id.
 * @return bool True on successful delete, false on failure.
 */",
 "/**
 * Retrieve metadata for the specified object.
 *
 * @since 2.9.0
 *
 * @param string $meta_type Type of object metadata is for (e.g., comment, post, or user)
 * @param int $object_id ID of the object metadata is for
 * @param string $meta_key Optional. Metadata key. If not specified, retrieve all metadata for
 * 		the specified object.
 * @param bool $single Optional, default is false. If true, return only the first value of the
 * 		specified meta_key. This parameter has no effect if meta_key is not specified.
 * @return string|array Single metadata value, or array of values
 */",
 "/**
 * Determine if a meta key is set for a given object
 *
 * @since 3.3.0
 *
 * @param string $meta_type Type of object metadata is for (e.g., comment, post, or user)
 * @param int $object_id ID of the object metadata is for
 * @param string $meta_key Metadata key.
 * @return boolean true of the key is set, false if not.
 */",
 "/**
 * Get meta data by meta ID
 *
 * @since 3.3.0
 *
 * @param string $meta_type Type of object metadata is for (e.g., comment, post, or user)
 * @param int $meta_id ID for a specific meta row
 * @return object Meta object or false.
 */",
 "/**
 * Update meta data by meta ID
 *
 * @since 3.3.0
 *
 * @uses get_metadata_by_mid() Calls get_metadata_by_mid() to fetch the meta key, value
 *		and object_id of the given meta_id.
 *
 * @param string $meta_type Type of object metadata is for (e.g., comment, post, or user)
 * @param int $meta_id ID for a specific meta row
 * @param string $meta_value Metadata value
 * @param string $meta_key Optional, you can provide a meta key to update it
 * @return bool True on successful update, false on failure.
 */",
 "/**
 * Delete meta data by meta ID
 *
 * @since 3.3.0
 *
 * @uses get_metadata_by_mid() Calls get_metadata_by_mid() to fetch the meta key, value
 *		and object_id of the given meta_id.
 *
 * @param string $meta_type Type of object metadata is for (e.g., comment, post, or user)
 * @param int $meta_id ID for a specific meta row
 * @return bool True on successful delete, false on failure.
 */",
 "/**
 * Update the metadata cache for the specified objects.
 *
 * @since 2.9.0
 * @uses $wpdb WordPress database object for queries.
 *
 * @param string $meta_type Type of object metadata is for (e.g., comment, post, or user)
 * @param int|array $object_ids array or comma delimited list of object IDs to update cache for
 * @return mixed Metadata cache for the specified objects, or false on failure.
 */",
 "/**
 * Given a meta query, generates SQL clauses to be appended to a main query
 *
 * @since 3.2.0
 *
 * @see WP_Meta_Query
 *
 * @param array $meta_query A meta query
 * @param string $type Type of meta
 * @param string $primary_table
 * @param string $primary_id_column
 * @param object $context (optional) The main query object
 * @return array( \'join\' => $join_sql, \'where\' => $where_sql )
 */",
 "/**
	 * Constructor
	 *
	 * @param array $meta_query (optional) A meta query
	 */",
 "/**
	 * Constructs a meta query based on \'meta_*\' query vars
	 *
	 * @since 3.2.0
	 * @access public
	 *
	 * @param array $qv The query variables
	 */",
 "/**
	 * Generates SQL clauses to be appended to a main query.
	 *
	 * @since 3.2.0
	 * @access public
	 *
	 * @param string $type Type of meta
	 * @param string $primary_table
	 * @param string $primary_id_column
	 * @param object $context (optional) The main query object
	 * @return array( \'join\' => $join_sql, \'where\' => $where_sql )
	 */",
 "/**
 * Container class for a multiple metadata query
 *
 * @since 3.2.0
 */",
 "/**
 * Retrieve the name of the metadata table for the specified object type.
 *
 * @since 2.9.0
 * @uses $wpdb WordPress database object for queries.
 *
 * @param string $type Type of object to get metadata table for (e.g., comment, post, or user)
 * @return mixed Metadata table name, or false if no metadata table exists
 */",
 "/**
 * Determine whether a meta key is protected
 *
 * @since 3.1.3
 *
 * @param string $meta_key Meta key
 * @return bool True if the key is protected, false otherwise.
 */",
 "/**
 * Sanitize meta value
 *
 * @since 3.1.3
 *
 * @param string $meta_key Meta key
 * @param mixed $meta_value Meta value to sanitize
 * @param string $meta_type Type of meta
 * @return mixed Sanitized $meta_value
 */",
 "/**
 * Register meta key
 *
 * @since 3.3.0
 *
 * @param string $meta_type Type of meta
 * @param string $meta_key Meta key
 * @param string|array $sanitize_callback A function or method to call when sanitizing the value of $meta_key.
 * @param string|array $auth_callback Optional. A function or method to call when performing edit_post_meta, add_post_meta, and delete_post_meta capability checks.
 * @param array $args Arguments
 */",
 "/**
	 * Exports headers to a PO entry
	 *
	 * @return string msgid/msgstr PO entry for this PO file headers, doesn\'t contain newline at the end
	 */",
 "/**
	 * Exports all entries to PO format
	 *
	 * @return string sequence of mgsgid/msgstr PO strings, doesn\'t containt newline at the end
	 */",
 "/**
	 * Exports the whole PO file as a string
	 *
	 * @param bool $include_headers whether to include the headers in the export
	 * @return string ready for inclusion in PO file string for headers and all the enrtries
	 */",
 "/**
	 * Same as {@link export}, but writes the result to a file
	 *
	 * @param string $filename where to write the PO string
	 * @param bool $include_headers whether to include tje headers in the export
	 * @return bool true on success, false on error
	 */",
 "/**
	 * Text to include as a comment before the start of the PO contents
	 * 
	 * Doesn\'t need to include # in the beginning of lines, these are added automatically
	 */",
 "/**
	*FormatsastringinPO-style
	*
	*@static
	*@paramstring$stringthestringtoformat
	*@returnstringthepoifiedstring
	*/",
 "/**
	*GivesbacktheoriginalstringfromaPO-formattedstring
	*
	*@static
	*@paramstring$stringPO-formattedstring
	*@returnstringenascapedstring
	*/",
 "/**
	*Inserts$withinthebeginningofeverynewlineof$stringand
	*returnsthemodifiedstring
	*
	*@static
	*@paramstring$stringprependlinesinthisstring
	*@paramstring$withprependlineswiththisstring
	*/",
 "/**
	*Prepareatextasacomment--wrapsthelinesandprepends#
	*andaspecialcharactertoeachline
	*
	*@accessprivate
	*@paramstring$textthecommenttext
	*@paramstring$charcharactertodenoteaspecialPOcomment,
	*	like:,defaultisaspace
	*/",
 "/**
	*BuildsastringfromtheentryforinclusioninPOfile
	*
	*@static
	*@paramobject&$entrytheentrytoconverttopostring
	*@returnstring|boolPO-styleformattedstringfortheentryor
	*	falseiftheentryisempty
	*/",
 "/**
 * Sets up theme defaults and registers support for various WordPress features.
 *
 * Note that this function is hooked into the after_setup_theme hook, which runs
 * before the init hook. The init hook is too late for some features, such as indicating
 * support post thumbnails.
 *
 * To override twentyten_setup() in a child theme, add your own twentyten_setup to your child theme\'s
 * functions.php file.
 *
 * @uses add_theme_support() To add support for post thumbnails, custom headers and backgrounds, and automatic feed links.
 * @uses register_nav_menus() To add support for navigation menus.
 * @uses add_editor_style() To style the visual editor.
 * @uses load_theme_textdomain() For translation/localization support.
 * @uses register_default_headers() To register the default custom header images provided with the theme.
 * @uses set_post_thumbnail_size() To set a custom post thumbnail size.
 *
 * @since Twenty Ten 1.0
 */",
 "/**
 * Styles the header image displayed on the Appearance > Header admin panel.
 *
 * Referenced via add_custom_image_header() in twentyten_setup().
 *
 * @since Twenty Ten 1.0
 */",
 "/**
 * Get our wp_nav_menu() fallback, wp_page_menu(), to show a home link.
 *
 * To override this in a child theme, remove the filter and optionally add
 * your own function tied to the wp_page_menu_args filter hook.
 *
 * @since Twenty Ten 1.0
 */",
 "/**
 * Sets the post excerpt length to 40 characters.
 *
 * To override this length in a child theme, remove the filter and add your own
 * function tied to the excerpt_length filter hook.
 *
 * @since Twenty Ten 1.0
 * @return int
 */",
 "/**
 * Returns a \"Continue Reading\" link for excerpts
 *
 * @since Twenty Ten 1.0
 * @return string \"Continue Reading\" link
 */",
 "/**
 * Replaces \"[...]\" (appended to automatically generated excerpts) with an ellipsis and twentyten_continue_reading_link().
 *
 * To override this in a child theme, remove the filter and add your own
 * function tied to the excerpt_more filter hook.
 *
 * @since Twenty Ten 1.0
 * @return string An ellipsis
 */",
 "/**
 * Adds a pretty \"Continue Reading\" link to custom post excerpts.
 *
 * To override this link in a child theme, remove the filter and add your own
 * function tied to the get_the_excerpt filter hook.
 *
 * @since Twenty Ten 1.0
 * @return string Excerpt with a pretty \"Continue Reading\" link
 */",
 "/**
 * Deprecated way to remove inline styles printed when the gallery shortcode is used.
 *
 * This function is no longer needed or used. Use the use_default_gallery_style
 * filter instead, as seen above.
 *
 * @since Twenty Ten 1.0
 * @deprecated Deprecated in Twenty Ten 1.2 for WordPress 3.1
 *
 * @return string The gallery style filter, with the styles themselves removed.
 */",
 "/**
 * Template for comments and pingbacks.
 *
 * To override this walker in a child theme without modifying the comments template
 * simply create your own twentyten_comment(), and that function will be used instead.
 *
 * Used as a callback by wp_list_comments() for displaying the comments.
 *
 * @since Twenty Ten 1.0
 */",
 "/**
 * Register widgetized areas, including two sidebars and four widget-ready columns in the footer.
 *
 * To override twentyten_widgets_init() in a child theme, remove the action hook and add your own
 * function tied to the init hook.
 *
 * @since Twenty Ten 1.0
 * @uses register_sidebar
 */",
 "/**
 * Removes the default styles that are packaged with the Recent Comments widget.
 *
 * To override this in a child theme, remove the filter and optionally add your own
 * function tied to the widgets_init action hook.
 *
 * This function uses a filter (show_recent_comments_widget_style) new in WordPress 3.1
 * to remove the default style. Using Twenty Ten 1.2 in WordPress 3.0 will show the styles,
 * but they won\'t have any effect on the widget in default Twenty Ten styling.
 *
 * @since Twenty Ten 1.0
 */",
 "/**
 * Prints HTML with meta information for the current post-date/time and author.
 *
 * @since Twenty Ten 1.0
 */",
 "/**
 * Prints HTML with meta information for the current post (category, tags and permalink).
 *
 * @since Twenty Ten 1.0
 */",
 "/**
 * Retrieves all category IDs.
 *
 * @since 2.0.0
 * @link http://codex.wordpress.org/Function_Reference/get_all_category_ids
 *
 * @return object List of all of the category IDs.
 */",
 "/**
 * Retrieve list of category objects.
 *
 * If you change the type to \'link\' in the arguments, then the link categories
 * will be returned instead. Also all categories will be updated to be backwards
 * compatible with pre-2.3 plugins and themes.
 *
 * @since 2.1.0
 * @see get_terms() Type of arguments that can be changed.
 * @link http://codex.wordpress.org/Function_Reference/get_categories
 *
 * @param string|array $args Optional. Change the defaults retrieving categories.
 * @return array List of categories.
 */",
 "/**
 * Retrieves category data given a category ID or category object.
 *
 * If you pass the $category parameter an object, which is assumed to be the
 * category row object retrieved the database. It will cache the category data.
 *
 * If you pass $category an integer of the category ID, then that category will
 * be retrieved from the database, if it isn\'t already cached, and pass it back.
 *
 * If you look at get_term(), then both types will be passed through several
 * filters and finally sanitized based on the $filter parameter value.
 *
 * The category will converted to maintain backwards compatibility.
 *
 * @since 1.5.1
 * @uses get_term() Used to get the category data from the taxonomy.
 *
 * @param int|object $category Category ID or Category row object
 * @param string $output Optional. Constant OBJECT, ARRAY_A, or ARRAY_N
 * @param string $filter Optional. Default is raw or no WordPress defined filter will applied.
 * @return mixed Category data in type defined by $output parameter.
 */",
 "/**
 * Retrieve category based on URL containing the category slug.
 *
 * Breaks the $category_path parameter up to get the category slug.
 *
 * Tries to find the child path and will return it. If it doesn\'t find a
 * match, then it will return the first category matching slug, if $full_match,
 * is set to false. If it does not, then it will return null.
 *
 * It is also possible that it will return a WP_Error object on failure. Check
 * for it when using this function.
 *
 * @since 2.1.0
 *
 * @param string $category_path URL containing category slugs.
 * @param bool $full_match Optional. Whether full path should be matched.
 * @param string $output Optional. Constant OBJECT, ARRAY_A, or ARRAY_N
 * @return null|object|array Null on failure. Type is based on $output value.
 */",
 "/**
 * Retrieve category object by category slug.
 *
 * @since 2.3.0
 *
 * @param string $slug The category slug.
 * @return object Category data object
 */",
 "/**
 * Retrieve the ID of a category from its name.
 *
 * @since 1.0.0
 *
 * @param string $cat_name Optional. Default is \'General\' and can be any category name.
 * @return int 0, if failure and ID of category on success.
 */",
 "/**
 * Retrieve the name of a category from its ID.
 *
 * @since 1.0.0
 *
 * @param int $cat_id Category ID
 * @return string Category name, or an empty string if category doesn\'t exist.
 */",
 "/**
 * Check if a category is an ancestor of another category.
 *
 * You can use either an id or the category object for both parameters. If you
 * use an integer the category will be retrieved.
 *
 * @since 2.1.0
 *
 * @param int|object $cat1 ID or object to check if this is the parent category.
 * @param int|object $cat2 The child category.
 * @return bool Whether $cat2 is child of $cat1
 */",
 "/**
 * Sanitizes category data based on context.
 *
 * @since 2.3.0
 * @uses sanitize_term() See this function for what context are supported.
 *
 * @param object|array $category Category data
 * @param string $context Optional. Default is \'display\'.
 * @return object|array Same type as $category with sanitized data for safe use.
 */",
 "/**
 * Sanitizes data in single category key field.
 *
 * @since 2.3.0
 * @uses sanitize_term_field() See function for more details.
 *
 * @param string $field Category key to sanitize
 * @param mixed $value Category value to sanitize
 * @param int $cat_id Category ID
 * @param string $context What filter to use, \'raw\', \'display\', etc.
 * @return mixed Same type as $value after $value has been sanitized.
 */",
 "/**
 * Retrieves all post tags.
 *
 * @since 2.3.0
 * @see get_terms() For list of arguments to pass.
 * @uses apply_filters() Calls \'get_tags\' hook on array of tags and with $args.
 *
 * @param string|array $args Tag arguments to use when retrieving tags.
 * @return array List of tags.
 */",
 "/**
 * Retrieve post tag by tag ID or tag object.
 *
 * If you pass the $tag parameter an object, which is assumed to be the tag row
 * object retrieved the database. It will cache the tag data.
 *
 * If you pass $tag an integer of the tag ID, then that tag will
 * be retrieved from the database, if it isn\'t already cached, and pass it back.
 *
 * If you look at get_term(), then both types will be passed through several
 * filters and finally sanitized based on the $filter parameter value.
 *
 * @since 2.3.0
 *
 * @param int|object $tag
 * @param string $output Optional. Constant OBJECT, ARRAY_A, or ARRAY_N
 * @param string $filter Optional. Default is raw or no WordPress defined filter will applied.
 * @return object|array Return type based on $output value.
 */",
 "/**
 * Remove the category cache data based on ID.
 *
 * @since 2.1.0
 * @uses clean_term_cache() Clears the cache for the category based on ID
 *
 * @param int $id Category ID
 */",
 "/**
 * Update category structure to old pre 2.3 from new taxonomy structure.
 *
 * This function was added for the taxonomy support to update the new category
 * structure with the old category one. This will maintain compatibility with
 * plugins and themes which depend on the old key or property names.
 *
 * The parameter should only be passed a variable and not create the array or
 * object inline to the parameter. The reason for this is that parameter is
 * passed by reference and PHP will fail unless it has the variable.
 *
 * There is no return value, because everything is updated on the variable you
 * pass to it. This is one of the features with using pass by reference in PHP.
 *
 * @since 2.3.0
 * @access private
 *
 * @param array|object $category Category Row object or array
 */",
 "/**
	 * Send a HTTP request to a URI.
	 *
	 * The body and headers are part of the arguments. The \'body\' argument is for the body and will
	 * accept either a string or an array. The \'headers\' argument should be an array, but a string
	 * is acceptable. If the \'body\' argument is an array, then it will automatically be escaped
	 * using http_build_query().
	 *
	 * The only URI that are supported in the HTTP Transport implementation are the HTTP and HTTPS
	 * protocols. HTTP and HTTPS are assumed so the server might not know how to handle the send
	 * headers. Other protocols are unsupported and most likely will fail.
	 *
	 * The defaults are \'method\', \'timeout\', \'redirection\', \'httpversion\', \'blocking\' and
	 * \'user-agent\'.
	 *
	 * Accepted \'method\' values are \'GET\', \'POST\', and \'HEAD\', some transports technically allow
	 * others, but should not be assumed. The \'timeout\' is used to sent how long the connection
	 * should stay open before failing when no response. \'redirection\' is used to track how many
	 * redirects were taken and used to sent the amount for other transports, but not all transports
	 * accept setting that value.
	 *
	 * The \'httpversion\' option is used to sent the HTTP version and accepted values are \'1.0\', and
	 * \'1.1\' and should be a string. Version 1.1 is not supported, because of chunk response. The
	 * \'user-agent\' option is the user-agent and is used to replace the default user-agent, which is
	 * \'WordPress/WP_Version\', where WP_Version is the value from $wp_version.
	 *
	 * \'blocking\' is the default, which is used to tell the transport, whether it should halt PHP
	 * while it performs the request or continue regardless. Actually, that isn\'t entirely correct.
	 * Blocking mode really just means whether the fread should just pull what it can whenever it
	 * gets bytes or if it should wait until it has enough in the buffer to read or finishes reading
	 * the entire content. It doesn\'t actually always mean that PHP will continue going after making
	 * the request.
	 *
	 * @access public
	 * @since 2.7.0
	 * @todo Refactor this code. The code in this method extends the scope of its original purpose
	 *		and should be refactored to allow for cleaner abstraction and reduce duplication of the
	 *		code. One suggestion is to create a class specifically for the arguments, however
	 *		preliminary refactoring to this affect has affect more than just the scope of the
	 *		arguments. Something to ponder at least.
	 *
	 * @param string $url URI resource.
	 * @param str|array $args Optional. Override the defaults.
	 * @return array|object Array containing \'headers\', \'body\', \'response\', \'cookies\', \'filename\'. A WP_Error instance upon error
	 */",
 "/**
	 * Tests which transports are capable of supporting the request.
	 *
	 * @since 3.2.0
	 * @access private
	 *
	 * @param array $args Request arguments
	 * @param string $url URL to Request
	 *
	 * @return string|false Class name for the first transport that claims to support the request. False if no transport claims to support the request.
	 */",
 "/**
	 * Dispatches a HTTP request to a supporting transport.
	 *
	 * Tests each transport in order to find a transport which matches the request arguments.
	 * Also caches the transport instance to be used later.
	 *
	 * The order for blocking requests is cURL, Streams, and finally Fsockopen.
	 * The order for non-blocking requests is cURL, Streams and Fsockopen().
	 *
	 * There are currently issues with \"localhost\" not resolving correctly with DNS. This may cause
	 * an error \"failed to open stream: A connection attempt failed because the connected party did
	 * not properly respond after a period of time, or established connection failed because [the]
	 * connected host has failed to respond.\"
	 *
	 * @since 3.2.0
	 * @access private
	 *
	 * @param string $url URL to Request
	 * @param array $args Request arguments
	 * @return array|object Array containing \'headers\', \'body\', \'response\', \'cookies\', \'filename\'. A WP_Error instance upon error
	 */",
 "/**
	 * Uses the POST HTTP method.
	 *
	 * Used for sending data that is expected to be in the body.
	 *
	 * @access public
	 * @since 2.7.0
	 *
	 * @param string $url URI resource.
	 * @param str|array $args Optional. Override the defaults.
	 * @return array|object Array containing \'headers\', \'body\', \'response\', \'cookies\', \'filename\'. A WP_Error instance upon error
	 */",
 "/**
	 * Uses the GET HTTP method.
	 *
	 * Used for sending data that is expected to be in the body.
	 *
	 * @access public
	 * @since 2.7.0
	 *
	 * @param string $url URI resource.
	 * @param str|array $args Optional. Override the defaults.
	 * @return array|object Array containing \'headers\', \'body\', \'response\', \'cookies\', \'filename\'. A WP_Error instance upon error
	 */",
 "/**
	 * Uses the HEAD HTTP method.
	 *
	 * Used for sending data that is expected to be in the body.
	 *
	 * @access public
	 * @since 2.7.0
	 *
	 * @param string $url URI resource.
	 * @param str|array $args Optional. Override the defaults.
	 * @return array|object Array containing \'headers\', \'body\', \'response\', \'cookies\', \'filename\'. A WP_Error instance upon error
	 */",
 "/**
	 * Parses the responses and splits the parts into headers and body.
	 *
	 * @access public
	 * @static
	 * @since 2.7.0
	 *
	 * @param string $strResponse The full response string
	 * @return array Array with \'headers\' and \'body\' keys.
	 */",
 "/**
	 * Transform header string into an array.
	 *
	 * If an array is given then it is assumed to be raw header data with numeric keys with the
	 * headers as the values. No headers must be passed that were already processed.
	 *
	 * @access public
	 * @static
	 * @since 2.7.0
	 *
	 * @param string|array $headers
	 * @return array Processed string headers. If duplicate headers are encountered,
	 * 					Then a numbered array is returned as the value of that header-key.
	 */",
 "/**
	 * Takes the arguments for a ::request() and checks for the cookie array.
	 *
	 * If it\'s found, then it\'s assumed to contain WP_Http_Cookie objects, which are each parsed
	 * into strings and added to the Cookie: header (within the arguments array). Edits the array by
	 * reference.
	 *
	 * @access public
	 * @version 2.8.0
	 * @static
	 *
	 * @param array $r Full array of args passed into ::request()
	 */",
 "/**
	 * Decodes chunk transfer-encoding, based off the HTTP 1.1 specification.
	 *
	 * Based off the HTTP http_encoding_dechunk function. Does not support UTF-8. Does not support
	 * returning footer headers. Shouldn\'t be too difficult to support it though.
	 *
	 * @todo Add support for footer chunked headers.
	 * @access public
	 * @since 2.7.0
	 * @static
	 *
	 * @param string $body Body content
	 * @return string Chunked decoded body on success or raw body on failure.
	 */",
 "/**
	 * Block requests through the proxy.
	 *
	 * Those who are behind a proxy and want to prevent access to certain hosts may do so. This will
	 * prevent plugins from working and core functionality, if you don\'t include api.wordpress.org.
	 *
	 * You block external URL requests by defining WP_HTTP_BLOCK_EXTERNAL as true in your wp-config.php
	 * file and this will only allow localhost and your blog to make requests. The constant
	 * WP_ACCESSIBLE_HOSTS will allow additional hosts to go through for requests. The format of the
	 * WP_ACCESSIBLE_HOSTS constant is a comma separated list of hostnames to allow, wildcard domains
	 * are supported, eg *.wordpress.org will allow for all subdomains of wordpress.org to be contacted.
	 *
	 * @since 2.8.0
	 * @link http://core.trac.wordpress.org/ticket/8927 Allow preventing external requests.
	 * @link http://core.trac.wordpress.org/ticket/14636 Allow wildcard domains in WP_ACCESSIBLE_HOSTS
	 *
	 * @param string $uri URI of url.
	 * @return bool True to block, false to allow.
	 */",
 "/**
 * WordPress HTTP Class for managing HTTP Transports and making HTTP requests.
 *
 * This class is called for the functionality of making HTTP requests and replaces Snoopy
 * functionality. There is no available functionality to add HTTP transport implementations, since
 * most of the HTTP transports are added and available for use.
 *
 * There are no properties, because none are needed and for performance reasons. Some of the
 * functions are static and while they do have some overhead over functions in PHP4, the purpose is
 * maintainability. When PHP5 is finally the requirement, it will be easy to add the static keyword
 * to the code. It is not as easy to convert a function to a method after enough code uses the old
 * way.
 *
 * Debugging includes several actions, which pass different variables for debugging the HTTP API.
 *
 * @package WordPress
 * @subpackage HTTP
 * @since 2.7.0
 */",
 "/**
	 * Send a HTTP request to a URI using fsockopen().
	 *
	 * Does not support non-blocking mode.
	 *
	 * @see WP_Http::request For default options descriptions.
	 *
	 * @since 2.7
	 * @access public
	 * @param string $url URI resource.
	 * @param str|array $args Optional. Override the defaults.
	 * @return array \'headers\', \'body\', \'response\', \'cookies\' and \'filename\' keys.
	 */",
 "/**
	 * Whether this class can be used for retrieving an URL.
	 *
	 * @since 2.7.0
	 * @static
	 * @return boolean False means this class can not be used, true means it can.
	 */",
 "/**
 * HTTP request method uses fsockopen function to retrieve the url.
 *
 * This would be the preferred method, but the fsockopen implementation has the most overhead of all
 * the HTTP transport implementations.
 *
 * @package WordPress
 * @subpackage HTTP
 * @since 2.7.0
 */",
 "/**
	 * Send a HTTP request to a URI using streams with fopen().
	 *
	 * @access public
	 * @since 2.7.0
	 *
	 * @param string $url
	 * @param str|array $args Optional. Override the defaults.
	 * @return array \'headers\', \'body\', \'response\', \'cookies\' and \'filename\' keys.
	 */",
 "/**
	 * Whether this class can be used for retrieving an URL.
	 *
	 * @static
	 * @access public
	 * @since 2.7.0
	 *
	 * @return boolean False means this class can not be used, true means it can.
	 */",
 "/**
 * HTTP request method uses Streams to retrieve the url.
 *
 * Requires PHP 5.0+ and uses fopen with stream context. Requires that \'allow_url_fopen\' PHP setting
 * to be enabled.
 *
 * Second preferred method for getting the URL, for PHP 5.
 *
 * @package WordPress
 * @subpackage HTTP
 * @since 2.7.0
 */",
 "/**
	 * Send a HTTP request to a URI using cURL extension.
	 *
	 * @access public
	 * @since 2.7.0
	 *
	 * @param string $url
	 * @param str|array $args Optional. Override the defaults.
	 * @return array \'headers\', \'body\', \'response\', \'cookies\' and \'filename\' keys.
	 */",
 "/**
	 * Grab the headers of the cURL request
	 *
	 * Each header is sent individually to this callback, so we append to the $header property for temporary storage
	 *
	 * @since 3.2.0
	 * @access private
	 * @return int
	 */",
 "/**
	 * Whether this class can be used for retrieving an URL.
	 *
	 * @static
	 * @since 2.7.0
	 *
	 * @return boolean False means this class can not be used, true means it can.
	 */",
 "/**
 * HTTP request method uses Curl extension to retrieve the url.
 *
 * Requires the Curl extension to be installed.
 *
 * @package WordPress
 * @subpackage HTTP
 * @since 2.7
 */",
 "/**
	 * Whether proxy connection should be used.
	 *
	 * @since 2.8
	 * @use WP_PROXY_HOST
	 * @use WP_PROXY_PORT
	 *
	 * @return bool
	 */",
 "/**
	 * Whether authentication should be used.
	 *
	 * @since 2.8
	 * @use WP_PROXY_USERNAME
	 * @use WP_PROXY_PASSWORD
	 *
	 * @return bool
	 */",
 "/**
	 * Retrieve the host for the proxy server.
	 *
	 * @since 2.8
	 *
	 * @return string
	 */",
 "/**
	 * Retrieve the port for the proxy server.
	 *
	 * @since 2.8
	 *
	 * @return string
	 */",
 "/**
	 * Retrieve the username for proxy authentication.
	 *
	 * @since 2.8
	 *
	 * @return string
	 */",
 "/**
	 * Retrieve the password for proxy authentication.
	 *
	 * @since 2.8
	 *
	 * @return string
	 */",
 "/**
	 * Retrieve authentication string for proxy authentication.
	 *
	 * @since 2.8
	 *
	 * @return string
	 */",
 "/**
	 * Retrieve header string for proxy authentication.
	 *
	 * @since 2.8
	 *
	 * @return string
	 */",
 "/**
	 * Whether URL should be sent through the proxy server.
	 *
	 * We want to keep localhost and the blog URL from being sent through the proxy server, because
	 * some proxies can not handle this. We also have the constant available for defining other
	 * hosts that won\'t be sent through the proxy.
	 *
	 * @uses WP_PROXY_BYPASS_HOSTS
	 * @since 2.8.0
	 *
	 * @param string $uri URI to check.
	 * @return bool True, to send through the proxy and false if, the proxy should not be used.
	 */",
 "/**
 * Adds Proxy support to the WordPress HTTP API.
 *
 * There are caveats to proxy support. It requires that defines be made in the wp-config.php file to
 * enable proxy support. There are also a few filters that plugins can hook into for some of the
 * constants.
 *
 * Please note that only BASIC authentication is supported by most transports.
 * cURL MAY support more methods (such as NTLM authentication) depending on your environment.
 *
 * The constants are as follows:
 * <ol>
 * <li>WP_PROXY_HOST - Enable proxy support and host for connecting.</li>
 * <li>WP_PROXY_PORT - Proxy port for connection. No default, must be defined.</li>
 * <li>WP_PROXY_USERNAME - Proxy username, if it requires authentication.</li>
 * <li>WP_PROXY_PASSWORD - Proxy password, if it requires authentication.</li>
 * <li>WP_PROXY_BYPASS_HOSTS - Will prevent the hosts in this list from going through the proxy.
 * You do not need to have localhost and the blog host in this list, because they will not be passed
 * through the proxy. The list should be presented in a comma separated list, wildcards using * are supported, eg. *.wordpress.org</li>
 * </ol>
 *
 * An example can be as seen below.
 * <code>
 * define(\'WP_PROXY_HOST\', \'192.168.84.101\');
 * define(\'WP_PROXY_PORT\', \'8080\');
 * define(\'WP_PROXY_BYPASS_HOSTS\', \'localhost, www.example.com, *.wordpress.org\');
 * </code>
 *
 * @link http://core.trac.wordpress.org/ticket/4011 Proxy support ticket in WordPress.
 * @link http://core.trac.wordpress.org/ticket/14636 Allow wildcard domains in WP_PROXY_BYPASS_HOSTS
 * @since 2.8
 */",
 "/**
	 * Sets up this cookie object.
	 *
	 * The parameter $data should be either an associative array containing the indices names below
	 * or a header string detailing it.
	 *
	 * If it\'s an array, it should include the following elements:
	 * <ol>
	 * <li>Name</li>
	 * <li>Value - should NOT be urlencoded already.</li>
	 * <li>Expires - (optional) String or int (UNIX timestamp).</li>
	 * <li>Path (optional)</li>
	 * <li>Domain (optional)</li>
	 * </ol>
	 *
	 * @access public
	 * @since 2.8.0
	 *
	 * @param string|array $data Raw cookie data.
	 */",
 "/**
	 * Confirms that it\'s OK to send this cookie to the URL checked against.
	 *
	 * Decision is based on RFC 2109/2965, so look there for details on validity.
	 *
	 * @access public
	 * @since 2.8.0
	 *
	 * @param string $url URL you intend to send this cookie to
	 * @return boolean true if allowed, false otherwise.
	 */",
 "/**
	 * Convert cookie name and value back to header string.
	 *
	 * @access public
	 * @since 2.8.0
	 *
	 * @return string Header encoded cookie name and value.
	 */",
 "/**
	 * Retrieve cookie header for usage in the rest of the WordPress HTTP API.
	 *
	 * @access public
	 * @since 2.8.0
	 *
	 * @return string
	 */",
 "/**
 * Internal representation of a single cookie.
 *
 * Returned cookies are represented using this class, and when cookies are set, if they are not
 * already a WP_Http_Cookie() object, then they are turned into one.
 *
 * @todo The WordPress convention is to use underscores instead of camelCase for function and method
 * names. Need to switch to use underscores instead for the methods.
 *
 * @package WordPress
 * @subpackage HTTP
 * @since 2.8.0
 */",
 "/**
	 * Compress raw string using the deflate format.
	 *
	 * Supports the RFC 1951 standard.
	 *
	 * @since 2.8
	 *
	 * @param string $raw String to compress.
	 * @param int $level Optional, default is 9. Compression level, 9 is highest.
	 * @param string $supports Optional, not used. When implemented it will choose the right compression based on what the server supports.
	 * @return string|bool False on failure.
	 */",
 "/**
	 * Decompression of deflated string.
	 *
	 * Will attempt to decompress using the RFC 1950 standard, and if that fails
	 * then the RFC 1951 standard deflate will be attempted. Finally, the RFC
	 * 1952 standard gzip decode will be attempted. If all fail, then the
	 * original compressed string will be returned.
	 *
	 * @since 2.8
	 *
	 * @param string $compressed String to decompress.
	 * @param int $length The optional length of the compressed data.
	 * @return string|bool False on failure.
	 */",
 "/**
	 * Decompression of deflated string while staying compatible with the majority of servers.
	 *
	 * Certain Servers will return deflated data with headers which PHP\'s gziniflate()
	 * function cannot handle out of the box. The following function has been created from
	 * various snippets on the gzinflate() PHP documentation.
	 *
	 * Warning: Magic numbers within. Due to the potential different formats that the compressed
	 * data may be returned in, some \"magic offsets\" are needed to ensure proper decompression
	 * takes place. For a simple progmatic way to determine the magic offset in use, see:
	 * http://core.trac.wordpress.org/ticket/18273
	 *
	 * @since 2.8.1
	 * @link http://core.trac.wordpress.org/ticket/18273
	 * @link http://au2.php.net/manual/en/function.gzinflate.php#70875
	 * @link http://au2.php.net/manual/en/function.gzinflate.php#77336
	 *
	 * @param string $gzData String to decompress.
	 * @return string|bool False on failure.
	 */",
 "/**
	 * What encoding types to accept and their priority values.
	 *
	 * @since 2.8
	 *
	 * @return string Types of encoding to accept.
	 */",
 "/**
	 * What encoding the content used when it was compressed to send in the headers.
	 *
	 * @since 2.8
	 *
	 * @return string Content-Encoding string to send in the header.
	 */",
 "/**
	 * Whether the content be decoded based on the headers.
	 *
	 * @since 2.8
	 *
	 * @param array|string $headers All of the available headers.
	 * @return bool
	 */",
 "/**
	 * Whether decompression and compression are supported by the PHP version.
	 *
	 * Each function is tested instead of checking for the zlib extension, to
	 * ensure that the functions all exist in the PHP version and aren\'t
	 * disabled.
	 *
	 * @since 2.8
	 *
	 * @return bool
	 */",
 "/**
 * Implementation for deflate and gzip transfer encodings.
 *
 * Includes RFC 1950, RFC 1951, and RFC 1952.
 *
 * @since 2.8
 * @package WordPress
 * @subpackage HTTP
 */",
 "/**
	 * Do the dependencies
	 *
	 * Process the items passed to it or the queue. Processes all dependencies.
	 *
	 * @param mixed $handles (optional) items to be processed. (void) processes queue, (string) process that item, (array of strings) process those items
	 * @return array Items that have been processed
	 */",
 "/**
	 * Determines dependencies
	 *
	 * Recursively builds array of items to process taking dependencies into account. Does NOT catch infinite loops.
	 *
	 *
	 * @param mixed $handles Accepts (string) dep name or (array of strings) dep names
	 * @param bool $recursion Used internally when function calls itself
	 */",
 "/**
	 * Adds item
	 *
	 * Adds the item only if no item of that name already exists
	 *
	 * @param string $handle Script name
	 * @param string $src Script url
	 * @param array $deps (optional) Array of script names on which this script depends
	 * @param string $ver (optional) Script version (used for cache busting)
	 * @return array Hierarchical array of dependencies
	 */",
 "/**
	 * Adds extra data
	 *
	 * Adds data only if script has already been added.
	 *
	 * @param string $handle Script name
	 * @param string $key
	 * @param mixed $value
	 * @return bool success
	 */",
 "/**
	 * Get extra data
	 *
	 * Gets data associated with a certain handle.
	 *
	 * @since WP 3.3
	 *
	 * @param string $handle Script name
	 * @param string $key
	 * @return mixed
	 */",
 "/**
 * BackPress enqueued dependiences class.
 *
 * @package BackPress
 * @uses _WP_Dependency
 * @since r74
 */",
 "/**
 * Walker to output an unordered list of category checkbox <input> elements.
 *
 * @see Walker
 * @see wp_category_checklist()
 * @see wp_terms_checklist()
 * @since 2.5.1
 */",
 "/**
 * Output an unordered list of checkbox <input> elements labelled
 * with category names.
 *
 * @see wp_terms_checklist()
 * @since 2.5.1
 *
 * @param int $post_id Mark categories associated with this post as checked. $selected_cats must not be an array.
 * @param int $descendants_and_self ID of the category to output along with its descendents.
 * @param bool|array $selected_cats List of categories to mark as checked.
 * @param bool|array $popular_cats Override the list of categories that receive the \"popular-category\" class.
 * @param object $walker Walker object to use to build the output.
 * @param bool $checked_ontop Move checked items out of the hierarchy and to the top of the list.
 */",
 "/**
 * Output an unordered list of checkbox <input> elements labelled
 * with term names. Taxonomy independent version of wp_category_checklist().
 *
 * @since 3.0.0
 *
 * @param int $post_id
 * @param array $args
 */",
 "/**
 * Retrieve a list of the most popular terms from the specified taxonomy.
 *
 * If the $echo argument is true then the elements for a list of checkbox
 * <input> elements labelled with the names of the selected terms is output.
 * If the $post_ID global isn\'t empty then the terms associated with that
 * post will be marked as checked.
 *
 * @since 2.5.0
 *
 * @param string $taxonomy Taxonomy to retrieve terms from.
 * @param int $default Unused.
 * @param int $number Number of terms to retrieve. Defaults to 10.
 * @param bool $echo Optionally output the list as well. Defaults to true.
 * @return array List of popular term IDs.
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.5.1
 *
 * @param unknown_type $link_id
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.7.0
 *
 * @param unknown_type $post
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.7.0
 *
 * @param unknown_type $position
 * @param unknown_type $checkbox
 * @param unknown_type $mode
 */",
 "/**
 * Output \'undo move to trash\' text for comments
 *
 * @since 2.9.0
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 1.2.0
 *
 * @param unknown_type $meta
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.5.0
 *
 * @param unknown_type $entry
 * @param unknown_type $count
 * @return unknown
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 1.2.0
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 0.71
 *
 * @param unknown_type $edit
 * @param unknown_type $for_post
 * @param unknown_type $tab_index
 * @param unknown_type $multi
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 1.5.0
 *
 * @param unknown_type $default
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 1.5.0
 *
 * @param unknown_type $default
 * @param unknown_type $parent
 * @param unknown_type $level
 * @return unknown
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.0.0
 *
 * @param unknown_type $id
 * @return unknown
 */",
 "/**
 * Print out <option> html elements for role selectors
 *
 * @since 2.1.0
 *
 * @param string $selected slug for the role that should be already selected
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.3.0
 *
 * @param unknown_type $size
 * @return unknown
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.3.0
 *
 * @param unknown_type $bytes
 * @return unknown
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.5.0
 *
 * @return unknown
 */",
 "/**
 * Outputs the form used by the importers to accept the data to be imported
 *
 * @since 2.0.0
 *
 * @param string $action The action attribute for the form.
 */",
 "/**
 * Add a meta box to an edit form.
 *
 * @since 2.5.0
 *
 * @param string $id String for use in the \'id\' attribute of tags.
 * @param string $title Title of the meta box.
 * @param string $callback Function that fills the box with the desired content. The function should echo its output.
 * @param string|object $screen Optional. The screen on which to show the box (post, page, link). Defaults to current screen.
 * @param string $context Optional. The context within the page where the boxes should show (\'normal\', \'advanced\').
 * @param string $priority Optional. The priority within the context where the boxes should show (\'high\', \'low\').
 */",
 "/**
 * Meta-Box template function
 *
 * @since 2.5.0
 *
 * @param string|object $screen Screen identifier
 * @param string $context box context
 * @param mixed $object gets passed to the box callback function as first parameter
 * @return int number of meta_boxes
 */",
 "/**
 * Remove a meta box from an edit form.
 *
 * @since 2.6.0
 *
 * @param string $id String for use in the \'id\' attribute of tags.
 * @param string|object $screen The screen on which to show the box (post, page, link).
 * @param string $context The context within the page where the boxes should show (\'normal\', \'advanced\').
 */",
 "/**
 * Add a new section to a settings page.
 *
 * Part of the Settings API. Use this to define new settings sections for an admin page.
 * Show settings sections in your admin page callback function with do_settings_sections().
 * Add settings fields to your section with add_settings_field()
 *
 * The $callback argument should be the name of a function that echoes out any
 * content you want to show at the top of the settings section before the actual
 * fields. It can output nothing if you want.
 *
 * @since 2.7.0
 *
 * @global $wp_settings_sections Storage array of all settings sections added to admin pages
 *
 * @param string $id Slug-name to identify the section. Used in the \'id\' attribute of tags.
 * @param string $title Formatted title of the section. Shown as the heading for the section.
 * @param string $callback Function that echos out any content at the top of the section (between heading and fields).
 * @param string $page The slug-name of the settings page on which to show the section. Built-in pages include \'general\', \'reading\', \'writing\', \'discussion\', \'media\', etc. Create your own using add_options_page();
 */",
 "/**
 * Add a new field to a section of a settings page
 *
 * Part of the Settings API. Use this to define a settings field that will show
 * as part of a settings section inside a settings page. The fields are shown using
 * do_settings_fields() in do_settings-sections()
 *
 * The $callback argument should be the name of a function that echoes out the
 * html input tags for this setting field. Use get_option() to retrieve existing
 * values to show.
 *
 * @since 2.7.0
 *
 * @global $wp_settings_fields Storage array of settings fields and info about their pages/sections
 *
 * @param string $id Slug-name to identify the field. Used in the \'id\' attribute of tags.
 * @param string $title Formatted title of the field. Shown as the label for the field during output.
 * @param string $callback Function that fills the field with the desired form inputs. The function should echo its output.
 * @param string $page The slug-name of the settings page on which to show the section (general, reading, writing, ...).
 * @param string $section The slug-name of the section of the settings page in which to show the box (default, ...).
 * @param array $args Additional arguments
 */",
 "/**
 * Prints out all settings sections added to a particular settings page
 *
 * Part of the Settings API. Use this in a settings page callback function
 * to output all the sections and fields that were added to that $page with
 * add_settings_section() and add_settings_field()
 *
 * @global $wp_settings_sections Storage array of all settings sections added to admin pages
 * @global $wp_settings_fields Storage array of settings fields and info about their pages/sections
 * @since 2.7.0
 *
 * @param string $page The slug name of the page whos settings sections you want to output
 */",
 "/**
 * Print out the settings fields for a particular settings section
 *
 * Part of the Settings API. Use this in a settings page to output
 * a specific section. Should normally be called by do_settings_sections()
 * rather than directly.
 *
 * @global $wp_settings_fields Storage array of settings fields and their pages/sections
 *
 * @since 2.7.0
 *
 * @param string $page Slug title of the admin page who\'s settings fields you want to show.
 * @param section $section Slug title of the settings section who\'s fields you want to show.
 */",
 "/**
 * Register a settings error to be displayed to the user
 *
 * Part of the Settings API. Use this to show messages to users about settings validation
 * problems, missing settings or anything else.
 *
 * Settings errors should be added inside the $sanitize_callback function defined in
 * register_setting() for a given setting to give feedback about the submission.
 *
 * By default messages will show immediately after the submission that generated the error.
 * Additional calls to settings_errors() can be used to show errors even when the settings
 * page is first accessed.
 *
 * @since 3.0.0
 *
 * @global array $wp_settings_errors Storage array of errors registered during this pageload
 *
 * @param string $setting Slug title of the setting to which this error applies
 * @param string $code Slug-name to identify the error. Used as part of \'id\' attribute in HTML output.
 * @param string $message The formatted message text to display to the user (will be shown inside styled <div> and <p>)
 * @param string $type The type of message it is, controls HTML class. Use \'error\' or \'updated\'.
 */",
 "/**
 * Fetch settings errors registered by add_settings_error()
 *
 * Checks the $wp_settings_errors array for any errors declared during the current
 * pageload and returns them.
 *
 * If changes were just submitted ($_GET[\'settings-updated\']) and settings errors were saved
 * to the \'settings_errors\' transient then those errors will be returned instead. This
 * is used to pass errors back across pageloads.
 *
 * Use the $sanitize argument to manually re-sanitize the option before returning errors.
 * This is useful if you have errors or notices you want to show even when the user
 * hasn\'t submitted data (i.e. when they first load an options page, or in admin_notices action hook)
 *
 * @since 3.0.0
 *
 * @global array $wp_settings_errors Storage array of errors registered during this pageload
 *
 * @param string $setting Optional slug title of a specific setting who\'s errors you want.
 * @param boolean $sanitize Whether to re-sanitize the setting value before returning errors.
 * @return array Array of settings errors
 */",
 "/**
 * Display settings errors registered by add_settings_error()
 *
 * Part of the Settings API. Outputs a <div> for each error retrieved by get_settings_errors().
 *
 * This is called automatically after a settings page based on the Settings API is submitted.
 * Errors should be added during the validation callback function for a setting defined in register_setting()
 *
 * The $sanitize option is passed into get_settings_errors() and will re-run the setting sanitization
 * on its current value.
 *
 * The $hide_on_update option will cause errors to only show when the settings page is first loaded.
 * if the user has already saved new values it will be hidden to avoid repeating messages already
 * shown in the default error reporting after submission. This is useful to show general errors like missing
 * settings when the user arrives at the settings page.
 *
 * @since 3.0.0
 *
 * @param string $setting Optional slug title of a specific setting who\'s errors you want.
 * @param boolean $sanitize Whether to re-sanitize the setting value before returning errors.
 * @param boolean $hide_on_update If set to true errors will not be shown if the settings page has already been submitted.
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.7.0
 *
 * @param unknown_type $found_action
 */",
 "/**
 * Display the post password.
 *
 * The password is passed through {@link esc_attr()} to ensure that it
 * is safe for placing in an html attribute.
 *
 * @uses attr
 * @since 2.7.0
 */",
 "/**
 * Get the post title.
 *
 * The post title is fetched and if it is blank then a default string is
 * returned.
 *
 * @since 2.7.0
 * @param int $post_id The post id. If not supplied the global $post is used.
 * @return string The post title if set
 */",
 "/**
 * Display the search query.
 *
 * A simple wrapper to display the \"s\" parameter in a GET URI. This function
 * should only be used when {@link the_search_query()} cannot.
 *
 * @uses attr
 * @since 2.7.0
 *
 */",
 "/**
 * Generic Iframe header for use with Thickbox
 *
 * @since 2.7.0
 * @param string $title Title of the Iframe page.
 * @param bool $limit_styles Limit styles to colour-related styles only (unless others are enqueued).
 *
 */",
 "/**
 * Generic Iframe footer for use with Thickbox
 *
 * @since 2.7.0
 *
 */",
 "/**
 * Test support for compressing JavaScript from PHP
 *
 * Outputs JavaScript that tests if compression from PHP works as expected
 * and sets an option with the result. Has no effect when the current user
 * is not an administrator. To run the test again the option \'can_compress_scripts\'
 * has to be deleted.
 *
 * @since 2.8.0
 */",
 "/**
 * Echos a submit button, with provided text and appropriate class
 *
 * @since 3.1.0
 *
 * @param string $text The text of the button (defaults to \'Save Changes\')
 * @param string $type The type of button. One of: primary, secondary, delete
 * @param string $name The HTML name of the submit button. Defaults to \"submit\". If no id attribute
 *               is given in $other_attributes below, $name will be used as the button\'s id.
 * @param bool $wrap True if the output button should be wrapped in a paragraph tag,
 * 			   false otherwise. Defaults to true
 * @param array|string $other_attributes Other attributes that should be output with the button,
 *                     mapping attributes to their values, such as array( \'tabindex\' => \'1\' ).
 *                     These attributes will be output as attribute=\"value\", such as tabindex=\"1\".
 *                     Defaults to no other attributes. Other attributes can also be provided as a
 *                     string such as \'tabindex=\"1\"\', though the array format is typically cleaner.
 */",
 "/**
 * Returns a submit button, with provided text and appropriate class
 *
 * @since 3.1.0
 *
 * @param string $text The text of the button (defaults to \'Save Changes\')
 * @param string $type The type of button. One of: primary, secondary, delete
 * @param string $name The HTML name of the submit button. Defaults to \"submit\". If no id attribute
 *               is given in $other_attributes below, $name will be used as the button\'s id.
 * @param bool $wrap True if the output button should be wrapped in a paragraph tag,
 * 			   false otherwise. Defaults to true
 * @param array|string $other_attributes Other attributes that should be output with the button,
 *                     mapping attributes to their values, such as array( \'tabindex\' => \'1\' ).
 *                     These attributes will be output as attribute=\"value\", such as tabindex=\"1\".
 *                     Defaults to no other attributes. Other attributes can also be provided as a
 *                     string such as \'tabindex=\"1\"\', though the array format is typically cleaner.
 */",
 "/**
	 * Initializes the new feature pointers.
	 *
	 * @since 3.3.0
	 *
	 * All pointers can be disabled using the following:
	 *     remove_action( \'admin_enqueue_scripts\', array( \'WP_Internal_Pointers\', \'enqueue_scripts\' ) );
	 *
	 * Individual pointers (e.g. wp330_toolbar) can be disabled using the following:
	 *     remove_action( \'admin_print_footer_scripts\', array( \'WP_Internal_Pointers\', \'pointer_wp330_toolbar\' ) );
	 */",
 "/**
	 * Print the pointer javascript data.
	 *
	 * @since 3.3.0
	 *
	 * @param string $pointer_id The pointer ID.
	 * @param string $selector The HTML elements, on which the pointer should be attached.
	 * @param array  $args Arguments to be passed to the pointer JS (see wp-pointer.dev.js).
	 */",
 "/**
	 * Print \'Updated Media Uploader\' for 3.3.0.
	 *
	 * @since 3.3.0
	 */",
 "/**
	 * Print \'New Feature: Saving Widgets\' for 3.3.0.
	 *
	 * @since 3.3.0
	 */",
 "/**
	 * Print \'New Feature: Current Theme Customize Link\' for 3.4.0.
	 *
	 * @since 3.4.0
	 */",
 "/**
	 * Print \'New Feature: Choose Image from Library\' for 3.4.0.
	 *
	 * @since 3.4.0
	 */",
 "/**
	 * Prevents new users from seeing existing \'new feature\' pointers.
	 *
	 * @since 3.3.0
	 */",
 "/**
 * Convert a screen string to a screen object
 *
 * @since 3.0.0
 *
 * @param string $hook_name The hook name (also known as the hook suffix) used to determine the screen.
 * @return WP_Screen Screen object.
 */",
 "/**
 * FTP implementation using fsockopen to connect.
 *
 * @package PemFTP
 * @subpackage Pure
 * @since 2.5
 *
 * @version 1.0
 * @copyright Alexey Dotsenko
 * @author Alexey Dotsenko
 * @link http://www.phpclasses.org/browse/package/1743.html Site
 * @license LGPL License http://www.opensource.org/licenses/lgpl-license.html
 */",
 "/**
 * BackPress Styles enqueue class.
 *
 * @package BackPress
 * @uses WP_Dependencies
 * @since r74
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.0.0
 * @uses $wpdb
 *
 * @param string $comment_author Author of the comment
 * @param string $comment_date Date of the comment
 * @return mixed Comment ID on success.
 */",
 "/**
 * Update a comment with values provided in $_POST.
 *
 * @since 2.0.0
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.0.0
 *
 * @param int $id ID of comment to retrieve
 * @return bool|object Comment if found. False on failure.
 */",
 "/**
 * Get the number of pending comments on a post or posts
 *
 * @since 2.3.0
 * @uses $wpdb
 *
 * @param int|array $post_id Either a single Post ID or an array of Post IDs
 * @return int|array Either a single Posts pending comments as an int or an array of ints keyed on the Post IDs
 */",
 "/**
 * Add avatars to relevant places in admin, or try to.
 *
 * @since 2.5.0
 * @uses $comment
 *
 * @param string $name User name.
 * @return string Avatar with Admin name.
 */",
 "/**
 * trackback_response() - Respond with error or success XML message
 *
 * @param int|bool $error Whether there was an error
 * @param string $error_message Error message if an error occurred
 */",
 "/**
	 * Constructor
	 *
	 * @return void
	 **/",
 "/**
	 * Outputs the HTML for this widget.
	 *
	 * @param array An array of standard parameters for widgets in this theme
	 * @param array An array of settings for this widget instance
	 * @return void Echoes it\'s output
	 **/",
 "/**
	 * Deals with the settings when they are saved by the admin. Here is
	 * where any validation should be dealt with.
	 **/",
 "/**
	 * Displays the form for this widget on the Widgets page of the WP Admin area.
	 **/",
 "/**
 * Makes a custom Widget for displaying Aside, Link, Status, and Quote Posts available with Twenty Eleven
 *
 * Learn more: http://codex.wordpress.org/Widgets_API#Developing_Widgets
 *
 * @package WordPress
 * @subpackage Twenty_Eleven
 * @since Twenty Eleven 1.0
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.0.0
 *
 * @return unknown
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 1.5.0
 *
 * @param unknown_type $filename
 * @param unknown_type $marker
 * @return array An array of strings from a file (.htaccess ) from between BEGIN and END markers.
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * Inserts an array of strings into a file (.htaccess ), placing it between
 * BEGIN and END markers. Replaces existing marked info. Retains surrounding
 * data. Creates file if none exists.
 *
 * @since 1.5.0
 *
 * @param unknown_type $filename
 * @param unknown_type $marker
 * @param unknown_type $insertion
 * @return bool True on write success, false on failure.
 */",
 "/**
 * Updates the htaccess file with the current rules if it is writable.
 *
 * Always writes to the file if it exists and is writable to ensure that we
 * blank out old rules.
 *
 * @since 1.5.0
 */",
 "/**
 * Updates the IIS web.config file with the current rules if it is writable.
 * If the permalinks do not require rewrite rules then the rules are deleted from the web.config file.
 *
 * @since 2.8.0
 *
 * @return bool True if web.config was updated successfully
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 1.5.0
 *
 * @param unknown_type $file
 */",
 "/**
 * If siteurl or home changed, flush rewrite rules.
 *
 * @since 2.1.0
 *
 * @param string $old_value
 * @param string $value
 */",
 "/**
 * Shorten an URL, to be used as link text
 *
 * @since 1.2.1
 *
 * @param string $url
 * @return string
 */",
 "/**
 * Resets global variables based on $_GET and $_POST
 *
 * This function resets global variables based on the names passed
 * in the $vars array to the value of $_POST[$var] or $_GET[$var] or \'\'
 * if neither is defined.
 *
 * @since 2.0.0
 *
 * @param array $vars An array of globals to reset.
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.1.0
 *
 * @param unknown_type $message
 */",
 "/**
 * Saves option for number of rows when listing posts, pages, comments, etc.
 *
 * @since 2.8
**/",
 "/**
 * Check if rewrite rule for WordPress already exists in the IIS 7 configuration file
 *
 * @since 2.8.0
 *
 * @return bool
 * @param string $filename The file path to the configuration file
 */",
 "/**
 * Delete WordPress rewrite rule from web.config file if it exists there
 *
 * @since 2.8.0
 *
 * @param string $filename Name of the configuration file
 * @return bool
 */",
 "/**
 * Add WordPress rewrite rule to the IIS 7 configuration file.
 *
 * @since 2.8.0
 *
 * @param string $filename The file path to the configuration file
 * @param string $rewrite_rule The XML fragment with URL Rewrite rule
 * @return bool
 */",
 "/**
 * Saves the XML document into a file
 *
 * @since 2.8.0
 *
 * @param DOMDocument $doc
 * @param string $filename
 */",
 "/**
 * Workaround for Windows bug in is_writable() function
 *
 * @since 2.8.0
 *
 * @param string $path
 * @return bool
 */",
 "/**
 * Display the default admin color scheme picker (Used in user-edit.php)
 *
 * @since 3.0.0
 */",
 "/**
 * This class handles JSON stuff.
 *
 * @package MCManager.utils
 */",
 "/**
 * Display error message at bottom of comments.
 *
 * @param string $msg Error Message. Assumed to contain HTML and be sanitized.
 */",
 "/**
 * Display JavaScript on the page.
 *
 * @package WordPress
 * @subpackage Reading_Settings_Screen
 */",
 "/**
 * Comments List Table class.
 *
 * @package WordPress
 * @subpackage List_Table
 * @since 3.1.0
 * @access private
 */",
 "/**
 * Post Comments List Table class.
 *
 * @package WordPress
 * @subpackage List_Table
 * @since 3.1.0
 * @access private
 *
 * @see WP_Comments_Table
 */",
 "/**
	 * Constructor.
	 *
	 * If $args[\'settings\'] is not defined, use the $id as the setting ID.
	 *
	 * @since 3.4.0
	 */",
 "/**
	 * Enqueue control related scripts/styles.
	 *
	 * @since 3.4.0
	 */",
 "/**
	 * Fetch a setting\'s value.
	 * Grabs the main setting by default.
	 *
	 * @since 3.4.0
	 */",
 "/**
	 * Refresh the parameters passed to the JavaScript via JSON.
	 *
	 * @since 3.4.0
	 */",
 "/**
	 * Check if the theme supports the control and check user capabilities.
	 *
	 * @since 3.4.0
	 *
	 * @return bool False if theme doesn\'t support the control or user doesn\'t have the required permissions, otherwise true.
	 */",
 "/**
	 * Check capabilities and render the control.
	 *
	 * @since 3.4.0
	 */",
 "/**
	 * Render the control. Renders the control wrapper, then calls $this->render_content().
	 *
	 * @since 3.4.0
	 */",
 "/**
	 * Render the control\'s content.
	 *
	 * Allows the content to be overriden without having to rewrite the wrapper.
	 *
	 * @since 3.4.0
	 */",
 "/**
 * Customize Control Class
 *
 * @package WordPress
 * @subpackage Customize
 * @since 3.4.0
 */",
 "/**
 * WordPress Database Table prefix.
 *
 * You can have multiple installations in one database if you give each a unique
 * prefix. Only numbers, letters, and underscores please!
 */",
 "/**
	 * constructor
	 *
	 * @param mixed $arg ignored argument
	 */",
 "/**
	 * connect filesystem.
	 *
	 * @return bool Returns true on success or false on failure (always true for WP_Filesystem_Direct).
	 */",
 "/**
	 * Reads entire file into a string
	 *
	 * @param string $file Name of the file to read.
	 * @return string|bool The function returns the read data or false on failure.
	 */",
 "/**
	 * Reads entire file into an array
	 *
	 * @param string $file Path to the file.
	 * @return array|bool the file contents in an array or false on failure.
	 */",
 "/**
	 * Write a string to a file
	 *
	 * @param string $file Remote path to the file where to write the data.
	 * @param string $contents The data to write.
	 * @param int $mode (optional) The file permissions as octal number, usually 0644.
	 * @return bool False upon failure.
	 */",
 "/**
	 * Gets the current working directory
	 *
	 * @return string|bool the current working directory on success, or false on failure.
	 */",
 "/**
	 * Change directory
	 *
	 * @param string $dir The new current directory.
	 * @return bool Returns true on success or false on failure.
	 */",
 "/**
	 * Changes file group
	 *
	 * @param string $file Path to the file.
	 * @param mixed $group A group name or number.
	 * @param bool $recursive (optional) If set True changes file group recursively. Defaults to False.
	 * @return bool Returns true on success or false on failure.
	 */",
 "/**
	 * Changes filesystem permissions
	 *
	 * @param string $file Path to the file.
	 * @param int $mode (optional) The permissions as octal number, usually 0644 for files, 0755 for dirs.
	 * @param bool $recursive (optional) If set True changes file group recursively. Defaults to False.
	 * @return bool Returns true on success or false on failure.
	 */",
 "/**
	 * Changes file owner
	 *
	 * @param string $file Path to the file.
	 * @param mixed $owner A user name or number.
	 * @param bool $recursive (optional) If set True changes file owner recursively. Defaults to False.
	 * @return bool Returns true on success or false on failure.
	 */",
 "/**
	 * Gets file owner
	 *
	 * @param string $file Path to the file.
	 * @return string Username of the user.
	 */",
 "/**
	 * Gets file permissions
	 *
	 * FIXME does not handle errors in fileperms()
	 *
	 * @param string $file Path to the file.
	 * @return string Mode of the file (last 4 digits).
	 */",
 "/**
*WordPressFilesystemClassfordirectPHPfileandfoldermanipulation.
*
*@since2.5
*@packageWordPress
*@subpackageFilesystem
*@usesWP_Filesystem_BaseExtendsclass
*/",
 "/**
	 * Constructor for WP_Theme.
	 *
	 * @param string $theme_dir Directory of the theme within the theme_root.
	 * @param string $theme_root Theme root.
	 * @param WP_Error|null $_child If this theme is a parent theme, the child may be passed for validation purposes.
	 */",
 "/**
	 * When converting the object to a string, the theme name is returned.
	 *
	 * @return string Theme name, ready for display (translated)
	 */",
 "/**
	 * __isset() magic method for properties formerly returned by current_theme_info()
	 */",
 "/**
	 * __get() magic method for properties formerly returned by current_theme_info()
	 */",
 "/**
	 * Method to implement ArrayAccess for keys formerly returned by get_themes()
	 */",
 "/**
	 * Method to implement ArrayAccess for keys formerly returned by get_themes()
	 */",
 "/**
	 * Method to implement ArrayAccess for keys formerly returned by get_themes()
	 */",
 "/**
	 * Method to implement ArrayAccess for keys formerly returned by get_themes().
	 *
	 * Author, Author Name, Author URI, and Description did not previously return
	 * translated data. We are doing so now as it is safe to do. However, as
	 * Name and Title could have been used as the key for get_themes(), both remain
	 * untranslated for back compatibility. This means that [\'Name\'] is not ideal,
	 * and care should be taken to use $theme->display(\'Name\') to get a properly
	 * translated header.
	 */",
 "/**
	 * Returns errors property.
	 *
	 * @since 3.4.0
	 * @access public
	 *
	 * @return WP_Error|bool WP_Error if there are errors, or false.
	 */",
 "/**
	 * Whether the theme exists.
	 *
	 * A theme with errors exists. A theme with the error of \'theme_not_found\',
	 * meaning that the theme\'s directory was not found, does not exist.
	 *
	 * @since 3.4.0
	 * @access public
	 *
	 * @return bool Whether the theme exists.
	 */",
 "/**
	 * Returns reference to the parent theme.
	 *
	 * @since 3.4.0
	 * @access public
	 *
	 * @return WP_Theme|bool Parent theme, or false if the current theme is not a child theme.
	 */",
 "/**
	 * Adds theme data to cache.
	 *
	 * Cache entries keyed by the theme and the type of data.
	 *
	 * @access private
	 * @since 3.4.0
	 *
	 * @param string $key Type of data to store (theme, screenshot, headers, page_templates)
	 * @param string $data Data to store
	 * @return bool Return value from wp_cache_add()
	 */",
 "/**
	 * Gets theme data from cache.
	 *
	 * Cache entries are keyed by the theme and the type of data.
	 *
	 * @access private
	 * @since 3.4.0
	 *
	 * @param string $key Type of data to retrieve (theme, screenshot, headers, page_templates)
	 * @return mixed Retrieved data
	 */",
 "/**
	 * Clears the cache for the theme.
	 *
	 * @access public
	 * @since 3.4.0
	 */",
 "/**
	 * Get a raw, unformatted theme header.
	 *
	 * The header is sanitized, but is not translated, and is not marked up for display.
	 * To get a theme header for display, use the display() method.
	 *
	 * Use the get_template() method, not the \'Template\' header, for finding the template.
	 * The \'Template\' header is only good for what was written in the style.css, while
	 * get_template() takes into account where WordPress actually located the theme and
	 * whether it is actually valid.
	 *
	 * @access public
	 * @since 3.4.0
	 *
	 * @param string $header Theme header. Name, Description, Author, Version, ThemeURI, AuthorURI, Status, Tags.
	 * @return string String on success, false on failure.
	 */",
 "/**
	 * Gets a theme header, formatted and translated for display.
	 *
	 * @access public
	 * @since 3.4.0
	 *
	 * @param string $header Theme header. Name, Description, Author, Version, ThemeURI, AuthorURI, Status, Tags.
	 * @param bool $markup Optional. Whether to mark up the header. Defaults to true.
	 * @param bool $translate Optional. Whether to translate the header. Defaults to true.
	 * @return string Processed header, false on failure.
	 */",
 "/**
	 * Sanitize a theme header.
	 *
	 * @param string $header Theme header. Name, Description, Author, Version, ThemeURI, AuthorURI, Status, Tags.
	 * @param string $value Value to sanitize.
	 */",
 "/**
	 * Mark up a theme header.
	 *
	 * @access private
	 * @since 3.4.0
	 *
	 * @param string $header Theme header. Name, Description, Author, Version, ThemeURI, AuthorURI, Status, Tags.
	 * @param string $value Value to mark up.
	 * @param string $translate Whether the header has been translated.
	 * @return string Value, marked up.
	 */",
 "/**
	 * Translate a theme header.
	 *
	 * @access private
	 * @since 3.4.0
	 *
	 * @param string $header Theme header. Name, Description, Author, Version, ThemeURI, AuthorURI, Status, Tags.
	 * @param string $value Value to translate.
	 * @return string Translated value.
	 */",
 "/**
	 * The directory name of the theme\'s \"stylesheet\" files, inside the theme root.
	 *
	 * In the case of a child theme, this is directory name of the the child theme.
	 * Otherwise, get_stylesheet() is the same as get_template().
	 *
	 * @since 3.4.0
	 * @access public
	 *
	 * @return string Stylesheet
	 */",
 "/**
	 * The directory name of the theme\'s \"template\" files, inside the theme root.
	 *
	 * In the case of a child theme, this is the directory name of the parent theme.
	 * Otherwise, the get_template() is the same as get_stylesheet().
	 *
	 * @since 3.4.0
	 * @access public
	 *
	 * @return string Template
	 */",
 "/**
	 * Returns the absolute path to the directory of a theme\'s \"stylesheet\" files.
	 *
	 * In the case of a child theme, this is the absolute path to the directory
	 * of the child theme\'s files.
	 *
	 * @since 3.4.0
	 * @access public
	 *
	 * @return string Absolute path of the stylesheet directory.
	 */",
 "/**
	 * Returns the absolute path to the directory of a theme\'s \"template\" files.
	 *
	 * In the case of a child theme, this is the absolute path to the directory
	 * of the parent theme\'s files.
	 *
	 * @since 3.4.0
	 * @access public
	 *
	 * @return string Absolute path of the template directory.
	 */",
 "/**
	 * Returns the URL to the directory of a theme\'s \"stylesheet\" files.
	 *
	 * In the case of a child theme, this is the URL to the directory of the
	 * child theme\'s files.
	 *
	 * @since 3.4.0
	 * @access public
	 *
	 * @return string URL to the stylesheet directory.
	 */",
 "/**
	 * Returns the URL to the directory of a theme\'s \"template\" files.
	 *
	 * In the case of a child theme, this is the URL to the directory of the
	 * parent theme\'s files.
	 *
	 * @since 3.4.0
	 * @access public
	 *
	 * @return string URL to the template directory.
	 */",
 "/**
	 * The absolute path to the directory of the theme root.
	 *
	 * This is typically the absolute path to wp-content/themes.
	 *
	 * @since 3.4.0
	 * @access public
	 *
	 * @return string Theme root.
	 */",
 "/**
	 * Returns the URL to the directory of the theme root.
	 *
	 * This is typically the absolute URL to wp-content/themes. This forms the basis
	 * for all other URLs returned by WP_Theme, so we pass it to the public function
	 * get_theme_root_uri() and allow it to run the theme_root_uri filter.
	 *
	 * @uses get_theme_root_uri()
	 *
	 * @since 3.4.0
	 * @access public
	 *
	 * @return string Theme root URI.
	 */",
 "/**
	 * Returns the main screenshot file for the theme.
	 *
	 * The main screenshot is called screenshot.png. gif and jpg extensions are also allowed.
	 *
	 * Screenshots for a theme must be in the stylesheet directory. (In the case of child
	 * themes, parent theme screenshots are not inherited.)
	 *
	 * @since 3.4.0
	 * @access public
	 *
	 * @param string $uri Type of URL to return, either \'relative\' or an absolute URI. Defaults to absolute URI.
	 * @return mixed Screenshot file. False if the theme does not have a screenshot.
	 */",
 "/**
	 * Return files in the theme\'s directory.
	 *
	 * @since 3.4.0
	 * @access public
	 *
	 * @param mixed $type Optional. Array of extensions to return. Defaults to all files (null).
	 * @param int $depth Optional. How deep to search for files. Defaults to a flat scan (0 depth). -1 depth is infinite.
	 * @param bool $search_parent Optional. Whether to return parent files. Defaults to false.
	 * @return array Array of files, keyed by the path to the file relative to the theme\'s directory, with the values
	 * 	being absolute paths.
	 */",
 "/**
	 * Returns the theme\'s page templates.
	 *
	 * @since 3.4.0
	 * @access public
	 *
	 * @return array Array of page templates, keyed by filename, with the value of the translated header name.
	 */",
 "/**
	 * Scans a directory for files of a certain extension.
	 *
	 * @since 3.4.0
	 * @access private
	 *
	 * @param string $path Absolute path to search.
	 * @param mixed  Array of extensions to find, string of a single extension, or null for all extensions.
	 * @param int $depth How deep to search for files. Optional, defaults to a flat scan (0 depth). -1 depth is infinite.
	 * @param string $relative_path The basename of the absolute path. Used to control the returned path
	 * 	for the found files, particularly when this function recurses to lower depths.
	 */",
 "/**
	 * Loads the theme\'s textdomain.
	 *
	 * Translation files are not inherited from the parent theme. Todo: if this fails for the
	 * child theme, it should probably try to load the parent theme\'s translations.
	 *
	 * @since 3.4.0
	 * @access public
	 *
	 * @return True if the textdomain was successfully loaded or has already been loaded. False if
	 * 	no textdomain was specified in the file headers, or if the domain could not be loaded.
	 */",
 "/**
	 * Whether the theme is allowed (multisite only).
	 *
	 * @since 3.4.0
	 * @access public
	 *
	 * @param string $check Optional. Whether to check only the \'network\'-wide settings, the \'site\'
	 * 	settings, or \'both\'. Defaults to \'both\'.
	 * @param int $blog_id Optional. Ignored if only network-wide settings are checked. Defaults to current blog.
	 * @return bool Whether the theme is allowed for the network. Returns true in single-site.
	 */",
 "/**
	 * Returns array of stylesheet names of themes allowed on the site or network.
	 *
	 * @since 3.4.0
	 * @access public
	 *
	 * @param int $blog_id Optional. Defaults to current blog.
	 * @return array Array of stylesheet names.
	 */",
 "/**
	 * Returns array of stylesheet names of themes allowed on the network.
	 *
	 * @since 3.4.0
	 * @access public
	 *
	 * @return array Array of stylesheet names.
	 */",
 "/**
	 * Returns array of stylesheet names of themes allowed on the site.
	 *
	 * @since 3.4.0
	 * @access public
	 *
	 * @param int $blog_id Optional. Defaults to current blog.
	 * @return array Array of stylesheet names.
	 */",
 "/**
	 * Sort themes by name.
	 *
	 * @since 3.4.0
	 * @access public
	 */",
 "/**
	 * Callback function for usort() to naturally sort themes by name.
	 *
	 * Accesses the Name header directly from the class for maximum speed.
	 * Would choke on HTML but we don\'t care enough to slow it down with strip_tags().
	 *
	 * @since 3.4.0
	 * @access private
	 */",
 "/**
	 * Name sort (with translation).
	 *
	 * @since 3.4.0
	 * @access private
	 */",
 "/**
 * WP_Theme Class
 *
 * @package WordPress
 * @subpackage Theme
 */",
 "/**
 * Redirects incoming links to the proper URL based on the site url.
 *
 * Search engines consider www.somedomain.com and somedomain.com to be two
 * different URLs when they both go to the same location. This SEO enhancement
 * prevents penalty for duplicate content by redirecting all incoming links to
 * one or the other.
 *
 * Prevents redirection for feeds, trackbacks, searches, comment popup, and
 * admin URLs. Does not redirect on IIS, page/post previews, and on form data.
 *
 * Will also attempt to find the correct link when a user enters a URL that does
 * not exist based on exact WordPress query. Will instead try to parse the URL
 * or query in an attempt to figure the correct page to go to.
 *
 * @since 2.3.0
 * @uses $wp_rewrite
 * @uses $is_IIS
 *
 * @param string $requested_url Optional. The URL that was requested, used to
 *		figure if redirect is needed.
 * @param bool $do_redirect Optional. Redirect to the new URL.
 * @return null|false|string Null, if redirect not needed. False, if redirect
 *		not needed or the string of the URL
 */",
 "/**
 * Removes arguments from a query string if they are not present in a URL
 * DO NOT use this in plugin code.
 *
 * @since 3.4
 * @access private
 *
 * @return string The altered query string
 */",
 "/**
 * Attempts to guess the correct URL from the current URL (that produced a 404) or
 * the current query variables.
 *
 * @since 2.3.0
 * @uses $wpdb
 *
 * @param string $current_url Optional. The URL that has 404\'d.
 * @return bool|string The correct URL if one is found. False on failure.
 */",
 "/**
	 * @see Walker_Nav_Menu::start_lvl()
	 * @since 3.0.0
	 *
	 * @param string $output Passed by reference.
	 */",
 "/**
	 * @see Walker_Nav_Menu::end_lvl()
	 * @since 3.0.0
	 *
	 * @param string $output Passed by reference.
	 */",
 "/**
	 * @see Walker::start_el()
	 * @since 3.0.0
	 *
	 * @param string $output Passed by reference. Used to append additional content.
	 * @param object $item Menu item data object.
	 * @param int $depth Depth of menu item. Used for padding.
	 * @param object $args
	 */",
 "/**
 * Create HTML list of nav menu input items.
 *
 * @package WordPress
 * @since 3.0.0
 * @uses Walker_Nav_Menu
 */",
 "/**
	 * @see Walker::start_el()
	 * @since 3.0.0
	 *
	 * @param string $output Passed by reference. Used to append additional content.
	 * @param object $item Menu item data object.
	 * @param int $depth Depth of menu item. Used for padding.
	 * @param object $args
	 */",
 "/**
 * Create HTML list of nav menu input items.
 *
 * @package WordPress
 * @since 3.0.0
 * @uses Walker_Nav_Menu
 */",
 "/**
 * Prints the appropriate response to a menu quick search.
 *
 * @since 3.0.0
 *
 * @param array $request The unsanitized request values.
 */",
 "/**
 * Register nav menu metaboxes and advanced menu items
 *
 * @since 3.0.0
 **/",
 "/**
 * Limit the amount of meta boxes to just links, pages and cats for first time users.
 *
 * @since 3.0.0
 **/",
 "/**
 * Creates metaboxes for any post type menu item.
 *
 * @since 3.0.0
 */",
 "/**
 * Creates metaboxes for any taxonomy menu item.
 *
 * @since 3.0.0
 */",
 "/**
 * Displays a metabox for the nav menu theme locations.
 *
 * @since 3.0.0
 */",
 "/**
 * Displays a metabox for the custom links menu item.
 *
 * @since 3.0.0
 */",
 "/**
 * Displays a metabox for a post type menu item.
 *
 * @since 3.0.0
 *
 * @param string $object Not used.
 * @param string $post_type The post type object.
 */",
 "/**
 * Displays a metabox for a taxonomy menu item.
 *
 * @since 3.0.0
 *
 * @param string $object Not used.
 * @param string $taxonomy The taxonomy object.
 */",
 "/**
 * Save posted nav menu item data.
 *
 * @since 3.0.0
 *
 * @param int $menu_id The menu ID for which to save this item. $menu_id of 0 makes a draft, orphaned menu item.
 * @param array $menu_data The unsanitized posted menu item data.
 * @return array The database IDs of the items saved
 */",
 "/**
 * Adds custom arguments to some of the meta box object types.
 *
 * @since 3.0.0
 *
 * @access private
 *
 * @param object $object The post type or taxonomy meta-object.
 * @return object The post type of taxonomy object.
 */",
 "/**
 * Returns the menu formatted to edit.
 *
 * @since 3.0.0
 *
 * @param string $menu_id The ID of the menu to format.
 * @return string|WP_Error $output The menu formatted to edit or error object on failure.
 */",
 "/**
 * Returns the columns for the nav menus page.
 *
 * @since 3.0.0
 *
 * @return string|WP_Error $output The menu formatted to edit or error object on failure.
 */",
 "/**
 * Deletes orphaned draft menu items
 *
 * @access private
 * @since 3.0.0
 *
 */",
 "/**
	 * Constructor - Register administration header callback.
	 *
	 * @since 3.0.0
	 * @param callback $admin_header_callback
	 * @param callback $admin_image_div_callback Optional custom image div output callback.
	 * @return Custom_Background
	 */",
 "/**
	 * Set up the hooks for the Custom Background admin page.
	 *
	 * @since 3.0.0
	 */",
 "/**
	 * Set up the enqueue for the CSS & JavaScript files.
	 *
	 * @since 3.0.0
	 */",
 "/**
	 * Execute custom background modification.
	 *
	 * @since 3.0.0
	 */",
 "/**
	 * Display the custom background page.
	 *
	 * @since 3.0.0
	 */",
 "/**
	 * Handle an Image upload for the background image.
	 *
	 * @since 3.0.0
	 */",
 "/**
	 * Replace default attachment actions with \"Set as background\" link.
	 *
	 * @since 3.4.0
	 */",
 "/**
	 * Leave only \"Media Library\" tab in the uploader window.
	 *
	 * @since 3.4.0
	 */",
 "/**
 * The custom background class.
 *
 * @since 3.0.0
 * @package WordPress
 * @subpackage Administration
 */",
 "/**
	 * Sets the endianness of the file.
	 *
	 * @param $endian string \'big\' or \'little\'
	 */",
 "/**
	 * Reads a 32bit Integer from the Stream
	 *
	 * @return mixed The integer, corresponding to the next 32 bits from
	 * 	the stream of false if there are not enough bytes or on error
	 */",
 "/**
	 * Reads an array of 32-bit Integers from the Stream
	 *
	 * @param integer count How many elements should be read
	 * @return mixed Array of integers or false if there isn\'t
	 * 	enough data or on error
	 */",
 "/**
 * Provides file-like methods for manipulating a string instead
 * of a physical file.
 */",
 "/**
 * Reads the contents of the file in the beginning.
 */",
 "/**
 * Reads the contents of the file in the beginning.
 */",
 "/**
 * Display the permalink for the current post.
 *
 * @since 1.2.0
 * @uses apply_filters() Calls \'the_permalink\' filter on the permalink string.
 */",
 "/**
 * Retrieve trailing slash string, if blog set for adding trailing slashes.
 *
 * Conditionally adds a trailing slash if the permalink structure has a trailing
 * slash, strips the trailing slash if not. The string is passed through the
 * \'user_trailingslashit\' filter. Will remove trailing slash from string, if
 * blog is not set to have them.
 *
 * @since 2.2.0
 * @uses $wp_rewrite
 *
 * @param string $string URL with or without a trailing slash.
 * @param string $type_of_url The type of URL being considered (e.g. single, category, etc) for use in the filter.
 * @return string
 */",
 "/**
 * Display permalink anchor for current post.
 *
 * The permalink mode title will use the post title for the \'a\' element \'id\'
 * attribute. The id mode uses \'post-\' with the post ID for the \'id\' attribute.
 *
 * @since 0.71
 *
 * @param string $mode Permalink mode can be either \'title\', \'id\', or default, which is \'id\'.
 */",
 "/**
 * Retrieve full permalink for current post or post ID.
 *
 * @since 1.0.0
 *
 * @param int $id Optional. Post ID.
 * @param bool $leavename Optional, defaults to false. Whether to keep post name or page name.
 * @return string
 */",
 "/**
 * Retrieve the permalink for a post with a custom post type.
 *
 * @since 3.0.0
 *
 * @param int $id Optional. Post ID.
 * @param bool $leavename Optional, defaults to false. Whether to keep post name.
 * @param bool $sample Optional, defaults to false. Is it a sample permalink.
 * @return string
 */",
 "/**
 * Retrieve permalink from post ID.
 *
 * @since 1.0.0
 *
 * @param int $post_id Optional. Post ID.
 * @param mixed $deprecated Not used.
 * @return string
 */",
 "/**
 * Retrieve the permalink for current page or page ID.
 *
 * Respects page_on_front. Use this one.
 *
 * @since 1.5.0
 *
 * @param int $id Optional. Post ID.
 * @param bool $leavename Optional, defaults to false. Whether to keep page name.
 * @param bool $sample Optional, defaults to false. Is it a sample permalink.
 * @return string
 */",
 "/**
 * Retrieve the page permalink.
 *
 * Ignores page_on_front. Internal use only.
 *
 * @since 2.1.0
 * @access private
 *
 * @param int $id Optional. Post ID.
 * @param bool $leavename Optional. Leave name.
 * @param bool $sample Optional. Sample permalink.
 * @return string
 */",
 "/**
 * Retrieve permalink for attachment.
 *
 * This can be used in the WordPress Loop or outside of it.
 *
 * @since 2.0.0
 *
 * @param int $id Optional. Post ID.
 * @return string
 */",
 "/**
 * Retrieve the permalink for the year archives.
 *
 * @since 1.5.0
 *
 * @param int|bool $year False for current year or year for permalink.
 * @return string
 */",
 "/**
 * Retrieve the permalink for the month archives with year.
 *
 * @since 1.0.0
 *
 * @param bool|int $year False for current year. Integer of year.
 * @param bool|int $month False for current month. Integer of month.
 * @return string
 */",
 "/**
 * Retrieve the permalink for the day archives with year and month.
 *
 * @since 1.0.0
 *
 * @param bool|int $year False for current year. Integer of year.
 * @param bool|int $month False for current month. Integer of month.
 * @param bool|int $day False for current day. Integer of day.
 * @return string
 */",
 "/**
 * Display the permalink for the feed type.
 *
 * @since 3.0.0
 *
 * @param string $anchor The link\'s anchor text.
 * @param string $feed Optional, defaults to default feed. Feed type.
 */",
 "/**
 * Retrieve the permalink for the feed type.
 *
 * @since 1.5.0
 *
 * @param string $feed Optional, defaults to default feed. Feed type.
 * @return string
 */",
 "/**
 * Retrieve the permalink for the post comments feed.
 *
 * @since 2.2.0
 *
 * @param int $post_id Optional. Post ID.
 * @param string $feed Optional. Feed type.
 * @return string
 */",
 "/**
 * Display the comment feed link for a post.
 *
 * Prints out the comment feed link for a post. Link text is placed in the
 * anchor. If no link text is specified, default text is used. If no post ID is
 * specified, the current post is used.
 *
 * @package WordPress
 * @subpackage Feed
 * @since 2.5.0
 *
 * @param string $link_text Descriptive text.
 * @param int $post_id Optional post ID. Default to current post.
 * @param string $feed Optional. Feed format.
 * @return string Link to the comment feed for the current post.
*/",
 "/**
 * Retrieve the feed link for a given author.
 *
 * Returns a link to the feed for all posts by a given author. A specific feed
 * can be requested or left blank to get the default feed.
 *
 * @package WordPress
 * @subpackage Feed
 * @since 2.5.0
 *
 * @param int $author_id ID of an author.
 * @param string $feed Optional. Feed type.
 * @return string Link to the feed for the author specified by $author_id.
*/",
 "/**
 * Retrieve the feed link for a category.
 *
 * Returns a link to the feed for all posts in a given category. A specific feed
 * can be requested or left blank to get the default feed.
 *
 * @package WordPress
 * @subpackage Feed
 * @since 2.5.0
 *
 * @param int $cat_id ID of a category.
 * @param string $feed Optional. Feed type.
 * @return string Link to the feed for the category specified by $cat_id.
*/",
 "/**
 * Retrieve the feed link for a term.
 *
 * Returns a link to the feed for all posts in a given term. A specific feed
 * can be requested or left blank to get the default feed.
 *
 * @since 3.0
 *
 * @param int $term_id ID of a category.
 * @param string $taxonomy Optional. Taxonomy of $term_id
 * @param string $feed Optional. Feed type.
 * @return string Link to the feed for the term specified by $term_id and $taxonomy.
*/",
 "/**
 * Retrieve permalink for feed of tag.
 *
 * @since 2.3.0
 *
 * @param int $tag_id Tag ID.
 * @param string $feed Optional. Feed type.
 * @return string
 */",
 "/**
 * Retrieve edit tag link.
 *
 * @since 2.7.0
 *
 * @param int $tag_id Tag ID
 * @param string $taxonomy Taxonomy
 * @return string
 */",
 "/**
 * Display or retrieve edit tag link with formatting.
 *
 * @since 2.7.0
 *
 * @param string $link Optional. Anchor text.
 * @param string $before Optional. Display before edit link.
 * @param string $after Optional. Display after edit link.
 * @param int|object $tag Tag object or ID
 * @return string HTML content.
 */",
 "/**
 * Retrieve edit term url.
 *
 * @since 3.1.0
 *
 * @param int $term_id Term ID
 * @param string $taxonomy Taxonomy
 * @param string $object_type The object type
 * @return string
 */",
 "/**
 * Display or retrieve edit term link with formatting.
 *
 * @since 3.1.0
 *
 * @param string $link Optional. Anchor text.
 * @param string $before Optional. Display before edit link.
 * @param string $after Optional. Display after edit link.
 * @param object $term Term object
 * @return string HTML content.
 */",
 "/**
* Retrieve permalink for search.
*
* @since  3.0.0
* @param string $query Optional. The query string to use. If empty the current query is used.
* @return string
*/",
 "/**
 * Retrieve the permalink for the feed of the search results.
 *
 * @since 2.5.0
 *
 * @param string $search_query Optional. Search query.
 * @param string $feed Optional. Feed type.
 * @return string
 */",
 "/**
 * Retrieve the permalink for the comments feed of the search results.
 *
 * @since 2.5.0
 *
 * @param string $search_query Optional. Search query.
 * @param string $feed Optional. Feed type.
 * @return string
 */",
 "/**
 * Retrieve the permalink for a post type archive.
 *
 * @since 3.1.0
 *
 * @param string $post_type Post type
 * @return string
 */",
 "/**
 * Retrieve the permalink for a post type archive feed.
 *
 * @since 3.1.0
 *
 * @param string $post_type Post type
 * @param string $feed Optional. Feed type
 * @return string
 */",
 "/**
 * Retrieve edit posts link for post.
 *
 * Can be used within the WordPress loop or outside of it. Can be used with
 * pages, posts, attachments, and revisions.
 *
 * @since 2.3.0
 *
 * @param int $id Optional. Post ID.
 * @param string $context Optional, defaults to display. How to write the \'&\', defaults to \'&amp;\'.
 * @return string
 */",
 "/**
 * Display edit post link for post.
 *
 * @since 1.0.0
 *
 * @param string $link Optional. Anchor text.
 * @param string $before Optional. Display before edit link.
 * @param string $after Optional. Display after edit link.
 * @param int $id Optional. Post ID.
 */",
 "/**
 * Retrieve delete posts link for post.
 *
 * Can be used within the WordPress loop or outside of it, with any post type.
 *
 * @since 2.9.0
 *
 * @param int $id Optional. Post ID.
 * @param string $deprecated Not used.
 * @param bool $force_delete Whether to bypass trash and force deletion. Default is false.
 * @return string
 */",
 "/**
 * Retrieve edit comment link.
 *
 * @since 2.3.0
 *
 * @param int $comment_id Optional. Comment ID.
 * @return string
 */",
 "/**
 * Display or retrieve edit comment link with formatting.
 *
 * @since 1.0.0
 *
 * @param string $link Optional. Anchor text.
 * @param string $before Optional. Display before edit link.
 * @param string $after Optional. Display after edit link.
 * @return string|null HTML content, if $echo is set to false.
 */",
 "/**
 * Display edit bookmark (literally a URL external to blog) link.
 *
 * @since 2.7.0
 *
 * @param int $link Optional. Bookmark ID.
 * @return string
 */",
 "/**
 * Display edit bookmark (literally a URL external to blog) link anchor content.
 *
 * @since 2.7.0
 *
 * @param string $link Optional. Anchor text.
 * @param string $before Optional. Display before edit link.
 * @param string $after Optional. Display after edit link.
 * @param int $bookmark Optional. Bookmark ID.
 */",
 "/**
 * Retrieve previous post that is adjacent to current post.
 *
 * @since 1.5.0
 *
 * @param bool $in_same_cat Optional. Whether post should be in a same category.
 * @param array|string $excluded_categories Optional. Array or comma-separated list of excluded category IDs.
 * @return mixed Post object if successful. Null if global $post is not set. Empty string if no corresponding post exists.
 */",
 "/**
 * Retrieve next post that is adjacent to current post.
 *
 * @since 1.5.0
 *
 * @param bool $in_same_cat Optional. Whether post should be in a same category.
 * @param array|string $excluded_categories Optional. Array or comma-separated list of excluded category IDs.
 * @return mixed Post object if successful. Null if global $post is not set. Empty string if no corresponding post exists.
 */",
 "/**
 * Retrieve adjacent post.
 *
 * Can either be next or previous post.
 *
 * @since 2.5.0
 *
 * @param bool $in_same_cat Optional. Whether post should be in a same category.
 * @param array|string $excluded_categories Optional. Array or comma-separated list of excluded category IDs.
 * @param bool $previous Optional. Whether to retrieve previous post.
 * @return mixed Post object if successful. Null if global $post is not set. Empty string if no corresponding post exists.
 */",
 "/**
 * Get adjacent post relational link.
 *
 * Can either be next or previous post relational link.
 *
 * @since 2.8.0
 *
 * @param string $title Optional. Link title format.
 * @param bool $in_same_cat Optional. Whether link should be in a same category.
 * @param array|string $excluded_categories Optional. Array or comma-separated list of excluded category IDs.
 * @param bool $previous Optional, default is true. Whether to display link to previous or next post.
 * @return string
 */",
 "/**
 * Display relational links for the posts adjacent to the current post.
 *
 * @since 2.8.0
 *
 * @param string $title Optional. Link title format.
 * @param bool $in_same_cat Optional. Whether link should be in a same category.
 * @param array|string $excluded_categories Optional. Array or comma-separated list of excluded category IDs.
 */",
 "/**
 * Display relational links for the posts adjacent to the current post for single post pages.
 *
 * This is meant to be attached to actions like \'wp_head\'. Do not call this directly in plugins or theme templates.
 * @since 3.0.0
 *
 */",
 "/**
 * Display relational link for the next post adjacent to the current post.
 *
 * @since 2.8.0
 *
 * @param string $title Optional. Link title format.
 * @param bool $in_same_cat Optional. Whether link should be in a same category.
 * @param array|string $excluded_categories Optional. Array or comma-separated list of excluded category IDs.
 */",
 "/**
 * Display relational link for the previous post adjacent to the current post.
 *
 * @since 2.8.0
 *
 * @param string $title Optional. Link title format.
 * @param bool $in_same_cat Optional. Whether link should be in a same category.
 * @param array|string $excluded_categories Optional. Array or comma-separated list of excluded category IDs.
 */",
 "/**
 * Retrieve boundary post.
 *
 * Boundary being either the first or last post by publish date within the constraints specified
 * by $in_same_cat or $excluded_categories.
 *
 * @since 2.8.0
 *
 * @param bool $in_same_cat Optional. Whether returned post should be in a same category.
 * @param array|string $excluded_categories Optional. Array or comma-separated list of excluded category IDs.
 * @param bool $start Optional. Whether to retrieve first or last post.
 * @return object
 */",
 "/**
 * Display previous post link that is adjacent to the current post.
 *
 * @since 1.5.0
 *
 * @param string $format Optional. Link anchor format.
 * @param string $link Optional. Link permalink format.
 * @param bool $in_same_cat Optional. Whether link should be in a same category.
 * @param array|string $excluded_categories Optional. Array or comma-separated list of excluded category IDs.
 */",
 "/**
 * Display next post link that is adjacent to the current post.
 *
 * @since 1.5.0
 *
 * @param string $format Optional. Link anchor format.
 * @param string $link Optional. Link permalink format.
 * @param bool $in_same_cat Optional. Whether link should be in a same category.
 * @param array|string $excluded_categories Optional. Array or comma-separated list of excluded category IDs.
 */",
 "/**
 * Display adjacent post link.
 *
 * Can be either next post link or previous.
 *
 * @since 2.5.0
 *
 * @param string $format Link anchor format.
 * @param string $link Link permalink format.
 * @param bool $in_same_cat Optional. Whether link should be in a same category.
 * @param array|string $excluded_categories Optional. Array or comma-separated list of excluded category IDs.
 * @param bool $previous Optional, default is true. Whether to display link to previous or next post.
 */",
 "/**
 * Retrieve links for page numbers.
 *
 * @since 1.5.0
 *
 * @param int $pagenum Optional. Page ID.
 * @param bool $escape Optional. Whether to escape the URL for display, with esc_url(). Defaults to true.
* 	Otherwise, prepares the URL with esc_url_raw().
 * @return string
 */",
 "/**
 * Retrieve next posts page link.
 *
 * Backported from 2.1.3 to 2.0.10.
 *
 * @since 2.0.10
 *
 * @param int $max_page Optional. Max pages.
 * @return string
 */",
 "/**
 * Display or return the next posts page link.
 *
 * @since 0.71
 *
 * @param int $max_page Optional. Max pages.
 * @param boolean $echo Optional. Echo or return;
 */",
 "/**
 * Return the next posts page link.
 *
 * @since 2.7.0
 *
 * @param string $label Content for link text.
 * @param int $max_page Optional. Max pages.
 * @return string|null
 */",
 "/**
 * Display the next posts page link.
 *
 * @since 0.71
 * @uses get_next_posts_link()
 *
 * @param string $label Content for link text.
 * @param int $max_page Optional. Max pages.
 */",
 "/**
 * Retrieve previous posts page link.
 *
 * Will only return string, if not on a single page or post.
 *
 * Backported to 2.0.10 from 2.1.3.
 *
 * @since 2.0.10
 *
 * @return string|null
 */",
 "/**
 * Display or return the previous posts page link.
 *
 * @since 0.71
 *
 * @param boolean $echo Optional. Echo or return;
 */",
 "/**
 * Return the previous posts page link.
 *
 * @since 2.7.0
 *
 * @param string $label Optional. Previous page link text.
 * @return string|null
 */",
 "/**
 * Display the previous posts page link.
 *
 * @since 0.71
 * @uses get_previous_posts_link()
 *
 * @param string $label Optional. Previous page link text.
 */",
 "/**
 * Return post pages link navigation for previous and next pages.
 *
 * @since 2.8
 *
 * @param string|array $args Optional args.
 * @return string The posts link navigation.
 */",
 "/**
 * Display post pages link navigation for previous and next pages.
 *
 * @since 0.71
 *
 * @param string $sep Optional. Separator for posts navigation links.
 * @param string $prelabel Optional. Label for previous pages.
 * @param string $nxtlabel Optional Label for next pages.
 */",
 "/**
 * Retrieve comments page number link.
 *
 * @since 2.7.0
 *
 * @param int $pagenum Optional. Page number.
 * @return string
 */",
 "/**
 * Return the link to next comments page.
 *
 * @since 2.7.1
 *
 * @param string $label Optional. Label for link text.
 * @param int $max_page Optional. Max page.
 * @return string|null
 */",
 "/**
 * Display the link to next comments page.
 *
 * @since 2.7.0
 *
 * @param string $label Optional. Label for link text.
 * @param int $max_page Optional. Max page.
 */",
 "/**
 * Return the previous comments page link.
 *
 * @since 2.7.1
 *
 * @param string $label Optional. Label for comments link text.
 * @return string|null
 */",
 "/**
 * Display the previous comments page link.
 *
 * @since 2.7.0
 *
 * @param string $label Optional. Label for comments link text.
 */",
 "/**
 * Create pagination links for the comments on the current post.
 *
 * @see paginate_links()
 * @since 2.7.0
 *
 * @param string|array $args Optional args. See paginate_links().
 * @return string Markup for pagination links.
*/",
 "/**
 * Retrieve the Press This bookmarklet link.
 *
 * Use this in \'a\' element \'href\' attribute.
 *
 * @since 2.6.0
 *
 * @return string
 */",
 "/**
 * Retrieve the home url for the current site.
 *
 * Returns the \'home\' option with the appropriate protocol, \'https\' if
 * is_ssl() and \'http\' otherwise. If $scheme is \'http\' or \'https\', is_ssl() is
 * overridden.
 *
 * @package WordPress
 * @since 3.0.0
 *
 * @uses get_home_url()
 *
 * @param  string $path   (optional) Path relative to the home url.
 * @param  string $scheme (optional) Scheme to give the home url context. Currently \'http\', \'https\', or \'relative\'.
 * @return string Home url link with optional path appended.
*/",
 "/**
 * Retrieve the home url for a given site.
 *
 * Returns the \'home\' option with the appropriate protocol, \'https\' if
 * is_ssl() and \'http\' otherwise. If $scheme is \'http\' or \'https\', is_ssl() is
 * overridden.
 *
 * @package WordPress
 * @since 3.0.0
 *
 * @param  int $blog_id   (optional) Blog ID. Defaults to current blog.
 * @param  string $path   (optional) Path relative to the home url.
 * @param  string $scheme (optional) Scheme to give the home url context. Currently \'http\', \'https\', or \'relative\'.
 * @return string Home url link with optional path appended.
*/",
 "/**
 * Retrieve the site url for the current site.
 *
 * Returns the \'site_url\' option with the appropriate protocol, \'https\' if
 * is_ssl() and \'http\' otherwise. If $scheme is \'http\' or \'https\', is_ssl() is
 * overridden.
 *
 * @package WordPress
 * @since 2.6.0
 *
 * @uses get_site_url()
 *
 * @param string $path Optional. Path relative to the site url.
 * @param string $scheme Optional. Scheme to give the site url context. Currently \'http\', \'https\', \'login\', \'login_post\', \'admin\', or \'relative\'.
 * @return string Site url link with optional path appended.
*/",
 "/**
 * Retrieve the site url for a given site.
 *
 * Returns the \'site_url\' option with the appropriate protocol, \'https\' if
 * is_ssl() and \'http\' otherwise. If $scheme is \'http\' or \'https\', is_ssl() is
 * overridden.
 *
 * @package WordPress
 * @since 3.0.0
 *
 * @param int $blog_id (optional) Blog ID. Defaults to current blog.
 * @param string $path Optional. Path relative to the site url.
 * @param string $scheme Optional. Scheme to give the site url context. Currently \'http\', \'https\', \'login\', \'login_post\', \'admin\', or \'relative\'.
 * @return string Site url link with optional path appended.
*/",
 "/**
 * Retrieve the url to the admin area for the current site.
 *
 * @package WordPress
 * @since 2.6.0
 *
 * @param string $path Optional path relative to the admin url.
 * @param string $scheme The scheme to use. Default is \'admin\', which obeys force_ssl_admin() and is_ssl(). \'http\' or \'https\' can be passed to force those schemes.
 * @return string Admin url link with optional path appended.
*/",
 "/**
 * Retrieve the url to the admin area for a given site.
 *
 * @package WordPress
 * @since 3.0.0
 *
 * @param int $blog_id (optional) Blog ID. Defaults to current blog.
 * @param string $path Optional path relative to the admin url.
 * @param string $scheme The scheme to use. Default is \'admin\', which obeys force_ssl_admin() and is_ssl(). \'http\' or \'https\' can be passed to force those schemes.
 * @return string Admin url link with optional path appended.
*/",
 "/**
 * Retrieve the url to the includes directory.
 *
 * @package WordPress
 * @since 2.6.0
 *
 * @param string $path Optional. Path relative to the includes url.
 * @return string Includes url link with optional path appended.
*/",
 "/**
 * Retrieve the url to the content directory.
 *
 * @package WordPress
 * @since 2.6.0
 *
 * @param string $path Optional. Path relative to the content url.
 * @return string Content url link with optional path appended.
*/",
 "/**
*Retrievetheurltothepluginsdirectoryortoaspecificfilewithinthatdirectory.
*Youcanhardcodethepluginslugin$pathorpass__FILE__asasecondargumenttogetthecorrectfoldername.
*
*@packageWordPress
*@since2.6.0
*
*@paramstring$pathOptional.Pathrelativetothepluginsurl.
*@paramstring$pluginOptional.Thepluginfilethatyouwanttoberelativeto-i.e.passin__FILE__
*@returnstringPluginsurllinkwithoptionalpathappended.
*/",
 "/**
*Retrievethesiteurlforthecurrentnetwork.
*
*Returnsthesiteurlwiththeappropriateprotocol,\'https\'if
*is_ssl()and\'http\'otherwise.If$schemeis\'http\'or\'https\',is_ssl()is
*overridden.
*
*@packageWordPress
*@since3.0.0
*
*@paramstring$pathOptional.Pathrelativetothesiteurl.
*@paramstring$schemeOptional.Schemetogivethesiteurlcontext.Currently\'http\',\'https\',\'login\',\'login_post\',\'admin\',or\'relative\'.
*@returnstringSiteurllinkwithoptionalpathappended.
*/",
 "/**
*Retrievethehomeurlforthecurrentnetwork.
*
*Returnsthehomeurlwiththeappropriateprotocol,\'https\'if
*is_ssl()and\'http\'otherwise.If$schemeis\'http\'or\'https\',is_ssl()is
*overridden.
*
*@packageWordPress
*@since3.0.0
*
*@paramstring$path(optional)Pathrelativetothehomeurl.
*@paramstring$scheme(optional)Schemetogivethehomeurlcontext.Currently\'http\',\'https\',or\'relative\'.
*@returnstringHomeurllinkwithoptionalpathappended.
*/",
 "/**
*Retrievetheurltotheadminareaforthenetwork.
*
*@packageWordPress
*@since3.0.0
*
*@paramstring$pathOptionalpathrelativetotheadminurl.
*@paramstring$schemeTheschemetouse.Defaultis\'admin\',whichobeysforce_ssl_admin()andis_ssl().\'http\'or\'https\'canbepassedtoforcethoseschemes.
*@returnstringAdminurllinkwithoptionalpathappended.
*/",
 "/**
*Retrievetheurltotheadminareaforthecurrentuser.
*
*@packageWordPress
*@since3.0.0
*
*@paramstring$pathOptionalpathrelativetotheadminurl.
*@paramstring$schemeTheschemetouse.Defaultis\'admin\',whichobeysforce_ssl_admin()andis_ssl().\'http\'or\'https\'canbepassedtoforcethoseschemes.
*@returnstringAdminurllinkwithoptionalpathappended.
*/",
 "/**
*Retrievetheurltotheadminareaforeitherthecurrentblogorthenetworkdependingoncontext.
*
*@packageWordPress
*@since3.1.0
*
*@paramstring$pathOptionalpathrelativetotheadminurl.
*@paramstring$schemeTheschemetouse.Defaultis\'admin\',whichobeysforce_ssl_admin()andis_ssl().\'http\'or\'https\'canbepassedtoforcethoseschemes.
*@returnstringAdminurllinkwithoptionalpathappended.
*/",
 "/**
*SettheschemeforaURL
*
*@since3.4.0
*
*@paramstring$urlAbsoluteurlthatincludesascheme
*@paramstring$schemeOptional.Schemetogive$url.Currently\'http\',\'https\',\'login\',\'login_post\',\'admin\',or\'relative\'.
*@returnstring$urlURLwithchosenscheme.
*/",
 "/**
*GettheURLtotheuser\'sdashboard.
*
*Ifauserdoesnotbelongtoanysite,theglobaluserdashboardisused.Iftheuserbelongstothecurrentsite,
*thedashboardforthecurrentsiteisreturned.Iftheusercannoteditthecurrentsite,thedashboardtotheuser\'s
*primaryblogisreturned.
*
*@since3.1.0
*
*@paramint$user_idUserID
*@paramstring$pathOptionalpathrelativetothedashboard.Useonlypathsknowntobothbloganduseradmins.
*@paramstring$schemeTheschemetouse.Defaultis\'admin\',whichobeysforce_ssl_admin()andis_ssl().\'http\'or\'https\'canbepassedtoforcethoseschemes.
*@returnstringDashboardurllinkwithoptionalpathappended.
*/",
 "/**
*GettheURLtotheuser\'sprofileeditor.
*
*@since3.1.0
*
*@paramint$userUserID
*@paramstring$schemeTheschemetouse.Defaultis\'admin\',whichobeysforce_ssl_admin()andis_ssl().\'http\'or\'https\'canbepassedtoforcethoseschemes.
*@returnstringDashboardurllinkwithoptionalpathappended.
*/",
 "/**
*Outputrel=canonicalforsingularqueries.
*
*@packageWordPress
*@since2.9.0
*/",
 "/**
*Returnashortlinkforapost,page,attachment,orblog.
*
*Thisfunctionexiststoprovideashortlinktagthatallthemesandpluginscantarget.Apluginmusthookinto
*providetheactualshortlinks.Defaultshortlinksupportislimitedtoproviding?p=stylelinksforposts.
*Pluginscanshort-circuitthisfunctionviathepre_get_shortlinkfilterorfiltertheoutput
*viatheget_shortlinkfilter.
*
*@since3.0.0.
*
*@paramint$idApostorblogid.Defaultis0,whichmeansthecurrentpostorblog.
*@paramstring$contextWhethertheidisa\'blog\'id,\'post\'id,or\'media\'id.If\'post\',thepost_typeofthepostisconsulted.If\'query\',thecurrentqueryisconsultedtodeterminetheidandcontext.Defaultis\'post\'.
*@parambool$allow_slugsWhethertoallowpostslugsintheshortlink.Itisuptothepluginhowandwhethertohonorthis.
*@returnstringAshortlinkoranemptystringifnoshortlinkexistsfortherequestedresourceorifshortlinksarenotenabled.
*/",
 "/**
*Injectrel=shortlinkintoheadifashortlinkisdefinedforthecurrentpage.
*
*Attachedtothewp_headaction.
*
*@since3.0.0
*
*@useswp_get_shortlink()
*/",
 "/**
*SendaLink:rel=shortlinkheaderifashortlinkisdefinedforthecurrentpage.
*
*Attachedtothewpaction.
*
*@since3.0.0
*
*@useswp_get_shortlink()
*/",
 "/**
 * Display the Short Link for a Post
 *
 * Must be called from inside \"The Loop\"
 *
 * Call like the_shortlink(__(\'Shortlinkage FTW\'))
 *
 * @since 3.0.0
 *
 * @param string $text Optional The link text or HTML to be displayed. Defaults to \'This is the short link.\'
 * @param string $title Optional The tooltip for the link. Must be sanitized. Defaults to the sanitized post title.
 * @param string $before Optional HTML to display before the link.
 * @param string $after Optional HTML to display after the link.
 */",
 "/**
 * Whether a subdomain configuration is enabled.
 *
 * @since 3.0.0
 *
 * @return bool True if subdomain configuration is enabled, false otherwise.
 */",
 "/**
 * Returns array of network plugin files to be included in global scope.
 *
 * The default directory is wp-content/plugins. To change the default directory
 * manually, define <code>WP_PLUGIN_DIR</code> and <code>WP_PLUGIN_URL</code>
 * in wp-config.php.
 *
 * @access private
 * @since 3.1.0
 * @return array Files to include
 */",
 "/**
 * Checks status of current blog.
 *
 * Checks if the blog is deleted, inactive, archived, or spammed.
 *
 * Dies with a default message if the blog does not pass the check.
 *
 * To change the default message when a blog does not pass the check,
 * use the wp-content/blog-deleted.php, blog-inactive.php and
 * blog-suspended.php drop-ins.
 *
 * @return bool|string Returns true on success, or drop-in file to include.
 */",
 "/**
 * Sets current site name.
 *
 * @access private
 * @since 3.0.0
 * @return object $current_site object with site_name
 */",
 "/**
 * Sets current_site object.
 *
 * @access private
 * @since 3.0.0
 * @return object $current_site object
 */",
 "/**
 * Displays a failure message.
 *
 * Used when a blog\'s tables do not exist. Checks for a missing $wpdb->site table as well.
 *
 * @access private
 * @since 3.0.0
 */",
 "/**
	 * Constructor - Sets up object properties.
	 *
	 * @since 2.2.0
	 * @return AtomServer
	 */",
 "/**
	 * Handle ATOMPUB request.
	 *
	 * @since 2.2.0
	 */",
 "/**
	 * Retrieve XML for ATOMPUB service.
	 *
	 * @since 2.2.0
	 */",
 "/**
	 * Retrieve categories list in XML format.
	 *
	 * @since 2.2.0
	 */",
 "/**
	 * Create new post.
	 *
	 * @since 2.2.0
	 */",
 "/**
	 * Retrieve post.
	 *
	 * @since 2.2.0
	 *
	 * @param int $postID Post ID.
	 */",
 "/**
	 * Update post.
	 *
	 * @since 2.2.0
	 *
	 * @param int $postID Post ID.
	 */",
 "/**
	 * Remove post.
	 *
	 * @since 2.2.0
	 *
	 * @param int $postID Post ID.
	 */",
 "/**
	 * Retrieve attachment.
	 *
	 * @since 2.2.0
	 *
	 * @param int $postID Optional. Post ID.
	 */",
 "/**
	 * Create new attachment.
	 *
	 * @since 2.2.0
	 */",
 "/**
	 * Update attachment.
	 *
	 * @since 2.2.0
	 *
	 * @param int $postID Post ID.
	 */",
 "/**
	 * Remove attachment.
	 *
	 * @since 2.2.0
	 *
	 * @param int $postID Post ID.
	 */",
 "/**
	 * Retrieve attachment from post.
	 *
	 * @since 2.2.0
	 *
	 * @param int $postID Post ID.
	 */",
 "/**
	 * Upload file to blog and add attachment to post.
	 *
	 * @since 2.2.0
	 *
	 * @param int $postID Post ID.
	 */",
 "/**
	 * Retrieve entries URL.
	 *
	 * @since 2.2.0
	 *
	 * @param int $page Page ID.
	 * @return string
	 */",
 "/**
	 * Display entries URL.
	 *
	 * @since 2.2.0
	 *
	 * @param int $page Page ID.
	 */",
 "/**
	 * Retrieve categories URL.
	 *
	 * @since 2.2.0
	 *
	 * @param mixed $deprecated Not used.
	 * @return string
	 */",
 "/**
	 * Display category URL.
	 *
	 * @since 2.2.0
	 */",
 "/**
	 * Retrieve attachment URL.
	 *
	 * @since 2.2.0
	 *
	 * @param int $page Page ID.
	 * @return string
	 */",
 "/**
	 * Display attachment URL.
	 *
	 * @since 2.2.0
	 *
	 * @param int $page Page ID.
	 */",
 "/**
	 * Retrieve service URL.
	 *
	 * @since 2.3.0
	 *
	 * @return string
	 */",
 "/**
	 * Retrieve entry URL.
	 *
	 * @since 2.7.0
	 *
	 * @param int $postID Post ID.
	 * @return string
	 */",
 "/**
	 * Display entry URL.
	 *
	 * @since 2.7.0
	 *
	 * @param int $postID Post ID.
	 */",
 "/**
	 * Retrieve media URL.
	 *
	 * @since 2.2.0
	 *
	 * @param int $postID Post ID.
	 * @return string
	 */",
 "/**
	 * Display the media URL.
	 *
	 * @since 2.2.0
	 *
	 * @param int $postID Post ID.
	 */",
 "/**
	 * Set the current entry to post ID.
	 *
	 * @since 2.2.0
	 *
	 * @param int $postID Post ID.
	 */",
 "/**
	 * Display posts XML.
	 *
	 * @since 2.2.0
	 *
	 * @param int $page Optional. Page ID.
	 * @param string $post_type Optional, default is \'post\'. Post Type.
	 */",
 "/**
	 * Display attachment XML.
	 *
	 * @since 2.2.0
	 *
	 * @param int $page Page ID.
	 * @param string $post_type Optional, default is \'attachment\'. Post type.
	 */",
 "/**
	 * Retrieve feed XML.
	 *
	 * @since 2.2.0
	 *
	 * @param int $page Page ID.
	 * @param string $post_type Optional, default is post. Post type.
	 * @return string
	 */",
 "/**
	 * Display entry XML.
	 *
	 * @since 2.2.0
	 *
	 * @param int $postID Post ID.
	 * @param string $post_type Optional, default is post. Post type.
	 * @return string.
	 */",
 "/**
	 * Display post content XML.
	 *
	 * @since 2.3.0
	 */",
 "/**
	 * Set \'OK\' (200) status header.
	 *
	 * @since 2.2.0
	 */",
 "/**
	 * Set \'No Content\' (204) status header.
	 *
	 * @since 2.2.0
	 */",
 "/**
	 * Display \'Internal Server Error\' (500) status header.
	 *
	 * @since 2.2.0
	 *
	 * @param string $msg Optional. Status string.
	 */",
 "/**
	 * Set \'Bad Request\' (400) status header.
	 *
	 * @since 2.2.0
	 */",
 "/**
	 * Set \'Length Required\' (411) status header.
	 *
	 * @since 2.2.0
	 */",
 "/**
	 * Set \'Unsupported Media Type\' (415) status header.
	 *
	 * @since 2.2.0
	 */",
 "/**
	 * Set \'Forbidden\' (403) status header.
	 *
	 * @since 2.6.0
	 */",
 "/**
	 * Set \'Not Found\' (404) status header.
	 *
	 * @since 2.2.0
	 */",
 "/**
	 * Set \'Not Allowed\' (405) status header.
	 *
	 * @since 2.2.0
	 */",
 "/**
	 * Display Redirect (302) content and set status headers.
	 *
	 * @since 2.3.0
	 */",
 "/**
	 * Set \'Client Error\' (400) status header.
	 *
	 * @since 2.2.0
	 */",
 "/**
	 * Set created status headers (201).
	 *
	 * Sets the \'content-type\', \'content-location\', and \'location\'.
	 *
	 * @since 2.2.0
	 */",
 "/**
	 * Set \'Auth Required\' (401) headers.
	 *
	 * @since 2.2.0
	 *
	 * @param string $msg Status header content and HTML content.
	 */",
 "/**
	 * Display XML and set headers with content type.
	 *
	 * @since 2.2.0
	 *
	 * @param string $xml Display feed content.
	 * @param string $ctype Optional, default is \'atom+xml\'. Feed content type.
	 */",
 "/**
	 * Sanitize content for database usage.
	 *
	 * @since 2.2.0
	 *
	 * @param array $array Sanitize array and multi-dimension array.
	 */",
 "/**
	 * Access credential through various methods and perform login.
	 *
	 * @since 2.2.0
	 *
	 * @return bool
	 */",
 "/**
	 * Retrieve accepted content types.
	 *
	 * @since 2.2.0
	 *
	 * @param array $types Optional. Content Types.
	 * @return string
	 */",
 "/**
	 * Process conditionals for posts.
	 *
	 * @since 2.2.0
	 */",
 "/**
	 * Convert RFC3339 time string to timestamp.
	 *
	 * @since 2.3.0
	 *
	 * @param string $str String to time.
	 * @return bool|int false if format is incorrect.
	 */",
 "/**
	 * Retrieve published time to display in XML.
	 *
	 * @since 2.3.0
	 *
	 * @param string $published Time string.
	 * @return string
	 */",
 "/**
 * WordPress AtomPub API implementation.
 *
 * @package WordPress
 * @subpackage Publishing
 * @since 2.2.0
 */",
 "/**
 * Retrieve category link URL.
 *
 * @since 1.0.0
 * @see get_term_link()
 *
 * @param int|object $category Category ID or object.
 * @return string Link on success, empty string if category does not exist.
 */",
 "/**
 * Retrieve category parents with separator.
 *
 * @since 1.2.0
 *
 * @param int $id Category ID.
 * @param bool $link Optional, default is false. Whether to format with link.
 * @param string $separator Optional, default is \'/\'. How to separate categories.
 * @param bool $nicename Optional, default is false. Whether to use nice name for display.
 * @param array $visited Optional. Already linked to categories to prevent duplicates.
 * @return string
 */",
 "/**
 * Retrieve post categories.
 *
 * @since 0.71
 * @uses $post
 *
 * @param int $id Optional, default to current post ID. The post ID.
 * @return array
 */",
 "/**
 * Sort categories by name.
 *
 * Used by usort() as a callback, should not be used directly. Can actually be
 * used to sort any term object.
 *
 * @since 2.3.0
 * @access private
 *
 * @param object $a
 * @param object $b
 * @return int
 */",
 "/**
 * Sort categories by ID.
 *
 * Used by usort() as a callback, should not be used directly. Can actually be
 * used to sort any term object.
 *
 * @since 2.3.0
 * @access private
 *
 * @param object $a
 * @param object $b
 * @return int
 */",
 "/**
 * Retrieve category name based on category ID.
 *
 * @since 0.71
 *
 * @param int $cat_ID Category ID.
 * @return string Category name.
 */",
 "/**
 * Retrieve category list in either HTML list or custom format.
 *
 * @since 1.5.1
 *
 * @param string $separator Optional, default is empty string. Separator for between the categories.
 * @param string $parents Optional. How to display the parents.
 * @param int $post_id Optional. Post ID to retrieve categories.
 * @return string
 */",
 "/**
 * Check if the current post in within any of the given categories.
 *
 * The given categories are checked against the post\'s categories\' term_ids, names and slugs.
 * Categories given as integers will only be checked against the post\'s categories\' term_ids.
 *
 * Prior to v2.5 of WordPress, category names were not supported.
 * Prior to v2.7, category slugs were not supported.
 * Prior to v2.7, only one category could be compared: in_category( $single_category ).
 * Prior to v2.7, this function could only be used in the WordPress Loop.
 * As of 2.7, the function can be used anywhere if it is provided a post ID or post object.
 *
 * @since 1.2.0
 *
 * @param int|string|array $category Category ID, name or slug, or array of said.
 * @param int|object $post Optional. Post to check instead of the current post. (since 2.7.0)
 * @return bool True if the current post is in any of the given categories.
 */",
 "/**
 * Display the category list for the post.
 *
 * @since 0.71
 *
 * @param string $separator Optional, default is empty string. Separator for between the categories.
 * @param string $parents Optional. How to display the parents.
 * @param int $post_id Optional. Post ID to retrieve categories.
 */",
 "/**
 * Retrieve category description.
 *
 * @since 1.0.0
 *
 * @param int $category Optional. Category ID. Will use global category ID by default.
 * @return string Category description, available.
 */",
 "/**
 * Display or retrieve the HTML dropdown list of categories.
 *
 * The list of arguments is below:
 *     \'show_option_all\' (string) - Text to display for showing all categories.
 *     \'show_option_none\' (string) - Text to display for showing no categories.
 *     \'orderby\' (string) default is \'ID\' - What column to use for ordering the
 * categories.
 *     \'order\' (string) default is \'ASC\' - What direction to order categories.
 *     \'show_count\' (bool|int) default is 0 - Whether to show how many posts are
 * in the category.
 *     \'hide_empty\' (bool|int) default is 1 - Whether to hide categories that
 * don\'t have any posts attached to them.
 *     \'child_of\' (int) default is 0 - See {@link get_categories()}.
 *     \'exclude\' (string) - See {@link get_categories()}.
 *     \'echo\' (bool|int) default is 1 - Whether to display or retrieve content.
 *     \'depth\' (int) - The max depth.
 *     \'tab_index\' (int) - Tab index for select element.
 *     \'name\' (string) - The name attribute value for select element.
 *     \'id\' (string) - The ID attribute value for select element. Defaults to name if omitted.
 *     \'class\' (string) - The class attribute value for select element.
 *     \'selected\' (int) - Which category ID is selected.
 *     \'taxonomy\' (string) - The name of the taxonomy to retrieve. Defaults to category.
 *
 * The \'hierarchical\' argument, which is disabled by default, will override the
 * depth argument, unless it is true. When the argument is false, it will
 * display all of the categories. When it is enabled it will use the value in
 * the \'depth\' argument.
 *
 * @since 2.1.0
 *
 * @param string|array $args Optional. Override default arguments.
 * @return string HTML content only if \'echo\' argument is 0.
 */",
 "/**
 * Display or retrieve the HTML list of categories.
 *
 * The list of arguments is below:
 *     \'show_option_all\' (string) - Text to display for showing all categories.
 *     \'orderby\' (string) default is \'ID\' - What column to use for ordering the
 * categories.
 *     \'order\' (string) default is \'ASC\' - What direction to order categories.
 *     \'show_count\' (bool|int) default is 0 - Whether to show how many posts are
 * in the category.
 *     \'hide_empty\' (bool|int) default is 1 - Whether to hide categories that
 * don\'t have any posts attached to them.
 *     \'use_desc_for_title\' (bool|int) default is 1 - Whether to use the
 * description instead of the category title.
 *     \'feed\' - See {@link get_categories()}.
 *     \'feed_type\' - See {@link get_categories()}.
 *     \'feed_image\' - See {@link get_categories()}.
 *     \'child_of\' (int) default is 0 - See {@link get_categories()}.
 *     \'exclude\' (string) - See {@link get_categories()}.
 *     \'exclude_tree\' (string) - See {@link get_categories()}.
 *     \'echo\' (bool|int) default is 1 - Whether to display or retrieve content.
 *     \'current_category\' (int) - See {@link get_categories()}.
 *     \'hierarchical\' (bool) - See {@link get_categories()}.
 *     \'title_li\' (string) - See {@link get_categories()}.
 *     \'depth\' (int) - The max depth.
 *
 * @since 2.1.0
 *
 * @param string|array $args Optional. Override default arguments.
 * @return string HTML content only if \'echo\' argument is 0.
 */",
 "/**
 * Display tag cloud.
 *
 * The text size is set by the \'smallest\' and \'largest\' arguments, which will
 * use the \'unit\' argument value for the CSS text size unit. The \'format\'
 * argument can be \'flat\' (default), \'list\', or \'array\'. The flat value for the
 * \'format\' argument will separate tags with spaces. The list value for the
 * \'format\' argument will format the tags in a UL HTML list. The array value for
 * the \'format\' argument will return in PHP array type format.
 *
 * The \'orderby\' argument will accept \'name\' or \'count\' and defaults to \'name\'.
 * The \'order\' is the direction to sort, defaults to \'ASC\' and can be \'DESC\'.
 *
 * The \'number\' argument is how many tags to return. By default, the limit will
 * be to return the top 45 tags in the tag cloud list.
 *
 * The \'topic_count_text_callback\' argument is a function, which, given the count
 * of the posts  with that tag, returns a text for the tooltip of the tag link.
 *
 * The \'exclude\' and \'include\' arguments are used for the {@link get_tags()}
 * function. Only one should be used, because only one will be used and the
 * other ignored, if they are both set.
 *
 * @since 2.3.0
 *
 * @param array|string $args Optional. Override default arguments.
 * @return array Generated tag cloud, only if no failures and \'array\' is set for the \'format\' argument.
 */",
 "/**
 * Default text for tooltip for tag links
 *
 * @param integer $count number of posts with that tag
 * @return string text for the tooltip of a tag link.
 */",
 "/**
 * Default topic count scaling for tag links
 *
 * @param integer $count number of posts with that tag
 * @return integer scaled count
 */",
 "/**
 * Generates a tag cloud (heatmap) from provided data.
 *
 * The text size is set by the \'smallest\' and \'largest\' arguments, which will
 * use the \'unit\' argument value for the CSS text size unit. The \'format\'
 * argument can be \'flat\' (default), \'list\', or \'array\'. The flat value for the
 * \'format\' argument will separate tags with spaces. The list value for the
 * \'format\' argument will format the tags in a UL HTML list. The array value for
 * the \'format\' argument will return in PHP array type format.
 *
 * The \'tag_cloud_sort\' filter allows you to override the sorting.
 * Passed to the filter: $tags array and $args array, has to return the $tags array
 * after sorting it.
 *
 * The \'orderby\' argument will accept \'name\' or \'count\' and defaults to \'name\'.
 * The \'order\' is the direction to sort, defaults to \'ASC\' and can be \'DESC\' or
 * \'RAND\'.
 *
 * The \'number\' argument is how many tags to return. By default, the limit will
 * be to return the entire tag cloud list.
 *
 * The \'topic_count_text_callback\' argument is a function, which given the count
 * of the posts  with that tag returns a text for the tooltip of the tag link.
 *
 * @todo Complete functionality.
 * @since 2.3.0
 *
 * @param array $tags List of tags.
 * @param string|array $args Optional, override default arguments.
 * @return string
 */",
 "/**
 * Callback for comparing objects based on name
 *
 * @since 3.1.0
 * @access private
 */",
 "/**
 * Callback for comparing objects based on count
 *
 * @since 3.1.0
 * @access private
 */",
 "/**
 * Retrieve HTML list content for category list.
 *
 * @uses Walker_Category to create HTML list content.
 * @since 2.1.0
 * @see Walker_Category::walk() for parameters and return description.
 */",
 "/**
 * Retrieve HTML dropdown (select) content for category list.
 *
 * @uses Walker_CategoryDropdown to create HTML dropdown content.
 * @since 2.1.0
 * @see Walker_CategoryDropdown::walk() for parameters and return description.
 */",
 "/**
	 * @see Walker::start_lvl()
	 * @since 2.1.0
	 *
	 * @param string $output Passed by reference. Used to append additional content.
	 * @param int $depth Depth of category. Used for tab indentation.
	 * @param array $args Will only append content if style argument value is \'list\'.
	 */",
 "/**
	 * @see Walker::end_lvl()
	 * @since 2.1.0
	 *
	 * @param string $output Passed by reference. Used to append additional content.
	 * @param int $depth Depth of category. Used for tab indentation.
	 * @param array $args Will only append content if style argument value is \'list\'.
	 */",
 "/**
	 * @see Walker::start_el()
	 * @since 2.1.0
	 *
	 * @param string $output Passed by reference. Used to append additional content.
	 * @param object $category Category data object.
	 * @param int $depth Depth of category in reference to parents.
	 * @param array $args
	 */",
 "/**
	 * @see Walker::end_el()
	 * @since 2.1.0
	 *
	 * @param string $output Passed by reference. Used to append additional content.
	 * @param object $page Not used.
	 * @param int $depth Depth of category. Not used.
	 * @param array $args Only uses \'list\' for whether should append to output.
	 */",
 "/**
 * Create HTML list of categories.
 *
 * @package WordPress
 * @since 2.1.0
 * @uses Walker
 */",
 "/**
	 * @see Walker::start_el()
	 * @since 2.1.0
	 *
	 * @param string $output Passed by reference. Used to append additional content.
	 * @param object $category Category data object.
	 * @param int $depth Depth of category. Used for padding.
	 * @param array $args Uses \'selected\' and \'show_count\' keys, if they exist.
	 */",
 "/**
 * Create HTML dropdown list of Categories.
 *
 * @package WordPress
 * @since 2.1.0
 * @uses Walker
 */",
 "/**
 * Retrieve the link to the tag.
 *
 * @since 2.3.0
 * @see get_term_link()
 *
 * @param int|object $tag Tag ID or object.
 * @return string Link on success, empty string if tag does not exist.
 */",
 "/**
 * Retrieve the tags for a post.
 *
 * @since 2.3.0
 * @uses apply_filters() Calls \'get_the_tags\' filter on the list of post tags.
 *
 * @param int $id Post ID.
 * @return array
 */",
 "/**
 * Retrieve the tags for a post formatted as a string.
 *
 * @since 2.3.0
 * @uses apply_filters() Calls \'the_tags\' filter on string list of tags.
 *
 * @param string $before Optional. Before tags.
 * @param string $sep Optional. Between tags.
 * @param string $after Optional. After tags.
 * @param int $id Optional. Post ID. Defaults to the current post.
 * @return string
 */",
 "/**
 * Retrieve the tags for a post.
 *
 * @since 2.3.0
 *
 * @param string $before Optional. Before list.
 * @param string $sep Optional. Separate items using this.
 * @param string $after Optional. After list.
 * @return string
 */",
 "/**
 * Retrieve tag description.
 *
 * @since 2.8
 *
 * @param int $tag Optional. Tag ID. Will use global tag ID by default.
 * @return string Tag description, available.
 */",
 "/**
 * Retrieve term description.
 *
 * @since 2.8
 *
 * @param int $term Optional. Term ID. Will use global term ID by default.
 * @param string $taxonomy Optional taxonomy name. Defaults to \'post_tag\'.
 * @return string Term description, available.
 */",
 "/**
 * Retrieve the terms of the taxonomy that are attached to the post.
 *
 * @since 2.5.0
 *
 * @param int $id Post ID.
 * @param string $taxonomy Taxonomy name.
 * @return array|bool False on failure. Array of term objects on success.
 */",
 "/**
 * Retrieve a post\'s terms as a list with specified format.
 *
 * @since 2.5.0
 *
 * @param int $id Post ID.
 * @param string $taxonomy Taxonomy name.
 * @param string $before Optional. Before list.
 * @param string $sep Optional. Separate items using this.
 * @param string $after Optional. After list.
 * @return string
 */",
 "/**
 * Display the terms in a list.
 *
 * @since 2.5.0
 *
 * @param int $id Post ID.
 * @param string $taxonomy Taxonomy name.
 * @param string $before Optional. Before list.
 * @param string $sep Optional. Separate items using this.
 * @param string $after Optional. After list.
 * @return null|bool False on WordPress error. Returns null when displaying.
 */",
 "/**
 * Check if the current post has any of given category.
 *
 * @since 3.1.0
 *
 * @param string|int|array $category Optional. The category name/term_id/slug or array of them to check for.
 * @param int|object $post Optional. Post to check instead of the current post.
 * @return bool True if the current post has any of the given categories (or any category, if no category specified).
 */",
 "/**
 * Check if the current post has any of given tags.
 *
 * The given tags are checked against the post\'s tags\' term_ids, names and slugs.
 * Tags given as integers will only be checked against the post\'s tags\' term_ids.
 * If no tags are given, determines if post has any tags.
 *
 * Prior to v2.7 of WordPress, tags given as integers would also be checked against the post\'s tags\' names and slugs (in addition to term_ids)
 * Prior to v2.7, this function could only be used in the WordPress Loop.
 * As of 2.7, the function can be used anywhere if it is provided a post ID or post object.
 *
 * @since 2.6.0
 *
 * @param string|int|array $tag Optional. The tag name/term_id/slug or array of them to check for.
 * @param int|object $post Optional. Post to check instead of the current post. (since 2.7.0)
 * @return bool True if the current post has any of the given tags (or any tag, if no tag specified).
 */",
 "/**
 * Check if the current post has any of given terms.
 *
 * The given terms are checked against the post\'s terms\' term_ids, names and slugs.
 * Terms given as integers will only be checked against the post\'s terms\' term_ids.
 * If no terms are given, determines if post has any terms.
 *
 * @since 3.1.0
 *
 * @param string|int|array $term Optional. The term name/term_id/slug or array of them to check for.
 * @param string $taxonomy Taxonomy name
 * @param int|object $post Optional. Post to check instead of the current post.
 * @return bool True if the current post has any of the given tags (or any tag, if no tag specified).
 */",
 "/**
	 * Constructor
	 *
	 * @uses apply_filters() Filters a list of pre-defined oEmbed providers.
	 */",
 "/**
	 * The do-it-all function that takes a URL and attempts to return the HTML.
	 *
	 * @see WP_oEmbed::discover()
	 * @see WP_oEmbed::fetch()
	 * @see WP_oEmbed::data2html()
	 *
	 * @param string $url The URL to the content that should be attempted to be embedded.
	 * @param array $args Optional arguments. Usually passed from a shortcode.
	 * @return bool|string False on failure, otherwise the UNSANITIZED (and potentially unsafe) HTML that should be used to embed.
	 */",
 "/**
	 * Attempts to find oEmbed provider discovery <link> tags at the given URL.
	 *
	 * @param string $url The URL that should be inspected for discovery <link> tags.
	 * @return bool|string False on failure, otherwise the oEmbed provider URL.
	 */",
 "/**
	 * Connects to a oEmbed provider and returns the result.
	 *
	 * @param string $provider The URL to the oEmbed provider.
	 * @param string $url The URL to the content that is desired to be embedded.
	 * @param array $args Optional arguments. Usually passed from a shortcode.
	 * @return bool|object False on failure, otherwise the result in the form of an object.
	 */",
 "/**
	 * Fetches result from an oEmbed provider for a specific format and complete provider URL
	 *
	 * @since 3.0.0
	 * @access private
	 * @param string $provider_url_with_args URL to the provider with full arguments list (url, maxheight, etc.)
	 * @param string $format Format to use
	 * @return bool|object False on failure, otherwise the result in the form of an object.
	 */",
 "/**
	 * Parses a json response body.
	 *
	 * @since 3.0.0
	 * @access private
	 */",
 "/**
	 * Parses an XML response body.
	 *
	 * @since 3.0.0
	 * @access private
	 */",
 "/**
	 * Converts a data object from {@link WP_oEmbed::fetch()} and returns the HTML.
	 *
	 * @param object $data A data object result from an oEmbed provider.
	 * @param string $url The URL to the content that is desired to be embedded.
	 * @return bool|string False on error, otherwise the HTML needed to embed.
	 */",
 "/**
	 * Strip any new lines from the HTML.
	 *
	 * @access private
	 * @param string $html Existing HTML.
	 * @param object $data Data object from WP_oEmbed::data2html()
	 * @param string $url The original URL passed to oEmbed.
	 * @return string Possibly modified $html
	 */",
 "/**
 * oEmbed class.
 *
 * @package WordPress
 * @subpackage oEmbed
 * @since 2.9.0
 */",
 "/**
 * Returns the initialized {@link WP_oEmbed} object
 *
 * @since 2.9.0
 * @access private
 *
 * @see WP_oEmbed
 * @uses WP_oEmbed
 *
 * @return WP_oEmbed object.
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.5.0
 *
 * @return unknown
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.5.0
 *
 * @param unknown_type $tabs
 * @return unknown
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.5.0
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.5.0
 *
 * @param unknown_type $id
 * @param unknown_type $alt
 * @param unknown_type $title
 * @param unknown_type $align
 * @param unknown_type $url
 * @param unknown_type $rel
 * @param unknown_type $size
 * @return unknown
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.6.0
 *
 * @param unknown_type $html
 * @param unknown_type $id
 * @param unknown_type $alt
 * @param unknown_type $title
 * @param unknown_type $align
 * @param unknown_type $url
 * @param unknown_type $size
 * @return unknown
 */",
 "/**
 * Private preg_replace callback used in image_add_caption()
 *
 * @access private
 * @since 3.4.0
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.5.0
 *
 * @param unknown_type $html
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * This handles the file upload POST itself, creating the attachment post.
 *
 * @since 2.5.0
 *
 * @param string $file_id Index into the {@link $_FILES} array of the upload
 * @param int $post_id The post ID the media is associated with
 * @param array $post_data allows you to overwrite some of the attachment
 * @param array $overrides allows you to override the {@link wp_handle_upload()} behavior
 * @return int the ID of the attachment
 */",
 "/**
 * This handles a sideloaded file in the same way as an uploaded file is handled by {@link media_handle_upload()}
 *
 * @since 2.6.0
 *
 * @param array $file_array Array similar to a {@link $_FILES} upload array
 * @param int $post_id The post ID the media is associated with
 * @param string $desc Description of the sideloaded file
 * @param array $post_data allows you to overwrite some of the attachment
 * @return int|object The ID of the attachment or a WP_Error on failure
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * Wrap iframe content (produced by $content_func) in a doctype, html head/body
 * etc any additional function args will be passed to content_func.
 *
 * @since 2.5.0
 *
 * @param unknown_type $content_func
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.5.0
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.5.0
 *
 * @return unknown
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.5.0
 *
 * @return unknown
 */",
 "/**
 * Download an image from the specified URL and attach it to a post.
 *
 * @since 2.6.0
 *
 * @param string $file The URL of the image to download
 * @param int $post_id The post ID the media is to be associated with
 * @param string $desc Optional. Description of the image
 * @return string|WP_Error Populated HTML img tag on success
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.5.0
 *
 * @return unknown
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.5.0
 *
 * @return unknown
 */",
 "/**
 * Retrieve HTML for the image alignment radio buttons with the specified one checked.
 *
 * @since 2.7.0
 *
 * @param unknown_type $post
 * @param unknown_type $checked
 * @return unknown
 */",
 "/**
 * Retrieve HTML for the size radio buttons with the specified one checked.
 *
 * @since 2.7.0
 *
 * @param unknown_type $post
 * @param unknown_type $check
 * @return unknown
 */",
 "/**
 * Retrieve HTML for the Link URL buttons with the default link type as specified.
 *
 * @since 2.7.0
 *
 * @param unknown_type $post
 * @param unknown_type $url_type
 * @return unknown
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.5.0
 *
 * @param unknown_type $form_fields
 * @param unknown_type $post
 * @return unknown
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.5.0
 *
 * @param unknown_type $form_fields
 * @param unknown_type $post
 * @return unknown
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.8.0
 *
 * @param unknown_type $form_fields
 * @param unknown_type $post
 * @return unknown
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.5.0
 *
 * @param unknown_type $post
 * @param unknown_type $attachment
 * @return unknown
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.5.0
 *
 * @param unknown_type $html
 * @param unknown_type $attachment_id
 * @param unknown_type $attachment
 * @return unknown
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.5.0
 *
 * @param unknown_type $post
 * @param unknown_type $errors
 * @return unknown
 */",
 "/**
 * Retrieve HTML for media items of post gallery.
 *
 * The HTML markup retrieved will be created for the progress of SWF Upload
 * component. Will also create link for showing and hiding the form to modify
 * the image attachment.
 *
 * @since 2.5.0
 *
 * @param int $post_id Optional. Post ID.
 * @param array $errors Errors for attachment, if any.
 * @return string
 */",
 "/**
 * Retrieve HTML form for modifying the image attachment.
 *
 * @since 2.5.0
 *
 * @param int $attachment_id Attachment ID for modification.
 * @param string|array $args Optional. Override defaults.
 * @return string HTML form for attachment.
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.5.0
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.5.0
 *
 * @param unknown_type $errors
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.5.0
 *
 * @param unknown_type $type
 * @param unknown_type $errors
 * @param unknown_type $id
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.7.0
 *
 * @param unknown_type $type
 * @param unknown_type $errors
 * @param unknown_type $id
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.5.0
 *
 * @param unknown_type $errors
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.5.0
 *
 * @param unknown_type $errors
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.7.0
 *
 * @return unknown
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.6.0
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.6.0
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.6.0
 */",
 "/**
 * The current page.
 *
 * @global string $self
 * @name $self
 * @var string
 */",
 "/**
 * Display menu.
 *
 * @access private
 * @since 2.7.0
 *
 * @param array $menu
 * @param array $submenu
 * @param bool $submenu_as_parent
 */",
 "/**
 * Gets the network\'s site and user counts.
 *
 * @since MU 1.0
 * @uses get_blog_count()
 * @uses get_user_count()
 *
 * @return array Site and user count for the network.
 */",
 "/**
 * Get the admin for a domain/path combination.
 *
 * @since MU 1.0
 *
 * @param string $sitedomain Optional. Site domain.
 * @param string $path Optional. Site path.
 * @return array The network admins
 */",
 "/**
 * Get one of a user\'s active blogs
 *
 * Returns the user\'s primary blog, if she has one and
 * it is active. If it\'s inactive, function returns another
 * active blog of the user. If none are found, the user
 * is added as a Subscriber to the Dashboard Blog and that blog
 * is returned.
 *
 * @since MU 1.0
 * @uses get_blogs_of_user()
 * @uses add_user_to_blog()
 * @uses get_blog_details()
 *
 * @param int $user_id The unique ID of the user
 * @return object The blog object
 */",
 "/**
 * The number of active users in your installation.
 *
 * The count is cached and updated twice daily. This is not a live count.
 *
 * @since MU 2.7
 *
 * @return int
 */",
 "/**
 * The number of active sites on your installation.
 *
 * The count is cached and updated twice daily. This is not a live count.
 *
 * @since MU 1.0
 *
 * @param int $id Optional. A site_id.
 * @return int
 */",
 "/**
 * Get a blog post from any site on the network.
 *
 * @since MU 1.0
 *
 * @param int $blog_id ID of the blog.
 * @param int $post_id ID of the post you\'re looking for.
 * @return object The post.
 */",
 "/**
 * Add a user to a blog.
 *
 * Use the \'add_user_to_blog\' action to fire an event when
 * users are added to a blog.
 *
 * @since MU 1.0
 *
 * @param int $blog_id ID of the blog you\'re adding the user to.
 * @param int $user_id ID of the user you\'re adding.
 * @param string $role The role you want the user to have
 * @return bool
 */",
 "/**
 * Remove a user from a blog.
 *
 * Use the \'remove_user_from_blog\' action to fire an event when
 * users are removed from a blog.
 *
 * Accepts an optional $reassign parameter, if you want to
 * reassign the user\'s blog posts to another user upon removal.
 *
 * @since MU 1.0
 *
 * @param int $user_id ID of the user you\'re removing.
 * @param int $blog_id ID of the blog you\'re removing the user from.
 * @param string $reassign Optional. A user to whom to reassign posts.
 * @return bool
 */",
 "/**
 * Create an empty blog.
 *
 * @since MU 1.0
 * @uses install_blog()
 *
 * @param string $domain The new blog\'s domain.
 * @param string $path The new blog\'s path.
 * @param string $weblog_title The new blog\'s title.
 * @param int $site_id Optional. Defaults to 1.
 * @return int The ID of the newly created blog
 */",
 "/**
 * Get the permalink for a post on another blog.
 *
 * @since MU 1.0
 *
 * @param int $_blog_id ID of the source blog.
 * @param int $post_id ID of the desired post.
 * @return string The post\'s permalink
 */",
 "/**
 * Get a blog\'s numeric ID from its URL.
 *
 * On a subdirectory installation like example.com/blog1/,
 * $domain will be the root \'example.com\' and $path the
 * subdirectory \'/blog1/\'. With subdomains like blog1.example.com,
 * $domain is \'blog1.example.com\' and $path is \'/\'.
 *
 * @since MU 2.6.5
 *
 * @param string $domain
 * @param string $path Optional. Not required for subdomain installations.
 * @return int
 */",
 "/**
 * Checks an email address against a list of banned domains.
 *
 * This function checks against the Banned Email Domains list
 * at wp-admin/network/settings.php. The check is only run on
 * self-registrations; user creation at wp-admin/network/users.php
 * bypasses this check.
 *
 * @since MU
 *
 * @param string $user_email The email provided by the user at registration.
 * @return bool Returns true when the email address is banned.
 */",
 "/**
 * Processes new user registrations.
 *
 * Checks the data provided by the user during signup. Verifies
 * the validity and uniqueness of user names and user email addresses,
 * and checks email addresses against admin-provided domain
 * whitelists and blacklists.
 *
 * The hook \'wpmu_validate_user_signup\' provides an easy way
 * to modify the signup process. The value $result, which is passed
 * to the hook, contains both the user-provided info and the error
 * messages created by the function. \'wpmu_validate_user_signup\' allows
 * you to process the data in any way you\'d like, and unset the
 * relevant errors if necessary.
 *
 * @since MU
 * @uses is_email_address_unsafe()
 * @uses username_exists()
 * @uses email_exists()
 *
 * @param string $user_name The login name provided by the user.
 * @param string $user_email The email provided by the user.
 * @return array Contains username, email, and error messages.
 */",
 "/**
 * Processes new site registrations.
 *
 * Checks the data provided by the user during blog signup. Verifies
 * the validity and uniqueness of blog paths and domains.
 *
 * This function prevents the current user from registering a new site
 * with a blogname equivalent to another user\'s login name. Passing the
 * $user parameter to the function, where $user is the other user, is
 * effectively an override of this limitation.
 *
 * Filter \'wpmu_validate_blog_signup\' if you want to modify
 * the way that WordPress validates new site signups.
 *
 * @since MU
 * @uses domain_exists()
 * @uses username_exists()
 *
 * @param string $blogname The blog name provided by the user. Must be unique.
 * @param string $blog_title The blog title provided by the user.
 * @return array Contains the new site data and error messages.
 */",
 "/**
 * Record site signup information for future activation.
 *
 * @since MU
 * @uses wpmu_signup_blog_notification()
 *
 * @param string $domain The requested domain.
 * @param string $path The requested path.
 * @param string $title The requested site title.
 * @param string $user The user\'s requested login name.
 * @param string $user_email The user\'s email address.
 * @param array $meta By default, contains the requested privacy setting and lang_id.
 */",
 "/**
 * Record user signup information for future activation.
 *
 * This function is used when user registration is open but
 * new site registration is not.
 *
 * @since MU
 * @uses wpmu_signup_user_notification()
 *
 * @param string $user The user\'s requested login name.
 * @param string $user_email The user\'s email address.
 * @param array $meta By default, this is an empty array.
 */",
 "/**
 * Notify user of signup success.
 *
 * This is the notification function used when site registration
 * is enabled.
 *
 * Filter \'wpmu_signup_blog_notification\' to bypass this function or
 * replace it with your own notification behavior.
 *
 * Filter \'wpmu_signup_blog_notification_email\' and
 * \'wpmu_signup_blog_notification_subject\' to change the content
 * and subject line of the email sent to newly registered users.
 *
 * @since MU
 *
 * @param string $domain The new blog domain.
 * @param string $path The new blog path.
 * @param string $title The site title.
 * @param string $user The user\'s login name.
 * @param string $user_email The user\'s email address.
 * @param array $meta By default, contains the requested privacy setting and lang_id.
 * @param string $key The activation key created in wpmu_signup_blog()
 * @return bool
 */",
 "/**
 * Notify user of signup success.
 *
 * This is the notification function used when no new site has
 * been requested.
 *
 * Filter \'wpmu_signup_user_notification\' to bypass this function or
 * replace it with your own notification behavior.
 *
 * Filter \'wpmu_signup_user_notification_email\' and
 * \'wpmu_signup_user_notification_subject\' to change the content
 * and subject line of the email sent to newly registered users.
 *
 * @since MU
 *
 * @param string $user The user\'s login name.
 * @param string $user_email The user\'s email address.
 * @param array $meta By default, an empty array.
 * @param string $key The activation key created in wpmu_signup_user()
 * @return bool
 */",
 "/**
 * Activate a signup.
 *
 * Hook to \'wpmu_activate_user\' or \'wpmu_activate_blog\' for events
 * that should happen only when users or sites are self-created (since
 * those actions are not called when users and sites are created
 * by a Super Admin).
 *
 * @since MU
 * @uses wp_generate_password()
 * @uses wpmu_welcome_user_notification()
 * @uses add_user_to_blog()
 * @uses add_new_user_to_blog()
 * @uses wpmu_create_user()
 * @uses wpmu_create_blog()
 * @uses wpmu_welcome_notification()
 *
 * @param string $key The activation key provided to the user.
 * @return array An array containing information about the activated user and/or blog
 */",
 "/**
 * Create a user.
 *
 * This function runs when a user self-registers as well as when
 * a Super Admin creates a new user. Hook to \'wpmu_new_user\' for events
 * that should affect all new users, but only on Multisite (otherwise
 * use \'user_register\').
 *
 * @since MU
 * @uses wp_create_user()
 *
 * @param string $user_name The new user\'s login name.
 * @param string $password The new user\'s password.
 * @param string $email The new user\'s email address.
 * @return mixed Returns false on failure, or int $user_id on success
 */",
 "/**
 * Create a site.
 *
 * This function runs when a user self-registers a new site as well
 * as when a Super Admin creates a new site. Hook to \'wpmu_new_blog\'
 * for events that should affect all new sites.
 *
 * On subdirectory installs, $domain is the same as the main site\'s
 * domain, and the path is the subdirectory name (eg \'example.com\'
 * and \'/blog1/\'). On subdomain installs, $domain is the new subdomain +
 * root domain (eg \'blog1.example.com\'), and $path is \'/\'.
 *
 * @since MU
 * @uses domain_exists()
 * @uses insert_blog()
 * @uses wp_install_defaults()
 * @uses add_user_to_blog()
 *
 * @param string $domain The new site\'s domain.
 * @param string $path The new site\'s path.
 * @param string $title The new site\'s title.
 * @param int $user_id The user ID of the new site\'s admin.
 * @param array $meta Optional. Used to set initial site options.
 * @param int $site_id Optional. Only relevant on multi-network installs.
 * @return mixed Returns WP_Error object on failure, int $blog_id on success
 */",
 "/**
 * Notifies the network admin that a new site has been activated.
 *
 * Filter \'newblog_notify_siteadmin\' to change the content of
 * the notification email.
 *
 * @since MU
 *
 * @param int $blog_id The new site\'s ID.
 * @return bool
 */",
 "/**
 * Notifies the network admin that a new user has been activated.
 *
 * Filter \'newuser_notify_siteadmin\' to change the content of
 * the notification email.
 *
 * @since MU
 * @uses apply_filters() Filter newuser_notify_siteadmin to change the content of the email message
 *
 * @param int $user_id The new user\'s ID.
 * @return bool
 */",
 "/**
 * Check whether a blogname is already taken.
 *
 * Used during the new site registration process to ensure
 * that each blogname is unique.
 *
 * @since MU
 *
 * @param string $domain The domain to be checked.
 * @param string $path The path to be checked.
 * @param int $site_id Optional. Relevant only on multi-network installs.
 * @return int
 */",
 "/**
 * Store basic site info in the blogs table.
 *
 * This function creates a row in the wp_blogs table and returns
 * the new blog\'s ID. It is the first step in creating a new blog.
 *
 * @since MU
 *
 * @param string $domain The domain of the new site.
 * @param string $path The path of the new site.
 * @param int $site_id Unless you\'re running a multi-network install, be sure to set this value to 1.
 * @return int The ID of the new row
 */",
 "/**
 * Install an empty blog.
 *
 * Creates the new blog tables and options. If calling this function
 * directly, be sure to use switch_to_blog() first, so that $wpdb
 * points to the new blog.
 *
 * @since MU
 * @uses make_db_current_silent()
 * @uses populate_roles()
 *
 * @param int $blog_id The value returned by insert_blog().
 * @param string $blog_title The title of the new site.
 */",
 "/**
 * Set blog defaults.
 *
 * This function creates a row in the wp_blogs table.
 *
 * @since MU
 * @deprecated MU
 * @deprecated Use wp_install_defaults()
 * @uses wp_install_defaults()
 *
 * @param int $blog_id Ignored in this function.
 * @param int $user_id
 */",
 "/**
 * Notify a user that her blog activation has been successful.
 *
 * Filter \'wpmu_welcome_notification\' to disable or bypass.
 *
 * Filter \'update_welcome_email\' and \'update_welcome_subject\' to
 * modify the content and subject line of the notification email.
 *
 * @since MU
 *
 * @param int $blog_id
 * @param int $user_id
 * @param string $password
 * @param string $title The new blog\'s title
 * @param array $meta Optional. Not used in the default function, but is passed along to hooks for customization.
 * @return bool
 */",
 "/**
 * Notify a user that her account activation has been successful.
 *
 * Filter \'wpmu_welcome_user_notification\' to disable or bypass.
 *
 * Filter \'update_welcome_user_email\' and \'update_welcome_user_subject\' to
 * modify the content and subject line of the notification email.
 *
 * @since MU
 *
 * @param int $user_id
 * @param string $password
 * @param array $meta Optional. Not used in the default function, but is passed along to hooks for customization.
 * @return bool
 */",
 "/**
 * Get the current site info.
 *
 * Returns an object containing the ID, domain, path, and site_name
 * of the site being viewed.
 *
 * @since MU
 *
 * @return object
 */",
 "/**
 * Get a numeric user ID from either an email address or a login.
 *
 * @since MU
 * @uses is_email()
 *
 * @param string $string
 * @return int
 */",
 "/**
 * Get a user\'s most recent post.
 *
 * Walks through each of a user\'s blogs to find the post with
 * the most recent post_date_gmt.
 *
 * @since MU
 * @uses get_blogs_of_user()
 *
 * @param int $user_id
 * @return array Contains the blog_id, post_id, post_date_gmt, and post_gmt_ts
 */",
 "/**
 * Get the size of a directory.
 *
 * A helper function that is used primarily to check whether
 * a blog has exceeded its allowed upload space.
 *
 * @since MU
 * @uses recurse_dirsize()
 *
 * @param string $directory
 * @return int
 */",
 "/**
 * Get the size of a directory recursively.
 *
 * Used by get_dirsize() to get a directory\'s size when it contains
 * other directories.
 *
 * @since MU
 *
 * @param string $directory
 * @return int
 */",
 "/**
 * Check whether a blog has used its allotted upload space.
 *
 * @since MU
 * @uses get_dirsize()
 *
 * @param bool $echo Optional. If $echo is set and the quota is exceeded, a warning message is echoed. Default is true.
 * @return int
 */",
 "/**
 * Check an array of MIME types against a whitelist.
 *
 * WordPress ships with a set of allowed upload filetypes,
 * which is defined in wp-includes/functions.php in
 * get_allowed_mime_types(). This function is used to filter
 * that list against the filetype whitelist provided by Multisite
 * Super Admins at wp-admin/network/settings.php.
 *
 * @since MU
 *
 * @param array $mimes
 * @return array
 */",
 "/**
 * Update a blog\'s post count.
 *
 * WordPress MS stores a blog\'s post count as an option so as
 * to avoid extraneous COUNTs when a blog\'s details are fetched
 * with get_blog_details(). This function is called when posts
 * are published to make sure the count stays current.
 *
 * @since MU
 */",
 "/**
 * Logs user registrations.
 *
 * @since MU
 *
 * @param int $blog_id
 * @param int $user_id
 */",
 "/**
 * Get the remaining upload space for this blog.
 *
 * @since MU
 * @uses upload_is_user_over_quota()
 * @uses get_space_allowed()
 * @uses get_dirsize()
 *
 * @param int $size
 * @return int
 */",
 "/**
 * Maintains a canonical list of terms by syncing terms created for each blog with the global terms table.
 *
 * @since 3.0.0
 *
 * @see term_id_filter
 *
 * @param int $term_id An ID for a term on the current blog.
 * @return int An ID from the global terms table mapped from $term_id.
 */",
 "/**
 * Ensure that the current site\'s domain is listed in the allowed redirect host list.
 *
 * @see wp_validate_redirect()
 * @since MU
 *
 * @return array The current site\'s domain
 */",
 "/**
 * Check whether an upload is too big.
 *
 * @since MU
 *
 * @param array $upload
 * @return mixed If the upload is under the size limit, $upload is returned. Otherwise returns an error message.
 */",
 "/**
 * Add a nonce field to the signup page.
 *
 * @since MU
 * @uses wp_nonce_field()
 */",
 "/**
 * Process the signup nonce created in signup_nonce_fields().
 *
 * @since MU
 * @uses wp_create_nonce()
 *
 * @param array $result
 * @return array
 */",
 "/**
 * Correct 404 redirects when NOBLOGREDIRECT is defined.
 *
 * @since MU
 */",
 "/**
 * Add a new user to a blog by visiting /newbloguser/username/.
 *
 * This will only work when the user\'s details are saved as an option
 * keyed as \'new_user_x\', where \'x\' is the username of the user to be
 * added, as when a user is invited through the regular WP Add User interface.
 *
 * @since MU
 * @uses add_existing_user_to_blog()
 */",
 "/**
 * Add a user to a blog based on details from maybe_add_existing_user_to_blog().
 *
 * @since MU
 * @uses add_user_to_blog()
 *
 * @param array $details
 */",
 "/**
 * Add a newly created user to the appropriate blog
 *
 * @since MU
 *
 * @param int $user_id
 * @param string $email
 * @param array $meta
 */",
 "/**
 * Correct From host on outgoing mail to match the site domain
 *
 * @since MU
 */",
 "/**
 * Check to see whether a user is marked as a spammer, based on username
 *
 * @since MU
 * @uses get_current_user_id()
 * @uses get_user_id_from_string()
 *
 * @param string $username
 * @return bool
 */",
 "/**
 * Update this blog\'s \'public\' setting in the global blogs table.
 *
 * Public blogs have a setting of 1, private blogs are 0.
 *
 * @since MU
 * @uses update_blog_status()
 *
 * @param int $old_value
 * @param int $value The new public value
 * @return bool
 */",
 "/**
 * Get the \"dashboard blog\", the blog where users without a blog edit their profile data.
 *
 * @since MU
 * @uses get_blog_details()
 *
 * @return int
 */",
 "/**
 * Check whether a usermeta key has to do with the current blog.
 *
 * @since MU
 * @uses wp_get_current_user()
 *
 * @param string $key
 * @param int $user_id Optional. Defaults to current user.
 * @param int $blog_id Optional. Defaults to current blog.
 * @return bool
 */",
 "/**
 * Check whether users can self-register, based on Network settings.
 *
 * @since MU
 *
 * @return bool
 */",
 "/**
 * Ensure that the welcome message is not empty. Currently unused.
 *
 * @since MU
 *
 * @param string $text
 * @return string
 */",
 "/**
 * Whether to force SSL on content.
 *
 * @since 2.8.5
 *
 * @param string|bool $force
 * @return bool True if forced, false if not forced.
 */",
 "/**
 * Formats an String URL to use HTTPS if HTTP is found.
 * Useful as a filter.
 *
 * @since 2.8.5
 **/",
 "/**
 * Schedule update of the network-wide counts for the current network.
 *
 * @since 3.1.0
 */",
 "/**
 *  Update the network-wide counts for the current network.
 *
 *  @since 3.1.0
 */",
 "/**
 * Create a thumbnail from an Image given a maximum side size.
 *
 * This function can handle most image file formats which PHP supports. If PHP
 * does not have the functionality to save in a file of the same format, the
 * thumbnail will be created as a jpeg.
 *
 * @since 1.2.0
 *
 * @param mixed $file Filename of the original image, Or attachment id.
 * @param int $max_side Maximum length of a single side for the thumbnail.
 * @param mixed $deprecated Never used.
 * @return string Thumbnail path on success, Error string on failure.
 */",
 "/**
 * Crop an Image to a given size.
 *
 * @since 2.1.0
 *
 * @param string|int $src The source file or Attachment ID.
 * @param int $src_x The start x position to crop from.
 * @param int $src_y The start y position to crop from.
 * @param int $src_w The width to crop.
 * @param int $src_h The height to crop.
 * @param int $dst_w The destination width.
 * @param int $dst_h The destination height.
 * @param int $src_abs Optional. If the source crop points are absolute.
 * @param string $dst_file Optional. The destination file to write to.
 * @return string|WP_Error|false New filepath on success, WP_Error or false on failure.
 */",
 "/**
 * Generate post thumbnail attachment meta data.
 *
 * @since 2.1.0
 *
 * @param int $attachment_id Attachment Id to process.
 * @param string $file Filepath of the Attached image.
 * @return mixed Metadata for attachment.
 */",
 "/**
 * Calculated the new dimensions for a downsampled image.
 *
 * @since 2.0.0
 * @see wp_constrain_dimensions()
 *
 * @param int $width Current width of the image
 * @param int $height Current height of the image
 * @return mixed Array(height,width) of shrunk dimensions.
 */",
 "/**
 * Convert a fraction string to a decimal.
 *
 * @since 2.5.0
 *
 * @param string $str
 * @return int|float
 */",
 "/**
 * Convert the exif date format to a unix timestamp.
 *
 * @since 2.5.0
 *
 * @param string $str
 * @return int
 */",
 "/**
 * Get extended image metadata, exif or iptc as available.
 *
 * Retrieves the EXIF metadata aperture, credit, camera, caption, copyright, iso
 * created_timestamp, focal_length, shutter_speed, and title.
 *
 * The IPTC metadata that is retrieved is APP13, credit, byline, created date
 * and time, caption, copyright, and title. Also includes FNumber, Model,
 * DateTimeDigitized, FocalLength, ISOSpeedRatings, and ExposureTime.
 *
 * @todo Try other exif libraries if available.
 * @since 2.5.0
 *
 * @param string $file
 * @return bool|array False on failure. Image metadata array on success.
 */",
 "/**
 * Validate that file is an image.
 *
 * @since 2.5.0
 *
 * @param string $path File path to test if valid image.
 * @return bool True if valid image, false if not valid image.
 */",
 "/**
 * Validate that file is suitable for displaying within a web page.
 *
 * @since 2.5.0
 * @uses apply_filters() Calls \'file_is_displayable_image\' on $result and $path.
 *
 * @param string $path File path to test.
 * @return bool True if suitable, false if not suitable.
 */",
 "/**
 * Load an image resource for editing.
 *
 * @since 2.9.0
 *
 * @param string $attachment_id Attachment ID.
 * @param string $mime_type Image mime type.
 * @param string $size Optional. Image size, defaults to \'full\'.
 * @return resource|false The resulting image resource on success, false on failure.
 */",
 "/**
 * Retrieve the path or url of an attachment\'s attached file.
 *
 * If the attached file is not present on the local filesystem (usually due to replication plugins),
 * then the url of the file is returned if url fopen is supported.
 *
 * @since 3.4.0
 * @access private
 *
 * @param string $attachment_id Attachment ID.
 * @param string $size Optional. Image size, defaults to \'full\'.
 * @return string|false File path or url on success, false on failure.
 */",
 "/**
 * Copy an existing image file.
 *
 * @since 3.4.0
 * @access private
 *
 * @param string $attachment_id Attachment ID.
 * @return string|false New file path on success, false on failure.
 */",
 "/**
	 * Starts the list before the elements are added.
	 *
	 * Additional parameters are used in child classes. The args parameter holds
	 * additional values that may be used with the child class methods. This
	 * method is called at the start of the output list.
	 *
	 * @since 2.1.0
	 * @abstract
	 *
	 * @param string $output Passed by reference. Used to append additional content.
	 */",
 "/**
	 * Ends the list of after the elements are added.
	 *
	 * Additional parameters are used in child classes. The args parameter holds
	 * additional values that may be used with the child class methods. This
	 * method finishes the list at the end of output of the elements.
	 *
	 * @since 2.1.0
	 * @abstract
	 *
	 * @param string $output Passed by reference. Used to append additional content.
	 */",
 "/**
	 * Start the element output.
	 *
	 * Additional parameters are used in child classes. The args parameter holds
	 * additional values that may be used with the child class methods. Includes
	 * the element output also.
	 *
	 * @since 2.1.0
	 * @abstract
	 *
	 * @param string $output Passed by reference. Used to append additional content.
	 */",
 "/**
	 * Ends the element output, if needed.
	 *
	 * Additional parameters are used in child classes. The args parameter holds
	 * additional values that may be used with the child class methods.
	 *
	 * @since 2.1.0
	 * @abstract
	 *
	 * @param string $output Passed by reference. Used to append additional content.
	 */",
 "/**
	 * Traverse elements to create list from elements.
	 *
	 * Display one element if the element doesn\'t have any children otherwise,
	 * display the element and its children. Will only traverse up to the max
	 * depth and no ignore elements under that depth. It is possible to set the
	 * max depth to include all depths, see walk() method.
	 *
	 * This method shouldn\'t be called directly, use the walk() method instead.
	 *
	 * @since 2.5.0
	 *
	 * @param object $element Data object
	 * @param array $children_elements List of elements to continue traversing.
	 * @param int $max_depth Max depth to traverse.
	 * @param int $depth Depth of current element.
	 * @param array $args
	 * @param string $output Passed by reference. Used to append additional content.
	 * @return null Null on failure with no changes to parameters.
	 */",
 "/**
	 * Display array of elements hierarchically.
	 *
	 * It is a generic function which does not assume any existing order of
	 * elements. max_depth = -1 means flatly display every element. max_depth =
	 * 0 means display all levels. max_depth > 0  specifies the number of
	 * display levels.
	 *
	 * @since 2.1.0
	 *
	 * @param array $elements
	 * @param int $max_depth
	 * @return string
	 */",
 "/**
 	 * paged_walk() - produce a page of nested elements
 	 *
 	 * Given an array of hierarchical elements, the maximum depth, a specific page number,
 	 * and number of elements per page, this function first determines all top level root elements
 	 * belonging to that page, then lists them and all of their children in hierarchical order.
 	 *
 	 * @package WordPress
 	 * @since 2.7
 	 * @param int $max_depth = 0 means display all levels; $max_depth > 0 specifies the number of display levels.
 	 * @param int $page_num the specific page number, beginning with 1.
 	 * @return XHTML of the specified page of elements
 	 */",
 "/**
 * A class for displaying various tree-like structures.
 *
 * Extend the Walker class to use it, see examples at the below. Child classes
 * do not need to implement all of the abstract methods in the class. The child
 * only needs to implement the methods that are needed. Also, the methods are
 * not strictly abstract in that the parameter definition needs to be followed.
 * The child classes can have additional parameters.
 *
 * @package WordPress
 * @since 2.1.0
 * @abstract
 */",
 "/**
 * Replaces common plain text characters into formatted entities
 *
 * As an example,
 * <code>
 * \'cause today\'s effort makes it worth tomorrow\'s \"holiday\"...
 * </code>
 * Becomes:
 * <code>
 * &#8217;cause today&#8217;s effort makes it worth tomorrow&#8217;s &#8220;holiday&#8221;&#8230;
 * </code>
 * Code within certain html blocks are skipped.
 *
 * @since 0.71
 * @uses $wp_cockneyreplace Array of formatted entities for certain common phrases
 *
 * @param string $text The text to be formatted
 * @return string The string replaced with html entities
 */",
 "/**
 * Search for disabled element tags. Push element to stack on tag open and pop
 * on tag close. Assumes first character of $text is tag opening.
 *
 * @access private
 * @since 2.9.0
 *
 * @param string $text Text to check. First character is assumed to be $opening
 * @param array $stack Array used as stack of opened tag elements
 * @param string $disabled_elements Tags to match against formatted as regexp sub-expression
 * @param string $opening Tag opening character, assumed to be 1 character long
 * @param string $opening Tag closing  character
 * @return object
 */",
 "/**
 * Replaces double line-breaks with paragraph elements.
 *
 * A group of regex replaces used to identify text formatted with newlines and
 * replace double line-breaks with HTML paragraph tags. The remaining
 * line-breaks after conversion become <<br />> tags, unless $br is set to \'0\'
 * or \'false\'.
 *
 * @since 0.71
 *
 * @param string $pee The text which has to be formatted.
 * @param bool $br Optional. If set, this will convert all remaining line-breaks after paragraphing. Default true.
 * @return string Text which has been converted into correct paragraph tags.
 */",
 "/**
 * Newline preservation help function for wpautop
 *
 * @since 3.1.0
 * @access private
 * @param array $matches preg_replace_callback matches array
 * @returns string
 */",
 "/**
 * Don\'t auto-p wrap shortcodes that stand alone
 *
 * Ensures that shortcodes are not wrapped in <<p>>...<</p>>.
 *
 * @since 2.9.0
 *
 * @param string $pee The content.
 * @return string The filtered content.
 */",
 "/**
 * Checks to see if a string is utf8 encoded.
 *
 * NOTE: This function checks for 5-Byte sequences, UTF8
 *       has Bytes Sequences with a maximum length of 4.
 *
 * @author bmorel at ssi dot fr (modified)
 * @since 1.2.1
 *
 * @param string $str The string to be checked
 * @return bool True if $str fits a UTF-8 model, false otherwise.
 */",
 "/**
 * Converts a number of special characters into their HTML entities.
 *
 * Specifically deals with: &, <, >, \", and \'.
 *
 * $quote_style can be set to ENT_COMPAT to encode \" to
 * &quot;, or ENT_QUOTES to do both. Default is ENT_NOQUOTES where no quotes are encoded.
 *
 * @since 1.2.2
 *
 * @param string $string The text which is to be encoded.
 * @param mixed $quote_style Optional. Converts double quotes if set to ENT_COMPAT, both single and double if set to ENT_QUOTES or none if set to ENT_NOQUOTES. Also compatible with old values; converting single quotes if set to \'single\', double if set to \'double\' or both if otherwise set. Default is ENT_NOQUOTES.
 * @param string $charset Optional. The character encoding of the string. Default is false.
 * @param boolean $double_encode Optional. Whether to encode existing html entities. Default is false.
 * @return string The encoded text with HTML entities.
 */",
 "/**
 * Converts a number of HTML entities into their special characters.
 *
 * Specifically deals with: &, <, >, \", and \'.
 *
 * $quote_style can be set to ENT_COMPAT to decode \" entities,
 * or ENT_QUOTES to do both \" and \'. Default is ENT_NOQUOTES where no quotes are decoded.
 *
 * @since 2.8
 *
 * @param string $string The text which is to be decoded.
 * @param mixed $quote_style Optional. Converts double quotes if set to ENT_COMPAT, both single and double if set to ENT_QUOTES or none if set to ENT_NOQUOTES. Also compatible with old _wp_specialchars() values; converting single quotes if set to \'single\', double if set to \'double\' or both if otherwise set. Default is ENT_NOQUOTES.
 * @return string The decoded text without HTML entities.
 */",
 "/**
 * Checks for invalid UTF8 in a string.
 *
 * @since 2.8
 *
 * @param string $string The text which is to be checked.
 * @param boolean $strip Optional. Whether to attempt to strip out invalid UTF8. Default is false.
 * @return string The checked text.
 */",
 "/**
 * Encode the Unicode values to be used in the URI.
 *
 * @since 1.5.0
 *
 * @param string $utf8_string
 * @param int $length Max length of the string
 * @return string String with Unicode encoded for URI.
 */",
 "/**
 * Converts all accent characters to ASCII characters.
 *
 * If there are no accent characters, then the string given is just returned.
 *
 * @since 1.2.1
 *
 * @param string $string Text that might have accent characters
 * @return string Filtered string with replaced \"nice\" characters.
 */",
 "/**
 * Sanitizes a filename replacing whitespace with dashes
 *
 * Removes special characters that are illegal in filenames on certain
 * operating systems and special characters requiring special escaping
 * to manipulate at the command line. Replaces spaces and consecutive
 * dashes with a single dash. Trim period, dash and underscore from beginning
 * and end of filename.
 *
 * @since 2.1.0
 *
 * @param string $filename The filename to be sanitized
 * @return string The sanitized filename
 */",
 "/**
 * Sanitize username stripping out unsafe characters.
 *
 * Removes tags, octets, entities, and if strict is enabled, will only keep
 * alphanumeric, _, space, ., -, @. After sanitizing, it passes the username,
 * raw username (the username in the parameter), and the value of $strict as
 * parameters for the \'sanitize_user\' filter.
 *
 * @since 2.0.0
 * @uses apply_filters() Calls \'sanitize_user\' hook on username, raw username,
 *		and $strict parameter.
 *
 * @param string $username The username to be sanitized.
 * @param bool $strict If set limits $username to specific characters. Default false.
 * @return string The sanitized username, after passing through filters.
 */",
 "/**
 * Sanitize a string key.
 *
 * Keys are used as internal identifiers. Lowercase alphanumeric characters, dashes and underscores are allowed.
 *
 * @since 3.0.0
 *
 * @param string $key String key
 * @return string Sanitized key
 */",
 "/**
 * Sanitizes title or use fallback title.
 *
 * Specifically, HTML and PHP tags are stripped. Further actions can be added
 * via the plugin API. If $title is empty and $fallback_title is set, the latter
 * will be used.
 *
 * @since 1.0.0
 *
 * @param string $title The string to be sanitized.
 * @param string $fallback_title Optional. A title to use if $title is empty.
 * @param string $context Optional. The operation for which the string is sanitized
 * @return string The sanitized string.
 */",
 "/**
 * Sanitizes title, replacing whitespace and a few other characters with dashes.
 *
 * Limits the output to alphanumeric characters, underscore (_) and dash (-).
 * Whitespace becomes a dash.
 *
 * @since 1.2.0
 *
 * @param string $title The title to be sanitized.
 * @param string $raw_title Optional. Not used.
 * @param string $context Optional. The operation for which the string is sanitized.
 * @return string The sanitized title.
 */",
 "/**
 * Ensures a string is a valid SQL order by clause.
 *
 * Accepts one or more columns, with or without ASC/DESC, and also accepts
 * RAND().
 *
 * @since 2.5.1
 *
 * @param string $orderby Order by string to be checked.
 * @return string|false Returns the order by clause if it is a match, false otherwise.
 */",
 "/**
 * Santizes a html classname to ensure it only contains valid characters
 *
 * Strips the string down to A-Z,a-z,0-9,_,-. If this results in an empty
 * string then it will return the alternative value supplied.
 *
 * @todo Expand to support the full range of CDATA that a class attribute can contain.
 *
 * @since 2.8.0
 *
 * @param string $class The classname to be sanitized
 * @param string $fallback Optional. The value to return if the sanitization end\'s up as an empty string.
 * 	Defaults to an empty string.
 * @return string The sanitized value
 */",
 "/**
 * Converts a number of characters from a string.
 *
 * Metadata tags <<title>> and <<category>> are removed, <<br>> and <<hr>> are
 * converted into correct XHTML and Unicode characters are converted to the
 * valid range.
 *
 * @since 0.71
 *
 * @param string $content String of characters to be converted.
 * @param string $deprecated Not used.
 * @return string Converted string.
 */",
 "/**
 * Will only balance the tags if forced to and the option is set to balance tags.
 *
 * The option \'use_balanceTags\' is used to determine whether the tags will be balanced.
 *
 * @since 0.71
 *
 * @param string $text Text to be balanced
 * @param bool $force If true, forces balancing, ignoring the value of the option. Default false.
 * @return string Balanced text
 */",
 "/**
 * Balances tags of string using a modified stack.
 *
 * @since 2.0.4
 *
 * @author Leonard Lin <leonard@acm.org>
 * @license GPL
 * @copyright November 4, 2001
 * @version 1.1
 * @todo Make better - change loop condition to $text in 1.2
 * @internal Modified by Scott Reilly (coffee2code) 02 Aug 2004
 *		1.1  Fixed handling of append/stack pop order of end text
 *			 Added Cleaning Hooks
 *		1.0  First Version
 *
 * @param string $text Text to be balanced.
 * @return string Balanced text.
 */",
 "/**
 * Acts on text which is about to be edited.
 *
 * The $content is run through esc_textarea(), which uses htmlspecialchars()
 * to convert special characters to HTML entities. If $richedit is set to true,
 * it is simply a holder for the \'format_to_edit\' filter.
 *
 * @since 0.71
 *
 * @param string $content The text about to be edited.
 * @param bool $richedit Whether the $content should not pass through htmlspecialchars(). Default false (meaning it will be passed).
 * @return string The text after the filter (and possibly htmlspecialchars()) has been run.
 */",
 "/**
 * Holder for the \'format_to_post\' filter.
 *
 * @since 0.71
 *
 * @param string $content The text to pass through the filter.
 * @return string Text returned from the \'format_to_post\' filter.
 */",
 "/**
 * Add leading zeros when necessary.
 *
 * If you set the threshold to \'4\' and the number is \'10\', then you will get
 * back \'0010\'. If you set the threshold to \'4\' and the number is \'5000\', then you
 * will get back \'5000\'.
 *
 * Uses sprintf to append the amount of zeros based on the $threshold parameter
 * and the size of the number. If the number is large enough, then no zeros will
 * be appended.
 *
 * @since 0.71
 *
 * @param mixed $number Number to append zeros to if not greater than threshold.
 * @param int $threshold Digit places number needs to be to not have zeros added.
 * @return string Adds leading zeros to number if needed.
 */",
 "/**
 * Adds backslashes before letters and before a number at the start of a string.
 *
 * @since 0.71
 *
 * @param string $string Value to which backslashes will be added.
 * @return string String with backslashes inserted.
 */",
 "/**
 * Appends a trailing slash.
 *
 * Will remove trailing slash if it exists already before adding a trailing
 * slash. This prevents double slashing a string or path.
 *
 * The primary use of this is for paths and thus should be used for paths. It is
 * not restricted to paths and offers no specific path support.
 *
 * @since 1.2.0
 * @uses untrailingslashit() Unslashes string if it was slashed already.
 *
 * @param string $string What to add the trailing slash to.
 * @return string String with trailing slash added.
 */",
 "/**
 * Removes trailing slash if it exists.
 *
 * The primary use of this is for paths and thus should be used for paths. It is
 * not restricted to paths and offers no specific path support.
 *
 * @since 2.2.0
 *
 * @param string $string What to remove the trailing slash from.
 * @return string String without the trailing slash.
 */",
 "/**
 * Adds slashes to escape strings.
 *
 * Slashes will first be removed if magic_quotes_gpc is set, see {@link
 * http://www.php.net/magic_quotes} for more details.
 *
 * @since 0.71
 *
 * @param string $gpc The string returned from HTTP request data.
 * @return string Returns a string escaped with slashes.
 */",
 "/**
 * Navigates through an array and removes slashes from the values.
 *
 * If an array is passed, the array_map() function causes a callback to pass the
 * value back to the function. The slashes from this value will removed.
 *
 * @since 2.0.0
 *
 * @param array|string $value The array or string to be stripped.
 * @return array|string Stripped array (or string in the callback).
 */",
 "/**
 * Navigates through an array and encodes the values to be used in a URL.
 *
 *
 * @since 2.2.0
 *
 * @param array|string $value The array or string to be encoded.
 * @return array|string $value The encoded array (or string from the callback).
 */",
 "/**
 * Navigates through an array and raw encodes the values to be used in a URL.
 *
 * @since 3.4.0
 *
 * @param array|string $value The array or string to be encoded.
 * @return array|string $value The encoded array (or string from the callback).
 */",
 "/**
 * Converts email addresses characters to HTML entities to block spam bots.
 *
 * @since 0.71
 *
 * @param string $emailaddy Email address.
 * @param int $mailto Optional. Range from 0 to 1. Used for encoding.
 * @return string Converted email address.
 */",
 "/**
 * Callback to convert URI match to HTML A element.
 *
 * This function was backported from 2.5.0 to 2.3.2. Regex callback for {@link
 * make_clickable()}.
 *
 * @since 2.3.2
 * @access private
 *
 * @param array $matches Single Regex Match.
 * @return string HTML A element with URI address.
 */",
 "/**
 * Callback to convert URL match to HTML A element.
 *
 * This function was backported from 2.5.0 to 2.3.2. Regex callback for {@link
 * make_clickable()}.
 *
 * @since 2.3.2
 * @access private
 *
 * @param array $matches Single Regex Match.
 * @return string HTML A element with URL address.
 */",
 "/**
 * Callback to convert email address match to HTML A element.
 *
 * This function was backported from 2.5.0 to 2.3.2. Regex callback for {@link
 * make_clickable()}.
 *
 * @since 2.3.2
 * @access private
 *
 * @param array $matches Single Regex Match.
 * @return string HTML A element with email address.
 */",
 "/**
 * Convert plaintext URI to HTML links.
 *
 * Converts URI, www and ftp, and email addresses. Finishes by fixing links
 * within links.
 *
 * @since 0.71
 *
 * @param string $text Content to convert URIs.
 * @return string Content with converted URIs.
 */",
 "/**
 * Breaks a string into chunks by splitting at whitespace characters.
 * The length of each returned chunk is as close to the specified length goal as possible,
 * with the caveat that each chunk includes its trailing delimiter.
 * Chunks longer than the goal are guaranteed to not have any inner whitespace.
 *
 * Joining the returned chunks with empty delimiters reconstructs the input string losslessly.
 *
 * Input string must have no null characters (or eventual transformations on output chunks must not care about null characters)
 *
 * <code>
 * _split_str_by_whitespace( \"1234 67890 1234 67890a cd 1234   890 123456789 1234567890a    45678   1 3 5 7 90 \", 10 ) ==
 * array (
 *   0 => \'1234 67890 \',  // 11 characters: Perfect split
 *   1 => \'1234 \',        //  5 characters: \'1234 67890a\' was too long
 *   2 => \'67890a cd \',   // 10 characters: \'67890a cd 1234\' was too long
 *   3 => \'1234   890 \',  // 11 characters: Perfect split
 *   4 => \'123456789 \',   // 10 characters: \'123456789 1234567890a\' was too long
 *   5 => \'1234567890a \', // 12 characters: Too long, but no inner whitespace on which to split
 *   6 => \'   45678   \',  // 11 characters: Perfect split
 *   7 => \'1 3 5 7 9\',    //  9 characters: End of $string
 * );
 * </code>
 *
 * @since 3.4.0
 * @access private
 *
 * @param string $string The string to split
 * @param    int $goal   The desired chunk length.
 * @return array Numeric array of chunks.
 */",
 "/**
 * Adds rel nofollow string to all HTML A elements in content.
 *
 * @since 1.5.0
 *
 * @param string $text Content that may contain HTML A elements.
 * @return string Converted content.
 */",
 "/**
 * Callback to used to add rel=nofollow string to HTML A element.
 *
 * Will remove already existing rel=\"nofollow\" and rel=\'nofollow\' from the
 * string to prevent from invalidating (X)HTML.
 *
 * @since 2.3.0
 *
 * @param array $matches Single Match
 * @return string HTML A Element with rel nofollow.
 */",
 "/**
 * Convert one smiley code to the icon graphic file equivalent.
 *
 * Looks up one smiley code in the $wpsmiliestrans global array and returns an
 * <img> string for that smiley.
 *
 * @global array $wpsmiliestrans
 * @since 2.8.0
 *
 * @param string $smiley Smiley code to convert to image.
 * @return string Image string for smiley.
 */",
 "/**
 * Convert text equivalent of smilies to images.
 *
 * Will only convert smilies if the option \'use_smilies\' is true and the global
 * used in the function isn\'t empty.
 *
 * @since 0.71
 * @uses $wp_smiliessearch
 *
 * @param string $text Content to convert smilies from text.
 * @return string Converted content with text smilies replaced with images.
 */",
 "/**
 * Verifies that an email is valid.
 *
 * Does not grok i18n domains. Not RFC compliant.
 *
 * @since 0.71
 *
 * @param string $email Email address to verify.
 * @param boolean $deprecated Deprecated.
 * @return string|bool Either false or the valid email address.
 */",
 "/**
 * Convert to ASCII from email subjects.
 *
 * @since 1.2.0
 * @usedby wp_mail() handles charsets in email subjects
 *
 * @param string $string Subject line
 * @return string Converted string to ASCII
 */",
 "/**
 * Helper function to convert hex encoded chars to ascii
 *
 * @since 3.1.0
 * @access private
 * @param array $match the preg_replace_callback matches array
 */",
 "/**
 * Returns a date in the GMT equivalent.
 *
 * Requires and returns a date in the Y-m-d H:i:s format. Simply subtracts the
 * value of the \'gmt_offset\' option. Return format can be overridden using the
 * $format parameter. The DateTime and DateTimeZone classes are used to respect
 * time zone differences in DST.
 *
 * @since 1.2.0
 *
 * @uses get_option() to retrieve the the value of \'gmt_offset\'.
 * @param string $string The date to be converted.
 * @param string $format The format string for the returned date (default is Y-m-d H:i:s)
 * @return string GMT version of the date provided.
 */",
 "/**
 * Converts a GMT date into the correct format for the blog.
 *
 * Requires and returns in the Y-m-d H:i:s format. Simply adds the value of
 * gmt_offset.Return format can be overridden using the $format parameter
 *
 * @since 1.2.0
 *
 * @param string $string The date to be converted.
 * @param string $format The format string for the returned date (default is Y-m-d H:i:s)
 * @return string Formatted date relative to the GMT offset.
 */",
 "/**
 * Computes an offset in seconds from an iso8601 timezone.
 *
 * @since 1.5.0
 *
 * @param string $timezone Either \'Z\' for 0 offset or \'??hhmm\'.
 * @return int|float The offset in seconds.
 */",
 "/**
 * Converts an iso8601 date to MySQL DateTime format used by post_date[_gmt].
 *
 * @since 1.5.0
 *
 * @param string $date_string Date and time in ISO 8601 format {@link http://en.wikipedia.org/wiki/ISO_8601}.
 * @param string $timezone Optional. If set to GMT returns the time minus gmt_offset. Default is \'user\'.
 * @return string The date and time in MySQL DateTime format - Y-m-d H:i:s.
 */",
 "/**
 * Adds a element attributes to open links in new windows.
 *
 * Comment text in popup windows should be filtered through this. Right now it\'s
 * a moderately dumb function, ideally it would detect whether a target or rel
 * attribute was already there and adjust its actions accordingly.
 *
 * @since 0.71
 *
 * @param string $text Content to replace links to open in a new window.
 * @return string Content that has filtered links.
 */",
 "/**
 * Strips out all characters that are not allowable in an email.
 *
 * @since 1.5.0
 *
 * @param string $email Email address to filter.
 * @return string Filtered email address.
 */",
 "/**
 * Determines the difference between two timestamps.
 *
 * The difference is returned in a human readable format such as \"1 hour\",
 * \"5 mins\", \"2 days\".
 *
 * @since 1.5.0
 *
 * @param int $from Unix timestamp from which the difference begins.
 * @param int $to Optional. Unix timestamp to end the time difference. Default becomes time() if not set.
 * @return string Human readable time difference.
 */",
 "/**
 * Generates an excerpt from the content, if needed.
 *
 * The excerpt word amount will be 55 words and if the amount is greater than
 * that, then the string \' [...]\' will be appended to the excerpt. If the string
 * is less than 55 words, then the content will be returned as is.
 *
 * The 55 word limit can be modified by plugins/themes using the excerpt_length filter
 * The \' [...]\' string can be modified by plugins/themes using the excerpt_more filter
 *
 * @since 1.5.0
 *
 * @param string $text Optional. The excerpt. If set to empty, an excerpt is generated.
 * @return string The excerpt.
 */",
 "/**
 * Trims text to a certain number of words.
 *
 * This function is localized. For languages that count \'words\' by the individual
 * character (such as East Asian languages), the $num_words argument will apply
 * to the number of individual characters.
 *
 * @since 3.3.0
 *
 * @param string $text Text to trim.
 * @param int $num_words Number of words. Default 55.
 * @param string $more What to append if $text needs to be trimmed. Default \'&hellip;\'.
 * @return string Trimmed text.
 */",
 "/**
 * Converts named entities into numbered entities.
 *
 * @since 1.5.1
 *
 * @param string $text The text within which entities will be converted.
 * @return string Text with converted entities.
 */",
 "/**
 * Formats text for the rich text editor.
 *
 * The filter \'richedit_pre\' is applied here. If $text is empty the filter will
 * be applied to an empty string.
 *
 * @since 2.0.0
 *
 * @param string $text The text to be formatted.
 * @return string The formatted text after filter is applied.
 */",
 "/**
 * Formats text for the HTML editor.
 *
 * Unless $output is empty it will pass through htmlspecialchars before the
 * \'htmledit_pre\' filter is applied.
 *
 * @since 2.5.0
 *
 * @param string $output The text to be formatted.
 * @return string Formatted text after filter applied.
 */",
 "/**
 * Perform a deep string replace operation to ensure the values in $search are no longer present
 *
 * Repeats the replacement operation until it no longer replaces anything so as to remove \"nested\" values
 * e.g. $subject = \'%0%0%0DDD\', $search =\'%0D\', $result =\'\' rather than the \'%0%0DD\' that
 * str_replace would return
 *
 * @since 2.8.1
 * @access private
 *
 * @param string|array $search
 * @param string $subject
 * @return string The processed string
 */",
 "/**
 * Escapes data for use in a MySQL query
 *
 * This is just a handy shortcut for $wpdb->escape(), for completeness\' sake
 *
 * @since 2.8.0
 * @param string $sql Unescaped SQL data
 * @return string The cleaned $sql
 */",
 "/**
 * Checks and cleans a URL.
 *
 * A number of characters are removed from the URL. If the URL is for displaying
 * (the default behaviour) ampersands are also replaced. The \'clean_url\' filter
 * is applied to the returned cleaned URL.
 *
 * @since 2.8.0
 * @uses wp_kses_bad_protocol() To only permit protocols in the URL set
 *		via $protocols or the common ones set in the function.
 *
 * @param string $url The URL to be cleaned.
 * @param array $protocols Optional. An array of acceptable protocols.
 *		Defaults to \'http\', \'https\', \'ftp\', \'ftps\', \'mailto\', \'news\', \'irc\', \'gopher\', \'nntp\', \'feed\', \'telnet\', \'mms\', \'rtsp\', \'svn\' if not set.
 * @param string $_context Private. Use esc_url_raw() for database usage.
 * @return string The cleaned $url after the \'clean_url\' filter is applied.
 */",
 "/**
 * Performs esc_url() for database usage.
 *
 * @since 2.8.0
 * @uses esc_url()
 *
 * @param string $url The URL to be cleaned.
 * @param array $protocols An array of acceptable protocols.
 * @return string The cleaned URL.
 */",
 "/**
 * Convert entities, while preserving already-encoded entities.
 *
 * @link http://www.php.net/htmlentities Borrowed from the PHP Manual user notes.
 *
 * @since 1.2.2
 *
 * @param string $myHTML The text to be converted.
 * @return string Converted text.
 */",
 "/**
 * Escape single quotes, htmlspecialchar \" < > &, and fix line endings.
 *
 * Escapes text strings for echoing in JS. It is intended to be used for inline JS
 * (in a tag attribute, for example onclick=\"...\"). Note that the strings have to
 * be in single quotes. The filter \'js_escape\' is also applied here.
 *
 * @since 2.8.0
 *
 * @param string $text The text to be escaped.
 * @return string Escaped text.
 */",
 "/**
 * Escaping for HTML blocks.
 *
 * @since 2.8.0
 *
 * @param string $text
 * @return string
 */",
 "/**
 * Escaping for HTML attributes.
 *
 * @since 2.8.0
 *
 * @param string $text
 * @return string
 */",
 "/**
 * Escaping for textarea values.
 *
 * @since 3.1
 *
 * @param string $text
 * @return string
 */",
 "/**
 * Escape a HTML tag name.
 *
 * @since 2.5.0
 *
 * @param string $tag_name
 * @return string
 */",
 "/**
 * Escapes text for SQL LIKE special characters % and _.
 *
 * @since 2.5.0
 *
 * @param string $text The text to be escaped.
 * @return string text, safe for inclusion in LIKE query.
 */",
 "/**
 * Convert full URL paths to absolute paths.
 *
 * Removes the http or https protocols and the domain. Keeps the path \'/\' at the
 * beginning, so it isn\'t a true relative link, but from the web root base.
 *
 * @since 2.1.0
 *
 * @param string $link Full URL path.
 * @return string Absolute path.
 */",
 "/**
 * Sanitises various option values based on the nature of the option.
 *
 * This is basically a switch statement which will pass $value through a number
 * of functions depending on the $option.
 *
 * @since 2.0.5
 *
 * @param string $option The name of the option.
 * @param string $value The unsanitised value.
 * @return string Sanitized value.
 */",
 "/**
 * Parses a string into variables to be stored in an array.
 *
 * Uses {@link http://www.php.net/parse_str parse_str()} and stripslashes if
 * {@link http://www.php.net/magic_quotes magic_quotes_gpc} is on.
 *
 * @since 2.2.1
 * @uses apply_filters() for the \'wp_parse_str\' filter.
 *
 * @param string $string The string to be parsed.
 * @param array $array Variables will be stored in this array.
 */",
 "/**
 * Convert lone less than signs.
 *
 * KSES already converts lone greater than signs.
 *
 * @uses wp_pre_kses_less_than_callback in the callback function.
 * @since 2.3.0
 *
 * @param string $text Text to be converted.
 * @return string Converted text.
 */",
 "/**
 * Callback function used by preg_replace.
 *
 * @uses esc_html to format the $matches text.
 * @since 2.3.0
 *
 * @param array $matches Populated by matches to preg_replace.
 * @return string The text returned after esc_html if needed.
 */",
 "/**
 * WordPress implementation of PHP sprintf() with filters.
 *
 * @since 2.5.0
 * @link http://www.php.net/sprintf
 *
 * @param string $pattern The string which formatted args are inserted.
 * @param mixed $args,... Arguments to be formatted into the $pattern string.
 * @return string The formatted string.
 */",
 "/**
 * Localize list items before the rest of the content.
 *
 * The \'%l\' must be at the first characters can then contain the rest of the
 * content. The list items will have \', \', \', and\', and \' and \' added depending
 * on the amount of list items in the $args parameter.
 *
 * @since 2.5.0
 *
 * @param string $pattern Content containing \'%l\' at the beginning.
 * @param array $args List items to prepend to the content and replace \'%l\'.
 * @return string Localized list items and rest of the content.
 */",
 "/**
 * Safely extracts not more than the first $count characters from html string.
 *
 * UTF-8, tags and entities safe prefix extraction. Entities inside will *NOT*
 * be counted as one character. For example &amp; will be counted as 4, &lt; as
 * 3, etc.
 *
 * @since 2.5.0
 *
 * @param integer $str String to get the excerpt from.
 * @param integer $count Maximum number of characters to take.
 * @return string The excerpt.
 */",
 "/**
 * Add a Base url to relative links in passed content.
 *
 * By default it supports the \'src\' and \'href\' attributes. However this can be
 * changed via the 3rd param.
 *
 * @since 2.7.0
 *
 * @param string $content String to search for links in.
 * @param string $base The base URL to prefix to links.
 * @param array $attrs The attributes which should be processed.
 * @return string The processed content.
 */",
 "/**
 * Callback to add a base url to relative links in passed content.
 *
 * @since 2.7.0
 * @access private
 *
 * @param string $m The matched link.
 * @return string The processed link.
 */",
 "/**
 * Adds a Target attribute to all links in passed content.
 *
 * This function by default only applies to <a> tags, however this can be
 * modified by the 3rd param.
 *
 * <b>NOTE:</b> Any current target attributed will be stripped and replaced.
 *
 * @since 2.7.0
 *
 * @param string $content String to search for links in.
 * @param string $target The Target to add to the links.
 * @param array $tags An array of tags to apply to.
 * @return string The processed content.
 */",
 "/**
 * Callback to add a target attribute to all links in passed content.
 *
 * @since 2.7.0
 * @access private
 *
 * @param string $m The matched link.
 * @return string The processed link.
 */",
 "/**
 * Properly strip all HTML tags including script and style
 *
 * @since 2.9.0
 *
 * @param string $string String containing HTML tags
 * @param bool $remove_breaks optional Whether to remove left over line breaks and white space chars
 * @return string The processed string.
 */",
 "/**
 * Sanitize a string from user input or from the db
 *
 * check for invalid UTF-8,
 * Convert single < characters to entity,
 * strip all tags,
 * remove line breaks, tabs and extra white space,
 * strip octets.
 *
 * @since 2.9.0
 *
 * @param string $str
 * @return string
 */",
 "/**
 * i18n friendly version of basename()
 *
 * @since 3.1.0
 *
 * @param string $path A path.
 * @param string $suffix If the filename ends in suffix this will also be cut off.
 * @return string
 */",
 "/**
 * Forever eliminate \"Wordpress\" from the planet (or at least the little bit we can influence).
 *
 * Violating our coding standards for a good function name.
 *
 * @since 3.0.0
 */",
 "/**
 * Sanitize a mime type
 *
 * @since 3.1.3
 *
 * @param string $mime_type Mime type
 * @return string Sanitized mime type
 */",
 "/**
 * Sanitize space or carriage return separated URLs that are used to send trackbacks.
 *
 * @since 3.4.0
 *
 * @param string $to_ping Space or carriage return separated URLs
 * @return string URLs starting with the http or https protocol, separated by a carriage return.
 */",
 "/**
 * @ignore
 */",
 "/**
 * @ignore
 */",
 "/**
 * @ignore
 */",
 "/**
 * @ignore
 */",
 "/**
 * @ignore
 */",
 "/**
 * @ignore
 */",
 "/**
 * @ignore
 */",
 "/**
 * @ignore
 */",
 "/**
 * @ignore
 */",
 "/**
 * @ignore
 */",
 "/**
 * @ignore
 */",
 "/**
 * @ignore
 */",
 "/**
 * @ignore
 */",
 "/**
 * @ignore
 */",
 "/**
 * Outputs the header for the login page.
 *
 * @uses do_action() Calls the \'login_head\' for outputting HTML in the Log In
 *		header.
 * @uses apply_filters() Calls \'login_headerurl\' for the top login link.
 * @uses apply_filters() Calls \'login_headertitle\' for the top login title.
 * @uses apply_filters() Calls \'login_message\' on the message to display in the
 *		header.
 * @uses $error The error global, which is checked for displaying errors.
 *
 * @param string $title Optional. WordPress Log In Page title to display in
 *		<title/> element.
 * @param string $message Optional. Message to display in header.
 * @param WP_Error $wp_error Optional. WordPress Error Object
 */",
 "/**
 * Outputs the footer for the login page.
 *
 * @param string $input_id Which input to auto-focus
 */",
 "/**
 * Handles sending password retrieval email to user.
 *
 * @uses $wpdb WordPress Database object
 *
 * @return bool|WP_Error True: when finish. WP_Error on error
 */",
 "/**
 * Retrieves a user row based on password reset key and login
 *
 * @uses $wpdb WordPress Database object
 *
 * @param string $key Hash to validate sending user\'s password
 * @param string $login The user login
 * @return object|WP_Error User\'s database row on success, error object for invalid keys
 */",
 "/**
 * Handles resetting the user\'s password.
 *
 * @param object $user The user
 * @param string $new_pass New password for the user in plaintext
 */",
 "/**
 * Handles registering a new user.
 *
 * @param string $user_login User\'s username for logging in
 * @param string $user_email User\'s email address to send password and add
 * @return int|WP_Error Either user\'s ID or error on failure.
 */",
 "/**
	 * Constructor.
	 *
	 * @param $config Configuration name/value array.
	 */",
 "/**
	 * Simple loopback function everything that gets in will be send back.
	 *
	 * @param $args.. Arguments.
	 * @return {Array} Array of all input arguments. 
	 */",
 "/**
	 * Spellchecks an array of words.
	 *
	 * @param {String} $lang Language code like sv or en.
	 * @param {Array} $words Array of words to spellcheck.
	 * @return {Array} Array of misspelled words.
	 */",
 "/**
	 * Returns suggestions of for a specific word.
	 *
	 * @param {String} $lang Language code like sv or en.
	 * @param {String} $word Specific word to get suggestions for.
	 * @return {Array} Array of suggestions for the specified word.
	 */",
 "/**
	 * Throws an error message back to the user. This will stop all execution.
	 *
	 * @param {String} $str Message to send back to user.
	 */",
 "/**
 * $Id: editor_plugin_src.js 201 2007-02-12 15:56:56Z spocke $
 *
 * @package MCManager.includes
 * @author Moxiecode
 * @copyright Copyright ? 2004-2007, Moxiecode Systems AB, All rights reserved.
 */",
 "/**
 * Rename $_POST data from form names to DB post columns.
 *
 * Manipulates $_POST directly.
 *
 * @package WordPress
 * @since 2.6.0
 *
 * @param bool $update Are we updating a pre-existing post?
 * @param array $post_data Array of post data. Defaults to the contents of $_POST.
 * @return object|bool WP_Error on failure, true on success.
 */",
 "/**
 * Update an existing post with values provided in $_POST.
 *
 * @since 1.5.0
 *
 * @param array $post_data Optional.
 * @return int Post ID.
 */",
 "/**
 * Process the post data for the bulk editing of posts.
 *
 * Updates all bulk edited posts/pages, adding (but not removing) tags and
 * categories. Skips pages when they would be their own parent or child.
 *
 * @since 2.7.0
 *
 * @param array $post_data Optional, the array of post data to process if not provided will use $_POST superglobal.
 * @return array
 */",
 "/**
 * Default post information to use when populating the \"Write Post\" form.
 *
 * @since 2.0.0
 *
 * @param string $post_type A post type string, defaults to \'post\'.
 * @return object stdClass object containing all the default post data as attributes
 */",
 "/**
 * Get the default page information to use.
 *
 * @since 2.5.0
 *
 * @return object stdClass object containing all the default post data as attributes
 */",
 "/**
 * Get an existing post and format it for editing.
 *
 * @since 2.0.0
 *
 * @param unknown_type $id
 * @return unknown
 */",
 "/**
 * Determine if a post exists based on title, content, and date
 *
 * @since 2.0.0
 *
 * @param string $title Post title
 * @param string $content Optional post content
 * @param string $date Optional post date
 * @return int Post ID if post exists, 0 otherwise.
 */",
 "/**
 * Creates a new post from the \"Write Post\" form using $_POST information.
 *
 * @since 2.1.0
 *
 * @return unknown
 */",
 "/**
 * Calls wp_write_post() and handles the errors.
 *
 * @since 2.0.0

 * @uses wp_write_post()
 * @uses is_wp_error()
 * @uses wp_die()
 * @return unknown
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 1.2.0
 *
 * @param unknown_type $post_ID
 * @return unknown
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 1.2.0
 *
 * @param unknown_type $mid
 * @return unknown
 */",
 "/**
 * Get a list of previously defined keys.
 *
 * @since 1.2.0
 *
 * @return unknown
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.1.0
 *
 * @param unknown_type $mid
 * @return unknown
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * Some postmeta stuff.
 *
 * @since 1.2.0
 *
 * @param unknown_type $postid
 * @return unknown
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 1.2.0
 *
 * @param unknown_type $meta_id
 * @param unknown_type $meta_key Expect Slashed
 * @param unknown_type $meta_value Expect Slashed
 * @return unknown
 */",
 "/**
 * Replace hrefs of attachment anchors with up-to-date permalinks.
 *
 * @since 2.3.0
 * @access private
 *
 * @param unknown_type $post_ID
 * @return unknown
 */",
 "/**
 * Move child posts to a new parent.
 *
 * @since 2.3.0
 * @access private
 *
 * @param unknown_type $old_ID
 * @param unknown_type $new_ID
 * @return unknown
 */",
 "/**
 * Get all the possible statuses for a post_type
 *
 * @since 2.5.0
 *
 * @param string $type The post_type you want the statuses for
 * @return array As array of all the statuses for the supplied post type
 */",
 "/**
 * Run the wp query to fetch the posts for listing on the edit posts page
 *
 * @since 2.5.0
 *
 * @param array|bool $q Array of query variables to use to build the query or false to use $_GET superglobal.
 * @return array
 */",
 "/**
 * Get default post mime types
 *
 * @since 2.9.0
 *
 * @return array
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.5.0
 *
 * @param unknown_type $type
 * @return unknown
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.5.0
 *
 * @param unknown_type $q
 * @return unknown
 */",
 "/**
 * Returns the list of classes to be used by a metabox
 *
 * @uses get_user_option()
 * @since 2.5.0
 *
 * @param unknown_type $id
 * @param unknown_type $page
 * @return unknown
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.5.0
 *
 * @param int|object $id    Post ID or post object.
 * @param string $title (optional) Title
 * @param string $name (optional) Name
 * @return array With two entries of type string
 */",
 "/**
 * sample permalink html
 *
 * intended to be used for the inplace editor of the permalink post slug on in the post (and page?) editor.
 *
 * @since 2.5.0
 *
 * @param int|object $id Post ID or post object.
 * @param string $new_title (optional) New title
 * @param string $new_slug (optional) New slug
 * @return string intended to be used for the inplace editor of the permalink post slug on in the post (and page?) editor.
 */",
 "/**
 * Output HTML for the post thumbnail meta-box.
 *
 * @since 2.9.0
 *
 * @param int $thumbnail_id ID of the attachment used for thumbnail
 * @param int $post_id ID of the post associated with the thumbnail, defaults to global $post_ID
 * @return string html
 */",
 "/**
 * Check to see if the post is currently being edited by another user.
 *
 * @since 2.5.0
 *
 * @param int $post_id ID of the post to check for editing
 * @return bool|int False: not locked or locked by current user. Int: user ID of user with lock.
 */",
 "/**
 * Mark the post as currently being edited by the current user
 *
 * @since 2.5.0
 *
 * @param int $post_id ID of the post to being edited
 * @return bool|array Returns false if the post doesn\'t exist of there is no current user, or
 * 	an array of the lock time and the user ID.
 */",
 "/**
 * Outputs the notice message to say that someone else is editing this post at the moment.
 *
 * @since 2.8.5
 * @return none
 */",
 "/**
 * Creates autosave data for the specified post from $_POST data.
 *
 * @package WordPress
 * @subpackage Post_Revisions
 * @since 2.6.0
 *
 * @uses _wp_translate_postdata()
 * @uses _wp_post_revision_fields()
 *
 * @return unknown
 */",
 "/**
 * Save draft or manually autosave for showing preview.
 *
 * @package WordPress
 * @since 2.7.0
 *
 * @uses get_post_status()
 * @uses edit_post()
 * @uses get_post()
 * @uses current_user_can()
 * @uses wp_die()
 * @uses wp_create_post_autosave()
 * @uses add_query_arg()
 * @uses wp_create_nonce()
 *
 * @return str URL to redirect to show the preview
 */",
 "/**
 * Returns an array of WP_Theme objects based on the arguments.
 *
 * Despite advances over get_themes(), this function is quite expensive, and grows
 * linearly with additional themes. Stick to wp_get_theme() if possible.
 *
 * @since 3.4.0
 *
 * @param array $args The search arguments. Optional.
 * - errors      mixed  True to return themes with errors, false to return themes without errors, null
 *                      to return all themes. Defaults to false.
 * - allowed     mixed  (Multisite) True to return only allowed themes for a site. False to return only
 *                      disallowed themes for a site. \'site\' to return only site-allowed themes. \'network\'
 *                      to return only network-allowed themes. Null to return all themes. Defaults to null.
 * - blog_id     int    (Multisite) The blog ID used to calculate which themes are allowed. Defaults to 0,
 *                      synonymous for the current blog.
 * @return Array of WP_Theme objects.
 */",
 "/**
 * Gets a WP_Theme object for a theme.
 *
 * @since 3.4.0
 *
 * @param string $stylesheet Directory name for the theme. Optional. Defaults to current theme.
 * @param string $theme_root Absolute path of the theme root to look in. Optional. If not specified, get_raw_theme_root()
 * 	is used to calculate the theme root for the $stylesheet provided (or current theme).
 * @return WP_Theme Theme object. Be sure to check the object\'s exists() method if you need to confirm the theme\'s existence.
 */",
 "/**
 * Whether a child theme is in use.
 *
 * @since 3.0.0
 *
 * @return bool true if a child theme is in use, false otherwise.
 **/",
 "/**
 * Retrieve name of the current stylesheet.
 *
 * The theme name that the administrator has currently set the front end theme
 * as.
 *
 * For all extensive purposes, the template name and the stylesheet name are
 * going to be the same for most cases.
 *
 * @since 1.5.0
 * @uses apply_filters() Calls \'stylesheet\' filter on stylesheet name.
 *
 * @return string Stylesheet name.
 */",
 "/**
 * Retrieve stylesheet directory path for current theme.
 *
 * @since 1.5.0
 * @uses apply_filters() Calls \'stylesheet_directory\' filter on stylesheet directory and theme name.
 *
 * @return string Path to current theme directory.
 */",
 "/**
 * Retrieve stylesheet directory URI.
 *
 * @since 1.5.0
 *
 * @return string
 */",
 "/**
 * Retrieve URI of current theme stylesheet.
 *
 * The stylesheet file name is \'style.css\' which is appended to {@link
 * get_stylesheet_directory_uri() stylesheet directory URI} path.
 *
 * @since 1.5.0
 * @uses apply_filters() Calls \'stylesheet_uri\' filter on stylesheet URI path and stylesheet directory URI.
 *
 * @return string
 */",
 "/**
 * Retrieve localized stylesheet URI.
 *
 * The stylesheet directory for the localized stylesheet files are located, by
 * default, in the base theme directory. The name of the locale file will be the
 * locale followed by \'.css\'. If that does not exist, then the text direction
 * stylesheet will be checked for existence, for example \'ltr.css\'.
 *
 * The theme may change the location of the stylesheet directory by either using
 * the \'stylesheet_directory_uri\' filter or the \'locale_stylesheet_uri\' filter.
 * If you want to change the location of the stylesheet files for the entire
 * WordPress workflow, then change the former. If you just have the locale in a
 * separate folder, then change the latter.
 *
 * @since 2.1.0
 * @uses apply_filters() Calls \'locale_stylesheet_uri\' filter on stylesheet URI path and stylesheet directory URI.
 *
 * @return string
 */",
 "/**
 * Retrieve name of the current theme.
 *
 * @since 1.5.0
 * @uses apply_filters() Calls \'template\' filter on template option.
 *
 * @return string Template name.
 */",
 "/**
 * Retrieve current theme directory.
 *
 * @since 1.5.0
 * @uses apply_filters() Calls \'template_directory\' filter on template directory path and template name.
 *
 * @return string Template directory path.
 */",
 "/**
 * Retrieve theme directory URI.
 *
 * @since 1.5.0
 * @uses apply_filters() Calls \'template_directory_uri\' filter on template directory URI path and template name.
 *
 * @return string Template directory URI.
 */",
 "/**
 * Retrieve theme roots.
 *
 * @since 2.9.0
 *
 * @return array|string An array of theme roots keyed by template/stylesheet or a single theme root if all themes have the same root.
 */",
 "/**
 * Register a directory that contains themes.
 *
 * @since 2.9.0
 *
 * @param string $directory Either the full filesystem path to a theme folder or a folder within WP_CONTENT_DIR
 * @return bool
 */",
 "/**
 * Search all registered theme directories for complete and valid themes.
 *
 * @since 2.9.0
 *
 * @param bool $force Optional. Whether to force a new directory scan. Defaults to false.
 * @return array Valid themes found
 */",
 "/**
 * Retrieve path to themes directory.
 *
 * Does not have trailing slash.
 *
 * @since 1.5.0
 * @uses apply_filters() Calls \'theme_root\' filter on path.
 *
 * @param string $stylesheet_or_template The stylesheet or template name of the theme
 * @return string Theme path.
 */",
 "/**
 * Retrieve URI for themes directory.
 *
 * Does not have trailing slash.
 *
 * @since 1.5.0
 *
 * @param string $stylesheet_or_template Optional. The stylesheet or template name of the theme.
 * 	Default is to leverage the main theme root.
 * @param string $theme_root Optional. The theme root for which calculations will be based, preventing
 * 	the need for a get_raw_theme_root() call.
 * @return string Themes URI.
 */",
 "/**
 * Get the raw theme root relative to the content directory with no filters applied.
 *
 * @since 3.1.0
 *
 * @param string $stylesheet_or_template The stylesheet or template name of the theme
 * @param bool $skip_cache Optional. Whether to skip the cache. Defaults to false, meaning the cache is used.
 * @return string Theme root
 */",
 "/**
 * Display localized stylesheet link element.
 *
 * @since 2.1.0
 */",
 "/**
 * Start preview theme output buffer.
 *
 * Will only preform task if the user has permissions and template and preview
 * query variables exist.
 *
 * @since 2.6.0
 */",
 "/**
 * Private function to modify the current template when previewing a theme
 *
 * @since 2.9.0
 * @access private
 *
 * @return string
 */",
 "/**
 * Private function to modify the current stylesheet when previewing a theme
 *
 * @since 2.9.0
 * @access private
 *
 * @return string
 */",
 "/**
 * Callback function for ob_start() to capture all links in the theme.
 *
 * @since 2.6.0
 * @access private
 *
 * @param string $content
 * @return string
 */",
 "/**
 * Manipulates preview theme links in order to control and maintain location.
 *
 * Callback function for preg_replace_callback() to accept and filter matches.
 *
 * @since 2.6.0
 * @access private
 *
 * @param array $matches
 * @return string
 */",
 "/**
 * Switches current theme to new template and stylesheet names.
 *
 * @since 2.5.0
 * @uses do_action() Calls \'switch_theme\' action, passing the new theme.
 *
 * @param string $template Template name
 * @param string $stylesheet Stylesheet name.
 */",
 "/**
 * Checks that current theme files \'index.php\' and \'style.css\' exists.
 *
 * Does not check the default theme, which is the fallback and should always exist.
 * Will switch theme to the fallback theme if current theme does not validate.
 * You can use the \'validate_current_theme\' filter to return false to
 * disable this functionality.
 *
 * @since 1.5.0
 * @see WP_DEFAULT_THEME
 *
 * @return bool
 */",
 "/**
 * Retrieve all theme modifications.
 *
 * @since 3.1.0
 *
 * @return array Theme modifications.
 */",
 "/**
 * Retrieve theme modification value for the current theme.
 *
 * If the modification name does not exist, then the $default will be passed
 * through {@link http://php.net/sprintf sprintf()} PHP function with the first
 * string the template directory URI and the second string the stylesheet
 * directory URI.
 *
 * @since 2.1.0
 * @uses apply_filters() Calls \'theme_mod_$name\' filter on the value.
 *
 * @param string $name Theme modification name.
 * @param bool|string $default
 * @return string
 */",
 "/**
 * Update theme modification value for the current theme.
 *
 * @since 2.1.0
 *
 * @param string $name Theme modification name.
 * @param string $value theme modification value.
 */",
 "/**
 * Remove theme modification name from current theme list.
 *
 * If removing the name also removes all elements, then the entire option will
 * be removed.
 *
 * @since 2.1.0
 *
 * @param string $name Theme modification name.
 * @return null
 */",
 "/**
 * Remove theme modifications option for current theme.
 *
 * @since 2.1.0
 */",
 "/**
 * Retrieve text color for custom header.
 *
 * @since 2.1.0
 *
 * @return string
 */",
 "/**
 * Display text color for custom header.
 *
 * @since 2.1.0
 */",
 "/**
 * Whether to display the header text.
 *
 * @since 3.4.0
 *
 * @return bool
 */",
 "/**
 * Retrieve header image for custom header.
 *
 * @since 2.1.0
 *
 * @return string
 */",
 "/**
 * Get random header image data from registered images in theme.
 *
 * @since 3.4.0
 *
 * @access private
 *
 * @return string Path to header image
 */",
 "/**
 * Get random header image url from registered images in theme.
 *
 * @since 3.2.0
 *
 * @return string Path to header image
 */",
 "/**
 * Check if random header image is in use.
 *
 * Always true if user expressly chooses the option in Appearance > Header.
 * Also true if theme has multiple header images registered, no specific header image
 * is chosen, and theme turns on random headers with add_theme_support().
 *
 * @since 3.2.0
 *
 * @param string $type The random pool to use. any|default|uploaded
 * @return boolean
 */",
 "/**
 * Display header image path.
 *
 * @since 2.1.0
 */",
 "/**
 * Get the header images uploaded for the current theme.
 *
 * @since 3.2.0
 *
 * @return array
 */",
 "/**
 * Get the header image data.
 *
 * @since 3.4.0
 *
 * @return object
 */",
 "/**
 * Register a selection of default headers to be displayed by the custom header admin UI.
 *
 * @since 3.0.0
 *
 * @param array $headers Array of headers keyed by a string id. The ids point to arrays containing \'url\', \'thumbnail_url\', and \'description\' keys.
 */",
 "/**
 * Unregister default headers.
 *
 * This function must be called after register_default_headers() has already added the
 * header you want to remove.
 *
 * @see register_default_headers()
 * @since 3.0.0
 *
 * @param string|array $header The header string id (key of array) to remove, or an array thereof.
 * @return True on success, false on failure.
 */",
 "/**
 * Retrieve background image for custom background.
 *
 * @since 3.0.0
 *
 * @return string
 */",
 "/**
 * Display background image path.
 *
 * @since 3.0.0
 */",
 "/**
 * Retrieve value for custom background color.
 *
 * @since 3.0.0
 *
 * @return string
 */",
 "/**
 * Display background color value.
 *
 * @since 3.0.0
 */",
 "/**
 * Default custom background callback.
 *
 * @since 3.0.0
 * @access protected
 */",
 "/**
 * Add callback for custom TinyMCE editor stylesheets.
 *
 * The parameter $stylesheet is the name of the stylesheet, relative to
 * the theme root. It also accepts an array of stylesheets.
 * It is optional and defaults to \'editor-style.css\'.
 *
 * This function automatically adds another stylesheet with -rtl prefix, e.g. editor-style-rtl.css.
 * If that file doesn\'t exist, it is removed before adding the stylesheet(s) to TinyMCE.
 * If an array of stylesheets is passed to add_editor_style(),
 * RTL is only added for the first stylesheet.
 *
 * Since version 3.4 the TinyMCE body has .rtl CSS class.
 * It is a better option to use that class and add any RTL styles to the main stylesheet.
 *
 * @since 3.0.0
 *
 * @param mixed $stylesheet Optional. Stylesheet name or array thereof, relative to theme root.
 * 	Defaults to \'editor-style.css\'
 */",
 "/**
 * Removes all visual editor stylesheets.
 *
 * @since 3.1.0
 *
 * @return bool True on success, false if there were no stylesheets to remove.
 */",
 "/**
 * Allows a theme to register its support of a certain feature
 *
 * Must be called in the theme\'s functions.php file to work.
 * If attached to a hook, it must be after_setup_theme.
 * The init hook may be too late for some features.
 *
 * @since 2.9.0
 * @param string $feature the feature being added
 */",
 "/**
 * Registers the internal custom header and background routines.
 *
 * @since 3.4.0
 * @access private
 */",
 "/**
 * Gets the theme support arguments passed when registering that support
 *
 * @since 3.1
 * @param string $feature the feature to check
 * @return array The array of extra arguments
 */",
 "/**
 * Allows a theme to de-register its support of a certain feature
 *
 * Should be called in the theme\'s functions.php file. Generally would
 * be used for child themes to override support from the parent theme.
 *
 * @since 3.0.0
 * @see add_theme_support()
 * @param string $feature the feature being added
 * @return bool Whether feature was removed.
 */",
 "/**
 * Do not use. Removes theme support internally, ignorant of the blacklist.
 *
 * @access private
 * @since 3.1.0
 */",
 "/**
 * Checks a theme\'s support for a given feature
 *
 * @since 2.9.0
 * @param string $feature the feature being checked
 * @return boolean
 */",
 "/**
 * Checks a theme\'s support for a given feature before loading the functions which implement it.
 *
 * @since 2.9.0
 * @param string $feature the feature being checked
 * @param string $include the file containing the functions that implement the feature
 */",
 "/**
 * Checks an attachment being deleted to see if it\'s a header or background image.
 *
 * If true it removes the theme modification which would be pointing at the deleted
 * attachment
 *
 * @access private
 * @since 3.0.0
 * @param int $id the attachment id
 */",
 "/**
 * Checks if a theme has been changed and runs \'after_switch_theme\' hook on the next WP load
 *
 * @since 3.3.0
 */",
 "/**
 * Includes and instantiates the WP_Customize_Manager class.
 *
 * Fires when ?wp_customize=on or on wp-admin/customize.php.
 *
 * @since 3.4.0
 */",
 "/**
 * Adds settings for the customize-loader script.
 *
 * @since 3.4.0
 */",
 "/**
 * Returns a URL to load the theme customizer.
 *
 * @since 3.4.0
 *
 * @param string $stylesheet Optional. Theme to customize. Defaults to current theme.
 */",
 "/**
 * Prints a script to check whether or not the customizer is supported,
 * and apply either the no-customize-support or customize-support class
 * to the body.
 *
 * This function MUST be called inside the body tag.
 *
 * Ideally, call this function immediately after the body tag is opened.
 * This prevents a flash of unstyled content.
 *
 * It is also recommended that you add the \"no-customize-support\" class
 * to the body tag by default.
 *
 * @since 3.4.0
 */",
 "/**
 * Fetch an instance of a WP_List_Table class.
 *
 * @access private
 * @since 3.1.0
 *
 * @param string $class The type of the list table, which is the class name.
 * @return object|bool Object on success, false if the class does not exist.
 */",
 "/**
 * Register column headers for a particular screen.
 *
 * @since 2.7.0
 *
 * @param string $screen The handle for the screen to add help to. This is usually the hook name returned by the add_*_page() functions.
 * @param array $columns An array of columns with column IDs as the keys and translated column names as the values
 * @see get_column_headers(), print_column_headers(), get_hidden_columns()
 */",
 "/**
 * Prints column headers for a particular screen.
 *
 * @since 2.7.0
 */",
 "/**
 * Helper class to be used only by back compat functions
 *
 * @since 3.1.0
 */",
 "/**
	 * Add a node to the menu.
	 *
	 * @param array $args - The arguments for each node.
	 * - id         - string    - The ID of the item.
	 * - title      - string    - The title of the node.
	 * - parent     - string    - The ID of the parent node. Optional.
	 * - href       - string    - The link for the item. Optional.
	 * - group      - boolean   - If the node is a group. Optional. Default false.
	 * - meta       - array     - Meta data including the following keys: html, class, onclick, target, title, tabindex.
	 */",
 "/**
	 * Gets a node.
	 *
	 * @return object Node.
	 */",
 "/**
	 * Add a group to a menu node.
	 *
	 * @since 3.3.0
	 *
	 * @param array $args - The arguments for each node.
	 * - id         - string    - The ID of the item.
	 * - parent     - string    - The ID of the parent node. Optional. Default root.
	 * - meta       - array     - Meta data including the following keys: class, onclick, target, title.
	 */",
 "/**
	 * Remove a node.
	 *
	 * @return object The removed node.
	 */",
 "/**
	 * Kses global for default allowable HTML tags.
	 *
	 * Can be override by using CUSTOM_TAGS constant.
	 *
	 * @global array $allowedposttags
	 * @since 2.0.0
	 */",
 "/**
	 * Kses allowed HTML elements.
	 *
	 * @global array $allowedtags
	 * @since 1.0.0
	 */",
 "/**
 * Filters content and keeps only allowable HTML elements.
 *
 * This function makes sure that only the allowed HTML element names, attribute
 * names and attribute values plus only sane HTML entities will occur in
 * $string. You have to remove any slashes from PHP\'s magic quotes before you
 * call this function.
 *
 * The default allowed protocols are \'http\', \'https\', \'ftp\', \'mailto\', \'news\',
 * \'irc\', \'gopher\', \'nntp\', \'feed\', \'telnet, \'mms\', \'rtsp\' and \'svn\'. This
 * covers all common link protocols, except for \'javascript\' which should not
 * be allowed for untrusted users.
 *
 * @since 1.0.0
 *
 * @param string $string Content to filter through kses
 * @param array $allowed_html List of allowed HTML elements
 * @param array $allowed_protocols Optional. Allowed protocol in links.
 * @return string Filtered content with only allowed HTML elements
 */",
 "/**
 * You add any kses hooks here.
 *
 * There is currently only one kses WordPress hook and it is called here. All
 * parameters are passed to the hooks and expected to receive a string.
 *
 * @since 1.0.0
 *
 * @param string $string Content to filter through kses
 * @param array $allowed_html List of allowed HTML elements
 * @param array $allowed_protocols Allowed protocol in links
 * @return string Filtered content through \'pre_kses\' hook
 */",
 "/**
 * This function returns kses\' version number.
 *
 * @since 1.0.0
 *
 * @return string KSES Version Number
 */",
 "/**
 * Searches for HTML tags, no matter how malformed.
 *
 * It also matches stray \">\" characters.
 *
 * @since 1.0.0
 *
 * @param string $string Content to filter
 * @param array $allowed_html Allowed HTML elements
 * @param array $allowed_protocols Allowed protocols to keep
 * @return string Content with fixed HTML tags
 */",
 "/**
 * Callback for wp_kses_split.
 *
 * @since 3.1.0
 * @access private
 */",
 "/**
 * Callback for wp_kses_split for fixing malformed HTML tags.
 *
 * This function does a lot of work. It rejects some very malformed things like
 * <:::>. It returns an empty string, if the element isn\'t allowed (look ma, no
 * strip_tags()!). Otherwise it splits the tag into an element and an attribute
 * list.
 *
 * After the tag is split into an element and an attribute list, it is run
 * through another filter which will remove illegal attributes and once that is
 * completed, will be returned.
 *
 * @access private
 * @since 1.0.0
 * @uses wp_kses_attr()
 *
 * @param string $string Content to filter
 * @param array $allowed_html Allowed HTML elements
 * @param array $allowed_protocols Allowed protocols to keep
 * @return string Fixed HTML element
 */",
 "/**
 * Removes all attributes, if none are allowed for this element.
 *
 * If some are allowed it calls wp_kses_hair() to split them further, and then
 * it builds up new HTML code from the data that kses_hair() returns. It also
 * removes \"<\" and \">\" characters, if there are any left. One more thing it does
 * is to check if the tag has a closing XHTML slash, and if it does, it puts one
 * in the returned code as well.
 *
 * @since 1.0.0
 *
 * @param string $element HTML element/tag
 * @param string $attr HTML attributes from HTML element to closing HTML element tag
 * @param array $allowed_html Allowed HTML elements
 * @param array $allowed_protocols Allowed protocols to keep
 * @return string Sanitized HTML element
 */",
 "/**
 * Builds an attribute list from string containing attributes.
 *
 * This function does a lot of work. It parses an attribute list into an array
 * with attribute data, and tries to do the right thing even if it gets weird
 * input. It will add quotes around attribute values that don\'t have any quotes
 * or apostrophes around them, to make it easier to produce HTML code that will
 * conform to W3C\'s HTML specification. It will also remove bad URL protocols
 * from attribute values. It also reduces duplicate attributes by using the
 * attribute defined first (foo=\'bar\' foo=\'baz\' will result in foo=\'bar\').
 *
 * @since 1.0.0
 *
 * @param string $attr Attribute list from HTML element to closing HTML element tag
 * @param array $allowed_protocols Allowed protocols to keep
 * @return array List of attributes after parsing
 */",
 "/**
 * Performs different checks for attribute values.
 *
 * The currently implemented checks are \"maxlen\", \"minlen\", \"maxval\", \"minval\"
 * and \"valueless\".
 *
 * @since 1.0.0
 *
 * @param string $value Attribute value
 * @param string $vless Whether the value is valueless. Use \'y\' or \'n\'
 * @param string $checkname What $checkvalue is checking for.
 * @param mixed $checkvalue What constraint the value should pass
 * @return bool Whether check passes
 */",
 "/**
 * Sanitize string from bad protocols.
 *
 * This function removes all non-allowed protocols from the beginning of
 * $string. It ignores whitespace and the case of the letters, and it does
 * understand HTML entities. It does its work in a while loop, so it won\'t be
 * fooled by a string like \"javascript:javascript:alert(57)\".
 *
 * @since 1.0.0
 *
 * @param string $string Content to filter bad protocols from
 * @param array $allowed_protocols Allowed protocols to keep
 * @return string Filtered content
 */",
 "/**
 * Removes any null characters in $string.
 *
 * @since 1.0.0
 *
 * @param string $string
 * @return string
 */",
 "/**
 * Strips slashes from in front of quotes.
 *
 * This function changes the character sequence \" to just \". It leaves all
 * other slashes alone. It\'s really weird, but the quoting from
 * preg_replace(//e) seems to require this.
 *
 * @since 1.0.0
 *
 * @param string $string String to strip slashes
 * @return string Fixed string with quoted slashes
 */",
 "/**
 * Goes through an array and changes the keys to all lower case.
 *
 * @since 1.0.0
 *
 * @param array $inarray Unfiltered array
 * @return array Fixed array with all lowercase keys
 */",
 "/**
 * Removes the HTML JavaScript entities found in early versions of Netscape 4.
 *
 * @since 1.0.0
 *
 * @param string $string
 * @return string
 */",
 "/**
 * Handles parsing errors in wp_kses_hair().
 *
 * The general plan is to remove everything to and including some whitespace,
 * but it deals with quotes and apostrophes as well.
 *
 * @since 1.0.0
 *
 * @param string $string
 * @return string
 */",
 "/**
 * Sanitizes content from bad protocols and other characters.
 *
 * This function searches for URL protocols at the beginning of $string, while
 * handling whitespace and HTML entities.
 *
 * @since 1.0.0
 *
 * @param string $string Content to check for bad protocols
 * @param string $allowed_protocols Allowed protocols
 * @return string Sanitized content
 */",
 "/**
 * Callback for wp_kses_bad_protocol_once() regular expression.
 *
 * This function processes URL protocols, checks to see if they\'re in the
 * whitelist or not, and returns different data depending on the answer.
 *
 * @access private
 * @since 1.0.0
 *
 * @param string $string URI scheme to check against the whitelist
 * @param string $allowed_protocols Allowed protocols
 * @return string Sanitized content
 */",
 "/**
 * Converts and fixes HTML entities.
 *
 * This function normalizes HTML entities. It will convert \"AT&T\" to the correct
 * \"AT&amp;T\", \"&#00058;\" to \"&#58;\", \"&#XYZZY;\" to \"&amp;#XYZZY;\" and so on.
 *
 * @since 1.0.0
 *
 * @param string $string Content to normalize entities
 * @return string Content with normalized entities
 */",
 "/**
 * Callback for wp_kses_normalize_entities() regular expression.
 *
 * This function only accepts valid named entity references, which are finite,
 * case-sensitive, and highly scrutinized by HTML and XML validators.
 *
 * @since 3.0.0
 *
 * @param array $matches preg_replace_callback() matches array
 * @return string Correctly encoded entity
 */",
 "/**
 * Callback for wp_kses_normalize_entities() regular expression.
 *
 * This function helps wp_kses_normalize_entities() to only accept 16-bit values
 * and nothing more for &#number; entities.
 *
 * @access private
 * @since 1.0.0
 *
 * @param array $matches preg_replace_callback() matches array
 * @return string Correctly encoded entity
 */",
 "/**
 * Callback for wp_kses_normalize_entities() for regular expression.
 *
 * This function helps wp_kses_normalize_entities() to only accept valid Unicode
 * numeric entities in hex form.
 *
 * @access private
 *
 * @param array $matches preg_replace_callback() matches array
 * @return string Correctly encoded entity
 */",
 "/**
 * Helper function to determine if a Unicode value is valid.
 *
 * @param int $i Unicode value
 * @return bool True if the value was a valid Unicode number
 */",
 "/**
 * Convert all entities to their character counterparts.
 *
 * This function decodes numeric HTML entities (&#65; and &#x41;). It doesn\'t do
 * anything with other entities like &auml;, but we don\'t need them in the URL
 * protocol whitelisting system anyway.
 *
 * @since 1.0.0
 *
 * @param string $string Content to change entities
 * @return string Content after decoded entities
 */",
 "/**
 * Regex callback for wp_kses_decode_entities()
 *
 * @param array $match preg match
 * @return string
 */",
 "/**
 * Regex callback for wp_kses_decode_entities()
 *
 * @param array $match preg match
 * @return string
 */",
 "/**
 * Sanitize content with allowed HTML Kses rules.
 *
 * @since 1.0.0
 * @uses $allowedtags
 *
 * @param string $data Content to filter, expected to be escaped with slashes
 * @return string Filtered content
 */",
 "/**
 * Sanitize content with allowed HTML Kses rules.
 *
 * @since 2.9.0
 * @uses $allowedtags
 *
 * @param string $data Content to filter, expected to not be escaped
 * @return string Filtered content
 */",
 "/**
 * Sanitize content for allowed HTML tags for post content.
 *
 * Post content refers to the page contents of the \'post\' type and not $_POST
 * data from forms.
 *
 * @since 2.0.0
 * @uses $allowedposttags
 *
 * @param string $data Post content to filter, expected to be escaped with slashes
 * @return string Filtered post content with allowed HTML tags and attributes intact.
 */",
 "/**
 * Sanitize content for allowed HTML tags for post content.
 *
 * Post content refers to the page contents of the \'post\' type and not $_POST
 * data from forms.
 *
 * @since 2.9.0
 * @uses $allowedposttags
 *
 * @param string $data Post content to filter
 * @return string Filtered post content with allowed HTML tags and attributes intact.
 */",
 "/**
 * Strips all of the HTML in the content.
 *
 * @since 2.1.0
 *
 * @param string $data Content to strip all HTML from
 * @return string Filtered content without any HTML
 */",
 "/**
 * Adds all Kses input form content filters.
 *
 * All hooks have default priority. The wp_filter_kses() function is added to
 * the \'pre_comment_content\' and \'title_save_pre\' hooks.
 *
 * The wp_filter_post_kses() function is added to the \'content_save_pre\',
 * \'excerpt_save_pre\', and \'content_filtered_save_pre\' hooks.
 *
 * @since 2.0.0
 * @uses add_filter() See description for what functions are added to what hooks.
 */",
 "/**
 * Removes all Kses input form content filters.
 *
 * A quick procedural method to removing all of the filters that kses uses for
 * content in WordPress Loop.
 *
 * Does not remove the kses_init() function from \'init\' hook (priority is
 * default). Also does not remove kses_init() function from \'set_current_user\'
 * hook (priority is also default).
 *
 * @since 2.0.6
 */",
 "/**
 * Sets up most of the Kses filters for input form content.
 *
 * If you remove the kses_init() function from \'init\' hook and
 * \'set_current_user\' (priority is default), then none of the Kses filter hooks
 * will be added.
 *
 * First removes all of the Kses filters in case the current user does not need
 * to have Kses filter the content. If the user does not have unfiltered_html
 * capability, then Kses filters are added.
 *
 * @uses kses_remove_filters() Removes the Kses filters
 * @uses kses_init_filters() Adds the Kses filters back if the user
 *		does not have unfiltered HTML capability.
 * @since 2.0.0
 */",
 "/**
 * Inline CSS filter
 *
 * @since 2.8.1
 */",
 "/**
     * Divides the Largest Common Subsequence (LCS) of the sequences (XOFF,
     * XLIM) and (YOFF, YLIM) into NCHUNKS approximately equally sized
     * segments.
     *
     * Returns (LCS, PTS).  LCS is the length of the LCS. PTS is an array of
     * NCHUNKS+1 (X, Y) indexes giving the diving points between sub
     * sequences.  The first sub-sequence is contained in (X0, X1), (Y0, Y1),
     * the second in (X1, X2), (Y1, Y2) and so on.  Note that (X0, Y0) ==
     * (XOFF, YOFF) and (X[NCHUNKS], Y[NCHUNKS]) == (XLIM, YLIM).
     *
     * This function assumes that the first lines of the specified portions of
     * the two files do not match, and likewise that the last lines do not
     * match.  The caller must trim matching lines from the beginning and end
     * of the portions it is going to specify.
     */",
 "/**
     * Finds LCS of two sequences.
     *
     * The results are recorded in the vectors $this->{x,y}changed[], by
     * storing a 1 in the element for each line that is an insertion or
     * deletion (ie. is not in the LCS).
     *
     * The subsequence of file 0 is (XOFF, XLIM) and likewise for file 1.
     *
     * Note that XLIM, YLIM are exclusive bounds.  All line numbers are
     * origin-0 and discarded lines are not counted.
     */",
 "/**
     * Adjusts inserts/deletes of identical lines to join changes as much as
     * possible.
     *
     * We do something when a run of changed lines include a line at one end
     * and has an excluded, identical line at the other.  We are free to
     * choose which identical line is included.  `compareseq\' usually chooses
     * the one at the beginning, but usually it is cleaner to consider the
     * following identical line to be the \"change\".
     *
     * This is extracted verbatim from analyze.c (GNU diffutils-2.7).
     */",
 "/**
 * Class used internally by Text_Diff to actually compute the diffs.
 *
 * This class is implemented using native PHP code.
 *
 * The algorithm used here is mostly lifted from the perl module
 * Algorithm::Diff (version 1.06) by Ned Konz, which is available at:
 * http://www.perl.com/CPAN/authors/id/N/NE/NEDKONZ/Algorithm-Diff-1.06.zip
 *
 * More ideas are taken from: http://www.ics.uci.edu/~eppstein/161/960229.html
 *
 * Some ideas (and a bit of code) are taken from analyze.c, of GNU
 * diffutils-2.7, which can be found at:
 * ftp://gnudist.gnu.org/pub/gnu/diffutils/diffutils-2.7.tar.gz
 *
 * Some ideas (subdivision by NCHUNKS > 2, and some optimizations) are from
 * Geoffrey T. Dairiki <dairiki@dairiki.org>. The original PHP version of this
 * code was written by him, and is used/adapted with his permission.
 *
 * Copyright 2004-2010 The Horde Project (http://www.horde.org/)
 *
 * See the enclosed file COPYING for license information (LGPL). If you did
 * not receive this file, see http://opensource.org/licenses/lgpl-license.php.
 *
 * @author  Geoffrey T. Dairiki <dairiki@dairiki.org>
 * @package Text_Diff
 */",
 "/**
	 * Constructor - Call parent constructor with params array.
	 *
	 * This will set class properties based on the key value pairs in the array.
	 *
	 * @since 2.6.0
	 *
	 * @param array $params
	 */",
 "/**
	 * @ignore
	 *
	 * @param string $header
	 * @return string
	 */",
 "/**
	 * @ignore
	 *
	 * @param array $lines
	 * @param string $prefix
	 */",
 "/**
	 * @ignore
	 *
	 * @param string $line HTML-escape the value.
	 * @return string
	 */",
 "/**
	 * @ignore
	 *
	 * @param string $line HTML-escape the value.
	 * @return string
	 */",
 "/**
	 * @ignore
	 *
	 * @param string $line HTML-escape the value.
	 * @return string
	 */",
 "/**
	 * @ignore
	 *
	 * @return string
	 */",
 "/**
	 * @ignore
	 * @access private
	 *
	 * @param array $lines
	 * @param bool $encode
	 * @return string
	 */",
 "/**
	 * @ignore
	 * @access private
	 *
	 * @param array $lines
	 * @param bool $encode
	 * @return string
	 */",
 "/**
	 * @ignore
	 * @access private
	 *
	 * @param array $lines
	 * @param bool $encode
	 * @return string
	 */",
 "/**
	 * Process changed lines to do word-by-word diffs for extra highlighting.
	 *
	 * (TRAC style) sometimes these lines can actually be deleted or added rows.
	 * We do additional processing to figure that out
	 *
	 * @access private
	 * @since 2.6.0
	 *
	 * @param array $orig
	 * @param array $final
	 * @return string
	 */",
 "/**
	 * Takes changed blocks and matches which rows in orig turned into which rows in final.
	 *
	 * Returns
	 *	*_matches ( which rows match with which )
	 *	*_rows ( order of rows in each column interleaved with blank rows as
	 *		necessary )
	 *
	 * @since 2.6.0
	 *
	 * @param unknown_type $orig
	 * @param unknown_type $final
	 * @return unknown
	 */",
 "/**
	 * Computes a number that is intended to reflect the \"distance\" between two strings.
	 *
	 * @since 2.6.0
	 *
	 * @param string $string1
	 * @param string $string2
	 * @return int
	 */",
 "/**
	 * @ignore
	 * @since 2.6.0
	 *
	 * @param int $a
	 * @param int $b
	 * @return int
	 */",
 "/**
 * Table renderer to display the diff lines.
 *
 * @since 2.6.0
 * @uses Text_Diff_Renderer Extends
 */",
 "/**
	 * @ignore
	 * @since 2.6.0
	 *
	 * @param string $string
	 * @param string $newlineEscape
	 * @return string
	 */",
 "/**
 * Better word splitting than the PEAR package provides.
 *
 * @since 2.6.0
 * @uses Text_Diff_Renderer_inline Extends
 */",
 "/**
	 * Spellchecks an array of words.
	 *
	 * @param {String} $lang Language code like sv or en.
	 * @param {Array} $words Array of words to spellcheck.
	 * @return {Array} Array of misspelled words.
	 */",
 "/**
	 * Returns suggestions of for a specific word.
	 *
	 * @param {String} $lang Language code like sv or en.
	 * @param {String} $word Specific word to get suggestions for.
	 * @return {Array} Array of suggestions for the specified word.
	 */",
 "/**
	 * Opens a link for pspell.
	 */",
 "/**
 * $Id: editor_plugin_src.js 201 2007-02-12 15:56:56Z spocke $
 *
 * @package MCManager.includes
 * @author Moxiecode
 * @copyright Copyright ? 2004-2007, Moxiecode Systems AB, All rights reserved.
 */",
 "/**
 * Check WordPress version against the newest version.
 *
 * The WordPress version, PHP version, and Locale is sent. Checks against the
 * WordPress server at api.wordpress.org server. Will only check if WordPress
 * isn\'t installing.
 *
 * @package WordPress
 * @since 2.3.0
 * @uses $wp_version Used to check against the newest WordPress version.
 *
 * @return mixed Returns null if update is unsupported. Returns false if check is too soon.
 */",
 "/**
 * Check plugin versions against the latest versions hosted on WordPress.org.
 *
 * The WordPress version, PHP version, and Locale is sent along with a list of
 * all plugins installed. Checks against the WordPress server at
 * api.wordpress.org. Will only check if WordPress isn\'t installing.
 *
 * @package WordPress
 * @since 2.3.0
 * @uses $wp_version Used to notify the WordPress version.
 *
 * @return mixed Returns null if update is unsupported. Returns false if check is too soon.
 */",
 "/**
 * Check theme versions against the latest versions hosted on WordPress.org.
 *
 * A list of all themes installed in sent to WP. Checks against the
 * WordPress server at api.wordpress.org. Will only check if WordPress isn\'t
 * installing.
 *
 * @package WordPress
 * @since 2.7.0
 * @uses $wp_version Used to notify the WordPress version.
 *
 * @return mixed Returns null if update is unsupported. Returns false if check is too soon.
 */",
 "/**
 * Check the last time plugins were run before checking plugin versions.
 *
 * This might have been backported to WordPress 2.6.1 for performance reasons.
 * This is used for the wp-admin to check only so often instead of every page
 * load.
 *
 * @since 2.7.0
 * @access private
 */",
 "/**
 * Check themes versions only after a duration of time.
 *
 * This is for performance reasons to make sure that on the theme version
 * checker is not run on every page load.
 *
 * @since 2.7.0
 * @access private
 */",
 "/**
 * Schedule core, theme, and plugin update checks.
 *
 * @since 3.1.0
 */",
 "/**
	 * Grab the IDs of all the image attachments in a gallery so we can get the URL of the next adjacent image in a gallery,
	 * or the first image (if we\'re looking at the last image in a gallery), or, in a gallery of one, just the link to that image file
	 */",
 "/**
 * Optional SSL preference that can be turned on by hooking to the \'personal_options\' action.
 *
 * @since 2.7.0
 *
 * @param object $user User data object
 */",
 "/**
	 * Class Constructor
	 *
	 * @return void
	 */",
 "/**
	 * Returns array with imported permalinks from WordPress database
	 *
	 * @param string $bid
	 * @return array
	 */",
 "/**
	 * Return count of imported permalinks from WordPress database
	 *
	 * @param string $bid
	 * @return int
	 */",
 "/**
	 * Set array with imported comments from WordPress database
	 *
	 * @param string $bid
	 * @return array
	 */",
 "/**
	 * Sort by strlen, longest string first
	 *
	 * @param string $a
	 * @param string $b
	 * @return int
	 */",
 "/**
	 * GET URL
	 *
	 * @param string $url
	 * @param string $username
	 * @param string $password
	 * @param bool $head
	 * @return array
	 */",
 "/**
	 * Bump up the request timeout for http requests
	 *
	 * @param int $val
	 * @return int
	 */",
 "/**
	 * Check if user has exceeded disk quota
	 *
	 * @return bool
	 */",
 "/**
	 * Replace newlines, tabs, and multiple spaces with a single space
	 *
	 * @param string $string
	 * @return string
	 */",
 "/**
	 * Reset global variables that grow out of control during imports
	 *
	 * @return void
	 */",
 "/**
 * WP_Importer base class
 */",
 "/**
 * Returns value of command line params.
 * Exits when a required param is not set.
 *
 * @param string $param
 * @param bool $required
 * @return mixed
 */",
 "/**
	 * Spellchecks an array of words.
	 *
	 * @param String $lang Selected language code (like en_US or de_DE). Shortcodes like \"en\" and \"de\" work with enchant >= 1.4.1
	 * @param Array $words Array of words to check.
	 * @return Array of misspelled words.
	 */",
 "/**
	 * Returns suggestions for a specific word.
	 *
	 * @param String $lang Selected language code (like en_US or de_DE). Shortcodes like \"en\" and \"de\" work with enchant >= 1.4.1
	 * @param String $word Specific word to get suggestions for.
	 * @return Array of suggestions for the specified word.
	 */",
 "/**
 * $Id: editor_plugin_src.js 201 2007-02-12 15:56:56Z spocke $
 *
 * This class was contributed by Michel Weimerskirch.
 *
 * @package MCManager.includes
 * @author Moxiecode
 * @copyright Copyright ? 2004-2007, Moxiecode Systems AB, All rights reserved.
 */",
 "/**
	 * @param array $args associative array, support following keys:
	 * 	- singular (string) -- the string to translate, if omitted and empty entry will be created
	 * 	- plural (string) -- the plural form of the string, setting this will set {@link $is_plural} to true
	 * 	- translations (array) -- translations of the string and possibly -- its plural forms
	 * 	- context (string) -- a string differentiating two equal strings used in different contexts
	 * 	- translator_comments (string) -- comments left by translators
	 * 	- extracted_comments (string) -- comments left by developers
	 * 	- references (array) -- places in the code this strings is used, in relative_to_root_path/file.php:linenum form
	 * 	- flags (array) -- flags like php-format
	 */",
 "/**
	 * Generates a unique key for this entry
	 *
	 * @return string|bool the key or false if the entry is empty
	 */",
 "/**
 * Translation_Entry class encapsulates a translatable string
 */",
 "/**
 * Press It form handler.
 *
 * @package WordPress
 * @subpackage Press_This
 * @since 2.6.0
 *
 * @return int Post ID
 */",
 "/**
		 * Retrieve all image URLs from given URI.
		 *
		 * @package WordPress
		 * @subpackage Press_This
		 * @since 2.6.0
		 *
		 * @param string $uri
		 * @return string
		 */",
 "/**
 * Retrieve path to a template
 *
 * Used to quickly retrieve the path of a template without including the file
 * extension. It will also check the parent theme, if the file exists, with
 * the use of {@link locate_template()}. Allows for more generic template location
 * without the use of the other get_*_template() functions.
 *
 * @since 1.5.0
 *
 * @param string $type Filename without extension.
 * @param array $templates An optional list of template candidates
 * @return string Full path to file.
 */",
 "/**
 * Retrieve path of index template in current or parent template.
 *
 * @since 3.0.0
 *
 * @return string
 */",
 "/**
 * Retrieve path of 404 template in current or parent template.
 *
 * @since 1.5.0
 *
 * @return string
 */",
 "/**
 * Retrieve path of archive template in current or parent template.
 *
 * @since 1.5.0
 *
 * @return string
 */",
 "/**
 * Retrieve path of author template in current or parent template.
 *
 * @since 1.5.0
 *
 * @return string
 */",
 "/**
 * Retrieve path of category template in current or parent template.
 *
 * Works by first retrieving the current slug for example \'category-default.php\' and then
 * trying category ID, for example \'category-1.php\' and will finally fallback to category.php
 * template, if those files don\'t exist.
 *
 * @since 1.5.0
 * @uses apply_filters() Calls \'category_template\' on file path of category template.
 *
 * @return string
 */",
 "/**
 * Retrieve path of tag template in current or parent template.
 *
 * Works by first retrieving the current tag name, for example \'tag-wordpress.php\' and then
 * trying tag ID, for example \'tag-1.php\' and will finally fallback to tag.php
 * template, if those files don\'t exist.
 *
 * @since 2.3.0
 * @uses apply_filters() Calls \'tag_template\' on file path of tag template.
 *
 * @return string
 */",
 "/**
 * Retrieve path of taxonomy template in current or parent template.
 *
 * Retrieves the taxonomy and term, if term is available. The template is
 * prepended with \'taxonomy-\' and followed by both the taxonomy string and
 * the taxonomy string followed by a dash and then followed by the term.
 *
 * The taxonomy and term template is checked and used first, if it exists.
 * Second, just the taxonomy template is checked, and then finally, taxonomy.php
 * template is used. If none of the files exist, then it will fall back on to
 * index.php.
 *
 * @since 2.5.0
 * @uses apply_filters() Calls \'taxonomy_template\' filter on found path.
 *
 * @return string
 */",
 "/**
 * Retrieve path of date template in current or parent template.
 *
 * @since 1.5.0
 *
 * @return string
 */",
 "/**
 * Retrieve path of home template in current or parent template.
 *
 * This is the template used for the page containing the blog posts
 *
 * Attempts to locate \'home.php\' first before falling back to \'index.php\'.
 *
 * @since 1.5.0
 * @uses apply_filters() Calls \'home_template\' on file path of home template.
 *
 * @return string
 */",
 "/**
 * Retrieve path of front-page template in current or parent template.
 *
 * Looks for \'front-page.php\'.
 *
 * @since 3.0.0
 * @uses apply_filters() Calls \'front_page_template\' on file path of template.
 *
 * @return string
 */",
 "/**
 * Retrieve path of page template in current or parent template.
 *
 * Will first look for the specifically assigned page template
 * The will search for \'page-{slug}.php\' followed by \'page-id.php\'
 * and finally \'page.php\'
 *
 * @since 1.5.0
 *
 * @return string
 */",
 "/**
 * Retrieve path of paged template in current or parent template.
 *
 * @since 1.5.0
 *
 * @return string
 */",
 "/**
 * Retrieve path of search template in current or parent template.
 *
 * @since 1.5.0
 *
 * @return string
 */",
 "/**
 * Retrieve path of single template in current or parent template.
 *
 * @since 1.5.0
 *
 * @return string
 */",
 "/**
 * Retrieve path of attachment template in current or parent template.
 *
 * The attachment path first checks if the first part of the mime type exists.
 * The second check is for the second part of the mime type. The last check is
 * for both types separated by an underscore. If neither are found then the file
 * \'attachment.php\' is checked and returned.
 *
 * Some examples for the \'text/plain\' mime type are \'text.php\', \'plain.php\', and
 * finally \'text_plain.php\'.
 *
 * @since 2.0.0
 *
 * @return string
 */",
 "/**
 * Retrieve path of comment popup template in current or parent template.
 *
 * Checks for comment popup template in current template, if it exists or in the
 * parent template.
 *
 * @since 1.5.0
 * @uses apply_filters() Calls \'comments_popup_template\' filter on path.
 *
 * @return string
 */",
 "/**
 * Retrieve the name of the highest priority template file that exists.
 *
 * Searches in the STYLESHEETPATH before TEMPLATEPATH so that themes which
 * inherit from a parent theme can just overload one file.
 *
 * @since 2.7.0
 *
 * @param string|array $template_names Template file(s) to search for, in order.
 * @param bool $load If true the template file will be loaded if it is found.
 * @param bool $require_once Whether to require_once or require. Default true. Has no effect if $load is false.
 * @return string The template filename if one is located.
 */",
 "/**
 * Require the template file with WordPress environment.
 *
 * The globals are set up for the template file to ensure that the WordPress
 * environment is available from within the function. The query variables are
 * also available.
 *
 * @since 1.5.0
 *
 * @param string $_template_file Path to template file.
 * @param bool $require_once Whether to require_once or require. Default true.
 */",
 "/**
 * Redirect to previous page.
 *
 * @param int $post_id Optional. Post ID.
 */",
 "/**
	 * Wrap given string in XML CDATA tag.
	 *
	 * @since 2.1.0
	 *
	 * @param string $str String to wrap in XML CDATA tag.
	 * @return string
	 */",
 "/**
	 * Return the URL of the site
	 *
	 * @since 2.5.0
	 *
	 * @return string Site URL.
	 */",
 "/**
	 * Output a cat_name XML tag from a given category object
	 *
	 * @since 2.1.0
	 *
	 * @param object $category Category Object
	 */",
 "/**
	 * Output a category_description XML tag from a given category object
	 *
	 * @since 2.1.0
	 *
	 * @param object $category Category Object
	 */",
 "/**
	 * Output a tag_name XML tag from a given tag object
	 *
	 * @since 2.3.0
	 *
	 * @param object $tag Tag Object
	 */",
 "/**
	 * Output a tag_description XML tag from a given tag object
	 *
	 * @since 2.3.0
	 *
	 * @param object $tag Tag Object
	 */",
 "/**
	 * Output a term_name XML tag from a given term object
	 *
	 * @since 2.9.0
	 *
	 * @param object $term Term Object
	 */",
 "/**
	 * Output a term_description XML tag from a given term object
	 *
	 * @since 2.9.0
	 *
	 * @param object $term Term Object
	 */",
 "/**
	 * Output list of authors with posts
	 *
	 * @since 3.1.0
	 */",
 "/**
	 * Ouput all navigation menu terms
	 *
	 * @since 3.1.0
	 */",
 "/**
	 * Output list of taxonomy terms, in XML tag format, associated with a post
	 *
	 * @since 2.3.0
	 */",
 "/**
 * Generates the WXR export file for download
 *
 * @since 2.1.0
 *
 * @param array $args Filters defining what should be included in the export
 */",
 "/**
 * Upload new media Administration Screen.
 *
 * @package WordPress
 * @subpackage Administration
 */",
 "/**
 * Parse the plugin contents to retrieve plugin\'s metadata.
 *
 * The metadata of the plugin\'s data searches for the following in the plugin\'s
 * header. All plugin data must be on its own line. For plugin description, it
 * must not have any newlines or only parts of the description will be displayed
 * and the same goes for the plugin data. The below is formatted for printing.
 *
 * <code>
 * /*
 * Plugin Name: Name of Plugin
 * Plugin URI: Link to plugin information
 * Description: Plugin Description
 * Author: Plugin author\'s name
 * Author URI: Link to the author\'s web site
 * Version: Must be set in the plugin for WordPress 2.3+
 * Text Domain: Optional. Unique identifier, should be same as the one used in
 *		plugin_text_domain()
 * Domain Path: Optional. Only useful if the translations are located in a
 *		folder above the plugin\'s base path. For example, if .mo files are
 *		located in the locale folder then Domain Path will be \"/locale/\" and
 *		must have the first slash. Defaults to the base folder the plugin is
 *		located in.
 * Network: Optional. Specify \"Network: true\" to require that a plugin is activated
 *		across all sites in an installation. This will prevent a plugin from being
 *		activated on a single site when Multisite is enabled.
 *  * / # Remove the space to close comment
 * </code>
 *
 * Plugin data returned array contains the following:
 *		\'Name\' - Name of the plugin, must be unique.
 *		\'Title\' - Title of the plugin and the link to the plugin\'s web site.
 *		\'Description\' - Description of what the plugin does and/or notes
 *		from the author.
 *		\'Author\' - The author\'s name
 *		\'AuthorURI\' - The authors web site address.
 *		\'Version\' - The plugin version number.
 *		\'PluginURI\' - Plugin web site address.
 *		\'TextDomain\' - Plugin\'s text domain for localization.
 *		\'DomainPath\' - Plugin\'s relative directory path to .mo files.
 *		\'Network\' - Boolean. Whether the plugin can only be activated network wide.
 *
 * Some users have issues with opening large files and manipulating the contents
 * for want is usually the first 1kiB or 2kiB. This function stops pulling in
 * the plugin contents when it has all of the required plugin data.
 *
 * The first 8kiB of the file will be pulled in and if the plugin data is not
 * within that first 8kiB, then the plugin author should correct their plugin
 * and move the plugin data headers to the top.
 *
 * The plugin file is assumed to have permissions to allow for scripts to read
 * the file. This is not checked however and the file is only opened for
 * reading.
 *
 * @link http://trac.wordpress.org/ticket/5651 Previous Optimizations.
 * @link http://trac.wordpress.org/ticket/7372 Further and better Optimizations.
 * @since 1.5.0
 *
 * @param string $plugin_file Path to the plugin file
 * @param bool $markup Optional. If the returned data should have HTML markup applied. Defaults to true.
 * @param bool $translate Optional. If the returned data should be translated. Defaults to true.
 * @return array See above for description.
 */",
 "/**
 * Sanitizes plugin data, optionally adds markup, optionally translates.
 *
 * @since 2.7.0
 * @access private
 * @see get_plugin_data()
 */",
 "/**
 * Get a list of a plugin\'s files.
 *
 * @since 2.8.0
 *
 * @param string $plugin Plugin ID
 * @return array List of files relative to the plugin root.
 */",
 "/**
 * Check the plugins directory and retrieve all plugin files with plugin data.
 *
 * WordPress only supports plugin files in the base plugins directory
 * (wp-content/plugins) and in one directory above the plugins directory
 * (wp-content/plugins/my-plugin). The file it looks for has the plugin data and
 * must be found in those two locations. It is recommended that do keep your
 * plugin files in directories.
 *
 * The file with the plugin data is the file that will be included and therefore
 * needs to have the main execution for the plugin. This does not mean
 * everything must be contained in the file and it is recommended that the file
 * be split for maintainability. Keep everything in one file for extreme
 * optimization purposes.
 *
 * @since 1.5.0
 *
 * @param string $plugin_folder Optional. Relative path to single plugin folder.
 * @return array Key is the plugin file path and the value is an array of the plugin data.
 */",
 "/**
 * Check the mu-plugins directory and retrieve all mu-plugin files with any plugin data.
 *
 * WordPress only includes mu-plugin files in the base mu-plugins directory (wp-content/mu-plugins).
 *
 * @since 3.0.0
 * @return array Key is the mu-plugin file path and the value is an array of the mu-plugin data.
 */",
 "/**
 * Callback to sort array by a \'Name\' key.
 *
 * @since 3.1.0
 * @access private
 */",
 "/**
 * Check the wp-content directory and retrieve all drop-ins with any plugin data.
 *
 * @since 3.0.0
 * @return array Key is the file path and the value is an array of the plugin data.
 */",
 "/**
 * Returns drop-ins that WordPress uses.
 *
 * Includes Multisite drop-ins only when is_multisite()
 *
 * @since 3.0.0
 * @return array Key is file name. The value is an array, with the first value the
 *	purpose of the drop-in and the second value the name of the constant that must be
 *	true for the drop-in to be used, or true if no constant is required.
 */",
 "/**
 * Check whether the plugin is active by checking the active_plugins list.
 *
 * @since 2.5.0
 *
 * @param string $plugin Base plugin path from plugins directory.
 * @return bool True, if in the active plugins list. False, not in the list.
 */",
 "/**
 * Check whether the plugin is inactive.
 *
 * Reverse of is_plugin_active(). Used as a callback.
 *
 * @since 3.1.0
 * @see is_plugin_active()
 *
 * @param string $plugin Base plugin path from plugins directory.
 * @return bool True if inactive. False if active.
 */",
 "/**
 * Check whether the plugin is active for the entire network.
 *
 * @since 3.0.0
 *
 * @param string $plugin Base plugin path from plugins directory.
 * @return bool True, if active for the network, otherwise false.
 */",
 "/**
 * Checks for \"Network: true\" in the plugin header to see if this should
 * be activated only as a network wide plugin. The plugin would also work
 * when Multisite is not enabled.
 *
 * Checks for \"Site Wide Only: true\" for backwards compatibility.
 *
 * @since 3.0.0
 *
 * @param string $plugin Plugin to check
 * @return bool True if plugin is network only, false otherwise.
 */",
 "/**
 * Attempts activation of plugin in a \"sandbox\" and redirects on success.
 *
 * A plugin that is already activated will not attempt to be activated again.
 *
 * The way it works is by setting the redirection to the error before trying to
 * include the plugin file. If the plugin fails, then the redirection will not
 * be overwritten with the success message. Also, the options will not be
 * updated and the activation hook will not be called on plugin error.
 *
 * It should be noted that in no way the below code will actually prevent errors
 * within the file. The code should not be used elsewhere to replicate the
 * \"sandbox\", which uses redirection to work.
 * {@source 13 1}
 *
 * If any errors are found or text is outputted, then it will be captured to
 * ensure that the success redirection will update the error redirection.
 *
 * @since 2.5.0
 *
 * @param string $plugin Plugin path to main plugin file with plugin data.
 * @param string $redirect Optional. URL to redirect to.
 * @param bool $network_wide Whether to enable the plugin for all sites in the
 *   network or just the current site. Multisite only. Default is false.
 * @param bool $silent Prevent calling activation hooks. Optional, default is false.
 * @return WP_Error|null WP_Error on invalid file or null on success.
 */",
 "/**
 * Deactivate a single plugin or multiple plugins.
 *
 * The deactivation hook is disabled by the plugin upgrader by using the $silent
 * parameter.
 *
 * @since 2.5.0
 *
 * @param string|array $plugins Single plugin or list of plugins to deactivate.
 * @param mixed $network_wide Whether to deactivate the plugin for all sites in the network.
 * 	A value of null (the default) will deactivate plugins for both the site and the network.
 * @param bool $silent Prevent calling deactivation hooks. Default is false.
 */",
 "/**
 * Activate multiple plugins.
 *
 * When WP_Error is returned, it does not mean that one of the plugins had
 * errors. It means that one or more of the plugins file path was invalid.
 *
 * The execution will be halted as soon as one of the plugins has an error.
 *
 * @since 2.6.0
 *
 * @param string|array $plugins
 * @param string $redirect Redirect to page after successful activation.
 * @param bool $network_wide Whether to enable the plugin for all sites in the network.
 * @param bool $silent Prevent calling activation hooks. Default is false.
 * @return bool|WP_Error True when finished or WP_Error if there were errors during a plugin activation.
 */",
 "/**
 * Remove directory and files of a plugin for a single or list of plugin(s).
 *
 * If the plugins parameter list is empty, false will be returned. True when
 * completed.
 *
 * @since 2.6.0
 *
 * @param array $plugins List of plugin
 * @param string $redirect Redirect to page when complete.
 * @return mixed
 */",
 "/**
 * Validate active plugins
 *
 * Validate all active plugins, deactivates invalid and
 * returns an array of deactivated ones.
 *
 * @since 2.5.0
 * @return array invalid plugins, plugin as key, error as value
 */",
 "/**
 * Validate the plugin path.
 *
 * Checks that the file exists and {@link validate_file() is valid file}.
 *
 * @since 2.5.0
 *
 * @param string $plugin Plugin Path
 * @return WP_Error|int 0 on success, WP_Error on failure.
 */",
 "/**
 * Whether the plugin can be uninstalled.
 *
 * @since 2.7.0
 *
 * @param string $plugin Plugin path to check.
 * @return bool Whether plugin can be uninstalled.
 */",
 "/**
 * Uninstall a single plugin.
 *
 * Calls the uninstall hook, if it is available.
 *
 * @since 2.7.0
 *
 * @param string $plugin Relative plugin path from Plugin Directory.
 */",
 "/**
 * Add a top level menu page
 *
 * This function takes a capability which will be used to determine whether
 * or not a page is included in the menu.
 *
 * The function which is hooked in to handle the output of the page must check
 * that the user has the required capability as well.
 *
 * @param string $page_title The text to be displayed in the title tags of the page when the menu is selected
 * @param string $menu_title The text to be used for the menu
 * @param string $capability The capability required for this menu to be displayed to the user.
 * @param string $menu_slug The slug name to refer to this menu by (should be unique for this menu)
 * @param callback $function The function to be called to output the content for this page.
 * @param string $icon_url The url to the icon to be used for this menu
 * @param int $position The position in the menu order this one should appear
 *
 * @return string The resulting page\'s hook_suffix
 */",
 "/**
 * Add a top level menu page in the \'objects\' section
 *
 * This function takes a capability which will be used to determine whether
 * or not a page is included in the menu.
 *
 * The function which is hooked in to handle the output of the page must check
 * that the user has the required capability as well.
 *
 * @param string $page_title The text to be displayed in the title tags of the page when the menu is selected
 * @param string $menu_title The text to be used for the menu
 * @param string $capability The capability required for this menu to be displayed to the user.
 * @param string $menu_slug The slug name to refer to this menu by (should be unique for this menu)
 * @param callback $function The function to be called to output the content for this page.
 * @param string $icon_url The url to the icon to be used for this menu
 *
 * @return string The resulting page\'s hook_suffix
 */",
 "/**
 * Add a top level menu page in the \'utility\' section
 *
 * This function takes a capability which will be used to determine whether
 * or not a page is included in the menu.
 *
 * The function which is hooked in to handle the output of the page must check
 * that the user has the required capability as well.
 *
 * @param string $page_title The text to be displayed in the title tags of the page when the menu is selected
 * @param string $menu_title The text to be used for the menu
 * @param string $capability The capability required for this menu to be displayed to the user.
 * @param string $menu_slug The slug name to refer to this menu by (should be unique for this menu)
 * @param callback $function The function to be called to output the content for this page.
 * @param string $icon_url The url to the icon to be used for this menu
 *
 * @return string The resulting page\'s hook_suffix
 */",
 "/**
 * Add a sub menu page
 *
 * This function takes a capability which will be used to determine whether
 * or not a page is included in the menu.
 *
 * The function which is hooked in to handle the output of the page must check
 * that the user has the required capability as well.
 *
 * @param string $parent_slug The slug name for the parent menu (or the file name of a standard WordPress admin page)
 * @param string $page_title The text to be displayed in the title tags of the page when the menu is selected
 * @param string $menu_title The text to be used for the menu
 * @param string $capability The capability required for this menu to be displayed to the user.
 * @param string $menu_slug The slug name to refer to this menu by (should be unique for this menu)
 * @param callback $function The function to be called to output the content for this page.
 *
 * @return string|bool The resulting page\'s hook_suffix, or false if the user does not have the capability required.
 */",
 "/**
 * Add sub menu page to the tools main menu.
 *
 * This function takes a capability which will be used to determine whether
 * or not a page is included in the menu.
 *
 * The function which is hooked in to handle the output of the page must check
 * that the user has the required capability as well.
 *
 * @param string $page_title The text to be displayed in the title tags of the page when the menu is selected
 * @param string $menu_title The text to be used for the menu
 * @param string $capability The capability required for this menu to be displayed to the user.
 * @param string $menu_slug The slug name to refer to this menu by (should be unique for this menu)
 * @param callback $function The function to be called to output the content for this page.
 *
 * @return string|bool The resulting page\'s hook_suffix, or false if the user does not have the capability required.
 */",
 "/**
 * Add sub menu page to the options main menu.
 *
 * This function takes a capability which will be used to determine whether
 * or not a page is included in the menu.
 *
 * The function which is hooked in to handle the output of the page must check
 * that the user has the required capability as well.
 *
 * @param string $page_title The text to be displayed in the title tags of the page when the menu is selected
 * @param string $menu_title The text to be used for the menu
 * @param string $capability The capability required for this menu to be displayed to the user.
 * @param string $menu_slug The slug name to refer to this menu by (should be unique for this menu)
 * @param callback $function The function to be called to output the content for this page.
 *
 * @return string|bool The resulting page\'s hook_suffix, or false if the user does not have the capability required.
 */",
 "/**
 * Add sub menu page to the themes main menu.
 *
 * This function takes a capability which will be used to determine whether
 * or not a page is included in the menu.
 *
 * The function which is hooked in to handle the output of the page must check
 * that the user has the required capability as well.
 *
 * @param string $page_title The text to be displayed in the title tags of the page when the menu is selected
 * @param string $menu_title The text to be used for the menu
 * @param string $capability The capability required for this menu to be displayed to the user.
 * @param string $menu_slug The slug name to refer to this menu by (should be unique for this menu)
 * @param callback $function The function to be called to output the content for this page.
 *
 * @return string|bool The resulting page\'s hook_suffix, or false if the user does not have the capability required.
 */",
 "/**
 * Add sub menu page to the plugins main menu.
 *
 * This function takes a capability which will be used to determine whether
 * or not a page is included in the menu.
 *
 * The function which is hooked in to handle the output of the page must check
 * that the user has the required capability as well.
 *
 * @param string $page_title The text to be displayed in the title tags of the page when the menu is selected
 * @param string $menu_title The text to be used for the menu
 * @param string $capability The capability required for this menu to be displayed to the user.
 * @param string $menu_slug The slug name to refer to this menu by (should be unique for this menu)
 * @param callback $function The function to be called to output the content for this page.
 *
 * @return string|bool The resulting page\'s hook_suffix, or false if the user does not have the capability required.
 */",
 "/**
 * Add sub menu page to the Users/Profile main menu.
 *
 * This function takes a capability which will be used to determine whether
 * or not a page is included in the menu.
 *
 * The function which is hooked in to handle the output of the page must check
 * that the user has the required capability as well.
 *
 * @param string $page_title The text to be displayed in the title tags of the page when the menu is selected
 * @param string $menu_title The text to be used for the menu
 * @param string $capability The capability required for this menu to be displayed to the user.
 * @param string $menu_slug The slug name to refer to this menu by (should be unique for this menu)
 * @param callback $function The function to be called to output the content for this page.
 *
 * @return string|bool The resulting page\'s hook_suffix, or false if the user does not have the capability required.
 */",
 "/**
 * Add sub menu page to the Dashboard main menu.
 *
 * This function takes a capability which will be used to determine whether
 * or not a page is included in the menu.
 *
 * The function which is hooked in to handle the output of the page must check
 * that the user has the required capability as well.
 *
 * @param string $page_title The text to be displayed in the title tags of the page when the menu is selected
 * @param string $menu_title The text to be used for the menu
 * @param string $capability The capability required for this menu to be displayed to the user.
 * @param string $menu_slug The slug name to refer to this menu by (should be unique for this menu)
 * @param callback $function The function to be called to output the content for this page.
 *
 * @return string|bool The resulting page\'s hook_suffix, or false if the user does not have the capability required.
 */",
 "/**
 * Add sub menu page to the posts main menu.
 *
 * This function takes a capability which will be used to determine whether
 * or not a page is included in the menu.
 *
 * The function which is hooked in to handle the output of the page must check
 * that the user has the required capability as well.
 *
 * @param string $page_title The text to be displayed in the title tags of the page when the menu is selected
 * @param string $menu_title The text to be used for the menu
 * @param string $capability The capability required for this menu to be displayed to the user.
 * @param string $menu_slug The slug name to refer to this menu by (should be unique for this menu)
 * @param callback $function The function to be called to output the content for this page.
 *
 * @return string|bool The resulting page\'s hook_suffix, or false if the user does not have the capability required.
 */",
 "/**
 * Add sub menu page to the media main menu.
 *
 * This function takes a capability which will be used to determine whether
 * or not a page is included in the menu.
 *
 * The function which is hooked in to handle the output of the page must check
 * that the user has the required capability as well.
 *
 * @param string $page_title The text to be displayed in the title tags of the page when the menu is selected
 * @param string $menu_title The text to be used for the menu
 * @param string $capability The capability required for this menu to be displayed to the user.
 * @param string $menu_slug The slug name to refer to this menu by (should be unique for this menu)
 * @param callback $function The function to be called to output the content for this page.
 *
 * @return string|bool The resulting page\'s hook_suffix, or false if the user does not have the capability required.
 */",
 "/**
 * Add sub menu page to the links main menu.
 *
 * This function takes a capability which will be used to determine whether
 * or not a page is included in the menu.
 *
 * The function which is hooked in to handle the output of the page must check
 * that the user has the required capability as well.
 *
 * @param string $page_title The text to be displayed in the title tags of the page when the menu is selected
 * @param string $menu_title The text to be used for the menu
 * @param string $capability The capability required for this menu to be displayed to the user.
 * @param string $menu_slug The slug name to refer to this menu by (should be unique for this menu)
 * @param callback $function The function to be called to output the content for this page.
 *
 * @return string|bool The resulting page\'s hook_suffix, or false if the user does not have the capability required.
 */",
 "/**
 * Add sub menu page to the pages main menu.
 *
 * This function takes a capability which will be used to determine whether
 * or not a page is included in the menu.
 *
 * The function which is hooked in to handle the output of the page must check
 * that the user has the required capability as well.
 *
 * @param string $page_title The text to be displayed in the title tags of the page when the menu is selected
 * @param string $menu_title The text to be used for the menu
 * @param string $capability The capability required for this menu to be displayed to the user.
 * @param string $menu_slug The slug name to refer to this menu by (should be unique for this menu)
 * @param callback $function The function to be called to output the content for this page.
 *
 * @return string|bool The resulting page\'s hook_suffix, or false if the user does not have the capability required.
*/",
 "/**
 * Add sub menu page to the comments main menu.
 *
 * This function takes a capability which will be used to determine whether
 * or not a page is included in the menu.
 *
 * The function which is hooked in to handle the output of the page must check
 * that the user has the required capability as well.
 *
 * @param string $page_title The text to be displayed in the title tags of the page when the menu is selected
 * @param string $menu_title The text to be used for the menu
 * @param string $capability The capability required for this menu to be displayed to the user.
 * @param string $menu_slug The slug name to refer to this menu by (should be unique for this menu)
 * @param callback $function The function to be called to output the content for this page.
 *
 * @return string|bool The resulting page\'s hook_suffix, or false if the user does not have the capability required.
*/",
 "/**
 * Remove a top level admin menu
 *
 * @since 3.1.0
 *
 * @param string $menu_slug The slug of the menu
 * @return array|bool The removed menu on success, False if not found
 */",
 "/**
 * Remove an admin submenu
 *
 * @since 3.1.0
 *
 * @param string $menu_slug The slug for the parent menu
 * @param string $submenu_slug The slug of the submenu
 * @return array|bool The removed submenu on success, False if not found
 */",
 "/**
 * Get the url to access a particular menu page based on the slug it was registered with.
 *
 * If the slug hasn\'t been registered properly no url will be returned
 *
 * @since 3.0
 *
 * @param string $menu_slug The slug name to refer to this menu by (should be unique for this menu)
 * @param bool $echo Whether or not to echo the url - default is true
 * @return string the url
 */",
 "/**
 * Register a setting and its sanitization callback
 *
 * @since 2.7.0
 *
 * @param string $option_group A settings group name. Should correspond to a whitelisted option key name.
 * 	Default whitelisted option key names include \"general,\" \"discussion,\" and \"reading,\" among others.
 * @param string $option_name The name of an option to sanitize and save.
 * @param unknown_type $sanitize_callback A callback function that sanitizes the option\'s value.
 * @return unknown
 */",
 "/**
 * Unregister a setting
 *
 * @since 2.7.0
 *
 * @param unknown_type $option_group
 * @param unknown_type $option_name
 * @param unknown_type $sanitize_callback
 * @return unknown
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.7.0
 *
 * @param unknown_type $options
 * @return unknown
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.7.0
 *
 * @param unknown_type $new_options
 * @param unknown_type $options
 * @return unknown
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.7.0
 *
 * @param unknown_type $del_options
 * @param unknown_type $options
 * @return unknown
 */",
 "/**
 * Output nonce, action, and option_page fields for a settings page.
 *
 * @since 2.7.0
 *
 * @param string $option_group A settings group name. This should match the group name used in register_setting().
 */",
 "/**
 * @since 2.1
 * @deprecated 2.1
 * @deprecated Use wp_editor().
 * @see wp_editor()
 */",
 "/**
 * Unused Admin function.
 *
 * @since 2.0
 * @deprecated 2.5
 *
 */",
 "/**
 * Calculates the new dimensions for a downsampled image.
 *
 * @since 2.0.0
 * @deprecated 3.0.0
 * @deprecated Use wp_constrain_dimensions()
 *
 * @param int $width Current width of the image
 * @param int $height Current height of the image
 * @param int $wmax Maximum wanted width
 * @param int $hmax Maximum wanted height
 * @return mixed Array(height,width) of shrunk dimensions.
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 0.71
 * @deprecated 2.6.0
 * @deprecated Use wp_category_checklist()
 * @see wp_category_checklist()
 *
 * @param unknown_type $default
 * @param unknown_type $parent
 * @param unknown_type $popular_ids
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.1.0
 * @deprecated 2.6.0
 * @deprecated Use wp_link_category_checklist()
 * @see wp_link_category_checklist()
 *
 * @param unknown_type $default
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 1.2.0
 * @deprecated 3.0.0
 * @deprecated Use wp_dropdown_categories()
 * @see wp_dropdown_categories()
 *
 * @param unknown_type $currentcat
 * @param unknown_type $currentparent
 * @param unknown_type $parent
 * @param unknown_type $level
 * @param unknown_type $categories
 * @return unknown
 */",
 "/**
 * Register a setting and its sanitization callback
 *
 * @since 2.7.0
 * @deprecated 3.0.0
 * @deprecated Use register_setting()
 * @see register_setting()
 *
 * @param string $option_group A settings group name. Should correspond to a whitelisted option key name.
 * 	Default whitelisted option key names include \"general,\" \"discussion,\" and \"reading,\" among others.
 * @param string $option_name The name of an option to sanitize and save.
 * @param unknown_type $sanitize_callback A callback function that sanitizes the option\'s value.
 * @return unknown
 */",
 "/**
 * Unregister a setting
 *
 * @since 2.7.0
 * @deprecated 3.0.0
 * @deprecated Use unregister_setting()
 * @see unregister_setting()
 *
 * @param unknown_type $option_group
 * @param unknown_type $option_name
 * @param unknown_type $sanitize_callback
 * @return unknown
 */",
 "/**
 * Determines the language to use for CodePress syntax highlighting.
 *
 * @since 2.8.0
 * @deprecated 3.0.0
 *
 * @param string $filename
**/",
 "/**
 * Adds Javascript required to make CodePress work on the theme/plugin editors.
 *
 * @since 2.8.0
 * @deprecated 3.0.0
**/",
 "/**
 * Determine whether to use CodePress.
 *
 * @since 2.8
 * @deprecated 3.0.0
**/",
 "/**
 * @deprecated 3.1.0
 *
 * @return array List of user IDs.
 */",
 "/**
 * @deprecated 3.1.0
 *
 * @param int $user_id User ID.
 * @return array|bool List of editable authors. False if no editable users.
 */",
 "/**
 * @deprecated 3.1.0
 *
 * @param int $user_id User ID.
 * @param bool $exclude_zeros Optional, default is true. Whether to exclude zeros.
 * @return unknown
 */",
 "/**
 * @deprecated 3.1.0
 */",
 "/**
	 * PHP4 Constructor - Sets up the object properties.
	 *
	 * @since 2.1.0
	 *
	 * @param string $search_term Search terms string.
	 * @param int $page Optional. Page ID.
	 * @param string $role Role name.
	 * @return WP_User_Search
	 */",
 "/**
	 * {@internal Missing Short Description}}
	 *
	 * {@internal Missing Long Description}}
	 *
	 * @since 2.1.0
	 * @access public
	 */",
 "/**
	 * {@internal Missing Short Description}}
	 *
	 * {@internal Missing Long Description}}
	 *
	 * @since 2.1.0
	 * @access public
	 */",
 "/**
	 * {@internal Missing Short Description}}
	 *
	 * {@internal Missing Long Description}}
	 *
	 * @since 2.1.0
	 * @access public
	 */",
 "/**
	 * {@internal Missing Short Description}}
	 *
	 * {@internal Missing Long Description}}
	 *
	 * @since 2.1.0
	 * @access public
	 */",
 "/**
	 * {@internal Missing Short Description}}
	 *
	 * {@internal Missing Long Description}}
	 *
	 * @since 2.1.0
	 * @access public
	 *
	 * @return unknown
	 */",
 "/**
	 * Displaying paging text.
	 *
	 * @see do_paging() Builds paging text.
	 *
	 * @since 2.1.0
	 * @access public
	 */",
 "/**
	 * Whether paging is enabled.
	 *
	 * @see do_paging() Builds paging text.
	 *
	 * @since 2.1.0
	 * @access public
	 *
	 * @return bool
	 */",
 "/**
	 * Whether there are search terms.
	 *
	 * @since 2.1.0
	 * @access public
	 *
	 * @return bool
	 */",
 "/**
 * WordPress User Search class.
 *
 * @since 2.1.0
 * @deprecated 3.1.0
 */",
 "/**
 * Retrieve editable posts from other users.
 *
 * @deprecated 3.1.0
 *
 * @param int $user_id User ID to not retrieve posts from.
 * @param string $type Optional, defaults to \'any\'. Post type to retrieve, can be \'draft\' or \'pending\'.
 * @return array List of posts from others.
 */",
 "/**
 * Retrieve drafts from other users.
 *
 * @deprecated 3.1.0
 *
 * @param int $user_id User ID.
 * @return array List of drafts from other users.
 */",
 "/**
 * Retrieve pending review posts from other users.
 *
 * @deprecated 3.1.0
 *
 * @param int $user_id User ID.
 * @return array List of posts with pending review post type from other users.
 */",
 "/**
 * Output the QuickPress dashboard widget.
 *
 * @since 3.0.0
 * @deprecated 3.2.0
 * @deprecated Use wp_dashboard_quick_press()
 * @see wp_dashboard_quick_press()
 */",
 "/**
 * @since 2.7.0
 * @deprecated 3.3
 * @deprecated Use wp_editor()
 * @see wp_editor()
 */",
 "/**
 * @deprecated 3.3.0
 * @deprecated Use wp_editor()
 * @see wp_editor()
 */",
 "/**
 * @deprecated 3.3.0
 * @deprecated Use wp_editor()
 * @see wp_editor()
 */",
 "/**
 * @deprecated 3.3.0
 * @deprecated Use wp_editor()
 * @see wp_editor()
 */",
 "/**
 * Returns the screen layout options.
 *
 * @since 2.8.0
 * @deprecated 3.3.0
 * @deprecated Use $current_screen->render_screen_layout()
 * @see WP_Screen::render_screen_layout()
 */",
 "/**
 * Returns the screen\'s per-page options.
 *
 * @since 2.8.0
 * @deprecated 3.3.0
 * @deprecated Use $current_screen->render_per_page_options()
 * @see WP_Screen::render_per_page_options()
 */",
 "/**
 * Renders the screen\'s help.
 *
 * @since 2.7.0
 * @deprecated 3.3.0
 * @deprecated Use $current_screen->render_screen_meta()
 * @see WP_Screen::render_screen_meta()
 */",
 "/**
 * Favorite actions were deprecated in version 3.2. Use the admin bar instead.
 *
 * @since 2.7.0
 * @deprecated 3.2.0
 */",
 "/**
 * Add contextual help text for a page.
 *
 * Creates an \'Overview\' help tab.
 *
 * @since 2.7.0
 * @deprecated 3.3.0
 * @deprecated Use get_current_screen()->add_help_tab()
 * @see WP_Screen
 *
 * @param string    $screen The handle for the screen to add help to. This is usually the hook name returned by the add_*_page() functions.
 * @param string    $help   The content of an \'Overview\' help tab.
 */",
 "/**
 * Get the allowed themes for the current blog.
 *
 * @since 3.0.0
 * @deprecated 3.4.0
 * @deprecated Use wp_get_themes()
 * @see wp_get_themes()
 *
 * @return array $themes Array of allowed themes.
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 1.5.0
 *
 * @return unknown
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.0.0
 *
 * @return unknown
 */",
 "/**
 * Display setup wp-config.php file header.
 *
 * @ignore
 * @since 2.3.0
 * @package WordPress
 * @subpackage Installer_WP_Config
 */",
 "/**
     * Returns the array of differences.
     *
     * @param array $from_lines lines of text from old file
     * @param array $to_lines   lines of text from new file
     *
     * @return array all changes made (array with Text_Diff_Op_* objects)
     */",
 "/**
     * Get lines from either the old or new text
     *
     * @access private
     *
     * @param array &$text_lines Either $from_lines or $to_lines
     * @param int   &$line_no    Current line number
     * @param int   $end         Optional end line, when we want to chop more
     *                           than one line.
     *
     * @return array The chopped lines
     */",
 "/**
 * Class used internally by Diff to actually compute the diffs.
 *
 * This class uses the Unix `diff` program via shell_exec to compute the
 * differences between the two input arrays.
 *
 * Copyright 2007-2010 The Horde Project (http://www.horde.org/)
 *
 * See the enclosed file COPYING for license information (LGPL). If you did
 * not receive this file, see http://opensource.org/licenses/lgpl-license.php.
 *
 * @author  Milian Wolff <mail@milianw.de>
 * @package Text_Diff
 * @since   0.3.0
 */",
 "/**
 * PemFTP base class
 *
 */",
 "/**
	 * Outputs the HTML for a single instance of the editor.
	 *
	 * @param string $content The initial content of the editor.
	 * @param string $editor_id ID for the textarea and TinyMCE and Quicktags instances (can contain only ASCII letters and numbers).
	 * @param array $settings See the _parse_settings() method for description.
	 */",
 "/**
		 * Filter \"tiny_mce_version\" is deprecated
		 *
		 * The tiny_mce_version filter is not needed since external plugins are loaded directly by TinyMCE.
		 * These plugins can be refreshed by appending query string to the URL passed to \"mce_external_plugins\" filter.
		 * If the plugin has a popup dialog, a query string can be added to the button action that opens it (in the plugin\'s code).
		 */",
 "/**
	 * Performs post queries for internal linking.
	 *
	 * @since 3.1.0
	 *
	 * @param array $args Optional. Accepts \'pagenum\' and \'s\' (search) arguments.
	 * @return array Results.
	 */",
 "/**
	 * Dialog for internal linking.
	 *
	 * @since 3.1.0
	 */",
 "/**
 * Facilitates adding of the WordPress editor as used on the Write and Edit screens.
 *
 * @package WordPress
 * @since 3.3.0
 *
 * Private, not included by default. See wp_editor() in wp-includes/general-template.php.
 */",
 "/**
 * Posts submitted via the xmlrpc interface get that title
 * @name post_default_title
 * @var string
 */",
 "/**
 * logIO() - Writes logging info to a file.
 *
 * @deprecated 3.4.0
 * @deprecated Use error_log()
 *
 * @param string $io Whether input or output
 * @param string $msg Information describing logging reason.
 */",
 "/**
	 * Constructor.
	 *
	 * @since 3.4.0
	 *
	 * @param string $id An specific ID of the section.
	 * @param array $args Section arguments.
	 */",
 "/**
	 * Check if the theme supports the section and check user capabilities.
	 *
	 * @since 3.4.0
	 *
	 * @return bool False if theme doesn\'t support the section or user doesn\'t have the capability.
	 */",
 "/**
	 * Check capabilities and render the section.
	 *
	 * @since 3.4.0
	 */",
 "/**
	 * Render the section.
	 *
	 * @since 3.4.0
	 */",
 "/**
 * Customize Section Class
 *
 * @package WordPress
 * @subpackage Customize
 * @since 3.4.0
 */",
 "/**
 * Display styles that are in the queue or part of $handles.
 *
 * @since r79
 * @uses do_action() Calls \'wp_print_styles\' hook.
 * @global object $wp_styles The WP_Styles object for printing styles.
 *
 * @param array|bool $handles Styles to be printed. An empty array prints the queue,
 *  an array with one string prints that style, and an array of strings prints those styles.
 * @return bool True on success, false on failure.
 */",
 "/**
 * Adds extra CSS.
 *
 * Works only if the stylesheet has already been added.
 * Accepts a string $data containing the CSS. If two or more CSS code blocks are
 * added to the same stylesheet $handle, they will be printed in the order
 * they were added, i.e. the latter added styles can redeclare the previous.
 *
 * @since 3.3.0
 * @see WP_Scripts::add_inline_style()
 */",
 "/**
 * Register CSS style file.
 *
 * @since r79
 * @see WP_Styles::add() For additional information.
 * @global object $wp_styles The WP_Styles object for printing styles.
 * @link http://www.w3.org/TR/CSS2/media.html#media-types List of CSS media types.
 *
 * @param string $handle Name of the stylesheet.
 * @param string|bool $src Path to the stylesheet from the root directory of WordPress. Example: \'/css/mystyle.css\'.
 * @param array $deps Array of handles of any stylesheet that this stylesheet depends on.
 *  (Stylesheets that must be loaded before this stylesheet.) Pass an empty array if there are no dependencies.
 * @param string|bool $ver String specifying the stylesheet version number. Set to null to disable.
 *  Used to ensure that the correct version is sent to the client regardless of caching.
 * @param string $media The media for which this stylesheet has been defined.
 */",
 "/**
 * Remove a registered CSS file.
 *
 * @since r79
 * @see WP_Styles::remove() For additional information.
 * @global object $wp_styles The WP_Styles object for printing styles.
 *
 * @param string $handle Name of the stylesheet.
 */",
 "/**
 * Enqueue a CSS style file.
 *
 * Registers the style if src provided (does NOT overwrite) and enqueues.
 *
 * @since r79
 * @see WP_Styles::add(), WP_Styles::enqueue()
 * @global object $wp_styles The WP_Styles object for printing styles.
 * @link http://www.w3.org/TR/CSS2/media.html#media-types List of CSS media types.
 *
 * @param string $handle Name of the stylesheet.
 * @param string|bool $src Path to the stylesheet from the root directory of WordPress. Example: \'/css/mystyle.css\'.
 * @param array $deps Array of handles (names) of any stylesheet that this stylesheet depends on.
 *  (Stylesheets that must be loaded before this stylesheet.) Pass an empty array if there are no dependencies.
 * @param string|bool $ver String specifying the stylesheet version number, if it has one. This parameter
 *  is used to ensure that the correct version is sent to the client regardless of caching, and so should be included
 *  if a version number is available and makes sense for the stylesheet.
 * @param string $media The media for which this stylesheet has been defined.
 */",
 "/**
 * Remove an enqueued style.
 *
 * @since WP 3.1
 * @see WP_Styles::dequeue() For parameter information.
 */",
 "/**
 * Check whether style has been added to WordPress Styles.
 *
 * The values for list defaults to \'queue\', which is the same as wp_enqueue_style().
 *
 * @since WP unknown; BP unknown
 * @global object $wp_styles The WP_Styles object for printing styles.
 *
 * @param string $handle Name of the stylesheet.
 * @param string $list Values are \'registered\', \'done\', \'queue\' and \'to_do\'.
 * @return bool True on success, false on failure.
 */",
 "/**
	 * Constructor. The child class should call this constructor from it\'s own constructor
	 *
	 * @param array $args An associative array with information about the current table
	 * @access protected
	 */",
 "/**
	 * Checks the current user\'s permissions
	 * @uses wp_die()
	 *
	 * @since 3.1.0
	 * @access public
	 * @abstract
	 */",
 "/**
	 * Prepares the list of items for displaying.
	 * @uses WP_List_Table::set_pagination_args()
	 *
	 * @since 3.1.0
	 * @access public
	 * @abstract
	 */",
 "/**
	 * An internal method that sets all the necessary pagination arguments
	 *
	 * @param array $args An associative array with information about the pagination
	 * @access protected
	 */",
 "/**
	 * Access the pagination args
	 *
	 * @since 3.1.0
	 * @access public
	 *
	 * @param string $key
	 * @return array
	 */",
 "/**
	 * Whether the table has items to display or not
	 *
	 * @since 3.1.0
	 * @access public
	 *
	 * @return bool
	 */",
 "/**
	 * Message to be displayed when there are no items
	 *
	 * @since 3.1.0
	 * @access public
	 */",
 "/**
	 * Display the search box.
	 *
	 * @since 3.1.0
	 * @access public
	 *
	 * @param string $text The search button text
	 * @param string $input_id The search input id
	 */",
 "/**
	 * Get an associative array ( id => link ) with the list
	 * of views available on this table.
	 *
	 * @since 3.1.0
	 * @access protected
	 *
	 * @return array
	 */",
 "/**
	 * Display the list of views available on this table.
	 *
	 * @since 3.1.0
	 * @access public
	 */",
 "/**
	 * Get an associative array ( option_name => option_title ) with the list
	 * of bulk actions available on this table.
	 *
	 * @since 3.1.0
	 * @access protected
	 *
	 * @return array
	 */",
 "/**
	 * Display the bulk actions dropdown.
	 *
	 * @since 3.1.0
	 * @access public
	 */",
 "/**
	 * Get the current action selected from the bulk actions dropdown.
	 *
	 * @since 3.1.0
	 * @access public
	 *
	 * @return string|bool The action name or False if no action was selected
	 */",
 "/**
	 * Generate row actions div
	 *
	 * @since 3.1.0
	 * @access protected
	 *
	 * @param array $actions The list of actions
	 * @param bool $always_visible Whether the actions should be always visible
	 * @return string
	 */",
 "/**
	 * Display a monthly dropdown for filtering items
	 *
	 * @since 3.1.0
	 * @access protected
	 */",
 "/**
	 * Display a view switcher
	 *
	 * @since 3.1.0
	 * @access protected
	 */",
 "/**
	 * Display a comment count bubble
	 *
	 * @since 3.1.0
	 * @access protected
	 *
	 * @param int $post_id
	 * @param int $pending_comments
	 */",
 "/**
	 * Get the current page number
	 *
	 * @since 3.1.0
	 * @access protected
	 *
	 * @return int
	 */",
 "/**
	 * Get number of items to display on a single page
	 *
	 * @since 3.1.0
	 * @access protected
	 *
	 * @return int
	 */",
 "/**
	 * Display the pagination.
	 *
	 * @since 3.1.0
	 * @access protected
	 */",
 "/**
	 * Get a list of columns. The format is:
	 * \'internal-name\' => \'Title\'
	 *
	 * @since 3.1.0
	 * @access protected
	 * @abstract
	 *
	 * @return array
	 */",
 "/**
	 * Get a list of sortable columns. The format is:
	 * \'internal-name\' => \'orderby\'
	 * or
	 * \'internal-name\' => array( \'orderby\', true )
	 *
	 * The second format will make the initial sorting order be descending
	 *
	 * @since 3.1.0
	 * @access protected
	 *
	 * @return array
	 */",
 "/**
	 * Get a list of all, hidden and sortable columns, with filter applied
	 *
	 * @since 3.1.0
	 * @access protected
	 *
	 * @return array
	 */",
 "/**
	 * Return number of visible columns
	 *
	 * @since 3.1.0
	 * @access public
	 *
	 * @return int
	 */",
 "/**
	 * Print column headers, accounting for hidden and sortable columns.
	 *
	 * @since 3.1.0
	 * @access protected
	 *
	 * @param bool $with_id Whether to set the id attribute or not
	 */",
 "/**
	 * Display the table
	 *
	 * @since 3.1.0
	 * @access public
	 */",
 "/**
	 * Get a list of CSS classes for the <table> tag
	 *
	 * @since 3.1.0
	 * @access protected
	 *
	 * @return array
	 */",
 "/**
	 * Generate the table navigation above or below the table
	 *
	 * @since 3.1.0
	 * @access protected
	 */",
 "/**
	 * Extra controls to be displayed between bulk actions and pagination
	 *
	 * @since 3.1.0
	 * @access protected
	 */",
 "/**
	 * Generate the <tbody> part of the table
	 *
	 * @since 3.1.0
	 * @access protected
	 */",
 "/**
	 * Generate the table rows
	 *
	 * @since 3.1.0
	 * @access protected
	 */",
 "/**
	 * Generates content for a single row of the table
	 *
	 * @since 3.1.0
	 * @access protected
	 *
	 * @param object $item The current item
	 */",
 "/**
	 * Generates the columns for a single row of the table
	 *
	 * @since 3.1.0
	 * @access protected
	 *
	 * @param object $item The current item
	 */",
 "/**
	 * Handle an incoming ajax request (called from admin-ajax.php)
	 *
	 * @since 3.1.0
	 * @access public
	 */",
 "/**
	 * Send required variables to JavaScript land
	 *
	 * @access private
	 */",
 "/**
 * Base class for displaying a list of items in an ajaxified HTML table.
 *
 * @package WordPress
 * @subpackage List_Table
 * @since 3.1.0
 * @access private
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.0.0
 *
 * @param unknown_type $cat_name
 * @return unknown
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.0.0
 *
 * @param unknown_type $id
 * @return unknown
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.0.0
 *
 * @param unknown_type $cat_name
 * @param unknown_type $parent
 * @return unknown
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.0.0
 *
 * @param unknown_type $categories
 * @param unknown_type $post_id
 * @return unknown
 */",
 "/**
 * Updates an existing Category or creates a new Category.
 *
 * @since 2.0.0
 *
 * @param mixed $catarr See defaults below. Set \'cat_ID\' to a non-zero value to update an existing category. The \'taxonomy\' key was added in 3.0.0.
 * @param bool $wp_error Optional, since 2.5.0. Set this to true if the caller handles WP_Error return values.
 * @return int|object The ID number of the new or updated Category on success. Zero or a WP_Error on failure, depending on param $wp_error.
 */",
 "/**
 * Aliases wp_insert_category() with minimal args.
 *
 * If you want to update only some fields of an existing category, call this
 * function with only the new values set inside $catarr.
 *
 * @since 2.0.0
 *
 * @param array $catarr The \'cat_ID\' value is required. All other keys are optional.
 * @return int|bool The ID number of the new or updated Category on success. Zero or FALSE on failure.
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.3.0
 *
 * @param unknown_type $tag_name
 * @return unknown
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.3.0
 *
 * @param unknown_type $tag_name
 * @return unknown
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.3.0
 *
 * @param unknown_type $post_id
 * @return unknown
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.8.0
 *
 * @param unknown_type $post_id
 * @return unknown
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * @since 2.8.0
 *
 * @param unknown_type $tag_name
 * @return unknown
 */",
 "/**
 * Creates a new user from the \"Users\" form using $_POST information.
 *
 * @since 2.0
 *
 * @return null|WP_Error|int Null when adding user, WP_Error or User ID integer when no parameters.
 */",
 "/**
 * Edit user settings based on contents of $_POST
 *
 * Used on user-edit.php and profile.php to manage and process user options, passwords etc.
 *
 * @since 2.0
 *
 * @param int $user_id Optional. User ID.
 * @return int user id of the updated user
 */",
 "/**
 * Fetch a filtered list of user roles that the current user is
 * allowed to edit.
 *
 * Simple function who\'s main purpose is to allow filtering of the
 * list of roles in the $wp_roles object so that plugins can remove
 * inappropriate ones depending on the situation or user making edits.
 * Specifically because without filtering anyone with the edit_users
 * capability can edit others to be administrators, even if they are
 * only editors or authors. This filter allows admins to delegate
 * user management.
 *
 * @since 2.8
 *
 * @return unknown
 */",
 "/**
 * Retrieve user data and filter it.
 *
 * @since 2.0.5
 *
 * @param int $user_id User ID.
 * @return object WP_User object with user data.
 */",
 "/**
 * Retrieve the user\'s drafts.
 *
 * @since 2.0.0
 *
 * @param int $user_id User ID.
 * @return array
 */",
 "/**
 * Remove user and optionally reassign posts and links to another user.
 *
 * If the $reassign parameter is not assigned to an User ID, then all posts will
 * be deleted of that user. The action \'delete_user\' that is passed the User ID
 * being deleted will be run after the posts are either reassigned or deleted.
 * The user meta will also be deleted that are for that User ID.
 *
 * @since 2.0.0
 *
 * @param int $id User ID.
 * @param int $reassign Optional. Reassign posts and links to new User ID.
 * @return bool True when finished.
 */",
 "/**
 * Remove all capabilities from user.
 *
 * @since 2.1.0
 *
 * @param int $id User ID.
 */",
 "/**
 * @since 2.8.0
 */",
 "/**
 * @since 2.8.0
 */",
 "/**
 * @since 2.8.0
 */",
 "/**
 * Returns a navigation menu object.
 *
 * @since 3.0.0
 *
 * @uses get_term
 * @uses get_term_by
 *
 * @param string $menu Menu id, slug or name
 * @return mixed false if $menu param isn\'t supplied or term does not exist, menu object if successful.
 */",
 "/**
 * Check if the given ID is a navigation menu.
 *
 * Returns true if it is; false otherwise.
 *
 * @since 3.0.0
 *
 * @param int|string $menu The menu to check (id, slug, or name)
 * @return bool Whether the menu exists.
 */",
 "/**
 * Register navigation menus for a theme.
 *
 * @since 3.0.0
 *
 * @param array $locations Associative array of menu location identifiers (like a slug) and descriptive text.
 */",
 "/**
 * Unregisters a navigation menu for a theme.
 *
 * @param array $location the menu location identifier
 *
 * @return bool True on success, false on failure.
 */",
 "/**
 * Register a navigation menu for a theme.
 *
 * @since 3.0.0
 *
 * @param string $location Menu location identifier, like a slug.
 * @param string $description Menu location descriptive text.
 */",
 "/**
 * Returns an array of all registered navigation menus in a theme
 *
 * @since 3.0.0
 * @return array
 */",
 "/**
 * Returns an array with the registered navigation menu locations and the menu assigned to it
 *
 * @since 3.0.0
 * @return array
 */",
 "/**
 * Whether a registered nav menu location has a menu assigned to it.
 *
 * @since 3.0.0
 * @param string $location Menu location identifier.
 * @return bool Whether location has a menu.
 */",
 "/**
 * Determine whether the given ID is a nav menu item.
 *
 * @since 3.0.0
 *
 * @param int $menu_item_id The ID of the potential nav menu item.
 * @return bool Whether the given ID is that of a nav menu item.
 */",
 "/**
 * Create a Navigation Menu.
 *
 * @since 3.0.0
 *
 * @param string $menu_name Menu Name
 * @return mixed Menu object on success|WP_Error on failure
 */",
 "/**
 * Delete a Navigation Menu.
 *
 * @since 3.0.0
 *
 * @param string $menu name|id|slug
 * @return mixed Menu object on success|WP_Error on failure
 */",
 "/**
 * Save the properties of a menu or create a new menu with those properties.
 *
 * @since 3.0.0
 *
 * @param int $menu_id The ID of the menu or \"0\" to create a new menu.
 * @param array $menu_data The array of menu data.
 * @return int|error object The menu\'s ID or WP_Error object.
 */",
 "/**
 * Save the properties of a menu item or create a new one.
 *
 * @since 3.0.0
 *
 * @param int $menu_id The ID of the menu. Required. If \"0\", makes the menu item a draft orphan.
 * @param int $menu_item_db_id The ID of the menu item. If \"0\", creates a new menu item.
 * @param array $menu_item_data The menu item\'s data.
 * @return int The menu item\'s database ID or WP_Error object on failure.
 */",
 "/**
 * Returns all navigation menu objects.
 *
 * @since 3.0.0
 *
 * @param array $args Array of arguments passed on to get_terms().
 * @return array menu objects
 */",
 "/**
 * Sort menu items by the desired key.
 *
 * @since 3.0.0
 * @access private
 *
 * @param object $a The first object to compare
 * @param object $b The second object to compare
 * @return int -1, 0, or 1 if $a is considered to be respectively less than, equal to, or greater than $b.
 */",
 "/**
 * Returns if a menu item is valid. Bug #13958
 *
 * @since 3.2.0
 * @access private
 *
 * @param object $menu_item The menu item to check
 * @return bool false if invalid, else true.
 */",
 "/**
 * Returns all menu items of a navigation menu.
 *
 * @since 3.0.0
 *
 * @param string $menu menu name, id, or slug
 * @param string $args
 * @return mixed $items array of menu items, else false.
 */",
 "/**
 * Decorates a menu item object with the shared navigation menu item properties.
 *
 * Properties:
 * - db_id: 		The DB ID of this item as a nav_menu_item object, if it exists (0 if it doesn\'t exist).
 * - object_id:		The DB ID of the original object this menu item represents, e.g. ID for posts and term_id for categories.
 * - type:		The family of objects originally represented, such as \"post_type\" or \"taxonomy.\"
 * - object:		The type of object originally represented, such as \"category,\" \"post\", or \"attachment.\"
 * - type_label:	The singular label used to describe this type of menu item.
 * - post_parent:	The DB ID of the original object\'s parent object, if any (0 otherwise).
 * - menu_item_parent: 	The DB ID of the nav_menu_item that is this item\'s menu parent, if any. 0 otherwise.
 * - url:		The URL to which this menu item points.
 * - title:		The title of this menu item.
 * - target: 		The target attribute of the link element for this menu item.
 * - attr_title:	The title attribute of the link element for this menu item.
 * - classes:		The array of class attribute values for the link element of this menu item.
 * - xfn:		The XFN relationship expressed in the link of this menu item.
 * - description:	The description of this menu item.
 *
 * @since 3.0.0
 *
 * @param object $menu_item The menu item to modify.
 * @return object $menu_item The menu item with standard menu item properties.
 */",
 "/**
 * Get the menu items associated with a particular object.
 *
 * @since 3.0.0
 *
 * @param int $object_id The ID of the original object.
 * @param string $object_type The type of object, such as \"taxonomy\" or \"post_type.\"
 * @return array The array of menu item IDs; empty array if none;
 */",
 "/**
 * Callback for handling a menu item when its original object is deleted.
 *
 * @since 3.0.0
 * @access private
 *
 * @param int $object_id The ID of the original object being trashed.
 *
 */",
 "/**
 * Callback for handling a menu item when its original object is deleted.
 *
 * @since 3.0.0
 * @access private
 *
 * @param int $object_id The ID of the original object being trashed.
 *
 */",
 "/**
 * Automatically add newly published page objects to menus with that as an option.
 *
 * @since 3.0.0
 * @access private
 *
 * @param string $new_status The new status of the post object.
 * @param string $old_status The old status of the post object.
 * @param object $post The post object being transitioned from one status to another.
 * @return void
 */",
 "/**
 * XML callback function for the start of a new XML tag.
 *
 * @since 0.71
 * @access private
 *
 * @uses $updated_timestamp Not used inside function.
 * @uses $all_links Not used inside function.
 * @uses $map Stores names of attributes to use.
 * @global array $names
 * @global array $urls
 * @global array $targets
 * @global array $descriptions
 * @global array $feeds
 *
 * @param mixed $parser XML Parser resource.
 * @param string $tagName XML element name.
 * @param array $attrs XML element attributes.
 */",
 "/**
 * XML callback function that is called at the end of a XML tag.
 *
 * @since 0.71
 * @access private
 * @package WordPress
 * @subpackage Dummy
 *
 * @param mixed $parser XML Parser resource.
 * @param string $tagName XML tag name.
 */",
 "/**
	 * Connects to the database server and selects a database
	 *
	 * PHP5 style constructor for compatibility with PHP5. Does
	 * the actual setting up of the class properties and connection
	 * to the database.
	 *
	 * @link http://core.trac.wordpress.org/ticket/3354
	 * @since 2.0.8
	 *
	 * @param string $dbuser MySQL database user
	 * @param string $dbpassword MySQL database password
	 * @param string $dbname MySQL database name
	 * @param string $dbhost MySQL database host
	 */",
 "/**
	 * PHP5 style destructor and will run when database object is destroyed.
	 *
	 * @see wpdb::__construct()
	 * @since 2.0.8
	 * @return bool true
	 */",
 "/**
	 * Set $this->charset and $this->collate
	 *
	 * @since 3.1.0
	 */",
 "/**
	 * Sets the connection\'s character set.
	 *
	 * @since 3.1.0
	 *
	 * @param resource $dbh     The resource given by mysql_connect
	 * @param string   $charset The character set (optional)
	 * @param string   $collate The collation (optional)
	 */",
 "/**
	 * Sets the table prefix for the WordPress tables.
	 *
	 * @since 2.5.0
	 *
	 * @param string $prefix Alphanumeric name for the new prefix.
	 * @param bool $set_table_names Optional. Whether the table names, e.g. wpdb::$posts, should be updated or not.
	 * @return string|WP_Error Old prefix or WP_Error on error
	 */",
 "/**
	 * Sets blog id.
	 *
	 * @since 3.0.0
	 * @access public
	 * @param int $blog_id
	 * @param int $site_id Optional.
	 * @return string previous blog id
	 */",
 "/**
	 * Gets blog prefix.
	 *
	 * @uses is_multisite()
	 * @since 3.0.0
	 * @param int $blog_id Optional.
	 * @return string Blog prefix.
	 */",
 "/**
	 * Returns an array of WordPress tables.
	 *
	 * Also allows for the CUSTOM_USER_TABLE and CUSTOM_USER_META_TABLE to
	 * override the WordPress users and usermeta tables that would otherwise
	 * be determined by the prefix.
	 *
	 * The scope argument can take one of the following:
	 *
	 * \'all\' - returns \'all\' and \'global\' tables. No old tables are returned.
	 * \'blog\' - returns the blog-level tables for the queried blog.
	 * \'global\' - returns the global tables for the installation, returning multisite tables only if running multisite.
	 * \'ms_global\' - returns the multisite global tables, regardless if current installation is multisite.
	 * \'old\' - returns tables which are deprecated.
	 *
	 * @since 3.0.0
	 * @uses wpdb::$tables
	 * @uses wpdb::$old_tables
	 * @uses wpdb::$global_tables
	 * @uses wpdb::$ms_global_tables
	 * @uses is_multisite()
	 *
	 * @param string $scope Optional. Can be all, global, ms_global, blog, or old tables. Defaults to all.
	 * @param bool $prefix Optional. Whether to include table prefixes. Default true. If blog
	 * 	prefix is requested, then the custom users and usermeta tables will be mapped.
	 * @param int $blog_id Optional. The blog_id to prefix. Defaults to wpdb::$blogid. Used only when prefix is requested.
	 * @return array Table names. When a prefix is requested, the key is the unprefixed table name.
	 */",
 "/**
	 * Selects a database using the current database connection.
	 *
	 * The database name will be changed based on the current database
	 * connection. On failure, the execution will bail and display an DB error.
	 *
	 * @since 0.71
	 *
	 * @param string $db MySQL database name
	 * @param resource $dbh Optional link identifier.
	 * @return null Always null.
	 */",
 "/**
	 * Weak escape, using addslashes()
	 *
	 * @see addslashes()
	 * @since 2.8.0
	 * @access private
	 *
	 * @param string $string
	 * @return string
	 */",
 "/**
	 * Real escape, using mysql_real_escape_string() or addslashes()
	 *
	 * @see mysql_real_escape_string()
	 * @see addslashes()
	 * @since 2.8.0
	 * @access private
	 *
	 * @param  string $string to escape
	 * @return string escaped
	 */",
 "/**
	 * Escape data. Works on arrays.
	 *
	 * @uses wpdb::_escape()
	 * @uses wpdb::_real_escape()
	 * @since  2.8.0
	 * @access private
	 *
	 * @param  string|array $data
	 * @return string|array escaped
	 */",
 "/**
	 * Escapes content for insertion into the database using addslashes(), for security.
	 *
	 * Works on arrays.
	 *
	 * @since 0.71
	 * @param string|array $data to escape
	 * @return string|array escaped as query safe string
	 */",
 "/**
	 * Escapes content by reference for insertion into the database, for security
	 *
	 * @uses wpdb::_real_escape()
	 * @since 2.3.0
	 * @param string $string to escape
	 * @return void
	 */",
 "/**
	 * Prepares a SQL query for safe execution. Uses sprintf()-like syntax.
	 *
	 * The following directives can be used in the query format string:
	 *   %d (integer)
	 *   %f (float)
	 *   %s (string)
	 *   %% (literal percentage sign - no argument needed)
	 *
	 * All of %d, %f, and %s are to be left unquoted in the query string and they need an argument passed for them.
	 * Literals (%) as parts of the query must be properly written as %%.
	 *
	 * This function only supports a small subset of the sprintf syntax; it only supports %d (integer), %f (float), and %s (string).
	 * Does not support sign, padding, alignment, width or precision specifiers.
	 * Does not support argument numbering/swapping.
	 *
	 * May be called like {@link http://php.net/sprintf sprintf()} or like {@link http://php.net/vsprintf vsprintf()}.
	 *
	 * Both %d and %s should be left unquoted in the query string.
	 *
	 * <code>
	 * wpdb::prepare( \"SELECT * FROM `table` WHERE `column` = %s AND `field` = %d\", \'foo\', 1337 )
	 * wpdb::prepare( \"SELECT DATE_FORMAT(`field`, \'%%c\') FROM `table` WHERE `column` = %s\", \'foo\' );
	 * </code>
	 *
	 * @link http://php.net/sprintf Description of syntax.
	 * @since 2.3.0
	 *
	 * @param string $query Query statement with sprintf()-like placeholders
	 * @param array|mixed $args The array of variables to substitute into the query\'s placeholders if being called like
	 * 	{@link http://php.net/vsprintf vsprintf()}, or the first variable to substitute into the query\'s placeholders if
	 * 	being called like {@link http://php.net/sprintf sprintf()}.
	 * @param mixed $args,... further variables to substitute into the query\'s placeholders if being called like
	 * 	{@link http://php.net/sprintf sprintf()}.
	 * @return null|false|string Sanitized query string, null if there is no query, false if there is an error and string
	 * 	if there was something to prepare
	 */",
 "/**
	 * Print SQL/DB error.
	 *
	 * @since 0.71
	 * @global array $EZSQL_ERROR Stores error information of query and error string
	 *
	 * @param string $str The error to display
	 * @return bool False if the showing of errors is disabled.
	 */",
 "/**
	 * Enables showing of database errors.
	 *
	 * This function should be used only to enable showing of errors.
	 * wpdb::hide_errors() should be used instead for hiding of errors. However,
	 * this function can be used to enable and disable showing of database
	 * errors.
	 *
	 * @since 0.71
	 * @see wpdb::hide_errors()
	 *
	 * @param bool $show Whether to show or hide errors
	 * @return bool Old value for showing errors.
	 */",
 "/**
	 * Disables showing of database errors.
	 *
	 * By default database errors are not shown.
	 *
	 * @since 0.71
	 * @see wpdb::show_errors()
	 *
	 * @return bool Whether showing of errors was active
	 */",
 "/**
	 * Whether to suppress database errors.
	 *
	 * By default database errors are suppressed, with a simple
	 * call to this function they can be enabled.
	 *
	 * @since 2.5.0
	 * @see wpdb::hide_errors()
	 * @param bool $suppress Optional. New value. Defaults to true.
	 * @return bool Old value
	 */",
 "/**
	 * Kill cached query results.
	 *
	 * @since 0.71
	 * @return void
	 */",
 "/**
	 * Connect to and select database
	 *
	 * @since 3.0.0
	 */",
 "/**
	 * Perform a MySQL database query, using current database connection.
	 *
	 * More information can be found on the codex page.
	 *
	 * @since 0.71
	 *
	 * @param string $query Database query
	 * @return int|false Number of rows affected/selected or false on error
	 */",
 "/**
	 * Insert a row into a table.
	 *
	 * <code>
	 * wpdb::insert( \'table\', array( \'column\' => \'foo\', \'field\' => \'bar\' ) )
	 * wpdb::insert( \'table\', array( \'column\' => \'foo\', \'field\' => 1337 ), array( \'%s\', \'%d\' ) )
	 * </code>
	 *
	 * @since 2.5.0
	 * @see wpdb::prepare()
	 * @see wpdb::$field_types
	 * @see wp_set_wpdb_vars()
	 *
	 * @param string $table table name
	 * @param array $data Data to insert (in column => value pairs). Both $data columns and $data values should be \"raw\" (neither should be SQL escaped).
	 * @param array|string $format Optional. An array of formats to be mapped to each of the value in $data. If string, that format will be used for all of the values in $data.
	 * 	A format is one of \'%d\', \'%f\', \'%s\' (integer, float, string). If omitted, all values in $data will be treated as strings unless otherwise specified in wpdb::$field_types.
	 * @return int|false The number of rows inserted, or false on error.
	 */",
 "/**
	 * Replace a row into a table.
	 *
	 * <code>
	 * wpdb::replace( \'table\', array( \'column\' => \'foo\', \'field\' => \'bar\' ) )
	 * wpdb::replace( \'table\', array( \'column\' => \'foo\', \'field\' => 1337 ), array( \'%s\', \'%d\' ) )
	 * </code>
	 *
	 * @since 3.0.0
	 * @see wpdb::prepare()
	 * @see wpdb::$field_types
	 * @see wp_set_wpdb_vars()
	 *
	 * @param string $table table name
	 * @param array $data Data to insert (in column => value pairs). Both $data columns and $data values should be \"raw\" (neither should be SQL escaped).
	 * @param array|string $format Optional. An array of formats to be mapped to each of the value in $data. If string, that format will be used for all of the values in $data.
	 * 	A format is one of \'%d\', \'%f\', \'%s\' (integer, float, string). If omitted, all values in $data will be treated as strings unless otherwise specified in wpdb::$field_types.
	 * @return int|false The number of rows affected, or false on error.
	 */",
 "/**
	 * Helper function for insert and replace.
	 *
	 * Runs an insert or replace query based on $type argument.
	 *
	 * @access private
	 * @since 3.0.0
	 * @see wpdb::prepare()
	 * @see wpdb::$field_types
	 * @see wp_set_wpdb_vars()
	 *
	 * @param string $table table name
	 * @param array $data Data to insert (in column => value pairs). Both $data columns and $data values should be \"raw\" (neither should be SQL escaped).
	 * @param array|string $format Optional. An array of formats to be mapped to each of the value in $data. If string, that format will be used for all of the values in $data.
	 * 	A format is one of \'%d\', \'%f\', \'%s\' (integer, float, string). If omitted, all values in $data will be treated as strings unless otherwise specified in wpdb::$field_types.
	 * @param string $type Optional. What type of operation is this? INSERT or REPLACE. Defaults to INSERT.
	 * @return int|false The number of rows affected, or false on error.
	 */",
 "/**
	 * Update a row in the table
	 *
	 * <code>
	 * wpdb::update( \'table\', array( \'column\' => \'foo\', \'field\' => \'bar\' ), array( \'ID\' => 1 ) )
	 * wpdb::update( \'table\', array( \'column\' => \'foo\', \'field\' => 1337 ), array( \'ID\' => 1 ), array( \'%s\', \'%d\' ), array( \'%d\' ) )
	 * </code>
	 *
	 * @since 2.5.0
	 * @see wpdb::prepare()
	 * @see wpdb::$field_types
	 * @see wp_set_wpdb_vars()
	 *
	 * @param string $table table name
	 * @param array $data Data to update (in column => value pairs). Both $data columns and $data values should be \"raw\" (neither should be SQL escaped).
	 * @param array $where A named array of WHERE clauses (in column => value pairs). Multiple clauses will be joined with ANDs. Both $where columns and $where values should be \"raw\".
	 * @param array|string $format Optional. An array of formats to be mapped to each of the values in $data. If string, that format will be used for all of the values in $data.
	 * 	A format is one of \'%d\', \'%f\', \'%s\' (integer, float, string). If omitted, all values in $data will be treated as strings unless otherwise specified in wpdb::$field_types.
	 * @param array|string $where_format Optional. An array of formats to be mapped to each of the values in $where. If string, that format will be used for all of the items in $where. A format is one of \'%d\', \'%f\', \'%s\' (integer, float, string). If omitted, all values in $where will be treated as strings.
	 * @return int|false The number of rows updated, or false on error.
	 */",
 "/**
	 * Delete a row in the table
	 *
	 * <code>
	 * wpdb::delete( \'table\', array( \'ID\' => 1 ) )
	 * wpdb::delete( \'table\', array( \'ID\' => 1 ), array( \'%d\' ) )
	 * </code>
	 *
	 * @since 3.4.0
	 * @see wpdb::prepare()
	 * @see wpdb::$field_types
	 * @see wp_set_wpdb_vars()
	 *
	 * @param string $table table name
	 * @param array $where A named array of WHERE clauses (in column => value pairs). Multiple clauses will be joined with ANDs. Both $where columns and $where values should be \"raw\".
	 * @param array|string $where_format Optional. An array of formats to be mapped to each of the values in $where. If string, that format will be used for all of the items in $where. A format is one of \'%d\', \'%f\', \'%s\' (integer, float, string). If omitted, all values in $where will be treated as strings unless otherwise specified in wpdb::$field_types.
	 * @return int|false The number of rows updated, or false on error.
	 */",
 "/**
	 * Retrieve one variable from the database.
	 *
	 * Executes a SQL query and returns the value from the SQL result.
	 * If the SQL result contains more than one column and/or more than one row, this function returns the value in the column and row specified.
	 * If $query is null, this function returns the value in the specified column and row from the previous SQL result.
	 *
	 * @since 0.71
	 *
	 * @param string|null $query Optional. SQL query. Defaults to null, use the result from the previous query.
	 * @param int $x Optional. Column of value to return. Indexed from 0.
	 * @param int $y Optional. Row of value to return. Indexed from 0.
	 * @return string|null Database query result (as string), or null on failure
	 */",
 "/**
	 * Retrieve one row from the database.
	 *
	 * Executes a SQL query and returns the row from the SQL result.
	 *
	 * @since 0.71
	 *
	 * @param string|null $query SQL query.
	 * @param string $output Optional. one of ARRAY_A | ARRAY_N | OBJECT constants. Return an associative array (column => value, ...),
	 * 	a numerically indexed array (0 => value, ...) or an object ( ->column = value ), respectively.
	 * @param int $y Optional. Row to return. Indexed from 0.
	 * @return mixed Database query result in format specified by $output or null on failure
	 */",
 "/**
	 * Retrieve one column from the database.
	 *
	 * Executes a SQL query and returns the column from the SQL result.
	 * If the SQL result contains more than one column, this function returns the column specified.
	 * If $query is null, this function returns the specified column from the previous SQL result.
	 *
	 * @since 0.71
	 *
	 * @param string|null $query Optional. SQL query. Defaults to previous query.
	 * @param int $x Optional. Column to return. Indexed from 0.
	 * @return array Database query result. Array indexed from 0 by SQL result row number.
	 */",
 "/**
	 * Retrieve an entire SQL result set from the database (i.e., many rows)
	 *
	 * Executes a SQL query and returns the entire SQL result.
	 *
	 * @since 0.71
	 *
	 * @param string $query SQL query.
	 * @param string $output Optional. Any of ARRAY_A | ARRAY_N | OBJECT | OBJECT_K constants. With one of the first three, return an array of rows indexed from 0 by SQL result row number.
	 * 	Each row is an associative array (column => value, ...), a numerically indexed array (0 => value, ...), or an object. ( ->column = value ), respectively.
	 * 	With OBJECT_K, return an associative array of row objects keyed by the value of each row\'s first column\'s value. Duplicate keys are discarded.
	 * @return mixed Database query results
	 */",
 "/**
	 * Retrieve column metadata from the last query.
	 *
	 * @since 0.71
	 *
	 * @param string $info_type Optional. Type one of name, table, def, max_length, not_null, primary_key, multiple_key, unique_key, numeric, blob, type, unsigned, zerofill
	 * @param int $col_offset Optional. 0: col name. 1: which table the col\'s in. 2: col\'s max length. 3: if the col is numeric. 4: col\'s type
	 * @return mixed Column Results
	 */",
 "/**
	 * Starts the timer, for debugging purposes.
	 *
	 * @since 1.5.0
	 *
	 * @return true
	 */",
 "/**
	 * Stops the debugging timer.
	 *
	 * @since 1.5.0
	 *
	 * @return float Total time spent on the query, in seconds
	 */",
 "/**
	 * Wraps errors in a nice header and footer and dies.
	 *
	 * Will not die if wpdb::$show_errors is true
	 *
	 * @since 1.5.0
	 *
	 * @param string $message The Error message
	 * @param string $error_code Optional. A Computer readable string to identify the error.
	 * @return false|void
	 */",
 "/**
	 * Whether MySQL database is at least the required minimum version.
	 *
	 * @since 2.5.0
	 * @uses $wp_version
	 * @uses $required_mysql_version
	 *
	 * @return WP_Error
	 */",
 "/**
	 * Whether the database supports collation.
	 *
	 * Called when WordPress is generating the table scheme.
	 *
	 * @since 2.5.0
	 *
	 * @return bool True if collation is supported, false if version does not
	 */",
 "/**
	 * Determine if a database supports a particular feature
	 *
	 * @since 2.7.0
	 * @see   wpdb::db_version()
	 *
	 * @param string $db_cap the feature
	 * @return bool
	 */",
 "/**
	 * Retrieve the name of the function that called wpdb.
	 *
	 * Searches up the list of functions until it reaches
	 * the one that would most logically had called this method.
	 *
	 * @since 2.5.0
	 *
	 * @return string The name of the calling function
	 */",
 "/**
	 * The database version number.
	 *
	 * @since 2.7.0
	 *
	 * @return false|string false on failure, version number on success
	 */",
 "/**
 * WordPress Database Access Abstraction Object
 *
 * It is possible to replace this class with your own
 * by setting the $wpdb global variable in wp-content/db.php
 * file to your class. The wpdb class will still be included,
 * so you can extend it or simply use your own.
 *
 * @link http://codex.wordpress.org/Function_Reference/wpdb_Class
 *
 * @package WordPress
 * @subpackage Database
 * @since 0.71
 */",
 "/**
 * Prints script tags in document head.
 *
 * Called by admin-header.php and by wp_head hook. Since it is called by wp_head
 * on every page load, the function does not instantiate the WP_Scripts object
 * unless script names are explicitly passed. Does make use of already
 * instantiated $wp_scripts if present. Use provided wp_print_scripts hook to
 * register/enqueue new scripts.
 *
 * @since r16
 * @see WP_Dependencies::print_scripts()
 */",
 "/**
 * Register new Javascript file.
 *
 * @since r16
 * @param string $handle Script name
 * @param string $src Script url
 * @param array $deps (optional) Array of script names on which this script depends
 * @param string|bool $ver (optional) Script version (used for cache busting), set to null to disable
 * @param bool $in_footer (optional) Whether to enqueue the script before </head> or before </body>
 * @return null
 */",
 "/**
 * Wrapper for $wp_scripts->localize().
 *
 * Used to localizes a script.
 * Works only if the script has already been added.
 * Accepts an associative array $l10n and creates JS object:
 * \"$object_name\" = {
 *   key: value,
 *   key: value,
 *   ...
 * }
 * See http://core.trac.wordpress.org/ticket/11520 for more information.
 *
 * @since r16
 *
 * @param string $handle The script handle that was registered or used in script-loader
 * @param string $object_name Name for the created JS object. This is passed directly so it should be qualified JS variable /[a-zA-Z0-9_]+/
 * @param array $l10n Associative PHP array containing the translated strings. HTML entities will be converted and the array will be JSON encoded.
 * @return bool Whether the localization was added successfully.
 */",
 "/**
 * Remove a registered script.
 *
 * @since r16
 * @see WP_Scripts::remove() For parameter information.
 */",
 "/**
 * Enqueues script.
 *
 * Registers the script if src provided (does NOT overwrite) and enqueues.
 *
 * @since r16
 * @see wp_register_script() For parameter information.
 */",
 "/**
 * Remove an enqueued script.
 *
 * @since WP 3.1
 * @see WP_Scripts::dequeue() For parameter information.
 */",
 "/**
 * Check whether script has been added to WordPress Scripts.
 *
 * The values for list defaults to \'queue\', which is the same as enqueue for
 * scripts.
 *
 * @since WP unknown; BP unknown
 *
 * @param string $handle Handle used to add script.
 * @param string $list Optional, defaults to \'queue\'. Others values are \'registered\', \'queue\', \'done\', \'to_do\'
 * @return bool
 */",
 "/**
	 * Constructor.
	 *
	 * @since 3.4.0
	 *
	 * @param string $id An specific ID of the setting. Can be a
	 *                   theme mod or option name.
	 * @param array $args Setting arguments.
	 */",
 "/**
	 * Handle previewing the setting.
	 *
	 * @since 3.4.0
	 */",
 "/**
	 * Callback function to filter the theme mods and options.
	 *
	 * @since 3.4.0
	 *
	 * @param mixed Old value.
	 * @return mixed New or old value.
	 */",
 "/**
	 * Set the value of the parameter for a specific theme.
	 *
	 * @since 3.4.0
	 *
	 * @return bool False if cap check fails or value isn\'t set.
	 */",
 "/**
	 * Fetches, validates, and sanitizes the $_POST value.
	 *
	 * @since 3.4.0
	 *
	 * @param $default mixed A default value which is used as a fallback. Default is null.
	 * @return mixed Either the default value on failure or sanitized value.
	 */",
 "/**
	 * Sanitize an input.
	 *
	 * @since 3.4.0
	 *
	 * @param $value mixed The value to sanitize.
	 * @return mixed Null if an input isn\'t valid, otherwise the sanitized value.
	 */",
 "/**
	 * Set the value of the parameter for a specific theme.
	 *
	 * @since 3.4.0
	 *
	 * @param $value mixed The value to update.
	 * @return mixed The result of saving the value.
	 */",
 "/**
	 * Update the theme mod from the value of the parameter.
	 *
	 * @since 3.4.0
	 *
	 * @param $value mixed The value to update.
	 * @return mixed The result of saving the value.
	 */",
 "/**
	 * Update the theme mod from the value of the parameter.
	 *
	 * @since 3.4.0
	 *
	 * @param $value mixed The value to update.
	 * @return mixed The result of saving the value.
	 */",
 "/**
	 * Fetch the value of the parameter for a specific theme.
	 *
	 * @since 3.4.0
	 *
	 * @return mixed The requested value.
	 */",
 "/**
	 * Escape the parameter\'s value for use in JavaScript.
	 *
	 * @since 3.4.0
	 *
	 * @return mixed The requested escaped value.
	 */",
 "/**
	 * Check if the theme supports the setting and check user capabilities.
	 *
	 * @since 3.4.0
	 *
	 * @return bool False if theme doesn\'t support the setting or user can\'t change setting, otherwise true.
	 */",
 "/**
	 * Multidimensional helper function.
	 *
	 * @since 3.4.0
	 *
	 * @param $root
	 * @param $keys
	 * @param bool $create Default is false.
	 * @return null|array
	 */",
 "/**
	 * Will attempt to replace a specific value in a multidimensional array.
	 *
	 * @since 3.4.0
	 *
	 * @param $root
	 * @param $keys
	 * @param mixed $value The value to update.
	 * @return
	 */",
 "/**
	 * Will attempt to fetch a specific value from a multidimensional array.
	 *
	 * @since 3.4.0
	 *
	 * @param $root
	 * @param $keys
	 * @param $default A default value which is used as a fallback. Default is null.
	 * @return mixed The requested value or the default value.
	 */",
 "/**
	 * Will attempt to check if a specific value in a multidimensional array is set.
	 *
	 * @since 3.4.0
	 *
	 * @param $root
	 * @param $keys
	 * @return bool True if value is set, false if not.
	 */",
 "/**
 * Customize Setting Class
 *
 * @package WordPress
 * @subpackage Customize
 * @since 3.4.0
 */",
 "/**
 * A setting that is used to filter a value, but will not save the results.
 *
 * Results should be properly handled using another setting or callback.
 */",
 "/**
 * A setting that is used to filter a value, but will not save the results.
 *
 * Results should be properly handled using another setting or callback.
 */",
 "/**
 * Gets the current locale.
 *
 * If the locale is set, then it will filter the locale in the \'locale\' filter
 * hook and return the value.
 *
 * If the locale is not set already, then the WPLANG constant is used if it is
 * defined. Then it is filtered through the \'locale\' filter hook and the value
 * for the locale global set and the locale is returned.
 *
 * The process to get the locale should only be done once, but the locale will
 * always be filtered using the \'locale\' hook.
 *
 * @since 1.5.0
 * @uses apply_filters() Calls \'locale\' hook on locale value.
 * @uses $locale Gets the locale stored in the global.
 *
 * @return string The locale of the blog or from the \'locale\' hook.
 */",
 "/**
 * Retrieves the translation of $text. If there is no translation, or
 * the domain isn\'t loaded, the original text is returned.
 *
 * @see __() Don\'t use translate() directly, use __()
 * @since 2.2.0
 * @uses apply_filters() Calls \'gettext\' on domain translated text
 *		with the untranslated text as second parameter.
 *
 * @param string $text Text to translate.
 * @param string $domain Domain to retrieve the translated text.
 * @return string Translated text
 */",
 "/**
 * Retrieves the translation of $text. If there is no translation, or
 * the domain isn\'t loaded, the original text is returned.
 *
 * @see translate() An alias of translate()
 * @since 2.1.0
 *
 * @param string $text Text to translate
 * @param string $domain Optional. Domain to retrieve the translated text
 * @return string Translated text
 */",
 "/**
 * Retrieves the translation of $text and escapes it for safe use in an attribute.
 * If there is no translation, or the domain isn\'t loaded, the original text is returned.
 *
 * @see translate() An alias of translate()
 * @see esc_attr()
 * @since 2.8.0
 *
 * @param string $text Text to translate
 * @param string $domain Optional. Domain to retrieve the translated text
 * @return string Translated text
 */",
 "/**
 * Retrieves the translation of $text and escapes it for safe use in HTML output.
 * If there is no translation, or the domain isn\'t loaded, the original text is returned.
 *
 * @see translate() An alias of translate()
 * @see esc_html()
 * @since 2.8.0
 *
 * @param string $text Text to translate
 * @param string $domain Optional. Domain to retrieve the translated text
 * @return string Translated text
 */",
 "/**
 * Displays the returned translated text from translate().
 *
 * @see translate() Echoes returned translate() string
 * @since 1.2.0
 *
 * @param string $text Text to translate
 * @param string $domain Optional. Domain to retrieve the translated text
 */",
 "/**
 * Displays translated text that has been escaped for safe use in an attribute.
 *
 * @see translate() Echoes returned translate() string
 * @see esc_attr()
 * @since 2.8.0
 *
 * @param string $text Text to translate
 * @param string $domain Optional. Domain to retrieve the translated text
 */",
 "/**
 * Displays translated text that has been escaped for safe use in HTML output.
 *
 * @see translate() Echoes returned translate() string
 * @see esc_html()
 * @since 2.8.0
 *
 * @param string $text Text to translate
 * @param string $domain Optional. Domain to retrieve the translated text
 */",
 "/**
 * Retrieve translated string with gettext context
 *
 * Quite a few times, there will be collisions with similar translatable text
 * found in more than two places but with different translated context.
 *
 * By including the context in the pot file translators can translate the two
 * strings differently.
 *
 * @since 2.8.0
 *
 * @param string $text Text to translate
 * @param string $context Context information for the translators
 * @param string $domain Optional. Domain to retrieve the translated text
 * @return string Translated context string without pipe
 */",
 "/**
 * Displays translated string with gettext context
 *
 * @see _x
 * @since 3.0.0
 *
 * @param string $text Text to translate
 * @param string $context Context information for the translators
 * @param string $domain Optional. Domain to retrieve the translated text
 * @return string Translated context string without pipe
 */",
 "/**
 * Retrieve the plural or single form based on the amount.
 *
 * If the domain is not set in the $l10n list, then a comparison will be made
 * and either $plural or $single parameters returned.
 *
 * If the domain does exist, then the parameters $single, $plural, and $number
 * will first be passed to the domain\'s ngettext method. Then it will be passed
 * to the \'ngettext\' filter hook along with the same parameters. The expected
 * type will be a string.
 *
 * @since 2.8.0
 * @uses $l10n Gets list of domain translated string (gettext_reader) objects
 * @uses apply_filters() Calls \'ngettext\' hook on domains text returned,
 *		along with $single, $plural, and $number parameters. Expected to return string.
 *
 * @param string $single The text that will be used if $number is 1
 * @param string $plural The text that will be used if $number is not 1
 * @param int $number The number to compare against to use either $single or $plural
 * @param string $domain Optional. The domain identifier the text should be retrieved in
 * @return string Either $single or $plural translated text
 */",
 "/**
 * A hybrid of _n() and _x(). It supports contexts and plurals.
 *
 * @see _n()
 * @see _x()
 *
 */",
 "/**
 * Register plural strings in POT file, but don\'t translate them.
 *
 * Used when you want to keep structures with translatable plural strings and
 * use them later.
 *
 * Example:
 *  $messages = array(
 *  	\'post\' => _n_noop(\'%s post\', \'%s posts\'),
 *  	\'page\' => _n_noop(\'%s pages\', \'%s pages\')
 *  );
 *  ...
 *  $message = $messages[$type];
 *  $usable_text = sprintf( translate_nooped_plural( $message, $count ), $count );
 *
 * @since 2.5
 * @param string $singular Single form to be i18ned
 * @param string $plural Plural form to be i18ned
 * @param string $domain Optional. The domain identifier the text will be retrieved in
 * @return array array($singular, $plural)
 */",
 "/**
 * Register plural strings with context in POT file, but don\'t translate them.
 *
 * @see _n_noop()
 */",
 "/**
 * Translate the result of _n_noop() or _nx_noop()
 *
 * @since 3.1
 * @param array $nooped_plural Array with singular, plural and context keys, usually the result of _n_noop() or _nx_noop()
 * @param int $count Number of objects
 * @param string $domain Optional. The domain identifier the text should be retrieved in. If $nooped_plural contains
 * 	a domain passed to _n_noop() or _nx_noop(), it will override this value.
 */",
 "/**
 * Loads a MO file into the domain $domain.
 *
 * If the domain already exists, the translations will be merged. If both
 * sets have the same string, the translation from the original value will be taken.
 *
 * On success, the .mo file will be placed in the $l10n global by $domain
 * and will be a MO object.
 *
 * @since 1.5.0
 * @uses $l10n Gets list of domain translated string objects
 *
 * @param string $domain Unique identifier for retrieving translated strings
 * @param string $mofile Path to the .mo file
 * @return bool True on success, false on failure
 */",
 "/**
 * Unloads translations for a domain
 *
 * @since 3.0.0
 * @param string $domain Textdomain to be unloaded
 * @return bool Whether textdomain was unloaded
 */",
 "/**
 * Loads default translated strings based on locale.
 *
 * Loads the .mo file in WP_LANG_DIR constant path from WordPress root. The
 * translated (.mo) file is named based on the locale.
 *
 * @since 1.5.0
 */",
 "/**
 * Loads the plugin\'s translated strings.
 *
 * If the path is not given then it will be the root of the plugin directory.
 * The .mo file should be named based on the domain with a dash, and then the locale exactly.
 *
 * @since 1.5.0
 *
 * @param string $domain Unique identifier for retrieving translated strings
 * @param string $abs_rel_path Optional. Relative path to ABSPATH of a folder,
 * 	where the .mo file resides. Deprecated, but still functional until 2.7
 * @param string $plugin_rel_path Optional. Relative path to WP_PLUGIN_DIR. This is the preferred argument to use. It takes precedence over $abs_rel_path
 */",
 "/**
 * Load the translated strings for a plugin residing in the mu-plugins dir.
 *
 * @since 3.0.0
 *
 * @param string $domain Unique identifier for retrieving translated strings
 * @param string $mu_plugin_rel_path Relative to WPMU_PLUGIN_DIR directory in which
 * the MO file resides. Defaults to empty string.
 */",
 "/**
 * Loads the theme\'s translated strings.
 *
 * If the current locale exists as a .mo file in the theme\'s root directory, it
 * will be included in the translated strings by the $domain.
 *
 * The .mo files must be named based on the locale exactly.
 *
 * @since 1.5.0
 *
 * @param string $domain Unique identifier for retrieving translated strings
 */",
 "/**
 * Loads the child themes translated strings.
 *
 * If the current locale exists as a .mo file in the child themes root directory, it
 * will be included in the translated strings by the $domain.
 *
 * The .mo files must be named based on the locale exactly.
 *
 * @since 2.9.0
 *
 * @param string $domain Unique identifier for retrieving translated strings
 */",
 "/**
 * Returns the Translations instance for a domain. If there isn\'t one,
 * returns empty Translations instance.
 *
 * @param string $domain
 * @return object A Translation instance
 */",
 "/**
 * Whether there are translations for the domain
 *
 * @since 3.0.0
 * @param string $domain
 * @return bool Whether there are translations
 */",
 "/**
 * Translates role name. Since the role names are in the database and
 * not in the source there are dummy gettext calls to get them into the POT
 * file and this function properly translates them back.
 *
 * The before_last_bar() call is needed, because older installs keep the roles
 * using the old context format: \'Role name|User role\' and just skipping the
 * content after the last bar is easier than fixing them in the DB. New installs
 * won\'t suffer from that problem.
 */",
 "/**
 * Get all available languages based on the presence of *.mo files in a given directory. The default directory is WP_LANG_DIR.
 *
 * @since 3.0.0
 *
 * @param string $dir A directory in which to search for language files. The default directory is WP_LANG_DIR.
 * @return array Array of language codes or an empty array if no languages are present. Language codes are formed by stripping the .mo extension from the language file names.
 */",
 "/**
 * Retrieve plugin installer pages from WordPress Plugins API.
 *
 * It is possible for a plugin to override the Plugin API result with three
 * filters. Assume this is for plugins, which can extend on the Plugin Info to
 * offer more choices. This is very powerful and must be used with care, when
 * overriding the filters.
 *
 * The first filter, \'plugins_api_args\', is for the args and gives the action as
 * the second parameter. The hook for \'plugins_api_args\' must ensure that an
 * object is returned.
 *
 * The second filter, \'plugins_api\', is the result that would be returned.
 *
 * @since 2.7.0
 *
 * @param string $action
 * @param array|object $args Optional. Arguments to serialize for the Plugin Info API.
 * @return object plugins_api response object on success, WP_Error on failure.
 */",
 "/**
 * Retrieve popular WordPress plugin tags.
 *
 * @since 2.7.0
 *
 * @param array $args
 * @return array
 */",
 "/**
 * Display search form for searching plugins.
 *
 * @since 2.7.0
 */",
 "/**
 * Upload from zip
 * @since 2.8.0
 *
 * @param string $page
 */",
 "/**
 * Display plugin content based on plugin list.
 *
 * @since 2.7.0
 */",
 "/**
 * Determine the status we can perform on a plugin.
 *
 * @since 3.0.0
 */",
 "/**
 * Display plugin information in dialog box form.
 *
 * @since 2.7.0
 */",
 "/**
 * Load header template.
 *
 * Includes the header template for a theme or if a name is specified then a
 * specialised header will be included.
 *
 * For the parameter, if the file is called \"header-special.php\" then specify
 * \"special\".
 *
 * @uses locate_template()
 * @since 1.5.0
 * @uses do_action() Calls \'get_header\' action.
 *
 * @param string $name The name of the specialised header.
 */",
 "/**
 * Load footer template.
 *
 * Includes the footer template for a theme or if a name is specified then a
 * specialised footer will be included.
 *
 * For the parameter, if the file is called \"footer-special.php\" then specify
 * \"special\".
 *
 * @uses locate_template()
 * @since 1.5.0
 * @uses do_action() Calls \'get_footer\' action.
 *
 * @param string $name The name of the specialised footer.
 */",
 "/**
 * Load sidebar template.
 *
 * Includes the sidebar template for a theme or if a name is specified then a
 * specialised sidebar will be included.
 *
 * For the parameter, if the file is called \"sidebar-special.php\" then specify
 * \"special\".
 *
 * @uses locate_template()
 * @since 1.5.0
 * @uses do_action() Calls \'get_sidebar\' action.
 *
 * @param string $name The name of the specialised sidebar.
 */",
 "/**
 * Load a template part into a template
 *
 * Makes it easy for a theme to reuse sections of code in a easy to overload way
 * for child themes.
 *
 * Includes the named template part for a theme or if a name is specified then a
 * specialised part will be included. If the theme contains no {slug}.php file
 * then no template will be included.
 *
 * The template is included using require, not require_once, so you may include the
 * same template part multiple times.
 *
 * For the $name parameter, if the file is called \"{slug}-special.php\" then specify
 * \"special\".
 *
 * @uses locate_template()
 * @since 3.0.0
 * @uses do_action() Calls \'get_template_part_{$slug}\' action.
 *
 * @param string $slug The slug name for the generic template.
 * @param string $name The name of the specialised template.
 */",
 "/**
 * Display search form.
 *
 * Will first attempt to locate the searchform.php file in either the child or
 * the parent, then load it. If it doesn\'t exist, then the default search form
 * will be displayed. The default search form is HTML, which will be displayed.
 * There is a filter applied to the search form HTML in order to edit or replace
 * it. The filter is \'get_search_form\'.
 *
 * This function is primarily used by themes which want to hardcode the search
 * form into the sidebar and also by the search widget in WordPress.
 *
 * There is also an action that is called whenever the function is run called,
 * \'get_search_form\'. This can be useful for outputting JavaScript that the
 * search relies on or various formatting that applies to the beginning of the
 * search. To give a few examples of what it can be used for.
 *
 * @since 2.7.0
 * @param boolean $echo Default to echo and not return the form.
 */",
 "/**
 * Display the Log In/Out link.
 *
 * Displays a link, which allows users to navigate to the Log In page to log in
 * or log out depending on whether they are currently logged in.
 *
 * @since 1.5.0
 * @uses apply_filters() Calls \'loginout\' hook on HTML link content.
 *
 * @param string $redirect Optional path to redirect to on login/logout.
 * @param boolean $echo Default to echo and not return the link.
 */",
 "/**
 * Returns the Log Out URL.
 *
 * Returns the URL that allows the user to log out of the site
 *
 * @since 2.7.0
 * @uses wp_nonce_url() To protect against CSRF
 * @uses site_url() To generate the log in URL
 * @uses apply_filters() calls \'logout_url\' hook on final logout url
 *
 * @param string $redirect Path to redirect to on logout.
 */",
 "/**
 * Returns the Log In URL.
 *
 * Returns the URL that allows the user to log in to the site
 *
 * @since 2.7.0
 * @uses site_url() To generate the log in URL
 * @uses apply_filters() calls \'login_url\' hook on final login url
 *
 * @param string $redirect Path to redirect to on login.
 * @param bool $force_reauth Whether to force reauthorization, even if a cookie is present. Default is false.
 * @return string A log in url
 */",
 "/**
 * Provides a simple login form for use anywhere within WordPress. By default, it echoes
 * the HTML immediately. Pass array(\'echo\'=>false) to return the string instead.
 *
 * @since 3.0.0
 * @param array $args Configuration options to modify the form output
 * @return Void, or string containing the form
 */",
 "/**
 * Returns the Lost Password URL.
 *
 * Returns the URL that allows the user to retrieve the lost password
 *
 * @since 2.8.0
 * @uses site_url() To generate the lost password URL
 * @uses apply_filters() calls \'lostpassword_url\' hook on the lostpassword url
 *
 * @param string $redirect Path to redirect to on login.
 */",
 "/**
 * Display the Registration or Admin link.
 *
 * Display a link which allows the user to navigate to the registration page if
 * not logged in and registration is enabled or to the dashboard if logged in.
 *
 * @since 1.5.0
 * @uses apply_filters() Calls \'register\' hook on register / admin link content.
 *
 * @param string $before Text to output before the link (defaults to <li>).
 * @param string $after Text to output after the link (defaults to </li>).
 * @param boolean $echo Default to echo and not return the link.
 */",
 "/**
 * Theme container function for the \'wp_meta\' action.
 *
 * The \'wp_meta\' action can have several purposes, depending on how you use it,
 * but one purpose might have been to allow for theme switching.
 *
 * @since 1.5.0
 * @link http://trac.wordpress.org/ticket/1458 Explanation of \'wp_meta\' action.
 * @uses do_action() Calls \'wp_meta\' hook.
 */",
 "/**
 * Display information about the blog.
 *
 * @see get_bloginfo() For possible values for the parameter.
 * @since 0.71
 *
 * @param string $show What to display.
 */",
 "/**
 * Retrieve information about the blog.
 *
 * Some show parameter values are deprecated and will be removed in future
 * versions. These options will trigger the _deprecated_argument() function.
 * The deprecated blog info options are listed in the function contents.
 *
 * The possible values for the \'show\' parameter are listed below.
 * <ol>
 * <li><strong>url</strong> - Blog URI to homepage.</li>
 * <li><strong>wpurl</strong> - Blog URI path to WordPress.</li>
 * <li><strong>description</strong> - Secondary title</li>
 * </ol>
 *
 * The feed URL options can be retrieved from \'rdf_url\' (RSS 0.91),
 * \'rss_url\' (RSS 1.0), \'rss2_url\' (RSS 2.0), or \'atom_url\' (Atom feed). The
 * comment feeds can be retrieved from the \'comments_atom_url\' (Atom comment
 * feed) or \'comments_rss2_url\' (RSS 2.0 comment feed).
 *
 * @since 0.71
 *
 * @param string $show Blog info to retrieve.
 * @param string $filter How to filter what is retrieved.
 * @return string Mostly string values, might be empty.
 */",
 "/**
 * Retrieve the current blog id
 *
 * @since 3.1.0
 *
 * @return int Blog id
 */",
 "/**
 * Display or retrieve page title for all areas of blog.
 *
 * By default, the page title will display the separator before the page title,
 * so that the blog title will be before the page title. This is not good for
 * title display, since the blog title shows up on most tabs and not what is
 * important, which is the page that the user is looking at.
 *
 * There are also SEO benefits to having the blog title after or to the \'right\'
 * or the page title. However, it is mostly common sense to have the blog title
 * to the right with most browsers supporting tabs. You can achieve this by
 * using the seplocation parameter and setting the value to \'right\'. This change
 * was introduced around 2.5.0, in case backwards compatibility of themes is
 * important.
 *
 * @since 1.0.0
 *
 * @param string $sep Optional, default is \'&raquo;\'. How to separate the various items within the page title.
 * @param bool $display Optional, default is true. Whether to display or retrieve title.
 * @param string $seplocation Optional. Direction to display title, \'right\'.
 * @return string|null String on retrieve, null when displaying.
 */",
 "/**
 * Display or retrieve page title for post.
 *
 * This is optimized for single.php template file for displaying the post title.
 *
 * It does not support placing the separator after the title, but by leaving the
 * prefix parameter empty, you can set the title separator manually. The prefix
 * does not automatically place a space between the prefix, so if there should
 * be a space, the parameter value will need to have it at the end.
 *
 * @since 0.71
 *
 * @param string $prefix Optional. What to display before the title.
 * @param bool $display Optional, default is true. Whether to display or retrieve title.
 * @return string|null Title when retrieving, null when displaying or failure.
 */",
 "/**
 * Display or retrieve title for a post type archive.
 *
 * This is optimized for archive.php and archive-{$post_type}.php template files
 * for displaying the title of the post type.
 *
 * @since 3.1.0
 *
 * @param string $prefix Optional. What to display before the title.
 * @param bool $display Optional, default is true. Whether to display or retrieve title.
 * @return string|null Title when retrieving, null when displaying or failure.
 */",
 "/**
 * Display or retrieve page title for category archive.
 *
 * This is useful for category template file or files, because it is optimized
 * for category page title and with less overhead than {@link wp_title()}.
 *
 * It does not support placing the separator after the title, but by leaving the
 * prefix parameter empty, you can set the title separator manually. The prefix
 * does not automatically place a space between the prefix, so if there should
 * be a space, the parameter value will need to have it at the end.
 *
 * @since 0.71
 *
 * @param string $prefix Optional. What to display before the title.
 * @param bool $display Optional, default is true. Whether to display or retrieve title.
 * @return string|null Title when retrieving, null when displaying or failure.
 */",
 "/**
 * Display or retrieve page title for tag post archive.
 *
 * Useful for tag template files for displaying the tag page title. It has less
 * overhead than {@link wp_title()}, because of its limited implementation.
 *
 * It does not support placing the separator after the title, but by leaving the
 * prefix parameter empty, you can set the title separator manually. The prefix
 * does not automatically place a space between the prefix, so if there should
 * be a space, the parameter value will need to have it at the end.
 *
 * @since 2.3.0
 *
 * @param string $prefix Optional. What to display before the title.
 * @param bool $display Optional, default is true. Whether to display or retrieve title.
 * @return string|null Title when retrieving, null when displaying or failure.
 */",
 "/**
 * Display or retrieve page title for taxonomy term archive.
 *
 * Useful for taxonomy term template files for displaying the taxonomy term page title.
 * It has less overhead than {@link wp_title()}, because of its limited implementation.
 *
 * It does not support placing the separator after the title, but by leaving the
 * prefix parameter empty, you can set the title separator manually. The prefix
 * does not automatically place a space between the prefix, so if there should
 * be a space, the parameter value will need to have it at the end.
 *
 * @since 3.1.0
 *
 * @param string $prefix Optional. What to display before the title.
 * @param bool $display Optional, default is true. Whether to display or retrieve title.
 * @return string|null Title when retrieving, null when displaying or failure.
 */",
 "/**
 * Display or retrieve page title for post archive based on date.
 *
 * Useful for when the template only needs to display the month and year, if
 * either are available. Optimized for just this purpose, so if it is all that
 * is needed, should be better than {@link wp_title()}.
 *
 * It does not support placing the separator after the title, but by leaving the
 * prefix parameter empty, you can set the title separator manually. The prefix
 * does not automatically place a space between the prefix, so if there should
 * be a space, the parameter value will need to have it at the end.
 *
 * @since 0.71
 *
 * @param string $prefix Optional. What to display before the title.
 * @param bool $display Optional, default is true. Whether to display or retrieve title.
 * @return string|null Title when retrieving, null when displaying or failure.
 */",
 "/**
 * Retrieve archive link content based on predefined or custom code.
 *
 * The format can be one of four styles. The \'link\' for head element, \'option\'
 * for use in the select element, \'html\' for use in list (either ol or ul HTML
 * elements). Custom content is also supported using the before and after
 * parameters.
 *
 * The \'link\' format uses the link HTML element with the <em>archives</em>
 * relationship. The before and after parameters are not used. The text
 * parameter is used to describe the link.
 *
 * The \'option\' format uses the option HTML element for use in select element.
 * The value is the url parameter and the before and after parameters are used
 * between the text description.
 *
 * The \'html\' format, which is the default, uses the li HTML element for use in
 * the list HTML elements. The before parameter is before the link and the after
 * parameter is after the closing link.
 *
 * The custom format uses the before parameter before the link (\'a\' HTML
 * element) and the after parameter after the closing link tag. If the above
 * three values for the format are not used, then custom format is assumed.
 *
 * @since 1.0.0
 *
 * @param string $url URL to archive.
 * @param string $text Archive text description.
 * @param string $format Optional, default is \'html\'. Can be \'link\', \'option\', \'html\', or custom.
 * @param string $before Optional.
 * @param string $after Optional.
 * @return string HTML link content for archive.
 */",
 "/**
 * Display archive links based on type and format.
 *
 * The \'type\' argument offers a few choices and by default will display monthly
 * archive links. The other options for values are \'daily\', \'weekly\', \'monthly\',
 * \'yearly\', \'postbypost\' or \'alpha\'. Both \'postbypost\' and \'alpha\' display the
 * same archive link list, the difference between the two is that \'alpha\'
 * will order by post title and \'postbypost\' will order by post date.
 *
 * The date archives will logically display dates with links to the archive post
 * page. The \'postbypost\' and \'alpha\' values for \'type\' argument will display
 * the post titles.
 *
 * The \'limit\' argument will only display a limited amount of links, specified
 * by the \'limit\' integer value. By default, there is no limit. The
 * \'show_post_count\' argument will show how many posts are within the archive.
 * By default, the \'show_post_count\' argument is set to false.
 *
 * For the \'format\', \'before\', and \'after\' arguments, see {@link
 * get_archives_link()}. The values of these arguments have to do with that
 * function.
 *
 * @since 1.2.0
 *
 * @param string|array $args Optional. Override defaults.
 */",
 "/**
 * Get number of days since the start of the week.
 *
 * @since 1.5.0
 * @usedby get_calendar()
 *
 * @param int $num Number of day.
 * @return int Days since the start of the week.
 */",
 "/**
 * Display calendar with days that have posts as links.
 *
 * The calendar is cached, which will be retrieved, if it exists. If there are
 * no posts for the month, then it will not be displayed.
 *
 * @since 1.0.0
 *
 * @param bool $initial Optional, default is true. Use initial calendar names.
 * @param bool $echo Optional, default is true. Set to false for return.
 */",
 "/**
 * Purge the cached results of get_calendar.
 *
 * @see get_calendar
 * @since 2.1.0
 */",
 "/**
 * Display all of the allowed tags in HTML format with attributes.
 *
 * This is useful for displaying in the comment area, which elements and
 * attributes are supported. As well as any plugins which want to display it.
 *
 * @since 1.0.1
 * @uses $allowedtags
 *
 * @return string HTML allowed tags entity encoded.
 */",
 "/**
 * Outputs the date in iso8601 format for xml files.
 *
 * @since 1.0.0
 */",
 "/**
 * Display or Retrieve the date the current $post was written (once per date)
 *
 * Will only output the date if the current post\'s date is different from the
 * previous one output.
 *
 * i.e. Only one date listing will show per day worth of posts shown in the loop, even if the
 * function is called several times for each post.
 *
 * HTML output can be filtered with \'the_date\'.
 * Date string output can be filtered with \'get_the_date\'.
 *
 * @since 0.71
 * @uses get_the_date()
 * @param string $d Optional. PHP date format defaults to the date_format option if not specified.
 * @param string $before Optional. Output before the date.
 * @param string $after Optional. Output after the date.
 * @param bool $echo Optional, default is display. Whether to echo the date or return it.
 * @return string|null Null if displaying, string if retrieving.
 */",
 "/**
 * Retrieve the date the current $post was written.
 *
 * Unlike the_date() this function will always return the date.
 * Modify output with \'get_the_date\' filter.
 *
 * @since 3.0.0
 *
 * @param string $d Optional. PHP date format defaults to the date_format option if not specified.
 * @return string|null Null if displaying, string if retrieving.
 */",
 "/**
 * Display the date on which the post was last modified.
 *
 * @since 2.1.0
 *
 * @param string $d Optional. PHP date format defaults to the date_format option if not specified.
 * @param string $before Optional. Output before the date.
 * @param string $after Optional. Output after the date.
 * @param bool $echo Optional, default is display. Whether to echo the date or return it.
 * @return string|null Null if displaying, string if retrieving.
 */",
 "/**
 * Retrieve the date on which the post was last modified.
 *
 * @since 2.1.0
 *
 * @param string $d Optional. PHP date format. Defaults to the \"date_format\" option
 * @return string
 */",
 "/**
 * Display the time at which the post was written.
 *
 * @since 0.71
 *
 * @param string $d Either \'G\', \'U\', or php date format.
 */",
 "/**
 * Retrieve the time at which the post was written.
 *
 * @since 1.5.0
 *
 * @param string $d Optional Either \'G\', \'U\', or php date format defaults to the value specified in the time_format option.
 * @param int|object $post Optional post ID or object. Default is global $post object.
 * @return string
 */",
 "/**
 * Retrieve the time at which the post was written.
 *
 * @since 2.0.0
 *
 * @param string $d Optional Either \'G\', \'U\', or php date format.
 * @param bool $gmt Optional, default is false. Whether to return the gmt time.
 * @param int|object $post Optional post ID or object. Default is global $post object.
 * @param bool $translate Whether to translate the time string
 * @return string
 */",
 "/**
 * Display the time at which the post was last modified.
 *
 * @since 2.0.0
 *
 * @param string $d Optional Either \'G\', \'U\', or php date format defaults to the value specified in the time_format option.
 */",
 "/**
 * Retrieve the time at which the post was last modified.
 *
 * @since 2.0.0
 *
 * @param string $d Optional Either \'G\', \'U\', or php date format defaults to the value specified in the time_format option.
 * @return string
 */",
 "/**
 * Retrieve the time at which the post was last modified.
 *
 * @since 2.0.0
 *
 * @param string $d Optional, default is \'U\'. Either \'G\', \'U\', or php date format.
 * @param bool $gmt Optional, default is false. Whether to return the gmt time.
 * @param int|object $post Optional, default is global post object. A post_id or post object
 * @param bool $translate Optional, default is false. Whether to translate the result
 * @return string Returns timestamp
 */",
 "/**
 * Display the weekday on which the post was written.
 *
 * @since 0.71
 * @uses $wp_locale
 * @uses $post
 */",
 "/**
 * Display the weekday on which the post was written.
 *
 * Will only output the weekday if the current post\'s weekday is different from
 * the previous one output.
 *
 * @since 0.71
 *
 * @param string $before Optional Output before the date.
 * @param string $after Optional Output after the date.
 */",
 "/**
 * Fire the wp_head action
 *
 * @since 1.2.0
 * @uses do_action() Calls \'wp_head\' hook.
 */",
 "/**
 * Fire the wp_footer action
 *
 * @since 1.5.1
 * @uses do_action() Calls \'wp_footer\' hook.
 */",
 "/**
 * Display the links to the general feeds.
 *
 * @since 2.8.0
 *
 * @param array $args Optional arguments.
 */",
 "/**
 * Display the links to the extra feeds such as category feeds.
 *
 * @since 2.8.0
 *
 * @param array $args Optional arguments.
 */",
 "/**
 * Display the link to the Really Simple Discovery service endpoint.
 *
 * @link http://archipelago.phrasewise.com/rsd
 * @since 2.0.0
 */",
 "/**
 * Display the link to the Windows Live Writer manifest file.
 *
 * @link http://msdn.microsoft.com/en-us/library/bb463265.aspx
 * @since 2.3.1
 */",
 "/**
 * Display a noindex meta tag if required by the blog configuration.
 *
 * If a blog is marked as not being public then the noindex meta tag will be
 * output to tell web robots not to index the page content. Add this to the wp_head action.
 * Typical usage is as a wp_head callback. add_action( \'wp_head\', \'noindex\' );
 *
 * @see wp_no_robots
 *
 * @since 2.1.0
 */",
 "/**
 * Display a noindex meta tag.
 *
 * Outputs a noindex meta tag that tells web robots not to index the page content.
 * Typical usage is as a wp_head callback. add_action( \'wp_head\', \'wp_no_robots\' );
 *
 * @since 3.3.0
 */",
 "/**
 * Determine if TinyMCE is available.
 *
 * Checks to see if the user has deleted the tinymce files to slim down there WordPress install.
 *
 * @since 2.1.0
 *
 * @return bool Whether TinyMCE exists.
 */",
 "/**
 * Whether the user should have a WYSIWIG editor.
 *
 * Checks that the user requires a WYSIWIG editor and that the editor is
 * supported in the users browser.
 *
 * @since 2.0.0
 *
 * @return bool
 */",
 "/**
 * Find out which editor should be displayed by default.
 *
 * Works out which of the two editors to display as the current editor for a
 * user.
 *
 * @since 2.5.0
 *
 * @return string Either \'tinymce\', or \'html\', or \'test\'
 */",
 "/**
 * Renders an editor.
 *
 * Using this function is the proper way to output all needed components for both TinyMCE and Quicktags.
 * _WP_Editors should not be used directly. See http://core.trac.wordpress.org/ticket/17144.
 *
 * NOTE: Once initialized the TinyMCE editor cannot be safely moved in the DOM. For that reason
 * running wp_editor() inside of a metabox is not a good idea unless only Quicktags is used.
 * On the post edit screen several actions can be used to include additional editors
 * containing TinyMCE: \'edit_page_form\', \'edit_form_advanced\' and \'dbx_post_sidebar\'.
 * See http://core.trac.wordpress.org/ticket/19173 for more information.
 *
 * @see wp-includes/class-wp-editor.php
 * @since 3.3.0
 *
 * @param string $content Initial content for the editor.
 * @param string $editor_id HTML ID attribute value for the textarea and TinyMCE. Can only be /[a-z]+/.
 * @param array $settings See _WP_Editors::editor().
 */",
 "/**
 * Retrieve the contents of the search WordPress query variable.
 *
 * The search query string is passed through {@link esc_attr()}
 * to ensure that it is safe for placing in an html attribute.
 *
 * @since 2.3.0
 * @uses esc_attr()
 *
 * @param bool $escaped Whether the result is escaped. Default true.
 * 	Only use when you are later escaping it. Do not use unescaped.
 * @return string
 */",
 "/**
 * Display the contents of the search query variable.
 *
 * The search query string is passed through {@link esc_attr()}
 * to ensure that it is safe for placing in an html attribute.
 *
 * @uses esc_attr()
 * @since 2.1.0
 */",
 "/**
 * Display the language attributes for the html tag.
 *
 * Builds up a set of html attributes containing the text direction and language
 * information for the page.
 *
 * @since 2.1.0
 *
 * @param string $doctype The type of html document (xhtml|html).
 */",
 "/**
 * Retrieve paginated link for archive post pages.
 *
 * Technically, the function can be used to create paginated link list for any
 * area. The \'base\' argument is used to reference the url, which will be used to
 * create the paginated links. The \'format\' argument is then used for replacing
 * the page number. It is however, most likely and by default, to be used on the
 * archive post pages.
 *
 * The \'type\' argument controls format of the returned value. The default is
 * \'plain\', which is just a string with the links separated by a newline
 * character. The other possible values are either \'array\' or \'list\'. The
 * \'array\' value will return an array of the paginated link list to offer full
 * control of display. The \'list\' value will place all of the paginated links in
 * an unordered HTML list.
 *
 * The \'total\' argument is the total amount of pages and is an integer. The
 * \'current\' argument is the current page number and is also an integer.
 *
 * An example of the \'base\' argument is \"http://example.com/all_posts.php%_%\"
 * and the \'%_%\' is required. The \'%_%\' will be replaced by the contents of in
 * the \'format\' argument. An example for the \'format\' argument is \"?page=%#%\"
 * and the \'%#%\' is also required. The \'%#%\' will be replaced with the page
 * number.
 *
 * You can include the previous and next links in the list by setting the
 * \'prev_next\' argument to true, which it is by default. You can set the
 * previous text, by using the \'prev_text\' argument. You can set the next text
 * by setting the \'next_text\' argument.
 *
 * If the \'show_all\' argument is set to true, then it will show all of the pages
 * instead of a short list of the pages near the current page. By default, the
 * \'show_all\' is set to false and controlled by the \'end_size\' and \'mid_size\'
 * arguments. The \'end_size\' argument is how many numbers on either the start
 * and the end list edges, by default is 1. The \'mid_size\' argument is how many
 * numbers to either side of current page, but not including current page.
 *
 * It is possible to add query vars to the link by using the \'add_args\' argument
 * and see {@link add_query_arg()} for more information.
 *
 * @since 2.1.0
 *
 * @param string|array $args Optional. Override defaults.
 * @return array|string String of page links or array of page links.
 */",
 "/**
 * Registers an admin colour scheme css file.
 *
 * Allows a plugin to register a new admin colour scheme. For example:
 * <code>
 * wp_admin_css_color(\'classic\', __(\'Classic\'), admin_url(\"css/colors-classic.css\"),
 * array(\'#07273E\', \'#14568A\', \'#D54E21\', \'#2683AE\'));
 * </code>
 *
 * @since 2.5.0
 *
 * @param string $key The unique key for this theme.
 * @param string $name The name of the theme.
 * @param string $url The url of the css file containing the colour scheme.
 * @param array $colors Optional An array of CSS color definitions which are used to give the user a feel for the theme.
 */",
 "/**
 * Registers the default Admin color schemes
 *
 * @since 3.0.0
 */",
 "/**
 * Display the URL of a WordPress admin CSS file.
 *
 * @see WP_Styles::_css_href and its style_loader_src filter.
 *
 * @since 2.3.0
 *
 * @param string $file file relative to wp-admin/ without its \".css\" extension.
 */",
 "/**
 * Enqueues or directly prints a stylesheet link to the specified CSS file.
 *
 * \"Intelligently\" decides to enqueue or to print the CSS file. If the
 * \'wp_print_styles\' action has *not* yet been called, the CSS file will be
 * enqueued. If the wp_print_styles action *has* been called, the CSS link will
 * be printed. Printing may be forced by passing true as the $force_echo
 * (second) parameter.
 *
 * For backward compatibility with WordPress 2.3 calling method: If the $file
 * (first) parameter does not correspond to a registered CSS file, we assume
 * $file is a file relative to wp-admin/ without its \".css\" extension. A
 * stylesheet link to that generated URL is printed.
 *
 * @package WordPress
 * @since 2.3.0
 * @uses $wp_styles WordPress Styles Object
 *
 * @param string $file Optional. Style handle name or file name (without \".css\" extension) relative
 * 	 to wp-admin/. Defaults to \'wp-admin\'.
 * @param bool $force_echo Optional. Force the stylesheet link to be printed rather than enqueued.
 */",
 "/**
 * Enqueues the default ThickBox js and css.
 *
 * If any of the settings need to be changed, this can be done with another js
 * file similar to media-upload.js. That file should
 * require array(\'thickbox\') to ensure it is loaded after.
 *
 * @since 2.5.0
 */",
 "/**
 * Display the XHTML generator that is generated on the wp_head hook.
 *
 * @since 2.5.0
 */",
 "/**
 * Display the generator XML or Comment for RSS, ATOM, etc.
 *
 * Returns the correct generator type for the requested output format. Allows
 * for a plugin to filter generators overall the the_generator filter.
 *
 * @since 2.5.0
 * @uses apply_filters() Calls \'the_generator\' hook.
 *
 * @param string $type The type of generator to output - (html|xhtml|atom|rss2|rdf|comment|export).
 */",
 "/**
 * Creates the generator XML or Comment for RSS, ATOM, etc.
 *
 * Returns the correct generator type for the requested output format. Allows
 * for a plugin to filter generators on an individual basis using the
 * \'get_the_generator_{$type}\' filter.
 *
 * @since 2.5.0
 * @uses apply_filters() Calls \'get_the_generator_$type\' hook.
 *
 * @param string $type The type of generator to return - (html|xhtml|atom|rss2|rdf|comment|export).
 * @return string The HTML content for the generator.
 */",
 "/**
 * Outputs the html checked attribute.
 *
 * Compares the first two arguments and if identical marks as checked
 *
 * @since 1.0.0
 *
 * @param mixed $checked One of the values to compare
 * @param mixed $current (true) The other value to compare if not just true
 * @param bool $echo Whether to echo or just return the string
 * @return string html attribute or empty string
 */",
 "/**
 * Outputs the html selected attribute.
 *
 * Compares the first two arguments and if identical marks as selected
 *
 * @since 1.0.0
 *
 * @param mixed $selected One of the values to compare
 * @param mixed $current (true) The other value to compare if not just true
 * @param bool $echo Whether to echo or just return the string
 * @return string html attribute or empty string
 */",
 "/**
 * Outputs the html disabled attribute.
 *
 * Compares the first two arguments and if identical marks as disabled
 *
 * @since 3.0.0
 *
 * @param mixed $disabled One of the values to compare
 * @param mixed $current (true) The other value to compare if not just true
 * @param bool $echo Whether to echo or just return the string
 * @return string html attribute or empty string
 */",
 "/**
 * Private helper function for checked, selected, and disabled.
 *
 * Compares the first two arguments and if identical marks as $type
 *
 * @since 2.8.0
 * @access private
 *
 * @param any $helper One of the values to compare
 * @param any $current (true) The other value to compare if not just true
 * @param bool $echo Whether to echo or just return the string
 * @param string $type The type of checked|selected|disabled we are doing
 * @return string html attribute or empty string
 */",
 "/**
     */",
 "/**
 * Class used internally by Diff to actually compute the diffs.
 *
 * This class uses the xdiff PECL package (http://pecl.php.net/package/xdiff)
 * to compute the differences between the two input arrays.
 *
 * Copyright 2004-2010 The Horde Project (http://www.horde.org/)
 *
 * See the enclosed file COPYING for license information (LGPL). If you did
 * not receive this file, see http://opensource.org/licenses/lgpl-license.php.
 *
 * @author  Jon Parise <jon@horde.org>
 * @package Text_Diff
 */",
 "/**
 * Retrieve option value based on name of option.
 *
 * If the option does not exist or does not have a value, then the return value
 * will be false. This is useful to check whether you need to install an option
 * and is commonly used during installation of plugin options and to test
 * whether upgrading is required.
 *
 * If the option was serialized then it will be unserialized when it is returned.
 *
 * @since 1.5.0
 * @package WordPress
 * @subpackage Option
 * @uses apply_filters() Calls \'pre_option_$option\' before checking the option.
 * 	Any value other than false will \"short-circuit\" the retrieval of the option
 *	and return the returned value. You should not try to override special options,
 * 	but you will not be prevented from doing so.
 * @uses apply_filters() Calls \'option_$option\', after checking the option, with
 * 	the option value.
 *
 * @param string $option Name of option to retrieve. Expected to not be SQL-escaped.
 * @param mixed $default Optional. Default value to return if the option does not exist.
 * @return mixed Value set for the option.
 */",
 "/**
 * Protect WordPress special option from being modified.
 *
 * Will die if $option is in protected list. Protected options are \'alloptions\'
 * and \'notoptions\' options.
 *
 * @since 2.2.0
 * @package WordPress
 * @subpackage Option
 *
 * @param string $option Option name.
 */",
 "/**
 * Print option value after sanitizing for forms.
 *
 * @uses attr Sanitizes value.
 * @since 1.5.0
 * @package WordPress
 * @subpackage Option
 *
 * @param string $option Option name.
 */",
 "/**
 * Loads and caches all autoloaded options, if available or all options.
 *
 * @since 2.2.0
 * @package WordPress
 * @subpackage Option
 *
 * @return array List of all options.
 */",
 "/**
 * Loads and caches certain often requested site options if is_multisite() and a persistent cache is not being used.
 *
 * @since 3.0.0
 * @package WordPress
 * @subpackage Option
 *
 * @param int $site_id Optional site ID for which to query the options. Defaults to the current site.
 */",
 "/**
 * Update the value of an option that was already added.
 *
 * You do not need to serialize values. If the value needs to be serialized, then
 * it will be serialized before it is inserted into the database. Remember,
 * resources can not be serialized or added as an option.
 *
 * If the option does not exist, then the option will be added with the option
 * value, but you will not be able to set whether it is autoloaded. If you want
 * to set whether an option is autoloaded, then you need to use the add_option().
 *
 * @since 1.0.0
 * @package WordPress
 * @subpackage Option
 *
 * @uses apply_filters() Calls \'pre_update_option_$option\' hook to allow overwriting the
 * 	option value to be stored.
 * @uses do_action() Calls \'update_option\' hook before updating the option.
 * @uses do_action() Calls \'update_option_$option\' and \'updated_option\' hooks on success.
 *
 * @param string $option Option name. Expected to not be SQL-escaped.
 * @param mixed $newvalue Option value. Expected to not be SQL-escaped.
 * @return bool False if value was not updated and true if value was updated.
 */",
 "/**
 * Add a new option.
 *
 * You do not need to serialize values. If the value needs to be serialized, then
 * it will be serialized before it is inserted into the database. Remember,
 * resources can not be serialized or added as an option.
 *
 * You can create options without values and then update the values later.
 * Existing options will not be updated and checks are performed to ensure that you
 * aren\'t adding a protected WordPress option. Care should be taken to not name
 * options the same as the ones which are protected.
 *
 * @package WordPress
 * @subpackage Option
 * @since 1.0.0
 *
 * @uses do_action() Calls \'add_option\' hook before adding the option.
 * @uses do_action() Calls \'add_option_$option\' and \'added_option\' hooks on success.
 *
 * @param string $option Name of option to add. Expected to not be SQL-escaped.
 * @param mixed $value Optional. Option value, can be anything. Expected to not be SQL-escaped.
 * @param mixed $deprecated Optional. Description. Not used anymore.
 * @param bool $autoload Optional. Default is enabled. Whether to load the option when WordPress starts up.
 * @return bool False if option was not added and true if option was added.
 */",
 "/**
 * Removes option by name. Prevents removal of protected WordPress options.
 *
 * @package WordPress
 * @subpackage Option
 * @since 1.2.0
 *
 * @uses do_action() Calls \'delete_option\' hook before option is deleted.
 * @uses do_action() Calls \'deleted_option\' and \'delete_option_$option\' hooks on success.
 *
 * @param string $option Name of option to remove. Expected to not be SQL-escaped.
 * @return bool True, if option is successfully deleted. False on failure.
 */",
 "/**
 * Delete a transient.
 *
 * @since 2.8.0
 * @package WordPress
 * @subpackage Transient
 *
 * @uses do_action() Calls \'delete_transient_$transient\' hook before transient is deleted.
 * @uses do_action() Calls \'deleted_transient\' hook on success.
 *
 * @param string $transient Transient name. Expected to not be SQL-escaped.
 * @return bool true if successful, false otherwise
 */",
 "/**
 * Get the value of a transient.
 *
 * If the transient does not exist or does not have a value, then the return value
 * will be false.
 *
 * @uses apply_filters() Calls \'pre_transient_$transient\' hook before checking the transient.
 * 	Any value other than false will \"short-circuit\" the retrieval of the transient
 *	and return the returned value.
 * @uses apply_filters() Calls \'transient_$option\' hook, after checking the transient, with
 * 	the transient value.
 *
 * @since 2.8.0
 * @package WordPress
 * @subpackage Transient
 *
 * @param string $transient Transient name. Expected to not be SQL-escaped
 * @return mixed Value of transient
 */",
 "/**
 * Set/update the value of a transient.
 *
 * You do not need to serialize values. If the value needs to be serialized, then
 * it will be serialized before it is set.
 *
 * @since 2.8.0
 * @package WordPress
 * @subpackage Transient
 *
 * @uses apply_filters() Calls \'pre_set_transient_$transient\' hook to allow overwriting the
 * 	transient value to be stored.
 * @uses do_action() Calls \'set_transient_$transient\' and \'setted_transient\' hooks on success.
 *
 * @param string $transient Transient name. Expected to not be SQL-escaped.
 * @param mixed $value Transient value. Expected to not be SQL-escaped.
 * @param int $expiration Time until expiration in seconds, default 0
 * @return bool False if value was not set and true if value was set.
 */",
 "/**
 * Saves and restores user interface settings stored in a cookie.
 *
 * Checks if the current user-settings cookie is updated and stores it. When no
 * cookie exists (different browser used), adds the last saved cookie restoring
 * the settings.
 *
 * @package WordPress
 * @subpackage Option
 * @since 2.7.0
 */",
 "/**
 * Retrieve user interface setting value based on setting name.
 *
 * @package WordPress
 * @subpackage Option
 * @since 2.7.0
 *
 * @param string $name The name of the setting.
 * @param string $default Optional default value to return when $name is not set.
 * @return mixed the last saved user setting or the default value/false if it doesn\'t exist.
 */",
 "/**
 * Add or update user interface setting.
 *
 * Both $name and $value can contain only ASCII letters, numbers and underscores.
 * This function has to be used before any output has started as it calls setcookie().
 *
 * @package WordPress
 * @subpackage Option
 * @since 2.8.0
 *
 * @param string $name The name of the setting.
 * @param string $value The value for the setting.
 * @return bool true if set successfully/false if not.
 */",
 "/**
 * Delete user interface settings.
 *
 * Deleting settings would reset them to the defaults.
 * This function has to be used before any output has started as it calls setcookie().
 *
 * @package WordPress
 * @subpackage Option
 * @since 2.7.0
 *
 * @param mixed $names The name or array of names of the setting to be deleted.
 * @return bool true if deleted successfully/false if not.
 */",
 "/**
 * Retrieve all user interface settings.
 *
 * @package WordPress
 * @subpackage Option
 * @since 2.7.0
 *
 * @return array the last saved user settings or empty array.
 */",
 "/**
 * Private. Set all user interface settings.
 *
 * @package WordPress
 * @subpackage Option
 * @since 2.8.0
 *
 * @param unknown $all
 * @return bool
 */",
 "/**
 * Delete the user settings of the current user.
 *
 * @package WordPress
 * @subpackage Option
 * @since 2.7.0
 */",
 "/**
 * Retrieve site option value based on name of option.
 *
 * @see get_option()
 * @package WordPress
 * @subpackage Option
 * @since 2.8.0
 *
 * @uses apply_filters() Calls \'pre_site_option_$option\' before checking the option.
 * 	Any value other than false will \"short-circuit\" the retrieval of the option
 *	and return the returned value.
 * @uses apply_filters() Calls \'site_option_$option\', after checking the  option, with
 * 	the option value.
 *
 * @param string $option Name of option to retrieve. Expected to not be SQL-escaped.
 * @param mixed $default Optional value to return if option doesn\'t exist. Default false.
 * @param bool $use_cache Whether to use cache. Multisite only. Default true.
 * @return mixed Value set for the option.
 */",
 "/**
 * Add a new site option.
 *
 * Existing options will not be updated. Note that prior to 3.3 this wasn\'t the case.
 *
 * @see add_option()
 * @package WordPress
 * @subpackage Option
 * @since 2.8.0
 *
 * @uses apply_filters() Calls \'pre_add_site_option_$option\' hook to allow overwriting the
 * 	option value to be stored.
 * @uses do_action() Calls \'add_site_option_$option\' and \'add_site_option\' hooks on success.
 *
 * @param string $option Name of option to add. Expected to not be SQL-escaped.
 * @param mixed $value Optional. Option value, can be anything. Expected to not be SQL-escaped.
 * @return bool False if option was not added and true if option was added.
 */",
 "/**
 * Removes site option by name.
 *
 * @see delete_option()
 * @package WordPress
 * @subpackage Option
 * @since 2.8.0
 *
 * @uses do_action() Calls \'pre_delete_site_option_$option\' hook before option is deleted.
 * @uses do_action() Calls \'delete_site_option\' and \'delete_site_option_$option\'
 * 	hooks on success.
 *
 * @param string $option Name of option to remove. Expected to not be SQL-escaped.
 * @return bool True, if succeed. False, if failure.
 */",
 "/**
 * Update the value of a site option that was already added.
 *
 * @see update_option()
 * @since 2.8.0
 * @package WordPress
 * @subpackage Option
 *
 * @uses apply_filters() Calls \'pre_update_site_option_$option\' hook to allow overwriting the
 * 	option value to be stored.
 * @uses do_action() Calls \'update_site_option_$option\' and \'update_site_option\' hooks on success.
 *
 * @param string $option Name of option. Expected to not be SQL-escaped.
 * @param mixed $value Option value. Expected to not be SQL-escaped.
 * @return bool False if value was not updated and true if value was updated.
 */",
 "/**
 * Delete a site transient.
 *
 * @since 2.9.0
 * @package WordPress
 * @subpackage Transient
 *
 * @uses do_action() Calls \'delete_site_transient_$transient\' hook before transient is deleted.
 * @uses do_action() Calls \'deleted_site_transient\' hook on success.
 *
 * @param string $transient Transient name. Expected to not be SQL-escaped.
 * @return bool True if successful, false otherwise
 */",
 "/**
 * Get the value of a site transient.
 *
 * If the transient does not exist or does not have a value, then the return value
 * will be false.
 *
 * @see get_transient()
 * @since 2.9.0
 * @package WordPress
 * @subpackage Transient
 *
 * @uses apply_filters() Calls \'pre_site_transient_$transient\' hook before checking the transient.
 * 	Any value other than false will \"short-circuit\" the retrieval of the transient
 *	and return the returned value.
 * @uses apply_filters() Calls \'site_transient_$option\' hook, after checking the transient, with
 * 	the transient value.
 *
 * @param string $transient Transient name. Expected to not be SQL-escaped.
 * @return mixed Value of transient
 */",
 "/**
 * Set/update the value of a site transient.
 *
 * You do not need to serialize values, if the value needs to be serialize, then
 * it will be serialized before it is set.
 *
 * @see set_transient()
 * @since 2.9.0
 * @package WordPress
 * @subpackage Transient
 *
 * @uses apply_filters() Calls \'pre_set_site_transient_$transient\' hook to allow overwriting the
 * 	transient value to be stored.
 * @uses do_action() Calls \'set_site_transient_$transient\' and \'setted_site_transient\' hooks on success.
 *
 * @param string $transient Transient name. Expected to not be SQL-escaped.
 * @param mixed $value Transient value. Expected to not be SQL-escaped.
 * @param int $expiration Time until expiration in seconds, default 0
 * @return bool False if value was not set and true if value was set.
 */",
 "/**
 * \"Inline\" diff renderer.
 *
 * This class renders diffs in the Wiki-style \"inline\" format.
 *
 * @author  Ciprian Popovici
 * @package Text_Diff
 */",
 "/**
 * Installs the blog
 *
 * {@internal Missing Long Description}}
 *
 * @since 2.1.0
 *
 * @param string $blog_title Blog title.
 * @param string $user_name User\'s username.
 * @param string $user_email User\'s email.
 * @param bool $public Whether blog is public.
 * @param null $deprecated Optional. Not used.
 * @param string $user_password Optional. User\'s chosen password. Will default to a random password.
 * @return array Array keys \'url\', \'user_id\', \'password\', \'password_message\'.
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * {@internal Missing Long Description}}
 *
 * @since 2.1.0
 *
 * @param int $user_id User ID.
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * {@internal Missing Long Description}}
 *
 * @since 2.1.0
 *
 * @param string $blog_title Blog title.
 * @param string $blog_url Blog url.
 * @param int $user_id User ID.
 * @param string $password User\'s Password.
 */",
 "/**
 * Run WordPress Upgrade functions.
 *
 * {@internal Missing Long Description}}
 *
 * @since 2.1.0
 *
 * @return null
 */",
 "/**
 * Functions to be called in install and upgrade scripts.
 *
 * {@internal Missing Long Description}}
 *
 * @since 1.0.1
 */",
 "/**
 * Execute changes made in WordPress 1.0.
 *
 * @since 1.0.0
 */",
 "/**
 * Execute changes made in WordPress 1.0.1.
 *
 * @since 1.0.1
 */",
 "/**
 * Execute changes made in WordPress 1.2.
 *
 * @since 1.2.0
 */",
 "/**
 * Execute changes made in WordPress 1.5.
 *
 * @since 1.5.0
 */",
 "/**
 * Execute changes made in WordPress 2.0.
 *
 * @since 2.0.0
 */",
 "/**
 * Execute changes made in WordPress 2.1.
 *
 * @since 2.1.0
 */",
 "/**
 * Execute changes made in WordPress 2.3.
 *
 * @since 2.3.0
 */",
 "/**
 * Remove old options from the database.
 *
 * @since 2.3.0
 */",
 "/**
 * Remove old categories, link2cat, and post2cat database tables.
 *
 * @since 2.3.0
 */",
 "/**
 * Upgrade old slugs made in version 2.2.
 *
 * @since 2.2.0
 */",
 "/**
 * Execute changes made in WordPress 2.5.0.
 *
 * @since 2.5.0
 */",
 "/**
 * Execute changes made in WordPress 2.5.2.
 *
 * @since 2.5.2
 */",
 "/**
 * Execute changes made in WordPress 2.6.
 *
 * @since 2.6.0
 */",
 "/**
 * Execute changes made in WordPress 2.7.
 *
 * @since 2.7.0
 */",
 "/**
 * Execute changes made in WordPress 2.8.
 *
 * @since 2.8.0
 */",
 "/**
 * Execute changes made in WordPress 2.9.
 *
 * @since 2.9.0
 */",
 "/**
 * Execute changes made in WordPress 3.0.
 *
 * @since 3.0.0
 */",
 "/**
 * Execute changes made in WordPress 3.3.
 *
 * @since 3.3.0
 */",
 "/**
 * Execute changes made in WordPress 3.4.
 *
 * @since 3.4.0
 */",
 "/**
 * Execute network level changes
 *
 * @since 3.0.0
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * {@internal Missing Long Description}}
 *
 * @since 1.0.0
 *
 * @param string $table_name Database table name to create.
 * @param string $create_ddl SQL statement to create table.
 * @return bool If table already exists or was created by function.
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * {@internal Missing Long Description}}
 *
 * @since 1.0.1
 *
 * @param string $table Database table name.
 * @param string $index Index name to drop.
 * @return bool True, when finished.
 */",
 "/**
 * {@internal Missing Short Description}}
 *
 * {@internal Missing Long Description}}
 *
 * @since 1.0.1
 *
 * @param string $table Database table name.
 * @param string $index Database table index column.
 * @return bool True, when done with execution.
 */",
 "/**
 ** maybe_add_column()
 ** Add column to db table if it doesn\'t exist.
 ** Returns:  true if already exists or on successful completion
 **           false on error
 */",
 "/**
 * Retrieve all options as it was for 1.2.
 *
 * @since 1.2.0
 *
 * @return array List of options.
 */",
 "/**
 * Version of get_option that is private to install/upgrade.
 *
 * @since 1.5.1
 * @access private
 *
 * @param string $setting Option name.
 * @return mixed
 */",
 "/**
*{@internalMissingShortDescription}}
*
*{@internalMissingLongDescription}}
*
*@since1.5.0
*
*@paramstring$content
*@returnstring
*/",
 "/**
*{@internalMissingShortDescription}}
*
*{@internalMissingLongDescription}}
*
*@since1.5.0
*
*@paramunknown_type$queries
*@paramunknown_type$execute
*@returnunknown
*/",
 "/**
*{@internalMissingShortDescription}}
*
*{@internalMissingLongDescription}}
*
*@since1.5.0
*/",
 "/**
*{@internalMissingShortDescription}}
*
*{@internalMissingLongDescription}}
*
*@since1.5.0
*/",
 "/**
*{@internalMissingShortDescription}}
*
*{@internalMissingLongDescription}}
*
*@since1.5.0
*
*@paramunknown_type$theme_name
*@paramunknown_type$template
*@returnunknown
*/",
 "/**
*{@internalMissingShortDescription}}
*
*{@internalMissingLongDescription}}
*
*@since1.5.0
*
*@paramunknown_type$theme_name
*@paramunknown_type$template
*@returnunknown
*/",
 "/**
*{@internalMissingShortDescription}}
*
*{@internalMissingLongDescription}}
*
*@since1.5.0
*
*@returnunknown
*/",
 "/**
*Translateuserleveltouserrolename.
*
*@since2.0.0
*
*@paramint$levelUserlevel.
*@returnstringUserrolename.
*/",
 "/**
*{@internalMissingShortDescription}}
*
*{@internalMissingLongDescription}}
*
*@since2.1.0
*/",
 "/**
*{@internalMissingShortDescription}}
*
*{@internalMissingLongDescription}}
*
*@since2.2.0
*/",
 "/**
*Runsbeforetheschemaisupgraded.
*
*@since2.9.0
*/",
 "/**
 * Retrieve list of all cacheable WP files
 *
 * Array format: file, version (optional), bool (whether to use src and set ignoreQuery, defaults to true)
 */",
 "/**
 * Structure that store common Atom Feed Properties
 *
 * @package AtomLib
 */",
 "/**
 * Structure that store Atom Entry Properties
 *
 * @package AtomLib
 */",
 "/**
 * AtomLib Atom Parser API
 *
 * @package AtomLib
 */",
 "/**
 * Update the last_updated field for the current blog.
 *
 * @since MU
 */",
 "/**
 * Get a full blog URL, given a blog id.
 *
 * @since MU
 *
 * @param int $blog_id Blog ID
 * @return string
 */",
 "/**
 * Get a full blog URL, given a blog name.
 *
 * @since MU
 *
 * @param string $blogname The (subdomain or directory) name
 * @return string
 */",
 "/**
 * Get a full blog URL, given a domain and a path.
 *
 * @since MU
 *
 * @param string $domain
 * @param string $path
 * @return string
 */",
 "/**
 * Given a blog\'s (subdomain or directory) name, retrieve it\'s id.
 *
 * @since MU
 *
 * @param string $name
 * @return int A blog id
 */",
 "/**
 * Retrieve the details for a blog from the blogs table and blog options.
 *
 * @since MU
 *
 * @param int|string|array $fields A blog ID, a blog name, or an array of fields to query against.
 * @param bool $get_all Whether to retrieve all details or only the details in the blogs table. Default is true.
 * @return object Blog details.
 */",
 "/**
 * Clear the blog details cache.
 *
 * @since MU
 *
 * @param int $blog_id Blog ID
 */",
 "/**
 * Update the details for a blog. Updates the blogs table for a given blog id.
 *
 * @since MU
 *
 * @param int $blog_id Blog ID
 * @param array $details Array of details keyed by blogs table field names.
 * @return bool True if update succeeds, false otherwise.
 */",
 "/**
 * Retrieve option value based on setting name and blog_id.
 *
 * If the option does not exist or does not have a value, then the return value
 * will be false. This is useful to check whether you need to install an option
 * and is commonly used during installation of plugin options and to test
 * whether upgrading is required.
 *
 * There is a filter called \'blog_option_$option\' with the $option being
 * replaced with the option name. The filter takes two parameters. $value and
 * $blog_id. It returns $value.
 * The \'option_$option\' filter in get_option() is not called.
 *
 * @since MU
 * @uses apply_filters() Calls \'blog_option_$optionname\' with the option name value.
 *
 * @param int $blog_id Optional. Blog ID, can be null to refer to the current blog.
 * @param string $setting Name of option to retrieve. Should already be SQL-escaped.
 * @param string $default (optional) Default value returned if option not found.
 * @return mixed Value set for the option.
 */",
 "/**
 * Add an option for a particular blog.
 *
 * @since MU
 *
 * @param int $id The blog id
 * @param string $key The option key
 * @param mixed $value The option value
 * @return bool True on success, false on failure.
 */",
 "/**
 * Delete an option for a particular blog.
 *
 * @since MU
 *
 * @param int $id The blog id
 * @param string $key The option key
 * @return bool True on success, false on failure.
 */",
 "/**
 * Update an option for a particular blog.
 *
 * @since MU
 *
 * @param int $id The blog id
 * @param string $key The option key
 * @param mixed $value The option value
 * @return bool True on success, false on failrue.
 */",
 "/**
 * Switch the current blog.
 *
 * This function is useful if you need to pull posts, or other information,
 * from other blogs. You can switch back afterwards using restore_current_blog().
 *
 * Things that aren\'t switched:
 *  - autoloaded options. See #14992
 *  - plugins. See #14941
 *
 * @see restore_current_blog()
 * @since MU
 *
 * @param int $new_blog The id of the blog you want to switch to. Default: current blog
 * @param bool $validate Whether to check if $new_blog exists before proceeding
 * @return bool	True on success, False if the validation failed
 */",
 "/**
 * Restore the current blog, after calling switch_to_blog()
 *
 * @see switch_to_blog()
 * @since MU
 *
 * @return bool True on success, False if we\'re already on the current blog
 */",
 "/**
 * Check if a particular blog is archived.
 *
 * @since MU
 *
 * @param int $id The blog id
 * @return string Whether the blog is archived or not
 */",
 "/**
 * Update the \'archived\' status of a particular blog.
 *
 * @since MU
 *
 * @param int $id The blog id
 * @param string $archived The new status
 * @return string $archived
 */",
 "/**
 * Update a blog details field.
 *
 * @since MU
 *
 * @param int $blog_id BLog ID
 * @param string $pref A field name
 * @param string $value Value for $pref
 * @return string $value
 */",
 "/**
 * Get a blog details field.
 *
 * @since MU
 *
 * @param int $id The blog id
 * @param string $pref A field name
 * @return bool $value
 */",
 "/**
 * Get a list of most recently updated blogs.
 *
 * @since MU
 *
 * @param mixed $deprecated Not used
 * @param int $start The offset
 * @param int $quantity The maximum number of blogs to retrieve. Default is 40.
 * @return array The list of blogs
 */",
 "/**
 * Handler for updating the blog date when a post is published or an already published post is changed.
 *
 * @since 3.3.0
 *
 * @param string $new_status The new post status
 * @param string $old_status The old post status
 * @param object $post Post object
 */",
 "/**
 * Handler for updating the blog date when a published post is deleted.
 *
 * @since 3.4.0
 *
 * @param int $post_id Post ID
 */",
 "/**
 * Retrieve the author of the current comment.
 *
 * If the comment has an empty comment_author field, then \'Anonymous\' person is
 * assumed.
 *
 * @since 1.5.0
 * @uses apply_filters() Calls \'get_comment_author\' hook on the comment author
 *
 * @param int $comment_ID The ID of the comment for which to retrieve the author. Optional.
 * @return string The comment author
 */",
 "/**
 * Displays the author of the current comment.
 *
 * @since 0.71
 * @uses apply_filters() Calls \'comment_author\' on comment author before displaying
 *
 * @param int $comment_ID The ID of the comment for which to print the author. Optional.
 */",
 "/**
 * Retrieve the email of the author of the current comment.
 *
 * @since 1.5.0
 * @uses apply_filters() Calls the \'get_comment_author_email\' hook on the comment author email
 * @uses $comment
 *
 * @param int $comment_ID The ID of the comment for which to get the author\'s email. Optional.
 * @return string The current comment author\'s email
 */",
 "/**
 * Display the email of the author of the current global $comment.
 *
 * Care should be taken to protect the email address and assure that email
 * harvesters do not capture your commentors\' email address. Most assume that
 * their email address will not appear in raw form on the blog. Doing so will
 * enable anyone, including those that people don\'t want to get the email
 * address and use it for their own means good and bad.
 *
 * @since 0.71
 * @uses apply_filters() Calls \'author_email\' hook on the author email
 *
 * @param int $comment_ID The ID of the comment for which to print the author\'s email. Optional.
 */",
 "/**
 * Display the html email link to the author of the current comment.
 *
 * Care should be taken to protect the email address and assure that email
 * harvesters do not capture your commentors\' email address. Most assume that
 * their email address will not appear in raw form on the blog. Doing so will
 * enable anyone, including those that people don\'t want to get the email
 * address and use it for their own means good and bad.
 *
 * @since 0.71
 * @uses apply_filters() Calls \'comment_email\' hook for the display of the comment author\'s email
 * @uses get_comment_author_email_link() For generating the link
 * @global object $comment The current Comment row object
 *
 * @param string $linktext The text to display instead of the comment author\'s email address
 * @param string $before The text or HTML to display before the email link.
 * @param string $after The text or HTML to display after the email link.
 */",
 "/**
 * Return the html email link to the author of the current comment.
 *
 * Care should be taken to protect the email address and assure that email
 * harvesters do not capture your commentors\' email address. Most assume that
 * their email address will not appear in raw form on the blog. Doing so will
 * enable anyone, including those that people don\'t want to get the email
 * address and use it for their own means good and bad.
 *
 * @since 2.7
 * @uses apply_filters() Calls \'comment_email\' hook for the display of the comment author\'s email
 * @global object $comment The current Comment row object
 *
 * @param string $linktext The text to display instead of the comment author\'s email address
 * @param string $before The text or HTML to display before the email link.
 * @param string $after The text or HTML to display after the email link.
 */",
 "/** @todo Only call these functions when they are needed. Include in if... else blocks */",
 "/**
 * Retrieve the html link to the url of the author of the current comment.
 *
 * @since 1.5.0
 * @uses apply_filters() Calls \'get_comment_author_link\' hook on the complete link HTML or author
 *
 * @param int $comment_ID The ID of the comment for which to get the author\'s link. Optional.
 * @return string Comment Author name or HTML link for author\'s URL
 */",
 "/**
 * Display the html link to the url of the author of the current comment.
 *
 * @since 0.71
 * @see get_comment_author_link() Echoes result
 *
 * @param int $comment_ID The ID of the comment for which to print the author\'s link. Optional.
 */",
 "/**
 * Retrieve the IP address of the author of the current comment.
 *
 * @since 1.5.0
 * @uses $comment
 * @uses apply_filters()
 *
 * @param int $comment_ID The ID of the comment for which to get the author\'s IP address. Optional.
 * @return string The comment author\'s IP address.
 */",
 "/**
 * Display the IP address of the author of the current comment.
 *
 * @since 0.71
 * @see get_comment_author_IP() Echoes Result
 *
 * @param int $comment_ID The ID of the comment for which to print the author\'s IP address. Optional.
 */",
 "/**
 * Retrieve the url of the author of the current comment.
 *
 * @since 1.5.0
 * @uses apply_filters() Calls \'get_comment_author_url\' hook on the comment author\'s URL
 *
 * @param int $comment_ID The ID of the comment for which to get the author\'s URL. Optional.
 * @return string
 */",
 "/**
 * Display the url of the author of the current comment.
 *
 * @since 0.71
 * @uses apply_filters()
 * @uses get_comment_author_url() Retrieves the comment author\'s URL
 *
 * @param int $comment_ID The ID of the comment for which to print the author\'s URL. Optional.
 */",
 "/**
 * Retrieves the HTML link of the url of the author of the current comment.
 *
 * $linktext parameter is only used if the URL does not exist for the comment
 * author. If the URL does exist then the URL will be used and the $linktext
 * will be ignored.
 *
 * Encapsulate the HTML link between the $before and $after. So it will appear
 * in the order of $before, link, and finally $after.
 *
 * @since 1.5.0
 * @uses apply_filters() Calls the \'get_comment_author_url_link\' on the complete HTML before returning.
 *
 * @param string $linktext The text to display instead of the comment author\'s email address
 * @param string $before The text or HTML to display before the email link.
 * @param string $after The text or HTML to display after the email link.
 * @return string The HTML link between the $before and $after parameters
 */",
 "/**
 * Displays the HTML link of the url of the author of the current comment.
 *
 * @since 0.71
 * @see get_comment_author_url_link() Echoes result
 *
 * @param string $linktext The text to display instead of the comment author\'s email address
 * @param string $before The text or HTML to display before the email link.
 * @param string $after The text or HTML to display after the email link.
 */",
 "/**
 * Generates semantic classes for each comment element
 *
 * @since 2.7.0
 *
 * @param string|array $class One or more classes to add to the class list
 * @param int $comment_id An optional comment ID
 * @param int $post_id An optional post ID
 * @param bool $echo Whether comment_class should echo or return
 */",
 "/**
 * Returns the classes for the comment div as an array
 *
 * @since 2.7.0
 *
 * @param string|array $class One or more classes to add to the class list
 * @param int $comment_id An optional comment ID
 * @param int $post_id An optional post ID
 * @return array Array of classes
 */",
 "/**
 * Retrieve the comment date of the current comment.
 *
 * @since 1.5.0
 * @uses apply_filters() Calls \'get_comment_date\' hook with the formatted date and the $d parameter respectively
 * @uses $comment
 *
 * @param string $d The format of the date (defaults to user\'s config)
 * @param int $comment_ID The ID of the comment for which to get the date. Optional.
 * @return string The comment\'s date
 */",
 "/**
 * Display the comment date of the current comment.
 *
 * @since 0.71
 *
 * @param string $d The format of the date (defaults to user\'s config)
 * @param int $comment_ID The ID of the comment for which to print the date. Optional.
 */",
 "/**
 * Retrieve the excerpt of the current comment.
 *
 * Will cut each word and only output the first 20 words with \'...\' at the end.
 * If the word count is less than 20, then no truncating is done and no \'...\'
 * will appear.
 *
 * @since 1.5.0
 * @uses $comment
 * @uses apply_filters() Calls \'get_comment_excerpt\' on truncated comment
 *
 * @param int $comment_ID The ID of the comment for which to get the excerpt. Optional.
 * @return string The maybe truncated comment with 20 words or less
 */",
 "/**
 * Display the excerpt of the current comment.
 *
 * @since 1.2.0
 * @uses apply_filters() Calls \'comment_excerpt\' hook before displaying excerpt
 *
 * @param int $comment_ID The ID of the comment for which to print the excerpt. Optional.
 */",
 "/**
 * Retrieve the comment id of the current comment.
 *
 * @since 1.5.0
 * @uses $comment
 * @uses apply_filters() Calls the \'get_comment_ID\' hook for the comment ID
 *
 * @return int The comment ID
 */",
 "/**
 * Displays the comment id of the current comment.
 *
 * @since 0.71
 * @see get_comment_ID() Echoes Result
 */",
 "/**
 * Retrieve the link to a given comment.
 *
 * @since 1.5.0
 * @uses $comment
 *
 * @param object|string|int $comment Comment to retrieve.
 * @param array $args Optional args.
 * @return string The permalink to the given comment.
 */",
 "/**
 * Retrieves the link to the current post comments.
 *
 * @since 1.5.0
 *
 * @param int $post_id Optional post id
 * @return string The link to the comments
 */",
 "/**
 * Displays the link to the current post comments.
 *
 * @since 0.71
 *
 * @param string $deprecated Not Used
 * @param bool $deprecated_2 Not Used
 */",
 "/**
 * Retrieve the amount of comments a post has.
 *
 * @since 1.5.0
 * @uses apply_filters() Calls the \'get_comments_number\' hook on the number of comments
 *
 * @param int $post_id The Post ID
 * @return int The number of comments a post has
 */",
 "/**
 * Display the language string for the number of comments the current post has.
 *
 * @since 0.71
 * @uses apply_filters() Calls the \'comments_number\' hook on the output and number of comments respectively.
 *
 * @param string $zero Text for no comments
 * @param string $one Text for one comment
 * @param string $more Text for more than one comment
 * @param string $deprecated Not used.
 */",
 "/**
 * Retrieve the text of the current comment.
 *
 * @since 1.5.0
 * @uses $comment
 *
 * @param int $comment_ID The ID of the comment for which to get the text. Optional.
 * @return string The comment content
 */",
 "/**
 * Displays the text of the current comment.
 *
 * @since 0.71
 * @uses apply_filters() Passes the comment content through the \'comment_text\' hook before display
 * @uses get_comment_text() Gets the comment content
 *
 * @param int $comment_ID The ID of the comment for which to print the text. Optional.
 */",
 "/**
 * Retrieve the comment time of the current comment.
 *
 * @since 1.5.0
 * @uses $comment
 * @uses apply_filter() Calls \'get_comment_time\' hook with the formatted time, the $d parameter, and $gmt parameter passed.
 *
 * @param string $d Optional. The format of the time (defaults to user\'s config)
 * @param bool $gmt Whether to use the GMT date
 * @param bool $translate Whether to translate the time (for use in feeds)
 * @return string The formatted time
 */",
 "/**
 * Display the comment time of the current comment.
 *
 * @since 0.71
 *
 * @param string $d Optional. The format of the time (defaults to user\'s config)
 */",
 "/**
 * Retrieve the comment type of the current comment.
 *
 * @since 1.5.0
 * @uses $comment
 * @uses apply_filters() Calls the \'get_comment_type\' hook on the comment type
 *
 * @param int $comment_ID The ID of the comment for which to get the type. Optional.
 * @return string The comment type
 */",
 "/**
 * Display the comment type of the current comment.
 *
 * @since 0.71
 *
 * @param string $commenttxt The string to display for comment type
 * @param string $trackbacktxt The string to display for trackback type
 * @param string $pingbacktxt The string to display for pingback type
 */",
 "/**
 * Retrieve The current post\'s trackback URL.
 *
 * There is a check to see if permalink\'s have been enabled and if so, will
 * retrieve the pretty path. If permalinks weren\'t enabled, the ID of the
 * current post is used and appended to the correct page to go to.
 *
 * @since 1.5.0
 * @uses apply_filters() Calls \'trackback_url\' on the resulting trackback URL
 *
 * @return string The trackback URL after being filtered
 */",
 "/**
 * Displays the current post\'s trackback URL.
 *
 * @since 0.71
 * @uses get_trackback_url() Gets the trackback url for the current post
 *
 * @param bool $deprecated_echo Remove backwards compat in 2.5
 * @return void|string Should only be used to echo the trackback URL, use get_trackback_url() for the result instead.
 */",
 "/**
 * Generates and displays the RDF for the trackback information of current post.
 *
 * Deprecated in 3.0.0, and restored in 3.0.1.
 *
 * @since 0.71
 *
 * @param int $deprecated Not used (Was $timezone = 0)
 */",
 "/**
 * Whether the current post is open for comments.
 *
 * @since 1.5.0
 * @uses $post
 *
 * @param int $post_id An optional post ID to check instead of the current post.
 * @return bool True if the comments are open
 */",
 "/**
 * Whether the current post is open for pings.
 *
 * @since 1.5.0
 * @uses $post
 *
 * @param int $post_id An optional post ID to check instead of the current post.
 * @return bool True if pings are accepted
 */",
 "/**
 * Displays form token for unfiltered comments.
 *
 * Will only display nonce token if the current user has permissions for
 * unfiltered html. Won\'t display the token for other users.
 *
 * The function was backported to 2.0.10 and was added to versions 2.1.3 and
 * above. Does not exist in versions prior to 2.0.10 in the 2.0 branch and in
 * the 2.1 branch, prior to 2.1.3. Technically added in 2.2.0.
 *
 * Backported to 2.0.10.
 *
 * @since 2.1.3
 * @uses $post Gets the ID of the current post for the token
 */",
 "/**
	 * Comment author information fetched from the comment cookies.
	 *
	 * @uses wp_get_current_commenter()
	 */",
 "/**
	 * The name of the current comment author escaped for use in attributes.
	 */",
 "/**
	 * The email address of the current comment author escaped for use in attributes.
	 */",
 "/**
	 * The url of the current comment author escaped for use in attributes.
	 */",
 "/**
 * Loads the comment template specified in $file.
 *
 * Will not display the comments template if not on single post or page, or if
 * the post does not have comments.
 *
 * Uses the WordPress database object to query for the comments. The comments
 * are passed through the \'comments_array\' filter hook with the list of comments
 * and the post ID respectively.
 *
 * The $file path is passed through a filter hook called, \'comments_template\'
 * which includes the TEMPLATEPATH and $file combined. Tries the $filtered path
 * first and if it fails it will require the default comment template from the
 * default theme. If either does not exist, then the WordPress process will be
 * halted. It is advised for that reason, that the default theme is not deleted.
 *
 * @since 1.5.0
 * @global array $comment List of comment objects for the current post
 * @uses $wpdb
 * @uses $post
 * @uses $withcomments Will not try to get the comments if the post has none.
 *
 * @param string $file Optional, default \'/comments.php\'. The file to load
 * @param bool $separate_comments Optional, whether to separate the comments by comment type. Default is false.
 * @return null Returns null if no comments appear
 */",
 "/**
 * Displays the JS popup script to show a comment.
 *
 * If the $file parameter is empty, then the home page is assumed. The defaults
 * for the window are 400px by 400px.
 *
 * For the comment link popup to work, this function has to be called or the
 * normal comment link will be assumed.
 *
 * @since 0.71
 * @global string $wpcommentspopupfile The URL to use for the popup window
 * @global int $wpcommentsjavascript Whether to use JavaScript. Set when function is called
 *
 * @param int $width Optional. The width of the popup window
 * @param int $height Optional. The height of the popup window
 * @param string $file Optional. Sets the location of the popup window
 */",
 "/**
 * Displays the link to the comments popup window for the current post ID.
 *
 * Is not meant to be displayed on single posts and pages. Should be used on the
 * lists of posts
 *
 * @since 0.71
 * @uses $wpcommentspopupfile
 * @uses $wpcommentsjavascript
 * @uses $post
 *
 * @param string $zero The string to display when no comments
 * @param string $one The string to display when only one comment is available
 * @param string $more The string to display when there are more than one comment
 * @param string $css_class The CSS class to use for comments
 * @param string $none The string to display when comments have been turned off
 * @return null Returns null on single posts and pages.
 */",
 "/**
 * Retrieve HTML content for reply to comment link.
 *
 * The default arguments that can be override are \'add_below\', \'respond_id\',
 * \'reply_text\', \'login_text\', and \'depth\'. The \'login_text\' argument will be
 * used, if the user must log in or register first before posting a comment. The
 * \'reply_text\' will be used, if they can post a reply. The \'add_below\' and
 * \'respond_id\' arguments are for the JavaScript moveAddCommentForm() function
 * parameters.
 *
 * @since 2.7.0
 *
 * @param array $args Optional. Override default options.
 * @param int $comment Optional. Comment being replied to.
 * @param int $post Optional. Post that the comment is going to be displayed on.
 * @return string|bool|null Link to show comment form, if successful. False, if comments are closed.
 */",
 "/**
 * Displays the HTML content for reply to comment link.
 *
 * @since 2.7.0
 * @see get_comment_reply_link() Echoes result
 *
 * @param array $args Optional. Override default options.
 * @param int $comment Optional. Comment being replied to.
 * @param int $post Optional. Post that the comment is going to be displayed on.
 * @return string|bool|null Link to show comment form, if successful. False, if comments are closed.
 */",
 "/**
 * Retrieve HTML content for reply to post link.
 *
 * The default arguments that can be override are \'add_below\', \'respond_id\',
 * \'reply_text\', \'login_text\', and \'depth\'. The \'login_text\' argument will be
 * used, if the user must log in or register first before posting a comment. The
 * \'reply_text\' will be used, if they can post a reply. The \'add_below\' and
 * \'respond_id\' arguments are for the JavaScript moveAddCommentForm() function
 * parameters.
 *
 * @since 2.7.0
 *
 * @param array $args Optional. Override default options.
 * @param int|object $post Optional. Post that the comment is going to be displayed on. Defaults to current post.
 * @return string|bool|null Link to show comment form, if successful. False, if comments are closed.
 */",
 "/**
 * Displays the HTML content for reply to post link.
 * @since 2.7.0
 * @see get_post_reply_link()
 *
 * @param array $args Optional. Override default options.
 * @param int|object $post Optional. Post that the comment is going to be displayed on.
 * @return string|bool|null Link to show comment form, if successful. False, if comments are closed.
 */",
 "/**
 * Retrieve HTML content for cancel comment reply link.
 *
 * @since 2.7.0
 *
 * @param string $text Optional. Text to display for cancel reply link.
 */",
 "/**
 * Display HTML content for cancel comment reply link.
 *
 * @since 2.7.0
 *
 * @param string $text Optional. Text to display for cancel reply link.
 */",
 "/**
 * Retrieve hidden input HTML for replying to comments.
 *
 * @since 3.0.0
 *
 * @return string Hidden input HTML for replying to comments
 */",
 "/**
 * Output hidden input HTML for replying to comments.
 *
 * @since 2.7.0
 * @see get_comment_id_fields() Echoes result
 */",
 "/**
 * Display text based on comment reply status. Only affects users with Javascript disabled.
 *
 * @since 2.7.0
 *
 * @param string $noreplytext Optional. Text to display when not replying to a comment.
 * @param string $replytext Optional. Text to display when replying to a comment. Accepts \"%s\" for the author of the comment being replied to.
 * @param string $linktoparent Optional. Boolean to control making the author\'s name a link to their comment.
 */",
 "/**
	 * @see Walker::start_lvl()
	 * @since 2.7.0
	 *
	 * @param string $output Passed by reference. Used to append additional content.
	 * @param int $depth Depth of comment.
	 * @param array $args Uses \'style\' argument for type of HTML list.
	 */",
 "/**
	 * @see Walker::end_lvl()
	 * @since 2.7.0
	 *
	 * @param string $output Passed by reference. Used to append additional content.
	 * @param int $depth Depth of comment.
	 * @param array $args Will only append content if style argument value is \'ol\' or \'ul\'.
	 */",
 "/**
	 * This function is designed to enhance Walker::display_element() to
	 * display children of higher nesting levels than selected inline on
	 * the highest depth level displayed. This prevents them being orphaned
	 * at the end of the comment list.
	 *
	 * Example: max_depth = 2, with 5 levels of nested content.
	 * 1
	 *  1.1
	 *    1.1.1
	 *    1.1.1.1
	 *    1.1.1.1.1
	 *    1.1.2
	 *    1.1.2.1
	 * 2
	 *  2.2
	 *
	 */",
 "/**
	 * @see Walker::start_el()
	 * @since 2.7.0
	 *
	 * @param string $output Passed by reference. Used to append additional content.
	 * @param object $comment Comment data object.
	 * @param int $depth Depth of comment in reference to parents.
	 * @param array $args
	 */",
 "/**
	 * @see Walker::end_el()
	 * @since 2.7.0
	 *
	 * @param string $output Passed by reference. Used to append additional content.
	 * @param object $comment
	 * @param int $depth Depth of comment.
	 * @param array $args
	 */",
 "/**
 * HTML comment list class.
 *
 * @package WordPress
 * @uses Walker
 * @since 2.7.0
 */",
 "/**
 * List comments
 *
 * Used in the comments.php template to list comments for a particular post
 *
 * @since 2.7.0
 * @uses Walker_Comment
 *
 * @param string|array $args Formatting options
 * @param array $comments Optional array of comment objects. Defaults to $wp_query->comments
 */",
 "/**
 * Outputs a complete commenting form for use within a template.
 * Most strings and form fields may be controlled through the $args array passed
 * into the function, while you may also choose to use the comment_form_default_fields
 * filter to modify the array of default fields if you\'d just like to add a new
 * one or remove a single field. All fields are also individually passed through
 * a filter of the form comment_form_field_$name where $name is the key used
 * in the array of fields.
 *
 * @since 3.0.0
 * @param array $args Options for strings, fields etc in the form
 * @param mixed $post_id Post ID to generate the form for, uses the current post if null
 * @return void
 */",
 "/**
	 * Add entry to the PO structure
	 *
	 * @param object &$entry
	 * @return bool true on success, false if the entry doesn\'t have a key
	 */",
 "/**
	 * Sets $header PO header to $value
	 *
	 * If the header already exists, it will be overwritten
	 *
	 * TODO: this should be out of this class, it is gettext specific
	 *
	 * @param string $header header name, without trailing :
	 * @param string $value header value, without trailing \n
	 */",
 "/**
	 * Given the number of items, returns the 0-based index of the plural form to use
	 *
	 * Here, in the base Translations class, the common logic for English is implemented:
	 * 	0 if there is one element, 1 otherwise
	 *
	 * This function should be overrided by the sub-classes. For example MO/PO can derive the logic
	 * from their headers.
	 *
	 * @param integer $count number of items
	 */",
 "/**
	 * Merge $other in the current object.
	 *
	 * @param Object &$other Another Translation object, whose translations will be merged in this one
	 * @return void
	 **/",
 "/**
	 * The gettext implmentation of select_plural_form.
	 *
	 * It lives in this class, because there are more than one descendand, which will use it and
	 * they can\'t share it effectively.
	 *
	 */",
 "/**
	 * Makes a function, which will return the right translation index, according to the
	 * plural forms header
	 */",
 "/**
	 * Adds parantheses to the inner parts of ternary operators in
	 * plural expressions, because PHP evaluates ternary oerators from left to right
	 * 
	 * @param string $expression the expression without parentheses
	 * @return string the expression with parentheses added
	 */",
 "/**
 * Provides the same interface as Translations, but doesn\'t do anything
 */",
 "/**
 * Add a straight rewrite rule.
 *
 * @see WP_Rewrite::add_rule() for long description.
 * @since 2.1.0
 *
 * @param string $regex Regular Expression to match request against.
 * @param string $redirect Page to redirect to.
 * @param string $after Optional, default is \'bottom\'. Where to add rule, can also be \'top\'.
 */",
 "/**
 * Add a new rewrite tag (like %postname%).
 *
 * The $query parameter is optional. If it is omitted you must ensure that
 * you call this on, or before, the \'init\' hook. This is because $query defaults
 * to \"$tag=\", and for this to work a new query var has to be added.
 *
 * @see WP_Rewrite::add_rewrite_tag()
 * @since 2.1.0
 *
 * @param string $tag Name of the new rewrite tag.
 * @param string $regex Regular expression to substitute the tag for in rewrite rules.
 * @param string $query String to append to the rewritten query. Must end in \'=\'. Optional.
 */",
 "/**
 * Add permalink structure.
 *
 * @see WP_Rewrite::add_permastruct()
 * @since 3.0.0
 *
 * @param string $name Name for permalink structure.
 * @param string $struct Permalink structure.
 * @param array $args Optional configuration for building the rules from the permalink structure,
 *     see {@link WP_Rewrite::add_permastruct()} for full details.
 */",
 "/**
 * Add a new feed type like /atom1/.
 *
 * @since 2.1.0
 *
 * @param string $feedname
 * @param callback $function Callback to run on feed display.
 * @return string Feed action name.
 */",
 "/**
 * Remove rewrite rules and then recreate rewrite rules.
 *
 * @see WP_Rewrite::flush_rules()
 * @since 3.0.0
 *
 * @param bool $hard Whether to update .htaccess (hard flush) or just update
 * 	rewrite_rules transient (soft flush). Default is true (hard).
 */",
 "/**
 * Add an endpoint, like /trackback/.
 *
 * Adding an endpoint creates extra rewrite rules for each of the matching
 * places specified by the provided bitmask. For example:
 *
 * <code>
 * add_rewrite_endpoint( \'json\', EP_PERMALINK | EP_PAGES );
 * </code>
 *
 * will add a new rewrite rule ending with \"json(/(.*))?/?$\" for every permastruct
 * that describes a permalink (post) or page. This is rewritten to \"json=$match\"
 * where $match is the part of the URL matched by the endpoint regex (e.g. \"foo\" in
 * \"<permalink>/json/foo/\").
 *
 * A new query var with the same name as the endpoint will also be created.
 *
 * When specifying $places ensure that you are using the EP_* constants (or a
 * combination of them using the bitwise OR operator) as their values are not
 * guaranteed to remain static (especially EP_ALL).
 *
 * Be sure to flush the rewrite rules - flush_rewrite_rules() - when your plugin gets
 * activated and deactivated.
 *
 * @since 2.1.0
 * @see WP_Rewrite::add_endpoint()
 * @global object $wp_rewrite
 *
 * @param string $name Name of the endpoint.
 * @param int $places Endpoint mask describing the places the endpoint should be added.
 */",
 "/**
 * Filter the URL base for taxonomies.
 *
 * To remove any manually prepended /index.php/.
 *
 * @access private
 * @since 2.6.0
 *
 * @param string $base The taxonomy base that we\'re going to filter
 * @return string
 */",
 "/**
 * Examine a url and try to determine the post ID it represents.
 *
 * Checks are supposedly from the hosted site blog.
 *
 * @since 1.0.0
 *
 * @param string $url Permalink to check.
 * @return int Post ID, or 0 on failure.
 */",
 "/**
	 * Whether permalinks are being used.
	 *
	 * This can be either rewrite module or permalink in the HTTP query string.
	 *
	 * @since 1.5.0
	 * @access public
	 *
	 * @return bool True, if permalinks are enabled.
	 */",
 "/**
	 * Whether permalinks are being used and rewrite module is not enabled.
	 *
	 * Means that permalink links are enabled and index.php is in the URL.
	 *
	 * @since 1.5.0
	 * @access public
	 *
	 * @return bool
	 */",
 "/**
	 * Whether permalinks are being used and rewrite module is enabled.
	 *
	 * Using permalinks and index.php is not in the URL.
	 *
	 * @since 1.5.0
	 * @access public
	 *
	 * @return bool
	 */",
 "/**
	 * Index for matches for usage in preg_*() functions.
	 *
	 * The format of the string is, with empty matches property value, \'$NUM\'.
	 * The \'NUM\' will be replaced with the value in the $number parameter. With
	 * the matches property not empty, the value of the returned string will
	 * contain that value of the matches property. The format then will be
	 * \'$MATCHES[NUM]\', with MATCHES as the value in the property and NUM the
	 * value of the $number parameter.
	 *
	 * @since 1.5.0
	 * @access public
	 *
	 * @param int $number Index number.
	 * @return string
	 */",
 "/**
	 * Retrieve all page and attachments for pages URIs.
	 *
	 * The attachments are for those that have pages as parents and will be
	 * retrieved.
	 *
	 * @since 2.5.0
	 * @access public
	 *
	 * @return array Array of page URIs as first element and attachment URIs as second element.
	 */",
 "/**
	 * Retrieve all of the rewrite rules for pages.
	 *
	 * @since 1.5.0
	 * @access public
	 *
	 * @return array
	 */",
 "/**
	 * Retrieve date permalink structure, with year, month, and day.
	 *
	 * The permalink structure for the date, if not set already depends on the
	 * permalink structure. It can be one of three formats. The first is year,
	 * month, day; the second is day, month, year; and the last format is month,
	 * day, year. These are matched against the permalink structure for which
	 * one is used. If none matches, then the default will be used, which is
	 * year, month, day.
	 *
	 * Prevents post ID and date permalinks from overlapping. In the case of
	 * post_id, the date permalink will be prepended with front permalink with
	 * \'date/\' before the actual permalink to form the complete date permalink
	 * structure.
	 *
	 * @since 1.5.0
	 * @access public
	 *
	 * @return bool|string False on no permalink structure. Date permalink structure.
	 */",
 "/**
	 * Retrieve the year permalink structure without month and day.
	 *
	 * Gets the date permalink structure and strips out the month and day
	 * permalink structures.
	 *
	 * @since 1.5.0
	 * @access public
	 *
	 * @return bool|string False on failure. Year structure on success.
	 */",
 "/**
	 * Retrieve the month permalink structure without day and with year.
	 *
	 * Gets the date permalink structure and strips out the day permalink
	 * structures. Keeps the year permalink structure.
	 *
	 * @since 1.5.0
	 * @access public
	 *
	 * @return bool|string False on failure. Year/Month structure on success.
	 */",
 "/**
	 * Retrieve the day permalink structure with month and year.
	 *
	 * Keeps date permalink structure with all year, month, and day.
	 *
	 * @since 1.5.0
	 * @access public
	 *
	 * @return bool|string False on failure. Year/Month/Day structure on success.
	 */",
 "/**
	 * Retrieve the permalink structure for categories.
	 *
	 * If the category_base property has no value, then the category structure
	 * will have the front property value, followed by \'category\', and finally
	 * \'%category%\'. If it does, then the root property will be used, along with
	 * the category_base property value.
	 *
	 * @since 1.5.0
	 * @access public
	 *
	 * @return bool|string False on failure. Category permalink structure.
	 */",
 "/**
	 * Retrieve the permalink structure for tags.
	 *
	 * If the tag_base property has no value, then the tag structure will have
	 * the front property value, followed by \'tag\', and finally \'%tag%\'. If it
	 * does, then the root property will be used, along with the tag_base
	 * property value.
	 *
	 * @since 2.3.0
	 * @access public
	 *
	 * @return bool|string False on failure. Tag permalink structure.
	 */",
 "/**
	 * Retrieve extra permalink structure by name.
	 *
	 * @since 2.5.0
	 * @access public
	 *
	 * @param string $name Permalink structure name.
	 * @return string|bool False if not found. Permalink structure string.
	 */",
 "/**
	 * Retrieve the author permalink structure.
	 *
	 * The permalink structure is front property, author base, and finally
	 * \'/%author%\'. Will set the author_structure property and then return it
	 * without attempting to set the value again.
	 *
	 * @since 1.5.0
	 * @access public
	 *
	 * @return string|bool False if not found. Permalink structure string.
	 */",
 "/**
	 * Retrieve the search permalink structure.
	 *
	 * The permalink structure is root property, search base, and finally
	 * \'/%search%\'. Will set the search_structure property and then return it
	 * without attempting to set the value again.
	 *
	 * @since 1.5.0
	 * @access public
	 *
	 * @return string|bool False if not found. Permalink structure string.
	 */",
 "/**
	 * Retrieve the page permalink structure.
	 *
	 * The permalink structure is root property, and \'%pagename%\'. Will set the
	 * page_structure property and then return it without attempting to set the
	 * value again.
	 *
	 * @since 1.5.0
	 * @access public
	 *
	 * @return string|bool False if not found. Permalink structure string.
	 */",
 "/**
	 * Retrieve the feed permalink structure.
	 *
	 * The permalink structure is root property, feed base, and finally
	 * \'/%feed%\'. Will set the feed_structure property and then return it
	 * without attempting to set the value again.
	 *
	 * @since 1.5.0
	 * @access public
	 *
	 * @return string|bool False if not found. Permalink structure string.
	 */",
 "/**
	 * Retrieve the comment feed permalink structure.
	 *
	 * The permalink structure is root property, comment base property, feed
	 * base and finally \'/%feed%\'. Will set the comment_feed_structure property
	 * and then return it without attempting to set the value again.
	 *
	 * @since 1.5.0
	 * @access public
	 *
	 * @return string|bool False if not found. Permalink structure string.
	 */",
 "/**
	 * Add or update existing rewrite tags (e.g. %postname%).
	 *
	 * If the tag already exists, replace the existing pattern and query for
	 * that tag, otherwise add the new tag.
	 *
	 * @see WP_Rewrite::$rewritecode
	 * @see WP_Rewrite::$rewritereplace
	 * @see WP_Rewrite::$queryreplace
	 * @since 1.5.0
	 * @access public
	 *
	 * @param string $tag Name of the rewrite tag to add or update.
	 * @param string $regex Regular expression to substitute the tag for in rewrite rules.
	 * @param string $query String to append to the rewritten query. Must end in \'=\'.
	 */",
 "/**
	 * Generate rewrite rules from a permalink structure.
	 *
	 * The main WP_Rewrite function for building the rewrite rule list. The
	 * contents of the function is a mix of black magic and regular expressions,
	 * so best just ignore the contents and move to the parameters.
	 *
	 * @since 1.5.0
	 * @access public
	 *
	 * @param string $permalink_structure The permalink structure.
	 * @param int $ep_mask Endpoint mask defining what endpoints are added to the structure. Default is EP_NONE.
	 * @param bool $paged Should archive pagination rules be added for the structure? Default is true.
	 * @param bool $feed Should feed rewrite rules be added for the structure? Default is true.
	 * @param bool $forcomments Should the feed rules be a query for a comments feed? Default is false.
	 * @param bool $walk_dirs Should the \'directories\' making up the structure be walked over and rewrite rules
	 *                        built for each in turn? Default is true.
	 * @param bool $endpoints Should endpoints be applied to the generated rewrite rules? Default is true.
	 * @return array Rewrite rule list.
	 */",
 "/**
	 * Generate Rewrite rules with permalink structure and walking directory only.
	 *
	 * Shorten version of {@link WP_Rewrite::generate_rewrite_rules()} that
	 * allows for shorter list of parameters. See the method for longer
	 * description of what generating rewrite rules does.
	 *
	 * @uses WP_Rewrite::generate_rewrite_rules() See for long description and rest of parameters.
	 * @since 1.5.0
	 * @access public
	 *
	 * @param string $permalink_structure The permalink structure to generate rules.
	 * @param bool $walk_dirs Optional, default is false. Whether to create list of directories to walk over.
	 * @return array
	 */",
 "/**
	 * Construct rewrite matches and queries from permalink structure.
	 *
	 * Runs the action \'generate_rewrite_rules\' with the parameter that is an
	 * reference to the current WP_Rewrite instance to further manipulate the
	 * permalink structures and rewrite rules. Runs the \'rewrite_rules_array\'
	 * filter on the full rewrite rule array.
	 *
	 * There are two ways to manipulate the rewrite rules, one by hooking into
	 * the \'generate_rewrite_rules\' action and gaining full control of the
	 * object or just manipulating the rewrite rule array before it is passed
	 * from the function.
	 *
	 * @since 1.5.0
	 * @access public
	 *
	 * @return array An associate array of matches and queries.
	 */",
 "/**
	 * Retrieve the rewrite rules.
	 *
	 * The difference between this method and {@link
	 * WP_Rewrite::rewrite_rules()} is that this method stores the rewrite rules
	 * in the \'rewrite_rules\' option and retrieves it. This prevents having to
	 * process all of the permalinks to get the rewrite rules in the form of
	 * caching.
	 *
	 * @since 1.5.0
	 * @access public
	 *
	 * @return array Rewrite rules.
	 */",
 "/**
	 * Retrieve mod_rewrite formatted rewrite rules to write to .htaccess.
	 *
	 * Does not actually write to the .htaccess file, but creates the rules for
	 * the process that will.
	 *
	 * Will add the non_wp_rules property rules to the .htaccess file before
	 * the WordPress rewrite rules one.
	 *
	 * @since 1.5.0
	 * @access public
	 *
	 * @return string
	 */",
 "/**
	 * Retrieve IIS7 URL Rewrite formatted rewrite rules to write to web.config file.
	 *
	 * Does not actually write to the web.config file, but creates the rules for
	 * the process that will.
	 *
	 * @since 2.8.0
	 * @access public
	 *
	 * @return string
	 */",
 "/**
	 * Add a straight rewrite rule.
	 *
	 * Any value in the $after parameter that isn\'t \'bottom\' will be placed at
	 * the top of the rules.
	 *
	 * @since 2.1.0
	 * @access public
	 *
	 * @param string $regex Regular expression to match against request.
	 * @param string $redirect URL regex redirects to when regex matches request.
	 * @param string $after Optional, default is bottom. Location to place rule.
	 */",
 "/**
	 * Add a rule that doesn\'t redirect to index.php.
	 *
	 * Can redirect to any place.
	 *
	 * @since 2.1.0
	 * @access public
	 *
	 * @param string $regex Regular expression to match against request.
	 * @param string $redirect URL regex redirects to when regex matches request.
	 */",
 "/**
	 * Add an endpoint, like /trackback/.
	 *
	 * See {@link add_rewrite_endpoint()} for full documentation.
	 *
	 * @see add_rewrite_endpoint()
	 * @since 2.1.0
	 * @access public
	 * @uses WP::add_query_var()
	 *
	 * @param string $name Name of the endpoint.
	 * @param int $places Endpoint mask describing the places the endpoint should be added.
	 */",
 "/**
	 * Add a new permalink structure.
	 *
	 * A permalink structure (permastruct) is an abstract definition of a set of rewrite rules; it
	 * is an easy way of expressing a set of regular expressions that rewrite to a set of query strings.
	 * The new permastruct is added to the {@link WP_Rewrite::$extra_permastructs} array. When the
	 * rewrite rules are built by {@link WP_Rewrite::rewrite_rules()} all of these extra permastructs
	 * are passed to {@link WP_Rewrite::generate_rewrite_rules()} which transforms them into the
	 * regular expressions that many love to hate.
	 *
	 * The $args parameter gives you control over how {@link WP_Rewrite::generate_rewrite_rules()}
	 * works on the new permastruct.
	 *
	 * @since 2.5.0
	 * @access public
	 *
	 * @param string $name Name for permalink structure.
	 * @param string $struct Permalink structure (e.g. category/%category%)
	 * @param array $args Optional configuration for building the rules from the permalink structure:
	 *     - with_front (bool) - Should the structure be prepended with WP_Rewrite::$front? Default is true.
	 *     - ep_mask (int) - Endpoint mask defining what endpoints are added to the structure. Default is EP_NONE.
	 *     - paged (bool) - Should archive pagination rules be added for the structure? Default is true.
	 *     - feed (bool) - Should feed rewrite rules be added for the structure? Default is true.
	 *     - forcomments (bool) - Should the feed rules be a query for a comments feed? Default is false.
	 *     - walk_dirs (bool) - Should the \'directories\' making up the structure be walked over and rewrite
	 *                          rules built for each in turn? Default is true.
	 *     - endpoints (bool) - Should endpoints be applied to the generated rewrite rules? Default is true.
	 */",
 "/**
	 * Remove rewrite rules and then recreate rewrite rules.
	 *
	 * Calls {@link WP_Rewrite::wp_rewrite_rules()} after removing the
	 * \'rewrite_rules\' option. If the function named \'save_mod_rewrite_rules\'
	 * exists, it will be called.
	 *
	 * @since 2.0.1
	 * @access public
	 * @param bool $hard Whether to update .htaccess (hard flush) or just update rewrite_rules option (soft flush). Default is true (hard).
	 */",
 "/**
	 * Sets up the object\'s properties.
	 *
	 * The \'use_verbose_page_rules\' object property will be set to true if the
	 * permalink structure begins with one of the following: \'%postname%\', \'%category%\',
	 * \'%tag%\', or \'%author%\'.
	 *
	 * @since 1.5.0
	 * @access public
	 */",
 "/**
	 * Set the main permalink structure for the blog.
	 *
	 * Will update the \'permalink_structure\' option, if there is a difference
	 * between the current permalink structure and the parameter value. Calls
	 * {@link WP_Rewrite::init()} after the option is updated.
	 *
	 * Fires the \'permalink_structure_changed\' action once the init call has
	 * processed passing the old and new values
	 *
	 * @since 1.5.0
	 * @access public
	 *
	 * @param string $permalink_structure Permalink structure.
	 */",
 "/**
	 * Set the category base for the category permalink.
	 *
	 * Will update the \'category_base\' option, if there is a difference between
	 * the current category base and the parameter value. Calls
	 * {@link WP_Rewrite::init()} after the option is updated.
	 *
	 * @since 1.5.0
	 * @access public
	 *
	 * @param string $category_base Category permalink structure base.
	 */",
 "/**
	 * Set the tag base for the tag permalink.
	 *
	 * Will update the \'tag_base\' option, if there is a difference between the
	 * current tag base and the parameter value. Calls
	 * {@link WP_Rewrite::init()} after the option is updated.
	 *
	 * @since 2.3.0
	 * @access public
	 *
	 * @param string $tag_base Tag permalink structure base.
	 */",
 "/**
	 * Constructor - Calls init(), which runs setup.
	 *
	 * @since 1.5.0
	 * @access public
	 *
	 * @return WP_Rewrite
	 */",
 "/**
 * WordPress Rewrite Component.
 *
 * The WordPress Rewrite class writes the rewrite module rules to the .htaccess
 * file. It also handles parsing the request to get the correct setup for the
 * WordPress Query class.
 *
 * The Rewrite along with WP class function as a front controller for WordPress.
 * You can add rules to trigger your page view and processing using this
 * component. The full functionality of a front controller does not exist,
 * meaning you can\'t define how the template files load based on the rewrite
 * rules.
 *
 * @since 1.5.0
 */",
 "/**
 * Post ID global
 * @name $post_ID
 * @var int
 */",
 "/**
 * Plugins List Table class.
 *
 * @package WordPress
 * @subpackage List_Table
 * @since 3.1.0
 * @access private
 */",
 "/**
 * WordPress Filesystem Class for implementing FTP Sockets.
 *
 * @since 2.5
 * @package WordPress
 * @subpackage Filesystem
 * @uses WP_Filesystem_Base Extends class
 */",
 "/**
 * Creates the initial post types when \'init\' action is fired.
 *
 * @since 2.9.0
 */",
 "/**
 * Retrieve attached file path based on attachment ID.
 *
 * You can optionally send it through the \'get_attached_file\' filter, but by
 * default it will just return the file path unfiltered.
 *
 * The function works by getting the single post meta name, named
 * \'_wp_attached_file\' and returning it. This is a convenience function to
 * prevent looking up the meta name and provide a mechanism for sending the
 * attached filename through a filter.
 *
 * @since 2.0.0
 * @uses apply_filters() Calls \'get_attached_file\' on file path and attachment ID.
 *
 * @param int $attachment_id Attachment ID.
 * @param bool $unfiltered Whether to apply filters.
 * @return string|bool The file path to the attached file, or false if the attachment does not exist.
 */",
 "/**
 * Update attachment file path based on attachment ID.
 *
 * Used to update the file path of the attachment, which uses post meta name
 * \'_wp_attached_file\' to store the path of the attachment.
 *
 * @since 2.1.0
 * @uses apply_filters() Calls \'update_attached_file\' on file path and attachment ID.
 *
 * @param int $attachment_id Attachment ID
 * @param string $file File path for the attachment
 * @return bool False on failure, true on success.
 */",
 "/**
 * Return relative path to an uploaded file.
 *
 * The path is relative to the current upload dir.
 *
 * @since 2.9.0
 * @uses apply_filters() Calls \'_wp_relative_upload_path\' on file path.
 *
 * @param string $path Full path to the file
 * @return string relative path on success, unchanged path on failure.
 */",
 "/**
 * Retrieve all children of the post parent ID.
 *
 * Normally, without any enhancements, the children would apply to pages. In the
 * context of the inner workings of WordPress, pages, posts, and attachments
 * share the same table, so therefore the functionality could apply to any one
 * of them. It is then noted that while this function does not work on posts, it
 * does not mean that it won\'t work on posts. It is recommended that you know
 * what context you wish to retrieve the children of.
 *
 * Attachments may also be made the child of a post, so if that is an accurate
 * statement (which needs to be verified), it would then be possible to get
 * all of the attachments for a post. Attachments have since changed since
 * version 2.5, so this is most likely unaccurate, but serves generally as an
 * example of what is possible.
 *
 * The arguments listed as defaults are for this function and also of the
 * {@link get_posts()} function. The arguments are combined with the
 * get_children defaults and are then passed to the {@link get_posts()}
 * function, which accepts additional arguments. You can replace the defaults in
 * this function, listed below and the additional arguments listed in the
 * {@link get_posts()} function.
 *
 * The \'post_parent\' is the most important argument and important attention
 * needs to be paid to the $args parameter. If you pass either an object or an
 * integer (number), then just the \'post_parent\' is grabbed and everything else
 * is lost. If you don\'t specify any arguments, then it is assumed that you are
 * in The Loop and the post parent will be grabbed for from the current post.
 *
 * The \'post_parent\' argument is the ID to get the children. The \'numberposts\'
 * is the amount of posts to retrieve that has a default of \'-1\', which is
 * used to get all of the posts. Giving a number higher than 0 will only
 * retrieve that amount of posts.
 *
 * The \'post_type\' and \'post_status\' arguments can be used to choose what
 * criteria of posts to retrieve. The \'post_type\' can be anything, but WordPress
 * post types are \'post\', \'pages\', and \'attachments\'. The \'post_status\'
 * argument will accept any post status within the write administration panels.
 *
 * @see get_posts() Has additional arguments that can be replaced.
 * @internal Claims made in the long description might be inaccurate.
 *
 * @since 2.0.0
 *
 * @param mixed $args Optional. User defined arguments for replacing the defaults.
 * @param string $output Optional. Constant for return type, either OBJECT (default), ARRAY_A, ARRAY_N.
 * @return array|bool False on failure and the type will be determined by $output parameter.
 */",
 "/**
 * Get extended entry info (<!--more-->).
 *
 * There should not be any space after the second dash and before the word
 * \'more\'. There can be text or space(s) after the word \'more\', but won\'t be
 * referenced.
 *
 * The returned array has \'main\', \'extended\', and \'more_text\' keys. Main has the text before
 * the <code><!--more--></code>. The \'extended\' key has the content after the
 * <code><!--more--></code> comment. The \'more_text\' key has the custom \"Read More\" text.
 *
 * @since 1.0.0
 *
 * @param string $post Post content.
 * @return array Post before (\'main\'), after (\'extended\'), and custom readmore (\'more_text\').
 */",
 "/**
 * Retrieves post data given a post ID or post object.
 *
 * See {@link sanitize_post()} for optional $filter values. Also, the parameter
 * $post, must be given as a variable, since it is passed by reference.
 *
 * @since 1.5.1
 * @uses $wpdb
 * @link http://codex.wordpress.org/Function_Reference/get_post
 *
 * @param int|object $post Post ID or post object.
 * @param string $output Optional, default is Object. Either OBJECT, ARRAY_A, or ARRAY_N.
 * @param string $filter Optional, default is raw.
 * @return mixed Post data
 */",
 "/**
 * Retrieve ancestors of a post.
 *
 * @since 2.5.0
 *
 * @param int|object $post Post ID or post object
 * @return array Ancestor IDs or empty array if none are found.
 */",
 "/**
 * Retrieve data from a post field based on Post ID.
 *
 * Examples of the post field will be, \'post_type\', \'post_status\', \'post_content\',
 * etc and based off of the post object property or key names.
 *
 * The context values are based off of the taxonomy filter functions and
 * supported values are found within those functions.
 *
 * @since 2.3.0
 * @uses sanitize_post_field() See for possible $context values.
 *
 * @param string $field Post field name
 * @param id $post Post ID
 * @param string $context Optional. How to filter the field. Default is display.
 * @return WP_Error|string Value in post field or WP_Error on failure
 */",
 "/**
 * Retrieve the mime type of an attachment based on the ID.
 *
 * This function can be used with any post type, but it makes more sense with
 * attachments.
 *
 * @since 2.0.0
 *
 * @param int $ID Optional. Post ID.
 * @return bool|string False on failure or returns the mime type
 */",
 "/**
 * Retrieve the format slug for a post
 *
 * @since 3.1.0
 *
 * @param int|object $post A post
 *
 * @return mixed The format if successful. False if no format is set. WP_Error if errors.
 */",
 "/**
 * Check if a post has a particular format
 *
 * @since 3.1.0
 * @uses has_term()
 *
 * @param string $format The format to check for
 * @param object|id $post The post to check. If not supplied, defaults to the current post if used in the loop.
 * @return bool True if the post has the format, false otherwise.
 */",
 "/**
 * Assign a format to a post
 *
 * @since 3.1.0
 *
 * @param int|object $post The post for which to assign a format
 * @param string $format  A format to assign. Use an empty string or array to remove all formats from the post.
 * @return mixed WP_Error on error. Array of affected term IDs on success.
 */",
 "/**
 * Retrieve the post status based on the Post ID.
 *
 * If the post ID is of an attachment, then the parent post status will be given
 * instead.
 *
 * @since 2.0.0
 *
 * @param int $ID Post ID
 * @return string|bool Post status or false on failure.
 */",
 "/**
 * Retrieve all of the WordPress supported post statuses.
 *
 * Posts have a limited set of valid status values, this provides the
 * post_status values and descriptions.
 *
 * @since 2.5.0
 *
 * @return array List of post statuses.
 */",
 "/**
 * Retrieve all of the WordPress support page statuses.
 *
 * Pages have a limited set of valid status values, this provides the
 * post_status values and descriptions.
 *
 * @since 2.5.0
 *
 * @return array List of page statuses.
 */",
 "/**
 * Register a post status. Do not use before init.
 *
 * A simple function for creating or modifying a post status based on the
 * parameters given. The function will accept an array (second optional
 * parameter), along with a string for the post status name.
 *
 *
 * Optional $args contents:
 *
 * label - A descriptive name for the post status marked for translation. Defaults to $post_status.
 * public - Whether posts of this status should be shown in the front end of the site. Defaults to true.
 * exclude_from_search - Whether to exclude posts with this post status from search results. Defaults to false.
 * show_in_admin_all_list - Whether to include posts in the edit listing for their post type
 * show_in_admin_status_list - Show in the list of statuses with post counts at the top of the edit
 *                             listings, e.g. All (12) | Published (9) | My Custom Status (2) ...
 *
 * Arguments prefixed with an _underscore shouldn\'t be used by plugins and themes.
 *
 * @package WordPress
 * @subpackage Post
 * @since 3.0.0
 * @uses $wp_post_statuses Inserts new post status object into the list
 *
 * @param string $post_status Name of the post status.
 * @param array|string $args See above description.
 */",
 "/**
 * Retrieve a post status object by name
 *
 * @package WordPress
 * @subpackage Post
 * @since 3.0.0
 * @uses $wp_post_statuses
 * @see register_post_status
 * @see get_post_statuses
 *
 * @param string $post_status The name of a registered post status
 * @return object A post status object
 */",
 "/**
 * Get a list of all registered post status objects.
 *
 * @package WordPress
 * @subpackage Post
 * @since 3.0.0
 * @uses $wp_post_statuses
 * @see register_post_status
 * @see get_post_status_object
 *
 * @param array|string $args An array of key => value arguments to match against the post status objects.
 * @param string $output The type of output to return, either post status \'names\' or \'objects\'. \'names\' is the default.
 * @param string $operator The logical operation to perform. \'or\' means only one element
 *  from the array needs to match; \'and\' means all elements must match. The default is \'and\'.
 * @return array A list of post status names or objects
 */",
 "/**
 * Whether the post type is hierarchical.
 *
 * A false return value might also mean that the post type does not exist.
 *
 * @since 3.0.0
 * @see get_post_type_object
 *
 * @param string $post_type Post type name
 * @return bool Whether post type is hierarchical.
 */",
 "/**
 * Checks if a post type is registered.
 *
 * @since 3.0.0
 * @uses get_post_type_object()
 *
 * @param string $post_type Post type name
 * @return bool Whether post type is registered.
 */",
 "/**
 * Retrieve the post type of the current post or of a given post.
 *
 * @since 2.1.0
 *
 * @uses $post The Loop current post global
 *
 * @param mixed $the_post Optional. Post object or post ID.
 * @return bool|string post type or false on failure.
 */",
 "/**
 * Retrieve a post type object by name
 *
 * @package WordPress
 * @subpackage Post
 * @since 3.0.0
 * @uses $wp_post_types
 * @see register_post_type
 * @see get_post_types
 *
 * @param string $post_type The name of a registered post type
 * @return object A post type object
 */",
 "/**
 * Get a list of all registered post type objects.
 *
 * @package WordPress
 * @subpackage Post
 * @since 2.9.0
 * @uses $wp_post_types
 * @see register_post_type
 *
 * @param array|string $args An array of key => value arguments to match against the post type objects.
 * @param string $output The type of output to return, either post type \'names\' or \'objects\'. \'names\' is the default.
 * @param string $operator The logical operation to perform. \'or\' means only one element
 *  from the array needs to match; \'and\' means all elements must match. The default is \'and\'.
 * @return array A list of post type names or objects
 */",
 "/**
 * Register a post type. Do not use before init.
 *
 * A function for creating or modifying a post type based on the
 * parameters given. The function will accept an array (second optional
 * parameter), along with a string for the post type name.
 *
 * Optional $args contents:
 *
 * - label - Name of the post type shown in the menu. Usually plural. If not set, labels[\'name\'] will be used.
 * - labels - An array of labels for this post type.
 *     * If not set, post labels are inherited for non-hierarchical types and page labels for hierarchical ones.
 *     * You can see accepted values in {@link get_post_type_labels()}.
 * - description - A short descriptive summary of what the post type is. Defaults to blank.
 * - public - Whether a post type is intended for use publicly either via the admin interface or by front-end users.
 *     * Defaults to false.
 *     * While the default settings of exclude_from_search, publicly_queryable, show_ui, and show_in_nav_menus are
 *       inherited from public, each does not rely on this relationship and controls a very specific intention.
 * - exclude_from_search - Whether to exclude posts with this post type from front end search results.
 *     * If not set, the the opposite of public\'s current value is used.
 * - publicly_queryable - Whether queries can be performed on the front end for the post type as part of parse_request().
 *     * ?post_type={post_type_key}
 *     * ?{post_type_key}={single_post_slug}
 *     * ?{post_type_query_var}={single_post_slug}
 *     * If not set, the default is inherited from public.
 * - show_ui - Whether to generate a default UI for managing this post type in the admin.
 *     * If not set, the default is inherited from public.
 * - show_in_nav_menus - Makes this post type available for selection in navigation menus.
 *     * If not set, the default is inherited from public.
 * - show_in_menu - Where to show the post type in the admin menu.
 *     * If true, the post type is shown in its own top level menu.
 *     * If false, no menu is shown
 *     * If a string of an existing top level menu (eg. \'tools.php\' or \'edit.php?post_type=page\'), the post type will
 *       be placed as a sub menu of that.
 *     * show_ui must be true.
 *     * If not set, the default is inherited from show_ui
 * - show_in_admin_bar - Makes this post type available via the admin bar.
 *     * If not set, the default is inherited from show_in_menu
 * - menu_position - The position in the menu order the post type should appear.
 *     * show_in_menu must be true
 *     * Defaults to null, which places it at the bottom of its area.
 * - menu_icon - The url to the icon to be used for this menu. Defaults to use the posts icon.
 * - capability_type - The string to use to build the read, edit, and delete capabilities. Defaults to \'post\'.
 *     * May be passed as an array to allow for alternative plurals when using this argument as a base to construct the
 *       capabilities, e.g. array(\'story\', \'stories\').
 * - capabilities - Array of capabilities for this post type.
 *     * By default the capability_type is used as a base to construct capabilities.
 *     * You can see accepted values in {@link get_post_type_capabilities()}.
 * - map_meta_cap - Whether to use the internal default meta capability handling. Defaults to false.
 * - hierarchical - Whether the post type is hierarchical (e.g. page). Defaults to false.
 * - supports - An alias for calling add_post_type_support() directly. Defaults to title and editor.
 *     * See {@link add_post_type_support()} for documentation.
 * - register_meta_box_cb - Provide a callback function that will be called when setting up the
 *     meta boxes for the edit form. Do remove_meta_box() and add_meta_box() calls in the callback.
 * - taxonomies - An array of taxonomy identifiers that will be registered for the post type.
 *     * Default is no taxonomies.
 *     * Taxonomies can be registered later with register_taxonomy() or register_taxonomy_for_object_type().
 * - has_archive - True to enable post type archives. Default is false.
 *     * Will generate the proper rewrite rules if rewrite is enabled.
 * - rewrite - Triggers the handling of rewrites for this post type. Defaults to true, using $post_type as slug.
 *     * To prevent rewrite, set to false.
 *     * To specify rewrite rules, an array can be passed with any of these keys
 *         * \'slug\' => string Customize the permastruct slug. Defaults to $post_type key
 *         * \'with_front\' => bool Should the permastruct be prepended with WP_Rewrite::$front. Defaults to true.
 *         * \'feeds\' => bool Should a feed permastruct be built for this post type. Inherits default from has_archive.
 *         * \'pages\' => bool Should the permastruct provide for pagination. Defaults to true.
 *         * \'ep_mask\' => const Assign an endpoint mask.
 *             * If not specified and permalink_epmask is set, inherits from permalink_epmask.
 *             * If not specified and permalink_epmask is not set, defaults to EP_PERMALINK
 * - query_var - Sets the query_var key for this post type. Defaults to $post_type key
 *     * If false, a post type cannot be loaded at ?{query_var}={post_slug}
 *     * If specified as a string, the query ?{query_var_string}={post_slug} will be valid.
 * - can_export - Allows this post type to be exported. Defaults to true.
 * - delete_with_user - Whether to delete posts of this type when deleting a user.
 *     * If true, posts of this type belonging to the user will be moved to trash when then user is deleted.
 *     * If false, posts of this type belonging to the user will *not* be trashed or deleted.
 *     * If not set (the default), posts are trashed if post_type_supports(\'author\'). Otherwise posts are not trashed or deleted.
 * - _builtin - true if this post type is a native or \"built-in\" post_type. THIS IS FOR INTERNAL USE ONLY!
 * - _edit_link - URL segement to use for edit link of this post type. THIS IS FOR INTERNAL USE ONLY!
 *
 * @since 2.9.0
 * @uses $wp_post_types Inserts new post type object into the list
 *
 * @param string $post_type Post type key, must not exceed 20 characters
 * @param array|string $args See optional args description above.
 * @return object|WP_Error the registered post type object, or an error object
 */",
 "/**
 * Builds an object with all post type capabilities out of a post type object
 *
 * Post type capabilities use the \'capability_type\' argument as a base, if the
 * capability is not set in the \'capabilities\' argument array or if the
 * \'capabilities\' argument is not supplied.
 *
 * The capability_type argument can optionally be registered as an array, with
 * the first value being singular and the second plural, e.g. array(\'story, \'stories\')
 * Otherwise, an \'s\' will be added to the value for the plural form. After
 * registration, capability_type will always be a string of the singular value.
 *
 * By default, seven keys are accepted as part of the capabilities array:
 *
 * - edit_post, read_post, and delete_post are meta capabilities, which are then
 *   generally mapped to corresponding primitive capabilities depending on the
 *   context, which would be the post being edited/read/deleted and the user or
 *   role being checked. Thus these capabilities would generally not be granted
 *   directly to users or roles.
 *
 * - edit_posts - Controls whether objects of this post type can be edited.
 * - edit_others_posts - Controls whether objects of this type owned by other users
 *   can be edited. If the post type does not support an author, then this will
 *   behave like edit_posts.
 * - publish_posts - Controls publishing objects of this post type.
 * - read_private_posts - Controls whether private objects can be read.
 *
 * These four primitive capabilities are checked in core in various locations.
 * There are also seven other primitive capabilities which are not referenced
 * directly in core, except in map_meta_cap(), which takes the three aforementioned
 * meta capabilities and translates them into one or more primitive capabilities
 * that must then be checked against the user or role, depending on the context.
 *
 * - read - Controls whether objects of this post type can be read.
 * - delete_posts - Controls whether objects of this post type can be deleted.
 * - delete_private_posts - Controls whether private objects can be deleted.
 * - delete_published_posts - Controls whether published objects can be deleted.
 * - delete_others_posts - Controls whether objects owned by other users can be
 *   can be deleted. If the post type does not support an author, then this will
 *   behave like delete_posts.
 * - edit_private_posts - Controls whether private objects can be edited.
 * - edit_published_posts - Controls whether published objects can be edited.
 *
 * These additional capabilities are only used in map_meta_cap(). Thus, they are
 * only assigned by default if the post type is registered with the \'map_meta_cap\'
 * argument set to true (default is false).
 *
 * @see map_meta_cap()
 * @since 3.0.0
 *
 * @param object $args Post type registration arguments
 * @return object object with all the capabilities as member variables
 */",
 "/**
 * Stores or returns a list of post type meta caps for map_meta_cap().
 *
 * @since 3.1.0
 * @access private
 */",
 "/**
 * Builds an object with all post type labels out of a post type object
 *
 * Accepted keys of the label array in the post type object:
 * - name - general name for the post type, usually plural. The same and overridden by $post_type_object->label. Default is Posts/Pages
 * - singular_name - name for one object of this post type. Default is Post/Page
 * - add_new - Default is Add New for both hierarchical and non-hierarchical types. When internationalizing this string, please use a {@link http://codex.wordpress.org/I18n_for_WordPress_Developers#Disambiguation_by_context gettext context} matching your post type. Example: <code>_x(\'Add New\', \'product\');</code>
 * - add_new_item - Default is Add New Post/Add New Page
 * - edit_item - Default is Edit Post/Edit Page
 * - new_item - Default is New Post/New Page
 * - view_item - Default is View Post/View Page
 * - search_items - Default is Search Posts/Search Pages
 * - not_found - Default is No posts found/No pages found
 * - not_found_in_trash - Default is No posts found in Trash/No pages found in Trash
 * - parent_item_colon - This string isn\'t used on non-hierarchical types. In hierarchical ones the default is Parent Page:
 * - all_items - String for the submenu. Default is All Posts/All Pages
 * - menu_name - Default is the same as <code>name</code>
 *
 * Above, the first default value is for non-hierarchical post types (like posts) and the second one is for hierarchical post types (like pages).
 *
 * @since 3.0.0
 * @param object $post_type_object
 * @return object object with all the labels as member variables
 */",
 "/**
 * Builds an object with custom-something object (post type, taxonomy) labels out of a custom-something object
 *
 * @access private
 * @since 3.0.0
 */",
 "/**
 * Adds submenus for post types.
 *
 * @access private
 * @since 3.1.0
 */",
 "/**
 * Register support of certain features for a post type.
 *
 * All features are directly associated with a functional area of the edit screen, such as the
 * editor or a meta box: \'title\', \'editor\', \'comments\', \'revisions\', \'trackbacks\', \'author\',
 * \'excerpt\', \'page-attributes\', \'thumbnail\', and \'custom-fields\'.
 *
 * Additionally, the \'revisions\' feature dictates whether the post type will store revisions,
 * and the \'comments\' feature dictates whether the comments count will show on the edit screen.
 *
 * @since 3.0.0
 * @param string $post_type The post type for which to add the feature
 * @param string|array $feature the feature being added, can be an array of feature strings or a single string
 */",
 "/**
 * Remove support for a feature from a post type.
 *
 * @since 3.0.0
 * @param string $post_type The post type for which to remove the feature
 * @param string $feature The feature being removed
 */",
 "/**
 * Get all the post type features
 *
 * @since 3.4.0
 * @param string $post_type The post type
 * @return array
 */",
 "/**
 * Checks a post type\'s support for a given feature
 *
 * @since 3.0.0
 * @param string $post_type The post type being checked
 * @param string $feature the feature being checked
 * @return boolean
 */",
 "/**
 * Updates the post type for the post ID.
 *
 * The page or post cache will be cleaned for the post ID.
 *
 * @since 2.5.0
 *
 * @uses $wpdb
 *
 * @param int $post_id Post ID to change post type. Not actually optional.
 * @param string $post_type Optional, default is post. Supported values are \'post\' or \'page\' to
 *  name a few.
 * @return int Amount of rows changed. Should be 1 for success and 0 for failure.
 */",
 "/**
 * Retrieve list of latest posts or posts matching criteria.
 *
 * The defaults are as follows:
 *     \'numberposts\' - Default is 5. Total number of posts to retrieve.
 *     \'offset\' - Default is 0. See {@link WP_Query::query()} for more.
 *     \'category\' - What category to pull the posts from.
 *     \'orderby\' - Default is \'post_date\'. How to order the posts.
 *     \'order\' - Default is \'DESC\'. The order to retrieve the posts.
 *     \'include\' - See {@link WP_Query::query()} for more.
 *     \'exclude\' - See {@link WP_Query::query()} for more.
 *     \'meta_key\' - See {@link WP_Query::query()} for more.
 *     \'meta_value\' - See {@link WP_Query::query()} for more.
 *     \'post_type\' - Default is \'post\'. Can be \'page\', or \'attachment\' to name a few.
 *     \'post_parent\' - The parent of the post or post type.
 *     \'post_status\' - Default is \'publish\'. Post status to retrieve.
 *
 * @since 1.2.0
 * @uses $wpdb
 * @uses WP_Query::query() See for more default arguments and information.
 * @link http://codex.wordpress.org/Template_Tags/get_posts
 *
 * @param array $args Optional. Overrides defaults.
 * @return array List of posts.
 */",
 "/**
 * Add meta data field to a post.
 *
 * Post meta data is called \"Custom Fields\" on the Administration Screen.
 *
 * @since 1.5.0
 * @uses $wpdb
 * @link http://codex.wordpress.org/Function_Reference/add_post_meta
 *
 * @param int $post_id Post ID.
 * @param string $meta_key Metadata name.
 * @param mixed $meta_value Metadata value.
 * @param bool $unique Optional, default is false. Whether the same key should not be added.
 * @return bool False for failure. True for success.
 */",
 "/**
 * Remove metadata matching criteria from a post.
 *
 * You can match based on the key, or key and value. Removing based on key and
 * value, will keep from removing duplicate metadata with the same key. It also
 * allows removing all metadata matching key, if needed.
 *
 * @since 1.5.0
 * @uses $wpdb
 * @link http://codex.wordpress.org/Function_Reference/delete_post_meta
 *
 * @param int $post_id post ID
 * @param string $meta_key Metadata name.
 * @param mixed $meta_value Optional. Metadata value.
 * @return bool False for failure. True for success.
 */",
 "/**
 * Retrieve post meta field for a post.
 *
 * @since 1.5.0
 * @uses $wpdb
 * @link http://codex.wordpress.org/Function_Reference/get_post_meta
 *
 * @param int $post_id Post ID.
 * @param string $key Optional. The meta key to retrieve. By default, returns data for all keys.
 * @param bool $single Whether to return a single value.
 * @return mixed Will be an array if $single is false. Will be value of meta data field if $single
 *  is true.
 */",
 "/**
 * Update post meta field based on post ID.
 *
 * Use the $prev_value parameter to differentiate between meta fields with the
 * same key and post ID.
 *
 * If the meta field for the post does not exist, it will be added.
 *
 * @since 1.5.0
 * @uses $wpdb
 * @link http://codex.wordpress.org/Function_Reference/update_post_meta
 *
 * @param int $post_id Post ID.
 * @param string $meta_key Metadata key.
 * @param mixed $meta_value Metadata value.
 * @param mixed $prev_value Optional. Previous value to check before removing.
 * @return bool False on failure, true if success.
 */",
 "/**
 * Delete everything from post meta matching meta key.
 *
 * @since 2.3.0
 * @uses $wpdb
 *
 * @param string $post_meta_key Key to search for when deleting.
 * @return bool Whether the post meta key was deleted from the database
 */",
 "/**
 * Retrieve post meta fields, based on post ID.
 *
 * The post meta fields are retrieved from the cache where possible,
 * so the function is optimized to be called more than once.
 *
 * @since 1.2.0
 * @link http://codex.wordpress.org/Function_Reference/get_post_custom
 *
 * @param int $post_id Post ID.
 * @return array
 */",
 "/**
 * Retrieve meta field names for a post.
 *
 * If there are no meta fields, then nothing (null) will be returned.
 *
 * @since 1.2.0
 * @link http://codex.wordpress.org/Function_Reference/get_post_custom_keys
 *
 * @param int $post_id post ID
 * @return array|null Either array of the keys, or null if keys could not be retrieved.
 */",
 "/**
 * Retrieve values for a custom post field.
 *
 * The parameters must not be considered optional. All of the post meta fields
 * will be retrieved and only the meta field key values returned.
 *
 * @since 1.2.0
 * @link http://codex.wordpress.org/Function_Reference/get_post_custom_values
 *
 * @param string $key Meta field key.
 * @param int $post_id Post ID
 * @return array Meta field values.
 */",
 "/**
 * Check if post is sticky.
 *
 * Sticky posts should remain at the top of The Loop. If the post ID is not
 * given, then The Loop ID for the current post will be used.
 *
 * @since 2.7.0
 *
 * @param int $post_id Optional. Post ID.
 * @return bool Whether post is sticky.
 */",
 "/**
 * Sanitize every post field.
 *
 * If the context is \'raw\', then the post object or array will get minimal santization of the int fields.
 *
 * @since 2.3.0
 * @uses sanitize_post_field() Used to sanitize the fields.
 *
 * @param object|array $post The Post Object or Array
 * @param string $context Optional, default is \'display\'. How to sanitize post fields.
 * @return object|array The now sanitized Post Object or Array (will be the same type as $post)
 */",
 "/**
 * Sanitize post field based on context.
 *
 * Possible context values are:  \'raw\', \'edit\', \'db\', \'display\', \'attribute\' and \'js\'. The
 * \'display\' context is used by default. \'attribute\' and \'js\' contexts are treated like \'display\'
 * when calling filters.
 *
 * @since 2.3.0
 * @uses apply_filters() Calls \'edit_$field\' and \'{$field_no_prefix}_edit_pre\' passing $value and
 *  $post_id if $context == \'edit\' and field name prefix == \'post_\'.
 *
 * @uses apply_filters() Calls \'edit_post_$field\' passing $value and $post_id if $context == \'db\'.
 * @uses apply_filters() Calls \'pre_$field\' passing $value if $context == \'db\' and field name prefix == \'post_\'.
 * @uses apply_filters() Calls \'{$field}_pre\' passing $value if $context == \'db\' and field name prefix != \'post_\'.
 *
 * @uses apply_filters() Calls \'$field\' passing $value, $post_id and $context if $context == anything
 *  other than \'raw\', \'edit\' and \'db\' and field name prefix == \'post_\'.
 * @uses apply_filters() Calls \'post_$field\' passing $value if $context == anything other than \'raw\',
 *  \'edit\' and \'db\' and field name prefix != \'post_\'.
 *
 * @param string $field The Post Object field name.
 * @param mixed $value The Post Object value.
 * @param int $post_id Post ID.
 * @param string $context How to sanitize post fields. Looks for \'raw\', \'edit\', \'db\', \'display\',
 *               \'attribute\' and \'js\'.
 * @return mixed Sanitized value.
 */",
 "/**
 * Make a post sticky.
 *
 * Sticky posts should be displayed at the top of the front page.
 *
 * @since 2.7.0
 *
 * @param int $post_id Post ID.
 */",
 "/**
 * Unstick a post.
 *
 * Sticky posts should be displayed at the top of the front page.
 *
 * @since 2.7.0
 *
 * @param int $post_id Post ID.
 */",
 "/**
 * Count number of posts of a post type and is user has permissions to view.
 *
 * This function provides an efficient method of finding the amount of post\'s
 * type a blog has. Another method is to count the amount of items in
 * get_posts(), but that method has a lot of overhead with doing so. Therefore,
 * when developing for 2.5+, use this function instead.
 *
 * The $perm parameter checks for \'readable\' value and if the user can read
 * private posts, it will display that for the user that is signed in.
 *
 * @since 2.5.0
 * @link http://codex.wordpress.org/Template_Tags/wp_count_posts
 *
 * @param string $type Optional. Post type to retrieve count
 * @param string $perm Optional. \'readable\' or empty.
 * @return object Number of posts for each status
 */",
 "/**
 * Count number of attachments for the mime type(s).
 *
 * If you set the optional mime_type parameter, then an array will still be
 * returned, but will only have the item you are looking for. It does not give
 * you the number of attachments that are children of a post. You can get that
 * by counting the number of children that post has.
 *
 * @since 2.5.0
 *
 * @param string|array $mime_type Optional. Array or comma-separated list of MIME patterns.
 * @return array Number of posts for each mime type.
 */",
 "/**
 * Check a MIME-Type against a list.
 *
 * If the wildcard_mime_types parameter is a string, it must be comma separated
 * list. If the real_mime_types is a string, it is also comma separated to
 * create the list.
 *
 * @since 2.5.0
 *
 * @param string|array $wildcard_mime_types e.g. audio/mpeg or image (same as image/*) or
 *  flash (same as *flash*).
 * @param string|array $real_mime_types post_mime_type values
 * @return array array(wildcard=>array(real types))
 */",
 "/**
 * Convert MIME types into SQL.
 *
 * @since 2.5.0
 *
 * @param string|array $post_mime_types List of mime types or comma separated string of mime types.
 * @param string $table_alias Optional. Specify a table alias, if needed.
 * @return string The SQL AND clause for mime searching.
 */",
 "/**
 * Trashes or deletes a post or page.
 *
 * When the post and page is permanently deleted, everything that is tied to it is deleted also.
 * This includes comments, post meta fields, and terms associated with the post.
 *
 * The post or page is moved to trash instead of permanently deleted unless trash is
 * disabled, item is already in the trash, or $force_delete is true.
 *
 * @since 1.0.0
 * @uses do_action() on \'delete_post\' before deletion unless post type is \'attachment\'.
 * @uses do_action() on \'deleted_post\' after deletion unless post type is \'attachment\'.
 * @uses wp_delete_attachment() if post type is \'attachment\'.
 * @uses wp_trash_post() if item should be trashed.
 *
 * @param int $postid Post ID.
 * @param bool $force_delete Whether to bypass trash and force deletion. Defaults to false.
 * @return mixed False on failure
 */",
 "/**
 * Moves a post or page to the Trash
 *
 * If trash is disabled, the post or page is permanently deleted.
 *
 * @since 2.9.0
 * @uses do_action() on \'trash_post\' before trashing
 * @uses do_action() on \'trashed_post\' after trashing
 * @uses wp_delete_post() if trash is disabled
 *
 * @param int $post_id Post ID.
 * @return mixed False on failure
 */",
 "/**
 * Restores a post or page from the Trash
 *
 * @since 2.9.0
 * @uses do_action() on \'untrash_post\' before undeletion
 * @uses do_action() on \'untrashed_post\' after undeletion
 *
 * @param int $post_id Post ID.
 * @return mixed False on failure
 */",
 "/**
 * Moves comments for a post to the trash
 *
 * @since 2.9.0
 * @uses do_action() on \'trash_post_comments\' before trashing
 * @uses do_action() on \'trashed_post_comments\' after trashing
 *
 * @param int $post Post ID or object.
 * @return mixed False on failure
 */",
 "/**
 * Restore comments for a post from the trash
 *
 * @since 2.9.0
 * @uses do_action() on \'untrash_post_comments\' before trashing
 * @uses do_action() on \'untrashed_post_comments\' after trashing
 *
 * @param int $post Post ID or object.
 * @return mixed False on failure
 */",
 "/**
 * Retrieve the list of categories for a post.
 *
 * Compatibility layer for themes and plugins. Also an easy layer of abstraction
 * away from the complexity of the taxonomy layer.
 *
 * @since 2.1.0
 *
 * @uses wp_get_object_terms() Retrieves the categories. Args details can be found here.
 *
 * @param int $post_id Optional. The Post ID.
 * @param array $args Optional. Overwrite the defaults.
 * @return array
 */",
 "/**
 * Retrieve the tags for a post.
 *
 * There is only one default for this function, called \'fields\' and by default
 * is set to \'all\'. There are other defaults that can be overridden in
 * {@link wp_get_object_terms()}.
 *
 * @package WordPress
 * @subpackage Post
 * @since 2.3.0
 *
 * @uses wp_get_object_terms() Gets the tags for returning. Args can be found here
 *
 * @param int $post_id Optional. The Post ID
 * @param array $args Optional. Overwrite the defaults
 * @return array List of post tags.
 */",
 "/**
 * Retrieve the terms for a post.
 *
 * There is only one default for this function, called \'fields\' and by default
 * is set to \'all\'. There are other defaults that can be overridden in
 * {@link wp_get_object_terms()}.
 *
 * @package WordPress
 * @subpackage Post
 * @since 2.8.0
 *
 * @uses wp_get_object_terms() Gets the tags for returning. Args can be found here
 *
 * @param int $post_id Optional. The Post ID
 * @param string $taxonomy The taxonomy for which to retrieve terms. Defaults to post_tag.
 * @param array $args Optional. Overwrite the defaults
 * @return array List of post tags.
 */",
 "/**
 * Retrieve number of recent posts.
 *
 * @since 1.0.0
 * @uses wp_parse_args()
 * @uses get_posts()
 *
 * @param string $deprecated Deprecated.
 * @param array $args Optional. Overrides defaults.
 * @param string $output Optional.
 * @return unknown.
 */",
 "/**
 * Retrieve a single post, based on post ID.
 *
 * Has categories in \'post_category\' property or key. Has tags in \'tags_input\'
 * property or key.
 *
 * @since 1.0.0
 *
 * @param int $postid Post ID.
 * @param string $mode How to return result, either OBJECT, ARRAY_N, or ARRAY_A.
 * @return object|array Post object or array holding post contents and information
 */",
 "/**
 * Insert a post.
 *
 * If the $postarr parameter has \'ID\' set to a value, then post will be updated.
 *
 * You can set the post date manually, but setting the values for \'post_date\'
 * and \'post_date_gmt\' keys. You can close the comments or open the comments by
 * setting the value for \'comment_status\' key.
 *
 * The defaults for the parameter $postarr are:
 *     \'post_status\'   - Default is \'draft\'.
 *     \'post_type\'     - Default is \'post\'.
 *     \'post_author\'   - Default is current user ID ($user_ID). The ID of the user who added the post.
 *     \'ping_status\'   - Default is the value in \'default_ping_status\' option.
 *                       Whether the attachment can accept pings.
 *     \'post_parent\'   - Default is 0. Set this for the post it belongs to, if any.
 *     \'menu_order\'    - Default is 0. The order it is displayed.
 *     \'to_ping\'       - Whether to ping.
 *     \'pinged\'        - Default is empty string.
 *     \'post_password\' - Default is empty string. The password to access the attachment.
 *     \'guid\'          - Global Unique ID for referencing the attachment.
 *     \'post_content_filtered\' - Post content filtered.
 *     \'post_excerpt\'  - Post excerpt.
 *
 * @since 1.0.0
 * @uses $wpdb
 * @uses $user_ID
 * @uses do_action() Calls \'pre_post_update\' on post ID if this is an update.
 * @uses do_action() Calls \'edit_post\' action on post ID and post data if this is an update.
 * @uses do_action() Calls \'save_post\' and \'wp_insert_post\' on post id and post data just before returning.
 * @uses apply_filters() Calls \'wp_insert_post_data\' passing $data, $postarr prior to database update or insert.
 * @uses wp_transition_post_status()
 *
 * @param array $postarr Elements that make up post to insert.
 * @param bool $wp_error Optional. Allow return of WP_Error on failure.
 * @return int|WP_Error The value 0 or WP_Error on failure. The post ID on success.
 */",
 "/**
 * Update a post with new post data.
 *
 * The date does not have to be set for drafts. You can set the date and it will
 * not be overridden.
 *
 * @since 1.0.0
 *
 * @param array|object $postarr Post data. Arrays are expected to be escaped, objects are not.
 * @return int 0 on failure, Post ID on success.
 */",
 "/**
 * Publish a post by transitioning the post status.
 *
 * @since 2.1.0
 * @uses $wpdb
 * @uses do_action() Calls \'edit_post\', \'save_post\', and \'wp_insert_post\' on post_id and post data.
 *
 * @param int $post_id Post ID.
 * @return null
 */",
 "/**
 * Publish future post and make sure post ID has future post status.
 *
 * Invoked by cron \'publish_future_post\' event. This safeguard prevents cron
 * from publishing drafts, etc.
 *
 * @since 2.5.0
 *
 * @param int $post_id Post ID.
 * @return null Nothing is returned. Which can mean that no action is required or post was published.
 */",
 "/**
 * Computes a unique slug for the post, when given the desired slug and some post details.
 *
 * @since 2.8.0
 *
 * @global wpdb $wpdb
 * @global WP_Rewrite $wp_rewrite
 * @param string $slug the desired slug (post_name)
 * @param integer $post_ID
 * @param string $post_status no uniqueness checks are made if the post is still draft or pending
 * @param string $post_type
 * @param integer $post_parent
 * @return string unique slug for the post, based on $post_name (with a -1, -2, etc. suffix)
 */",
 "/**
 * Adds tags to a post.
 *
 * @uses wp_set_post_tags() Same first two parameters, but the last parameter is always set to true.
 *
 * @package WordPress
 * @subpackage Post
 * @since 2.3.0
 *
 * @param int $post_id Post ID
 * @param string $tags The tags to set for the post, separated by commas.
 * @return bool|null Will return false if $post_id is not an integer or is 0. Will return null otherwise
 */",
 "/**
 * Set the tags for a post.
 *
 * @since 2.3.0
 * @uses wp_set_object_terms() Sets the tags for the post.
 *
 * @param int $post_id Post ID.
 * @param string $tags The tags to set for the post, separated by commas.
 * @param bool $append If true, don\'t delete existing tags, just add on. If false, replace the tags with the new tags.
 * @return mixed Array of affected term IDs. WP_Error or false on failure.
 */",
 "/**
 * Set the terms for a post.
 *
 * @since 2.8.0
 * @uses wp_set_object_terms() Sets the tags for the post.
 *
 * @param int $post_id Post ID.
 * @param string $tags The tags to set for the post, separated by commas.
 * @param string $taxonomy Taxonomy name. Defaults to \'post_tag\'.
 * @param bool $append If true, don\'t delete existing tags, just add on. If false, replace the tags with the new tags.
 * @return mixed Array of affected term IDs. WP_Error or false on failure.
 */",
 "/**
 * Set categories for a post.
 *
 * If the post categories parameter is not set, then the default category is
 * going used.
 *
 * @since 2.1.0
 *
 * @param int $post_ID Post ID.
 * @param array $post_categories Optional. List of categories.
 * @return bool|mixed
 */",
 "/**
 * Transition the post status of a post.
 *
 * Calls hooks to transition post status.
 *
 * The first is \'transition_post_status\' with new status, old status, and post data.
 *
 * The next action called is \'OLDSTATUS_to_NEWSTATUS\' the \'NEWSTATUS\' is the
 * $new_status parameter and the \'OLDSTATUS\' is $old_status parameter; it has the
 * post data.
 *
 * The final action is named \'NEWSTATUS_POSTTYPE\', \'NEWSTATUS\' is from the $new_status
 * parameter and POSTTYPE is post_type post data.
 *
 * @since 2.3.0
 * @link http://codex.wordpress.org/Post_Status_Transitions
 *
 * @uses do_action() Calls \'transition_post_status\' on $new_status, $old_status and
 *  $post if there is a status change.
 * @uses do_action() Calls \'{$old_status}_to_{$new_status}\' on $post if there is a status change.
 * @uses do_action() Calls \'{$new_status}_{$post->post_type}\' on post ID and $post.
 *
 * @param string $new_status Transition to this post status.
 * @param string $old_status Previous post status.
 * @param object $post Post data.
 */",
 "/**
 * Add a URL to those already pung.
 *
 * @since 1.5.0
 * @uses $wpdb
 *
 * @param int $post_id Post ID.
 * @param string $uri Ping URI.
 * @return int How many rows were updated.
 */",
 "/**
 * Retrieve enclosures already enclosed for a post.
 *
 * @since 1.5.0
 * @uses $wpdb
 *
 * @param int $post_id Post ID.
 * @return array List of enclosures
 */",
 "/**
 * Retrieve URLs already pinged for a post.
 *
 * @since 1.5.0
 * @uses $wpdb
 *
 * @param int $post_id Post ID.
 * @return array
 */",
 "/**
 * Retrieve URLs that need to be pinged.
 *
 * @since 1.5.0
 * @uses $wpdb
 *
 * @param int $post_id Post ID
 * @return array
 */",
 "/**
 * Do trackbacks for a list of URLs.
 *
 * @since 1.0.0
 *
 * @param string $tb_list Comma separated list of URLs
 * @param int $post_id Post ID
 */",
 "/**
 * Get a list of page IDs.
 *
 * @since 2.0.0
 * @uses $wpdb
 *
 * @return array List of page IDs.
 */",
 "/**
 * Retrieves page data given a page ID or page object.
 *
 * @since 1.5.1
 *
 * @param mixed $page Page object or page ID. Passed by reference.
 * @param string $output What to output. OBJECT, ARRAY_A, or ARRAY_N.
 * @param string $filter How the return value should be filtered.
 * @return mixed Page data.
 */",
 "/**
 * Retrieves a page given its path.
 *
 * @since 2.1.0
 * @uses $wpdb
 *
 * @param string $page_path Page path
 * @param string $output Optional. Output type. OBJECT, ARRAY_N, or ARRAY_A. Default OBJECT.
 * @param string $post_type Optional. Post type. Default page.
 * @return mixed Null when complete.
 */",
 "/**
 * Retrieve a page given its title.
 *
 * @since 2.1.0
 * @uses $wpdb
 *
 * @param string $page_title Page title
 * @param string $output Optional. Output type. OBJECT, ARRAY_N, or ARRAY_A. Default OBJECT.
 * @param string $post_type Optional. Post type. Default page.
 * @return mixed
 */",
 "/**
 * Retrieve child pages from list of pages matching page ID.
 *
 * Matches against the pages parameter against the page ID. Also matches all
 * children for the same to retrieve all children of a page. Does not make any
 * SQL queries to get the children.
 *
 * @since 1.5.1
 *
 * @param int $page_id Page ID.
 * @param array $pages List of pages\' objects.
 * @return array
 */",
 "/**
 * Order the pages with children under parents in a flat list.
 *
 * It uses auxiliary structure to hold parent-children relationships and
 * runs in O(N) complexity
 *
 * @since 2.0.0
 *
 * @param array $pages Posts array.
 * @param int $page_id Parent page ID.
 * @return array A list arranged by hierarchy. Children immediately follow their parents.
 */",
 "/**
 * function to traverse and return all the nested children post names of a root page.
 * $children contains parent-children relations
 *
 * @since 2.9.0
 */",
 "/**
 * Builds URI for a page.
 *
 * Sub pages will be in the \"directory\" under the parent page post name.
 *
 * @since 1.5.0
 *
 * @param mixed $page Page object or page ID.
 * @return string Page URI.
 */",
 "/**
 * Retrieve a list of pages.
 *
 * The defaults that can be overridden are the following: \'child_of\',
 * \'sort_order\', \'sort_column\', \'post_title\', \'hierarchical\', \'exclude\',
 * \'include\', \'meta_key\', \'meta_value\',\'authors\', \'number\', and \'offset\'.
 *
 * @since 1.5.0
 * @uses $wpdb
 *
 * @param mixed $args Optional. Array or string of options that overrides defaults.
 * @return array List of pages matching defaults or $args
 */",
 "/**
 * Check if the attachment URI is local one and is really an attachment.
 *
 * @since 2.0.0
 *
 * @param string $url URL to check
 * @return bool True on success, false on failure.
 */",
 "/**
 * Insert an attachment.
 *
 * If you set the \'ID\' in the $object parameter, it will mean that you are
 * updating and attempt to update the attachment. You can also set the
 * attachment name or title by setting the key \'post_name\' or \'post_title\'.
 *
 * You can set the dates for the attachment manually by setting the \'post_date\'
 * and \'post_date_gmt\' keys\' values.
 *
 * By default, the comments will use the default settings for whether the
 * comments are allowed. You can close them manually or keep them open by
 * setting the value for the \'comment_status\' key.
 *
 * The $object parameter can have the following:
 *     \'post_status\'   - Default is \'draft\'. Can not be overridden, set the same as parent post.
 *     \'post_type\'     - Default is \'post\', will be set to attachment. Can not override.
 *     \'post_author\'   - Default is current user ID. The ID of the user, who added the attachment.
 *     \'ping_status\'   - Default is the value in default ping status option. Whether the attachment
 *                       can accept pings.
 *     \'post_parent\'   - Default is 0. Can use $parent parameter or set this for the post it belongs
 *                       to, if any.
 *     \'menu_order\'    - Default is 0. The order it is displayed.
 *     \'to_ping\'       - Whether to ping.
 *     \'pinged\'        - Default is empty string.
 *     \'post_password\' - Default is empty string. The password to access the attachment.
 *     \'guid\'          - Global Unique ID for referencing the attachment.
 *     \'post_content_filtered\' - Attachment post content filtered.
 *     \'post_excerpt\'  - Attachment excerpt.
 *
 * @since 2.0.0
 * @uses $wpdb
 * @uses $user_ID
 * @uses do_action() Calls \'edit_attachment\' on $post_ID if this is an update.
 * @uses do_action() Calls \'add_attachment\' on $post_ID if this is not an update.
 *
 * @param string|array $object Arguments to override defaults.
 * @param string $file Optional filename.
 * @param int $parent Parent post ID.
 * @return int Attachment ID.
 */",
 "/**
 * Trashes or deletes an attachment.
 *
 * When an attachment is permanently deleted, the file will also be removed.
 * Deletion removes all post meta fields, taxonomy, comments, etc. associated
 * with the attachment (except the main post).
 *
 * The attachment is moved to the trash instead of permanently deleted unless trash
 * for media is disabled, item is already in the trash, or $force_delete is true.
 *
 * @since 2.0.0
 * @uses $wpdb
 * @uses do_action() Calls \'delete_attachment\' hook on Attachment ID.
 *
 * @param int $post_id Attachment ID.
 * @param bool $force_delete Whether to bypass trash and force deletion. Defaults to false.
 * @return mixed False on failure. Post data on success.
 */",
 "/**
 * Retrieve attachment meta field for attachment ID.
 *
 * @since 2.1.0
 *
 * @param int $post_id Attachment ID
 * @param bool $unfiltered Optional, default is false. If true, filters are not run.
 * @return string|bool Attachment meta field. False on failure.
 */",
 "/**
 * Update metadata for an attachment.
 *
 * @since 2.1.0
 *
 * @param int $post_id Attachment ID.
 * @param array $data Attachment data.
 * @return int
 */",
 "/**
 * Retrieve the URL for an attachment.
 *
 * @since 2.1.0
 *
 * @param int $post_id Attachment ID.
 * @return string
 */",
 "/**
 * Retrieve thumbnail for an attachment.
 *
 * @since 2.1.0
 *
 * @param int $post_id Attachment ID.
 * @return mixed False on failure. Thumbnail file path on success.
 */",
 "/**
 * Retrieve URL for an attachment thumbnail.
 *
 * @since 2.1.0
 *
 * @param int $post_id Attachment ID
 * @return string|bool False on failure. Thumbnail URL on success.
 */",
 "/**
 * Check if the attachment is an image.
 *
 * @since 2.1.0
 *
 * @param int $post_id Attachment ID
 * @return bool
 */",
 "/**
 * Retrieve the icon for a MIME type.
 *
 * @since 2.1.0
 *
 * @param string|int $mime MIME type or attachment ID.
 * @return string|bool
 */",
 "/**
 * Checked for changed slugs for published post objects and save the old slug.
 *
 * The function is used when a post object of any type is updated,
 * by comparing the current and previous post objects.
 *
 * If the slug was changed and not already part of the old slugs then it will be
 * added to the post meta field (\'_wp_old_slug\') for storing old slugs for that
 * post.
 *
 * The most logically usage of this function is redirecting changed post objects, so
 * that those that linked to an changed post will be redirected to the new post.
 *
 * @since 2.1.0
 *
 * @param int $post_id Post ID.
 * @param object $post The Post Object
 * @param object $post_before The Previous Post Object
 * @return int Same as $post_id
 */",
 "/**
 * Retrieve the private post SQL based on capability.
 *
 * This function provides a standardized way to appropriately select on the
 * post_status of a post type. The function will return a piece of SQL code
 * that can be added to a WHERE clause; this SQL is constructed to allow all
 * published posts, and all private posts to which the user has access.
 *
 * @since 2.2.0
 *
 * @uses $user_ID
 *
 * @param string $post_type currently only supports \'post\' or \'page\'.
 * @return string SQL code that can be added to a where clause.
 */",
 "/**
 * Retrieve the post SQL based on capability, author, and type.
 *
 * @see get_private_posts_cap_sql() for full description.
 *
 * @since 3.0.0
 * @param string $post_type Post type.
 * @param bool $full Optional. Returns a full WHERE statement instead of just an \'andalso\' term.
 * @param int $post_author Optional. Query posts having a single author ID.
 * @return string SQL WHERE code that can be added to a query.
 */",
 "/**
 * Retrieve the date that the last post was published.
 *
 * The server timezone is the default and is the difference between GMT and
 * server time. The \'blog\' value is the date when the last post was posted. The
 * \'gmt\' is when the last post was posted in GMT formatted date.
 *
 * @since 0.71
 *
 * @uses apply_filters() Calls \'get_lastpostdate\' filter
 *
 * @param string $timezone The location to get the time. Can be \'gmt\', \'blog\', or \'server\'.
 * @return string The date of the last post.
 */",
 "/**
 * Retrieve last post modified date depending on timezone.
 *
 * The server timezone is the default and is the difference between GMT and
 * server time. The \'blog\' value is just when the last post was modified. The
 * \'gmt\' is when the last post was modified in GMT time.
 *
 * @since 1.2.0
 * @uses apply_filters() Calls \'get_lastpostmodified\' filter
 *
 * @param string $timezone The location to get the time. Can be \'gmt\', \'blog\', or \'server\'.
 * @return string The date the post was last modified.
 */",
 "/**
 * Retrieve latest post date data based on timezone.
 *
 * @access private
 * @since 3.1.0
 *
 * @param string $timezone The location to get the time. Can be \'gmt\', \'blog\', or \'server\'.
 * @param string $field Field to check. Can be \'date\' or \'modified\'.
 * @return string The date.
 */",
 "/**
 * Updates posts in cache.
 *
 * @package WordPress
 * @subpackage Cache
 * @since 1.5.1
 *
 * @param array $posts Array of post objects
 */",
 "/**
 * Will clean the post in the cache.
 *
 * Cleaning means delete from the cache of the post. Will call to clean the term
 * object cache associated with the post ID.
 *
 * clean_post_cache() will call itself recursively for each child post.
 *
 * This function not run if $_wp_suspend_cache_invalidation is not empty. See
 * wp_suspend_cache_invalidation().
 *
 * @package WordPress
 * @subpackage Cache
 * @since 2.0.0
 *
 * @uses do_action() Calls \'clean_post_cache\' on $id before adding children (if any).
 *
 * @param object|int $post The post object or ID to remove from the cache
 */",
 "/**
 * Call major cache updating functions for list of Post objects.
 *
 * @package WordPress
 * @subpackage Cache
 * @since 1.5.0
 *
 * @uses $wpdb
 * @uses update_post_cache()
 * @uses update_object_term_cache()
 * @uses update_postmeta_cache()
 *
 * @param array $posts Array of Post objects
 * @param string $post_type The post type of the posts in $posts. Default is \'post\'.
 * @param bool $update_term_cache Whether to update the term cache. Default is true.
 * @param bool $update_meta_cache Whether to update the meta cache. Default is true.
 */",
 "/**
 * Updates metadata cache for list of post IDs.
 *
 * Performs SQL query to retrieve the metadata for the post IDs and updates the
 * metadata cache for the posts. Therefore, the functions, which call this
 * function, do not need to perform SQL queries on their own.
 *
 * @package WordPress
 * @subpackage Cache
 * @since 2.1.0
 *
 * @uses $wpdb
 *
 * @param array $post_ids List of post IDs.
 * @return bool|array Returns false if there is nothing to update or an array of metadata.
 */",
 "/**
 * Will clean the attachment in the cache.
 *
 * Cleaning means delete from the cache. Optionally will clean the term
 * object cache associated with the attachment ID.
 *
 * This function will not run if $_wp_suspend_cache_invalidation is not empty. See
 * wp_suspend_cache_invalidation().
 *
 * @package WordPress
 * @subpackage Cache
 * @since 3.0.0
 *
 * @uses do_action() Calls \'clean_attachment_cache\' on $id.
 *
 * @param int $id The attachment ID in the cache to clean
 * @param bool $clean_terms optional. Whether to clean terms cache
 */",
 "/**
 * Hook for managing future post transitions to published.
 *
 * @since 2.3.0
 * @access private
 * @uses $wpdb
 * @uses do_action() Calls \'private_to_published\' on post ID if this is a \'private_to_published\' call.
 * @uses wp_clear_scheduled_hook() with \'publish_future_post\' and post ID.
 *
 * @param string $new_status New post status
 * @param string $old_status Previous post status
 * @param object $post Object type containing the post information
 */",
 "/**
 * Hook used to schedule publication for a post marked for the future.
 *
 * The $post properties used and must exist are \'ID\' and \'post_date_gmt\'.
 *
 * @since 2.3.0
 * @access private
 *
 * @param int $deprecated Not used. Can be set to null. Never implemented.
 *   Not marked as deprecated with _deprecated_argument() as it conflicts with
 *   wp_transition_post_status() and the default filter for _future_post_hook().
 * @param object $post Object type containing the post information
 */",
 "/**
 * Hook to schedule pings and enclosures when a post is published.
 *
 * @since 2.3.0
 * @access private
 * @uses $wpdb
 * @uses XMLRPC_REQUEST and APP_REQUEST constants.
 * @uses do_action() Calls \'xmlprc_publish_post\' on post ID if XMLRPC_REQUEST is defined.
 * @uses do_action() Calls \'app_publish_post\' on post ID if APP_REQUEST is defined.
 *
 * @param int $post_id The ID in the database table of the post being published
 */",
 "/**
 * Hook used to prevent page/post cache from staying dirty when a post is saved.
 *
 * @since 2.3.0
 * @access private
 *
 * @param int $post_id The ID in the database table for the $post
 * @param object $post Object type containing the post information
 */",
 "/**
 * Retrieve post ancestors and append to post ancestors property.
 *
 * Will only retrieve ancestors once, if property is already set, then nothing
 * will be done. If there is not a parent post, or post ID and post parent ID
 * are the same then nothing will be done.
 *
 * The parameter is passed by reference, so nothing needs to be returned. The
 * property will be updated and can be referenced after the function is
 * complete. The post parent will be an ancestor and the parent of the post
 * parent will be an ancestor. There will only be two ancestors at the most.
 *
 * @since 2.5.0
 * @access private
 * @uses $wpdb
 *
 * @param object $_post Post data.
 * @return null When nothing needs to be done.
 */",
 "/**
 * Determines which fields of posts are to be saved in revisions.
 *
 * Does two things. If passed a post *array*, it will return a post array ready
 * to be inserted into the posts table as a post revision. Otherwise, returns
 * an array whose keys are the post fields to be saved for post revisions.
 *
 * @package WordPress
 * @subpackage Post_Revisions
 * @since 2.6.0
 * @access private
 * @uses apply_filters() Calls \'_wp_post_revision_fields\' on \'title\', \'content\' and \'excerpt\' fields.
 *
 * @param array $post Optional a post array to be processed for insertion as a post revision.
 * @param bool $autosave optional Is the revision an autosave?
 * @return array Post array ready to be inserted as a post revision or array of fields that can be versioned.
 */",
 "/**
 * Saves an already existing post as a post revision.
 *
 * Typically used immediately prior to post updates.
 *
 * @package WordPress
 * @subpackage Post_Revisions
 * @since 2.6.0
 *
 * @uses _wp_put_post_revision()
 *
 * @param int $post_id The ID of the post to save as a revision.
 * @return mixed Null or 0 if error, new revision ID, if success.
 */",
 "/**
 * Retrieve the autosaved data of the specified post.
 *
 * Returns a post object containing the information that was autosaved for the
 * specified post.
 *
 * @package WordPress
 * @subpackage Post_Revisions
 * @since 2.6.0
 *
 * @param int $post_id The post ID.
 * @return object|bool The autosaved data or false on failure or when no autosave exists.
 */",
 "/**
 * Internally used to hack WP_Query into submission.
 *
 * @package WordPress
 * @subpackage Post_Revisions
 * @since 2.6.0
 *
 * @param object $query WP_Query object
 */",
 "/**
 * Determines if the specified post is a revision.
 *
 * @package WordPress
 * @subpackage Post_Revisions
 * @since 2.6.0
 *
 * @param int|object $post Post ID or post object.
 * @return bool|int False if not a revision, ID of revision\'s parent otherwise.
 */",
 "/**
 * Determines if the specified post is an autosave.
 *
 * @package WordPress
 * @subpackage Post_Revisions
 * @since 2.6.0
 *
 * @param int|object $post Post ID or post object.
 * @return bool|int False if not a revision, ID of autosave\'s parent otherwise
 */",
 "/**
 * Inserts post data into the posts table as a post revision.
 *
 * @package WordPress
 * @subpackage Post_Revisions
 * @since 2.6.0
 *
 * @uses wp_insert_post()
 *
 * @param int|object|array $post Post ID, post object OR post array.
 * @param bool $autosave Optional. Is the revision an autosave?
 * @return mixed Null or 0 if error, new revision ID if success.
 */",
 "/**
 * Gets a post revision.
 *
 * @package WordPress
 * @subpackage Post_Revisions
 * @since 2.6.0
 *
 * @uses get_post()
 *
 * @param int|object $post Post ID or post object
 * @param string $output Optional. OBJECT, ARRAY_A, or ARRAY_N.
 * @param string $filter Optional sanitation filter. @see sanitize_post()
 * @return mixed Null if error or post object if success
 */",
 "/**
 * Restores a post to the specified revision.
 *
 * Can restore a past revision using all fields of the post revision, or only selected fields.
 *
 * @package WordPress
 * @subpackage Post_Revisions
 * @since 2.6.0
 *
 * @uses wp_get_post_revision()
 * @uses wp_update_post()
 * @uses do_action() Calls \'wp_restore_post_revision\' on post ID and revision ID if wp_update_post()
 *  is successful.
 *
 * @param int|object $revision_id Revision ID or revision object.
 * @param array $fields Optional. What fields to restore from. Defaults to all.
 * @return mixed Null if error, false if no fields to restore, (int) post ID if success.
 */",
 "/**
 * Deletes a revision.
 *
 * Deletes the row from the posts table corresponding to the specified revision.
 *
 * @package WordPress
 * @subpackage Post_Revisions
 * @since 2.6.0
 *
 * @uses wp_get_post_revision()
 * @uses wp_delete_post()
 *
 * @param int|object $revision_id Revision ID or revision object.
 * @return mixed Null or WP_Error if error, deleted post if success.
 */",
 "/**
 * Returns all revisions of specified post.
 *
 * @package WordPress
 * @subpackage Post_Revisions
 * @since 2.6.0
 *
 * @uses get_children()
 *
 * @param int|object $post_id Post ID or post object
 * @return array empty if no revisions
 */",
 "/**
 * Returns the post\'s parent\'s post_ID
 *
 * @since 3.1.0
 *
 * @param int $post_id
 *
 * @return int|bool false on error
 */",
 "/**
 * Checks the given subset of the post hierarchy for hierarchy loops.
 * Prevents loops from forming and breaks those that it finds.
 *
 * Attached to the wp_insert_post_parent filter.
 *
 * @since 3.1.0
 * @uses wp_find_hierarchy_loop()
 *
 * @param int $post_parent ID of the parent for the post we\'re checking.
 * @param int $post_ID ID of the post we\'re checking.
 *
 * @return int The new post_parent for the post.
 */",
 "/**
 * Returns an array of post format slugs to their translated and pretty display versions
 *
 * @since 3.1.0
 *
 * @return array The array of translations
 */",
 "/**
 * Retrieves an array of post format slugs.
 *
 * @since 3.1.0
 *
 * @return array The array of post format slugs.
 */",
 "/**
 * Returns a pretty, translated version of a post format slug
 *
 * @since 3.1.0
 *
 * @param string $slug A post format slug
 * @return string The translated post format name
 */",
 "/**
 * Sets a post thumbnail.
 *
 * @since 3.1.0
 *
 * @param int|object $post Post ID or object where thumbnail should be attached.
 * @param int $thumbnail_id Thumbnail to attach.
 * @return bool True on success, false on failure.
 */",
 "/**
 * Removes a post thumbnail.
 *
 * @since 3.3.0
 *
 * @param int|object $post Post ID or object where thumbnail should be removed from.
 * @return bool True on success, false on failure.
 */",
 "/**
 * Returns a link to a post format index.
 *
 * @since 3.1.0
 *
 * @param string $format Post format
 * @return string Link
 */",
 "/**
 * Deletes auto-drafts for new posts that are > 7 days old
 *
 * @since 3.4.0
 */",
 "/**
 * Filters the request to allow for the format prefix.
 *
 * @access private
 * @since 3.1.0
 */",
 "/**
 * Filters the post format term link to remove the format prefix.
 *
 * @access private
 * @since 3.1.0
 */",
 "/**
 * Remove the post format prefix from the name property of the term object created by get_term().
 *
 * @access private
 * @since 3.1.0
 */",
 "/**
 * Remove the post format prefix from the name property of the term objects created by get_terms().
 *
 * @access private
 * @since 3.1.0
 */",
 "/**
 * Remove the post format prefix from the name property of the term objects created by wp_get_object_terms().
 *
 * @access private
 * @since 3.1.0
 */",
 "/**
 * Update the custom taxonomies\' term counts when a post\'s status is changed. For example, default posts term counts (for custom taxonomies) don\'t include private / draft posts.
 *
 * @access private
 * @param string $new_status
 * @param string $old_status
 * @param object $post
 * @since 3.3.0
 */",
 "/**
 * Adds any posts from the given ids to the cache that do not already exist in cache
 *
 * @since 3.4.0
 *
 * @access private
 *
 * @param array $post_ids ID list
 * @param bool $update_term_cache Whether to update the term cache. Default is true.
 * @param bool $update_meta_cache Whether to update the meta cache. Default is true.
 */",
 "/**
 * Display upgrade WordPress for downloading latest or upgrading automatically form.
 *
 * @since 2.7
 *
 * @return null
 */",
 "/**
 * Upgrade WordPress core display.
 *
 * @since 2.7
 *
 * @return null
 */",
 "/**
 * Remove a theme
 *
 * @since 2.8.0
 *
 * @param string $stylesheet Stylesheet of the theme to delete
 * @param string $redirect Redirect to page when complete.
 * @return mixed
 */",
 "/**
 * Get the Page Templates available in this theme
 *
 * @since 1.5.0
 *
 * @return array Key is the template name, value is the filename of the template
 */",
 "/**
 * Tidies a filename for url display by the theme editor.
 *
 * @since 2.9.0
 * @access private
 *
 * @param string $fullpath Full path to the theme file
 * @param string $containingfolder Path of the theme parent folder
 * @return string
 */",
 "/**
 * Check if there is an update for a theme available.
 *
 * Will display link, if there is an update available.
 *
 * @since 2.7.0
 *
 * @param object $theme Theme data object.
 * @return bool False if no valid info was passed.
 */",
 "/**
 * Retrieve list of WordPress theme features (aka theme tags)
 *
 * @since 3.1.0
 *
 * @param bool $api Optional. Whether try to fetch tags from the WP.org API. Defaults to true.
 * @return array Array of features keyed by category with translations keyed by slug.
 */",
 "/**
 * Retrieve theme installer pages from WordPress Themes API.
 *
 * It is possible for a theme to override the Themes API result with three
 * filters. Assume this is for themes, which can extend on the Theme Info to
 * offer more choices. This is very powerful and must be used with care, when
 * overridding the filters.
 *
 * The first filter, \'themes_api_args\', is for the args and gives the action as
 * the second parameter. The hook for \'themes_api_args\' must ensure that an
 * object is returned.
 *
 * The second filter, \'themes_api\', is the result that would be returned.
 *
 * @since 2.8.0
 *
 * @param string $action
 * @param array|object $args Optional. Arguments to serialize for the Theme Info API.
 * @return mixed
 */",
 "/**
 * RSS container for the bloginfo function.
 *
 * You can retrieve anything that you can using the get_bloginfo() function.
 * Everything will be stripped of tags and characters converted, when the values
 * are retrieved for use in the feeds.
 *
 * @package WordPress
 * @subpackage Feed
 * @since 1.5.1
 * @uses apply_filters() Calls \'get_bloginfo_rss\' hook with two parameters.
 * @see get_bloginfo() For the list of possible values to display.
 *
 * @param string $show See get_bloginfo() for possible values.
 * @return string
 */",
 "/**
 * Display RSS container for the bloginfo function.
 *
 * You can retrieve anything that you can using the get_bloginfo() function.
 * Everything will be stripped of tags and characters converted, when the values
 * are retrieved for use in the feeds.
 *
 * @package WordPress
 * @subpackage Feed
 * @since 0.71
 * @uses apply_filters() Calls \'bloginfo_rss\' hook with two parameters.
 * @see get_bloginfo() For the list of possible values to display.
 *
 * @param string $show See get_bloginfo() for possible values.
 */",
 "/**
 * Retrieve the default feed.
 *
 * The default feed is \'rss2\', unless a plugin changes it through the
 * \'default_feed\' filter.
 *
 * @package WordPress
 * @subpackage Feed
 * @since 2.5
 * @uses apply_filters() Calls \'default_feed\' hook on the default feed string.
 *
 * @return string Default feed, or for example \'rss2\', \'atom\', etc.
 */",
 "/**
 * Retrieve the blog title for the feed title.
 *
 * @package WordPress
 * @subpackage Feed
 * @since 2.2.0
 * @uses apply_filters() Calls \'get_wp_title_rss\' hook on title.
 * @uses wp_title() See function for $sep parameter usage.
 *
 * @param string $sep Optional.How to separate the title. See wp_title() for more info.
 * @return string Error message on failure or blog title on success.
 */",
 "/**
 * Display the blog title for display of the feed title.
 *
 * @package WordPress
 * @subpackage Feed
 * @since 2.2.0
 * @uses apply_filters() Calls \'wp_title_rss\' on the blog title.
 * @see wp_title() $sep parameter usage.
 *
 * @param string $sep Optional.
 */",
 "/**
 * Retrieve the current post title for the feed.
 *
 * @package WordPress
 * @subpackage Feed
 * @since 2.0.0
 * @uses apply_filters() Calls \'the_title_rss\' on the post title.
 *
 * @return string Current post title.
 */",
 "/**
 * Display the post title in the feed.
 *
 * @package WordPress
 * @subpackage Feed
 * @since 0.71
 * @uses get_the_title_rss() Used to retrieve current post title.
 */",
 "/**
 * Retrieve the post content for feeds.
 *
 * @package WordPress
 * @subpackage Feed
 * @since 2.9.0
 * @uses apply_filters() Calls \'the_content_feed\' on the content before processing.
 * @see get_the_content()
 *
 * @param string $feed_type The type of feed. rss2 | atom | rss | rdf
 */",
 "/**
 * Display the post content for feeds.
 *
 * @package WordPress
 * @subpackage Feed
 * @since 2.9.0
 * @uses apply_filters() Calls \'the_content_feed\' on the content before processing.
 * @see get_the_content()
 *
 * @param string $feed_type The type of feed. rss2 | atom | rss | rdf
 */",
 "/**
 * Display the post excerpt for the feed.
 *
 * @package WordPress
 * @subpackage Feed
 * @since 0.71
 * @uses apply_filters() Calls \'the_excerpt_rss\' hook on the excerpt.
 */",
 "/**
 * Display the permalink to the post for use in feeds.
 *
 * @package WordPress
 * @subpackage Feed
 * @since 2.3.0
 * @uses apply_filters() Call \'the_permalink_rss\' on the post permalink
 */",
 "/**
 * Outputs the link to the comments for the current post in an xml safe way
 *
 * @since 3.0.0
 * @return none
 */",
 "/**
 * Display the feed GUID for the current comment.
 *
 * @package WordPress
 * @subpackage Feed
 * @since 2.5.0
 *
 * @param int|object $comment_id Optional comment object or id. Defaults to global comment object.
 */",
 "/**
 * Retrieve the feed GUID for the current comment.
 *
 * @package WordPress
 * @subpackage Feed
 * @since 2.5.0
 *
 * @param int|object $comment_id Optional comment object or id. Defaults to global comment object.
 * @return bool|string false on failure or guid for comment on success.
 */",
 "/**
 * Display the link to the comments.
 *
 * @since 1.5.0
 */",
 "/**
 * Retrieve the current comment author for use in the feeds.
 *
 * @package WordPress
 * @subpackage Feed
 * @since 2.0.0
 * @uses apply_filters() Calls \'comment_author_rss\' hook on comment author.
 * @uses get_comment_author()
 *
 * @return string Comment Author
 */",
 "/**
 * Display the current comment author in the feed.
 *
 * @package WordPress
 * @subpackage Feed
 * @since 1.0.0
 */",
 "/**
 * Display the current comment content for use in the feeds.
 *
 * @package WordPress
 * @subpackage Feed
 * @since 1.0.0
 * @uses apply_filters() Calls \'comment_text_rss\' filter on comment content.
 * @uses get_comment_text()
 */",
 "/**
 * Retrieve all of the post categories, formatted for use in feeds.
 *
 * All of the categories for the current post in the feed loop, will be
 * retrieved and have feed markup added, so that they can easily be added to the
 * RSS2, Atom, or RSS1 and RSS0.91 RDF feeds.
 *
 * @package WordPress
 * @subpackage Feed
 * @since 2.1.0
 * @uses apply_filters()
 *
 * @param string $type Optional, default is the type returned by get_default_feed().
 * @return string All of the post categories for displaying in the feed.
 */",
 "/**
 * Display the post categories in the feed.
 *
 * @package WordPress
 * @subpackage Feed
 * @since 0.71
 * @see get_the_category_rss() For better explanation.
 *
 * @param string $type Optional, default is the type returned by get_default_feed().
 */",
 "/**
 * Display the HTML type based on the blog setting.
 *
 * The two possible values are either \'xhtml\' or \'html\'.
 *
 * @package WordPress
 * @subpackage Feed
 * @since 2.2.0
 */",
 "/**
 * Display the rss enclosure for the current post.
 *
 * Uses the global $post to check whether the post requires a password and if
 * the user has the password for the post. If not then it will return before
 * displaying.
 *
 * Also uses the function get_post_custom() to get the post\'s \'enclosure\'
 * metadata field and parses the value to display the enclosure(s). The
 * enclosure(s) consist of enclosure HTML tag(s) with a URI and other
 * attributes.
 *
 * @package WordPress
 * @subpackage Template
 * @since 1.5.0
 * @uses apply_filters() Calls \'rss_enclosure\' hook on rss enclosure.
 * @uses get_post_custom() To get the current post enclosure metadata.
 */",
 "/**
 * Display the atom enclosure for the current post.
 *
 * Uses the global $post to check whether the post requires a password and if
 * the user has the password for the post. If not then it will return before
 * displaying.
 *
 * Also uses the function get_post_custom() to get the post\'s \'enclosure\'
 * metadata field and parses the value to display the enclosure(s). The
 * enclosure(s) consist of link HTML tag(s) with a URI and other attributes.
 *
 * @package WordPress
 * @subpackage Template
 * @since 2.2.0
 * @uses apply_filters() Calls \'atom_enclosure\' hook on atom enclosure.
 * @uses get_post_custom() To get the current post enclosure metadata.
 */",
 "/**
 * Determine the type of a string of data with the data formatted.
 *
 * Tell whether the type is text, html, or xhtml, per RFC 4287 section 3.1.
 *
 * In the case of WordPress, text is defined as containing no markup,
 * xhtml is defined as \"well formed\", and html as tag soup (i.e., the rest).
 *
 * Container div tags are added to xhtml values, per section 3.1.1.3.
 *
 * @link http://www.atomenabled.org/developers/syndication/atom-format-spec.php#rfc.section.3.1
 *
 * @package WordPress
 * @subpackage Feed
 * @since 2.5
 *
 * @param string $data Input string
 * @return array array(type, value)
 */",
 "/**
 * Display the link for the currently displayed feed in a XSS safe way.
 *
 * Generate a correct link for the atom:self element.
 *
 * @package WordPress
 * @subpackage Feed
 * @since 2.5
 */",
 "/**
 * Return the content type for specified feed type.
 *
 * @package WordPress
 * @subpackage Feed
 * @since 2.8.0
 */",
 "/**
 * Build SimplePie object based on RSS or Atom feed from URL.
 *
 * @since 2.8
 *
 * @param string $url URL to retrieve feed
 * @return WP_Error|SimplePie WP_Error object on failure or SimplePie object on success
 */",
 "/**
 * Retrieve variable in the WP_Query class.
 *
 * @see WP_Query::get()
 * @since 1.5.0
 * @uses $wp_query
 *
 * @param string $var The variable key to retrieve.
 * @return mixed
 */",
 "/**
 * Retrieve the currently-queried object. Wrapper for $wp_query->get_queried_object()
 *
 * @uses WP_Query::get_queried_object
 *
 * @since 3.1.0
 * @access public
 *
 * @return object
 */",
 "/**
 * Retrieve ID of the current queried object. Wrapper for $wp_query->get_queried_object_id()
 *
 * @uses WP_Query::get_queried_object_id()
 *
 * @since 3.1.0
 * @access public
 *
 * @return int
 */",
 "/**
 * Set query variable.
 *
 * @see WP_Query::set()
 * @since 2.2.0
 * @uses $wp_query
 *
 * @param string $var Query variable key.
 * @param mixed $value
 * @return null
 */",
 "/**
 * Set up The Loop with query parameters.
 *
 * This will override the current WordPress Loop and shouldn\'t be used more than
 * once. This must not be used within the WordPress Loop.
 *
 * @since 1.5.0
 * @uses $wp_query
 *
 * @param string $query
 * @return array List of posts
 */",
 "/**
 * Destroy the previous query and set up a new query.
 *
 * This should be used after {@link query_posts()} and before another {@link
 * query_posts()}. This will remove obscure bugs that occur when the previous
 * wp_query object is not destroyed properly before another is set up.
 *
 * @since 2.3.0
 * @uses $wp_query
 */",
 "/**
 * After looping through a separate query, this function restores
 * the $post global to the current post in the main query
 *
 * @since 3.0.0
 * @uses $wp_query
 */",
 "/**
 * Is the query for an archive page?
 *
 * Month, Year, Category, Author, Post Type archive...
 *
 * @see WP_Query::is_archive()
 * @since 1.5.0
 * @uses $wp_query
 *
 * @return bool
 */",
 "/**
 * Is the query for a post type archive page?
 *
 * @see WP_Query::is_post_type_archive()
 * @since 3.1.0
 * @uses $wp_query
 *
 * @param mixed $post_types Optional. Post type or array of posts types to check against.
 * @return bool
 */",
 "/**
 * Is the query for an attachment page?
 *
 * @see WP_Query::is_attachment()
 * @since 2.0.0
 * @uses $wp_query
 *
 * @return bool
 */",
 "/**
 * Is the query for an author archive page?
 *
 * If the $author parameter is specified, this function will additionally
 * check if the query is for one of the authors specified.
 *
 * @see WP_Query::is_author()
 * @since 1.5.0
 * @uses $wp_query
 *
 * @param mixed $author Optional. User ID, nickname, nicename, or array of User IDs, nicknames, and nicenames
 * @return bool
 */",
 "/**
 * Is the query for a category archive page?
 *
 * If the $category parameter is specified, this function will additionally
 * check if the query is for one of the categories specified.
 *
 * @see WP_Query::is_category()
 * @since 1.5.0
 * @uses $wp_query
 *
 * @param mixed $category Optional. Category ID, name, slug, or array of Category IDs, names, and slugs.
 * @return bool
 */",
 "/**
 * Is the query for a tag archive page?
 *
 * If the $tag parameter is specified, this function will additionally
 * check if the query is for one of the tags specified.
 *
 * @see WP_Query::is_tag()
 * @since 2.3.0
 * @uses $wp_query
 *
 * @param mixed $slug Optional. Tag slug or array of slugs.
 * @return bool
 */",
 "/**
 * Is the query for a taxonomy archive page?
 *
 * If the $taxonomy parameter is specified, this function will additionally
 * check if the query is for that specific $taxonomy.
 *
 * If the $term parameter is specified in addition to the $taxonomy parameter,
 * this function will additionally check if the query is for one of the terms
 * specified.
 *
 * @see WP_Query::is_tax()
 * @since 2.5.0
 * @uses $wp_query
 *
 * @param mixed $taxonomy Optional. Taxonomy slug or slugs.
 * @param mixed $term Optional. Term ID, name, slug or array of Term IDs, names, and slugs.
 * @return bool
 */",
 "/**
 * Whether the current URL is within the comments popup window.
 *
 * @see WP_Query::is_comments_popup()
 * @since 1.5.0
 * @uses $wp_query
 *
 * @return bool
 */",
 "/**
 * Is the query for a date archive?
 *
 * @see WP_Query::is_date()
 * @since 1.5.0
 * @uses $wp_query
 *
 * @return bool
 */",
 "/**
 * Is the query for a day archive?
 *
 * @see WP_Query::is_day()
 * @since 1.5.0
 * @uses $wp_query
 *
 * @return bool
 */",
 "/**
 * Is the query for a feed?
 *
 * @see WP_Query::is_feed()
 * @since 1.5.0
 * @uses $wp_query
 *
 * @param string|array $feeds Optional feed types to check.
 * @return bool
 */",
 "/**
 * Is the query for a comments feed?
 *
 * @see WP_Query::is_comments_feed()
 * @since 3.0.0
 * @uses $wp_query
 *
 * @return bool
 */",
 "/**
 * Is the query for the front page of the site?
 *
 * This is for what is displayed at your site\'s main URL.
 *
 * Depends on the site\'s \"Front page displays\" Reading Settings \'show_on_front\' and \'page_on_front\'.
 *
 * If you set a static page for the front page of your site, this function will return
 * true when viewing that page.
 *
 * Otherwise the same as @see is_home()
 *
 * @see WP_Query::is_front_page()
 * @since 2.5.0
 * @uses is_home()
 * @uses get_option()
 *
 * @return bool True, if front of site.
 */",
 "/**
 * Is the query for the blog homepage?
 *
 * This is the page which shows the time based blog content of your site.
 *
 * Depends on the site\'s \"Front page displays\" Reading Settings \'show_on_front\' and \'page_for_posts\'.
 *
 * If you set a static page for the front page of your site, this function will return
 * true only on the page you set as the \"Posts page\".
 *
 * @see is_front_page()
 *
 * @see WP_Query::is_home()
 * @since 1.5.0
 * @uses $wp_query
 *
 * @return bool True if blog view homepage.
 */",
 "/**
 * Is the query for a month archive?
 *
 * @see WP_Query::is_month()
 * @since 1.5.0
 * @uses $wp_query
 *
 * @return bool
 */",
 "/**
 * Is the query for a single page?
 *
 * If the $page parameter is specified, this function will additionally
 * check if the query is for one of the pages specified.
 *
 * @see is_single()
 * @see is_singular()
 *
 * @see WP_Query::is_page()
 * @since 1.5.0
 * @uses $wp_query
 *
 * @param mixed $page Page ID, title, slug, or array of such.
 * @return bool
 */",
 "/**
 * Is the query for paged result and not for the first page?
 *
 * @see WP_Query::is_paged()
 * @since 1.5.0
 * @uses $wp_query
 *
 * @return bool
 */",
 "/**
 * Is the query for a post or page preview?
 *
 * @see WP_Query::is_preview()
 * @since 2.0.0
 * @uses $wp_query
 *
 * @return bool
 */",
 "/**
 * Is the query for the robots file?
 *
 * @see WP_Query::is_robots()
 * @since 2.1.0
 * @uses $wp_query
 *
 * @return bool
 */",
 "/**
 * Is the query for a search?
 *
 * @see WP_Query::is_search()
 * @since 1.5.0
 * @uses $wp_query
 *
 * @return bool
 */",
 "/**
 * Is the query for a single post?
 *
 * Works for any post type, except attachments and pages
 *
 * If the $post parameter is specified, this function will additionally
 * check if the query is for one of the Posts specified.
 *
 * @see is_page()
 * @see is_singular()
 *
 * @see WP_Query::is_single()
 * @since 1.5.0
 * @uses $wp_query
 *
 * @param mixed $post Post ID, title, slug, or array of such.
 * @return bool
 */",
 "/**
 * Is the query for a single post of any post type (post, attachment, page, ... )?
 *
 * If the $post_types parameter is specified, this function will additionally
 * check if the query is for one of the Posts Types specified.
 *
 * @see is_page()
 * @see is_single()
 *
 * @see WP_Query::is_singular()
 * @since 1.5.0
 * @uses $wp_query
 *
 * @param mixed $post_types Optional. Post Type or array of Post Types
 * @return bool
 */",
 "/**
 * Is the query for a specific time?
 *
 * @see WP_Query::is_time()
 * @since 1.5.0
 * @uses $wp_query
 *
 * @return bool
 */",
 "/**
 * Is the query for a trackback endpoint call?
 *
 * @see WP_Query::is_trackback()
 * @since 1.5.0
 * @uses $wp_query
 *
 * @return bool
 */",
 "/**
 * Is the query for a specific year?
 *
 * @see WP_Query::is_year()
 * @since 1.5.0
 * @uses $wp_query
 *
 * @return bool
 */",
 "/**
 * Is the query a 404 (returns no results)?
 *
 * @see WP_Query::is_404()
 * @since 1.5.0
 * @uses $wp_query
 *
 * @return bool
 */",
 "/**
 * Is the query the main query?
 *
 * @since 3.3.0
 *
 * @return bool
 */",
 "/**
 * Whether current WordPress query has results to loop over.
 *
 * @see WP_Query::have_posts()
 * @since 1.5.0
 * @uses $wp_query
 *
 * @return bool
 */",
 "/**
 * Whether the caller is in the Loop.
 *
 * @since 2.0.0
 * @uses $wp_query
 *
 * @return bool True if caller is within loop, false if loop hasn\'t started or ended.
 */",
 "/**
 * Rewind the loop posts.
 *
 * @see WP_Query::rewind_posts()
 * @since 1.5.0
 * @uses $wp_query
 *
 * @return null
 */",
 "/**
 * Iterate the post index in the loop.
 *
 * @see WP_Query::the_post()
 * @since 1.5.0
 * @uses $wp_query
 */",
 "/**
 * Whether there are comments to loop over.
 *
 * @see WP_Query::have_comments()
 * @since 2.2.0
 * @uses $wp_query
 *
 * @return bool
 */",
 "/**
 * Iterate comment index in the comment loop.
 *
 * @see WP_Query::the_comment()
 * @since 2.2.0
 * @uses $wp_query
 *
 * @return object
 */",
 "/**
	 * Resets query flags to false.
	 *
	 * The query flags are what page info WordPress was able to figure out.
	 *
	 * @since 2.0.0
	 * @access private
	 */",
 "/**
	 * Initiates object properties and sets default values.
	 *
	 * @since 1.5.0
	 * @access public
	 */",
 "/**
	 * Reparse the query vars.
	 *
	 * @since 1.5.0
	 * @access public
	 */",
 "/**
	 * Fills in the query variables, which do not exist within the parameter.
	 *
	 * @since 2.1.0
	 * @access public
	 *
	 * @param array $array Defined query variables.
	 * @return array Complete query variables with undefined ones filled in empty.
	 */",
 "/**
	 * Parse a query string and set query type booleans.
	 *
	 * @since 1.5.0
	 * @access public
	 *
	 * @param string|array $query Optional query.
	 */",
 "/**
	 * Sets the 404 property and saves whether query is feed.
	 *
	 * @since 2.0.0
	 * @access public
	 */",
 "/**
	 * Retrieve query variable.
	 *
	 * @since 1.5.0
	 * @access public
	 *
	 * @param string $query_var Query variable key.
	 * @return mixed
	 */",
 "/**
	 * Set query variable.
	 *
	 * @since 1.5.0
	 * @access public
	 *
	 * @param string $query_var Query variable key.
	 * @param mixed $value Query variable value.
	 */",
 "/**
	 * Retrieve the posts based on query variables.
	 *
	 * There are a few filters and actions that can be used to modify the post
	 * database query.
	 *
	 * @since 1.5.0
	 * @access public
	 * @uses do_action_ref_array() Calls \'pre_get_posts\' hook before retrieving posts.
	 *
	 * @return array List of posts.
	 */",
 "/**
	 * Set up the next post and iterate current post index.
	 *
	 * @since 1.5.0
	 * @access public
	 *
	 * @return object Next post.
	 */",
 "/**
	 * Sets up the current post.
	 *
	 * Retrieves the next post, sets up the post, sets the \'in the loop\'
	 * property to true.
	 *
	 * @since 1.5.0
	 * @access public
	 * @uses $post
	 * @uses do_action_ref_array() Calls \'loop_start\' if loop has just started
	 */",
 "/**
	 * Whether there are more posts available in the loop.
	 *
	 * Calls action \'loop_end\', when the loop is complete.
	 *
	 * @since 1.5.0
	 * @access public
	 * @uses do_action_ref_array() Calls \'loop_end\' if loop is ended
	 *
	 * @return bool True if posts are available, false if end of loop.
	 */",
 "/**
	 * Rewind the posts and reset post index.
	 *
	 * @since 1.5.0
	 * @access public
	 */",
 "/**
	 * Iterate current comment index and return comment object.
	 *
	 * @since 2.2.0
	 * @access public
	 *
	 * @return object Comment object.
	 */",
 "/**
	 * Sets up the current comment.
	 *
	 * @since 2.2.0
	 * @access public
	 * @global object $comment Current comment.
	 * @uses do_action() Calls \'comment_loop_start\' hook when first comment is processed.
	 */",
 "/**
	 * Whether there are more comments available.
	 *
	 * Automatically rewinds comments when finished.
	 *
	 * @since 2.2.0
	 * @access public
	 *
	 * @return bool True, if more comments. False, if no more posts.
	 */",
 "/**
	 * Rewind the comments, resets the comment index and comment to first.
	 *
	 * @since 2.2.0
	 * @access public
	 */",
 "/**
	 * Sets up the WordPress query by parsing query string.
	 *
	 * @since 1.5.0
	 * @access public
	 *
	 * @param string $query URL query string.
	 * @return array List of posts.
	 */",
 "/**
	 * Retrieve queried object.
	 *
	 * If queried object is not set, then the queried object will be set from
	 * the category, tag, taxonomy, posts page, single post, page, or author
	 * query variable. After it is set up, it will be returned.
	 *
	 * @since 1.5.0
	 * @access public
	 *
	 * @return object
	 */",
 "/**
	 * Retrieve ID of the current queried object.
	 *
	 * @since 1.5.0
	 * @access public
	 *
	 * @return int
	 */",
 "/**
	 * Constructor.
	 *
	 * Sets up the WordPress query, if parameter is not empty.
	 *
	 * @since 1.5.0
	 * @access public
	 *
	 * @param string $query URL query string.
	 * @return WP_Query
	 */",
 "/**
 	 * Is the query for an archive page?
 	 *
 	 * Month, Year, Category, Author, Post Type archive...
	 *
 	 * @since 3.1.0
 	 *
 	 * @return bool
 	 */",
 "/**
	 * Is the query for a post type archive page?
	 *
	 * @since 3.1.0
	 *
	 * @param mixed $post_types Optional. Post type or array of posts types to check against.
	 * @return bool
	 */",
 "/**
	 * Is the query for an attachment page?
	 *
	 * @since 3.1.0
	 *
	 * @return bool
	 */",
 "/**
	 * Is the query for an author archive page?
	 *
	 * If the $author parameter is specified, this function will additionally
	 * check if the query is for one of the authors specified.
	 *
	 * @since 3.1.0
	 *
	 * @param mixed $author Optional. User ID, nickname, nicename, or array of User IDs, nicknames, and nicenames
	 * @return bool
	 */",
 "/**
	 * Is the query for a category archive page?
	 *
	 * If the $category parameter is specified, this function will additionally
	 * check if the query is for one of the categories specified.
	 *
	 * @since 3.1.0
	 *
	 * @param mixed $category Optional. Category ID, name, slug, or array of Category IDs, names, and slugs.
	 * @return bool
	 */",
 "/**
	 * Is the query for a tag archive page?
	 *
	 * If the $tag parameter is specified, this function will additionally
	 * check if the query is for one of the tags specified.
	 *
	 * @since 3.1.0
	 *
	 * @param mixed $slug Optional. Tag slug or array of slugs.
	 * @return bool
	 */",
 "/**
	 * Is the query for a taxonomy archive page?
	 *
	 * If the $taxonomy parameter is specified, this function will additionally
	 * check if the query is for that specific $taxonomy.
	 *
	 * If the $term parameter is specified in addition to the $taxonomy parameter,
	 * this function will additionally check if the query is for one of the terms
	 * specified.
	 *
	 * @since 3.1.0
	 *
	 * @param mixed $taxonomy Optional. Taxonomy slug or slugs.
	 * @param mixed $term. Optional. Term ID, name, slug or array of Term IDs, names, and slugs.
	 * @return bool
	 */",
 "/**
	 * Whether the current URL is within the comments popup window.
	 *
	 * @since 3.1.0
	 *
	 * @return bool
	 */",
 "/**
	 * Is the query for a date archive?
	 *
	 * @since 3.1.0
	 *
	 * @return bool
	 */",
 "/**
	 * Is the query for a day archive?
	 *
	 * @since 3.1.0
	 *
	 * @return bool
	 */",
 "/**
	 * Is the query for a feed?
	 *
	 * @since 3.1.0
	 *
	 * @param string|array $feeds Optional feed types to check.
	 * @return bool
	 */",
 "/**
	 * Is the query for a comments feed?
	 *
	 * @since 3.1.0
	 *
	 * @return bool
	 */",
 "/**
	 * Is the query for the front page of the site?
	 *
	 * This is for what is displayed at your site\'s main URL.
	 *
	 * Depends on the site\'s \"Front page displays\" Reading Settings \'show_on_front\' and \'page_on_front\'.
	 *
	 * If you set a static page for the front page of your site, this function will return
	 * true when viewing that page.
	 *
	 * Otherwise the same as @see WP_Query::is_home()
	 *
	 * @since 3.1.0
	 * @uses is_home()
	 * @uses get_option()
	 *
	 * @return bool True, if front of site.
	 */",
 "/**
	 * Is the query for the blog homepage?
	 *
	 * This is the page which shows the time based blog content of your site.
	 *
	 * Depends on the site\'s \"Front page displays\" Reading Settings \'show_on_front\' and \'page_for_posts\'.
	 *
	 * If you set a static page for the front page of your site, this function will return
	 * true only on the page you set as the \"Posts page\".
	 *
	 * @see WP_Query::is_front_page()
	 *
	 * @since 3.1.0
	 *
	 * @return bool True if blog view homepage.
	 */",
 "/**
	 * Is the query for a month archive?
	 *
	 * @since 3.1.0
	 *
	 * @return bool
	 */",
 "/**
	 * Is the query for a single page?
	 *
	 * If the $page parameter is specified, this function will additionally
	 * check if the query is for one of the pages specified.
	 *
	 * @see WP_Query::is_single()
	 * @see WP_Query::is_singular()
	 *
	 * @since 3.1.0
	 *
	 * @param mixed $page Page ID, title, slug, or array of such.
	 * @return bool
	 */",
 "/**
	 * Is the query for paged result and not for the first page?
	 *
	 * @since 3.1.0
	 *
	 * @return bool
	 */",
 "/**
	 * Is the query for a post or page preview?
	 *
	 * @since 3.1.0
	 *
	 * @return bool
	 */",
 "/**
	 * Is the query for the robots file?
	 *
	 * @since 3.1.0
	 *
	 * @return bool
	 */",
 "/**
	 * Is the query for a search?
	 *
	 * @since 3.1.0
	 *
	 * @return bool
	 */",
 "/**
	 * Is the query for a single post?
	 *
	 * Works for any post type, except attachments and pages
	 *
	 * If the $post parameter is specified, this function will additionally
	 * check if the query is for one of the Posts specified.
	 *
	 * @see WP_Query::is_page()
	 * @see WP_Query::is_singular()
	 *
	 * @since 3.1.0
	 *
	 * @param mixed $post Post ID, title, slug, or array of such.
	 * @return bool
	 */",
 "/**
	 * Is the query for a single post of any post type (post, attachment, page, ... )?
	 *
	 * If the $post_types parameter is specified, this function will additionally
	 * check if the query is for one of the Posts Types specified.
	 *
	 * @see WP_Query::is_page()
	 * @see WP_Query::is_single()
	 *
	 * @since 3.1.0
	 *
	 * @param mixed $post_types Optional. Post Type or array of Post Types
	 * @return bool
	 */",
 "/**
	 * Is the query for a specific time?
	 *
	 * @since 3.1.0
	 *
	 * @return bool
	 */",
 "/**
	 * Is the query for a trackback endpoint call?
	 *
	 * @since 3.1.0
	 *
	 * @return bool
	 */",
 "/**
	 * Is the query for a specific year?
	 *
	 * @since 3.1.0
	 *
	 * @return bool
	 */",
 "/**
	 * Is the query a 404 (returns no results)?
	 *
	 * @since 3.1.0
	 *
	 * @return bool
	 */",
 "/**
	 * Is the query the main query?
	 *
	 * @since 3.3.0
	 *
	 * @return bool
	 */",
 "/**
 * The WordPress Query class.
 *
 * @link http://codex.wordpress.org/Function_Reference/WP_Query Codex page.
 *
 * @since 1.5.0
 */",
 "/**
 * Redirect old slugs to the correct permalink.
 *
 * Attempts to find the current slug from the past slugs.
 *
 * @since 2.1.0
 * @uses $wp_query
 * @uses $wpdb
 *
 * @return null If no link is found, null is returned.
 */",
 "/**
 * Set up global post data.
 *
 * @since 1.5.0
 *
 * @param object $post Post data.
 * @uses do_action_ref_array() Calls \'the_post\'
 * @return bool True when finished.
 */",
 "/**
   * Constructor
   * @param boolean $exceptions Should we throw external exceptions?
   */",
 "/**
   * Sets message type to HTML.
   * @param bool $ishtml
   * @return void
   */",
 "/**
   * Sets Mailer to send message using SMTP.
   * @return void
   */",
 "/**
   * Sets Mailer to send message using PHP mail() function.
   * @return void
   */",
 "/**
   * Sets Mailer to send message using the $Sendmail program.
   * @return void
   */",
 "/**
   * Sets Mailer to send message using the qmail MTA.
   * @return void
   */",
 "/**
   * Adds a \"To\" address.
   * @param string $address
   * @param string $name
   * @return boolean true on success, false if address already used
   */",
 "/**
   * Adds a \"Cc\" address.
   * Note: this function works with the SMTP mailer on win32, not with the \"mail\" mailer.
   * @param string $address
   * @param string $name
   * @return boolean true on success, false if address already used
   */",
 "/**
   * Adds a \"Bcc\" address.
   * Note: this function works with the SMTP mailer on win32, not with the \"mail\" mailer.
   * @param string $address
   * @param string $name
   * @return boolean true on success, false if address already used
   */",
 "/**
   * Adds a \"Reply-to\" address.
   * @param string $address
   * @param string $name
   * @return boolean
   */",
 "/**
   * Adds an address to one of the recipient arrays
   * Addresses that have been added already return false, but do not throw exceptions
   * @param string $kind One of \'to\', \'cc\', \'bcc\', \'ReplyTo\'
   * @param string $address The email address to send to
   * @param string $name
   * @return boolean true on success, false if address already used or invalid in some way
   * @access protected
   */",
 "/**
 * Set the From and FromName properties
 * @param string $address
 * @param string $name
 * @return boolean
 */",
 "/**
   * Check that a string looks roughly like an email address should
   * Static so it can be used without instantiation
   * Tries to use PHP built-in validator in the filter extension (from PHP 5.2), falls back to a reasonably competent regex validator
   * Conforms approximately to RFC2822
   * @link http://www.hexillion.com/samples/#Regex Original pattern found here
   * @param string $address The email address to check
   * @return boolean
   * @static
   * @access public
   */",
 "/**
   * Creates message and assigns Mailer. If the message is
   * not sent successfully then it returns false.  Use the ErrorInfo
   * variable to view description of the error.
   * @return bool
   */",
 "/**
   * Sends mail using the $Sendmail program.
   * @param string $header The message headers
   * @param string $body The message body
   * @access protected
   * @return bool
   */",
 "/**
   * Sends mail using the PHP mail() function.
   * @param string $header The message headers
   * @param string $body The message body
   * @access protected
   * @return bool
   */",
 "/**
   * Sends mail via SMTP using PhpSMTP
   * Returns false if there is a bad MAIL FROM, RCPT, or DATA input.
   * @param string $header The message headers
   * @param string $body The message body
   * @uses SMTP
   * @access protected
   * @return bool
   */",
 "/**
   * Initiates a connection to an SMTP server.
   * Returns false if the operation failed.
   * @uses SMTP
   * @access public
   * @return bool
   */",
 "/**
   * Closes the active SMTP session if one exists.
   * @return void
   */",
 "/**
  * Sets the language for all class error messages.
  * Returns false if it cannot load the language file.  The default language is English.
  * @param string $langcode ISO 639-1 2-character language code (e.g. Portuguese: \"br\")
  * @param string $lang_path Path to the language file directory
  * @access public
  */",
 "/**
  * Return the current array of language strings
  * @return array
  */",
 "/**
   * Creates recipient headers.
   * @access public
   * @return string
   */",
 "/**
   * Formats an address correctly.
   * @access public
   * @return string
   */",
 "/**
   * Wraps message for use with mailers that do not
   * automatically perform wrapping and for quoted-printable.
   * Original written by philippe.
   * @param string $message The message to wrap
   * @param integer $length The line length to wrap to
   * @param boolean $qp_mode Whether to run in Quoted-Printable mode
   * @access public
   * @return string
   */",
 "/**
   * Finds last character boundary prior to maxLength in a utf-8
   * quoted (printable) encoded string.
   * Original written by Colin Brown.
   * @access public
   * @param string $encodedText utf-8 QP text
   * @param int    $maxLength   find last character boundary prior to this length
   * @return int
   */",
 "/**
   * Set the body wrapping.
   * @access public
   * @return void
   */",
 "/**
   * Assembles message header.
   * @access public
   * @return string The assembled header
   */",
 "/**
   * Returns the message MIME.
   * @access public
   * @return string
   */",
 "/**
   * Returns the MIME message (headers and body). Only really valid post PreSend().
   * @access public
   * @return string
   */",
 "/**
   * Assembles the message body.  Returns an empty string on failure.
   * @access public
   * @return string The assembled message body
   */",
 "/**
   * Returns the start of a message boundary.
   * @access protected
   * @return string
   */",
 "/**
   * Returns the end of a message boundary.
   * @access protected
   * @return string
   */",
 "/**
   * Sets the message type.
   * @access protected
   * @return void
   */",
 "/**
   *  Returns a formatted header line.
   * @access public
   * @return string
   */",
 "/**
   * Returns a formatted mail line.
   * @access public
   * @return string
   */",
 "/**
   * Adds an attachment from a path on the filesystem.
   * Returns false if the file could not be found
   * or accessed.
   * @param string $path Path to the attachment.
   * @param string $name Overrides the attachment name.
   * @param string $encoding File encoding (see $Encoding).
   * @param string $type File extension (MIME) type.
   * @return bool
   */",
 "/**
  * Return the current array of attachments
  * @return array
  */",
 "/**
   * Attaches all fs, string, and binary attachments to the message.
   * Returns an empty string on failure.
   * @access protected
   * @return string
   */",
 "/**
   * Encodes attachment in requested format.
   * Returns an empty string on failure.
   * @param string $path The full path to the file
   * @param string $encoding The encoding to use; one of \'base64\', \'7bit\', \'8bit\', \'binary\', \'quoted-printable\'
   * @see EncodeFile()
   * @access protected
   * @return string
   */",
 "/**
   * Encodes string to requested format.
   * Returns an empty string on failure.
   * @param string $str The text to encode
   * @param string $encoding The encoding to use; one of \'base64\', \'7bit\', \'8bit\', \'binary\', \'quoted-printable\'
   * @access public
   * @return string
   */",
 "/**
   * Encode a header string to best (shortest) of Q, B, quoted or none.
   * @access public
   * @return string
   */",
 "/**
   * Checks if a string contains multibyte characters.
   * @access public
   * @param string $str multi-byte text to wrap encode
   * @return bool
   */",
 "/**
   * Correctly encodes and wraps long multibyte strings for mail headers
   * without breaking lines within a character.
   * Adapted from a function by paravoid at http://uk.php.net/manual/en/function.mb-encode-mimeheader.php
   * @access public
   * @param string $str multi-byte text to wrap encode
   * @return string
   */",
 "/**
  * Encode string to quoted-printable.
  * Only uses standard PHP, slow, but will always work
  * @access public
  * @param string $string the text to encode
  * @param integer $line_max Number of chars allowed on a line before wrapping
  * @return string
  */",
 "/**
  * Encode string to RFC2045 (6.7) quoted-printable format
  * Uses a PHP5 stream filter to do the encoding about 64x faster than the old version
  * Also results in same content as you started with after decoding
  * @see EncodeQPphp()
  * @access public
  * @param string $string the text to encode
  * @param integer $line_max Number of chars allowed on a line before wrapping
  * @param boolean $space_conv Dummy param for compatibility with existing EncodeQP function
  * @return string
  * @author Marcus Bointon
  */",
 "/**
   * Encode string to q encoding.
   * @link http://tools.ietf.org/html/rfc2047
   * @param string $str the text to encode
   * @param string $position Where the text is going to be used, see the RFC for what that means
   * @access public
   * @return string
   */",
 "/**
   * Adds a string or binary attachment (non-filesystem) to the list.
   * This method can be used to attach ascii or binary data,
   * such as a BLOB record from a database.
   * @param string $string String attachment data.
   * @param string $filename Name of the attachment.
   * @param string $encoding File encoding (see $Encoding).
   * @param string $type File extension (MIME) type.
   * @return void
   */",
 "/**
   * Adds an embedded attachment.  This can include images, sounds, and
   * just about any other document.  Make sure to set the $type to an
   * image type.  For JPEG images use \"image/jpeg\" and for GIF images
   * use \"image/gif\".
   * @param string $path Path to the attachment.
   * @param string $cid Content ID of the attachment.  Use this to identify
   *        the Id for accessing the image in an HTML form.
   * @param string $name Overrides the attachment name.
   * @param string $encoding File encoding (see $Encoding).
   * @param string $type File extension (MIME) type.
   * @return bool
   */",
 "/**
   * Returns true if an inline attachment is present.
   * @access public
   * @return bool
   */",
 "/**
   * Clears all recipients assigned in the TO array.  Returns void.
   * @return void
   */",
 "/**
   * Clears all recipients assigned in the CC array.  Returns void.
   * @return void
   */",
 "/**
   * Clears all recipients assigned in the BCC array.  Returns void.
   * @return void
   */",
 "/**
   * Clears all recipients assigned in the ReplyTo array.  Returns void.
   * @return void
   */",
 "/**
   * Clears all recipients assigned in the TO, CC and BCC
   * array.  Returns void.
   * @return void
   */",
 "/**
   * Clears all previously set filesystem, string, and binary
   * attachments.  Returns void.
   * @return void
   */",
 "/**
   * Clears all custom headers.  Returns void.
   * @return void
   */",
 "/**
   * Adds the error message to the error container.
   * @access protected
   * @return void
   */",
 "/**
   * Returns the proper RFC 822 formatted date.
   * @access public
   * @return string
   * @static
   */",
 "/**
   * Returns the server hostname or \'localhost.localdomain\' if unknown.
   * @access protected
   * @return string
   */",
 "/**
   * Returns a message in the appropriate language.
   * @access protected
   * @return string
   */",
 "/**
   * Returns true if an error occurred.
   * @access public
   * @return bool
   */",
 "/**
   * Changes every end of line from CR or LF to CRLF.
   * @access public
   * @return string
   */",
 "/**
   * Adds a custom header.
   * @access public
   * @return void
   */",
 "/**
   * Evaluates the message and returns modifications for inline images and backgrounds
   * @access public
   * @return $message
   */",
 "/**
   * Gets the MIME type of the embedded or inline image
   * @param string File extension
   * @access public
   * @return string MIME type of ext
   * @static
   */",
 "/**
  * Set (or reset) Class Objects (variables)
  *
  * Usage Example:
  * $page->set(\'X-Priority\', \'3\');
  *
  * @access public
  * @param string $name Parameter Name
  * @param mixed $value Parameter Value
  * NOTE: will not work with arrays, there are no arrays to set/reset
  * @todo Should this not be using __set() magic function?
  */",
 "/**
   * Strips newlines to prevent header injection.
   * @access public
   * @param string $str String
   * @return string
   */",
 "/**
   * Set the private key file and password to sign the message.
   *
   * @access public
   * @param string $key_filename Parameter File Name
   * @param string $key_pass Password for private key
   */",
 "/**
   * Set the private key file and password to sign the message.
   *
   * @access public
   * @param string $key_filename Parameter File Name
   * @param string $key_pass Password for private key
   */",
 "/**
   * Generate DKIM signature
   *
   * @access public
   * @param string $s Header
   */",
 "/**
   * Generate DKIM Canonicalization Header
   *
   * @access public
   * @param string $s Header
   */",
 "/**
   * Generate DKIM Canonicalization Body
   *
   * @access public
   * @param string $body Message Body
   */",
 "/**
   * Create the DKIM header, body, as new header
   *
   * @access public
   * @param string $headers_line Header lines
   * @param string $subject Subject
   * @param string $body Body
   */",
 "/**
 * Defines initial WordPress constants
 *
 * @see wp_debug_mode()
 *
 * @since 3.0.0
 */",
 "/**
 * Defines plugin directory WordPress constants
 *
 * Defines must-use plugin directory constants, which may be overridden in the sunrise.php drop-in
 *
 * @since 3.0.0
 */",
 "/**
 * Defines cookie related WordPress constants
 *
 * Defines constants after multisite is loaded. Cookie-related constants may be overridden in ms_network_cookies().
 * @since 3.0.0
 */",
 "/**
 * Defines cookie related WordPress constants
 *
 * @since 3.0.0
 */",
 "/**
 * Defines functionality related WordPress constants
 *
 * @since 3.0.0
 */",
 "/**
 * Defines templating related WordPress constants
 *
 * @since 3.0.0
 */",
 "/**
 * Display install header.
 *
 * @since 2.5.0
 * @package WordPress
 * @subpackage Installer
 */",
 "/**
 * Display installer setup form.
 *
 * @since 2.8.0
 * @package WordPress
 * @subpackage Installer
 */"
]
